digraph subprocess {
label="subprocess"
63077 [label="N63077\n(rp:0, ep:0)\nexit", shape="doublecircle"]
63078 [label="N63078\n(rp:80, ep:80)\nentry", shape="doublecircle"]
63078 -> 63080 [label="%4 = alloca i32, align 4"]
63080 [label="N63080\n(rp:79, ep:79)", shape="circle"]
63080 -> 63081 [label="%5 = alloca i8**, align 8"]
63081 [label="N63081\n(rp:78, ep:78)", shape="circle"]
63081 -> 63082 [label="%6 = alloca i32 (i8*, i8*)*, align 8"]
63082 [label="N63082\n(rp:77, ep:77)", shape="circle"]
63082 -> 63083 [label="%7 = alloca i8*, align 8"]
63083 [label="N63083\n(rp:76, ep:76)", shape="circle"]
63083 -> 63084 [label="%8 = alloca i32, align 4"]
63084 [label="N63084\n(rp:75, ep:75)", shape="circle"]
63084 -> 63085 [label="%9 = alloca [2 x i32], align 4"]
63085 [label="N63085\n(rp:74, ep:74)", shape="circle"]
63085 -> 63086 [label="%10 = alloca i32, align 4"]
63086 [label="N63086\n(rp:73, ep:73)", shape="circle"]
63086 -> 63087 [label="%11 = alloca [256 x i8], align 16"]
63087 [label="N63087\n(rp:72, ep:72)", shape="circle"]
63087 -> 63088 [label="%12 = alloca i8*, align 8"]
63088 [label="N63088\n(rp:71, ep:71)", shape="circle"]
63088 -> 63090 [label="store i8** %0, i8*** %5, align 8"]
63090 [label="N63090\n(rp:70, ep:70)", shape="circle"]
63090 -> 63092 [label="store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %6, align 8"]
63092 [label="N63092\n(rp:69, ep:69)", shape="circle"]
63092 -> 63097 [label="store i8* %2, i8** %7, align 8"]
63097 [label="N63097\n(rp:68, ep:68)", shape="circle"]
63097 -> 63100 [label="store i32 1, i32* %10, align 4"]
63100 [label="N63100\n(rp:67, ep:67)", shape="circle"]
63100 -> 63101 [label="store i8* null, i8** %12, align 8"]
63101 [label="N63101\n(rp:66, ep:66)", shape="circle"]
63101 -> 63102 [label="%13 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i32 0, i32 0"]
63102 [label="N63102\n(rp:65, ep:65)", shape="circle"]
63102 -> 63103 [label="%14 = call i32 @pipe(i32* %13)"]
63103 [label="N63103\n(rp:64, ep:64)", shape="circle"]
63103 -> 63104 [label="%15 = icmp slt i32 %14, 0"]
63104 [label="N63104\n(rp:63, ep:63)", shape="circle"]
63104 -> 63172 [label="[%15 = icmp slt i32 %14, 0]"]
63104 -> 63173 [label="[!(%15 = icmp slt i32 %14, 0)]"]
63106 [label="N63106\n(rp:6, ep:6)", shape="circle"]
63106 -> 63107 [label="%18 = load i32, i32* %17, align 4"]
63107 [label="N63107\n(rp:5, ep:5)", shape="circle"]
63107 -> 63108 [label="%19 = call i8* @strerror(i32 %18)"]
63108 [label="N63108\n(rp:4, ep:4)", shape="circle"]
63108 -> 63109 [label="logger --@-- call void @logger(i32 6, i32 3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.74, i32 0, i32 0), i8* %19)", style="dashed", color="blue"]
63109 [label="N63109\n(rp:3, ep:3)", shape="circle"]
63109 -> 63170 [label="store i32 0, i32* %4, align 4"]
63112 [label="N63112\n(rp:61, ep:61)", shape="circle"]
63112 -> 63113 [label="store i32 %21, i32* %8, align 4"]
63113 [label="N63113\n(rp:60, ep:60)", shape="circle"]
63113 -> 63114 [label="%22 = icmp slt i32 %21, 0"]
63114 [label="N63114\n(rp:59, ep:59)", shape="circle"]
63114 -> 63174 [label="[%22 = icmp slt i32 %21, 0]"]
63114 -> 63175 [label="[!(%22 = icmp slt i32 %21, 0)]"]
63116 [label="N63116\n(rp:11, ep:11)", shape="circle"]
63116 -> 63117 [label="%25 = load i32, i32* %24, align 4"]
63117 [label="N63117\n(rp:10, ep:10)", shape="circle"]
63117 -> 63118 [label="%26 = call i8* @strerror(i32 %25)"]
63118 [label="N63118\n(rp:9, ep:9)", shape="circle"]
63118 -> 63119 [label="logger --@-- call void @logger(i32 6, i32 3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.75, i32 0, i32 0), i8* %26)", style="dashed", color="blue"]
63119 [label="N63119\n(rp:8, ep:8)", shape="circle"]
63119 -> 63170 [label="store i32 0, i32* %4, align 4"]
63122 [label="N63122\n(rp:57, ep:57)", shape="circle"]
63122 -> 63123 [label="%29 = icmp eq i32 %28, 0"]
63123 [label="N63123\n(rp:56, ep:56)", shape="circle"]
63123 -> 63176 [label="[%29 = icmp eq i32 %28, 0]"]
63123 -> 63177 [label="[!(%29 = icmp eq i32 %28, 0)]"]
63125 [label="N63125\n(rp:31, ep:31)", shape="circle"]
63125 -> 63126 [label="%32 = load i32, i32* %31, align 4"]
63126 [label="N63126\n(rp:30, ep:30)", shape="circle"]
63126 -> 63127 [label="%33 = call i32 @close(i32 %32)"]
63127 [label="N63127\n(rp:29, ep:29)", shape="circle"]
63127 -> 63128 [label="%34 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1"]
63128 [label="N63128\n(rp:28, ep:28)", shape="circle"]
63128 -> 63129 [label="%35 = load i32, i32* %34, align 4"]
63129 [label="N63129\n(rp:27, ep:27)", shape="circle"]
63129 -> 63130 [label="%36 = call i32 @dup2(i32 %35, i32 1)"]
63130 [label="N63130\n(rp:26, ep:26)", shape="circle"]
63130 -> 63131 [label="%37 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1"]
63131 [label="N63131\n(rp:25, ep:25)", shape="circle"]
63131 -> 63132 [label="%38 = load i32, i32* %37, align 4"]
63132 [label="N63132\n(rp:24, ep:24)", shape="circle"]
63132 -> 63133 [label="%39 = call i32 @dup2(i32 %38, i32 2)"]
63133 [label="N63133\n(rp:23, ep:23)", shape="circle"]
63133 -> 63134 [label="%40 = load i8**, i8*** %5, align 8"]
63134 [label="N63134\n(rp:22, ep:22)", shape="circle"]
63134 -> 63135 [label="%41 = getelementptr inbounds i8*, i8** %40, i64 0"]
63135 [label="N63135\n(rp:21, ep:21)", shape="circle"]
63135 -> 63136 [label="%42 = load i8*, i8** %41, align 8"]
63136 [label="N63136\n(rp:20, ep:20)", shape="circle"]
63136 -> 63137 [label="%43 = load i8**, i8*** %5, align 8"]
63137 [label="N63137\n(rp:19, ep:19)", shape="circle"]
63137 -> 63138 [label="%44 = call i32 @execvp(i8* %42, i8** %43)"]
63138 [label="N63138\n(rp:18, ep:18)", shape="circle"]
63138 -> 63139 [label="%45 = call i32* @__errno_location()"]
63139 [label="N63139\n(rp:17, ep:17)", shape="circle"]
63139 -> 63140 [label="%46 = load i32, i32* %45, align 4"]
63140 [label="N63140\n(rp:16, ep:16)", shape="circle"]
63140 -> 63141 [label="%47 = call i8* @strerror(i32 %46)"]
63141 [label="N63141\n(rp:15, ep:15)", shape="circle"]
63141 -> 63142 [label="logger --@-- call void @logger(i32 6, i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.76, i32 0, i32 0), i8* %47)", style="dashed", color="blue"]
63142 [label="N63142\n(rp:14, ep:14)", shape="circle"]
63142 -> 63143 [label="call void @_exit(i32 128)"]
63143 [label="N63143\n(rp:13, ep:13)", shape="circle"]
63143 -> 63077 [label="unreachable"]
63145 [label="N63145\n(rp:54, ep:54)", shape="circle"]
63145 -> 63146 [label="%50 = load i32, i32* %49, align 4"]
63146 [label="N63146\n(rp:53, ep:53)", shape="circle"]
63146 -> 63148 [label="%51 = call i32 @close(i32 %50)"]
63148 [label="N63148\n(rp:52, ep:38)", shape="box"]
63148 -> 63149 [label="%53 = load i32, i32* %10, align 4"]
63148 -> 63148 [label="@", style="dashed", color="orange"]
63148 -> 63150 [label="@", style="dashed", color="orange"]
63149 [label="N63149\n(rp:51, ep:37)", shape="circle"]
63149 -> 63150 [label="%54 = icmp sgt i32 %53, 0"]
63150 [label="N63150\n(rp:50, ep:36)", shape="circle"]
63150 -> 63178 [label="[%54 = icmp sgt i32 %53, 0]"]
63150 -> 63179 [label="[!(%54 = icmp sgt i32 %53, 0)]"]
63152 [label="N63152\n(rp:45, ep:51)", shape="circle"]
63152 -> 63153 [label="%57 = load i32, i32* %56, align 4"]
63153 [label="N63153\n(rp:44, ep:50)", shape="circle"]
63153 -> 63154 [label="%58 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i32 0, i32 0"]
63154 [label="N63154\n(rp:43, ep:49)", shape="circle"]
63154 -> 63155 [label="%59 = call i64 @read(i32 %57, i8* %58, i64 255)"]
63155 [label="N63155\n(rp:42, ep:48)", shape="circle"]
63155 -> 63156 [label="%60 = trunc i64 %59 to i32"]
63156 [label="N63156\n(rp:41, ep:47)", shape="circle"]
63156 -> 63157 [label="store i32 %60, i32* %10, align 4"]
63157 [label="N63157\n(rp:40, ep:46)", shape="circle"]
63157 -> 63158 [label="%61 = load i32, i32* %10, align 4"]
63158 [label="N63158\n(rp:39, ep:45)", shape="circle"]
63158 -> 63159 [label="%62 = sext i32 %61 to i64"]
63159 [label="N63159\n(rp:38, ep:44)", shape="circle"]
63159 -> 63160 [label="%63 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 %62"]
63160 [label="N63160\n(rp:37, ep:43)", shape="circle"]
63160 -> 63161 [label="store i8 0, i8* %63, align 1"]
63161 [label="N63161\n(rp:36, ep:42)", shape="circle"]
63161 -> 63162 [label="%64 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i32 0, i32 0"]
63162 [label="N63162\n(rp:35, ep:41)", shape="circle"]
63162 -> 63163 [label="%65 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %6, align 8"]
63163 [label="N63163\n(rp:34, ep:40)", shape="circle"]
63163 -> 63164 [label="%66 = load i8*, i8** %7, align 8"]
63164 [label="N63164\n(rp:33, ep:39)", shape="circle"]
63164 -> 63148 [label="str_handle_lines --@-- %67 = call i32 @str_handle_lines(i8* %64, i8** %12, i32 (i8*, i8*)* %65, i8* %66)", style="dashed", color="blue"]
63167 [label="N63167\n(rp:48, ep:34)", shape="circle"]
63167 -> 63168 [label="xfree --@-- call void @xfree(i8* %69)", style="dashed", color="blue"]
63168 [label="N63168\n(rp:47, ep:33)", shape="circle"]
63168 -> 63170 [label="store i32 1, i32* %4, align 4"]
63170 [label="N63170\n(rp:2, ep:2)", shape="circle"]
63170 -> 63171 [label="%71 = load i32, i32* %4, align 4"]
63171 [label="N63171\n(rp:1, ep:1)", shape="circle"]
63171 -> 63077 [label="ret i32 %71"]
63172 [label="N63172\n(rp:7, ep:7)", shape="circle"]
63172 -> 63106 [label="%17 = call i32* @__errno_location()"]
63173 [label="N63173\n(rp:62, ep:62)", shape="circle"]
63173 -> 63112 [label="%21 = call i32 @fork()"]
63174 [label="N63174\n(rp:12, ep:12)", shape="circle"]
63174 -> 63116 [label="%24 = call i32* @__errno_location()"]
63175 [label="N63175\n(rp:58, ep:58)", shape="circle"]
63175 -> 63122 [label="%28 = load i32, i32* %8, align 4"]
63176 [label="N63176\n(rp:32, ep:32)", shape="circle"]
63176 -> 63125 [label="%31 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0"]
63177 [label="N63177\n(rp:55, ep:55)", shape="circle"]
63177 -> 63145 [label="%49 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1"]
63178 [label="N63178\n(rp:46, ep:52)", shape="circle"]
63178 -> 63152 [label="%56 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0"]
63179 [label="N63179\n(rp:49, ep:35)", shape="circle"]
63179 -> 63167 [label="%69 = load i8*, i8** %12, align 8"]
}
