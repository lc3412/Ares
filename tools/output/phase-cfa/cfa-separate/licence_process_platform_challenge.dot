digraph licence_process_platform_challenge {
label="licence_process_platform_challenge"
28124 [label="N28124\n(rp:0, ep:0)\nexit", shape="doublecircle"]
28125 [label="N28125\n(rp:42, ep:42)\nentry", shape="doublecircle"]
28125 -> 28127 [label="%2 = alloca %struct.stream*, align 8"]
28127 [label="N28127\n(rp:41, ep:41)", shape="circle"]
28127 -> 28128 [label="%3 = alloca i8*, align 8"]
28128 [label="N28128\n(rp:40, ep:40)", shape="circle"]
28128 -> 28129 [label="%4 = alloca i8*, align 8"]
28129 [label="N28129\n(rp:39, ep:39)", shape="circle"]
28129 -> 28130 [label="%5 = alloca [10 x i8], align 1"]
28130 [label="N28130\n(rp:38, ep:38)", shape="circle"]
28130 -> 28131 [label="%6 = alloca [10 x i8], align 1"]
28131 [label="N28131\n(rp:37, ep:37)", shape="circle"]
28131 -> 28132 [label="%7 = alloca [20 x i8], align 16"]
28132 [label="N28132\n(rp:36, ep:36)", shape="circle"]
28132 -> 28133 [label="%8 = alloca [20 x i8], align 16"]
28133 [label="N28133\n(rp:35, ep:35)", shape="circle"]
28133 -> 28134 [label="%9 = alloca [30 x i8], align 16"]
28134 [label="N28134\n(rp:34, ep:34)", shape="circle"]
28134 -> 28135 [label="%10 = alloca [16 x i8], align 16"]
28135 [label="N28135\n(rp:33, ep:33)", shape="circle"]
28135 -> 28136 [label="%11 = alloca %struct.rc4_key_st, align 4"]
28136 [label="N28136\n(rp:32, ep:32)", shape="circle"]
28136 -> 28139 [label="store %struct.stream* %0, %struct.stream** %2, align 8"]
28139 [label="N28139\n(rp:31, ep:31)", shape="circle"]
28139 -> 28148 [label="store i8* null, i8** %3, align 8"]
28148 [label="N28148\n(rp:30, ep:30)", shape="circle"]
28148 -> 28149 [label="%12 = load %struct.stream*, %struct.stream** %2, align 8"]
28149 [label="N28149\n(rp:29, ep:29)", shape="circle"]
28149 -> 28150 [label="licence_parse_platform_challenge --@-- %13 = call i32 @licence_parse_platform_challenge(%struct.stream* %12, i8** %3, i8** %4)", style="dashed", color="blue"]
28150 [label="N28150\n(rp:28, ep:28)", shape="circle"]
28150 -> 28151 [label="%14 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i32 0, i32 0"]
28151 [label="N28151\n(rp:27, ep:27)", shape="circle"]
28151 -> 28152 [label="%15 = load i8*, i8** %3, align 8"]
28152 [label="N28152\n(rp:26, ep:26)", shape="circle"]
28152 -> 28153 [label="call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 10, i32 1, i1 false)"]
28153 [label="N28153\n(rp:25, ep:25)", shape="circle"]
28153 -> 28154 [label="rdssl_rc4_set_key --@-- call void @rdssl_rc4_set_key(%struct.rc4_key_st* %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @g_licence_key, i32 0, i32 0), i32 16)", style="dashed", color="blue"]
28154 [label="N28154\n(rp:24, ep:24)", shape="circle"]
28154 -> 28155 [label="%16 = load i8*, i8** %3, align 8"]
28155 [label="N28155\n(rp:23, ep:23)", shape="circle"]
28155 -> 28156 [label="%17 = getelementptr inbounds [10 x i8], [10 x i8]* %6, i32 0, i32 0"]
28156 [label="N28156\n(rp:22, ep:22)", shape="circle"]
28156 -> 28157 [label="rdssl_rc4_crypt --@-- call void @rdssl_rc4_crypt(%struct.rc4_key_st* %11, i8* %16, i8* %17, i32 10)", style="dashed", color="blue"]
28157 [label="N28157\n(rp:21, ep:21)", shape="circle"]
28157 -> 28158 [label="%18 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i32 0, i32 0"]
28158 [label="N28158\n(rp:20, ep:20)", shape="circle"]
28158 -> 28159 [label="licence_generate_hwid --@-- call void @licence_generate_hwid(i8* %18)", style="dashed", color="blue"]
28159 [label="N28159\n(rp:19, ep:19)", shape="circle"]
28159 -> 28160 [label="%19 = getelementptr inbounds [30 x i8], [30 x i8]* %9, i32 0, i32 0"]
28160 [label="N28160\n(rp:18, ep:18)", shape="circle"]
28160 -> 28161 [label="%20 = getelementptr inbounds [10 x i8], [10 x i8]* %6, i32 0, i32 0"]
28161 [label="N28161\n(rp:17, ep:17)", shape="circle"]
28161 -> 28162 [label="call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 10, i32 1, i1 false)"]
28162 [label="N28162\n(rp:16, ep:16)", shape="circle"]
28162 -> 28163 [label="%21 = getelementptr inbounds [30 x i8], [30 x i8]* %9, i32 0, i32 0"]
28163 [label="N28163\n(rp:15, ep:15)", shape="circle"]
28163 -> 28164 [label="%22 = getelementptr inbounds i8, i8* %21, i64 10"]
28164 [label="N28164\n(rp:14, ep:14)", shape="circle"]
28164 -> 28165 [label="%23 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i32 0, i32 0"]
28165 [label="N28165\n(rp:13, ep:13)", shape="circle"]
28165 -> 28166 [label="call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 20, i32 1, i1 false)"]
28166 [label="N28166\n(rp:12, ep:12)", shape="circle"]
28166 -> 28167 [label="%24 = getelementptr inbounds [16 x i8], [16 x i8]* %10, i32 0, i32 0"]
28167 [label="N28167\n(rp:11, ep:11)", shape="circle"]
28167 -> 28168 [label="%25 = getelementptr inbounds [30 x i8], [30 x i8]* %9, i32 0, i32 0"]
28168 [label="N28168\n(rp:10, ep:10)", shape="circle"]
28168 -> 28169 [label="sec_sign --@-- call void @sec_sign(i8* %24, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @g_licence_sign_key, i32 0, i32 0), i32 16, i8* %25, i32 30)", style="dashed", color="blue"]
28169 [label="N28169\n(rp:9, ep:9)", shape="circle"]
28169 -> 28170 [label="rdssl_rc4_set_key --@-- call void @rdssl_rc4_set_key(%struct.rc4_key_st* %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @g_licence_key, i32 0, i32 0), i32 16)", style="dashed", color="blue"]
28170 [label="N28170\n(rp:8, ep:8)", shape="circle"]
28170 -> 28171 [label="%26 = getelementptr inbounds [20 x i8], [20 x i8]* %7, i32 0, i32 0"]
28171 [label="N28171\n(rp:7, ep:7)", shape="circle"]
28171 -> 28172 [label="%27 = getelementptr inbounds [20 x i8], [20 x i8]* %8, i32 0, i32 0"]
28172 [label="N28172\n(rp:6, ep:6)", shape="circle"]
28172 -> 28173 [label="rdssl_rc4_crypt --@-- call void @rdssl_rc4_crypt(%struct.rc4_key_st* %11, i8* %26, i8* %27, i32 20)", style="dashed", color="blue"]
28173 [label="N28173\n(rp:5, ep:5)", shape="circle"]
28173 -> 28174 [label="%28 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i32 0, i32 0"]
28174 [label="N28174\n(rp:4, ep:4)", shape="circle"]
28174 -> 28175 [label="%29 = getelementptr inbounds [20 x i8], [20 x i8]* %8, i32 0, i32 0"]
28175 [label="N28175\n(rp:3, ep:3)", shape="circle"]
28175 -> 28176 [label="%30 = getelementptr inbounds [16 x i8], [16 x i8]* %10, i32 0, i32 0"]
28176 [label="N28176\n(rp:2, ep:2)", shape="circle"]
28176 -> 28177 [label="licence_send_platform_challenge_response --@-- call void @licence_send_platform_challenge_response(i8* %28, i8* %29, i8* %30)", style="dashed", color="blue"]
28177 [label="N28177\n(rp:1, ep:1)", shape="circle"]
28177 -> 28124 [label="ret void"]
}
