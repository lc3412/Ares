; ModuleID = './[inter]xwin.o.i'
source_filename = "./[inter]xwin.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._XDisplay = type opaque
%struct.XModifierKeymap = type { i32, i8* }
%struct.XErrorEvent = type { i32, %struct._XDisplay*, i64, i64, i8, i8, i8 }
%struct.Screen = type { %struct._XExtData*, %struct._XDisplay*, i64, i32, i32, i32, i32, i32, %struct.Depth*, i32, %struct.Visual*, %struct._XGC*, i64, i64, i64, i32, i32, i32, i32, i64 }
%struct._XExtData = type { i32, %struct._XExtData*, i32 (%struct._XExtData*)*, i8* }
%struct.Depth = type { i32, i32, %struct.Visual* }
%struct.Visual = type { %struct._XExtData*, i64, i32, i64, i64, i64, i32, i32 }
%struct._XGC = type opaque
%struct._XIM = type opaque
%struct._XIC = type opaque
%struct._seamless_window = type { i64, i64, i64, %struct._seamless_group*, i32, i32, i32, i32, i32, i32, %struct.timeval*, i32, i32, i32, i32, i32, i32, i32, i32, [4096 x i8], %struct._seamless_window* }
%struct._seamless_group = type { i64, i64, i32 }
%struct.timeval = type { i64, i64 }
%struct.XRectangle = type { i16, i16, i16, i16 }
%struct.anon = type { %struct._XExtData*, %struct._XPrivate*, i32, i32, i32, i32, i8*, i64, i64, i64, i32, i64 (%struct._XDisplay*)*, i32, i32, i32, i32, i32, %struct.ScreenFormat*, i32, i32, %struct._XPrivate*, %struct._XPrivate*, i32, i64, i64, i8*, i8*, i8*, i8*, i32, %struct._XrmHashBucketRec*, i32 (%struct._XDisplay*)*, i8*, i32, i32, %struct.Screen*, i64, i64, i32, i32, i8*, i8*, i32, i8* }
%struct.ScreenFormat = type { %struct._XExtData*, i32, i32, i32 }
%struct._XPrivate = type opaque
%struct._XrmHashBucketRec = type opaque
%struct.XPixmapFormatValues = type { i32, i32, i32 }
%struct.XVisualInfo = type { %struct.Visual*, i64, i32, i32, i32, i64, i64, i64, i32, i32 }
%struct.XSizeHints = type { i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.anon.0, %struct.anon.0, i32, i32, i32 }
%struct.anon.0 = type { i32, i32 }
%struct.XSetWindowAttributes = type { i64, i64, i64, i64, i32, i32, i32, i64, i64, i32, i64, i64, i32, i64, i64 }
%struct.XClassHint = type { i8*, i8* }
%union._XEvent = type { [24 x i64] }
%struct.XGCValues = type { i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i64, i32, i8 }
%struct.XVisibilityEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i32 }
%struct.XTextProperty = type { i8*, i64, i32, i64 }
%struct.XWindowAttributes = type { i32, i32, i32, i32, i32, i32, %struct.Visual*, i64, i32, i32, i32, i32, i64, i64, i32, i64, i32, i32, i64, i64, i64, i32, %struct.Screen* }
%struct.PropMotifWmHints = type { i64, i64, i64, i64, i64 }
%struct._XcursorImage = type { i32, i32, i32, i32, i32, i32, i32, i32* }
%struct.XAnyEvent = type { i32, i64, i32, %struct._XDisplay*, i64 }
%struct.XClientMessageEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i64, i32, %union.anon }
%union.anon = type { [5 x i64] }
%struct.XKeyEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct._XComposeStatus = type { i8*, i32 }
%struct.XMotionEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i64, i64, i64, i32, i32, i32, i32, i32, i8, i32 }
%struct.XFocusChangeEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i32, i32 }
%struct.XExposeEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i32, i32, i32, i32, i32 }
%struct.XMappingEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i32, i32, i32 }
%struct.XSelectionEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i64, i64, i64, i64 }
%struct.XSelectionRequestEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i64, i64, i64, i64, i64 }
%struct.XPropertyEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i64, i64, i32 }
%struct.XConfigureEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i64, i32, i32, i32, i32, i32, i64, i32 }
%struct.timezone = type { i32, i32 }
%struct.fd_set = type { [16 x i64] }
%struct._XImage = type { i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i8*, %struct.funcs }
%struct.funcs = type { %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i32, i8*, i32, i32, i32, i32)*, i32 (%struct._XImage*)*, i64 (%struct._XImage*, i32, i32)*, i32 (%struct._XImage*, i32, i32, i64)*, %struct._XImage* (%struct._XImage*, i32, i32, i32, i32)*, i32 (%struct._XImage*, i64)* }
%struct.PixelColour = type { i32, i32, i32 }
%struct._COLOURMAP = type { i16, %struct._COLOURENTRY* }
%struct._COLOURENTRY = type { i8, i8, i8 }
%struct.XColor = type { i64, i16, i16, i16, i8, i8 }
%struct._BRUSH = type { i8, i8, i8, [8 x i8], %struct._BRUSHDATA* }
%struct._BRUSHDATA = type { i32, i32, i8* }
%struct._PEN = type { i8, i8, i32 }
%struct._RD_POINT = type { i16, i16 }
%struct.XPoint = type { i16, i16 }
%struct._FONTGLYPH = type { i16, i16, i16, i16, i8* }
%struct._DATABLOB = type { i8*, i32 }
%struct.XWMHints = type { i64, i32, i32, i64, i64, i32, i32, i64, i64 }
%struct.XWindowChanges = type { i32, i32, i32, i32, i32, i64, i32 }
%struct._sw_configurenotify_context = type { i64, i64 }
%struct.XButtonEvent = type { i32, i64, i32, %struct._XDisplay*, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32 }

@g_dynamic_session_resize = global i32 1, align 4
@g_seamless_active = global i32 0, align 4
@g_enable_compose = global i32 0, align 4
@g_display = common global %struct._XDisplay* null, align 8
@g_mod_map = internal global %struct.XModifierKeymap* null, align 8
@g_error_expected = internal global i32 0, align 4
@.str = private unnamed_addr constant [42 x i8] c"ui_init(), failed to open X11 display: %s\00", align 1
@g_host_be = internal global i32 0, align 4
@g_old_error_handler = internal global i32 (%struct._XDisplay*, %struct.XErrorEvent*)* null, align 8
@g_xserver_be = internal global i32 0, align 4
@g_x_socket = internal global i32 0, align 4
@g_screen = internal global %struct.Screen* null, align 8
@g_depth = internal global i32 0, align 4
@g_no_translate_image = internal global i32 0, align 4
@.str.1 = private unnamed_addr constant [88 x i8] c"Performance optimization possible: avoiding image translation (colour depth conversion)\00", align 1
@g_server_depth = external global i32, align 4
@g_bpp = internal global i32 0, align 4
@.str.2 = private unnamed_addr constant [67 x i8] c"Remote desktop colour depth %d higher than display colour depth %d\00", align 1
@.str.3 = private unnamed_addr constant [81 x i8] c"RDP depth: %d, display depth: %d, display bpp: %d, X server BE: %d, host BE: %d\0A\00", align 1
@g_owncolmap = external global i32, align 4
@g_visual = internal global %struct.Visual* null, align 8
@g_xcolmap = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [79 x i8] c"Display colour depth is %d bit: you may want to use -C for a private colourmap\00", align 1
@g_ownbackstore = external global i32, align 4
@.str.5 = private unnamed_addr constant [52 x i8] c"External BackingStore not available. Using internal\00", align 1
@g_IM = internal global %struct._XIM* null, align 8
@g_seamless_rdp = external global i32, align 4
@g_using_full_workarea = internal global i32 0, align 4
@.str.6 = private unnamed_addr constant [121 x i8] c"Failed to get workarea: probably your window manager does not support extended hints, using full screensize as fallback\0A\00", align 1
@g_null_cursor = internal global i8* null, align 8
@g_gc = internal global %struct._XGC* null, align 8
@g_wnd = common global i64 0, align 8
@ui_create_window.null_pointer_mask = private unnamed_addr constant [1 x i8] c"\80", align 1
@g_window_width = internal global i32 0, align 4
@g_window_height = internal global i32 0, align 4
@.str.7 = private unnamed_addr constant [43 x i8] c"ui_create_window() width = %d, height = %d\00", align 1
@g_xpos = external global i32, align 4
@g_pos = external global i32, align 4
@g_ypos = external global i32, align 4
@g_create_bitmap_gc = internal global %struct._XGC* null, align 8
@g_backstore = internal global i64 0, align 8
@g_title = external global [0 x i8], align 1
@g_hide_decorations = external global i32, align 4
@.str.8 = private unnamed_addr constant [9 x i8] c"rdesktop\00", align 1
@g_embed_wnd = external global i32, align 4
@.str.9 = private unnamed_addr constant [11 x i8] c"inputStyle\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"clientWindow\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"focusWindow\00", align 1
@g_IC = internal global %struct._XIC* null, align 8
@.str.12 = private unnamed_addr constant [13 x i8] c"filterEvents\00", align 1
@g_Unobscured = common global i32 0, align 4
@g_focused = internal global i32 0, align 4
@g_mouse_in_wnd = internal global i32 0, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"WM_PROTOCOLS\00", align 1
@g_protocol_atom = internal global i64 0, align 8
@.str.14 = private unnamed_addr constant [17 x i8] c"WM_DELETE_WINDOW\00", align 1
@g_kill_atom = internal global i64 0, align 8
@g_net_wm_ping_atom = external global i64, align 8
@.str.15 = private unnamed_addr constant [74 x i8] c"ui_resize_window(), Changing window %dx%d to match new session %dx%d size\00", align 1
@xwin_toggle_fullscreen.windowed_x = internal global i32 0, align 4
@xwin_toggle_fullscreen.windowed_y = internal global i32 0, align 4
@xwin_toggle_fullscreen.windowed_height = internal global i32 0, align 4
@xwin_toggle_fullscreen.windowed_width = internal global i32 0, align 4
@g_fullscreen = external global i32, align 4
@g_session_width = external global i16, align 2
@g_session_height = external global i16, align 2
@.str.16 = private unnamed_addr constant [70 x i8] c"xwin_toggle_fullscreen(), new window: %dx%d+%d+%d, last window: %dx%d\00", align 1
@g_pending_resize = external global i32, align 4
@g_current_cursor = internal global i64 0, align 8
@g_wait_for_deactivate_ts = global i64 0, align 8
@g_exit_mainloop = external global i32, align 4
@g_user_quit = external global i32, align 4
@g_seamless_windows = internal global %struct._seamless_window* null, align 8
@g_clip_rectangle = internal global %struct.XRectangle zeroinitializer, align 2
@g_create_glyph_gc = internal global %struct._XGC* null, align 8
@.str.17 = private unnamed_addr constant [66 x i8] c"ui_create_cursor(): xhot=%d, yhot=%d, width=%d, height=%d, bpp=%d\00", align 1
@.str.18 = private unnamed_addr constant [58 x i8] c"ui_create_xcursor_cursor(): Unhandled cursor bit depth %d\00", align 1
@.str.19 = private unnamed_addr constant [56 x i8] c"ui_create_xcursor_cursor(): XcursorImageCreate() failed\00", align 1
@.str.20 = private unnamed_addr constant [52 x i8] c"ui_create_cursor(): XcursorImageLoadCursor() failed\00", align 1
@g_local_cursor = external global i32, align 4
@.str.21 = private unnamed_addr constant [49 x i8] c"ui_set_cursor(): g_current_cursor = %p, new = %p\00", align 1
@g_colmap = internal global i32* null, align 8
@rop2_map = internal global [16 x i32] [i32 0, i32 8, i32 4, i32 12, i32 2, i32 10, i32 6, i32 14, i32 1, i32 9, i32 5, i32 13, i32 3, i32 11, i32 7, i32 15], align 16
@hatch_patterns = internal global [48 x i8] c"\00\00\00\FF\00\00\00\00\08\08\08\08\08\08\08\08\80@ \10\08\04\02\01\01\02\04\08\10 @\80\08\08\08\FF\08\08\08\08\81B$\18\18$B\81", align 16
@.str.22 = private unnamed_addr constant [40 x i8] c"Unimplemented support for brush type %d\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"Unimplemented triblit opcode 0x%x\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"Unimplemented fill mode %d\00", align 1
@.str.25 = private unnamed_addr constant [29 x i8] c"Unimplemented brush style %d\00", align 1
@.str.26 = private unnamed_addr constant [44 x i8] c"ui_draw_text(), skipping short 0xff command\00", align 1
@.str.27 = private unnamed_addr constant [44 x i8] c"ui_draw_text(), skipping short 0xfe command\00", align 1
@g_seamless_started = internal global i32 0, align 4
@g_seamless_hidden = internal global i32 0, align 4
@g_seamless_spawn_cmd = external global [0 x i8], align 1
@g_seamless_persistent_mode = external global i32, align 4
@.str.28 = private unnamed_addr constant [12 x i8] c"SeamlessRDP\00", align 1
@.str.29 = private unnamed_addr constant [53 x i8] c"ui_seamless_create_window(): no parent window 0x%lx\0A\00", align 1
@.str.30 = private unnamed_addr constant [62 x i8] c"ui_seamless_destroy_window(), no information for window 0x%lx\00", align 1
@.str.31 = private unnamed_addr constant [55 x i8] c"ui_seamless_seticon(): No information for window 0x%lx\00", align 1
@.str.32 = private unnamed_addr constant [66 x i8] c"ui_seamless_seticon(), new icon started before previous completed\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"RGBA\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"ui_seamless_seticon(), unknown icon format \22%s\22\00", align 1
@.str.35 = private unnamed_addr constant [49 x i8] c"ui_seamless_seticon(), icon too large (%d bytes)\00", align 1
@.str.36 = private unnamed_addr constant [71 x i8] c"ui_seamless_seticon(),  too large chunk received (%d bytes > %d bytes)\00", align 1
@.str.37 = private unnamed_addr constant [55 x i8] c"ui_seamless_seticon(), no information for window 0x%lx\00", align 1
@.str.38 = private unnamed_addr constant [59 x i8] c"ui_seamless_move_window(), no information for window 0x%lx\00", align 1
@.str.39 = private unnamed_addr constant [62 x i8] c"ui_seamless_restack_window(), no information for window 0x%lx\00", align 1
@.str.40 = private unnamed_addr constant [69 x i8] c"ui_seamless_restack_window(), no information for behind window 0x%lx\00", align 1
@.str.41 = private unnamed_addr constant [56 x i8] c"ui_seamless_settitle(), no information for window 0x%lx\00", align 1
@.str.42 = private unnamed_addr constant [56 x i8] c"ui_seamless_setstate(), no information for window 0x%lx\00", align 1
@.str.43 = private unnamed_addr constant [41 x i8] c"ui_seamless_setstate(), invalid state %d\00", align 1
@g_last_gesturetime = common global i64 0, align 8
@.str.44 = private unnamed_addr constant [50 x i8] c"Unable to get list of pixmap formats from display\00", align 1
@g_compatible_arch = internal global i32 0, align 4
@g_red_shift_r = internal global i32 0, align 4
@g_red_shift_l = internal global i32 0, align 4
@g_green_shift_r = internal global i32 0, align 4
@g_green_shift_l = internal global i32 0, align 4
@g_blue_shift_r = internal global i32 0, align 4
@g_blue_shift_l = internal global i32 0, align 4
@.str.45 = private unnamed_addr constant [59 x i8] c"No usable TrueColor or PseudoColor visuals on this display\00", align 1
@g_pointer_log_to_phys_map = internal global [32 x i8] zeroinitializer, align 16
@.str.46 = private unnamed_addr constant [16 x i8] c"_MOTIF_WM_HINTS\00", align 1
@.str.47 = private unnamed_addr constant [93 x i8] c"Failed to get atom _MOTIF_WM_HINTS: probably your window manager does not support MWM hints\0A\00", align 1
@g_sendmotion = external global i32, align 4
@g_grab_keyboard = external global i32, align 4
@.str.48 = private unnamed_addr constant [37 x i8] c"SeamlessRDP restack test - window %d\00", align 1
@.str.49 = private unnamed_addr constant [56 x i8] c"Broken Window Manager: Unable to test window restacking\00", align 1
@g_seamless_broken_restack = internal global i32 0, align 4
@.str.50 = private unnamed_addr constant [76 x i8] c"Broken Window Manager: doesn't handle restack (restack request was ignored)\00", align 1
@.str.51 = private unnamed_addr constant [75 x i8] c"Broken Window Manager: doesn't handle restack (window was moved to bottom)\00", align 1
@.str.52 = private unnamed_addr constant [49 x i8] c"sw_window_is_behind: Unable to find window 0x%lx\00", align 1
@.str.53 = private unnamed_addr constant [56 x i8] c"sw_window_is_behind: Unable to find behind window 0x%lx\00", align 1
@.str.54 = private unnamed_addr constant [41 x i8] c"sw_get_toplevel called with root window\0A\00", align 1
@xwin_process_events.is_g_wnd_mapped = internal global i32 0, align 4
@.str.55 = private unnamed_addr constant [39 x i8] c"xwin_process_events(), filtering event\00", align 1
@.str.56 = private unnamed_addr constant [41 x i8] c"XmbLookupString failed with status 0x%x\0A\00", align 1
@.str.57 = private unnamed_addr constant [47 x i8] c"No input context, using fallback XLookupString\00", align 1
@.str.58 = private unnamed_addr constant [32 x i8] c"KeyPress for keysym (0x%lx, %s)\00", align 1
@.str.59 = private unnamed_addr constant [34 x i8] c"KeyRelease for keysym (0x%lx, %s)\00", align 1
@g_moving_wnd = internal global i32 0, align 4
@g_move_x_offset = internal global i32 0, align 4
@g_move_y_offset = internal global i32 0, align 4
@g_seamless_focused = internal global i64 0, align 8
@g_net_wm_state_atom = external global i64, align 8
@g_net_wm_desktop_atom = external global i64, align 8
@.str.60 = private unnamed_addr constant [53 x i8] c"xwin_process_events(), Window mapped with size %dx%d\00", align 1
@g_window_size_type = external global i32, align 4
@.str.61 = private unnamed_addr constant [69 x i8] c"xwin_process_events(), ConfigureNotify: Root window changed to %dx%d\00", align 1
@g_resize_timer = internal global %struct.timeval zeroinitializer, align 8
@.str.62 = private unnamed_addr constant [87 x i8] c"xwin_process_events(), ConfigureNotify: session: %dx%d, new window: %dx%d (adj: %dx%d)\00", align 1
@.str.63 = private unnamed_addr constant [74 x i8] c"xwin_process_events(), ConfigureNotify: session: %dx%d, new window: %dx%d\00", align 1
@g_win_button_size = external global i32, align 4
@g_pending_resize_defer_timer = external global %struct.timeval, align 8
@g_pending_resize_defer = external global i32, align 4
@g_requested_session_width = external global i32, align 4
@g_requested_session_height = external global i32, align 4
@.str.64 = private unnamed_addr constant [55 x i8] c"Window resize detected, reconnecting to new size %dx%d\00", align 1
@.str.65 = private unnamed_addr constant [63 x i8] c"Window resize detected, requesting matching session size %dx%d\00", align 1
@.str.66 = private unnamed_addr constant [33 x i8] c"process_fds(), select failed: %s\00", align 1
@.str.67 = private unnamed_addr constant [25 x i8] c"src->width == dst->width\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"xwin.c\00", align 1
@__PRETTY_FUNCTION__.xcursor_stencil = private unnamed_addr constant [71 x i8] c"void xcursor_stencil(XcursorImage *, XcursorImage *, int, int, uint32)\00", align 1
@.str.69 = private unnamed_addr constant [27 x i8] c"src->height == dst->height\00", align 1
@__PRETTY_FUNCTION__.xcursor_merge = private unnamed_addr constant [51 x i8] c"void xcursor_merge(XcursorImage *, XcursorImage *)\00", align 1
@.str.70 = private unnamed_addr constant [66 x i8] c"Broken Window Manager: Timeout while waiting for ConfigureNotify\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @get_key_state(i32, i32) #0 !dbg !412 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !415, metadata !416), !dbg !417
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !418, metadata !416), !dbg !419
  call void @llvm.dbg.declare(metadata i32* %6, metadata !420, metadata !416), !dbg !421
  call void @llvm.dbg.declare(metadata i32* %7, metadata !422, metadata !416), !dbg !423
  call void @llvm.dbg.declare(metadata i32* %8, metadata !424, metadata !416), !dbg !425
  store i32 0, i32* %8, align 4, !dbg !425
  call void @llvm.dbg.declare(metadata i32* %9, metadata !426, metadata !416), !dbg !427
  call void @llvm.dbg.declare(metadata i8* %10, metadata !428, metadata !416), !dbg !429
  %11 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !430
  %12 = load i32, i32* %5, align 4, !dbg !431
  %13 = zext i32 %12 to i64, !dbg !431
  %14 = call zeroext i8 @XKeysymToKeycode(%struct._XDisplay* %11, i64 %13), !dbg !432
  store i8 %14, i8* %10, align 1, !dbg !429
  %15 = load i8, i8* %10, align 1, !dbg !433
  %16 = zext i8 %15 to i64, !dbg !433
  %17 = icmp eq i64 %16, 0, !dbg !435
  br i1 %17, label %18, label %19, !dbg !436

; <label>:18:                                     ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !437
  br label %68, !dbg !437

; <label>:19:                                     ; preds = %2
  store i32 0, i32* %6, align 4, !dbg !438
  br label %20, !dbg !440

; <label>:20:                                     ; preds = %59, %19
  %21 = load i32, i32* %6, align 4, !dbg !441
  %22 = icmp slt i32 %21, 8, !dbg !444
  br i1 %22, label %23, label %62, !dbg !445

; <label>:23:                                     ; preds = %20
  %24 = load %struct.XModifierKeymap*, %struct.XModifierKeymap** @g_mod_map, align 8, !dbg !446
  %25 = getelementptr inbounds %struct.XModifierKeymap, %struct.XModifierKeymap* %24, i32 0, i32 0, !dbg !448
  %26 = load i32, i32* %25, align 8, !dbg !448
  %27 = load i32, i32* %6, align 4, !dbg !449
  %28 = mul nsw i32 %26, %27, !dbg !450
  store i32 %28, i32* %9, align 4, !dbg !451
  store i32 0, i32* %7, align 4, !dbg !452
  br label %29, !dbg !454

; <label>:29:                                     ; preds = %55, %23
  %30 = load i32, i32* %7, align 4, !dbg !455
  %31 = load %struct.XModifierKeymap*, %struct.XModifierKeymap** @g_mod_map, align 8, !dbg !458
  %32 = getelementptr inbounds %struct.XModifierKeymap, %struct.XModifierKeymap* %31, i32 0, i32 0, !dbg !459
  %33 = load i32, i32* %32, align 8, !dbg !459
  %34 = icmp slt i32 %30, %33, !dbg !460
  br i1 %34, label %35, label %58, !dbg !461

; <label>:35:                                     ; preds = %29
  %36 = load i32, i32* %9, align 4, !dbg !462
  %37 = load i32, i32* %7, align 4, !dbg !465
  %38 = add nsw i32 %36, %37, !dbg !466
  %39 = sext i32 %38 to i64, !dbg !467
  %40 = load %struct.XModifierKeymap*, %struct.XModifierKeymap** @g_mod_map, align 8, !dbg !467
  %41 = getelementptr inbounds %struct.XModifierKeymap, %struct.XModifierKeymap* %40, i32 0, i32 1, !dbg !468
  %42 = load i8*, i8** %41, align 8, !dbg !468
  %43 = getelementptr inbounds i8, i8* %42, i64 %39, !dbg !467
  %44 = load i8, i8* %43, align 1, !dbg !467
  %45 = zext i8 %44 to i32, !dbg !467
  %46 = load i8, i8* %10, align 1, !dbg !469
  %47 = zext i8 %46 to i32, !dbg !469
  %48 = icmp eq i32 %45, %47, !dbg !470
  br i1 %48, label %49, label %54, !dbg !471

; <label>:49:                                     ; preds = %35
  %50 = load i32, i32* %6, align 4, !dbg !472
  %51 = shl i32 1, %50, !dbg !473
  %52 = load i32, i32* %8, align 4, !dbg !474
  %53 = or i32 %52, %51, !dbg !474
  store i32 %53, i32* %8, align 4, !dbg !474
  br label %54, !dbg !475

; <label>:54:                                     ; preds = %49, %35
  br label %55, !dbg !476

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* %7, align 4, !dbg !477
  %57 = add nsw i32 %56, 1, !dbg !477
  store i32 %57, i32* %7, align 4, !dbg !477
  br label %29, !dbg !479, !llvm.loop !480

; <label>:58:                                     ; preds = %29
  br label %59, !dbg !482

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* %6, align 4, !dbg !483
  %61 = add nsw i32 %60, 1, !dbg !483
  store i32 %61, i32* %6, align 4, !dbg !483
  br label %20, !dbg !485, !llvm.loop !486

; <label>:62:                                     ; preds = %20
  %63 = load i32, i32* %4, align 4, !dbg !488
  %64 = load i32, i32* %8, align 4, !dbg !489
  %65 = and i32 %63, %64, !dbg !490
  %66 = icmp ne i32 %65, 0, !dbg !491
  %67 = select i1 %66, i32 1, i32 0, !dbg !491
  store i32 %67, i32* %3, align 4, !dbg !492
  br label %68, !dbg !492

; <label>:68:                                     ; preds = %62, %18
  %69 = load i32, i32* %3, align 4, !dbg !493
  ret i32 %69, !dbg !493
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare zeroext i8 @XKeysymToKeycode(%struct._XDisplay*, i64) #2

; Function Attrs: nounwind uwtable
define i32 @sw_window_exists(i64) #0 !dbg !494 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca %struct._seamless_window*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !497, metadata !416), !dbg !498
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %4, metadata !499, metadata !416), !dbg !500
  call void @llvm.dbg.declare(metadata i8** %5, metadata !501, metadata !416), !dbg !502
  call void @llvm.dbg.declare(metadata i32* %6, metadata !503, metadata !416), !dbg !504
  store i32 0, i32* %6, align 4, !dbg !504
  %7 = load i64, i64* %3, align 8, !dbg !505
  %8 = call %struct._seamless_window* @sw_get_window_by_id(i64 %7), !dbg !506
  store %struct._seamless_window* %8, %struct._seamless_window** %4, align 8, !dbg !507
  %9 = load %struct._seamless_window*, %struct._seamless_window** %4, align 8, !dbg !508
  %10 = icmp ne %struct._seamless_window* %9, null, !dbg !508
  br i1 %10, label %12, label %11, !dbg !510

; <label>:11:                                     ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !511
  br label %25, !dbg !511

; <label>:12:                                     ; preds = %1
  store i32 1, i32* @g_error_expected, align 4, !dbg !512
  %13 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !513
  %14 = load %struct._seamless_window*, %struct._seamless_window** %4, align 8, !dbg !514
  %15 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %14, i32 0, i32 0, !dbg !515
  %16 = load i64, i64* %15, align 8, !dbg !515
  %17 = call i32 @XFetchName(%struct._XDisplay* %13, i64 %16, i8** %5), !dbg !516
  store i32 %17, i32* %6, align 4, !dbg !517
  store i32 0, i32* @g_error_expected, align 4, !dbg !518
  %18 = load i32, i32* %6, align 4, !dbg !519
  %19 = icmp ne i32 %18, 0, !dbg !519
  br i1 %19, label %20, label %23, !dbg !521

; <label>:20:                                     ; preds = %12
  %21 = load i8*, i8** %5, align 8, !dbg !522
  %22 = call i32 @XFree(i8* %21), !dbg !524
  br label %23, !dbg !525

; <label>:23:                                     ; preds = %20, %12
  %24 = load i32, i32* %6, align 4, !dbg !526
  store i32 %24, i32* %2, align 4, !dbg !527
  br label %25, !dbg !527

; <label>:25:                                     ; preds = %23, %11
  %26 = load i32, i32* %2, align 4, !dbg !528
  ret i32 %26, !dbg !528
}

; Function Attrs: nounwind uwtable
define internal %struct._seamless_window* @sw_get_window_by_id(i64) #0 !dbg !529 {
  %2 = alloca %struct._seamless_window*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct._seamless_window*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !532, metadata !416), !dbg !533
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %4, metadata !534, metadata !416), !dbg !535
  %5 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !536
  store %struct._seamless_window* %5, %struct._seamless_window** %4, align 8, !dbg !538
  br label %6, !dbg !539

; <label>:6:                                      ; preds = %18, %1
  %7 = load %struct._seamless_window*, %struct._seamless_window** %4, align 8, !dbg !540
  %8 = icmp ne %struct._seamless_window* %7, null, !dbg !543
  br i1 %8, label %9, label %22, !dbg !543

; <label>:9:                                      ; preds = %6
  %10 = load %struct._seamless_window*, %struct._seamless_window** %4, align 8, !dbg !544
  %11 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %10, i32 0, i32 1, !dbg !547
  %12 = load i64, i64* %11, align 8, !dbg !547
  %13 = load i64, i64* %3, align 8, !dbg !548
  %14 = icmp eq i64 %12, %13, !dbg !549
  br i1 %14, label %15, label %17, !dbg !550

; <label>:15:                                     ; preds = %9
  %16 = load %struct._seamless_window*, %struct._seamless_window** %4, align 8, !dbg !551
  store %struct._seamless_window* %16, %struct._seamless_window** %2, align 8, !dbg !552
  br label %23, !dbg !552

; <label>:17:                                     ; preds = %9
  br label %18, !dbg !553

; <label>:18:                                     ; preds = %17
  %19 = load %struct._seamless_window*, %struct._seamless_window** %4, align 8, !dbg !554
  %20 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %19, i32 0, i32 20, !dbg !556
  %21 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !556
  store %struct._seamless_window* %21, %struct._seamless_window** %4, align 8, !dbg !557
  br label %6, !dbg !558, !llvm.loop !559

; <label>:22:                                     ; preds = %6
  store %struct._seamless_window* null, %struct._seamless_window** %2, align 8, !dbg !561
  br label %23, !dbg !561

; <label>:23:                                     ; preds = %22, %15
  %24 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !562
  ret %struct._seamless_window* %24, !dbg !562
}

declare i32 @XFetchName(%struct._XDisplay*, i64, i8**) #2

declare i32 @XFree(i8*) #2

; Function Attrs: nounwind uwtable
define i32 @ui_init() #0 !dbg !563 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i32* %2, metadata !566, metadata !416), !dbg !567
  %4 = call %struct._XDisplay* @XOpenDisplay(i8* null), !dbg !568
  store %struct._XDisplay* %4, %struct._XDisplay** @g_display, align 8, !dbg !569
  %5 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !570
  %6 = icmp eq %struct._XDisplay* %5, null, !dbg !572
  br i1 %6, label %7, label %9, !dbg !573

; <label>:7:                                      ; preds = %0
  %8 = call i8* @XDisplayName(i8* null), !dbg !574
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0), i8* %8), !dbg !576
  store i32 0, i32* %1, align 4, !dbg !578
  br label %99, !dbg !578

; <label>:9:                                      ; preds = %0
  call void @llvm.dbg.declare(metadata i16* %3, metadata !579, metadata !416), !dbg !581
  store i16 1, i16* %3, align 2, !dbg !581
  %10 = bitcast i16* %3 to i8*, !dbg !582
  %11 = load i8, i8* %10, align 2, !dbg !582
  %12 = zext i8 %11 to i32, !dbg !583
  %13 = icmp ne i32 %12, 0, !dbg !584
  %14 = xor i1 %13, true, !dbg !584
  %15 = zext i1 %14 to i32, !dbg !584
  store i32 %15, i32* @g_host_be, align 4, !dbg !585
  %16 = call i32 (%struct._XDisplay*, %struct.XErrorEvent*)* @XSetErrorHandler(i32 (%struct._XDisplay*, %struct.XErrorEvent*)* @error_handler), !dbg !586
  store i32 (%struct._XDisplay*, %struct.XErrorEvent*)* %16, i32 (%struct._XDisplay*, %struct.XErrorEvent*)** @g_old_error_handler, align 8, !dbg !587
  %17 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !588
  %18 = bitcast %struct._XDisplay* %17 to %struct.anon*, !dbg !589
  %19 = getelementptr inbounds %struct.anon, %struct.anon* %18, i32 0, i32 12, !dbg !589
  %20 = load i32, i32* %19, align 8, !dbg !589
  %21 = icmp eq i32 %20, 1, !dbg !590
  %22 = zext i1 %21 to i32, !dbg !590
  store i32 %22, i32* @g_xserver_be, align 4, !dbg !591
  %23 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !592
  %24 = bitcast %struct._XDisplay* %23 to %struct.anon*, !dbg !593
  %25 = getelementptr inbounds %struct.anon, %struct.anon* %24, i32 0, i32 33, !dbg !593
  %26 = load i32, i32* %25, align 8, !dbg !593
  store i32 %26, i32* %2, align 4, !dbg !594
  %27 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !595
  %28 = bitcast %struct._XDisplay* %27 to %struct.anon*, !dbg !596
  %29 = getelementptr inbounds %struct.anon, %struct.anon* %28, i32 0, i32 2, !dbg !596
  %30 = load i32, i32* %29, align 8, !dbg !596
  store i32 %30, i32* @g_x_socket, align 4, !dbg !597
  %31 = load i32, i32* %2, align 4, !dbg !598
  %32 = sext i32 %31 to i64, !dbg !599
  %33 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !598
  %34 = bitcast %struct._XDisplay* %33 to %struct.anon*, !dbg !600
  %35 = getelementptr inbounds %struct.anon, %struct.anon* %34, i32 0, i32 35, !dbg !600
  %36 = load %struct.Screen*, %struct.Screen** %35, align 8, !dbg !600
  %37 = getelementptr inbounds %struct.Screen, %struct.Screen* %36, i64 %32, !dbg !599
  store %struct.Screen* %37, %struct.Screen** @g_screen, align 8, !dbg !601
  %38 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !602
  %39 = getelementptr inbounds %struct.Screen, %struct.Screen* %38, i32 0, i32 9, !dbg !603
  %40 = load i32, i32* %39, align 8, !dbg !603
  store i32 %40, i32* @g_depth, align 4, !dbg !604
  %41 = load i32, i32* %2, align 4, !dbg !605
  %42 = call i32 @select_visual(i32 %41), !dbg !607
  %43 = icmp ne i32 %42, 0, !dbg !607
  br i1 %43, label %45, label %44, !dbg !608

; <label>:44:                                     ; preds = %9
  store i32 0, i32* %1, align 4, !dbg !609
  br label %99, !dbg !609

; <label>:45:                                     ; preds = %9
  %46 = load i32, i32* @g_no_translate_image, align 4, !dbg !610
  %47 = icmp ne i32 %46, 0, !dbg !610
  br i1 %47, label %48, label %49, !dbg !612

; <label>:48:                                     ; preds = %45
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1, i32 0, i32 0)), !dbg !613
  br label %49, !dbg !615

; <label>:49:                                     ; preds = %48, %45
  %50 = load i32, i32* @g_server_depth, align 4, !dbg !616
  %51 = load i32, i32* @g_bpp, align 4, !dbg !618
  %52 = icmp sgt i32 %50, %51, !dbg !619
  br i1 %52, label %53, label %56, !dbg !620

; <label>:53:                                     ; preds = %49
  %54 = load i32, i32* @g_server_depth, align 4, !dbg !621
  %55 = load i32, i32* @g_bpp, align 4, !dbg !623
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i32 0, i32 0), i32 %54, i32 %55), !dbg !624
  br label %56, !dbg !625

; <label>:56:                                     ; preds = %53, %49
  %57 = load i32, i32* @g_server_depth, align 4, !dbg !626
  %58 = load i32, i32* @g_depth, align 4, !dbg !627
  %59 = load i32, i32* @g_bpp, align 4, !dbg !628
  %60 = load i32, i32* @g_xserver_be, align 4, !dbg !629
  %61 = load i32, i32* @g_host_be, align 4, !dbg !630
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.3, i32 0, i32 0), i32 %57, i32 %58, i32 %59, i32 %60, i32 %61), !dbg !631
  %62 = load i32, i32* @g_owncolmap, align 4, !dbg !632
  %63 = icmp ne i32 %62, 0, !dbg !632
  br i1 %63, label %76, label %64, !dbg !634

; <label>:64:                                     ; preds = %56
  %65 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !635
  %66 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !637
  %67 = getelementptr inbounds %struct.Screen, %struct.Screen* %66, i32 0, i32 2, !dbg !638
  %68 = load i64, i64* %67, align 8, !dbg !638
  %69 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !639
  %70 = call i64 @XCreateColormap(%struct._XDisplay* %65, i64 %68, %struct.Visual* %69, i32 0), !dbg !640
  store i64 %70, i64* @g_xcolmap, align 8, !dbg !641
  %71 = load i32, i32* @g_depth, align 4, !dbg !642
  %72 = icmp sle i32 %71, 8, !dbg !644
  br i1 %72, label %73, label %75, !dbg !645

; <label>:73:                                     ; preds = %64
  %74 = load i32, i32* @g_depth, align 4, !dbg !646
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.4, i32 0, i32 0), i32 %74), !dbg !647
  br label %75, !dbg !647

; <label>:75:                                     ; preds = %73, %64
  br label %76, !dbg !648

; <label>:76:                                     ; preds = %75, %56
  %77 = load i32, i32* @g_ownbackstore, align 4, !dbg !649
  %78 = icmp ne i32 %77, 0, !dbg !649
  br i1 %78, label %85, label %79, !dbg !651

; <label>:79:                                     ; preds = %76
  %80 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !652
  %81 = getelementptr inbounds %struct.Screen, %struct.Screen* %80, i32 0, i32 17, !dbg !654
  %82 = load i32, i32* %81, align 8, !dbg !654
  %83 = icmp ne i32 %82, 2, !dbg !655
  br i1 %83, label %84, label %85, !dbg !656

; <label>:84:                                     ; preds = %79
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i32 0, i32 0)), !dbg !657
  store i32 1, i32* @g_ownbackstore, align 4, !dbg !659
  br label %85, !dbg !660

; <label>:85:                                     ; preds = %84, %79, %76
  %86 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !661
  %87 = call %struct.XModifierKeymap* @XGetModifierMapping(%struct._XDisplay* %86), !dbg !662
  store %struct.XModifierKeymap* %87, %struct.XModifierKeymap** @g_mod_map, align 8, !dbg !663
  call void @xwin_refresh_pointer_map(), !dbg !664
  call void @xkeymap_init(), !dbg !665
  %88 = load i32, i32* @g_enable_compose, align 4, !dbg !666
  %89 = icmp ne i32 %88, 0, !dbg !666
  br i1 %89, label %90, label %93, !dbg !668

; <label>:90:                                     ; preds = %85
  %91 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !669
  %92 = call %struct._XIM* @XOpenIM(%struct._XDisplay* %91, %struct._XrmHashBucketRec* null, i8* null, i8* null), !dbg !670
  store %struct._XIM* %92, %struct._XIM** @g_IM, align 8, !dbg !671
  br label %93, !dbg !672

; <label>:93:                                     ; preds = %90, %85
  call void @xclip_init(), !dbg !673
  call void @ewmh_init(), !dbg !674
  %94 = load i32, i32* @g_seamless_rdp, align 4, !dbg !675
  %95 = icmp ne i32 %94, 0, !dbg !675
  br i1 %95, label %96, label %98, !dbg !677

; <label>:96:                                     ; preds = %93
  %97 = call i32 @seamless_init(), !dbg !678
  br label %98, !dbg !680

; <label>:98:                                     ; preds = %96, %93
  store i32 1, i32* %1, align 4, !dbg !681
  br label %99, !dbg !681

; <label>:99:                                     ; preds = %98, %44, %7
  %100 = load i32, i32* %1, align 4, !dbg !682
  ret i32 %100, !dbg !682
}

declare %struct._XDisplay* @XOpenDisplay(i8*) #2

declare void @logger(i32, i32, i8*, ...) #2

declare i8* @XDisplayName(i8*) #2

declare i32 (%struct._XDisplay*, %struct.XErrorEvent*)* @XSetErrorHandler(i32 (%struct._XDisplay*, %struct.XErrorEvent*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @error_handler(%struct._XDisplay*, %struct.XErrorEvent*) #0 !dbg !683 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._XDisplay*, align 8
  %5 = alloca %struct.XErrorEvent*, align 8
  store %struct._XDisplay* %0, %struct._XDisplay** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._XDisplay** %4, metadata !684, metadata !416), !dbg !685
  store %struct.XErrorEvent* %1, %struct.XErrorEvent** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.XErrorEvent** %5, metadata !686, metadata !416), !dbg !687
  %6 = load i32, i32* @g_error_expected, align 4, !dbg !688
  %7 = icmp ne i32 %6, 0, !dbg !688
  br i1 %7, label %8, label %9, !dbg !690

; <label>:8:                                      ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !691
  br label %14, !dbg !691

; <label>:9:                                      ; preds = %2
  %10 = load i32 (%struct._XDisplay*, %struct.XErrorEvent*)*, i32 (%struct._XDisplay*, %struct.XErrorEvent*)** @g_old_error_handler, align 8, !dbg !692
  %11 = load %struct._XDisplay*, %struct._XDisplay** %4, align 8, !dbg !693
  %12 = load %struct.XErrorEvent*, %struct.XErrorEvent** %5, align 8, !dbg !694
  %13 = call i32 %10(%struct._XDisplay* %11, %struct.XErrorEvent* %12), !dbg !692
  store i32 %13, i32* %3, align 4, !dbg !695
  br label %14, !dbg !695

; <label>:14:                                     ; preds = %9, %8
  %15 = load i32, i32* %3, align 4, !dbg !696
  ret i32 %15, !dbg !696
}

; Function Attrs: nounwind uwtable
define internal i32 @select_visual(i32) #0 !dbg !697 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.XPixmapFormatValues*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.XVisualInfo*, align 8
  %8 = alloca %struct.XVisualInfo, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.XVisualInfo*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.XPixmapFormatValues*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !700, metadata !416), !dbg !701
  call void @llvm.dbg.declare(metadata %struct.XPixmapFormatValues** %4, metadata !702, metadata !416), !dbg !710
  call void @llvm.dbg.declare(metadata i32* %5, metadata !711, metadata !416), !dbg !712
  call void @llvm.dbg.declare(metadata i32* %6, metadata !713, metadata !416), !dbg !714
  call void @llvm.dbg.declare(metadata %struct.XVisualInfo** %7, metadata !715, metadata !416), !dbg !731
  store %struct.XVisualInfo* null, %struct.XVisualInfo** %7, align 8, !dbg !731
  call void @llvm.dbg.declare(metadata %struct.XVisualInfo* %8, metadata !732, metadata !416), !dbg !733
  call void @llvm.dbg.declare(metadata i32* %9, metadata !734, metadata !416), !dbg !735
  call void @llvm.dbg.declare(metadata i32* %10, metadata !736, metadata !416), !dbg !737
  call void @llvm.dbg.declare(metadata i32* %11, metadata !738, metadata !416), !dbg !739
  call void @llvm.dbg.declare(metadata i32* %12, metadata !740, metadata !416), !dbg !741
  store i32 0, i32* %12, align 4, !dbg !742
  store i32 0, i32* %11, align 4, !dbg !743
  store i32 0, i32* %10, align 4, !dbg !744
  %20 = load i32, i32* @g_server_depth, align 4, !dbg !745
  %21 = icmp eq i32 %20, -1, !dbg !747
  br i1 %21, label %22, label %35, !dbg !748

; <label>:22:                                     ; preds = %1
  %23 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !749
  %24 = bitcast %struct._XDisplay* %23 to %struct.anon*, !dbg !751
  %25 = getelementptr inbounds %struct.anon, %struct.anon* %24, i32 0, i32 33, !dbg !751
  %26 = load i32, i32* %25, align 8, !dbg !751
  %27 = sext i32 %26 to i64, !dbg !751
  %28 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !749
  %29 = bitcast %struct._XDisplay* %28 to %struct.anon*, !dbg !751
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %29, i32 0, i32 35, !dbg !751
  %31 = load %struct.Screen*, %struct.Screen** %30, align 8, !dbg !751
  %32 = getelementptr inbounds %struct.Screen, %struct.Screen* %31, i64 %27, !dbg !751
  %33 = getelementptr inbounds %struct.Screen, %struct.Screen* %32, i32 0, i32 9, !dbg !752
  %34 = load i32, i32* %33, align 8, !dbg !752
  store i32 %34, i32* @g_server_depth, align 4, !dbg !753
  br label %35, !dbg !754

; <label>:35:                                     ; preds = %22, %1
  %36 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !755
  %37 = call %struct.XPixmapFormatValues* @XListPixmapFormats(%struct._XDisplay* %36, i32* %5), !dbg !756
  store %struct.XPixmapFormatValues* %37, %struct.XPixmapFormatValues** %4, align 8, !dbg !757
  %38 = load %struct.XPixmapFormatValues*, %struct.XPixmapFormatValues** %4, align 8, !dbg !758
  %39 = icmp eq %struct.XPixmapFormatValues* %38, null, !dbg !760
  br i1 %39, label %40, label %43, !dbg !761

; <label>:40:                                     ; preds = %35
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.44, i32 0, i32 0)), !dbg !762
  %41 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !764
  %42 = call i32 @XCloseDisplay(%struct._XDisplay* %41), !dbg !765
  store i32 0, i32* %2, align 4, !dbg !766
  br label %329, !dbg !766

; <label>:43:                                     ; preds = %35
  %44 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %8, i32 0, i32 4, !dbg !767
  store i32 4, i32* %44, align 8, !dbg !768
  %45 = load i32, i32* %3, align 4, !dbg !769
  %46 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %8, i32 0, i32 2, !dbg !770
  store i32 %45, i32* %46, align 8, !dbg !771
  %47 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !772
  %48 = call %struct.XVisualInfo* @XGetVisualInfo(%struct._XDisplay* %47, i64 10, %struct.XVisualInfo* %8, i32* %6), !dbg !773
  store %struct.XVisualInfo* %48, %struct.XVisualInfo** %7, align 8, !dbg !774
  store %struct.Visual* null, %struct.Visual** @g_visual, align 8, !dbg !775
  store i32 0, i32* @g_no_translate_image, align 4, !dbg !776
  store i32 0, i32* @g_compatible_arch, align 4, !dbg !777
  %49 = load %struct.XVisualInfo*, %struct.XVisualInfo** %7, align 8, !dbg !778
  %50 = icmp ne %struct.XVisualInfo* %49, null, !dbg !780
  br i1 %50, label %51, label %246, !dbg !781

; <label>:51:                                     ; preds = %43
  store i32 0, i32* %9, align 4, !dbg !782
  br label %52, !dbg !785

; <label>:52:                                     ; preds = %239, %51
  %53 = load i32, i32* %9, align 4, !dbg !786
  %54 = load i32, i32* %6, align 4, !dbg !789
  %55 = icmp slt i32 %53, %54, !dbg !790
  br i1 %55, label %56, label %242, !dbg !791

; <label>:56:                                     ; preds = %52
  call void @llvm.dbg.declare(metadata %struct.XVisualInfo** %13, metadata !792, metadata !416), !dbg !794
  %57 = load i32, i32* %9, align 4, !dbg !795
  %58 = sext i32 %57 to i64, !dbg !796
  %59 = load %struct.XVisualInfo*, %struct.XVisualInfo** %7, align 8, !dbg !796
  %60 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %59, i64 %58, !dbg !796
  store %struct.XVisualInfo* %60, %struct.XVisualInfo** %13, align 8, !dbg !794
  call void @llvm.dbg.declare(metadata i32* %14, metadata !797, metadata !416), !dbg !798
  store i32 0, i32* %14, align 4, !dbg !798
  call void @llvm.dbg.declare(metadata i32* %15, metadata !799, metadata !416), !dbg !800
  %61 = load i32, i32* @g_xserver_be, align 4, !dbg !801
  %62 = icmp ne i32 %61, 0, !dbg !801
  br i1 %62, label %144, label %63, !dbg !803

; <label>:63:                                     ; preds = %56
  %64 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !804
  %65 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %64, i32 0, i32 3, !dbg !806
  %66 = load i32, i32* %65, align 4, !dbg !806
  %67 = icmp eq i32 %66, 15, !dbg !807
  br i1 %67, label %68, label %83, !dbg !808

; <label>:68:                                     ; preds = %63
  %69 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !809
  %70 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %69, i32 0, i32 5, !dbg !810
  %71 = load i64, i64* %70, align 8, !dbg !810
  %72 = icmp eq i64 %71, 31744, !dbg !811
  br i1 %72, label %73, label %83, !dbg !812

; <label>:73:                                     ; preds = %68
  %74 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !813
  %75 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %74, i32 0, i32 6, !dbg !814
  %76 = load i64, i64* %75, align 8, !dbg !814
  %77 = icmp eq i64 %76, 992, !dbg !815
  br i1 %77, label %78, label %83, !dbg !816

; <label>:78:                                     ; preds = %73
  %79 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !817
  %80 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %79, i32 0, i32 7, !dbg !818
  %81 = load i64, i64* %80, align 8, !dbg !818
  %82 = icmp eq i64 %81, 31, !dbg !819
  br i1 %82, label %123, label %83, !dbg !820

; <label>:83:                                     ; preds = %78, %73, %68, %63
  %84 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !821
  %85 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %84, i32 0, i32 3, !dbg !822
  %86 = load i32, i32* %85, align 4, !dbg !822
  %87 = icmp eq i32 %86, 16, !dbg !823
  br i1 %87, label %88, label %103, !dbg !824

; <label>:88:                                     ; preds = %83
  %89 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !825
  %90 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %89, i32 0, i32 5, !dbg !826
  %91 = load i64, i64* %90, align 8, !dbg !826
  %92 = icmp eq i64 %91, 63488, !dbg !827
  br i1 %92, label %93, label %103, !dbg !828

; <label>:93:                                     ; preds = %88
  %94 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !829
  %95 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %94, i32 0, i32 6, !dbg !830
  %96 = load i64, i64* %95, align 8, !dbg !830
  %97 = icmp eq i64 %96, 2016, !dbg !831
  br i1 %97, label %98, label %103, !dbg !832

; <label>:98:                                     ; preds = %93
  %99 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !833
  %100 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %99, i32 0, i32 7, !dbg !834
  %101 = load i64, i64* %100, align 8, !dbg !834
  %102 = icmp eq i64 %101, 31, !dbg !835
  br i1 %102, label %123, label %103, !dbg !836

; <label>:103:                                    ; preds = %98, %93, %88, %83
  %104 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !837
  %105 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %104, i32 0, i32 3, !dbg !838
  %106 = load i32, i32* %105, align 4, !dbg !838
  %107 = icmp eq i32 %106, 24, !dbg !839
  br i1 %107, label %108, label %144, !dbg !840

; <label>:108:                                    ; preds = %103
  %109 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !841
  %110 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %109, i32 0, i32 5, !dbg !842
  %111 = load i64, i64* %110, align 8, !dbg !842
  %112 = icmp eq i64 %111, 16711680, !dbg !843
  br i1 %112, label %113, label %144, !dbg !844

; <label>:113:                                    ; preds = %108
  %114 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !845
  %115 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %114, i32 0, i32 6, !dbg !846
  %116 = load i64, i64* %115, align 8, !dbg !846
  %117 = icmp eq i64 %116, 65280, !dbg !847
  br i1 %117, label %118, label %144, !dbg !848

; <label>:118:                                    ; preds = %113
  %119 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !849
  %120 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %119, i32 0, i32 7, !dbg !850
  %121 = load i64, i64* %120, align 8, !dbg !850
  %122 = icmp eq i64 %121, 255, !dbg !851
  br i1 %122, label %123, label %144, !dbg !852

; <label>:123:                                    ; preds = %118, %98, %78
  %124 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !854
  %125 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %124, i32 0, i32 0, !dbg !856
  %126 = load %struct.Visual*, %struct.Visual** %125, align 8, !dbg !856
  store %struct.Visual* %126, %struct.Visual** @g_visual, align 8, !dbg !857
  %127 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !858
  %128 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %127, i32 0, i32 3, !dbg !859
  %129 = load i32, i32* %128, align 4, !dbg !859
  store i32 %129, i32* @g_depth, align 4, !dbg !860
  %130 = load i32, i32* @g_host_be, align 4, !dbg !861
  %131 = icmp ne i32 %130, 0, !dbg !862
  %132 = xor i1 %131, true, !dbg !862
  %133 = zext i1 %132 to i32, !dbg !862
  store i32 %133, i32* @g_compatible_arch, align 4, !dbg !863
  %134 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !864
  %135 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %134, i32 0, i32 3, !dbg !865
  %136 = load i32, i32* %135, align 4, !dbg !865
  %137 = load i32, i32* @g_server_depth, align 4, !dbg !866
  %138 = icmp eq i32 %136, %137, !dbg !867
  %139 = zext i1 %138 to i32, !dbg !867
  store i32 %139, i32* @g_no_translate_image, align 4, !dbg !868
  %140 = load i32, i32* @g_no_translate_image, align 4, !dbg !869
  %141 = icmp ne i32 %140, 0, !dbg !869
  br i1 %141, label %142, label %143, !dbg !871

; <label>:142:                                    ; preds = %123
  br label %242, !dbg !872

; <label>:143:                                    ; preds = %123
  br label %145, !dbg !873

; <label>:144:                                    ; preds = %118, %113, %108, %103, %56
  store i32 0, i32* @g_compatible_arch, align 4, !dbg !874
  br label %145

; <label>:145:                                    ; preds = %144, %143
  %146 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !876
  %147 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %146, i32 0, i32 3, !dbg !878
  %148 = load i32, i32* %147, align 4, !dbg !878
  %149 = icmp sgt i32 %148, 24, !dbg !879
  br i1 %149, label %150, label %151, !dbg !880

; <label>:150:                                    ; preds = %145
  br label %239, !dbg !881

; <label>:151:                                    ; preds = %145
  store i32 0, i32* %15, align 4, !dbg !883
  br label %152, !dbg !885

; <label>:152:                                    ; preds = %194, %151
  %153 = load i32, i32* %15, align 4, !dbg !886
  %154 = load i32, i32* %5, align 4, !dbg !889
  %155 = icmp slt i32 %153, %154, !dbg !890
  br i1 %155, label %156, label %197, !dbg !891

; <label>:156:                                    ; preds = %152
  %157 = load i32, i32* %15, align 4, !dbg !892
  %158 = sext i32 %157 to i64, !dbg !895
  %159 = load %struct.XPixmapFormatValues*, %struct.XPixmapFormatValues** %4, align 8, !dbg !895
  %160 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %159, i64 %158, !dbg !895
  %161 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %160, i32 0, i32 0, !dbg !896
  %162 = load i32, i32* %161, align 4, !dbg !896
  %163 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !897
  %164 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %163, i32 0, i32 3, !dbg !898
  %165 = load i32, i32* %164, align 4, !dbg !898
  %166 = icmp eq i32 %162, %165, !dbg !899
  br i1 %166, label %167, label %193, !dbg !900

; <label>:167:                                    ; preds = %156
  %168 = load i32, i32* %15, align 4, !dbg !901
  %169 = sext i32 %168 to i64, !dbg !904
  %170 = load %struct.XPixmapFormatValues*, %struct.XPixmapFormatValues** %4, align 8, !dbg !904
  %171 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %170, i64 %169, !dbg !904
  %172 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %171, i32 0, i32 1, !dbg !905
  %173 = load i32, i32* %172, align 4, !dbg !905
  %174 = icmp eq i32 %173, 16, !dbg !906
  br i1 %174, label %191, label %175, !dbg !907

; <label>:175:                                    ; preds = %167
  %176 = load i32, i32* %15, align 4, !dbg !908
  %177 = sext i32 %176 to i64, !dbg !909
  %178 = load %struct.XPixmapFormatValues*, %struct.XPixmapFormatValues** %4, align 8, !dbg !909
  %179 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %178, i64 %177, !dbg !909
  %180 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %179, i32 0, i32 1, !dbg !910
  %181 = load i32, i32* %180, align 4, !dbg !910
  %182 = icmp eq i32 %181, 24, !dbg !911
  br i1 %182, label %191, label %183, !dbg !912

; <label>:183:                                    ; preds = %175
  %184 = load i32, i32* %15, align 4, !dbg !913
  %185 = sext i32 %184 to i64, !dbg !914
  %186 = load %struct.XPixmapFormatValues*, %struct.XPixmapFormatValues** %4, align 8, !dbg !914
  %187 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %186, i64 %185, !dbg !914
  %188 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %187, i32 0, i32 1, !dbg !915
  %189 = load i32, i32* %188, align 4, !dbg !915
  %190 = icmp eq i32 %189, 32, !dbg !916
  br i1 %190, label %191, label %192, !dbg !917

; <label>:191:                                    ; preds = %183, %175, %167
  store i32 1, i32* %14, align 4, !dbg !919
  br label %192, !dbg !921

; <label>:192:                                    ; preds = %191, %183
  br label %197, !dbg !922

; <label>:193:                                    ; preds = %156
  br label %194, !dbg !923

; <label>:194:                                    ; preds = %193
  %195 = load i32, i32* %15, align 4, !dbg !924
  %196 = add nsw i32 %195, 1, !dbg !924
  store i32 %196, i32* %15, align 4, !dbg !924
  br label %152, !dbg !926, !llvm.loop !927

; <label>:197:                                    ; preds = %192, %152
  %198 = load i32, i32* %14, align 4, !dbg !929
  %199 = icmp ne i32 %198, 0, !dbg !929
  br i1 %199, label %200, label %238, !dbg !931

; <label>:200:                                    ; preds = %197
  call void @llvm.dbg.declare(metadata i32* %16, metadata !932, metadata !416), !dbg !934
  %201 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !935
  %202 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %201, i32 0, i32 5, !dbg !936
  %203 = load i64, i64* %202, align 8, !dbg !936
  %204 = trunc i64 %203 to i32, !dbg !935
  %205 = call i32 @calculate_mask_weight(i32 %204), !dbg !937
  store i32 %205, i32* %16, align 4, !dbg !934
  call void @llvm.dbg.declare(metadata i32* %17, metadata !938, metadata !416), !dbg !939
  %206 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !940
  %207 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %206, i32 0, i32 6, !dbg !941
  %208 = load i64, i64* %207, align 8, !dbg !941
  %209 = trunc i64 %208 to i32, !dbg !940
  %210 = call i32 @calculate_mask_weight(i32 %209), !dbg !942
  store i32 %210, i32* %17, align 4, !dbg !939
  call void @llvm.dbg.declare(metadata i32* %18, metadata !943, metadata !416), !dbg !944
  %211 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !945
  %212 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %211, i32 0, i32 7, !dbg !946
  %213 = load i64, i64* %212, align 8, !dbg !946
  %214 = trunc i64 %213 to i32, !dbg !945
  %215 = call i32 @calculate_mask_weight(i32 %214), !dbg !947
  store i32 %215, i32* %18, align 4, !dbg !944
  %216 = load i32, i32* %16, align 4, !dbg !948
  %217 = load i32, i32* %10, align 4, !dbg !950
  %218 = icmp uge i32 %216, %217, !dbg !951
  br i1 %218, label %219, label %237, !dbg !952

; <label>:219:                                    ; preds = %200
  %220 = load i32, i32* %17, align 4, !dbg !953
  %221 = load i32, i32* %12, align 4, !dbg !955
  %222 = icmp uge i32 %220, %221, !dbg !956
  br i1 %222, label %223, label %237, !dbg !957

; <label>:223:                                    ; preds = %219
  %224 = load i32, i32* %18, align 4, !dbg !958
  %225 = load i32, i32* %11, align 4, !dbg !959
  %226 = icmp uge i32 %224, %225, !dbg !960
  br i1 %226, label %227, label %237, !dbg !961

; <label>:227:                                    ; preds = %223
  %228 = load i32, i32* %16, align 4, !dbg !963
  store i32 %228, i32* %10, align 4, !dbg !965
  %229 = load i32, i32* %17, align 4, !dbg !966
  store i32 %229, i32* %12, align 4, !dbg !967
  %230 = load i32, i32* %18, align 4, !dbg !968
  store i32 %230, i32* %11, align 4, !dbg !969
  %231 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !970
  %232 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %231, i32 0, i32 0, !dbg !971
  %233 = load %struct.Visual*, %struct.Visual** %232, align 8, !dbg !971
  store %struct.Visual* %233, %struct.Visual** @g_visual, align 8, !dbg !972
  %234 = load %struct.XVisualInfo*, %struct.XVisualInfo** %13, align 8, !dbg !973
  %235 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %234, i32 0, i32 3, !dbg !974
  %236 = load i32, i32* %235, align 4, !dbg !974
  store i32 %236, i32* @g_depth, align 4, !dbg !975
  br label %237, !dbg !976

; <label>:237:                                    ; preds = %227, %223, %219, %200
  br label %238, !dbg !977

; <label>:238:                                    ; preds = %237, %197
  br label %239, !dbg !978

; <label>:239:                                    ; preds = %238, %150
  %240 = load i32, i32* %9, align 4, !dbg !979
  %241 = add nsw i32 %240, 1, !dbg !979
  store i32 %241, i32* %9, align 4, !dbg !979
  br label %52, !dbg !981, !llvm.loop !982

; <label>:242:                                    ; preds = %142, %52
  %243 = load %struct.XVisualInfo*, %struct.XVisualInfo** %7, align 8, !dbg !984
  %244 = bitcast %struct.XVisualInfo* %243 to i8*, !dbg !984
  %245 = call i32 @XFree(i8* %244), !dbg !985
  br label %246, !dbg !986

; <label>:246:                                    ; preds = %242, %43
  %247 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !987
  %248 = icmp ne %struct.Visual* %247, null, !dbg !989
  br i1 %248, label %249, label %262, !dbg !990

; <label>:249:                                    ; preds = %246
  store i32 0, i32* @g_owncolmap, align 4, !dbg !991
  %250 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !993
  %251 = getelementptr inbounds %struct.Visual, %struct.Visual* %250, i32 0, i32 3, !dbg !994
  %252 = load i64, i64* %251, align 8, !dbg !994
  %253 = trunc i64 %252 to i32, !dbg !993
  call void @calculate_shifts(i32 %253, i32* @g_red_shift_r, i32* @g_red_shift_l), !dbg !995
  %254 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !996
  %255 = getelementptr inbounds %struct.Visual, %struct.Visual* %254, i32 0, i32 4, !dbg !997
  %256 = load i64, i64* %255, align 8, !dbg !997
  %257 = trunc i64 %256 to i32, !dbg !996
  call void @calculate_shifts(i32 %257, i32* @g_green_shift_r, i32* @g_green_shift_l), !dbg !998
  %258 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !999
  %259 = getelementptr inbounds %struct.Visual, %struct.Visual* %258, i32 0, i32 5, !dbg !1000
  %260 = load i64, i64* %259, align 8, !dbg !1000
  %261 = trunc i64 %260 to i32, !dbg !999
  call void @calculate_shifts(i32 %261, i32* @g_blue_shift_r, i32* @g_blue_shift_l), !dbg !1001
  br label %285, !dbg !1002

; <label>:262:                                    ; preds = %246
  %263 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %8, i32 0, i32 4, !dbg !1003
  store i32 3, i32* %263, align 8, !dbg !1005
  %264 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %8, i32 0, i32 3, !dbg !1006
  store i32 8, i32* %264, align 4, !dbg !1007
  %265 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %8, i32 0, i32 8, !dbg !1008
  store i32 256, i32* %265, align 8, !dbg !1009
  %266 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1010
  %267 = call %struct.XVisualInfo* @XGetVisualInfo(%struct._XDisplay* %266, i64 140, %struct.XVisualInfo* %8, i32* %6), !dbg !1011
  store %struct.XVisualInfo* %267, %struct.XVisualInfo** %7, align 8, !dbg !1012
  %268 = load %struct.XVisualInfo*, %struct.XVisualInfo** %7, align 8, !dbg !1013
  %269 = icmp eq %struct.XVisualInfo* %268, null, !dbg !1015
  br i1 %269, label %270, label %276, !dbg !1016

; <label>:270:                                    ; preds = %262
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.45, i32 0, i32 0)), !dbg !1017
  %271 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1019
  %272 = call i32 @XCloseDisplay(%struct._XDisplay* %271), !dbg !1020
  %273 = load %struct.XPixmapFormatValues*, %struct.XPixmapFormatValues** %4, align 8, !dbg !1021
  %274 = bitcast %struct.XPixmapFormatValues* %273 to i8*, !dbg !1021
  %275 = call i32 @XFree(i8* %274), !dbg !1022
  store i32 0, i32* %2, align 4, !dbg !1023
  br label %329, !dbg !1023

; <label>:276:                                    ; preds = %262
  store i32 1, i32* @g_owncolmap, align 4, !dbg !1024
  %277 = load %struct.XVisualInfo*, %struct.XVisualInfo** %7, align 8, !dbg !1025
  %278 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %277, i64 0, !dbg !1025
  %279 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %278, i32 0, i32 0, !dbg !1026
  %280 = load %struct.Visual*, %struct.Visual** %279, align 8, !dbg !1026
  store %struct.Visual* %280, %struct.Visual** @g_visual, align 8, !dbg !1027
  %281 = load %struct.XVisualInfo*, %struct.XVisualInfo** %7, align 8, !dbg !1028
  %282 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %281, i64 0, !dbg !1028
  %283 = getelementptr inbounds %struct.XVisualInfo, %struct.XVisualInfo* %282, i32 0, i32 3, !dbg !1029
  %284 = load i32, i32* %283, align 4, !dbg !1029
  store i32 %284, i32* @g_depth, align 4, !dbg !1030
  br label %285

; <label>:285:                                    ; preds = %276, %249
  store i32 0, i32* @g_bpp, align 4, !dbg !1031
  store i32 0, i32* %9, align 4, !dbg !1032
  br label %286, !dbg !1034

; <label>:286:                                    ; preds = %322, %285
  %287 = load i32, i32* %9, align 4, !dbg !1035
  %288 = load i32, i32* %5, align 4, !dbg !1038
  %289 = icmp slt i32 %287, %288, !dbg !1039
  br i1 %289, label %290, label %325, !dbg !1040

; <label>:290:                                    ; preds = %286
  call void @llvm.dbg.declare(metadata %struct.XPixmapFormatValues** %19, metadata !1041, metadata !416), !dbg !1043
  %291 = load i32, i32* %9, align 4, !dbg !1044
  %292 = sext i32 %291 to i64, !dbg !1045
  %293 = load %struct.XPixmapFormatValues*, %struct.XPixmapFormatValues** %4, align 8, !dbg !1045
  %294 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %293, i64 %292, !dbg !1045
  store %struct.XPixmapFormatValues* %294, %struct.XPixmapFormatValues** %19, align 8, !dbg !1043
  %295 = load %struct.XPixmapFormatValues*, %struct.XPixmapFormatValues** %19, align 8, !dbg !1046
  %296 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %295, i32 0, i32 0, !dbg !1048
  %297 = load i32, i32* %296, align 4, !dbg !1048
  %298 = load i32, i32* @g_depth, align 4, !dbg !1049
  %299 = icmp eq i32 %297, %298, !dbg !1050
  br i1 %299, label %300, label %321, !dbg !1051

; <label>:300:                                    ; preds = %290
  %301 = load %struct.XPixmapFormatValues*, %struct.XPixmapFormatValues** %19, align 8, !dbg !1052
  %302 = getelementptr inbounds %struct.XPixmapFormatValues, %struct.XPixmapFormatValues* %301, i32 0, i32 1, !dbg !1054
  %303 = load i32, i32* %302, align 4, !dbg !1054
  store i32 %303, i32* @g_bpp, align 4, !dbg !1055
  %304 = load i32, i32* @g_no_translate_image, align 4, !dbg !1056
  %305 = icmp ne i32 %304, 0, !dbg !1056
  br i1 %305, label %306, label %320, !dbg !1058

; <label>:306:                                    ; preds = %300
  %307 = load i32, i32* @g_server_depth, align 4, !dbg !1059
  switch i32 %307, label %318 [
    i32 15, label %308
    i32 16, label %308
    i32 24, label %313
  ], !dbg !1061

; <label>:308:                                    ; preds = %306, %306
  %309 = load i32, i32* @g_bpp, align 4, !dbg !1062
  %310 = icmp ne i32 %309, 16, !dbg !1065
  br i1 %310, label %311, label %312, !dbg !1066

; <label>:311:                                    ; preds = %308
  store i32 0, i32* @g_no_translate_image, align 4, !dbg !1067
  br label %312, !dbg !1068

; <label>:312:                                    ; preds = %311, %308
  br label %319, !dbg !1069

; <label>:313:                                    ; preds = %306
  %314 = load i32, i32* @g_bpp, align 4, !dbg !1070
  %315 = icmp ne i32 %314, 24, !dbg !1072
  br i1 %315, label %316, label %317, !dbg !1073

; <label>:316:                                    ; preds = %313
  store i32 0, i32* @g_no_translate_image, align 4, !dbg !1074
  br label %317, !dbg !1075

; <label>:317:                                    ; preds = %316, %313
  br label %319, !dbg !1076

; <label>:318:                                    ; preds = %306
  store i32 0, i32* @g_no_translate_image, align 4, !dbg !1077
  br label %319, !dbg !1078

; <label>:319:                                    ; preds = %318, %317, %312
  br label %320, !dbg !1079

; <label>:320:                                    ; preds = %319, %300
  br label %325, !dbg !1080

; <label>:321:                                    ; preds = %290
  br label %322, !dbg !1081

; <label>:322:                                    ; preds = %321
  %323 = load i32, i32* %9, align 4, !dbg !1082
  %324 = add nsw i32 %323, 1, !dbg !1082
  store i32 %324, i32* %9, align 4, !dbg !1082
  br label %286, !dbg !1084, !llvm.loop !1085

; <label>:325:                                    ; preds = %320, %286
  %326 = load %struct.XPixmapFormatValues*, %struct.XPixmapFormatValues** %4, align 8, !dbg !1087
  %327 = bitcast %struct.XPixmapFormatValues* %326 to i8*, !dbg !1087
  %328 = call i32 @XFree(i8* %327), !dbg !1088
  store %struct.XPixmapFormatValues* null, %struct.XPixmapFormatValues** %4, align 8, !dbg !1089
  store i32 1, i32* %2, align 4, !dbg !1090
  br label %329, !dbg !1090

; <label>:329:                                    ; preds = %325, %270, %40
  %330 = load i32, i32* %2, align 4, !dbg !1091
  ret i32 %330, !dbg !1091
}

declare i64 @XCreateColormap(%struct._XDisplay*, i64, %struct.Visual*, i32) #2

declare %struct.XModifierKeymap* @XGetModifierMapping(%struct._XDisplay*) #2

; Function Attrs: nounwind uwtable
define internal void @xwin_refresh_pointer_map() #0 !dbg !1092 {
  %1 = alloca [32 x i8], align 16
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !1093, metadata !416), !dbg !1094
  call void @llvm.dbg.declare(metadata i32* %2, metadata !1095, metadata !416), !dbg !1096
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1097, metadata !416), !dbg !1098
  %4 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1099
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0, !dbg !1100
  %6 = call i32 @XGetPointerMapping(%struct._XDisplay* %4, i8* %5, i32 32), !dbg !1101
  store i32 %6, i32* %3, align 4, !dbg !1102
  %7 = load i32, i32* %3, align 4, !dbg !1103
  %8 = zext i32 %7 to i64, !dbg !1103
  %9 = icmp ugt i64 %8, 32, !dbg !1105
  br i1 %9, label %10, label %11, !dbg !1106

; <label>:10:                                     ; preds = %0
  store i32 32, i32* %3, align 4, !dbg !1107
  br label %11, !dbg !1108

; <label>:11:                                     ; preds = %10, %0
  %12 = load i32, i32* %3, align 4, !dbg !1109
  %13 = sub i32 %12, 1, !dbg !1111
  store i32 %13, i32* %2, align 4, !dbg !1112
  br label %14, !dbg !1113

; <label>:14:                                     ; preds = %37, %11
  %15 = load i32, i32* %2, align 4, !dbg !1114
  %16 = icmp sge i32 %15, 0, !dbg !1117
  br i1 %16, label %17, label %40, !dbg !1118

; <label>:17:                                     ; preds = %14
  %18 = load i32, i32* %2, align 4, !dbg !1119
  %19 = sext i32 %18 to i64, !dbg !1122
  %20 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i64 0, i64 %19, !dbg !1122
  %21 = load i8, i8* %20, align 1, !dbg !1122
  %22 = zext i8 %21 to i64, !dbg !1122
  %23 = icmp ugt i64 %22, 32, !dbg !1123
  br i1 %23, label %24, label %25, !dbg !1124

; <label>:24:                                     ; preds = %17
  br label %37, !dbg !1125

; <label>:25:                                     ; preds = %17
  %26 = load i32, i32* %2, align 4, !dbg !1126
  %27 = add nsw i32 %26, 1, !dbg !1127
  %28 = trunc i32 %27 to i8, !dbg !1126
  %29 = load i32, i32* %2, align 4, !dbg !1128
  %30 = sext i32 %29 to i64, !dbg !1129
  %31 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i64 0, i64 %30, !dbg !1129
  %32 = load i8, i8* %31, align 1, !dbg !1129
  %33 = zext i8 %32 to i32, !dbg !1129
  %34 = sub nsw i32 %33, 1, !dbg !1130
  %35 = sext i32 %34 to i64, !dbg !1131
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* @g_pointer_log_to_phys_map, i64 0, i64 %35, !dbg !1131
  store i8 %28, i8* %36, align 1, !dbg !1132
  br label %37, !dbg !1133

; <label>:37:                                     ; preds = %25, %24
  %38 = load i32, i32* %2, align 4, !dbg !1134
  %39 = add nsw i32 %38, -1, !dbg !1134
  store i32 %39, i32* %2, align 4, !dbg !1134
  br label %14, !dbg !1136, !llvm.loop !1137

; <label>:40:                                     ; preds = %14
  ret void, !dbg !1139
}

declare void @xkeymap_init() #2

declare %struct._XIM* @XOpenIM(%struct._XDisplay*, %struct._XrmHashBucketRec*, i8*, i8*) #2

declare void @xclip_init() #2

declare void @ewmh_init() #2

declare i32 @seamless_init() #2

; Function Attrs: nounwind uwtable
define void @ui_get_screen_size(i32*, i32*) #0 !dbg !1140 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  call void @llvm.dbg.declare(metadata i32** %3, metadata !1143, metadata !416), !dbg !1144
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !1145, metadata !416), !dbg !1146
  %5 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !1147
  %6 = getelementptr inbounds %struct.Screen, %struct.Screen* %5, i32 0, i32 3, !dbg !1148
  %7 = load i32, i32* %6, align 8, !dbg !1148
  %8 = load i32*, i32** %3, align 8, !dbg !1149
  store i32 %7, i32* %8, align 4, !dbg !1150
  %9 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !1151
  %10 = getelementptr inbounds %struct.Screen, %struct.Screen* %9, i32 0, i32 4, !dbg !1152
  %11 = load i32, i32* %10, align 4, !dbg !1152
  %12 = load i32*, i32** %4, align 8, !dbg !1153
  store i32 %11, i32* %12, align 4, !dbg !1154
  ret void, !dbg !1155
}

; Function Attrs: nounwind uwtable
define void @ui_get_screen_size_from_percentage(i32, i32, i32*, i32*) #0 !dbg !1156 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1159, metadata !416), !dbg !1160
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1161, metadata !416), !dbg !1162
  store i32* %2, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !1163, metadata !416), !dbg !1164
  store i32* %3, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !1165, metadata !416), !dbg !1166
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1167, metadata !416), !dbg !1168
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1169, metadata !416), !dbg !1170
  call void @ui_get_screen_size(i32* %9, i32* %10), !dbg !1171
  %11 = load i32, i32* %9, align 4, !dbg !1172
  %12 = load i32, i32* %5, align 4, !dbg !1173
  %13 = mul i32 %11, %12, !dbg !1174
  %14 = udiv i32 %13, 100, !dbg !1175
  %15 = load i32*, i32** %7, align 8, !dbg !1176
  store i32 %14, i32* %15, align 4, !dbg !1177
  %16 = load i32, i32* %10, align 4, !dbg !1178
  %17 = load i32, i32* %6, align 4, !dbg !1179
  %18 = mul i32 %16, %17, !dbg !1180
  %19 = udiv i32 %18, 100, !dbg !1181
  %20 = load i32*, i32** %8, align 8, !dbg !1182
  store i32 %19, i32* %20, align 4, !dbg !1183
  ret void, !dbg !1184
}

; Function Attrs: nounwind uwtable
define void @ui_get_workarea_size(i32*, i32*) #0 !dbg !1185 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  call void @llvm.dbg.declare(metadata i32** %3, metadata !1186, metadata !416), !dbg !1187
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !1188, metadata !416), !dbg !1189
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1190, metadata !416), !dbg !1191
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1192, metadata !416), !dbg !1193
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1194, metadata !416), !dbg !1195
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1196, metadata !416), !dbg !1197
  %9 = call i32 @get_current_workarea(i32* %5, i32* %6, i32* %7, i32* %8), !dbg !1198
  %10 = icmp eq i32 %9, 0, !dbg !1200
  br i1 %10, label %11, label %16, !dbg !1201

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* %7, align 4, !dbg !1202
  %13 = load i32*, i32** %3, align 8, !dbg !1204
  store i32 %12, i32* %13, align 4, !dbg !1205
  %14 = load i32, i32* %8, align 4, !dbg !1206
  %15 = load i32*, i32** %4, align 8, !dbg !1207
  store i32 %14, i32* %15, align 4, !dbg !1208
  store i32 1, i32* @g_using_full_workarea, align 4, !dbg !1209
  br label %19, !dbg !1210

; <label>:16:                                     ; preds = %2
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.6, i32 0, i32 0)), !dbg !1211
  %17 = load i32*, i32** %3, align 8, !dbg !1213
  %18 = load i32*, i32** %4, align 8, !dbg !1214
  call void @ui_get_screen_size(i32* %17, i32* %18), !dbg !1215
  br label %19

; <label>:19:                                     ; preds = %16, %11
  ret void, !dbg !1216
}

declare i32 @get_current_workarea(i32*, i32*, i32*, i32*) #2

; Function Attrs: nounwind uwtable
define void @ui_deinit() #0 !dbg !1217 {
  call void @xclip_deinit(), !dbg !1218
  %1 = load %struct._XIM*, %struct._XIM** @g_IM, align 8, !dbg !1219
  %2 = icmp ne %struct._XIM* %1, null, !dbg !1221
  br i1 %2, label %3, label %6, !dbg !1222

; <label>:3:                                      ; preds = %0
  %4 = load %struct._XIM*, %struct._XIM** @g_IM, align 8, !dbg !1223
  %5 = call i32 @XCloseIM(%struct._XIM* %4), !dbg !1224
  br label %6, !dbg !1224

; <label>:6:                                      ; preds = %3, %0
  %7 = load i8*, i8** @g_null_cursor, align 8, !dbg !1225
  %8 = icmp ne i8* %7, null, !dbg !1227
  br i1 %8, label %9, label %14, !dbg !1228

; <label>:9:                                      ; preds = %6
  %10 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1229
  %11 = load i8*, i8** @g_null_cursor, align 8, !dbg !1230
  %12 = ptrtoint i8* %11 to i64, !dbg !1231
  %13 = call i32 @XFreeCursor(%struct._XDisplay* %10, i64 %12), !dbg !1232
  br label %14, !dbg !1232

; <label>:14:                                     ; preds = %9, %6
  %15 = load %struct.XModifierKeymap*, %struct.XModifierKeymap** @g_mod_map, align 8, !dbg !1233
  %16 = call i32 @XFreeModifiermap(%struct.XModifierKeymap* %15), !dbg !1234
  %17 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1235
  %18 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !1236
  %19 = call i32 @XFreeGC(%struct._XDisplay* %17, %struct._XGC* %18), !dbg !1237
  %20 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1238
  %21 = call i32 @XCloseDisplay(%struct._XDisplay* %20), !dbg !1239
  store %struct._XDisplay* null, %struct._XDisplay** @g_display, align 8, !dbg !1240
  ret void, !dbg !1241
}

declare void @xclip_deinit() #2

declare i32 @XCloseIM(%struct._XIM*) #2

declare i32 @XFreeCursor(%struct._XDisplay*, i64) #2

declare i32 @XFreeModifiermap(%struct.XModifierKeymap*) #2

declare i32 @XFreeGC(%struct._XDisplay*, %struct._XGC*) #2

declare i32 @XCloseDisplay(%struct._XDisplay*) #2

; Function Attrs: nounwind uwtable
define void @ui_update_window_sizehints(i32, i32) #0 !dbg !1242 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.XSizeHints*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1245, metadata !416), !dbg !1246
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1247, metadata !416), !dbg !1248
  call void @llvm.dbg.declare(metadata %struct.XSizeHints** %5, metadata !1249, metadata !416), !dbg !1274
  %6 = call %struct.XSizeHints* @XAllocSizeHints(), !dbg !1275
  store %struct.XSizeHints* %6, %struct.XSizeHints** %5, align 8, !dbg !1276
  %7 = load %struct.XSizeHints*, %struct.XSizeHints** %5, align 8, !dbg !1277
  %8 = icmp ne %struct.XSizeHints* %7, null, !dbg !1277
  br i1 %8, label %9, label %19, !dbg !1279

; <label>:9:                                      ; preds = %2
  %10 = load %struct.XSizeHints*, %struct.XSizeHints** %5, align 8, !dbg !1280
  %11 = load i32, i32* %3, align 4, !dbg !1282
  %12 = load i32, i32* %4, align 4, !dbg !1283
  call void @get_sizehints(%struct.XSizeHints* %10, i32 %11, i32 %12), !dbg !1284
  %13 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1285
  %14 = load i64, i64* @g_wnd, align 8, !dbg !1286
  %15 = load %struct.XSizeHints*, %struct.XSizeHints** %5, align 8, !dbg !1287
  call void @XSetWMNormalHints(%struct._XDisplay* %13, i64 %14, %struct.XSizeHints* %15), !dbg !1288
  %16 = load %struct.XSizeHints*, %struct.XSizeHints** %5, align 8, !dbg !1289
  %17 = bitcast %struct.XSizeHints* %16 to i8*, !dbg !1289
  %18 = call i32 @XFree(i8* %17), !dbg !1290
  br label %19, !dbg !1291

; <label>:19:                                     ; preds = %9, %2
  ret void, !dbg !1292
}

declare %struct.XSizeHints* @XAllocSizeHints() #2

; Function Attrs: nounwind uwtable
define internal void @get_sizehints(%struct.XSizeHints*, i32, i32) #0 !dbg !1293 {
  %4 = alloca %struct.XSizeHints*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.XSizeHints* %0, %struct.XSizeHints** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.XSizeHints** %4, metadata !1296, metadata !416), !dbg !1297
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1298, metadata !416), !dbg !1299
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1300, metadata !416), !dbg !1301
  %7 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1302
  %8 = icmp eq %struct.XSizeHints* %7, null, !dbg !1304
  br i1 %8, label %9, label %10, !dbg !1305

; <label>:9:                                      ; preds = %3
  br label %49, !dbg !1306

; <label>:10:                                     ; preds = %3
  %11 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1307
  %12 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %11, i32 0, i32 0, !dbg !1308
  store i64 1, i64* %12, align 8, !dbg !1309
  %13 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1310
  %14 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %13, i32 0, i32 0, !dbg !1311
  %15 = load i64, i64* %14, align 8, !dbg !1312
  %16 = or i64 %15, 16, !dbg !1312
  store i64 %16, i64* %14, align 8, !dbg !1312
  %17 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1313
  %18 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %17, i32 0, i32 5, !dbg !1314
  store i32 200, i32* %18, align 8, !dbg !1315
  %19 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1316
  %20 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %19, i32 0, i32 6, !dbg !1317
  store i32 200, i32* %20, align 4, !dbg !1318
  %21 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1319
  %22 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %21, i32 0, i32 0, !dbg !1320
  %23 = load i64, i64* %22, align 8, !dbg !1321
  %24 = or i64 %23, 64, !dbg !1321
  store i64 %24, i64* %22, align 8, !dbg !1321
  %25 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1322
  %26 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %25, i32 0, i32 9, !dbg !1323
  store i32 2, i32* %26, align 8, !dbg !1324
  %27 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1325
  %28 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %27, i32 0, i32 10, !dbg !1326
  store i32 1, i32* %28, align 4, !dbg !1327
  %29 = load i32, i32* @g_seamless_rdp, align 4, !dbg !1328
  %30 = icmp ne i32 %29, 0, !dbg !1328
  br i1 %30, label %34, label %31, !dbg !1330

; <label>:31:                                     ; preds = %10
  %32 = load i32, i32* @g_dynamic_session_resize, align 4, !dbg !1331
  %33 = icmp ne i32 %32, 0, !dbg !1331
  br i1 %33, label %49, label %34, !dbg !1333

; <label>:34:                                     ; preds = %31, %10
  %35 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1334
  %36 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %35, i32 0, i32 0, !dbg !1336
  %37 = load i64, i64* %36, align 8, !dbg !1337
  %38 = or i64 %37, 32, !dbg !1337
  store i64 %38, i64* %36, align 8, !dbg !1337
  %39 = load i32, i32* %5, align 4, !dbg !1338
  %40 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1339
  %41 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %40, i32 0, i32 7, !dbg !1340
  store i32 %39, i32* %41, align 8, !dbg !1341
  %42 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1342
  %43 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %42, i32 0, i32 5, !dbg !1343
  store i32 %39, i32* %43, align 8, !dbg !1344
  %44 = load i32, i32* %6, align 4, !dbg !1345
  %45 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1346
  %46 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %45, i32 0, i32 8, !dbg !1347
  store i32 %44, i32* %46, align 4, !dbg !1348
  %47 = load %struct.XSizeHints*, %struct.XSizeHints** %4, align 8, !dbg !1349
  %48 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %47, i32 0, i32 6, !dbg !1350
  store i32 %44, i32* %48, align 4, !dbg !1351
  br label %49, !dbg !1352

; <label>:49:                                     ; preds = %9, %34, %31
  ret void, !dbg !1353
}

declare void @XSetWMNormalHints(%struct._XDisplay*, i64, %struct.XSizeHints*) #2

; Function Attrs: nounwind uwtable
define i32 @ui_create_window(i32, i32) #0 !dbg !1354 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [1 x i8], align 1
  %6 = alloca [24 x i8], align 16
  %7 = alloca %struct.XSetWindowAttributes, align 8
  %8 = alloca %struct.XClassHint*, align 8
  %9 = alloca %struct.XSizeHints*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %union._XEvent, align 8
  %14 = alloca [2 x i64], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1357, metadata !416), !dbg !1358
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1359, metadata !416), !dbg !1360
  call void @llvm.dbg.declare(metadata [1 x i8]* %5, metadata !1361, metadata !416), !dbg !1365
  %15 = bitcast [1 x i8]* %5 to i8*, !dbg !1365
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @ui_create_window.null_pointer_mask, i32 0, i32 0), i64 1, i32 1, i1 false), !dbg !1365
  call void @llvm.dbg.declare(metadata [24 x i8]* %6, metadata !1366, metadata !416), !dbg !1370
  %16 = bitcast [24 x i8]* %6 to i8*, !dbg !1370
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 24, i32 16, i1 false), !dbg !1370
  call void @llvm.dbg.declare(metadata %struct.XSetWindowAttributes* %7, metadata !1371, metadata !416), !dbg !1390
  call void @llvm.dbg.declare(metadata %struct.XClassHint** %8, metadata !1391, metadata !416), !dbg !1398
  call void @llvm.dbg.declare(metadata %struct.XSizeHints** %9, metadata !1399, metadata !416), !dbg !1400
  call void @llvm.dbg.declare(metadata i64* %10, metadata !1401, metadata !416), !dbg !1402
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1403, metadata !416), !dbg !1404
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1405, metadata !416), !dbg !1406
  call void @llvm.dbg.declare(metadata %union._XEvent* %13, metadata !1407, metadata !416), !dbg !1832
  store i32 0, i32* @g_window_width, align 4, !dbg !1833
  store i32 0, i32* @g_window_height, align 4, !dbg !1834
  %17 = load i32, i32* %3, align 4, !dbg !1835
  %18 = load i32, i32* %4, align 4, !dbg !1836
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i32 0, i32 0), i32 %17, i32 %18), !dbg !1837
  %19 = load i32, i32* @g_xpos, align 4, !dbg !1838
  %20 = icmp slt i32 %19, 0, !dbg !1840
  br i1 %20, label %28, label %21, !dbg !1841

; <label>:21:                                     ; preds = %2
  %22 = load i32, i32* @g_xpos, align 4, !dbg !1842
  %23 = icmp eq i32 %22, 0, !dbg !1844
  br i1 %23, label %24, label %36, !dbg !1845

; <label>:24:                                     ; preds = %21
  %25 = load i32, i32* @g_pos, align 4, !dbg !1846
  %26 = and i32 %25, 2, !dbg !1848
  %27 = icmp ne i32 %26, 0, !dbg !1848
  br i1 %27, label %28, label %36, !dbg !1849

; <label>:28:                                     ; preds = %24, %2
  %29 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !1850
  %30 = getelementptr inbounds %struct.Screen, %struct.Screen* %29, i32 0, i32 3, !dbg !1851
  %31 = load i32, i32* %30, align 8, !dbg !1851
  %32 = load i32, i32* @g_xpos, align 4, !dbg !1852
  %33 = add nsw i32 %31, %32, !dbg !1853
  %34 = load i32, i32* %3, align 4, !dbg !1854
  %35 = sub i32 %33, %34, !dbg !1855
  store i32 %35, i32* @g_xpos, align 4, !dbg !1856
  br label %36, !dbg !1857

; <label>:36:                                     ; preds = %28, %24, %21
  %37 = load i32, i32* @g_ypos, align 4, !dbg !1858
  %38 = icmp slt i32 %37, 0, !dbg !1860
  br i1 %38, label %46, label %39, !dbg !1861

; <label>:39:                                     ; preds = %36
  %40 = load i32, i32* @g_ypos, align 4, !dbg !1862
  %41 = icmp eq i32 %40, 0, !dbg !1864
  br i1 %41, label %42, label %54, !dbg !1865

; <label>:42:                                     ; preds = %39
  %43 = load i32, i32* @g_pos, align 4, !dbg !1866
  %44 = and i32 %43, 4, !dbg !1868
  %45 = icmp ne i32 %44, 0, !dbg !1868
  br i1 %45, label %46, label %54, !dbg !1869

; <label>:46:                                     ; preds = %42, %36
  %47 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !1870
  %48 = getelementptr inbounds %struct.Screen, %struct.Screen* %47, i32 0, i32 4, !dbg !1871
  %49 = load i32, i32* %48, align 4, !dbg !1871
  %50 = load i32, i32* @g_ypos, align 4, !dbg !1872
  %51 = add nsw i32 %49, %50, !dbg !1873
  %52 = load i32, i32* %4, align 4, !dbg !1874
  %53 = sub i32 %51, %52, !dbg !1875
  store i32 %53, i32* @g_ypos, align 4, !dbg !1876
  br label %54, !dbg !1877

; <label>:54:                                     ; preds = %46, %42, %39
  %55 = call i64 @get_window_attribs(%struct.XSetWindowAttributes* %7), !dbg !1878
  store i64 %55, i64* %10, align 8, !dbg !1879
  %56 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1880
  %57 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !1881
  %58 = getelementptr inbounds %struct.Screen, %struct.Screen* %57, i32 0, i32 2, !dbg !1882
  %59 = load i64, i64* %58, align 8, !dbg !1882
  %60 = load i32, i32* @g_xpos, align 4, !dbg !1883
  %61 = load i32, i32* @g_ypos, align 4, !dbg !1884
  %62 = load i32, i32* %3, align 4, !dbg !1885
  %63 = load i32, i32* %4, align 4, !dbg !1886
  %64 = load i32, i32* @g_depth, align 4, !dbg !1887
  %65 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !1888
  %66 = load i64, i64* %10, align 8, !dbg !1889
  %67 = call i64 @XCreateWindow(%struct._XDisplay* %56, i64 %59, i32 %60, i32 %61, i32 %62, i32 %63, i32 0, i32 %64, i32 1, %struct.Visual* %65, i64 %66, %struct.XSetWindowAttributes* %7), !dbg !1890
  store i64 %67, i64* @g_wnd, align 8, !dbg !1891
  %68 = load i64, i64* @g_wnd, align 8, !dbg !1892
  %69 = call i32 @getpid() #9, !dbg !1893
  call void @ewmh_set_wm_pid(i64 %68, i32 %69), !dbg !1894
  %70 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1896
  %71 = load i64, i64* @g_wnd, align 8, !dbg !1897
  call void @set_wm_client_machine(%struct._XDisplay* %70, i64 %71), !dbg !1898
  %72 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !1899
  %73 = icmp eq %struct._XGC* %72, null, !dbg !1901
  br i1 %73, label %74, label %78, !dbg !1902

; <label>:74:                                     ; preds = %54
  %75 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1903
  %76 = load i64, i64* @g_wnd, align 8, !dbg !1905
  %77 = call %struct._XGC* @XCreateGC(%struct._XDisplay* %75, i64 %76, i64 0, %struct.XGCValues* null), !dbg !1906
  store %struct._XGC* %77, %struct._XGC** @g_gc, align 8, !dbg !1907
  call void @ui_reset_clip(), !dbg !1908
  br label %78, !dbg !1909

; <label>:78:                                     ; preds = %74, %54
  %79 = load %struct._XGC*, %struct._XGC** @g_create_bitmap_gc, align 8, !dbg !1910
  %80 = icmp eq %struct._XGC* %79, null, !dbg !1912
  br i1 %80, label %81, label %85, !dbg !1913

; <label>:81:                                     ; preds = %78
  %82 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1914
  %83 = load i64, i64* @g_wnd, align 8, !dbg !1915
  %84 = call %struct._XGC* @XCreateGC(%struct._XDisplay* %82, i64 %83, i64 0, %struct.XGCValues* null), !dbg !1916
  store %struct._XGC* %84, %struct._XGC** @g_create_bitmap_gc, align 8, !dbg !1917
  br label %85, !dbg !1918

; <label>:85:                                     ; preds = %81, %78
  %86 = load i32, i32* @g_ownbackstore, align 4, !dbg !1919
  %87 = icmp ne i32 %86, 0, !dbg !1921
  br i1 %87, label %88, label %110, !dbg !1922

; <label>:88:                                     ; preds = %85
  %89 = load i64, i64* @g_backstore, align 8, !dbg !1923
  %90 = icmp eq i64 %89, 0, !dbg !1925
  br i1 %90, label %91, label %110, !dbg !1926

; <label>:91:                                     ; preds = %88
  %92 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1927
  %93 = load i64, i64* @g_wnd, align 8, !dbg !1929
  %94 = load i32, i32* %3, align 4, !dbg !1930
  %95 = load i32, i32* %4, align 4, !dbg !1931
  %96 = load i32, i32* @g_depth, align 4, !dbg !1932
  %97 = call i64 @XCreatePixmap(%struct._XDisplay* %92, i64 %93, i32 %94, i32 %95, i32 %96), !dbg !1933
  store i64 %97, i64* @g_backstore, align 8, !dbg !1934
  %98 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1935
  %99 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !1936
  %100 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !1937
  %101 = getelementptr inbounds %struct.Screen, %struct.Screen* %100, i32 0, i32 14, !dbg !1938
  %102 = load i64, i64* %101, align 8, !dbg !1938
  %103 = call i32 @XSetForeground(%struct._XDisplay* %98, %struct._XGC* %99, i64 %102), !dbg !1939
  %104 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1940
  %105 = load i64, i64* @g_backstore, align 8, !dbg !1941
  %106 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !1942
  %107 = load i32, i32* %3, align 4, !dbg !1943
  %108 = load i32, i32* %4, align 4, !dbg !1944
  %109 = call i32 @XFillRectangle(%struct._XDisplay* %104, i64 %105, %struct._XGC* %106, i32 0, i32 0, i32 %107, i32 %108), !dbg !1945
  br label %110, !dbg !1946

; <label>:110:                                    ; preds = %91, %88, %85
  %111 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1947
  %112 = load i64, i64* @g_wnd, align 8, !dbg !1948
  %113 = call i32 @XStoreName(%struct._XDisplay* %111, i64 %112, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @g_title, i32 0, i32 0)), !dbg !1949
  %114 = load i64, i64* @g_wnd, align 8, !dbg !1950
  call void @ewmh_set_wm_name(i64 %114, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @g_title, i32 0, i32 0)), !dbg !1951
  %115 = load i32, i32* @g_hide_decorations, align 4, !dbg !1952
  %116 = icmp ne i32 %115, 0, !dbg !1952
  br i1 %116, label %117, label %119, !dbg !1954

; <label>:117:                                    ; preds = %110
  %118 = load i64, i64* @g_wnd, align 8, !dbg !1955
  call void @mwm_hide_decorations(i64 %118), !dbg !1956
  br label %119, !dbg !1956

; <label>:119:                                    ; preds = %117, %110
  %120 = call %struct.XClassHint* @XAllocClassHint(), !dbg !1957
  store %struct.XClassHint* %120, %struct.XClassHint** %8, align 8, !dbg !1958
  %121 = load %struct.XClassHint*, %struct.XClassHint** %8, align 8, !dbg !1959
  %122 = icmp ne %struct.XClassHint* %121, null, !dbg !1961
  br i1 %122, label %123, label %135, !dbg !1962

; <label>:123:                                    ; preds = %119
  %124 = load %struct.XClassHint*, %struct.XClassHint** %8, align 8, !dbg !1963
  %125 = getelementptr inbounds %struct.XClassHint, %struct.XClassHint* %124, i32 0, i32 1, !dbg !1965
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i8** %125, align 8, !dbg !1966
  %126 = load %struct.XClassHint*, %struct.XClassHint** %8, align 8, !dbg !1967
  %127 = getelementptr inbounds %struct.XClassHint, %struct.XClassHint* %126, i32 0, i32 0, !dbg !1968
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i8** %127, align 8, !dbg !1969
  %128 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1970
  %129 = load i64, i64* @g_wnd, align 8, !dbg !1971
  %130 = load %struct.XClassHint*, %struct.XClassHint** %8, align 8, !dbg !1972
  %131 = call i32 @XSetClassHint(%struct._XDisplay* %128, i64 %129, %struct.XClassHint* %130), !dbg !1973
  %132 = load %struct.XClassHint*, %struct.XClassHint** %8, align 8, !dbg !1974
  %133 = bitcast %struct.XClassHint* %132 to i8*, !dbg !1974
  %134 = call i32 @XFree(i8* %133), !dbg !1975
  br label %135, !dbg !1976

; <label>:135:                                    ; preds = %123, %119
  %136 = call %struct.XSizeHints* @XAllocSizeHints(), !dbg !1977
  store %struct.XSizeHints* %136, %struct.XSizeHints** %9, align 8, !dbg !1978
  %137 = load %struct.XSizeHints*, %struct.XSizeHints** %9, align 8, !dbg !1979
  %138 = icmp ne %struct.XSizeHints* %137, null, !dbg !1979
  br i1 %138, label %139, label %149, !dbg !1981

; <label>:139:                                    ; preds = %135
  %140 = load %struct.XSizeHints*, %struct.XSizeHints** %9, align 8, !dbg !1982
  %141 = load i32, i32* %3, align 4, !dbg !1984
  %142 = load i32, i32* %4, align 4, !dbg !1985
  call void @get_sizehints(%struct.XSizeHints* %140, i32 %141, i32 %142), !dbg !1986
  %143 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1987
  %144 = load i64, i64* @g_wnd, align 8, !dbg !1988
  %145 = load %struct.XSizeHints*, %struct.XSizeHints** %9, align 8, !dbg !1989
  call void @XSetWMNormalHints(%struct._XDisplay* %143, i64 %144, %struct.XSizeHints* %145), !dbg !1990
  %146 = load %struct.XSizeHints*, %struct.XSizeHints** %9, align 8, !dbg !1991
  %147 = bitcast %struct.XSizeHints* %146 to i8*, !dbg !1991
  %148 = call i32 @XFree(i8* %147), !dbg !1992
  br label %149, !dbg !1993

; <label>:149:                                    ; preds = %139, %135
  %150 = load i32, i32* @g_embed_wnd, align 4, !dbg !1994
  %151 = icmp ne i32 %150, 0, !dbg !1994
  br i1 %151, label %152, label %158, !dbg !1996

; <label>:152:                                    ; preds = %149
  %153 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !1997
  %154 = load i64, i64* @g_wnd, align 8, !dbg !1999
  %155 = load i32, i32* @g_embed_wnd, align 4, !dbg !2000
  %156 = zext i32 %155 to i64, !dbg !2001
  %157 = call i32 @XReparentWindow(%struct._XDisplay* %153, i64 %154, i64 %156, i32 0, i32 0), !dbg !2002
  br label %158, !dbg !2003

; <label>:158:                                    ; preds = %152, %149
  call void @get_input_mask(i64* %11), !dbg !2004
  %159 = load %struct._XIM*, %struct._XIM** @g_IM, align 8, !dbg !2005
  %160 = icmp ne %struct._XIM* %159, null, !dbg !2007
  br i1 %160, label %161, label %177, !dbg !2008

; <label>:161:                                    ; preds = %158
  %162 = load %struct._XIM*, %struct._XIM** @g_IM, align 8, !dbg !2009
  %163 = load i64, i64* @g_wnd, align 8, !dbg !2011
  %164 = load i64, i64* @g_wnd, align 8, !dbg !2012
  %165 = call %struct._XIC* (%struct._XIM*, ...) @XCreateIC(%struct._XIM* %162, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i64 1032, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0), i64 %163, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), i64 %164, i8* null), !dbg !2013
  store %struct._XIC* %165, %struct._XIC** @g_IC, align 8, !dbg !2014
  %166 = load %struct._XIC*, %struct._XIC** @g_IC, align 8, !dbg !2015
  %167 = icmp ne %struct._XIC* %166, null, !dbg !2017
  br i1 %167, label %168, label %176, !dbg !2018

; <label>:168:                                    ; preds = %161
  %169 = load %struct._XIC*, %struct._XIC** @g_IC, align 8, !dbg !2019
  %170 = call i8* (%struct._XIC*, ...) @XGetICValues(%struct._XIC* %169, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i64* %12, i8* null), !dbg !2021
  %171 = icmp eq i8* %170, null, !dbg !2022
  br i1 %171, label %172, label %176, !dbg !2023

; <label>:172:                                    ; preds = %168
  %173 = load i64, i64* %12, align 8, !dbg !2025
  %174 = load i64, i64* %11, align 8, !dbg !2026
  %175 = or i64 %174, %173, !dbg !2026
  store i64 %175, i64* %11, align 8, !dbg !2026
  br label %176, !dbg !2027

; <label>:176:                                    ; preds = %172, %168, %161
  br label %177, !dbg !2028

; <label>:177:                                    ; preds = %176, %158
  %178 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2029
  %179 = load i64, i64* @g_wnd, align 8, !dbg !2030
  %180 = load i64, i64* %11, align 8, !dbg !2031
  %181 = call i32 @XSelectInput(%struct._XDisplay* %178, i64 %179, i64 %180), !dbg !2032
  %182 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2033
  %183 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !2034
  %184 = getelementptr inbounds %struct.Screen, %struct.Screen* %183, i32 0, i32 2, !dbg !2035
  %185 = load i64, i64* %184, align 8, !dbg !2035
  %186 = call i32 @XSelectInput(%struct._XDisplay* %182, i64 %185, i64 131072), !dbg !2036
  %187 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2037
  %188 = load i64, i64* @g_wnd, align 8, !dbg !2038
  %189 = call i32 @XMapWindow(%struct._XDisplay* %187, i64 %188), !dbg !2039
  br label %190, !dbg !2040, !llvm.loop !2041

; <label>:190:                                    ; preds = %193, %177
  %191 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2042
  %192 = call i32 @XMaskEvent(%struct._XDisplay* %191, i64 65536, %union._XEvent* %13), !dbg !2044
  br label %193, !dbg !2045

; <label>:193:                                    ; preds = %190
  %194 = bitcast %union._XEvent* %13 to i32*, !dbg !2046
  %195 = load i32, i32* %194, align 8, !dbg !2046
  %196 = icmp ne i32 %195, 15, !dbg !2047
  br i1 %196, label %190, label %197, !dbg !2048, !llvm.loop !2041

; <label>:197:                                    ; preds = %193
  %198 = bitcast %union._XEvent* %13 to %struct.XVisibilityEvent*, !dbg !2050
  %199 = getelementptr inbounds %struct.XVisibilityEvent, %struct.XVisibilityEvent* %198, i32 0, i32 5, !dbg !2051
  %200 = load i32, i32* %199, align 8, !dbg !2051
  %201 = icmp eq i32 %200, 0, !dbg !2052
  %202 = zext i1 %201 to i32, !dbg !2052
  store i32 %202, i32* @g_Unobscured, align 4, !dbg !2053
  store i32 0, i32* @g_focused, align 4, !dbg !2054
  store i32 0, i32* @g_mouse_in_wnd, align 4, !dbg !2055
  %203 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2056
  %204 = call i64 @XInternAtom(%struct._XDisplay* %203, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i32 1), !dbg !2057
  store i64 %204, i64* @g_protocol_atom, align 8, !dbg !2058
  %205 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2059
  %206 = call i64 @XInternAtom(%struct._XDisplay* %205, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i32 0, i32 0), i32 1), !dbg !2060
  store i64 %206, i64* @g_kill_atom, align 8, !dbg !2061
  call void @llvm.dbg.declare(metadata [2 x i64]* %14, metadata !2062, metadata !416), !dbg !2066
  %207 = getelementptr inbounds [2 x i64], [2 x i64]* %14, i64 0, i64 0, !dbg !2067
  %208 = load i64, i64* @g_net_wm_ping_atom, align 8, !dbg !2068
  store i64 %208, i64* %207, align 8, !dbg !2067
  %209 = getelementptr inbounds i64, i64* %207, i64 1, !dbg !2067
  %210 = load i64, i64* @g_kill_atom, align 8, !dbg !2069
  store i64 %210, i64* %209, align 8, !dbg !2067
  %211 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2070
  %212 = load i64, i64* @g_wnd, align 8, !dbg !2071
  %213 = getelementptr inbounds [2 x i64], [2 x i64]* %14, i32 0, i32 0, !dbg !2072
  %214 = call i32 @XSetWMProtocols(%struct._XDisplay* %211, i64 %212, i64* %213, i32 2), !dbg !2073
  %215 = load i8*, i8** @g_null_cursor, align 8, !dbg !2074
  %216 = icmp eq i8* %215, null, !dbg !2076
  br i1 %216, label %217, label %221, !dbg !2077

; <label>:217:                                    ; preds = %197
  %218 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i32 0, i32 0, !dbg !2078
  %219 = getelementptr inbounds [24 x i8], [24 x i8]* %6, i32 0, i32 0, !dbg !2079
  %220 = call i8* @ui_create_cursor(i32 0, i32 0, i32 1, i32 1, i8* %218, i8* %219, i32 24), !dbg !2080
  store i8* %220, i8** @g_null_cursor, align 8, !dbg !2081
  br label %221, !dbg !2082

; <label>:221:                                    ; preds = %217, %197
  %222 = load i32, i32* @g_seamless_rdp, align 4, !dbg !2083
  %223 = icmp ne i32 %222, 0, !dbg !2083
  br i1 %223, label %224, label %225, !dbg !2085

; <label>:224:                                    ; preds = %221
  call void @seamless_reset_state(), !dbg !2086
  call void @seamless_restack_test(), !dbg !2088
  br label %225, !dbg !2089

; <label>:225:                                    ; preds = %224, %221
  ret i32 1, !dbg !2090
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define internal i64 @get_window_attribs(%struct.XSetWindowAttributes*) #0 !dbg !2091 {
  %2 = alloca %struct.XSetWindowAttributes*, align 8
  %3 = alloca i64, align 8
  store %struct.XSetWindowAttributes* %0, %struct.XSetWindowAttributes** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.XSetWindowAttributes** %2, metadata !2095, metadata !416), !dbg !2096
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2097, metadata !416), !dbg !2098
  store i64 0, i64* %3, align 8, !dbg !2098
  store i64 8778, i64* %3, align 8, !dbg !2099
  %4 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !2100
  %5 = getelementptr inbounds %struct.Screen, %struct.Screen* %4, i32 0, i32 14, !dbg !2101
  %6 = load i64, i64* %5, align 8, !dbg !2101
  %7 = load %struct.XSetWindowAttributes*, %struct.XSetWindowAttributes** %2, align 8, !dbg !2102
  %8 = getelementptr inbounds %struct.XSetWindowAttributes, %struct.XSetWindowAttributes* %7, i32 0, i32 1, !dbg !2103
  store i64 %6, i64* %8, align 8, !dbg !2104
  %9 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !2105
  %10 = getelementptr inbounds %struct.Screen, %struct.Screen* %9, i32 0, i32 13, !dbg !2106
  %11 = load i64, i64* %10, align 8, !dbg !2106
  %12 = load %struct.XSetWindowAttributes*, %struct.XSetWindowAttributes** %2, align 8, !dbg !2107
  %13 = getelementptr inbounds %struct.XSetWindowAttributes, %struct.XSetWindowAttributes* %12, i32 0, i32 3, !dbg !2108
  store i64 %11, i64* %13, align 8, !dbg !2109
  %14 = load i32, i32* @g_ownbackstore, align 4, !dbg !2110
  %15 = icmp ne i32 %14, 0, !dbg !2110
  %16 = select i1 %15, i32 0, i32 2, !dbg !2110
  %17 = load %struct.XSetWindowAttributes*, %struct.XSetWindowAttributes** %2, align 8, !dbg !2111
  %18 = getelementptr inbounds %struct.XSetWindowAttributes, %struct.XSetWindowAttributes* %17, i32 0, i32 6, !dbg !2112
  store i32 %16, i32* %18, align 8, !dbg !2113
  %19 = load i32, i32* @g_fullscreen, align 4, !dbg !2114
  %20 = load %struct.XSetWindowAttributes*, %struct.XSetWindowAttributes** %2, align 8, !dbg !2115
  %21 = getelementptr inbounds %struct.XSetWindowAttributes, %struct.XSetWindowAttributes* %20, i32 0, i32 12, !dbg !2116
  store i32 %19, i32* %21, align 8, !dbg !2117
  %22 = load i64, i64* @g_xcolmap, align 8, !dbg !2118
  %23 = load %struct.XSetWindowAttributes*, %struct.XSetWindowAttributes** %2, align 8, !dbg !2119
  %24 = getelementptr inbounds %struct.XSetWindowAttributes, %struct.XSetWindowAttributes* %23, i32 0, i32 13, !dbg !2120
  store i64 %22, i64* %24, align 8, !dbg !2121
  %25 = load i64, i64* %3, align 8, !dbg !2122
  ret i64 %25, !dbg !2123
}

declare i64 @XCreateWindow(%struct._XDisplay*, i64, i32, i32, i32, i32, i32, i32, i32, %struct.Visual*, i64, %struct.XSetWindowAttributes*) #2

declare void @ewmh_set_wm_pid(i64, i32) #2

; Function Attrs: nounwind
declare i32 @getpid() #4

; Function Attrs: nounwind uwtable
define internal void @set_wm_client_machine(%struct._XDisplay*, i64) #0 !dbg !2124 {
  %3 = alloca %struct._XDisplay*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.XTextProperty, align 8
  %6 = alloca [64 x i8], align 16
  store %struct._XDisplay* %0, %struct._XDisplay** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._XDisplay** %3, metadata !2127, metadata !416), !dbg !2128
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2129, metadata !416), !dbg !2130
  call void @llvm.dbg.declare(metadata %struct.XTextProperty* %5, metadata !2131, metadata !416), !dbg !2139
  call void @llvm.dbg.declare(metadata [64 x i8]* %6, metadata !2140, metadata !416), !dbg !2144
  %7 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i32 0, i32 0, !dbg !2145
  %8 = call i32 @gethostname(i8* %7, i64 64) #9, !dbg !2147
  %9 = icmp ne i32 %8, 0, !dbg !2148
  br i1 %9, label %10, label %11, !dbg !2149

; <label>:10:                                     ; preds = %2
  br label %21, !dbg !2150

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i32 0, i32 0, !dbg !2151
  %13 = getelementptr inbounds %struct.XTextProperty, %struct.XTextProperty* %5, i32 0, i32 0, !dbg !2152
  store i8* %12, i8** %13, align 8, !dbg !2153
  %14 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i32 0, i32 0, !dbg !2154
  %15 = call i64 @strlen(i8* %14) #10, !dbg !2155
  %16 = getelementptr inbounds %struct.XTextProperty, %struct.XTextProperty* %5, i32 0, i32 3, !dbg !2156
  store i64 %15, i64* %16, align 8, !dbg !2157
  %17 = getelementptr inbounds %struct.XTextProperty, %struct.XTextProperty* %5, i32 0, i32 1, !dbg !2158
  store i64 31, i64* %17, align 8, !dbg !2159
  %18 = getelementptr inbounds %struct.XTextProperty, %struct.XTextProperty* %5, i32 0, i32 2, !dbg !2160
  store i32 8, i32* %18, align 8, !dbg !2161
  %19 = load %struct._XDisplay*, %struct._XDisplay** %3, align 8, !dbg !2162
  %20 = load i64, i64* %4, align 8, !dbg !2163
  call void @XSetWMClientMachine(%struct._XDisplay* %19, i64 %20, %struct.XTextProperty* %5), !dbg !2164
  br label %21, !dbg !2165

; <label>:21:                                     ; preds = %11, %10
  ret void, !dbg !2166
}

declare %struct._XGC* @XCreateGC(%struct._XDisplay*, i64, i64, %struct.XGCValues*) #2

; Function Attrs: nounwind uwtable
define void @ui_reset_clip() #0 !dbg !2168 {
  %1 = alloca %struct.XWindowAttributes, align 8
  call void @llvm.dbg.declare(metadata %struct.XWindowAttributes* %1, metadata !2169, metadata !416), !dbg !2196
  %2 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2197
  %3 = load i64, i64* @g_wnd, align 8, !dbg !2198
  %4 = call i32 @XGetWindowAttributes(%struct._XDisplay* %2, i64 %3, %struct.XWindowAttributes* %1), !dbg !2199
  %5 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %1, i32 0, i32 2, !dbg !2200
  %6 = load i32, i32* %5, align 8, !dbg !2200
  %7 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %1, i32 0, i32 3, !dbg !2201
  %8 = load i32, i32* %7, align 4, !dbg !2201
  call void @ui_set_clip(i32 0, i32 0, i32 %6, i32 %8), !dbg !2202
  ret void, !dbg !2203
}

declare i64 @XCreatePixmap(%struct._XDisplay*, i64, i32, i32, i32) #2

declare i32 @XSetForeground(%struct._XDisplay*, %struct._XGC*, i64) #2

declare i32 @XFillRectangle(%struct._XDisplay*, i64, %struct._XGC*, i32, i32, i32, i32) #2

declare i32 @XStoreName(%struct._XDisplay*, i64, i8*) #2

declare void @ewmh_set_wm_name(i64, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @mwm_hide_decorations(i64) #0 !dbg !2204 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.PropMotifWmHints, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !2207, metadata !416), !dbg !2208
  call void @llvm.dbg.declare(metadata %struct.PropMotifWmHints* %3, metadata !2209, metadata !416), !dbg !2218
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2219, metadata !416), !dbg !2220
  %5 = getelementptr inbounds %struct.PropMotifWmHints, %struct.PropMotifWmHints* %3, i32 0, i32 0, !dbg !2221
  store i64 2, i64* %5, align 8, !dbg !2222
  %6 = getelementptr inbounds %struct.PropMotifWmHints, %struct.PropMotifWmHints* %3, i32 0, i32 2, !dbg !2223
  store i64 0, i64* %6, align 8, !dbg !2224
  %7 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2225
  %8 = call i64 @XInternAtom(%struct._XDisplay* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i32 0, i32 0), i32 0), !dbg !2226
  store i64 %8, i64* %4, align 8, !dbg !2227
  %9 = load i64, i64* %4, align 8, !dbg !2228
  %10 = icmp ne i64 %9, 0, !dbg !2228
  br i1 %10, label %12, label %11, !dbg !2230

; <label>:11:                                     ; preds = %1
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.47, i32 0, i32 0)), !dbg !2231
  br label %19, !dbg !2233

; <label>:12:                                     ; preds = %1
  %13 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2234
  %14 = load i64, i64* %2, align 8, !dbg !2235
  %15 = load i64, i64* %4, align 8, !dbg !2236
  %16 = load i64, i64* %4, align 8, !dbg !2237
  %17 = bitcast %struct.PropMotifWmHints* %3 to i8*, !dbg !2238
  %18 = call i32 @XChangeProperty(%struct._XDisplay* %13, i64 %14, i64 %15, i64 %16, i32 32, i32 0, i8* %17, i32 5), !dbg !2239
  br label %19, !dbg !2240

; <label>:19:                                     ; preds = %12, %11
  ret void, !dbg !2241
}

declare %struct.XClassHint* @XAllocClassHint() #2

declare i32 @XSetClassHint(%struct._XDisplay*, i64, %struct.XClassHint*) #2

declare i32 @XReparentWindow(%struct._XDisplay*, i64, i64, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @get_input_mask(i64*) #0 !dbg !2243 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  call void @llvm.dbg.declare(metadata i64** %2, metadata !2247, metadata !416), !dbg !2248
  %3 = load i64*, i64** %2, align 8, !dbg !2249
  store i64 2293775, i64* %3, align 8, !dbg !2250
  %4 = load i32, i32* @g_sendmotion, align 4, !dbg !2251
  %5 = icmp ne i32 %4, 0, !dbg !2251
  br i1 %5, label %6, label %10, !dbg !2253

; <label>:6:                                      ; preds = %1
  %7 = load i64*, i64** %2, align 8, !dbg !2254
  %8 = load i64, i64* %7, align 8, !dbg !2255
  %9 = or i64 %8, 64, !dbg !2255
  store i64 %9, i64* %7, align 8, !dbg !2255
  br label %10, !dbg !2256

; <label>:10:                                     ; preds = %6, %1
  %11 = load i32, i32* @g_ownbackstore, align 4, !dbg !2257
  %12 = icmp ne i32 %11, 0, !dbg !2257
  br i1 %12, label %13, label %17, !dbg !2259

; <label>:13:                                     ; preds = %10
  %14 = load i64*, i64** %2, align 8, !dbg !2260
  %15 = load i64, i64* %14, align 8, !dbg !2261
  %16 = or i64 %15, 32768, !dbg !2261
  store i64 %16, i64* %14, align 8, !dbg !2261
  br label %17, !dbg !2262

; <label>:17:                                     ; preds = %13, %10
  %18 = load i32, i32* @g_fullscreen, align 4, !dbg !2263
  %19 = icmp ne i32 %18, 0, !dbg !2263
  br i1 %19, label %23, label %20, !dbg !2265

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* @g_grab_keyboard, align 4, !dbg !2266
  %22 = icmp ne i32 %21, 0, !dbg !2266
  br i1 %22, label %23, label %27, !dbg !2268

; <label>:23:                                     ; preds = %20, %17
  %24 = load i64*, i64** %2, align 8, !dbg !2269
  %25 = load i64, i64* %24, align 8, !dbg !2270
  %26 = or i64 %25, 16, !dbg !2270
  store i64 %26, i64* %24, align 8, !dbg !2270
  br label %27, !dbg !2271

; <label>:27:                                     ; preds = %23, %20
  %28 = load i32, i32* @g_grab_keyboard, align 4, !dbg !2272
  %29 = icmp ne i32 %28, 0, !dbg !2272
  br i1 %29, label %30, label %34, !dbg !2274

; <label>:30:                                     ; preds = %27
  %31 = load i64*, i64** %2, align 8, !dbg !2275
  %32 = load i64, i64* %31, align 8, !dbg !2276
  %33 = or i64 %32, 32, !dbg !2276
  store i64 %33, i64* %31, align 8, !dbg !2276
  br label %34, !dbg !2277

; <label>:34:                                     ; preds = %30, %27
  ret void, !dbg !2278
}

declare %struct._XIC* @XCreateIC(%struct._XIM*, ...) #2

declare i8* @XGetICValues(%struct._XIC*, ...) #2

declare i32 @XSelectInput(%struct._XDisplay*, i64, i64) #2

declare i32 @XMapWindow(%struct._XDisplay*, i64) #2

declare i32 @XMaskEvent(%struct._XDisplay*, i64, %union._XEvent*) #2

declare i64 @XInternAtom(%struct._XDisplay*, i8*, i32) #2

declare i32 @XSetWMProtocols(%struct._XDisplay*, i64, i64*, i32) #2

; Function Attrs: nounwind uwtable
define i8* @ui_create_cursor(i32, i32, i32, i32, i8*, i8*, i32) #0 !dbg !2279 {
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i32*, align 8
  %18 = alloca %struct._XcursorImage*, align 8
  %19 = alloca %struct._XcursorImage*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2282, metadata !416), !dbg !2283
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2284, metadata !416), !dbg !2285
  store i32 %2, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2286, metadata !416), !dbg !2287
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !2288, metadata !416), !dbg !2289
  store i8* %4, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !2290, metadata !416), !dbg !2291
  store i8* %5, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !2292, metadata !416), !dbg !2293
  store i32 %6, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !2294, metadata !416), !dbg !2295
  call void @llvm.dbg.declare(metadata i64* %16, metadata !2296, metadata !416), !dbg !2297
  call void @llvm.dbg.declare(metadata i32** %17, metadata !2298, metadata !416), !dbg !2303
  call void @llvm.dbg.declare(metadata %struct._XcursorImage** %18, metadata !2304, metadata !416), !dbg !2318
  call void @llvm.dbg.declare(metadata %struct._XcursorImage** %19, metadata !2319, metadata !416), !dbg !2320
  call void @llvm.dbg.declare(metadata i32* %20, metadata !2321, metadata !416), !dbg !2322
  call void @llvm.dbg.declare(metadata i32* %21, metadata !2323, metadata !416), !dbg !2324
  call void @llvm.dbg.declare(metadata i32* %22, metadata !2325, metadata !416), !dbg !2326
  call void @llvm.dbg.declare(metadata i32* %23, metadata !2327, metadata !416), !dbg !2328
  call void @llvm.dbg.declare(metadata i32* %24, metadata !2329, metadata !416), !dbg !2330
  call void @llvm.dbg.declare(metadata i8* %25, metadata !2331, metadata !416), !dbg !2332
  call void @llvm.dbg.declare(metadata i8* %26, metadata !2333, metadata !416), !dbg !2334
  %27 = load i32, i32* %9, align 4, !dbg !2335
  %28 = load i32, i32* %10, align 4, !dbg !2336
  %29 = load i32, i32* %11, align 4, !dbg !2337
  %30 = load i32, i32* %12, align 4, !dbg !2338
  %31 = load i32, i32* %15, align 4, !dbg !2339
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.17, i32 0, i32 0), i32 %27, i32 %28, i32 %29, i32 %30, i32 %31), !dbg !2340
  %32 = load i32, i32* %15, align 4, !dbg !2341
  %33 = icmp ne i32 %32, 1, !dbg !2343
  br i1 %33, label %34, label %46, !dbg !2344

; <label>:34:                                     ; preds = %7
  %35 = load i32, i32* %15, align 4, !dbg !2345
  %36 = icmp ne i32 %35, 16, !dbg !2347
  br i1 %36, label %37, label %46, !dbg !2348

; <label>:37:                                     ; preds = %34
  %38 = load i32, i32* %15, align 4, !dbg !2349
  %39 = icmp ne i32 %38, 24, !dbg !2351
  br i1 %39, label %40, label %46, !dbg !2352

; <label>:40:                                     ; preds = %37
  %41 = load i32, i32* %15, align 4, !dbg !2353
  %42 = icmp ne i32 %41, 32, !dbg !2355
  br i1 %42, label %43, label %46, !dbg !2356

; <label>:43:                                     ; preds = %40
  %44 = load i32, i32* %15, align 4, !dbg !2357
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.18, i32 0, i32 0), i32 %44), !dbg !2359
  %45 = load i8*, i8** @g_null_cursor, align 8, !dbg !2360
  store i8* %45, i8** %8, align 8, !dbg !2361
  br label %162, !dbg !2361

; <label>:46:                                     ; preds = %40, %37, %34, %7
  %47 = load i32, i32* %11, align 4, !dbg !2362
  %48 = load i32, i32* %12, align 4, !dbg !2363
  %49 = call %struct._XcursorImage* @XcursorImageCreate(i32 %47, i32 %48), !dbg !2364
  store %struct._XcursorImage* %49, %struct._XcursorImage** %18, align 8, !dbg !2365
  %50 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2366
  %51 = icmp ne %struct._XcursorImage* %50, null, !dbg !2366
  br i1 %51, label %54, label %52, !dbg !2368

; <label>:52:                                     ; preds = %46
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 3, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.19, i32 0, i32 0)), !dbg !2369
  %53 = load i8*, i8** @g_null_cursor, align 8, !dbg !2371
  store i8* %53, i8** %8, align 8, !dbg !2372
  br label %162, !dbg !2372

; <label>:54:                                     ; preds = %46
  %55 = load i32, i32* %9, align 4, !dbg !2373
  %56 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2374
  %57 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %56, i32 0, i32 4, !dbg !2375
  store i32 %55, i32* %57, align 8, !dbg !2376
  %58 = load i32, i32* %10, align 4, !dbg !2377
  %59 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2378
  %60 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %59, i32 0, i32 5, !dbg !2379
  store i32 %58, i32* %60, align 4, !dbg !2380
  %61 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2381
  %62 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %61, i32 0, i32 7, !dbg !2382
  %63 = load i32*, i32** %62, align 8, !dbg !2382
  store i32* %63, i32** %17, align 8, !dbg !2383
  store i8 0, i8* %26, align 1, !dbg !2384
  store i8 0, i8* %25, align 1, !dbg !2385
  store i32 0, i32* %21, align 4, !dbg !2386
  br label %64, !dbg !2388

; <label>:64:                                     ; preds = %114, %54
  %65 = load i32, i32* %21, align 4, !dbg !2389
  %66 = load i32, i32* %12, align 4, !dbg !2392
  %67 = icmp ult i32 %65, %66, !dbg !2393
  br i1 %67, label %68, label %117, !dbg !2394

; <label>:68:                                     ; preds = %64
  store i32 0, i32* %20, align 4, !dbg !2395
  br label %69, !dbg !2398

; <label>:69:                                     ; preds = %110, %68
  %70 = load i32, i32* %20, align 4, !dbg !2399
  %71 = load i32, i32* %11, align 4, !dbg !2402
  %72 = icmp ult i32 %70, %71, !dbg !2403
  br i1 %72, label %73, label %113, !dbg !2404

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* %21, align 4, !dbg !2405
  %75 = load i32, i32* %11, align 4, !dbg !2407
  %76 = mul i32 %74, %75, !dbg !2408
  %77 = load i32, i32* %20, align 4, !dbg !2409
  %78 = add i32 %76, %77, !dbg !2410
  store i32 %78, i32* %22, align 4, !dbg !2411
  %79 = load i32, i32* %15, align 4, !dbg !2412
  %80 = icmp ne i32 %79, 1, !dbg !2414
  br i1 %80, label %81, label %90, !dbg !2415

; <label>:81:                                     ; preds = %73
  %82 = load i32, i32* %12, align 4, !dbg !2416
  %83 = sub i32 %82, 1, !dbg !2418
  %84 = load i32, i32* %21, align 4, !dbg !2419
  %85 = sub i32 %83, %84, !dbg !2420
  %86 = load i32, i32* %11, align 4, !dbg !2421
  %87 = mul i32 %85, %86, !dbg !2422
  %88 = load i32, i32* %20, align 4, !dbg !2423
  %89 = add i32 %87, %88, !dbg !2424
  store i32 %89, i32* %22, align 4, !dbg !2425
  br label %90, !dbg !2426

; <label>:90:                                     ; preds = %81, %73
  %91 = load i32, i32* %21, align 4, !dbg !2427
  %92 = load i32, i32* %11, align 4, !dbg !2428
  %93 = mul i32 %91, %92, !dbg !2429
  %94 = load i32, i32* %20, align 4, !dbg !2430
  %95 = add i32 %93, %94, !dbg !2431
  store i32 %95, i32* %23, align 4, !dbg !2432
  %96 = load i32, i32* %23, align 4, !dbg !2433
  %97 = load i8*, i8** %13, align 8, !dbg !2434
  %98 = load i8*, i8** %14, align 8, !dbg !2435
  %99 = load i32, i32* %15, align 4, !dbg !2436
  %100 = call i32 @get_pixel(i32 %96, i8* %97, i8* %98, i32 %99, i8* %26), !dbg !2437
  store i32 %100, i32* %24, align 4, !dbg !2438
  %101 = load i32, i32* %24, align 4, !dbg !2439
  %102 = load i32, i32* %22, align 4, !dbg !2440
  %103 = zext i32 %102 to i64, !dbg !2441
  %104 = load i32*, i32** %17, align 8, !dbg !2441
  %105 = getelementptr inbounds i32, i32* %104, i64 %103, !dbg !2441
  store i32 %101, i32* %105, align 4, !dbg !2442
  %106 = load i8, i8* %26, align 1, !dbg !2443
  %107 = icmp ne i8 %106, 0, !dbg !2443
  br i1 %107, label %108, label %109, !dbg !2445

; <label>:108:                                    ; preds = %90
  store i8 1, i8* %25, align 1, !dbg !2446
  br label %109, !dbg !2447

; <label>:109:                                    ; preds = %108, %90
  br label %110, !dbg !2448

; <label>:110:                                    ; preds = %109
  %111 = load i32, i32* %20, align 4, !dbg !2449
  %112 = add i32 %111, 1, !dbg !2449
  store i32 %112, i32* %20, align 4, !dbg !2449
  br label %69, !dbg !2451, !llvm.loop !2452

; <label>:113:                                    ; preds = %69
  br label %114, !dbg !2454

; <label>:114:                                    ; preds = %113
  %115 = load i32, i32* %21, align 4, !dbg !2455
  %116 = add i32 %115, 1, !dbg !2455
  store i32 %116, i32* %21, align 4, !dbg !2455
  br label %64, !dbg !2457, !llvm.loop !2458

; <label>:117:                                    ; preds = %64
  %118 = load i8, i8* %25, align 1, !dbg !2460
  %119 = icmp ne i8 %118, 0, !dbg !2460
  br i1 %119, label %120, label %150, !dbg !2462

; <label>:120:                                    ; preds = %117
  %121 = load i32, i32* %11, align 4, !dbg !2463
  %122 = load i32, i32* %12, align 4, !dbg !2465
  %123 = call %struct._XcursorImage* @XcursorImageCreate(i32 %121, i32 %122), !dbg !2466
  store %struct._XcursorImage* %123, %struct._XcursorImage** %19, align 8, !dbg !2467
  %124 = load %struct._XcursorImage*, %struct._XcursorImage** %19, align 8, !dbg !2468
  %125 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %124, i32 0, i32 7, !dbg !2469
  %126 = load i32*, i32** %125, align 8, !dbg !2469
  %127 = bitcast i32* %126 to i8*, !dbg !2470
  %128 = load %struct._XcursorImage*, %struct._XcursorImage** %19, align 8, !dbg !2471
  %129 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %128, i32 0, i32 2, !dbg !2472
  %130 = load i32, i32* %129, align 8, !dbg !2472
  %131 = load %struct._XcursorImage*, %struct._XcursorImage** %19, align 8, !dbg !2473
  %132 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %131, i32 0, i32 3, !dbg !2474
  %133 = load i32, i32* %132, align 4, !dbg !2474
  %134 = mul i32 %130, %133, !dbg !2475
  %135 = mul i32 %134, 4, !dbg !2476
  %136 = zext i32 %135 to i64, !dbg !2471
  call void @llvm.memset.p0i8.i64(i8* %127, i8 0, i64 %136, i32 4, i1 false), !dbg !2470
  %137 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2477
  %138 = load %struct._XcursorImage*, %struct._XcursorImage** %19, align 8, !dbg !2478
  call void @xcursor_stencil(%struct._XcursorImage* %137, %struct._XcursorImage* %138, i32 -1, i32 0, i32 -1), !dbg !2479
  %139 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2480
  %140 = load %struct._XcursorImage*, %struct._XcursorImage** %19, align 8, !dbg !2481
  call void @xcursor_stencil(%struct._XcursorImage* %139, %struct._XcursorImage* %140, i32 1, i32 0, i32 -1), !dbg !2482
  %141 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2483
  %142 = load %struct._XcursorImage*, %struct._XcursorImage** %19, align 8, !dbg !2484
  call void @xcursor_stencil(%struct._XcursorImage* %141, %struct._XcursorImage* %142, i32 0, i32 -1, i32 -1), !dbg !2485
  %143 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2486
  %144 = load %struct._XcursorImage*, %struct._XcursorImage** %19, align 8, !dbg !2487
  call void @xcursor_stencil(%struct._XcursorImage* %143, %struct._XcursorImage* %144, i32 0, i32 1, i32 -1), !dbg !2488
  %145 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2489
  %146 = load %struct._XcursorImage*, %struct._XcursorImage** %19, align 8, !dbg !2490
  call void @xcursor_merge(%struct._XcursorImage* %145, %struct._XcursorImage* %146), !dbg !2491
  %147 = load %struct._XcursorImage*, %struct._XcursorImage** %19, align 8, !dbg !2492
  %148 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2493
  call void @xcursor_merge(%struct._XcursorImage* %147, %struct._XcursorImage* %148), !dbg !2494
  %149 = load %struct._XcursorImage*, %struct._XcursorImage** %19, align 8, !dbg !2495
  call void @XcursorImageDestroy(%struct._XcursorImage* %149), !dbg !2496
  br label %150, !dbg !2497

; <label>:150:                                    ; preds = %120, %117
  %151 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2498
  %152 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2499
  %153 = call i64 @XcursorImageLoadCursor(%struct._XDisplay* %151, %struct._XcursorImage* %152), !dbg !2500
  store i64 %153, i64* %16, align 8, !dbg !2501
  %154 = load %struct._XcursorImage*, %struct._XcursorImage** %18, align 8, !dbg !2502
  call void @XcursorImageDestroy(%struct._XcursorImage* %154), !dbg !2503
  %155 = load i64, i64* %16, align 8, !dbg !2504
  %156 = icmp ne i64 %155, 0, !dbg !2504
  br i1 %156, label %159, label %157, !dbg !2506

; <label>:157:                                    ; preds = %150
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.20, i32 0, i32 0)), !dbg !2507
  %158 = load i8*, i8** @g_null_cursor, align 8, !dbg !2509
  store i8* %158, i8** %8, align 8, !dbg !2510
  br label %162, !dbg !2510

; <label>:159:                                    ; preds = %150
  %160 = load i64, i64* %16, align 8, !dbg !2511
  %161 = inttoptr i64 %160 to i8*, !dbg !2512
  store i8* %161, i8** %8, align 8, !dbg !2513
  br label %162, !dbg !2513

; <label>:162:                                    ; preds = %159, %157, %52, %43
  %163 = load i8*, i8** %8, align 8, !dbg !2514
  ret i8* %163, !dbg !2514
}

declare void @seamless_reset_state() #2

; Function Attrs: nounwind uwtable
define void @ui_resize_window(i32, i32) #0 !dbg !2515 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.XWindowAttributes, align 8
  %6 = alloca %struct.XSizeHints*, align 8
  %7 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2516, metadata !416), !dbg !2517
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2518, metadata !416), !dbg !2519
  call void @llvm.dbg.declare(metadata %struct.XWindowAttributes* %5, metadata !2520, metadata !416), !dbg !2521
  call void @llvm.dbg.declare(metadata %struct.XSizeHints** %6, metadata !2522, metadata !416), !dbg !2523
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2524, metadata !416), !dbg !2525
  %8 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2526
  %9 = load i64, i64* @g_wnd, align 8, !dbg !2527
  %10 = call i32 @XGetWindowAttributes(%struct._XDisplay* %8, i64 %9, %struct.XWindowAttributes* %5), !dbg !2528
  %11 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 2, !dbg !2529
  %12 = load i32, i32* %11, align 8, !dbg !2529
  %13 = load i32, i32* %3, align 4, !dbg !2531
  %14 = icmp eq i32 %12, %13, !dbg !2532
  br i1 %14, label %15, label %21, !dbg !2533

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 3, !dbg !2534
  %17 = load i32, i32* %16, align 4, !dbg !2534
  %18 = load i32, i32* %4, align 4, !dbg !2536
  %19 = icmp eq i32 %17, %18, !dbg !2537
  br i1 %19, label %20, label %21, !dbg !2538

; <label>:20:                                     ; preds = %15
  br label %86, !dbg !2539

; <label>:21:                                     ; preds = %15, %2
  %22 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 2, !dbg !2541
  %23 = load i32, i32* %22, align 8, !dbg !2541
  %24 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 3, !dbg !2542
  %25 = load i32, i32* %24, align 4, !dbg !2542
  %26 = load i32, i32* %3, align 4, !dbg !2543
  %27 = load i32, i32* %4, align 4, !dbg !2544
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.15, i32 0, i32 0), i32 %23, i32 %25, i32 %26, i32 %27), !dbg !2545
  %28 = call %struct.XSizeHints* @XAllocSizeHints(), !dbg !2546
  store %struct.XSizeHints* %28, %struct.XSizeHints** %6, align 8, !dbg !2547
  %29 = load %struct.XSizeHints*, %struct.XSizeHints** %6, align 8, !dbg !2548
  %30 = icmp ne %struct.XSizeHints* %29, null, !dbg !2548
  br i1 %30, label %31, label %41, !dbg !2550

; <label>:31:                                     ; preds = %21
  %32 = load %struct.XSizeHints*, %struct.XSizeHints** %6, align 8, !dbg !2551
  %33 = load i32, i32* %3, align 4, !dbg !2553
  %34 = load i32, i32* %4, align 4, !dbg !2554
  call void @get_sizehints(%struct.XSizeHints* %32, i32 %33, i32 %34), !dbg !2555
  %35 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2556
  %36 = load i64, i64* @g_wnd, align 8, !dbg !2557
  %37 = load %struct.XSizeHints*, %struct.XSizeHints** %6, align 8, !dbg !2558
  call void @XSetWMNormalHints(%struct._XDisplay* %35, i64 %36, %struct.XSizeHints* %37), !dbg !2559
  %38 = load %struct.XSizeHints*, %struct.XSizeHints** %6, align 8, !dbg !2560
  %39 = bitcast %struct.XSizeHints* %38 to i8*, !dbg !2560
  %40 = call i32 @XFree(i8* %39), !dbg !2561
  br label %41, !dbg !2562

; <label>:41:                                     ; preds = %31, %21
  %42 = load i32, i32* @g_embed_wnd, align 4, !dbg !2563
  %43 = icmp ne i32 %42, 0, !dbg !2563
  br i1 %43, label %50, label %44, !dbg !2565

; <label>:44:                                     ; preds = %41
  %45 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2566
  %46 = load i64, i64* @g_wnd, align 8, !dbg !2568
  %47 = load i32, i32* %3, align 4, !dbg !2569
  %48 = load i32, i32* %4, align 4, !dbg !2570
  %49 = call i32 @XResizeWindow(%struct._XDisplay* %45, i64 %46, i32 %47, i32 %48), !dbg !2571
  br label %50, !dbg !2572

; <label>:50:                                     ; preds = %44, %41
  %51 = load i64, i64* @g_backstore, align 8, !dbg !2573
  %52 = icmp ne i64 %51, 0, !dbg !2575
  br i1 %52, label %53, label %83, !dbg !2576

; <label>:53:                                     ; preds = %50
  %54 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2577
  %55 = load i64, i64* @g_wnd, align 8, !dbg !2579
  %56 = load i32, i32* %3, align 4, !dbg !2580
  %57 = load i32, i32* %4, align 4, !dbg !2581
  %58 = load i32, i32* @g_depth, align 4, !dbg !2582
  %59 = call i64 @XCreatePixmap(%struct._XDisplay* %54, i64 %55, i32 %56, i32 %57, i32 %58), !dbg !2583
  store i64 %59, i64* %7, align 8, !dbg !2584
  %60 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2585
  %61 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !2586
  %62 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !2587
  %63 = getelementptr inbounds %struct.Screen, %struct.Screen* %62, i32 0, i32 14, !dbg !2588
  %64 = load i64, i64* %63, align 8, !dbg !2588
  %65 = call i32 @XSetForeground(%struct._XDisplay* %60, %struct._XGC* %61, i64 %64), !dbg !2589
  %66 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2590
  %67 = load i64, i64* %7, align 8, !dbg !2591
  %68 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !2592
  %69 = load i32, i32* %3, align 4, !dbg !2593
  %70 = load i32, i32* %4, align 4, !dbg !2594
  %71 = call i32 @XFillRectangle(%struct._XDisplay* %66, i64 %67, %struct._XGC* %68, i32 0, i32 0, i32 %69, i32 %70), !dbg !2595
  %72 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2596
  %73 = load i64, i64* @g_backstore, align 8, !dbg !2597
  %74 = load i64, i64* %7, align 8, !dbg !2598
  %75 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !2599
  %76 = load i32, i32* %3, align 4, !dbg !2600
  %77 = load i32, i32* %4, align 4, !dbg !2601
  %78 = call i32 @XCopyArea(%struct._XDisplay* %72, i64 %73, i64 %74, %struct._XGC* %75, i32 0, i32 0, i32 %76, i32 %77, i32 0, i32 0), !dbg !2602
  %79 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2603
  %80 = load i64, i64* @g_backstore, align 8, !dbg !2604
  %81 = call i32 @XFreePixmap(%struct._XDisplay* %79, i64 %80), !dbg !2605
  %82 = load i64, i64* %7, align 8, !dbg !2606
  store i64 %82, i64* @g_backstore, align 8, !dbg !2607
  br label %83, !dbg !2608

; <label>:83:                                     ; preds = %53, %50
  %84 = load i32, i32* %3, align 4, !dbg !2609
  %85 = load i32, i32* %4, align 4, !dbg !2610
  call void @ui_set_clip(i32 0, i32 0, i32 %84, i32 %85), !dbg !2611
  br label %86, !dbg !2612

; <label>:86:                                     ; preds = %83, %20
  ret void, !dbg !2613
}

declare i32 @XGetWindowAttributes(%struct._XDisplay*, i64, %struct.XWindowAttributes*) #2

declare i32 @XResizeWindow(%struct._XDisplay*, i64, i32, i32) #2

declare i32 @XCopyArea(%struct._XDisplay*, i64, i64, %struct._XGC*, i32, i32, i32, i32, i32, i32) #2

declare i32 @XFreePixmap(%struct._XDisplay*, i64) #2

; Function Attrs: nounwind uwtable
define void @ui_set_clip(i32, i32, i32, i32) #0 !dbg !2615 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2618, metadata !416), !dbg !2619
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2620, metadata !416), !dbg !2621
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2622, metadata !416), !dbg !2623
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2624, metadata !416), !dbg !2625
  %9 = load i32, i32* %5, align 4, !dbg !2626
  %10 = trunc i32 %9 to i16, !dbg !2626
  store i16 %10, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !2627
  %11 = load i32, i32* %6, align 4, !dbg !2628
  %12 = trunc i32 %11 to i16, !dbg !2628
  store i16 %12, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !2629
  %13 = load i32, i32* %7, align 4, !dbg !2630
  %14 = trunc i32 %13 to i16, !dbg !2630
  store i16 %14, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !2631
  %15 = load i32, i32* %8, align 4, !dbg !2632
  %16 = trunc i32 %15 to i16, !dbg !2632
  store i16 %16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !2633
  %17 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2634
  %18 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !2635
  %19 = call i32 @XSetClipRectangles(%struct._XDisplay* %17, %struct._XGC* %18, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !2636
  ret void, !dbg !2637
}

; Function Attrs: nounwind uwtable
define i32 @ui_have_window() #0 !dbg !2638 {
  %1 = load i64, i64* @g_wnd, align 8, !dbg !2639
  %2 = icmp ne i64 %1, 0, !dbg !2639
  %3 = select i1 %2, i32 1, i32 0, !dbg !2639
  ret i32 %3, !dbg !2640
}

; Function Attrs: nounwind uwtable
define void @ui_destroy_window() #0 !dbg !2641 {
  %1 = load %struct._XIC*, %struct._XIC** @g_IC, align 8, !dbg !2642
  %2 = icmp ne %struct._XIC* %1, null, !dbg !2644
  br i1 %2, label %3, label %5, !dbg !2645

; <label>:3:                                      ; preds = %0
  %4 = load %struct._XIC*, %struct._XIC** @g_IC, align 8, !dbg !2646
  call void @XDestroyIC(%struct._XIC* %4), !dbg !2647
  br label %5, !dbg !2647

; <label>:5:                                      ; preds = %3, %0
  %6 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2648
  %7 = load i64, i64* @g_wnd, align 8, !dbg !2649
  %8 = call i32 @XDestroyWindow(%struct._XDisplay* %6, i64 %7), !dbg !2650
  store i64 0, i64* @g_wnd, align 8, !dbg !2651
  %9 = load i64, i64* @g_backstore, align 8, !dbg !2652
  %10 = icmp ne i64 %9, 0, !dbg !2652
  br i1 %10, label %11, label %15, !dbg !2654

; <label>:11:                                     ; preds = %5
  %12 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2655
  %13 = load i64, i64* @g_backstore, align 8, !dbg !2657
  %14 = call i32 @XFreePixmap(%struct._XDisplay* %12, i64 %13), !dbg !2658
  store i64 0, i64* @g_backstore, align 8, !dbg !2659
  br label %15, !dbg !2660

; <label>:15:                                     ; preds = %11, %5
  ret void, !dbg !2661
}

declare void @XDestroyIC(%struct._XIC*) #2

declare i32 @XDestroyWindow(%struct._XDisplay*, i64) #2

; Function Attrs: nounwind uwtable
define void @xwin_toggle_fullscreen() #0 !dbg !253 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.XWindowAttributes, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2662, metadata !416), !dbg !2663
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2664, metadata !416), !dbg !2665
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2666, metadata !416), !dbg !2667
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2668, metadata !416), !dbg !2669
  call void @llvm.dbg.declare(metadata %struct.XWindowAttributes* %5, metadata !2670, metadata !416), !dbg !2671
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2672, metadata !416), !dbg !2673
  store i64 0, i64* %6, align 8, !dbg !2673
  call void @llvm.dbg.declare(metadata i64* %7, metadata !2674, metadata !416), !dbg !2675
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2676, metadata !416), !dbg !2677
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2678, metadata !416), !dbg !2679
  %10 = load i32, i32* @g_seamless_rdp, align 4, !dbg !2680
  %11 = icmp ne i32 %10, 0, !dbg !2680
  br i1 %11, label %12, label %13, !dbg !2682

; <label>:12:                                     ; preds = %0
  br label %133, !dbg !2683

; <label>:13:                                     ; preds = %0
  %14 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2684
  %15 = load i64, i64* @g_wnd, align 8, !dbg !2685
  %16 = call i32 @XGetWindowAttributes(%struct._XDisplay* %14, i64 %15, %struct.XWindowAttributes* %5), !dbg !2686
  %17 = load i32, i32* @g_fullscreen, align 4, !dbg !2687
  %18 = icmp ne i32 %17, 0, !dbg !2687
  br i1 %18, label %19, label %25, !dbg !2689

; <label>:19:                                     ; preds = %13
  %20 = load i32, i32* @xwin_toggle_fullscreen.windowed_width, align 4, !dbg !2690
  %21 = icmp eq i32 %20, 0, !dbg !2692
  br i1 %21, label %25, label %22, !dbg !2693

; <label>:22:                                     ; preds = %19
  %23 = load i32, i32* @xwin_toggle_fullscreen.windowed_height, align 4, !dbg !2694
  %24 = icmp eq i32 %23, 0, !dbg !2696
  br i1 %24, label %25, label %47, !dbg !2697

; <label>:25:                                     ; preds = %22, %19, %13
  %26 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2698
  %27 = load i64, i64* @g_wnd, align 8, !dbg !2700
  %28 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2701
  %29 = bitcast %struct._XDisplay* %28 to %struct.anon*, !dbg !2702
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %29, i32 0, i32 33, !dbg !2702
  %31 = load i32, i32* %30, align 8, !dbg !2702
  %32 = sext i32 %31 to i64, !dbg !2702
  %33 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2701
  %34 = bitcast %struct._XDisplay* %33 to %struct.anon*, !dbg !2702
  %35 = getelementptr inbounds %struct.anon, %struct.anon* %34, i32 0, i32 35, !dbg !2702
  %36 = load %struct.Screen*, %struct.Screen** %35, align 8, !dbg !2702
  %37 = getelementptr inbounds %struct.Screen, %struct.Screen* %36, i64 %32, !dbg !2702
  %38 = getelementptr inbounds %struct.Screen, %struct.Screen* %37, i32 0, i32 2, !dbg !2703
  %39 = load i64, i64* %38, align 8, !dbg !2703
  %40 = call i32 @XTranslateCoordinates(%struct._XDisplay* %26, i64 %27, i64 %39, i32 0, i32 0, i32* %8, i32* %9, i64* %7), !dbg !2704
  %41 = load i32, i32* %8, align 4, !dbg !2705
  store i32 %41, i32* @xwin_toggle_fullscreen.windowed_x, align 4, !dbg !2706
  %42 = load i32, i32* %9, align 4, !dbg !2707
  store i32 %42, i32* @xwin_toggle_fullscreen.windowed_y, align 4, !dbg !2708
  %43 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 2, !dbg !2709
  %44 = load i32, i32* %43, align 8, !dbg !2709
  store i32 %44, i32* @xwin_toggle_fullscreen.windowed_width, align 4, !dbg !2710
  %45 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 3, !dbg !2711
  %46 = load i32, i32* %45, align 4, !dbg !2711
  store i32 %46, i32* @xwin_toggle_fullscreen.windowed_height, align 4, !dbg !2712
  br label %47, !dbg !2713

; <label>:47:                                     ; preds = %25, %22
  %48 = load i32, i32* @g_ownbackstore, align 4, !dbg !2714
  %49 = icmp ne i32 %48, 0, !dbg !2714
  br i1 %49, label %68, label %50, !dbg !2716

; <label>:50:                                     ; preds = %47
  %51 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2717
  %52 = load i64, i64* @g_wnd, align 8, !dbg !2719
  %53 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 2, !dbg !2720
  %54 = load i32, i32* %53, align 8, !dbg !2720
  %55 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 3, !dbg !2721
  %56 = load i32, i32* %55, align 4, !dbg !2721
  %57 = load i32, i32* @g_depth, align 4, !dbg !2722
  %58 = call i64 @XCreatePixmap(%struct._XDisplay* %51, i64 %52, i32 %54, i32 %56, i32 %57), !dbg !2723
  store i64 %58, i64* %6, align 8, !dbg !2724
  %59 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2725
  %60 = load i64, i64* @g_wnd, align 8, !dbg !2726
  %61 = load i64, i64* %6, align 8, !dbg !2727
  %62 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !2728
  %63 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 2, !dbg !2729
  %64 = load i32, i32* %63, align 8, !dbg !2729
  %65 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 3, !dbg !2730
  %66 = load i32, i32* %65, align 4, !dbg !2730
  %67 = call i32 @XCopyArea(%struct._XDisplay* %59, i64 %60, i64 %61, %struct._XGC* %62, i32 0, i32 0, i32 %64, i32 %66, i32 0, i32 0), !dbg !2731
  br label %68, !dbg !2732

; <label>:68:                                     ; preds = %50, %47
  %69 = load i32, i32* @g_fullscreen, align 4, !dbg !2733
  %70 = icmp ne i32 %69, 0, !dbg !2734
  %71 = xor i1 %70, true, !dbg !2734
  %72 = zext i1 %71 to i32, !dbg !2734
  store i32 %72, i32* @g_fullscreen, align 4, !dbg !2735
  %73 = load i32, i32* @g_fullscreen, align 4, !dbg !2736
  %74 = icmp ne i32 %73, 0, !dbg !2736
  br i1 %74, label %75, label %82, !dbg !2738

; <label>:75:                                     ; preds = %68
  store i32 0, i32* %1, align 4, !dbg !2739
  store i32 0, i32* %2, align 4, !dbg !2741
  %76 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !2742
  %77 = getelementptr inbounds %struct.Screen, %struct.Screen* %76, i32 0, i32 3, !dbg !2743
  %78 = load i32, i32* %77, align 8, !dbg !2743
  store i32 %78, i32* %3, align 4, !dbg !2744
  %79 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !2745
  %80 = getelementptr inbounds %struct.Screen, %struct.Screen* %79, i32 0, i32 4, !dbg !2746
  %81 = load i32, i32* %80, align 4, !dbg !2746
  store i32 %81, i32* %4, align 4, !dbg !2747
  br label %96, !dbg !2748

; <label>:82:                                     ; preds = %68
  %83 = load i32, i32* @xwin_toggle_fullscreen.windowed_x, align 4, !dbg !2749
  store i32 %83, i32* %1, align 4, !dbg !2751
  %84 = load i32, i32* @xwin_toggle_fullscreen.windowed_y, align 4, !dbg !2752
  store i32 %84, i32* %2, align 4, !dbg !2753
  %85 = load i32, i32* @g_dynamic_session_resize, align 4, !dbg !2754
  %86 = icmp ne i32 %85, 0, !dbg !2754
  br i1 %86, label %87, label %90, !dbg !2756

; <label>:87:                                     ; preds = %82
  %88 = load i32, i32* @xwin_toggle_fullscreen.windowed_width, align 4, !dbg !2757
  store i32 %88, i32* %3, align 4, !dbg !2759
  %89 = load i32, i32* @xwin_toggle_fullscreen.windowed_height, align 4, !dbg !2760
  store i32 %89, i32* %4, align 4, !dbg !2761
  br label %95, !dbg !2762

; <label>:90:                                     ; preds = %82
  %91 = load i16, i16* @g_session_width, align 2, !dbg !2763
  %92 = zext i16 %91 to i32, !dbg !2763
  store i32 %92, i32* %3, align 4, !dbg !2765
  %93 = load i16, i16* @g_session_height, align 2, !dbg !2766
  %94 = zext i16 %93 to i32, !dbg !2766
  store i32 %94, i32* %4, align 4, !dbg !2767
  br label %95

; <label>:95:                                     ; preds = %90, %87
  br label %96

; <label>:96:                                     ; preds = %95, %75
  %97 = load i32, i32* %3, align 4, !dbg !2768
  %98 = load i32, i32* %4, align 4, !dbg !2769
  %99 = load i32, i32* %1, align 4, !dbg !2770
  %100 = load i32, i32* %2, align 4, !dbg !2771
  %101 = load i32, i32* @xwin_toggle_fullscreen.windowed_width, align 4, !dbg !2772
  %102 = load i32, i32* @xwin_toggle_fullscreen.windowed_height, align 4, !dbg !2773
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i32 0, i32 0), i32 %97, i32 %98, i32 %99, i32 %100, i32 %101, i32 %102), !dbg !2774
  %103 = load i32, i32* %1, align 4, !dbg !2775
  store i32 %103, i32* @g_xpos, align 4, !dbg !2776
  %104 = load i32, i32* %2, align 4, !dbg !2777
  store i32 %104, i32* @g_ypos, align 4, !dbg !2778
  call void @ui_destroy_window(), !dbg !2779
  %105 = load i32, i32* %3, align 4, !dbg !2780
  %106 = load i32, i32* %4, align 4, !dbg !2781
  %107 = call i32 @ui_create_window(i32 %105, i32 %106), !dbg !2782
  %108 = load i32, i32* @g_fullscreen, align 4, !dbg !2783
  %109 = icmp ne i32 %108, 0, !dbg !2783
  br i1 %109, label %110, label %113, !dbg !2785

; <label>:110:                                    ; preds = %96
  store i32 1, i32* @g_pending_resize, align 4, !dbg !2786
  %111 = load i32, i32* %3, align 4, !dbg !2788
  store i32 %111, i32* @g_window_width, align 4, !dbg !2789
  %112 = load i32, i32* %4, align 4, !dbg !2790
  store i32 %112, i32* @g_window_height, align 4, !dbg !2791
  br label %113, !dbg !2792

; <label>:113:                                    ; preds = %110, %96
  %114 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2793
  %115 = load i64, i64* @g_wnd, align 8, !dbg !2794
  %116 = load i64, i64* @g_current_cursor, align 8, !dbg !2795
  %117 = call i32 @XDefineCursor(%struct._XDisplay* %114, i64 %115, i64 %116), !dbg !2796
  %118 = load i32, i32* @g_ownbackstore, align 4, !dbg !2797
  %119 = icmp ne i32 %118, 0, !dbg !2797
  br i1 %119, label %133, label %120, !dbg !2799

; <label>:120:                                    ; preds = %113
  %121 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2800
  %122 = load i64, i64* %6, align 8, !dbg !2802
  %123 = load i64, i64* @g_wnd, align 8, !dbg !2803
  %124 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !2804
  %125 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 2, !dbg !2805
  %126 = load i32, i32* %125, align 8, !dbg !2805
  %127 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %5, i32 0, i32 3, !dbg !2806
  %128 = load i32, i32* %127, align 4, !dbg !2806
  %129 = call i32 @XCopyArea(%struct._XDisplay* %121, i64 %122, i64 %123, %struct._XGC* %124, i32 0, i32 0, i32 %126, i32 %128, i32 0, i32 0), !dbg !2807
  %130 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2808
  %131 = load i64, i64* %6, align 8, !dbg !2809
  %132 = call i32 @XFreePixmap(%struct._XDisplay* %130, i64 %131), !dbg !2810
  br label %133, !dbg !2811

; <label>:133:                                    ; preds = %12, %120, %113
  ret void, !dbg !2812
}

declare i32 @XTranslateCoordinates(%struct._XDisplay*, i64, i64, i32, i32, i32*, i32*, i64*) #2

declare i32 @XDefineCursor(%struct._XDisplay*, i64, i64) #2

; Function Attrs: nounwind uwtable
define void @ui_select(i32) #0 !dbg !2813 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2816, metadata !416), !dbg !2817
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2818, metadata !416), !dbg !2819
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2820, metadata !416), !dbg !2821
  store i32 0, i32* %4, align 4, !dbg !2821
  br label %5, !dbg !2822

; <label>:5:                                      ; preds = %42, %26, %16, %1
  %6 = load i32, i32* @g_exit_mainloop, align 4, !dbg !2823
  %7 = icmp eq i32 %6, 0, !dbg !2825
  br i1 %7, label %8, label %11, !dbg !2826

; <label>:8:                                      ; preds = %5
  %9 = load i32, i32* %4, align 4, !dbg !2827
  %10 = icmp eq i32 %9, 0, !dbg !2829
  br label %11

; <label>:11:                                     ; preds = %8, %5
  %12 = phi i1 [ false, %5 ], [ %10, %8 ]
  br i1 %12, label %13, label %46, !dbg !2830

; <label>:13:                                     ; preds = %11
  %14 = call i32 @xwin_process_events(), !dbg !2832
  %15 = icmp ne i32 %14, 0, !dbg !2832
  br i1 %15, label %17, label %16, !dbg !2835

; <label>:16:                                     ; preds = %13
  store i32 1, i32* @g_user_quit, align 4, !dbg !2836
  store i32 1, i32* @g_exit_mainloop, align 4, !dbg !2838
  store i32 0, i32* @g_pending_resize, align 4, !dbg !2839
  br label %5, !dbg !2840, !llvm.loop !2841

; <label>:17:                                     ; preds = %13
  %18 = load i32, i32* @g_pending_resize, align 4, !dbg !2842
  %19 = icmp eq i32 %18, 1, !dbg !2844
  br i1 %19, label %20, label %28, !dbg !2845

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* @g_dynamic_session_resize, align 4, !dbg !2846
  %22 = icmp ne i32 %21, 0, !dbg !2846
  br i1 %22, label %23, label %28, !dbg !2848

; <label>:23:                                     ; preds = %20
  %24 = call i32 @process_pending_resize(), !dbg !2849
  %25 = icmp eq i32 %24, 1, !dbg !2852
  br i1 %25, label %26, label %27, !dbg !2853

; <label>:26:                                     ; preds = %23
  store i32 1, i32* @g_exit_mainloop, align 4, !dbg !2854
  br label %5, !dbg !2856, !llvm.loop !2841

; <label>:27:                                     ; preds = %23
  br label %28, !dbg !2857

; <label>:28:                                     ; preds = %27, %20, %17
  %29 = load i32, i32* @g_seamless_active, align 4, !dbg !2858
  %30 = icmp ne i32 %29, 0, !dbg !2858
  br i1 %30, label %31, label %32, !dbg !2860

; <label>:31:                                     ; preds = %28
  call void @sw_check_timers(), !dbg !2861
  br label %32, !dbg !2861

; <label>:32:                                     ; preds = %31, %28
  store i32 60000, i32* %3, align 4, !dbg !2862
  %33 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2863
  %34 = call i32 @XPending(%struct._XDisplay* %33), !dbg !2865
  %35 = icmp sgt i32 %34, 0, !dbg !2866
  br i1 %35, label %36, label %37, !dbg !2867

; <label>:36:                                     ; preds = %32
  store i32 0, i32* %3, align 4, !dbg !2868
  br label %42, !dbg !2869

; <label>:37:                                     ; preds = %32
  %38 = load i32, i32* @g_pending_resize, align 4, !dbg !2870
  %39 = icmp eq i32 %38, 1, !dbg !2872
  br i1 %39, label %40, label %41, !dbg !2873

; <label>:40:                                     ; preds = %37
  store i32 100, i32* %3, align 4, !dbg !2874
  br label %41, !dbg !2875

; <label>:41:                                     ; preds = %40, %37
  br label %42

; <label>:42:                                     ; preds = %41, %36
  %43 = load i32, i32* %2, align 4, !dbg !2876
  %44 = load i32, i32* %3, align 4, !dbg !2877
  %45 = call i32 @process_fds(i32 %43, i32 %44), !dbg !2878
  store i32 %45, i32* %4, align 4, !dbg !2879
  br label %5, !dbg !2880, !llvm.loop !2841

; <label>:46:                                     ; preds = %11
  ret void, !dbg !2882
}

; Function Attrs: nounwind uwtable
define internal i32 @xwin_process_events() #0 !dbg !345 {
  %1 = alloca i32, align 4
  %2 = alloca %union._XEvent, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca [256 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct._seamless_window*, align 8
  %9 = alloca %struct.XWindowAttributes, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %union._XEvent* %2, metadata !2883, metadata !416), !dbg !2884
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2885, metadata !416), !dbg !2887
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2888, metadata !416), !dbg !2889
  call void @llvm.dbg.declare(metadata [256 x i8]* %5, metadata !2890, metadata !416), !dbg !2894
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2895, metadata !416), !dbg !2896
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2897, metadata !416), !dbg !2898
  store i32 0, i32* %7, align 4, !dbg !2898
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %8, metadata !2899, metadata !416), !dbg !2900
  br label %12, !dbg !2901

; <label>:12:                                     ; preds = %734, %56, %49, %27, %0
  %13 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2902
  %14 = call i32 @XPending(%struct._XDisplay* %13), !dbg !2904
  %15 = icmp sgt i32 %14, 0, !dbg !2905
  br i1 %15, label %16, label %20, !dbg !2906

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* %7, align 4, !dbg !2907
  %18 = add nsw i32 %17, 1, !dbg !2907
  store i32 %18, i32* %7, align 4, !dbg !2907
  %19 = icmp slt i32 %17, 20, !dbg !2909
  br label %20

; <label>:20:                                     ; preds = %16, %12
  %21 = phi i1 [ false, %12 ], [ %19, %16 ]
  br i1 %21, label %22, label %735, !dbg !2910

; <label>:22:                                     ; preds = %20
  %23 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2912
  %24 = call i32 @XNextEvent(%struct._XDisplay* %23, %union._XEvent* %2), !dbg !2914
  %25 = load i64, i64* @g_wnd, align 8, !dbg !2915
  %26 = icmp ne i64 %25, 0, !dbg !2915
  br i1 %26, label %28, label %27, !dbg !2917

; <label>:27:                                     ; preds = %22
  br label %12, !dbg !2918, !llvm.loop !2919

; <label>:28:                                     ; preds = %22
  %29 = bitcast %union._XEvent* %2 to i32*, !dbg !2920
  %30 = load i32, i32* %29, align 8, !dbg !2920
  %31 = icmp ne i32 %30, 22, !dbg !2922
  br i1 %31, label %32, label %50, !dbg !2923

; <label>:32:                                     ; preds = %28
  %33 = bitcast %union._XEvent* %2 to %struct.XAnyEvent*, !dbg !2924
  %34 = getelementptr inbounds %struct.XAnyEvent, %struct.XAnyEvent* %33, i32 0, i32 4, !dbg !2926
  %35 = load i64, i64* %34, align 8, !dbg !2926
  %36 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2927
  %37 = bitcast %struct._XDisplay* %36 to %struct.anon*, !dbg !2928
  %38 = getelementptr inbounds %struct.anon, %struct.anon* %37, i32 0, i32 33, !dbg !2928
  %39 = load i32, i32* %38, align 8, !dbg !2928
  %40 = sext i32 %39 to i64, !dbg !2928
  %41 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !2927
  %42 = bitcast %struct._XDisplay* %41 to %struct.anon*, !dbg !2928
  %43 = getelementptr inbounds %struct.anon, %struct.anon* %42, i32 0, i32 35, !dbg !2928
  %44 = load %struct.Screen*, %struct.Screen** %43, align 8, !dbg !2928
  %45 = getelementptr inbounds %struct.Screen, %struct.Screen* %44, i64 %40, !dbg !2928
  %46 = getelementptr inbounds %struct.Screen, %struct.Screen* %45, i32 0, i32 2, !dbg !2929
  %47 = load i64, i64* %46, align 8, !dbg !2929
  %48 = icmp eq i64 %35, %47, !dbg !2930
  br i1 %48, label %49, label %50, !dbg !2931

; <label>:49:                                     ; preds = %32
  br label %12, !dbg !2933, !llvm.loop !2919

; <label>:50:                                     ; preds = %32, %28
  %51 = load %struct._XIC*, %struct._XIC** @g_IC, align 8, !dbg !2934
  %52 = icmp ne %struct._XIC* %51, null, !dbg !2936
  br i1 %52, label %53, label %57, !dbg !2937

; <label>:53:                                     ; preds = %50
  %54 = call i32 @XFilterEvent(%union._XEvent* %2, i64 0), !dbg !2938
  %55 = icmp eq i32 %54, 1, !dbg !2940
  br i1 %55, label %56, label %57, !dbg !2941

; <label>:56:                                     ; preds = %53
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55, i32 0, i32 0)), !dbg !2942
  br label %12, !dbg !2944, !llvm.loop !2919

; <label>:57:                                     ; preds = %53, %50
  %58 = bitcast %union._XEvent* %2 to i32*, !dbg !2945
  %59 = load i32, i32* %58, align 8, !dbg !2945
  switch i32 %59, label %734 [
    i32 15, label %60
    i32 33, label %73
    i32 2, label %122
    i32 3, label %175
    i32 4, label %212
    i32 5, label %213
    i32 6, label %214
    i32 9, label %270
    i32 10, label %314
    i32 7, label %329
    i32 8, label %344
    i32 12, label %347
    i32 34, label %422
    i32 31, label %452
    i32 30, label %454
    i32 29, label %456
    i32 28, label %457
    i32 19, label %541
    i32 18, label %562
    i32 22, label %574
  ], !dbg !2946

; <label>:60:                                     ; preds = %57
  %61 = bitcast %union._XEvent* %2 to %struct.XVisibilityEvent*, !dbg !2947
  %62 = getelementptr inbounds %struct.XVisibilityEvent, %struct.XVisibilityEvent* %61, i32 0, i32 4, !dbg !2950
  %63 = load i64, i64* %62, align 8, !dbg !2950
  %64 = load i64, i64* @g_wnd, align 8, !dbg !2951
  %65 = icmp eq i64 %63, %64, !dbg !2952
  br i1 %65, label %66, label %72, !dbg !2953

; <label>:66:                                     ; preds = %60
  %67 = bitcast %union._XEvent* %2 to %struct.XVisibilityEvent*, !dbg !2954
  %68 = getelementptr inbounds %struct.XVisibilityEvent, %struct.XVisibilityEvent* %67, i32 0, i32 5, !dbg !2955
  %69 = load i32, i32* %68, align 8, !dbg !2955
  %70 = icmp eq i32 %69, 0, !dbg !2956
  %71 = zext i1 %70 to i32, !dbg !2956
  store i32 %71, i32* @g_Unobscured, align 4, !dbg !2957
  br label %72, !dbg !2958

; <label>:72:                                     ; preds = %66, %60
  br label %734, !dbg !2959

; <label>:73:                                     ; preds = %57
  %74 = bitcast %union._XEvent* %2 to %struct.XClientMessageEvent*, !dbg !2960
  %75 = getelementptr inbounds %struct.XClientMessageEvent, %struct.XClientMessageEvent* %74, i32 0, i32 5, !dbg !2962
  %76 = load i64, i64* %75, align 8, !dbg !2962
  %77 = load i64, i64* @g_protocol_atom, align 8, !dbg !2963
  %78 = icmp eq i64 %76, %77, !dbg !2964
  br i1 %78, label %79, label %121, !dbg !2965

; <label>:79:                                     ; preds = %73
  %80 = bitcast %union._XEvent* %2 to %struct.XClientMessageEvent*, !dbg !2966
  %81 = getelementptr inbounds %struct.XClientMessageEvent, %struct.XClientMessageEvent* %80, i32 0, i32 7, !dbg !2969
  %82 = bitcast %union.anon* %81 to [5 x i64]*, !dbg !2970
  %83 = getelementptr inbounds [5 x i64], [5 x i64]* %82, i64 0, i64 0, !dbg !2971
  %84 = load i64, i64* %83, align 8, !dbg !2971
  %85 = load i64, i64* @g_kill_atom, align 8, !dbg !2972
  %86 = icmp eq i64 %84, %85, !dbg !2973
  br i1 %86, label %87, label %100, !dbg !2974

; <label>:87:                                     ; preds = %79
  %88 = bitcast %union._XEvent* %2 to %struct.XClientMessageEvent*, !dbg !2975
  %89 = getelementptr inbounds %struct.XClientMessageEvent, %struct.XClientMessageEvent* %88, i32 0, i32 4, !dbg !2977
  %90 = load i64, i64* %89, align 8, !dbg !2977
  %91 = call %struct._seamless_window* @sw_get_window_by_wnd(i64 %90), !dbg !2978
  store %struct._seamless_window* %91, %struct._seamless_window** %8, align 8, !dbg !2979
  %92 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !2980
  %93 = icmp ne %struct._seamless_window* %92, null, !dbg !2980
  br i1 %93, label %95, label %94, !dbg !2982

; <label>:94:                                     ; preds = %87
  store i32 0, i32* %1, align 4, !dbg !2983
  br label %736, !dbg !2983

; <label>:95:                                     ; preds = %87
  %96 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !2984
  %97 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %96, i32 0, i32 1, !dbg !2985
  %98 = load i64, i64* %97, align 8, !dbg !2985
  %99 = call i32 @seamless_send_destroy(i64 %98), !dbg !2986
  br label %120, !dbg !2987

; <label>:100:                                    ; preds = %79
  %101 = bitcast %union._XEvent* %2 to %struct.XClientMessageEvent*, !dbg !2988
  %102 = getelementptr inbounds %struct.XClientMessageEvent, %struct.XClientMessageEvent* %101, i32 0, i32 7, !dbg !2990
  %103 = bitcast %union.anon* %102 to [5 x i64]*, !dbg !2991
  %104 = getelementptr inbounds [5 x i64], [5 x i64]* %103, i64 0, i64 0, !dbg !2992
  %105 = load i64, i64* %104, align 8, !dbg !2992
  %106 = load i64, i64* @g_net_wm_ping_atom, align 8, !dbg !2993
  %107 = icmp eq i64 %105, %106, !dbg !2994
  br i1 %107, label %108, label %119, !dbg !2995

; <label>:108:                                    ; preds = %100
  %109 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !2996
  %110 = getelementptr inbounds %struct.Screen, %struct.Screen* %109, i32 0, i32 2, !dbg !2998
  %111 = load i64, i64* %110, align 8, !dbg !2998
  %112 = bitcast %union._XEvent* %2 to %struct.XClientMessageEvent*, !dbg !2999
  %113 = getelementptr inbounds %struct.XClientMessageEvent, %struct.XClientMessageEvent* %112, i32 0, i32 4, !dbg !3000
  store i64 %111, i64* %113, align 8, !dbg !3001
  %114 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3002
  %115 = bitcast %union._XEvent* %2 to %struct.XClientMessageEvent*, !dbg !3003
  %116 = getelementptr inbounds %struct.XClientMessageEvent, %struct.XClientMessageEvent* %115, i32 0, i32 4, !dbg !3004
  %117 = load i64, i64* %116, align 8, !dbg !3004
  %118 = call i32 @XSendEvent(%struct._XDisplay* %114, i64 %117, i32 0, i64 1572864, %union._XEvent* %2), !dbg !3005
  br label %734, !dbg !3006

; <label>:119:                                    ; preds = %100
  br label %120

; <label>:120:                                    ; preds = %119, %95
  br label %121, !dbg !3007

; <label>:121:                                    ; preds = %120, %73
  br label %734, !dbg !3008

; <label>:122:                                    ; preds = %57
  %123 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3009
  %124 = getelementptr inbounds %struct.XKeyEvent, %struct.XKeyEvent* %123, i32 0, i32 7, !dbg !3010
  %125 = load i64, i64* %124, align 8, !dbg !3010
  store i64 %125, i64* @g_last_gesturetime, align 8, !dbg !3011
  %126 = load %struct._XIC*, %struct._XIC** @g_IC, align 8, !dbg !3012
  %127 = icmp ne %struct._XIC* %126, null, !dbg !3014
  br i1 %127, label %128, label %141, !dbg !3015

; <label>:128:                                    ; preds = %122
  %129 = load %struct._XIC*, %struct._XIC** @g_IC, align 8, !dbg !3016
  %130 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3018
  %131 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i32 0, i32 0, !dbg !3019
  %132 = call i32 @XmbLookupString(%struct._XIC* %129, %struct.XKeyEvent* %130, i8* %131, i32 256, i64* %3, i32* %6), !dbg !3020
  %133 = load i32, i32* %6, align 4, !dbg !3021
  %134 = icmp eq i32 %133, 3, !dbg !3023
  br i1 %134, label %140, label %135, !dbg !3024

; <label>:135:                                    ; preds = %128
  %136 = load i32, i32* %6, align 4, !dbg !3025
  %137 = icmp eq i32 %136, 4, !dbg !3027
  br i1 %137, label %140, label %138, !dbg !3028

; <label>:138:                                    ; preds = %135
  %139 = load i32, i32* %6, align 4, !dbg !3029
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.56, i32 0, i32 0), i32 %139), !dbg !3031
  br label %734, !dbg !3032

; <label>:140:                                    ; preds = %135, %128
  br label %145, !dbg !3033

; <label>:141:                                    ; preds = %122
  call void (i32, i32, i8*, ...) @logger(i32 1, i32 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.57, i32 0, i32 0)), !dbg !3034
  %142 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3036
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i32 0, i32 0, !dbg !3037
  %144 = call i32 @XLookupString(%struct.XKeyEvent* %142, i8* %143, i32 256, i64* %3, %struct._XComposeStatus* null), !dbg !3038
  br label %145

; <label>:145:                                    ; preds = %141, %140
  %146 = load i64, i64* %3, align 8, !dbg !3039
  %147 = load i64, i64* %3, align 8, !dbg !3040
  %148 = trunc i64 %147 to i32, !dbg !3040
  %149 = call i8* @get_ksname(i32 %148), !dbg !3041
  call void (i32, i32, i8*, ...) @logger(i32 1, i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.58, i32 0, i32 0), i64 %146, i8* %149), !dbg !3042
  %150 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3043
  %151 = getelementptr inbounds %struct.XKeyEvent, %struct.XKeyEvent* %150, i32 0, i32 13, !dbg !3044
  %152 = load i32, i32* %151, align 4, !dbg !3044
  %153 = load i64, i64* %3, align 8, !dbg !3045
  call void @set_keypress_keysym(i32 %152, i64 %153), !dbg !3046
  %154 = call i64 @time(i64* null) #9, !dbg !3047
  %155 = trunc i64 %154 to i32, !dbg !3047
  store i32 %155, i32* %4, align 4, !dbg !3048
  %156 = load i64, i64* %3, align 8, !dbg !3049
  %157 = trunc i64 %156 to i32, !dbg !3049
  %158 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3051
  %159 = getelementptr inbounds %struct.XKeyEvent, %struct.XKeyEvent* %158, i32 0, i32 12, !dbg !3052
  %160 = load i32, i32* %159, align 8, !dbg !3052
  %161 = load i32, i32* %4, align 4, !dbg !3053
  %162 = call i32 @handle_special_keys(i32 %157, i32 %160, i32 %161, i32 1), !dbg !3054
  %163 = icmp ne i32 %162, 0, !dbg !3054
  br i1 %163, label %164, label %165, !dbg !3055

; <label>:164:                                    ; preds = %145
  br label %734, !dbg !3056

; <label>:165:                                    ; preds = %145
  %166 = load i64, i64* %3, align 8, !dbg !3057
  %167 = trunc i64 %166 to i32, !dbg !3057
  %168 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3058
  %169 = getelementptr inbounds %struct.XKeyEvent, %struct.XKeyEvent* %168, i32 0, i32 13, !dbg !3059
  %170 = load i32, i32* %169, align 4, !dbg !3059
  %171 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3060
  %172 = getelementptr inbounds %struct.XKeyEvent, %struct.XKeyEvent* %171, i32 0, i32 12, !dbg !3061
  %173 = load i32, i32* %172, align 8, !dbg !3061
  %174 = load i32, i32* %4, align 4, !dbg !3062
  call void @xkeymap_send_keys(i32 %167, i32 %170, i32 %173, i32 %174, i32 1, i8 zeroext 0), !dbg !3063
  br label %734, !dbg !3064

; <label>:175:                                    ; preds = %57
  %176 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3065
  %177 = getelementptr inbounds %struct.XKeyEvent, %struct.XKeyEvent* %176, i32 0, i32 7, !dbg !3066
  %178 = load i64, i64* %177, align 8, !dbg !3066
  store i64 %178, i64* @g_last_gesturetime, align 8, !dbg !3067
  %179 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3068
  %180 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i32 0, i32 0, !dbg !3069
  %181 = call i32 @XLookupString(%struct.XKeyEvent* %179, i8* %180, i32 256, i64* %3, %struct._XComposeStatus* null), !dbg !3070
  %182 = load i64, i64* %3, align 8, !dbg !3071
  %183 = load i64, i64* %3, align 8, !dbg !3072
  %184 = trunc i64 %183 to i32, !dbg !3072
  %185 = call i8* @get_ksname(i32 %184), !dbg !3073
  call void (i32, i32, i8*, ...) @logger(i32 1, i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.59, i32 0, i32 0), i64 %182, i8* %185), !dbg !3074
  %186 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3075
  %187 = getelementptr inbounds %struct.XKeyEvent, %struct.XKeyEvent* %186, i32 0, i32 13, !dbg !3076
  %188 = load i32, i32* %187, align 4, !dbg !3076
  %189 = load i64, i64* %3, align 8, !dbg !3077
  %190 = call i64 @reset_keypress_keysym(i32 %188, i64 %189), !dbg !3078
  store i64 %190, i64* %3, align 8, !dbg !3079
  %191 = call i64 @time(i64* null) #9, !dbg !3080
  %192 = trunc i64 %191 to i32, !dbg !3080
  store i32 %192, i32* %4, align 4, !dbg !3081
  %193 = load i64, i64* %3, align 8, !dbg !3082
  %194 = trunc i64 %193 to i32, !dbg !3082
  %195 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3084
  %196 = getelementptr inbounds %struct.XKeyEvent, %struct.XKeyEvent* %195, i32 0, i32 12, !dbg !3085
  %197 = load i32, i32* %196, align 8, !dbg !3085
  %198 = load i32, i32* %4, align 4, !dbg !3086
  %199 = call i32 @handle_special_keys(i32 %194, i32 %197, i32 %198, i32 0), !dbg !3087
  %200 = icmp ne i32 %199, 0, !dbg !3087
  br i1 %200, label %201, label %202, !dbg !3088

; <label>:201:                                    ; preds = %175
  br label %734, !dbg !3089

; <label>:202:                                    ; preds = %175
  %203 = load i64, i64* %3, align 8, !dbg !3090
  %204 = trunc i64 %203 to i32, !dbg !3090
  %205 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3091
  %206 = getelementptr inbounds %struct.XKeyEvent, %struct.XKeyEvent* %205, i32 0, i32 13, !dbg !3092
  %207 = load i32, i32* %206, align 4, !dbg !3092
  %208 = bitcast %union._XEvent* %2 to %struct.XKeyEvent*, !dbg !3093
  %209 = getelementptr inbounds %struct.XKeyEvent, %struct.XKeyEvent* %208, i32 0, i32 12, !dbg !3094
  %210 = load i32, i32* %209, align 8, !dbg !3094
  %211 = load i32, i32* %4, align 4, !dbg !3095
  call void @xkeymap_send_keys(i32 %204, i32 %207, i32 %210, i32 %211, i32 0, i8 zeroext 0), !dbg !3096
  br label %734, !dbg !3097

; <label>:212:                                    ; preds = %57
  call void @handle_button_event(%union._XEvent* byval align 8 %2, i32 1), !dbg !3098
  br label %734, !dbg !3099

; <label>:213:                                    ; preds = %57
  call void @handle_button_event(%union._XEvent* byval align 8 %2, i32 0), !dbg !3100
  br label %734, !dbg !3101

; <label>:214:                                    ; preds = %57
  %215 = load i32, i32* @g_moving_wnd, align 4, !dbg !3102
  %216 = icmp ne i32 %215, 0, !dbg !3102
  br i1 %216, label %217, label %231, !dbg !3104

; <label>:217:                                    ; preds = %214
  %218 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3105
  %219 = load i64, i64* @g_wnd, align 8, !dbg !3107
  %220 = bitcast %union._XEvent* %2 to %struct.XMotionEvent*, !dbg !3108
  %221 = getelementptr inbounds %struct.XMotionEvent, %struct.XMotionEvent* %220, i32 0, i32 10, !dbg !3109
  %222 = load i32, i32* %221, align 8, !dbg !3109
  %223 = load i32, i32* @g_move_x_offset, align 4, !dbg !3110
  %224 = sub nsw i32 %222, %223, !dbg !3111
  %225 = bitcast %union._XEvent* %2 to %struct.XMotionEvent*, !dbg !3112
  %226 = getelementptr inbounds %struct.XMotionEvent, %struct.XMotionEvent* %225, i32 0, i32 11, !dbg !3113
  %227 = load i32, i32* %226, align 4, !dbg !3113
  %228 = load i32, i32* @g_move_y_offset, align 4, !dbg !3114
  %229 = sub nsw i32 %227, %228, !dbg !3115
  %230 = call i32 @XMoveWindow(%struct._XDisplay* %218, i64 %219, i32 %224, i32 %229), !dbg !3116
  br label %734, !dbg !3117

; <label>:231:                                    ; preds = %214
  %232 = load i32, i32* @g_fullscreen, align 4, !dbg !3118
  %233 = icmp ne i32 %232, 0, !dbg !3118
  br i1 %233, label %234, label %241, !dbg !3120

; <label>:234:                                    ; preds = %231
  %235 = load i32, i32* @g_focused, align 4, !dbg !3121
  %236 = icmp ne i32 %235, 0, !dbg !3121
  br i1 %236, label %241, label %237, !dbg !3123

; <label>:237:                                    ; preds = %234
  %238 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3124
  %239 = load i64, i64* @g_wnd, align 8, !dbg !3125
  %240 = call i32 @XSetInputFocus(%struct._XDisplay* %238, i64 %239, i32 1, i64 0), !dbg !3126
  br label %241, !dbg !3126

; <label>:241:                                    ; preds = %237, %234, %231
  %242 = bitcast %union._XEvent* %2 to %struct.XMotionEvent*, !dbg !3127
  %243 = getelementptr inbounds %struct.XMotionEvent, %struct.XMotionEvent* %242, i32 0, i32 4, !dbg !3129
  %244 = load i64, i64* %243, align 8, !dbg !3129
  %245 = load i64, i64* @g_wnd, align 8, !dbg !3130
  %246 = icmp eq i64 %244, %245, !dbg !3131
  br i1 %246, label %247, label %258, !dbg !3132

; <label>:247:                                    ; preds = %241
  %248 = call i64 @time(i64* null) #9, !dbg !3133
  %249 = trunc i64 %248 to i32, !dbg !3133
  %250 = bitcast %union._XEvent* %2 to %struct.XMotionEvent*, !dbg !3135
  %251 = getelementptr inbounds %struct.XMotionEvent, %struct.XMotionEvent* %250, i32 0, i32 8, !dbg !3136
  %252 = load i32, i32* %251, align 8, !dbg !3136
  %253 = trunc i32 %252 to i16, !dbg !3137
  %254 = bitcast %union._XEvent* %2 to %struct.XMotionEvent*, !dbg !3138
  %255 = getelementptr inbounds %struct.XMotionEvent, %struct.XMotionEvent* %254, i32 0, i32 9, !dbg !3139
  %256 = load i32, i32* %255, align 4, !dbg !3139
  %257 = trunc i32 %256 to i16, !dbg !3140
  call void @rdp_send_input(i32 %249, i16 zeroext -32767, i16 zeroext 2048, i16 zeroext %253, i16 zeroext %257), !dbg !3141
  br label %269, !dbg !3143

; <label>:258:                                    ; preds = %241
  %259 = call i64 @time(i64* null) #9, !dbg !3144
  %260 = trunc i64 %259 to i32, !dbg !3144
  %261 = bitcast %union._XEvent* %2 to %struct.XMotionEvent*, !dbg !3146
  %262 = getelementptr inbounds %struct.XMotionEvent, %struct.XMotionEvent* %261, i32 0, i32 10, !dbg !3147
  %263 = load i32, i32* %262, align 8, !dbg !3147
  %264 = trunc i32 %263 to i16, !dbg !3148
  %265 = bitcast %union._XEvent* %2 to %struct.XMotionEvent*, !dbg !3149
  %266 = getelementptr inbounds %struct.XMotionEvent, %struct.XMotionEvent* %265, i32 0, i32 11, !dbg !3150
  %267 = load i32, i32* %266, align 4, !dbg !3150
  %268 = trunc i32 %267 to i16, !dbg !3151
  call void @rdp_send_input(i32 %260, i16 zeroext -32767, i16 zeroext 2048, i16 zeroext %264, i16 zeroext %268), !dbg !3152
  br label %269

; <label>:269:                                    ; preds = %258, %247
  br label %734, !dbg !3154

; <label>:270:                                    ; preds = %57
  %271 = bitcast %union._XEvent* %2 to %struct.XFocusChangeEvent*, !dbg !3155
  %272 = getelementptr inbounds %struct.XFocusChangeEvent, %struct.XFocusChangeEvent* %271, i32 0, i32 5, !dbg !3157
  %273 = load i32, i32* %272, align 8, !dbg !3157
  %274 = icmp eq i32 %273, 1, !dbg !3158
  br i1 %274, label %275, label %276, !dbg !3159

; <label>:275:                                    ; preds = %270
  br label %734, !dbg !3160

; <label>:276:                                    ; preds = %270
  store i32 1, i32* @g_focused, align 4, !dbg !3161
  call void @reset_modifier_keys(), !dbg !3162
  %277 = load i32, i32* @g_grab_keyboard, align 4, !dbg !3163
  %278 = icmp ne i32 %277, 0, !dbg !3163
  br i1 %278, label %279, label %286, !dbg !3165

; <label>:279:                                    ; preds = %276
  %280 = load i32, i32* @g_mouse_in_wnd, align 4, !dbg !3166
  %281 = icmp ne i32 %280, 0, !dbg !3166
  br i1 %281, label %282, label %286, !dbg !3168

; <label>:282:                                    ; preds = %279
  %283 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3169
  %284 = load i64, i64* @g_wnd, align 8, !dbg !3170
  %285 = call i32 @XGrabKeyboard(%struct._XDisplay* %283, i64 %284, i32 1, i32 1, i32 1, i64 0), !dbg !3171
  br label %286, !dbg !3171

; <label>:286:                                    ; preds = %282, %279, %276
  %287 = bitcast %union._XEvent* %2 to %struct.XFocusChangeEvent*, !dbg !3172
  %288 = getelementptr inbounds %struct.XFocusChangeEvent, %struct.XFocusChangeEvent* %287, i32 0, i32 4, !dbg !3173
  %289 = load i64, i64* %288, align 8, !dbg !3173
  %290 = call %struct._seamless_window* @sw_get_window_by_wnd(i64 %289), !dbg !3174
  store %struct._seamless_window* %290, %struct._seamless_window** %8, align 8, !dbg !3175
  %291 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3176
  %292 = icmp ne %struct._seamless_window* %291, null, !dbg !3176
  br i1 %292, label %294, label %293, !dbg !3178

; <label>:293:                                    ; preds = %286
  br label %734, !dbg !3179

; <label>:294:                                    ; preds = %286
  %295 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3180
  %296 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %295, i32 0, i32 1, !dbg !3182
  %297 = load i64, i64* %296, align 8, !dbg !3182
  %298 = load i64, i64* @g_seamless_focused, align 8, !dbg !3183
  %299 = icmp ne i64 %297, %298, !dbg !3184
  br i1 %299, label %300, label %313, !dbg !3185

; <label>:300:                                    ; preds = %294
  %301 = load i64, i64* @g_seamless_focused, align 8, !dbg !3186
  %302 = call i32 @sw_window_exists(i64 %301), !dbg !3189
  %303 = icmp ne i32 %302, 0, !dbg !3189
  br i1 %303, label %304, label %309, !dbg !3190

; <label>:304:                                    ; preds = %300
  %305 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3191
  %306 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %305, i32 0, i32 1, !dbg !3192
  %307 = load i64, i64* %306, align 8, !dbg !3192
  %308 = call i32 @seamless_send_focus(i64 %307, i64 0), !dbg !3193
  br label %309, !dbg !3193

; <label>:309:                                    ; preds = %304, %300
  %310 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3194
  %311 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %310, i32 0, i32 1, !dbg !3195
  %312 = load i64, i64* %311, align 8, !dbg !3195
  store i64 %312, i64* @g_seamless_focused, align 8, !dbg !3196
  br label %313, !dbg !3197

; <label>:313:                                    ; preds = %309, %294
  br label %734, !dbg !3198

; <label>:314:                                    ; preds = %57
  %315 = bitcast %union._XEvent* %2 to %struct.XFocusChangeEvent*, !dbg !3199
  %316 = getelementptr inbounds %struct.XFocusChangeEvent, %struct.XFocusChangeEvent* %315, i32 0, i32 5, !dbg !3201
  %317 = load i32, i32* %316, align 8, !dbg !3201
  %318 = icmp eq i32 %317, 2, !dbg !3202
  br i1 %318, label %319, label %320, !dbg !3203

; <label>:319:                                    ; preds = %314
  br label %734, !dbg !3204

; <label>:320:                                    ; preds = %314
  store i32 0, i32* @g_focused, align 4, !dbg !3205
  %321 = bitcast %union._XEvent* %2 to %struct.XFocusChangeEvent*, !dbg !3206
  %322 = getelementptr inbounds %struct.XFocusChangeEvent, %struct.XFocusChangeEvent* %321, i32 0, i32 5, !dbg !3208
  %323 = load i32, i32* %322, align 8, !dbg !3208
  %324 = icmp eq i32 %323, 3, !dbg !3209
  br i1 %324, label %325, label %328, !dbg !3210

; <label>:325:                                    ; preds = %320
  %326 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3211
  %327 = call i32 @XUngrabKeyboard(%struct._XDisplay* %326, i64 0), !dbg !3212
  br label %328, !dbg !3212

; <label>:328:                                    ; preds = %325, %320
  br label %734, !dbg !3213

; <label>:329:                                    ; preds = %57
  store i32 1, i32* @g_mouse_in_wnd, align 4, !dbg !3214
  %330 = load i32, i32* @g_fullscreen, align 4, !dbg !3215
  %331 = icmp ne i32 %330, 0, !dbg !3215
  br i1 %331, label %332, label %336, !dbg !3217

; <label>:332:                                    ; preds = %329
  %333 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3218
  %334 = load i64, i64* @g_wnd, align 8, !dbg !3220
  %335 = call i32 @XSetInputFocus(%struct._XDisplay* %333, i64 %334, i32 1, i64 0), !dbg !3221
  br label %734, !dbg !3222

; <label>:336:                                    ; preds = %329
  %337 = load i32, i32* @g_focused, align 4, !dbg !3223
  %338 = icmp ne i32 %337, 0, !dbg !3223
  br i1 %338, label %339, label %343, !dbg !3225

; <label>:339:                                    ; preds = %336
  %340 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3226
  %341 = load i64, i64* @g_wnd, align 8, !dbg !3227
  %342 = call i32 @XGrabKeyboard(%struct._XDisplay* %340, i64 %341, i32 1, i32 1, i32 1, i64 0), !dbg !3228
  br label %343, !dbg !3228

; <label>:343:                                    ; preds = %339, %336
  br label %734, !dbg !3229

; <label>:344:                                    ; preds = %57
  store i32 0, i32* @g_mouse_in_wnd, align 4, !dbg !3230
  %345 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3231
  %346 = call i32 @XUngrabKeyboard(%struct._XDisplay* %345, i64 0), !dbg !3232
  br label %734, !dbg !3233

; <label>:347:                                    ; preds = %57
  %348 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3234
  %349 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %348, i32 0, i32 4, !dbg !3236
  %350 = load i64, i64* %349, align 8, !dbg !3236
  %351 = load i64, i64* @g_wnd, align 8, !dbg !3237
  %352 = icmp eq i64 %350, %351, !dbg !3238
  br i1 %352, label %353, label %379, !dbg !3239

; <label>:353:                                    ; preds = %347
  %354 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3240
  %355 = load i64, i64* @g_backstore, align 8, !dbg !3242
  %356 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3243
  %357 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %356, i32 0, i32 4, !dbg !3244
  %358 = load i64, i64* %357, align 8, !dbg !3244
  %359 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !3245
  %360 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3246
  %361 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %360, i32 0, i32 5, !dbg !3247
  %362 = load i32, i32* %361, align 8, !dbg !3247
  %363 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3248
  %364 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %363, i32 0, i32 6, !dbg !3249
  %365 = load i32, i32* %364, align 4, !dbg !3249
  %366 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3250
  %367 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %366, i32 0, i32 7, !dbg !3251
  %368 = load i32, i32* %367, align 8, !dbg !3251
  %369 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3252
  %370 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %369, i32 0, i32 8, !dbg !3253
  %371 = load i32, i32* %370, align 4, !dbg !3253
  %372 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3254
  %373 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %372, i32 0, i32 5, !dbg !3255
  %374 = load i32, i32* %373, align 8, !dbg !3255
  %375 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3256
  %376 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %375, i32 0, i32 6, !dbg !3257
  %377 = load i32, i32* %376, align 4, !dbg !3257
  %378 = call i32 @XCopyArea(%struct._XDisplay* %354, i64 %355, i64 %358, %struct._XGC* %359, i32 %362, i32 %365, i32 %368, i32 %371, i32 %374, i32 %377), !dbg !3258
  br label %421, !dbg !3259

; <label>:379:                                    ; preds = %347
  %380 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3260
  %381 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %380, i32 0, i32 4, !dbg !3262
  %382 = load i64, i64* %381, align 8, !dbg !3262
  %383 = call %struct._seamless_window* @sw_get_window_by_wnd(i64 %382), !dbg !3263
  store %struct._seamless_window* %383, %struct._seamless_window** %8, align 8, !dbg !3264
  %384 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3265
  %385 = icmp ne %struct._seamless_window* %384, null, !dbg !3265
  br i1 %385, label %387, label %386, !dbg !3267

; <label>:386:                                    ; preds = %379
  br label %734, !dbg !3268

; <label>:387:                                    ; preds = %379
  %388 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3269
  %389 = load i64, i64* @g_backstore, align 8, !dbg !3270
  %390 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3271
  %391 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %390, i32 0, i32 4, !dbg !3272
  %392 = load i64, i64* %391, align 8, !dbg !3272
  %393 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !3273
  %394 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3274
  %395 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %394, i32 0, i32 5, !dbg !3275
  %396 = load i32, i32* %395, align 8, !dbg !3275
  %397 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3276
  %398 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %397, i32 0, i32 4, !dbg !3277
  %399 = load i32, i32* %398, align 8, !dbg !3277
  %400 = add nsw i32 %396, %399, !dbg !3278
  %401 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3279
  %402 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %401, i32 0, i32 6, !dbg !3280
  %403 = load i32, i32* %402, align 4, !dbg !3280
  %404 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3281
  %405 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %404, i32 0, i32 5, !dbg !3282
  %406 = load i32, i32* %405, align 4, !dbg !3282
  %407 = add nsw i32 %403, %406, !dbg !3283
  %408 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3284
  %409 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %408, i32 0, i32 7, !dbg !3285
  %410 = load i32, i32* %409, align 8, !dbg !3285
  %411 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3286
  %412 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %411, i32 0, i32 8, !dbg !3287
  %413 = load i32, i32* %412, align 4, !dbg !3287
  %414 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3288
  %415 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %414, i32 0, i32 5, !dbg !3289
  %416 = load i32, i32* %415, align 8, !dbg !3289
  %417 = bitcast %union._XEvent* %2 to %struct.XExposeEvent*, !dbg !3290
  %418 = getelementptr inbounds %struct.XExposeEvent, %struct.XExposeEvent* %417, i32 0, i32 6, !dbg !3291
  %419 = load i32, i32* %418, align 4, !dbg !3291
  %420 = call i32 @XCopyArea(%struct._XDisplay* %388, i64 %389, i64 %392, %struct._XGC* %393, i32 %400, i32 %407, i32 %410, i32 %413, i32 %416, i32 %419), !dbg !3292
  br label %421

; <label>:421:                                    ; preds = %387, %353
  br label %734, !dbg !3293

; <label>:422:                                    ; preds = %57
  %423 = bitcast %union._XEvent* %2 to %struct.XMappingEvent*, !dbg !3294
  %424 = getelementptr inbounds %struct.XMappingEvent, %struct.XMappingEvent* %423, i32 0, i32 5, !dbg !3296
  %425 = load i32, i32* %424, align 8, !dbg !3296
  %426 = icmp eq i32 %425, 1, !dbg !3297
  br i1 %426, label %432, label %427, !dbg !3298

; <label>:427:                                    ; preds = %422
  %428 = bitcast %union._XEvent* %2 to %struct.XMappingEvent*, !dbg !3299
  %429 = getelementptr inbounds %struct.XMappingEvent, %struct.XMappingEvent* %428, i32 0, i32 5, !dbg !3301
  %430 = load i32, i32* %429, align 8, !dbg !3301
  %431 = icmp eq i32 %430, 0, !dbg !3302
  br i1 %431, label %432, label %435, !dbg !3303

; <label>:432:                                    ; preds = %427, %422
  %433 = bitcast %union._XEvent* %2 to %struct.XMappingEvent*, !dbg !3305
  %434 = call i32 @XRefreshKeyboardMapping(%struct.XMappingEvent* %433), !dbg !3306
  br label %435, !dbg !3306

; <label>:435:                                    ; preds = %432, %427
  %436 = bitcast %union._XEvent* %2 to %struct.XMappingEvent*, !dbg !3307
  %437 = getelementptr inbounds %struct.XMappingEvent, %struct.XMappingEvent* %436, i32 0, i32 5, !dbg !3309
  %438 = load i32, i32* %437, align 8, !dbg !3309
  %439 = icmp eq i32 %438, 0, !dbg !3310
  br i1 %439, label %440, label %445, !dbg !3311

; <label>:440:                                    ; preds = %435
  %441 = load %struct.XModifierKeymap*, %struct.XModifierKeymap** @g_mod_map, align 8, !dbg !3312
  %442 = call i32 @XFreeModifiermap(%struct.XModifierKeymap* %441), !dbg !3314
  %443 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3315
  %444 = call %struct.XModifierKeymap* @XGetModifierMapping(%struct._XDisplay* %443), !dbg !3316
  store %struct.XModifierKeymap* %444, %struct.XModifierKeymap** @g_mod_map, align 8, !dbg !3317
  br label %445, !dbg !3318

; <label>:445:                                    ; preds = %440, %435
  %446 = bitcast %union._XEvent* %2 to %struct.XMappingEvent*, !dbg !3319
  %447 = getelementptr inbounds %struct.XMappingEvent, %struct.XMappingEvent* %446, i32 0, i32 5, !dbg !3321
  %448 = load i32, i32* %447, align 8, !dbg !3321
  %449 = icmp eq i32 %448, 2, !dbg !3322
  br i1 %449, label %450, label %451, !dbg !3323

; <label>:450:                                    ; preds = %445
  call void @xwin_refresh_pointer_map(), !dbg !3324
  br label %451, !dbg !3326

; <label>:451:                                    ; preds = %450, %445
  br label %734, !dbg !3327

; <label>:452:                                    ; preds = %57
  %453 = bitcast %union._XEvent* %2 to %struct.XSelectionEvent*, !dbg !3328
  call void @xclip_handle_SelectionNotify(%struct.XSelectionEvent* %453), !dbg !3329
  br label %734, !dbg !3330

; <label>:454:                                    ; preds = %57
  %455 = bitcast %union._XEvent* %2 to %struct.XSelectionRequestEvent*, !dbg !3331
  call void @xclip_handle_SelectionRequest(%struct.XSelectionRequestEvent* %455), !dbg !3332
  br label %734, !dbg !3333

; <label>:456:                                    ; preds = %57
  call void @xclip_handle_SelectionClear(), !dbg !3334
  br label %734, !dbg !3335

; <label>:457:                                    ; preds = %57
  %458 = bitcast %union._XEvent* %2 to %struct.XPropertyEvent*, !dbg !3336
  call void @xclip_handle_PropertyNotify(%struct.XPropertyEvent* %458), !dbg !3337
  %459 = bitcast %union._XEvent* %2 to %struct.XPropertyEvent*, !dbg !3338
  %460 = getelementptr inbounds %struct.XPropertyEvent, %struct.XPropertyEvent* %459, i32 0, i32 4, !dbg !3340
  %461 = load i64, i64* %460, align 8, !dbg !3340
  %462 = load i64, i64* @g_wnd, align 8, !dbg !3341
  %463 = icmp eq i64 %461, %462, !dbg !3342
  br i1 %463, label %464, label %465, !dbg !3343

; <label>:464:                                    ; preds = %457
  br label %734, !dbg !3344

; <label>:465:                                    ; preds = %457
  %466 = bitcast %union._XEvent* %2 to %struct.XPropertyEvent*, !dbg !3345
  %467 = getelementptr inbounds %struct.XPropertyEvent, %struct.XPropertyEvent* %466, i32 0, i32 4, !dbg !3347
  %468 = load i64, i64* %467, align 8, !dbg !3347
  %469 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3348
  %470 = bitcast %struct._XDisplay* %469 to %struct.anon*, !dbg !3349
  %471 = getelementptr inbounds %struct.anon, %struct.anon* %470, i32 0, i32 33, !dbg !3349
  %472 = load i32, i32* %471, align 8, !dbg !3349
  %473 = sext i32 %472 to i64, !dbg !3349
  %474 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3348
  %475 = bitcast %struct._XDisplay* %474 to %struct.anon*, !dbg !3349
  %476 = getelementptr inbounds %struct.anon, %struct.anon* %475, i32 0, i32 35, !dbg !3349
  %477 = load %struct.Screen*, %struct.Screen** %476, align 8, !dbg !3349
  %478 = getelementptr inbounds %struct.Screen, %struct.Screen* %477, i64 %473, !dbg !3349
  %479 = getelementptr inbounds %struct.Screen, %struct.Screen* %478, i32 0, i32 2, !dbg !3350
  %480 = load i64, i64* %479, align 8, !dbg !3350
  %481 = icmp eq i64 %468, %480, !dbg !3351
  br i1 %481, label %482, label %483, !dbg !3352

; <label>:482:                                    ; preds = %465
  br label %734, !dbg !3353

; <label>:483:                                    ; preds = %465
  %484 = bitcast %union._XEvent* %2 to %struct.XPropertyEvent*, !dbg !3354
  %485 = getelementptr inbounds %struct.XPropertyEvent, %struct.XPropertyEvent* %484, i32 0, i32 4, !dbg !3355
  %486 = load i64, i64* %485, align 8, !dbg !3355
  %487 = call %struct._seamless_window* @sw_get_window_by_wnd(i64 %486), !dbg !3356
  store %struct._seamless_window* %487, %struct._seamless_window** %8, align 8, !dbg !3357
  %488 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3358
  %489 = icmp ne %struct._seamless_window* %488, null, !dbg !3358
  br i1 %489, label %491, label %490, !dbg !3360

; <label>:490:                                    ; preds = %483
  br label %734, !dbg !3361

; <label>:491:                                    ; preds = %483
  %492 = bitcast %union._XEvent* %2 to %struct.XPropertyEvent*, !dbg !3362
  %493 = getelementptr inbounds %struct.XPropertyEvent, %struct.XPropertyEvent* %492, i32 0, i32 5, !dbg !3364
  %494 = load i64, i64* %493, align 8, !dbg !3364
  %495 = load i64, i64* @g_net_wm_state_atom, align 8, !dbg !3365
  %496 = icmp eq i64 %494, %495, !dbg !3366
  br i1 %496, label %497, label %516, !dbg !3367

; <label>:497:                                    ; preds = %491
  %498 = bitcast %union._XEvent* %2 to %struct.XPropertyEvent*, !dbg !3368
  %499 = getelementptr inbounds %struct.XPropertyEvent, %struct.XPropertyEvent* %498, i32 0, i32 7, !dbg !3370
  %500 = load i32, i32* %499, align 8, !dbg !3370
  %501 = icmp eq i32 %500, 0, !dbg !3371
  br i1 %501, label %502, label %516, !dbg !3372

; <label>:502:                                    ; preds = %497
  %503 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3373
  %504 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %503, i32 0, i32 0, !dbg !3375
  %505 = load i64, i64* %504, align 8, !dbg !3375
  %506 = call i32 @ewmh_get_window_state(i64 %505), !dbg !3376
  %507 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3377
  %508 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %507, i32 0, i32 8, !dbg !3378
  store i32 %506, i32* %508, align 8, !dbg !3379
  %509 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3380
  %510 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %509, i32 0, i32 1, !dbg !3381
  %511 = load i64, i64* %510, align 8, !dbg !3381
  %512 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3382
  %513 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %512, i32 0, i32 8, !dbg !3383
  %514 = load i32, i32* %513, align 8, !dbg !3383
  %515 = call i32 @seamless_send_state(i64 %511, i32 %514, i64 0), !dbg !3384
  br label %516, !dbg !3385

; <label>:516:                                    ; preds = %502, %497, %491
  %517 = bitcast %union._XEvent* %2 to %struct.XPropertyEvent*, !dbg !3386
  %518 = getelementptr inbounds %struct.XPropertyEvent, %struct.XPropertyEvent* %517, i32 0, i32 5, !dbg !3388
  %519 = load i64, i64* %518, align 8, !dbg !3388
  %520 = load i64, i64* @g_net_wm_desktop_atom, align 8, !dbg !3389
  %521 = icmp eq i64 %519, %520, !dbg !3390
  br i1 %521, label %522, label %540, !dbg !3391

; <label>:522:                                    ; preds = %516
  %523 = bitcast %union._XEvent* %2 to %struct.XPropertyEvent*, !dbg !3392
  %524 = getelementptr inbounds %struct.XPropertyEvent, %struct.XPropertyEvent* %523, i32 0, i32 7, !dbg !3394
  %525 = load i32, i32* %524, align 8, !dbg !3394
  %526 = icmp eq i32 %525, 0, !dbg !3395
  br i1 %526, label %527, label %540, !dbg !3396

; <label>:527:                                    ; preds = %522
  %528 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3397
  %529 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %528, i32 0, i32 0, !dbg !3399
  %530 = load i64, i64* %529, align 8, !dbg !3399
  %531 = call i32 @ewmh_get_window_desktop(i64 %530), !dbg !3400
  %532 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3401
  %533 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %532, i32 0, i32 9, !dbg !3402
  store i32 %531, i32* %533, align 4, !dbg !3403
  %534 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3404
  %535 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %534, i32 0, i32 0, !dbg !3405
  %536 = load i64, i64* %535, align 8, !dbg !3405
  %537 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3406
  %538 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %537, i32 0, i32 9, !dbg !3407
  %539 = load i32, i32* %538, align 4, !dbg !3407
  call void @sw_all_to_desktop(i64 %536, i32 %539), !dbg !3408
  br label %540, !dbg !3409

; <label>:540:                                    ; preds = %527, %522, %516
  br label %734, !dbg !3410

; <label>:541:                                    ; preds = %57
  %542 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3411
  %543 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %542, i32 0, i32 5, !dbg !3413
  %544 = load i64, i64* %543, align 8, !dbg !3413
  %545 = load i64, i64* @g_wnd, align 8, !dbg !3414
  %546 = icmp eq i64 %544, %545, !dbg !3415
  br i1 %546, label %547, label %557, !dbg !3416

; <label>:547:                                    ; preds = %541
  call void @llvm.dbg.declare(metadata %struct.XWindowAttributes* %9, metadata !3417, metadata !416), !dbg !3419
  %548 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3420
  %549 = load i64, i64* @g_wnd, align 8, !dbg !3421
  %550 = call i32 @XGetWindowAttributes(%struct._XDisplay* %548, i64 %549, %struct.XWindowAttributes* %9), !dbg !3422
  %551 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %9, i32 0, i32 2, !dbg !3423
  %552 = load i32, i32* %551, align 8, !dbg !3423
  store i32 %552, i32* @g_window_width, align 4, !dbg !3424
  %553 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %9, i32 0, i32 3, !dbg !3425
  %554 = load i32, i32* %553, align 4, !dbg !3425
  store i32 %554, i32* @g_window_height, align 4, !dbg !3426
  %555 = load i32, i32* @g_window_width, align 4, !dbg !3427
  %556 = load i32, i32* @g_window_height, align 4, !dbg !3428
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.60, i32 0, i32 0), i32 %555, i32 %556), !dbg !3429
  store i32 1, i32* @xwin_process_events.is_g_wnd_mapped, align 4, !dbg !3430
  br label %557, !dbg !3431

; <label>:557:                                    ; preds = %547, %541
  %558 = load i32, i32* @g_seamless_active, align 4, !dbg !3432
  %559 = icmp ne i32 %558, 0, !dbg !3432
  br i1 %559, label %561, label %560, !dbg !3434

; <label>:560:                                    ; preds = %557
  call void @rdp_send_suppress_output_pdu(i32 1), !dbg !3435
  br label %561, !dbg !3437

; <label>:561:                                    ; preds = %560, %557
  br label %734, !dbg !3438

; <label>:562:                                    ; preds = %57
  %563 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3439
  %564 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %563, i32 0, i32 5, !dbg !3441
  %565 = load i64, i64* %564, align 8, !dbg !3441
  %566 = load i64, i64* @g_wnd, align 8, !dbg !3442
  %567 = icmp eq i64 %565, %566, !dbg !3443
  br i1 %567, label %568, label %569, !dbg !3444

; <label>:568:                                    ; preds = %562
  store i32 0, i32* @xwin_process_events.is_g_wnd_mapped, align 4, !dbg !3445
  br label %569, !dbg !3447

; <label>:569:                                    ; preds = %568, %562
  %570 = load i32, i32* @g_seamless_active, align 4, !dbg !3448
  %571 = icmp ne i32 %570, 0, !dbg !3448
  br i1 %571, label %573, label %572, !dbg !3450

; <label>:572:                                    ; preds = %569
  call void @rdp_send_suppress_output_pdu(i32 0), !dbg !3451
  br label %573, !dbg !3453

; <label>:573:                                    ; preds = %572, %569
  br label %734, !dbg !3454

; <label>:574:                                    ; preds = %57
  %575 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3455
  %576 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %575, i32 0, i32 5, !dbg !3457
  %577 = load i64, i64* %576, align 8, !dbg !3457
  %578 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3458
  %579 = bitcast %struct._XDisplay* %578 to %struct.anon*, !dbg !3459
  %580 = getelementptr inbounds %struct.anon, %struct.anon* %579, i32 0, i32 33, !dbg !3459
  %581 = load i32, i32* %580, align 8, !dbg !3459
  %582 = sext i32 %581 to i64, !dbg !3459
  %583 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3458
  %584 = bitcast %struct._XDisplay* %583 to %struct.anon*, !dbg !3459
  %585 = getelementptr inbounds %struct.anon, %struct.anon* %584, i32 0, i32 35, !dbg !3459
  %586 = load %struct.Screen*, %struct.Screen** %585, align 8, !dbg !3459
  %587 = getelementptr inbounds %struct.Screen, %struct.Screen* %586, i64 %582, !dbg !3459
  %588 = getelementptr inbounds %struct.Screen, %struct.Screen* %587, i32 0, i32 2, !dbg !3460
  %589 = load i64, i64* %588, align 8, !dbg !3460
  %590 = icmp eq i64 %577, %589, !dbg !3461
  br i1 %590, label %591, label %639, !dbg !3462

; <label>:591:                                    ; preds = %574
  %592 = load i32, i32* @g_window_size_type, align 4, !dbg !3463
  %593 = icmp eq i32 %592, 1, !dbg !3466
  br i1 %593, label %600, label %594, !dbg !3467

; <label>:594:                                    ; preds = %591
  %595 = load i32, i32* @g_window_size_type, align 4, !dbg !3468
  %596 = icmp eq i32 %595, 3, !dbg !3470
  br i1 %596, label %600, label %597, !dbg !3471

; <label>:597:                                    ; preds = %594
  %598 = load i32, i32* @g_fullscreen, align 4, !dbg !3472
  %599 = icmp ne i32 %598, 0, !dbg !3472
  br i1 %599, label %600, label %635, !dbg !3473

; <label>:600:                                    ; preds = %597, %594, %591
  %601 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3475
  %602 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %601, i32 0, i32 8, !dbg !3478
  %603 = load i32, i32* %602, align 8, !dbg !3478
  %604 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !3479
  %605 = getelementptr inbounds %struct.Screen, %struct.Screen* %604, i32 0, i32 3, !dbg !3480
  %606 = load i32, i32* %605, align 8, !dbg !3480
  %607 = icmp ne i32 %603, %606, !dbg !3481
  br i1 %607, label %616, label %608, !dbg !3482

; <label>:608:                                    ; preds = %600
  %609 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3483
  %610 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %609, i32 0, i32 9, !dbg !3485
  %611 = load i32, i32* %610, align 4, !dbg !3485
  %612 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !3486
  %613 = getelementptr inbounds %struct.Screen, %struct.Screen* %612, i32 0, i32 4, !dbg !3487
  %614 = load i32, i32* %613, align 4, !dbg !3487
  %615 = icmp ne i32 %611, %614, !dbg !3488
  br i1 %615, label %616, label %634, !dbg !3489

; <label>:616:                                    ; preds = %608, %600
  %617 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3491
  %618 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %617, i32 0, i32 8, !dbg !3493
  %619 = load i32, i32* %618, align 8, !dbg !3493
  %620 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3494
  %621 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %620, i32 0, i32 9, !dbg !3495
  %622 = load i32, i32* %621, align 4, !dbg !3495
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.61, i32 0, i32 0), i32 %619, i32 %622), !dbg !3496
  %623 = call i32 @gettimeofday(%struct.timeval* @g_resize_timer, %struct.timezone* null) #9, !dbg !3497
  %624 = load i32, i32* @g_fullscreen, align 4, !dbg !3498
  %625 = icmp ne i32 %624, 0, !dbg !3498
  br i1 %625, label %626, label %633, !dbg !3500

; <label>:626:                                    ; preds = %616
  %627 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3501
  %628 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %627, i32 0, i32 8, !dbg !3502
  %629 = load i32, i32* %628, align 8, !dbg !3502
  %630 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3503
  %631 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %630, i32 0, i32 9, !dbg !3504
  %632 = load i32, i32* %631, align 4, !dbg !3504
  call void @ui_resize_window(i32 %629, i32 %632), !dbg !3505
  br label %633, !dbg !3505

; <label>:633:                                    ; preds = %626, %616
  store i32 1, i32* @g_pending_resize, align 4, !dbg !3506
  br label %634, !dbg !3507

; <label>:634:                                    ; preds = %633, %608
  br label %635, !dbg !3508

; <label>:635:                                    ; preds = %634, %597
  %636 = call i32 @XRRUpdateConfiguration(%union._XEvent* %2), !dbg !3509
  %637 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3510
  %638 = call i32 @XSync(%struct._XDisplay* %637, i32 0), !dbg !3511
  br label %688, !dbg !3512

; <label>:639:                                    ; preds = %574
  %640 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3513
  %641 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %640, i32 0, i32 5, !dbg !3515
  %642 = load i64, i64* %641, align 8, !dbg !3515
  %643 = load i64, i64* @g_wnd, align 8, !dbg !3516
  %644 = icmp eq i64 %642, %643, !dbg !3517
  br i1 %644, label %645, label %687, !dbg !3518

; <label>:645:                                    ; preds = %639
  %646 = load i32, i32* @g_seamless_rdp, align 4, !dbg !3519
  %647 = icmp ne i32 %646, 0, !dbg !3519
  br i1 %647, label %687, label %648, !dbg !3521

; <label>:648:                                    ; preds = %645
  %649 = load i32, i32* @xwin_process_events.is_g_wnd_mapped, align 4, !dbg !3522
  %650 = icmp ne i32 %649, 0, !dbg !3522
  br i1 %650, label %651, label %687, !dbg !3524

; <label>:651:                                    ; preds = %648
  %652 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3525
  %653 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %652, i32 0, i32 8, !dbg !3527
  %654 = load i32, i32* %653, align 8, !dbg !3527
  store i32 %654, i32* @g_window_width, align 4, !dbg !3528
  %655 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3529
  %656 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %655, i32 0, i32 9, !dbg !3530
  %657 = load i32, i32* %656, align 4, !dbg !3530
  store i32 %657, i32* @g_window_height, align 4, !dbg !3531
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3532, metadata !416), !dbg !3533
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3534, metadata !416), !dbg !3535
  %658 = load i32, i32* @g_window_width, align 4, !dbg !3536
  store i32 %658, i32* %10, align 4, !dbg !3537
  %659 = load i32, i32* @g_window_height, align 4, !dbg !3538
  store i32 %659, i32* %11, align 4, !dbg !3539
  call void @utils_apply_session_size_limitations(i32* %10, i32* %11), !dbg !3540
  %660 = load i16, i16* @g_session_width, align 2, !dbg !3541
  %661 = zext i16 %660 to i32, !dbg !3541
  %662 = load i16, i16* @g_session_height, align 2, !dbg !3542
  %663 = zext i16 %662 to i32, !dbg !3542
  %664 = load i32, i32* @g_window_width, align 4, !dbg !3543
  %665 = load i32, i32* @g_window_height, align 4, !dbg !3544
  %666 = load i32, i32* %10, align 4, !dbg !3545
  %667 = load i32, i32* %11, align 4, !dbg !3546
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.62, i32 0, i32 0), i32 %661, i32 %663, i32 %664, i32 %665, i32 %666, i32 %667), !dbg !3547
  %668 = load i16, i16* @g_session_width, align 2, !dbg !3548
  %669 = zext i16 %668 to i32, !dbg !3548
  %670 = load i32, i32* %10, align 4, !dbg !3550
  %671 = icmp ne i32 %669, %670, !dbg !3551
  br i1 %671, label %677, label %672, !dbg !3552

; <label>:672:                                    ; preds = %651
  %673 = load i16, i16* @g_session_height, align 2, !dbg !3553
  %674 = zext i16 %673 to i32, !dbg !3553
  %675 = load i32, i32* %11, align 4, !dbg !3555
  %676 = icmp ne i32 %674, %675, !dbg !3556
  br i1 %676, label %677, label %685, !dbg !3557

; <label>:677:                                    ; preds = %672, %651
  %678 = load i16, i16* @g_session_width, align 2, !dbg !3559
  %679 = zext i16 %678 to i32, !dbg !3559
  %680 = load i16, i16* @g_session_height, align 2, !dbg !3561
  %681 = zext i16 %680 to i32, !dbg !3561
  %682 = load i32, i32* @g_window_width, align 4, !dbg !3562
  %683 = load i32, i32* @g_window_height, align 4, !dbg !3563
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.63, i32 0, i32 0), i32 %679, i32 %681, i32 %682, i32 %683), !dbg !3564
  %684 = call i32 @gettimeofday(%struct.timeval* @g_resize_timer, %struct.timezone* null) #9, !dbg !3565
  store i32 1, i32* @g_pending_resize, align 4, !dbg !3566
  br label %686, !dbg !3567

; <label>:685:                                    ; preds = %672
  store i32 0, i32* @g_pending_resize, align 4, !dbg !3568
  br label %686

; <label>:686:                                    ; preds = %685, %677
  br label %687, !dbg !3570

; <label>:687:                                    ; preds = %686, %648, %645, %639
  br label %688

; <label>:688:                                    ; preds = %687, %635
  %689 = load i32, i32* @g_seamless_active, align 4, !dbg !3571
  %690 = icmp ne i32 %689, 0, !dbg !3571
  br i1 %690, label %692, label %691, !dbg !3573

; <label>:691:                                    ; preds = %688
  br label %734, !dbg !3574

; <label>:692:                                    ; preds = %688
  %693 = bitcast %union._XEvent* %2 to %struct.XConfigureEvent*, !dbg !3575
  %694 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %693, i32 0, i32 5, !dbg !3576
  %695 = load i64, i64* %694, align 8, !dbg !3576
  %696 = call %struct._seamless_window* @sw_get_window_by_wnd(i64 %695), !dbg !3577
  store %struct._seamless_window* %696, %struct._seamless_window** %8, align 8, !dbg !3578
  %697 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3579
  %698 = icmp ne %struct._seamless_window* %697, null, !dbg !3579
  br i1 %698, label %700, label %699, !dbg !3581

; <label>:699:                                    ; preds = %692
  br label %734, !dbg !3582

; <label>:700:                                    ; preds = %692
  %701 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3583
  %702 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %701, i32 0, i32 10, !dbg !3584
  %703 = load %struct.timeval*, %struct.timeval** %702, align 8, !dbg !3584
  %704 = call i32 @gettimeofday(%struct.timeval* %703, %struct.timezone* null) #9, !dbg !3585
  %705 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3586
  %706 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %705, i32 0, i32 10, !dbg !3588
  %707 = load %struct.timeval*, %struct.timeval** %706, align 8, !dbg !3588
  %708 = getelementptr inbounds %struct.timeval, %struct.timeval* %707, i32 0, i32 1, !dbg !3589
  %709 = load i64, i64* %708, align 8, !dbg !3589
  %710 = add nsw i64 %709, 200000, !dbg !3590
  %711 = icmp sge i64 %710, 1000000, !dbg !3591
  br i1 %711, label %712, label %725, !dbg !3592

; <label>:712:                                    ; preds = %700
  %713 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3593
  %714 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %713, i32 0, i32 10, !dbg !3595
  %715 = load %struct.timeval*, %struct.timeval** %714, align 8, !dbg !3595
  %716 = getelementptr inbounds %struct.timeval, %struct.timeval* %715, i32 0, i32 1, !dbg !3596
  %717 = load i64, i64* %716, align 8, !dbg !3597
  %718 = add nsw i64 %717, -800000, !dbg !3597
  store i64 %718, i64* %716, align 8, !dbg !3597
  %719 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3598
  %720 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %719, i32 0, i32 10, !dbg !3599
  %721 = load %struct.timeval*, %struct.timeval** %720, align 8, !dbg !3599
  %722 = getelementptr inbounds %struct.timeval, %struct.timeval* %721, i32 0, i32 0, !dbg !3600
  %723 = load i64, i64* %722, align 8, !dbg !3601
  %724 = add nsw i64 %723, 1, !dbg !3601
  store i64 %724, i64* %722, align 8, !dbg !3601
  br label %732, !dbg !3602

; <label>:725:                                    ; preds = %700
  %726 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3603
  %727 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %726, i32 0, i32 10, !dbg !3605
  %728 = load %struct.timeval*, %struct.timeval** %727, align 8, !dbg !3605
  %729 = getelementptr inbounds %struct.timeval, %struct.timeval* %728, i32 0, i32 1, !dbg !3606
  %730 = load i64, i64* %729, align 8, !dbg !3607
  %731 = add nsw i64 %730, 200000, !dbg !3607
  store i64 %731, i64* %729, align 8, !dbg !3607
  br label %732

; <label>:732:                                    ; preds = %725, %712
  %733 = load %struct._seamless_window*, %struct._seamless_window** %8, align 8, !dbg !3608
  call void @sw_handle_restack(%struct._seamless_window* %733), !dbg !3609
  br label %734, !dbg !3610

; <label>:734:                                    ; preds = %57, %732, %699, %691, %573, %561, %540, %490, %482, %464, %456, %454, %452, %451, %421, %386, %344, %343, %332, %328, %319, %313, %293, %275, %269, %217, %213, %212, %202, %201, %165, %164, %138, %121, %108, %72
  br label %12, !dbg !3611, !llvm.loop !2919

; <label>:735:                                    ; preds = %20
  store i32 1, i32* %1, align 4, !dbg !3613
  br label %736, !dbg !3613

; <label>:736:                                    ; preds = %735, %94
  %737 = load i32, i32* %1, align 4, !dbg !3614
  ret i32 %737, !dbg !3614
}

declare i32 @XPending(%struct._XDisplay*) #2

; Function Attrs: nounwind uwtable
define internal i32 @process_fds(i32, i32) #0 !dbg !3615 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.fd_set, align 8
  %9 = alloca %struct.fd_set, align 8
  %10 = alloca %struct.timeval, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3618, metadata !416), !dbg !3619
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3620, metadata !416), !dbg !3621
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3622, metadata !416), !dbg !3623
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3624, metadata !416), !dbg !3625
  call void @llvm.dbg.declare(metadata %struct.fd_set* %8, metadata !3626, metadata !416), !dbg !3632
  call void @llvm.dbg.declare(metadata %struct.fd_set* %9, metadata !3633, metadata !416), !dbg !3634
  call void @llvm.dbg.declare(metadata %struct.timeval* %10, metadata !3635, metadata !416), !dbg !3636
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3637, metadata !416), !dbg !3638
  store i32 0, i32* %11, align 4, !dbg !3638
  %16 = load i32, i32* %4, align 4, !dbg !3639
  %17 = load i32, i32* @g_x_socket, align 4, !dbg !3640
  %18 = icmp sgt i32 %16, %17, !dbg !3641
  br i1 %18, label %19, label %21, !dbg !3642

; <label>:19:                                     ; preds = %2
  %20 = load i32, i32* %4, align 4, !dbg !3643
  br label %23, !dbg !3645

; <label>:21:                                     ; preds = %2
  %22 = load i32, i32* @g_x_socket, align 4, !dbg !3646
  br label %23, !dbg !3648

; <label>:23:                                     ; preds = %21, %19
  %24 = phi i32 [ %20, %19 ], [ %22, %21 ], !dbg !3649
  store i32 %24, i32* %6, align 4, !dbg !3651
  br label %25, !dbg !3652, !llvm.loop !3653

; <label>:25:                                     ; preds = %23
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3654, metadata !416), !dbg !3656
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3657, metadata !416), !dbg !3658
  %26 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %8, i32 0, i32 0, !dbg !3659
  %27 = getelementptr inbounds [16 x i64], [16 x i64]* %26, i64 0, i64 0, !dbg !3661
  %28 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %27) #9, !dbg !3662, !srcloc !3663
  %29 = extractvalue { i64, i64* } %28, 0, !dbg !3662
  %30 = extractvalue { i64, i64* } %28, 1, !dbg !3662
  %31 = trunc i64 %29 to i32, !dbg !3662
  store i32 %31, i32* %12, align 4, !dbg !3662
  %32 = ptrtoint i64* %30 to i64, !dbg !3662
  %33 = trunc i64 %32 to i32, !dbg !3662
  store i32 %33, i32* %13, align 4, !dbg !3662
  br label %34, !dbg !3664

; <label>:34:                                     ; preds = %25
  br label %35, !dbg !3665, !llvm.loop !3666

; <label>:35:                                     ; preds = %34
  call void @llvm.dbg.declare(metadata i32* %14, metadata !3667, metadata !416), !dbg !3669
  call void @llvm.dbg.declare(metadata i32* %15, metadata !3670, metadata !416), !dbg !3671
  %36 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %9, i32 0, i32 0, !dbg !3672
  %37 = getelementptr inbounds [16 x i64], [16 x i64]* %36, i64 0, i64 0, !dbg !3674
  %38 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %37) #9, !dbg !3675, !srcloc !3676
  %39 = extractvalue { i64, i64* } %38, 0, !dbg !3675
  %40 = extractvalue { i64, i64* } %38, 1, !dbg !3675
  %41 = trunc i64 %39 to i32, !dbg !3675
  store i32 %41, i32* %14, align 4, !dbg !3675
  %42 = ptrtoint i64* %40 to i64, !dbg !3675
  %43 = trunc i64 %42 to i32, !dbg !3675
  store i32 %43, i32* %15, align 4, !dbg !3675
  br label %44, !dbg !3677

; <label>:44:                                     ; preds = %35
  %45 = load i32, i32* %4, align 4, !dbg !3678
  %46 = srem i32 %45, 64, !dbg !3679
  %47 = zext i32 %46 to i64, !dbg !3680
  %48 = shl i64 1, %47, !dbg !3680
  %49 = load i32, i32* %4, align 4, !dbg !3678
  %50 = sdiv i32 %49, 64, !dbg !3679
  %51 = sext i32 %50 to i64, !dbg !3681
  %52 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %8, i32 0, i32 0, !dbg !3682
  %53 = getelementptr inbounds [16 x i64], [16 x i64]* %52, i64 0, i64 %51, !dbg !3681
  %54 = load i64, i64* %53, align 8, !dbg !3683
  %55 = or i64 %54, %48, !dbg !3683
  store i64 %55, i64* %53, align 8, !dbg !3683
  %56 = load i32, i32* @g_x_socket, align 4, !dbg !3684
  %57 = srem i32 %56, 64, !dbg !3685
  %58 = zext i32 %57 to i64, !dbg !3686
  %59 = shl i64 1, %58, !dbg !3686
  %60 = load i32, i32* @g_x_socket, align 4, !dbg !3684
  %61 = sdiv i32 %60, 64, !dbg !3685
  %62 = sext i32 %61 to i64, !dbg !3687
  %63 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %8, i32 0, i32 0, !dbg !3688
  %64 = getelementptr inbounds [16 x i64], [16 x i64]* %63, i64 0, i64 %62, !dbg !3687
  %65 = load i64, i64* %64, align 8, !dbg !3689
  %66 = or i64 %65, %59, !dbg !3689
  store i64 %66, i64* %64, align 8, !dbg !3689
  %67 = load i32, i32* %5, align 4, !dbg !3690
  %68 = sdiv i32 %67, 1000, !dbg !3691
  %69 = sext i32 %68 to i64, !dbg !3690
  %70 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 0, !dbg !3692
  store i64 %69, i64* %70, align 8, !dbg !3693
  %71 = load i32, i32* %5, align 4, !dbg !3694
  %72 = sext i32 %71 to i64, !dbg !3694
  %73 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 0, !dbg !3695
  %74 = load i64, i64* %73, align 8, !dbg !3695
  %75 = mul nsw i64 %74, 1000, !dbg !3696
  %76 = sub nsw i64 %72, %75, !dbg !3697
  %77 = mul nsw i64 %76, 1000, !dbg !3698
  %78 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 1, !dbg !3699
  store i64 %77, i64* %78, align 8, !dbg !3700
  call void @rdpsnd_add_fds(i32* %6, %struct.fd_set* %8, %struct.fd_set* %9, %struct.timeval* %10), !dbg !3701
  call void @rdpdr_add_fds(i32* %6, %struct.fd_set* %8, %struct.fd_set* %9, %struct.timeval* %10, i32* %11), !dbg !3702
  call void @seamless_select_timeout(%struct.timeval* %10), !dbg !3703
  call void @ctrl_add_fds(i32* %6, %struct.fd_set* %8), !dbg !3704
  %79 = load i32, i32* %6, align 4, !dbg !3705
  %80 = add nsw i32 %79, 1, !dbg !3705
  store i32 %80, i32* %6, align 4, !dbg !3705
  %81 = load i32, i32* %6, align 4, !dbg !3706
  %82 = call i32 @select(i32 %81, %struct.fd_set* %8, %struct.fd_set* %9, %struct.fd_set* null, %struct.timeval* %10), !dbg !3707
  store i32 %82, i32* %7, align 4, !dbg !3708
  %83 = load i32, i32* %7, align 4, !dbg !3709
  %84 = icmp sle i32 %83, 0, !dbg !3711
  br i1 %84, label %85, label %97, !dbg !3712

; <label>:85:                                     ; preds = %44
  %86 = load i32, i32* %7, align 4, !dbg !3713
  %87 = icmp eq i32 %86, -1, !dbg !3716
  br i1 %87, label %88, label %92, !dbg !3717

; <label>:88:                                     ; preds = %85
  %89 = call i32* @__errno_location() #1, !dbg !3718
  %90 = load i32, i32* %89, align 4, !dbg !3720
  %91 = call i8* @strerror(i32 %90) #9, !dbg !3721
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.66, i32 0, i32 0), i8* %91), !dbg !3723
  br label %92, !dbg !3724

; <label>:92:                                     ; preds = %88, %85
  call void @rdpsnd_check_fds(%struct.fd_set* %8, %struct.fd_set* %9), !dbg !3725
  %93 = load i32, i32* %11, align 4, !dbg !3726
  %94 = icmp ne i32 %93, 0, !dbg !3726
  br i1 %94, label %95, label %96, !dbg !3728

; <label>:95:                                     ; preds = %92
  call void @rdpdr_check_fds(%struct.fd_set* %8, %struct.fd_set* %9, i32 1), !dbg !3729
  br label %96, !dbg !3729

; <label>:96:                                     ; preds = %95, %92
  store i32 0, i32* %3, align 4, !dbg !3730
  br label %112, !dbg !3730

; <label>:97:                                     ; preds = %44
  call void @rdpsnd_check_fds(%struct.fd_set* %8, %struct.fd_set* %9), !dbg !3731
  call void @rdpdr_check_fds(%struct.fd_set* %8, %struct.fd_set* %9, i32 0), !dbg !3732
  call void @ctrl_check_fds(%struct.fd_set* %8, %struct.fd_set* %9), !dbg !3733
  %98 = load i32, i32* %4, align 4, !dbg !3734
  %99 = sdiv i32 %98, 64, !dbg !3736
  %100 = sext i32 %99 to i64, !dbg !3736
  %101 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %8, i32 0, i32 0, !dbg !3737
  %102 = getelementptr inbounds [16 x i64], [16 x i64]* %101, i64 0, i64 %100, !dbg !3736
  %103 = load i64, i64* %102, align 8, !dbg !3736
  %104 = load i32, i32* %4, align 4, !dbg !3734
  %105 = srem i32 %104, 64, !dbg !3736
  %106 = zext i32 %105 to i64, !dbg !3738
  %107 = shl i64 1, %106, !dbg !3738
  %108 = and i64 %103, %107, !dbg !3739
  %109 = icmp ne i64 %108, 0, !dbg !3740
  br i1 %109, label %110, label %111, !dbg !3741

; <label>:110:                                    ; preds = %97
  store i32 1, i32* %3, align 4, !dbg !3742
  br label %112, !dbg !3742

; <label>:111:                                    ; preds = %97
  store i32 0, i32* %3, align 4, !dbg !3743
  br label %112, !dbg !3743

; <label>:112:                                    ; preds = %111, %110, %96
  %113 = load i32, i32* %3, align 4, !dbg !3744
  ret i32 %113, !dbg !3744
}

; Function Attrs: nounwind uwtable
define void @ui_move_pointer(i32, i32) #0 !dbg !3745 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3748, metadata !416), !dbg !3749
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3750, metadata !416), !dbg !3751
  %5 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3752
  %6 = load i64, i64* @g_wnd, align 8, !dbg !3753
  %7 = load i64, i64* @g_wnd, align 8, !dbg !3754
  %8 = load i32, i32* %3, align 4, !dbg !3755
  %9 = load i32, i32* %4, align 4, !dbg !3756
  %10 = call i32 @XWarpPointer(%struct._XDisplay* %5, i64 %6, i64 %7, i32 0, i32 0, i32 0, i32 0, i32 %8, i32 %9), !dbg !3757
  ret void, !dbg !3758
}

declare i32 @XWarpPointer(%struct._XDisplay*, i64, i64, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define i8* @ui_create_bitmap(i32, i32, i8*) #0 !dbg !3759 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct._XImage*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3762, metadata !416), !dbg !3763
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3764, metadata !416), !dbg !3765
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3766, metadata !416), !dbg !3767
  call void @llvm.dbg.declare(metadata %struct._XImage** %7, metadata !3768, metadata !416), !dbg !3817
  call void @llvm.dbg.declare(metadata i64* %8, metadata !3818, metadata !416), !dbg !3819
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3820, metadata !416), !dbg !3821
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3822, metadata !416), !dbg !3823
  %11 = load i32, i32* @g_server_depth, align 4, !dbg !3824
  %12 = icmp eq i32 %11, 8, !dbg !3826
  br i1 %12, label %13, label %14, !dbg !3827

; <label>:13:                                     ; preds = %3
  store i32 8, i32* %10, align 4, !dbg !3828
  br label %20, !dbg !3830

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @g_bpp, align 4, !dbg !3831
  store i32 %15, i32* %10, align 4, !dbg !3833
  %16 = load i32, i32* @g_bpp, align 4, !dbg !3834
  %17 = icmp eq i32 %16, 24, !dbg !3836
  br i1 %17, label %18, label %19, !dbg !3837

; <label>:18:                                     ; preds = %14
  store i32 32, i32* %10, align 4, !dbg !3838
  br label %19, !dbg !3839

; <label>:19:                                     ; preds = %18, %14
  br label %20

; <label>:20:                                     ; preds = %19, %13
  %21 = load i32, i32* @g_owncolmap, align 4, !dbg !3840
  %22 = icmp ne i32 %21, 0, !dbg !3840
  br i1 %22, label %23, label %25, !dbg !3840

; <label>:23:                                     ; preds = %20
  %24 = load i8*, i8** %6, align 8, !dbg !3841
  br label %30, !dbg !3843

; <label>:25:                                     ; preds = %20
  %26 = load i32, i32* %4, align 4, !dbg !3844
  %27 = load i32, i32* %5, align 4, !dbg !3846
  %28 = load i8*, i8** %6, align 8, !dbg !3847
  %29 = call i8* @translate_image(i32 %26, i32 %27, i8* %28), !dbg !3848
  br label %30, !dbg !3849

; <label>:30:                                     ; preds = %25, %23
  %31 = phi i8* [ %24, %23 ], [ %29, %25 ], !dbg !3850
  store i8* %31, i8** %9, align 8, !dbg !3852
  %32 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3853
  %33 = load i64, i64* @g_wnd, align 8, !dbg !3854
  %34 = load i32, i32* %4, align 4, !dbg !3855
  %35 = load i32, i32* %5, align 4, !dbg !3856
  %36 = load i32, i32* @g_depth, align 4, !dbg !3857
  %37 = call i64 @XCreatePixmap(%struct._XDisplay* %32, i64 %33, i32 %34, i32 %35, i32 %36), !dbg !3858
  store i64 %37, i64* %8, align 8, !dbg !3859
  %38 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3860
  %39 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !3861
  %40 = load i32, i32* @g_depth, align 4, !dbg !3862
  %41 = load i8*, i8** %9, align 8, !dbg !3863
  %42 = load i32, i32* %4, align 4, !dbg !3864
  %43 = load i32, i32* %5, align 4, !dbg !3865
  %44 = load i32, i32* %10, align 4, !dbg !3866
  %45 = call %struct._XImage* @XCreateImage(%struct._XDisplay* %38, %struct.Visual* %39, i32 %40, i32 2, i32 0, i8* %41, i32 %42, i32 %43, i32 %44, i32 0), !dbg !3867
  store %struct._XImage* %45, %struct._XImage** %7, align 8, !dbg !3868
  %46 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !3869
  %47 = load i64, i64* %8, align 8, !dbg !3870
  %48 = load %struct._XGC*, %struct._XGC** @g_create_bitmap_gc, align 8, !dbg !3871
  %49 = load %struct._XImage*, %struct._XImage** %7, align 8, !dbg !3872
  %50 = load i32, i32* %4, align 4, !dbg !3873
  %51 = load i32, i32* %5, align 4, !dbg !3874
  %52 = call i32 @XPutImage(%struct._XDisplay* %46, i64 %47, %struct._XGC* %48, %struct._XImage* %49, i32 0, i32 0, i32 0, i32 0, i32 %50, i32 %51), !dbg !3875
  %53 = load %struct._XImage*, %struct._XImage** %7, align 8, !dbg !3876
  %54 = bitcast %struct._XImage* %53 to i8*, !dbg !3876
  %55 = call i32 @XFree(i8* %54), !dbg !3877
  %56 = load i8*, i8** %9, align 8, !dbg !3878
  %57 = load i8*, i8** %6, align 8, !dbg !3880
  %58 = icmp ne i8* %56, %57, !dbg !3881
  br i1 %58, label %59, label %61, !dbg !3882

; <label>:59:                                     ; preds = %30
  %60 = load i8*, i8** %9, align 8, !dbg !3883
  call void @xfree(i8* %60), !dbg !3884
  br label %61, !dbg !3884

; <label>:61:                                     ; preds = %59, %30
  %62 = load i64, i64* %8, align 8, !dbg !3885
  %63 = inttoptr i64 %62 to i8*, !dbg !3886
  ret i8* %63, !dbg !3887
}

; Function Attrs: nounwind uwtable
define internal i8* @translate_image(i32, i32, i8*) #0 !dbg !3888 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3891, metadata !416), !dbg !3892
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3893, metadata !416), !dbg !3894
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3895, metadata !416), !dbg !3896
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3897, metadata !416), !dbg !3898
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3899, metadata !416), !dbg !3900
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3901, metadata !416), !dbg !3902
  %11 = load i32, i32* @g_server_depth, align 4, !dbg !3903
  %12 = icmp eq i32 %11, 32, !dbg !3905
  br i1 %12, label %13, label %18, !dbg !3906

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @g_depth, align 4, !dbg !3907
  %15 = icmp eq i32 %14, 24, !dbg !3909
  br i1 %15, label %16, label %18, !dbg !3910

; <label>:16:                                     ; preds = %13
  %17 = load i8*, i8** %7, align 8, !dbg !3911
  store i8* %17, i8** %4, align 8, !dbg !3913
  br label %128, !dbg !3913

; <label>:18:                                     ; preds = %13, %3
  %19 = load i32, i32* @g_no_translate_image, align 4, !dbg !3914
  %20 = icmp ne i32 %19, 0, !dbg !3914
  br i1 %20, label %21, label %42, !dbg !3916

; <label>:21:                                     ; preds = %18
  %22 = load i32, i32* @g_depth, align 4, !dbg !3917
  %23 = icmp eq i32 %22, 15, !dbg !3920
  br i1 %23, label %24, label %27, !dbg !3921

; <label>:24:                                     ; preds = %21
  %25 = load i32, i32* @g_server_depth, align 4, !dbg !3922
  %26 = icmp eq i32 %25, 15, !dbg !3924
  br i1 %26, label %39, label %27, !dbg !3925

; <label>:27:                                     ; preds = %24, %21
  %28 = load i32, i32* @g_depth, align 4, !dbg !3926
  %29 = icmp eq i32 %28, 16, !dbg !3927
  br i1 %29, label %30, label %33, !dbg !3928

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* @g_server_depth, align 4, !dbg !3929
  %32 = icmp eq i32 %31, 16, !dbg !3930
  br i1 %32, label %39, label %33, !dbg !3931

; <label>:33:                                     ; preds = %30, %27
  %34 = load i32, i32* @g_depth, align 4, !dbg !3932
  %35 = icmp eq i32 %34, 24, !dbg !3933
  br i1 %35, label %36, label %41, !dbg !3934

; <label>:36:                                     ; preds = %33
  %37 = load i32, i32* @g_server_depth, align 4, !dbg !3935
  %38 = icmp eq i32 %37, 24, !dbg !3936
  br i1 %38, label %39, label %41, !dbg !3937

; <label>:39:                                     ; preds = %36, %30, %24
  %40 = load i8*, i8** %7, align 8, !dbg !3939
  store i8* %40, i8** %4, align 8, !dbg !3940
  br label %128, !dbg !3940

; <label>:41:                                     ; preds = %36, %33
  br label %42, !dbg !3941

; <label>:42:                                     ; preds = %41, %18
  %43 = load i32, i32* %5, align 4, !dbg !3942
  %44 = load i32, i32* %6, align 4, !dbg !3943
  %45 = mul nsw i32 %43, %44, !dbg !3944
  %46 = load i32, i32* @g_bpp, align 4, !dbg !3945
  %47 = sdiv i32 %46, 8, !dbg !3946
  %48 = mul nsw i32 %45, %47, !dbg !3947
  store i32 %48, i32* %8, align 4, !dbg !3948
  %49 = load i32, i32* %8, align 4, !dbg !3949
  %50 = call i8* @xmalloc(i32 %49), !dbg !3950
  store i8* %50, i8** %9, align 8, !dbg !3951
  %51 = load i8*, i8** %9, align 8, !dbg !3952
  %52 = load i32, i32* %8, align 4, !dbg !3953
  %53 = sext i32 %52 to i64, !dbg !3954
  %54 = getelementptr inbounds i8, i8* %51, i64 %53, !dbg !3954
  store i8* %54, i8** %10, align 8, !dbg !3955
  %55 = load i32, i32* @g_server_depth, align 4, !dbg !3956
  switch i32 %55, label %126 [
    i32 24, label %56
    i32 16, label %71
    i32 15, label %89
    i32 8, label %107
  ], !dbg !3957

; <label>:56:                                     ; preds = %42
  %57 = load i32, i32* @g_bpp, align 4, !dbg !3958
  switch i32 %57, label %70 [
    i32 32, label %58
    i32 24, label %62
    i32 16, label %66
  ], !dbg !3960

; <label>:58:                                     ; preds = %56
  %59 = load i8*, i8** %7, align 8, !dbg !3961
  %60 = load i8*, i8** %9, align 8, !dbg !3963
  %61 = load i8*, i8** %10, align 8, !dbg !3964
  call void @translate24to32(i8* %59, i8* %60, i8* %61), !dbg !3965
  br label %70, !dbg !3966

; <label>:62:                                     ; preds = %56
  %63 = load i8*, i8** %7, align 8, !dbg !3967
  %64 = load i8*, i8** %9, align 8, !dbg !3968
  %65 = load i8*, i8** %10, align 8, !dbg !3969
  call void @translate24to24(i8* %63, i8* %64, i8* %65), !dbg !3970
  br label %70, !dbg !3971

; <label>:66:                                     ; preds = %56
  %67 = load i8*, i8** %7, align 8, !dbg !3972
  %68 = load i8*, i8** %9, align 8, !dbg !3973
  %69 = load i8*, i8** %10, align 8, !dbg !3974
  call void @translate24to16(i8* %67, i8* %68, i8* %69), !dbg !3975
  br label %70, !dbg !3976

; <label>:70:                                     ; preds = %56, %66, %62, %58
  br label %126, !dbg !3977

; <label>:71:                                     ; preds = %42
  %72 = load i32, i32* @g_bpp, align 4, !dbg !3978
  switch i32 %72, label %88 [
    i32 32, label %73
    i32 24, label %78
    i32 16, label %83
  ], !dbg !3979

; <label>:73:                                     ; preds = %71
  %74 = load i8*, i8** %7, align 8, !dbg !3980
  %75 = bitcast i8* %74 to i16*, !dbg !3982
  %76 = load i8*, i8** %9, align 8, !dbg !3983
  %77 = load i8*, i8** %10, align 8, !dbg !3984
  call void @translate16to32(i16* %75, i8* %76, i8* %77), !dbg !3985
  br label %88, !dbg !3986

; <label>:78:                                     ; preds = %71
  %79 = load i8*, i8** %7, align 8, !dbg !3987
  %80 = bitcast i8* %79 to i16*, !dbg !3988
  %81 = load i8*, i8** %9, align 8, !dbg !3989
  %82 = load i8*, i8** %10, align 8, !dbg !3990
  call void @translate16to24(i16* %80, i8* %81, i8* %82), !dbg !3991
  br label %88, !dbg !3992

; <label>:83:                                     ; preds = %71
  %84 = load i8*, i8** %7, align 8, !dbg !3993
  %85 = bitcast i8* %84 to i16*, !dbg !3994
  %86 = load i8*, i8** %9, align 8, !dbg !3995
  %87 = load i8*, i8** %10, align 8, !dbg !3996
  call void @translate16to16(i16* %85, i8* %86, i8* %87), !dbg !3997
  br label %88, !dbg !3998

; <label>:88:                                     ; preds = %71, %83, %78, %73
  br label %126, !dbg !3999

; <label>:89:                                     ; preds = %42
  %90 = load i32, i32* @g_bpp, align 4, !dbg !4000
  switch i32 %90, label %106 [
    i32 32, label %91
    i32 24, label %96
    i32 16, label %101
  ], !dbg !4001

; <label>:91:                                     ; preds = %89
  %92 = load i8*, i8** %7, align 8, !dbg !4002
  %93 = bitcast i8* %92 to i16*, !dbg !4004
  %94 = load i8*, i8** %9, align 8, !dbg !4005
  %95 = load i8*, i8** %10, align 8, !dbg !4006
  call void @translate15to32(i16* %93, i8* %94, i8* %95), !dbg !4007
  br label %106, !dbg !4008

; <label>:96:                                     ; preds = %89
  %97 = load i8*, i8** %7, align 8, !dbg !4009
  %98 = bitcast i8* %97 to i16*, !dbg !4010
  %99 = load i8*, i8** %9, align 8, !dbg !4011
  %100 = load i8*, i8** %10, align 8, !dbg !4012
  call void @translate15to24(i16* %98, i8* %99, i8* %100), !dbg !4013
  br label %106, !dbg !4014

; <label>:101:                                    ; preds = %89
  %102 = load i8*, i8** %7, align 8, !dbg !4015
  %103 = bitcast i8* %102 to i16*, !dbg !4016
  %104 = load i8*, i8** %9, align 8, !dbg !4017
  %105 = load i8*, i8** %10, align 8, !dbg !4018
  call void @translate15to16(i16* %103, i8* %104, i8* %105), !dbg !4019
  br label %106, !dbg !4020

; <label>:106:                                    ; preds = %89, %101, %96, %91
  br label %126, !dbg !4021

; <label>:107:                                    ; preds = %42
  %108 = load i32, i32* @g_bpp, align 4, !dbg !4022
  switch i32 %108, label %125 [
    i32 8, label %109
    i32 16, label %113
    i32 24, label %117
    i32 32, label %121
  ], !dbg !4023

; <label>:109:                                    ; preds = %107
  %110 = load i8*, i8** %7, align 8, !dbg !4024
  %111 = load i8*, i8** %9, align 8, !dbg !4026
  %112 = load i8*, i8** %10, align 8, !dbg !4027
  call void @translate8to8(i8* %110, i8* %111, i8* %112), !dbg !4028
  br label %125, !dbg !4029

; <label>:113:                                    ; preds = %107
  %114 = load i8*, i8** %7, align 8, !dbg !4030
  %115 = load i8*, i8** %9, align 8, !dbg !4031
  %116 = load i8*, i8** %10, align 8, !dbg !4032
  call void @translate8to16(i8* %114, i8* %115, i8* %116), !dbg !4033
  br label %125, !dbg !4034

; <label>:117:                                    ; preds = %107
  %118 = load i8*, i8** %7, align 8, !dbg !4035
  %119 = load i8*, i8** %9, align 8, !dbg !4036
  %120 = load i8*, i8** %10, align 8, !dbg !4037
  call void @translate8to24(i8* %118, i8* %119, i8* %120), !dbg !4038
  br label %125, !dbg !4039

; <label>:121:                                    ; preds = %107
  %122 = load i8*, i8** %7, align 8, !dbg !4040
  %123 = load i8*, i8** %9, align 8, !dbg !4041
  %124 = load i8*, i8** %10, align 8, !dbg !4042
  call void @translate8to32(i8* %122, i8* %123, i8* %124), !dbg !4043
  br label %125, !dbg !4044

; <label>:125:                                    ; preds = %107, %121, %117, %113, %109
  br label %126, !dbg !4045

; <label>:126:                                    ; preds = %42, %125, %106, %88, %70
  %127 = load i8*, i8** %9, align 8, !dbg !4046
  store i8* %127, i8** %4, align 8, !dbg !4047
  br label %128, !dbg !4047

; <label>:128:                                    ; preds = %126, %39, %16
  %129 = load i8*, i8** %4, align 8, !dbg !4048
  ret i8* %129, !dbg !4048
}

declare %struct._XImage* @XCreateImage(%struct._XDisplay*, %struct.Visual*, i32, i32, i32, i8*, i32, i32, i32, i32) #2

declare i32 @XPutImage(%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32) #2

declare void @xfree(i8*) #2

; Function Attrs: nounwind uwtable
define void @ui_paint_bitmap(i32, i32, i32, i32, i32, i32, i8*) #0 !dbg !4049 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca %struct._XImage*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct._seamless_window*, align 8
  %19 = alloca %struct.XRectangle, align 2
  %20 = alloca %struct._seamless_window*, align 8
  %21 = alloca %struct.XRectangle, align 2
  store i32 %0, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4052, metadata !416), !dbg !4053
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4054, metadata !416), !dbg !4055
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4056, metadata !416), !dbg !4057
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4058, metadata !416), !dbg !4059
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4060, metadata !416), !dbg !4061
  store i32 %5, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4062, metadata !416), !dbg !4063
  store i8* %6, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4064, metadata !416), !dbg !4065
  call void @llvm.dbg.declare(metadata %struct._XImage** %15, metadata !4066, metadata !416), !dbg !4067
  call void @llvm.dbg.declare(metadata i8** %16, metadata !4068, metadata !416), !dbg !4069
  call void @llvm.dbg.declare(metadata i32* %17, metadata !4070, metadata !416), !dbg !4071
  %22 = load i32, i32* @g_server_depth, align 4, !dbg !4072
  %23 = icmp eq i32 %22, 8, !dbg !4074
  br i1 %23, label %24, label %25, !dbg !4075

; <label>:24:                                     ; preds = %7
  store i32 8, i32* %17, align 4, !dbg !4076
  br label %31, !dbg !4078

; <label>:25:                                     ; preds = %7
  %26 = load i32, i32* @g_bpp, align 4, !dbg !4079
  store i32 %26, i32* %17, align 4, !dbg !4081
  %27 = load i32, i32* @g_bpp, align 4, !dbg !4082
  %28 = icmp eq i32 %27, 24, !dbg !4084
  br i1 %28, label %29, label %30, !dbg !4085

; <label>:29:                                     ; preds = %25
  store i32 32, i32* %17, align 4, !dbg !4086
  br label %30, !dbg !4087

; <label>:30:                                     ; preds = %29, %25
  br label %31

; <label>:31:                                     ; preds = %30, %24
  %32 = load i32, i32* @g_owncolmap, align 4, !dbg !4088
  %33 = icmp ne i32 %32, 0, !dbg !4088
  br i1 %33, label %34, label %36, !dbg !4088

; <label>:34:                                     ; preds = %31
  %35 = load i8*, i8** %14, align 8, !dbg !4089
  br label %41, !dbg !4091

; <label>:36:                                     ; preds = %31
  %37 = load i32, i32* %12, align 4, !dbg !4092
  %38 = load i32, i32* %13, align 4, !dbg !4094
  %39 = load i8*, i8** %14, align 8, !dbg !4095
  %40 = call i8* @translate_image(i32 %37, i32 %38, i8* %39), !dbg !4096
  br label %41, !dbg !4097

; <label>:41:                                     ; preds = %36, %34
  %42 = phi i8* [ %35, %34 ], [ %40, %36 ], !dbg !4098
  store i8* %42, i8** %16, align 8, !dbg !4100
  %43 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4101
  %44 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !4102
  %45 = load i32, i32* @g_depth, align 4, !dbg !4103
  %46 = load i8*, i8** %16, align 8, !dbg !4104
  %47 = load i32, i32* %12, align 4, !dbg !4105
  %48 = load i32, i32* %13, align 4, !dbg !4106
  %49 = load i32, i32* %17, align 4, !dbg !4107
  %50 = call %struct._XImage* @XCreateImage(%struct._XDisplay* %43, %struct.Visual* %44, i32 %45, i32 2, i32 0, i8* %46, i32 %47, i32 %48, i32 %49, i32 0), !dbg !4108
  store %struct._XImage* %50, %struct._XImage** %15, align 8, !dbg !4109
  %51 = load i32, i32* @g_ownbackstore, align 4, !dbg !4110
  %52 = icmp ne i32 %51, 0, !dbg !4110
  br i1 %52, label %53, label %137, !dbg !4112

; <label>:53:                                     ; preds = %41
  %54 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4113
  %55 = load i64, i64* @g_backstore, align 8, !dbg !4115
  %56 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4116
  %57 = load %struct._XImage*, %struct._XImage** %15, align 8, !dbg !4117
  %58 = load i32, i32* %8, align 4, !dbg !4118
  %59 = load i32, i32* %9, align 4, !dbg !4119
  %60 = load i32, i32* %10, align 4, !dbg !4120
  %61 = load i32, i32* %11, align 4, !dbg !4121
  %62 = call i32 @XPutImage(%struct._XDisplay* %54, i64 %55, %struct._XGC* %56, %struct._XImage* %57, i32 0, i32 0, i32 %58, i32 %59, i32 %60, i32 %61), !dbg !4122
  %63 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4123
  %64 = load i64, i64* @g_backstore, align 8, !dbg !4124
  %65 = load i64, i64* @g_wnd, align 8, !dbg !4125
  %66 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4126
  %67 = load i32, i32* %8, align 4, !dbg !4127
  %68 = load i32, i32* %9, align 4, !dbg !4128
  %69 = load i32, i32* %10, align 4, !dbg !4129
  %70 = load i32, i32* %11, align 4, !dbg !4130
  %71 = load i32, i32* %8, align 4, !dbg !4131
  %72 = load i32, i32* %9, align 4, !dbg !4132
  %73 = call i32 @XCopyArea(%struct._XDisplay* %63, i64 %64, i64 %65, %struct._XGC* %66, i32 %67, i32 %68, i32 %69, i32 %70, i32 %71, i32 %72), !dbg !4133
  br label %74, !dbg !4134, !llvm.loop !4135

; <label>:74:                                     ; preds = %53
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %18, metadata !4136, metadata !416), !dbg !4138
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %19, metadata !4139, metadata !416), !dbg !4140
  %75 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !4141
  %76 = icmp ne %struct._seamless_window* %75, null, !dbg !4141
  br i1 %76, label %78, label %77, !dbg !4144

; <label>:77:                                     ; preds = %74
  br label %136, !dbg !4145

; <label>:78:                                     ; preds = %74
  %79 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !4147
  store %struct._seamless_window* %79, %struct._seamless_window** %18, align 8, !dbg !4150
  br label %80, !dbg !4151

; <label>:80:                                     ; preds = %128, %78
  %81 = load %struct._seamless_window*, %struct._seamless_window** %18, align 8, !dbg !4152
  %82 = icmp ne %struct._seamless_window* %81, null, !dbg !4155
  br i1 %82, label %83, label %132, !dbg !4155

; <label>:83:                                     ; preds = %80
  %84 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !4156
  %85 = sext i16 %84 to i32, !dbg !4159
  %86 = load %struct._seamless_window*, %struct._seamless_window** %18, align 8, !dbg !4160
  %87 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %86, i32 0, i32 4, !dbg !4161
  %88 = load i32, i32* %87, align 8, !dbg !4161
  %89 = sub nsw i32 %85, %88, !dbg !4162
  %90 = trunc i32 %89 to i16, !dbg !4159
  %91 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %19, i32 0, i32 0, !dbg !4163
  store i16 %90, i16* %91, align 2, !dbg !4164
  %92 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !4165
  %93 = sext i16 %92 to i32, !dbg !4166
  %94 = load %struct._seamless_window*, %struct._seamless_window** %18, align 8, !dbg !4167
  %95 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %94, i32 0, i32 5, !dbg !4168
  %96 = load i32, i32* %95, align 4, !dbg !4168
  %97 = sub nsw i32 %93, %96, !dbg !4169
  %98 = trunc i32 %97 to i16, !dbg !4166
  %99 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %19, i32 0, i32 1, !dbg !4170
  store i16 %98, i16* %99, align 2, !dbg !4171
  %100 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !4172
  %101 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %19, i32 0, i32 2, !dbg !4173
  store i16 %100, i16* %101, align 2, !dbg !4174
  %102 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !4175
  %103 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %19, i32 0, i32 3, !dbg !4176
  store i16 %102, i16* %103, align 2, !dbg !4177
  %104 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4178
  %105 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4179
  %106 = call i32 @XSetClipRectangles(%struct._XDisplay* %104, %struct._XGC* %105, i32 0, i32 0, %struct.XRectangle* %19, i32 1, i32 3), !dbg !4180
  %107 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4181
  %108 = load i64, i64* @g_backstore, align 8, !dbg !4182
  %109 = load %struct._seamless_window*, %struct._seamless_window** %18, align 8, !dbg !4183
  %110 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %109, i32 0, i32 0, !dbg !4184
  %111 = load i64, i64* %110, align 8, !dbg !4184
  %112 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4185
  %113 = load i32, i32* %8, align 4, !dbg !4186
  %114 = load i32, i32* %9, align 4, !dbg !4187
  %115 = load i32, i32* %10, align 4, !dbg !4188
  %116 = load i32, i32* %11, align 4, !dbg !4189
  %117 = load i32, i32* %8, align 4, !dbg !4190
  %118 = load %struct._seamless_window*, %struct._seamless_window** %18, align 8, !dbg !4191
  %119 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %118, i32 0, i32 4, !dbg !4192
  %120 = load i32, i32* %119, align 8, !dbg !4192
  %121 = sub nsw i32 %117, %120, !dbg !4193
  %122 = load i32, i32* %9, align 4, !dbg !4194
  %123 = load %struct._seamless_window*, %struct._seamless_window** %18, align 8, !dbg !4195
  %124 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %123, i32 0, i32 5, !dbg !4196
  %125 = load i32, i32* %124, align 4, !dbg !4196
  %126 = sub nsw i32 %122, %125, !dbg !4197
  %127 = call i32 @XCopyArea(%struct._XDisplay* %107, i64 %108, i64 %111, %struct._XGC* %112, i32 %113, i32 %114, i32 %115, i32 %116, i32 %121, i32 %126), !dbg !4198
  br label %128, !dbg !4200

; <label>:128:                                    ; preds = %83
  %129 = load %struct._seamless_window*, %struct._seamless_window** %18, align 8, !dbg !4201
  %130 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %129, i32 0, i32 20, !dbg !4203
  %131 = load %struct._seamless_window*, %struct._seamless_window** %130, align 8, !dbg !4203
  store %struct._seamless_window* %131, %struct._seamless_window** %18, align 8, !dbg !4204
  br label %80, !dbg !4205, !llvm.loop !4206

; <label>:132:                                    ; preds = %80
  %133 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4208
  %134 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4210
  %135 = call i32 @XSetClipRectangles(%struct._XDisplay* %133, %struct._XGC* %134, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !4211
  br label %136, !dbg !4212

; <label>:136:                                    ; preds = %132, %77
  br label %210, !dbg !4213

; <label>:137:                                    ; preds = %41
  %138 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4214
  %139 = load i64, i64* @g_wnd, align 8, !dbg !4216
  %140 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4217
  %141 = load %struct._XImage*, %struct._XImage** %15, align 8, !dbg !4218
  %142 = load i32, i32* %8, align 4, !dbg !4219
  %143 = load i32, i32* %9, align 4, !dbg !4220
  %144 = load i32, i32* %10, align 4, !dbg !4221
  %145 = load i32, i32* %11, align 4, !dbg !4222
  %146 = call i32 @XPutImage(%struct._XDisplay* %138, i64 %139, %struct._XGC* %140, %struct._XImage* %141, i32 0, i32 0, i32 %142, i32 %143, i32 %144, i32 %145), !dbg !4223
  br label %147, !dbg !4224, !llvm.loop !4225

; <label>:147:                                    ; preds = %137
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %20, metadata !4226, metadata !416), !dbg !4228
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %21, metadata !4229, metadata !416), !dbg !4230
  %148 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !4231
  %149 = icmp ne %struct._seamless_window* %148, null, !dbg !4231
  br i1 %149, label %151, label %150, !dbg !4234

; <label>:150:                                    ; preds = %147
  br label %209, !dbg !4235

; <label>:151:                                    ; preds = %147
  %152 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !4237
  store %struct._seamless_window* %152, %struct._seamless_window** %20, align 8, !dbg !4240
  br label %153, !dbg !4241

; <label>:153:                                    ; preds = %201, %151
  %154 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !4242
  %155 = icmp ne %struct._seamless_window* %154, null, !dbg !4245
  br i1 %155, label %156, label %205, !dbg !4245

; <label>:156:                                    ; preds = %153
  %157 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !4246
  %158 = sext i16 %157 to i32, !dbg !4249
  %159 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !4250
  %160 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %159, i32 0, i32 4, !dbg !4251
  %161 = load i32, i32* %160, align 8, !dbg !4251
  %162 = sub nsw i32 %158, %161, !dbg !4252
  %163 = trunc i32 %162 to i16, !dbg !4249
  %164 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %21, i32 0, i32 0, !dbg !4253
  store i16 %163, i16* %164, align 2, !dbg !4254
  %165 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !4255
  %166 = sext i16 %165 to i32, !dbg !4256
  %167 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !4257
  %168 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %167, i32 0, i32 5, !dbg !4258
  %169 = load i32, i32* %168, align 4, !dbg !4258
  %170 = sub nsw i32 %166, %169, !dbg !4259
  %171 = trunc i32 %170 to i16, !dbg !4256
  %172 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %21, i32 0, i32 1, !dbg !4260
  store i16 %171, i16* %172, align 2, !dbg !4261
  %173 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !4262
  %174 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %21, i32 0, i32 2, !dbg !4263
  store i16 %173, i16* %174, align 2, !dbg !4264
  %175 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !4265
  %176 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %21, i32 0, i32 3, !dbg !4266
  store i16 %175, i16* %176, align 2, !dbg !4267
  %177 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4268
  %178 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4269
  %179 = call i32 @XSetClipRectangles(%struct._XDisplay* %177, %struct._XGC* %178, i32 0, i32 0, %struct.XRectangle* %21, i32 1, i32 3), !dbg !4270
  %180 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4271
  %181 = load i64, i64* @g_wnd, align 8, !dbg !4272
  %182 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !4273
  %183 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %182, i32 0, i32 0, !dbg !4274
  %184 = load i64, i64* %183, align 8, !dbg !4274
  %185 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4275
  %186 = load i32, i32* %8, align 4, !dbg !4276
  %187 = load i32, i32* %9, align 4, !dbg !4277
  %188 = load i32, i32* %10, align 4, !dbg !4278
  %189 = load i32, i32* %11, align 4, !dbg !4279
  %190 = load i32, i32* %8, align 4, !dbg !4280
  %191 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !4281
  %192 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %191, i32 0, i32 4, !dbg !4282
  %193 = load i32, i32* %192, align 8, !dbg !4282
  %194 = sub nsw i32 %190, %193, !dbg !4283
  %195 = load i32, i32* %9, align 4, !dbg !4284
  %196 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !4285
  %197 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %196, i32 0, i32 5, !dbg !4286
  %198 = load i32, i32* %197, align 4, !dbg !4286
  %199 = sub nsw i32 %195, %198, !dbg !4287
  %200 = call i32 @XCopyArea(%struct._XDisplay* %180, i64 %181, i64 %184, %struct._XGC* %185, i32 %186, i32 %187, i32 %188, i32 %189, i32 %194, i32 %199), !dbg !4288
  br label %201, !dbg !4290

; <label>:201:                                    ; preds = %156
  %202 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !4291
  %203 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %202, i32 0, i32 20, !dbg !4293
  %204 = load %struct._seamless_window*, %struct._seamless_window** %203, align 8, !dbg !4293
  store %struct._seamless_window* %204, %struct._seamless_window** %20, align 8, !dbg !4294
  br label %153, !dbg !4295, !llvm.loop !4296

; <label>:205:                                    ; preds = %153
  %206 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4298
  %207 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4300
  %208 = call i32 @XSetClipRectangles(%struct._XDisplay* %206, %struct._XGC* %207, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !4301
  br label %209, !dbg !4302

; <label>:209:                                    ; preds = %205, %150
  br label %210

; <label>:210:                                    ; preds = %209, %136
  %211 = load %struct._XImage*, %struct._XImage** %15, align 8, !dbg !4303
  %212 = bitcast %struct._XImage* %211 to i8*, !dbg !4303
  %213 = call i32 @XFree(i8* %212), !dbg !4304
  %214 = load i8*, i8** %16, align 8, !dbg !4305
  %215 = load i8*, i8** %14, align 8, !dbg !4307
  %216 = icmp ne i8* %214, %215, !dbg !4308
  br i1 %216, label %217, label %219, !dbg !4309

; <label>:217:                                    ; preds = %210
  %218 = load i8*, i8** %16, align 8, !dbg !4310
  call void @xfree(i8* %218), !dbg !4311
  br label %219, !dbg !4311

; <label>:219:                                    ; preds = %217, %210
  ret void, !dbg !4312
}

declare i32 @XSetClipRectangles(%struct._XDisplay*, %struct._XGC*, i32, i32, %struct.XRectangle*, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @ui_destroy_bitmap(i8*) #0 !dbg !4313 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4316, metadata !416), !dbg !4317
  %3 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4318
  %4 = load i8*, i8** %2, align 8, !dbg !4319
  %5 = ptrtoint i8* %4 to i64, !dbg !4320
  %6 = call i32 @XFreePixmap(%struct._XDisplay* %3, i64 %5), !dbg !4321
  ret void, !dbg !4322
}

; Function Attrs: nounwind uwtable
define i8* @ui_create_glyph(i32, i32, i8*) #0 !dbg !4323 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct._XImage*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4326, metadata !416), !dbg !4327
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4328, metadata !416), !dbg !4329
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4330, metadata !416), !dbg !4331
  call void @llvm.dbg.declare(metadata %struct._XImage** %7, metadata !4332, metadata !416), !dbg !4333
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4334, metadata !416), !dbg !4335
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4336, metadata !416), !dbg !4337
  %10 = load i32, i32* %4, align 4, !dbg !4338
  %11 = add nsw i32 %10, 7, !dbg !4339
  %12 = sdiv i32 %11, 8, !dbg !4340
  store i32 %12, i32* %9, align 4, !dbg !4341
  %13 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4342
  %14 = load i64, i64* @g_wnd, align 8, !dbg !4343
  %15 = load i32, i32* %4, align 4, !dbg !4344
  %16 = load i32, i32* %5, align 4, !dbg !4345
  %17 = call i64 @XCreatePixmap(%struct._XDisplay* %13, i64 %14, i32 %15, i32 %16, i32 1), !dbg !4346
  store i64 %17, i64* %8, align 8, !dbg !4347
  %18 = load %struct._XGC*, %struct._XGC** @g_create_glyph_gc, align 8, !dbg !4348
  %19 = icmp eq %struct._XGC* %18, null, !dbg !4350
  br i1 %19, label %20, label %24, !dbg !4351

; <label>:20:                                     ; preds = %3
  %21 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4352
  %22 = load i64, i64* %8, align 8, !dbg !4353
  %23 = call %struct._XGC* @XCreateGC(%struct._XDisplay* %21, i64 %22, i64 0, %struct.XGCValues* null), !dbg !4354
  store %struct._XGC* %23, %struct._XGC** @g_create_glyph_gc, align 8, !dbg !4355
  br label %24, !dbg !4356

; <label>:24:                                     ; preds = %20, %3
  %25 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4357
  %26 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !4358
  %27 = load i8*, i8** %6, align 8, !dbg !4359
  %28 = load i32, i32* %4, align 4, !dbg !4360
  %29 = load i32, i32* %5, align 4, !dbg !4361
  %30 = load i32, i32* %9, align 4, !dbg !4362
  %31 = call %struct._XImage* @XCreateImage(%struct._XDisplay* %25, %struct.Visual* %26, i32 1, i32 2, i32 0, i8* %27, i32 %28, i32 %29, i32 8, i32 %30), !dbg !4363
  store %struct._XImage* %31, %struct._XImage** %7, align 8, !dbg !4364
  %32 = load %struct._XImage*, %struct._XImage** %7, align 8, !dbg !4365
  %33 = getelementptr inbounds %struct._XImage, %struct._XImage* %32, i32 0, i32 5, !dbg !4366
  store i32 1, i32* %33, align 8, !dbg !4367
  %34 = load %struct._XImage*, %struct._XImage** %7, align 8, !dbg !4368
  %35 = getelementptr inbounds %struct._XImage, %struct._XImage* %34, i32 0, i32 7, !dbg !4369
  store i32 1, i32* %35, align 8, !dbg !4370
  %36 = load %struct._XImage*, %struct._XImage** %7, align 8, !dbg !4371
  %37 = call i32 @XInitImage(%struct._XImage* %36), !dbg !4372
  %38 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4373
  %39 = load i64, i64* %8, align 8, !dbg !4374
  %40 = load %struct._XGC*, %struct._XGC** @g_create_glyph_gc, align 8, !dbg !4375
  %41 = load %struct._XImage*, %struct._XImage** %7, align 8, !dbg !4376
  %42 = load i32, i32* %4, align 4, !dbg !4377
  %43 = load i32, i32* %5, align 4, !dbg !4378
  %44 = call i32 @XPutImage(%struct._XDisplay* %38, i64 %39, %struct._XGC* %40, %struct._XImage* %41, i32 0, i32 0, i32 0, i32 0, i32 %42, i32 %43), !dbg !4379
  %45 = load %struct._XImage*, %struct._XImage** %7, align 8, !dbg !4380
  %46 = bitcast %struct._XImage* %45 to i8*, !dbg !4380
  %47 = call i32 @XFree(i8* %46), !dbg !4381
  %48 = load i64, i64* %8, align 8, !dbg !4382
  %49 = inttoptr i64 %48 to i8*, !dbg !4383
  ret i8* %49, !dbg !4384
}

declare i32 @XInitImage(%struct._XImage*) #2

; Function Attrs: nounwind uwtable
define void @ui_destroy_glyph(i8*) #0 !dbg !4385 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4388, metadata !416), !dbg !4389
  %3 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4390
  %4 = load i8*, i8** %2, align 8, !dbg !4391
  %5 = ptrtoint i8* %4 to i64, !dbg !4392
  %6 = call i32 @XFreePixmap(%struct._XDisplay* %3, i64 %5), !dbg !4393
  ret void, !dbg !4394
}

declare %struct._XcursorImage* @XcursorImageCreate(i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @get_pixel(i32, i8*, i8*, i32, i8*) #0 !dbg !4395 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i8*, align 8
  %15 = alloca %struct.PixelColour, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4398, metadata !416), !dbg !4399
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4400, metadata !416), !dbg !4401
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4402, metadata !416), !dbg !4403
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4404, metadata !416), !dbg !4405
  store i8* %4, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4406, metadata !416), !dbg !4407
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4408, metadata !416), !dbg !4409
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4410, metadata !416), !dbg !4411
  call void @llvm.dbg.declare(metadata i8* %13, metadata !4412, metadata !416), !dbg !4413
  call void @llvm.dbg.declare(metadata i8** %14, metadata !4414, metadata !416), !dbg !4415
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %15, metadata !4416, metadata !416), !dbg !4423
  %16 = load i8*, i8** %10, align 8, !dbg !4424
  store i8 0, i8* %16, align 1, !dbg !4425
  store i32 -65536, i32* %12, align 4, !dbg !4426
  %17 = load i32, i32* %9, align 4, !dbg !4427
  switch i32 %17, label %226 [
    i32 1, label %18
    i32 16, label %77
    i32 24, label %155
    i32 32, label %197
  ], !dbg !4428

; <label>:18:                                     ; preds = %5
  %19 = load i32, i32* %6, align 4, !dbg !4429
  store i32 %19, i32* %11, align 4, !dbg !4431
  %20 = load i8*, i8** %8, align 8, !dbg !4432
  %21 = load i32, i32* %6, align 4, !dbg !4433
  %22 = udiv i32 %21, 8, !dbg !4434
  %23 = zext i32 %22 to i64, !dbg !4435
  %24 = getelementptr inbounds i8, i8* %20, i64 %23, !dbg !4435
  %25 = load i8, i8* %24, align 1, !dbg !4436
  %26 = zext i8 %25 to i32, !dbg !4436
  %27 = load i32, i32* %6, align 4, !dbg !4437
  %28 = urem i32 %27, 8, !dbg !4438
  %29 = sub i32 7, %28, !dbg !4439
  %30 = shl i32 1, %29, !dbg !4440
  %31 = and i32 %26, %30, !dbg !4441
  store i32 %31, i32* %12, align 4, !dbg !4442
  %32 = load i8*, i8** %7, align 8, !dbg !4443
  %33 = load i32, i32* %6, align 4, !dbg !4444
  %34 = udiv i32 %33, 8, !dbg !4445
  %35 = zext i32 %34 to i64, !dbg !4446
  %36 = getelementptr inbounds i8, i8* %32, i64 %35, !dbg !4446
  %37 = load i8, i8* %36, align 1, !dbg !4447
  %38 = zext i8 %37 to i32, !dbg !4447
  %39 = load i32, i32* %6, align 4, !dbg !4448
  %40 = urem i32 %39, 8, !dbg !4449
  %41 = sub i32 7, %40, !dbg !4450
  %42 = shl i32 1, %41, !dbg !4451
  %43 = and i32 %38, %42, !dbg !4452
  %44 = icmp ne i32 %43, 0, !dbg !4453
  %45 = select i1 %44, i32 0, i32 255, !dbg !4453
  %46 = trunc i32 %45 to i8, !dbg !4453
  store i8 %46, i8* %13, align 1, !dbg !4454
  %47 = load i8*, i8** %7, align 8, !dbg !4455
  %48 = load i32, i32* %6, align 4, !dbg !4457
  %49 = udiv i32 %48, 8, !dbg !4458
  %50 = zext i32 %49 to i64, !dbg !4459
  %51 = getelementptr inbounds i8, i8* %47, i64 %50, !dbg !4459
  %52 = load i8, i8* %51, align 1, !dbg !4460
  %53 = zext i8 %52 to i32, !dbg !4460
  %54 = load i32, i32* %6, align 4, !dbg !4461
  %55 = urem i32 %54, 8, !dbg !4462
  %56 = sub i32 7, %55, !dbg !4463
  %57 = shl i32 1, %56, !dbg !4464
  %58 = and i32 %53, %57, !dbg !4465
  %59 = icmp ne i32 %58, 0, !dbg !4466
  %60 = xor i1 %59, true, !dbg !4466
  %61 = zext i1 %60 to i32, !dbg !4466
  %62 = icmp eq i32 %61, 0, !dbg !4467
  br i1 %62, label %63, label %68, !dbg !4468

; <label>:63:                                     ; preds = %18
  %64 = load i32, i32* %12, align 4, !dbg !4469
  %65 = icmp ne i32 %64, 0, !dbg !4469
  br i1 %65, label %66, label %68, !dbg !4471

; <label>:66:                                     ; preds = %63
  store i32 -16777216, i32* %12, align 4, !dbg !4472
  %67 = load i8*, i8** %10, align 8, !dbg !4474
  store i8 1, i8* %67, align 1, !dbg !4475
  br label %76, !dbg !4476

; <label>:68:                                     ; preds = %63, %18
  %69 = load i8, i8* %13, align 1, !dbg !4477
  %70 = zext i8 %69 to i32, !dbg !4477
  %71 = shl i32 %70, 24, !dbg !4478
  %72 = load i32, i32* %12, align 4, !dbg !4479
  %73 = icmp ne i32 %72, 0, !dbg !4479
  %74 = select i1 %73, i32 16777215, i32 0, !dbg !4479
  %75 = or i32 %71, %74, !dbg !4480
  store i32 %75, i32* %12, align 4, !dbg !4481
  br label %76

; <label>:76:                                     ; preds = %68, %66
  br label %226, !dbg !4482

; <label>:77:                                     ; preds = %5
  %78 = load i32, i32* %6, align 4, !dbg !4483
  %79 = mul i32 %78, 2, !dbg !4484
  store i32 %79, i32* %11, align 4, !dbg !4485
  %80 = load i8*, i8** %8, align 8, !dbg !4486
  %81 = load i32, i32* %11, align 4, !dbg !4487
  %82 = zext i32 %81 to i64, !dbg !4488
  %83 = getelementptr inbounds i8, i8* %80, i64 %82, !dbg !4488
  store i8* %83, i8** %14, align 8, !dbg !4489
  %84 = load i8*, i8** %14, align 8, !dbg !4490
  %85 = bitcast i8* %84 to i16*, !dbg !4492
  %86 = load i16, i16* %85, align 2, !dbg !4492
  %87 = zext i16 %86 to i32, !dbg !4492
  %88 = ashr i32 %87, 8, !dbg !4493
  %89 = and i32 %88, 248, !dbg !4494
  %90 = load i8*, i8** %14, align 8, !dbg !4495
  %91 = bitcast i8* %90 to i16*, !dbg !4496
  %92 = load i16, i16* %91, align 2, !dbg !4496
  %93 = zext i16 %92 to i32, !dbg !4496
  %94 = ashr i32 %93, 13, !dbg !4497
  %95 = and i32 %94, 7, !dbg !4498
  %96 = or i32 %89, %95, !dbg !4499
  %97 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %15, i32 0, i32 0, !dbg !4500
  store i32 %96, i32* %97, align 4, !dbg !4501
  %98 = load i8*, i8** %14, align 8, !dbg !4502
  %99 = bitcast i8* %98 to i16*, !dbg !4503
  %100 = load i16, i16* %99, align 2, !dbg !4503
  %101 = zext i16 %100 to i32, !dbg !4503
  %102 = ashr i32 %101, 3, !dbg !4504
  %103 = and i32 %102, 252, !dbg !4505
  %104 = load i8*, i8** %14, align 8, !dbg !4506
  %105 = bitcast i8* %104 to i16*, !dbg !4507
  %106 = load i16, i16* %105, align 2, !dbg !4507
  %107 = zext i16 %106 to i32, !dbg !4507
  %108 = ashr i32 %107, 9, !dbg !4508
  %109 = and i32 %108, 3, !dbg !4509
  %110 = or i32 %103, %109, !dbg !4510
  %111 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %15, i32 0, i32 1, !dbg !4511
  store i32 %110, i32* %111, align 4, !dbg !4512
  %112 = load i8*, i8** %14, align 8, !dbg !4513
  %113 = bitcast i8* %112 to i16*, !dbg !4514
  %114 = load i16, i16* %113, align 2, !dbg !4514
  %115 = zext i16 %114 to i32, !dbg !4514
  %116 = shl i32 %115, 3, !dbg !4515
  %117 = and i32 %116, 248, !dbg !4516
  %118 = load i8*, i8** %14, align 8, !dbg !4517
  %119 = bitcast i8* %118 to i16*, !dbg !4518
  %120 = load i16, i16* %119, align 2, !dbg !4518
  %121 = zext i16 %120 to i32, !dbg !4518
  %122 = ashr i32 %121, 2, !dbg !4519
  %123 = and i32 %122, 7, !dbg !4520
  %124 = or i32 %117, %123, !dbg !4521
  %125 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %15, i32 0, i32 2, !dbg !4522
  store i32 %124, i32* %125, align 4, !dbg !4523
  %126 = load i8*, i8** %7, align 8, !dbg !4524
  %127 = load i32, i32* %6, align 4, !dbg !4525
  %128 = udiv i32 %127, 8, !dbg !4526
  %129 = zext i32 %128 to i64, !dbg !4527
  %130 = getelementptr inbounds i8, i8* %126, i64 %129, !dbg !4527
  %131 = load i8, i8* %130, align 1, !dbg !4528
  %132 = zext i8 %131 to i32, !dbg !4528
  %133 = load i32, i32* %6, align 4, !dbg !4529
  %134 = urem i32 %133, 8, !dbg !4530
  %135 = sub i32 7, %134, !dbg !4531
  %136 = shl i32 1, %135, !dbg !4532
  %137 = and i32 %132, %136, !dbg !4533
  %138 = icmp ne i32 %137, 0, !dbg !4534
  %139 = select i1 %138, i32 0, i32 255, !dbg !4534
  %140 = trunc i32 %139 to i8, !dbg !4534
  store i8 %140, i8* %13, align 1, !dbg !4535
  %141 = load i8, i8* %13, align 1, !dbg !4536
  %142 = zext i8 %141 to i32, !dbg !4536
  %143 = shl i32 %142, 24, !dbg !4537
  %144 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %15, i32 0, i32 0, !dbg !4538
  %145 = load i32, i32* %144, align 4, !dbg !4538
  %146 = shl i32 %145, 16, !dbg !4539
  %147 = or i32 %143, %146, !dbg !4540
  %148 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %15, i32 0, i32 1, !dbg !4541
  %149 = load i32, i32* %148, align 4, !dbg !4541
  %150 = shl i32 %149, 8, !dbg !4542
  %151 = or i32 %147, %150, !dbg !4543
  %152 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %15, i32 0, i32 2, !dbg !4544
  %153 = load i32, i32* %152, align 4, !dbg !4544
  %154 = or i32 %151, %153, !dbg !4545
  store i32 %154, i32* %12, align 4, !dbg !4546
  br label %226, !dbg !4547

; <label>:155:                                    ; preds = %5
  %156 = load i32, i32* %6, align 4, !dbg !4548
  %157 = mul i32 %156, 3, !dbg !4549
  store i32 %157, i32* %11, align 4, !dbg !4550
  %158 = load i8*, i8** %8, align 8, !dbg !4551
  %159 = load i32, i32* %11, align 4, !dbg !4552
  %160 = zext i32 %159 to i64, !dbg !4553
  %161 = getelementptr inbounds i8, i8* %158, i64 %160, !dbg !4553
  store i8* %161, i8** %14, align 8, !dbg !4554
  %162 = load i8*, i8** %7, align 8, !dbg !4555
  %163 = load i32, i32* %6, align 4, !dbg !4556
  %164 = udiv i32 %163, 8, !dbg !4557
  %165 = zext i32 %164 to i64, !dbg !4558
  %166 = getelementptr inbounds i8, i8* %162, i64 %165, !dbg !4558
  %167 = load i8, i8* %166, align 1, !dbg !4559
  %168 = zext i8 %167 to i32, !dbg !4559
  %169 = load i32, i32* %6, align 4, !dbg !4560
  %170 = urem i32 %169, 8, !dbg !4561
  %171 = sub i32 7, %170, !dbg !4562
  %172 = shl i32 1, %171, !dbg !4563
  %173 = and i32 %168, %172, !dbg !4564
  %174 = icmp ne i32 %173, 0, !dbg !4565
  %175 = select i1 %174, i32 0, i32 255, !dbg !4565
  %176 = trunc i32 %175 to i8, !dbg !4565
  store i8 %176, i8* %13, align 1, !dbg !4566
  %177 = load i8, i8* %13, align 1, !dbg !4567
  %178 = zext i8 %177 to i32, !dbg !4567
  %179 = shl i32 %178, 24, !dbg !4568
  %180 = load i8*, i8** %14, align 8, !dbg !4569
  %181 = getelementptr inbounds i8, i8* %180, i64 2, !dbg !4569
  %182 = load i8, i8* %181, align 1, !dbg !4569
  %183 = zext i8 %182 to i32, !dbg !4569
  %184 = shl i32 %183, 16, !dbg !4570
  %185 = or i32 %179, %184, !dbg !4571
  %186 = load i8*, i8** %14, align 8, !dbg !4572
  %187 = getelementptr inbounds i8, i8* %186, i64 1, !dbg !4572
  %188 = load i8, i8* %187, align 1, !dbg !4572
  %189 = zext i8 %188 to i32, !dbg !4572
  %190 = shl i32 %189, 8, !dbg !4573
  %191 = or i32 %185, %190, !dbg !4574
  %192 = load i8*, i8** %14, align 8, !dbg !4575
  %193 = getelementptr inbounds i8, i8* %192, i64 0, !dbg !4575
  %194 = load i8, i8* %193, align 1, !dbg !4575
  %195 = zext i8 %194 to i32, !dbg !4575
  %196 = or i32 %191, %195, !dbg !4576
  store i32 %196, i32* %12, align 4, !dbg !4577
  br label %226, !dbg !4578

; <label>:197:                                    ; preds = %5
  %198 = load i32, i32* %6, align 4, !dbg !4579
  %199 = mul i32 %198, 4, !dbg !4580
  store i32 %199, i32* %11, align 4, !dbg !4581
  %200 = load i8*, i8** %8, align 8, !dbg !4582
  %201 = load i32, i32* %11, align 4, !dbg !4583
  %202 = zext i32 %201 to i64, !dbg !4584
  %203 = getelementptr inbounds i8, i8* %200, i64 %202, !dbg !4584
  store i8* %203, i8** %14, align 8, !dbg !4585
  %204 = load i8*, i8** %14, align 8, !dbg !4586
  %205 = getelementptr inbounds i8, i8* %204, i64 3, !dbg !4586
  %206 = load i8, i8* %205, align 1, !dbg !4586
  %207 = zext i8 %206 to i32, !dbg !4586
  %208 = shl i32 %207, 24, !dbg !4587
  %209 = load i8*, i8** %14, align 8, !dbg !4588
  %210 = getelementptr inbounds i8, i8* %209, i64 2, !dbg !4588
  %211 = load i8, i8* %210, align 1, !dbg !4588
  %212 = zext i8 %211 to i32, !dbg !4588
  %213 = shl i32 %212, 16, !dbg !4589
  %214 = or i32 %208, %213, !dbg !4590
  %215 = load i8*, i8** %14, align 8, !dbg !4591
  %216 = getelementptr inbounds i8, i8* %215, i64 1, !dbg !4591
  %217 = load i8, i8* %216, align 1, !dbg !4591
  %218 = zext i8 %217 to i32, !dbg !4591
  %219 = shl i32 %218, 8, !dbg !4592
  %220 = or i32 %214, %219, !dbg !4593
  %221 = load i8*, i8** %14, align 8, !dbg !4594
  %222 = getelementptr inbounds i8, i8* %221, i64 0, !dbg !4594
  %223 = load i8, i8* %222, align 1, !dbg !4594
  %224 = zext i8 %223 to i32, !dbg !4594
  %225 = or i32 %220, %224, !dbg !4595
  store i32 %225, i32* %12, align 4, !dbg !4596
  br label %226, !dbg !4597

; <label>:226:                                    ; preds = %5, %197, %155, %77, %76
  %227 = load i32, i32* %12, align 4, !dbg !4598
  ret i32 %227, !dbg !4599
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @xcursor_stencil(%struct._XcursorImage*, %struct._XcursorImage*, i32, i32, i32) #5 !dbg !4600 {
  %6 = alloca %struct._XcursorImage*, align 8
  %7 = alloca %struct._XcursorImage*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct._XcursorImage* %0, %struct._XcursorImage** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._XcursorImage** %6, metadata !4603, metadata !416), !dbg !4604
  store %struct._XcursorImage* %1, %struct._XcursorImage** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._XcursorImage** %7, metadata !4605, metadata !416), !dbg !4606
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4607, metadata !416), !dbg !4608
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4609, metadata !416), !dbg !4610
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4611, metadata !416), !dbg !4612
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4613, metadata !416), !dbg !4614
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4615, metadata !416), !dbg !4616
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4617, metadata !416), !dbg !4618
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4619, metadata !416), !dbg !4620
  %15 = load %struct._XcursorImage*, %struct._XcursorImage** %6, align 8, !dbg !4621
  %16 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %15, i32 0, i32 2, !dbg !4622
  %17 = load i32, i32* %16, align 8, !dbg !4622
  %18 = load %struct._XcursorImage*, %struct._XcursorImage** %7, align 8, !dbg !4623
  %19 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %18, i32 0, i32 2, !dbg !4624
  %20 = load i32, i32* %19, align 8, !dbg !4624
  %21 = icmp eq i32 %17, %20, !dbg !4625
  br i1 %21, label %22, label %23, !dbg !4626

; <label>:22:                                     ; preds = %5
  br label %25, !dbg !4627

; <label>:23:                                     ; preds = %5
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i32 3382, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__.xcursor_stencil, i32 0, i32 0)) #11, !dbg !4629
  unreachable, !dbg !4629
                                                  ; No predecessors!
  br label %25, !dbg !4631

; <label>:25:                                     ; preds = %24, %22
  %26 = load %struct._XcursorImage*, %struct._XcursorImage** %6, align 8, !dbg !4633
  %27 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %26, i32 0, i32 3, !dbg !4634
  %28 = load i32, i32* %27, align 4, !dbg !4634
  %29 = load %struct._XcursorImage*, %struct._XcursorImage** %7, align 8, !dbg !4635
  %30 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %29, i32 0, i32 3, !dbg !4636
  %31 = load i32, i32* %30, align 4, !dbg !4636
  %32 = icmp eq i32 %28, %31, !dbg !4637
  br i1 %32, label %33, label %34, !dbg !4638

; <label>:33:                                     ; preds = %25
  br label %36, !dbg !4639

; <label>:34:                                     ; preds = %25
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i32 3383, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__.xcursor_stencil, i32 0, i32 0)) #11, !dbg !4640
  unreachable, !dbg !4640
                                                  ; No predecessors!
  br label %36, !dbg !4641

; <label>:36:                                     ; preds = %35, %33
  store i32 0, i32* %12, align 4, !dbg !4642
  br label %37, !dbg !4644

; <label>:37:                                     ; preds = %118, %36
  %38 = load i32, i32* %12, align 4, !dbg !4645
  %39 = load %struct._XcursorImage*, %struct._XcursorImage** %6, align 8, !dbg !4648
  %40 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %39, i32 0, i32 3, !dbg !4649
  %41 = load i32, i32* %40, align 4, !dbg !4649
  %42 = icmp slt i32 %38, %41, !dbg !4650
  br i1 %42, label %43, label %121, !dbg !4651

; <label>:43:                                     ; preds = %37
  store i32 0, i32* %11, align 4, !dbg !4652
  br label %44, !dbg !4655

; <label>:44:                                     ; preds = %114, %43
  %45 = load i32, i32* %11, align 4, !dbg !4656
  %46 = load %struct._XcursorImage*, %struct._XcursorImage** %6, align 8, !dbg !4659
  %47 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %46, i32 0, i32 2, !dbg !4660
  %48 = load i32, i32* %47, align 8, !dbg !4660
  %49 = icmp slt i32 %45, %48, !dbg !4661
  br i1 %49, label %50, label %117, !dbg !4662

; <label>:50:                                     ; preds = %44
  %51 = load i32, i32* %12, align 4, !dbg !4663
  %52 = load %struct._XcursorImage*, %struct._XcursorImage** %6, align 8, !dbg !4665
  %53 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %52, i32 0, i32 2, !dbg !4666
  %54 = load i32, i32* %53, align 8, !dbg !4666
  %55 = mul i32 %51, %54, !dbg !4667
  %56 = load i32, i32* %11, align 4, !dbg !4668
  %57 = add i32 %55, %56, !dbg !4669
  store i32 %57, i32* %13, align 4, !dbg !4670
  %58 = load i32, i32* %13, align 4, !dbg !4671
  %59 = sext i32 %58 to i64, !dbg !4673
  %60 = load %struct._XcursorImage*, %struct._XcursorImage** %6, align 8, !dbg !4673
  %61 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %60, i32 0, i32 7, !dbg !4674
  %62 = load i32*, i32** %61, align 8, !dbg !4674
  %63 = getelementptr inbounds i32, i32* %62, i64 %59, !dbg !4673
  %64 = load i32, i32* %63, align 4, !dbg !4673
  %65 = icmp ne i32 %64, 0, !dbg !4673
  br i1 %65, label %67, label %66, !dbg !4675

; <label>:66:                                     ; preds = %50
  br label %114, !dbg !4676

; <label>:67:                                     ; preds = %50
  %68 = load i32, i32* %12, align 4, !dbg !4677
  %69 = load i32, i32* %9, align 4, !dbg !4679
  %70 = add nsw i32 %68, %69, !dbg !4680
  %71 = icmp slt i32 %70, 0, !dbg !4681
  br i1 %71, label %80, label %72, !dbg !4682

; <label>:72:                                     ; preds = %67
  %73 = load i32, i32* %12, align 4, !dbg !4683
  %74 = load i32, i32* %9, align 4, !dbg !4685
  %75 = add nsw i32 %73, %74, !dbg !4686
  %76 = load %struct._XcursorImage*, %struct._XcursorImage** %7, align 8, !dbg !4687
  %77 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %76, i32 0, i32 3, !dbg !4688
  %78 = load i32, i32* %77, align 4, !dbg !4688
  %79 = icmp sge i32 %75, %78, !dbg !4689
  br i1 %79, label %80, label %81, !dbg !4690

; <label>:80:                                     ; preds = %72, %67
  br label %114, !dbg !4691

; <label>:81:                                     ; preds = %72
  %82 = load i32, i32* %11, align 4, !dbg !4692
  %83 = load i32, i32* %8, align 4, !dbg !4694
  %84 = add nsw i32 %82, %83, !dbg !4695
  %85 = icmp slt i32 %84, 0, !dbg !4696
  br i1 %85, label %94, label %86, !dbg !4697

; <label>:86:                                     ; preds = %81
  %87 = load i32, i32* %11, align 4, !dbg !4698
  %88 = load i32, i32* %8, align 4, !dbg !4700
  %89 = add nsw i32 %87, %88, !dbg !4701
  %90 = load %struct._XcursorImage*, %struct._XcursorImage** %7, align 8, !dbg !4702
  %91 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %90, i32 0, i32 2, !dbg !4703
  %92 = load i32, i32* %91, align 8, !dbg !4703
  %93 = icmp sge i32 %89, %92, !dbg !4704
  br i1 %93, label %94, label %95, !dbg !4705

; <label>:94:                                     ; preds = %86, %81
  br label %114, !dbg !4706

; <label>:95:                                     ; preds = %86
  %96 = load i32, i32* %12, align 4, !dbg !4707
  %97 = load i32, i32* %9, align 4, !dbg !4708
  %98 = add nsw i32 %96, %97, !dbg !4709
  %99 = load %struct._XcursorImage*, %struct._XcursorImage** %6, align 8, !dbg !4710
  %100 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %99, i32 0, i32 2, !dbg !4711
  %101 = load i32, i32* %100, align 8, !dbg !4711
  %102 = mul i32 %98, %101, !dbg !4712
  %103 = load i32, i32* %11, align 4, !dbg !4713
  %104 = load i32, i32* %8, align 4, !dbg !4714
  %105 = add nsw i32 %103, %104, !dbg !4715
  %106 = add i32 %102, %105, !dbg !4716
  store i32 %106, i32* %14, align 4, !dbg !4717
  %107 = load i32, i32* %10, align 4, !dbg !4718
  %108 = load i32, i32* %14, align 4, !dbg !4719
  %109 = sext i32 %108 to i64, !dbg !4720
  %110 = load %struct._XcursorImage*, %struct._XcursorImage** %7, align 8, !dbg !4720
  %111 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %110, i32 0, i32 7, !dbg !4721
  %112 = load i32*, i32** %111, align 8, !dbg !4721
  %113 = getelementptr inbounds i32, i32* %112, i64 %109, !dbg !4720
  store i32 %107, i32* %113, align 4, !dbg !4722
  br label %114, !dbg !4723

; <label>:114:                                    ; preds = %95, %94, %80, %66
  %115 = load i32, i32* %11, align 4, !dbg !4724
  %116 = add nsw i32 %115, 1, !dbg !4724
  store i32 %116, i32* %11, align 4, !dbg !4724
  br label %44, !dbg !4726, !llvm.loop !4727

; <label>:117:                                    ; preds = %44
  br label %118, !dbg !4729

; <label>:118:                                    ; preds = %117
  %119 = load i32, i32* %12, align 4, !dbg !4730
  %120 = add nsw i32 %119, 1, !dbg !4730
  store i32 %120, i32* %12, align 4, !dbg !4730
  br label %37, !dbg !4732, !llvm.loop !4733

; <label>:121:                                    ; preds = %37
  ret void, !dbg !4735
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @xcursor_merge(%struct._XcursorImage*, %struct._XcursorImage*) #5 !dbg !4736 {
  %3 = alloca %struct._XcursorImage*, align 8
  %4 = alloca %struct._XcursorImage*, align 8
  %5 = alloca i32, align 4
  store %struct._XcursorImage* %0, %struct._XcursorImage** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._XcursorImage** %3, metadata !4739, metadata !416), !dbg !4740
  store %struct._XcursorImage* %1, %struct._XcursorImage** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._XcursorImage** %4, metadata !4741, metadata !416), !dbg !4742
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4743, metadata !416), !dbg !4744
  %6 = load %struct._XcursorImage*, %struct._XcursorImage** %3, align 8, !dbg !4745
  %7 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %6, i32 0, i32 2, !dbg !4746
  %8 = load i32, i32* %7, align 8, !dbg !4746
  %9 = load %struct._XcursorImage*, %struct._XcursorImage** %4, align 8, !dbg !4747
  %10 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %9, i32 0, i32 2, !dbg !4748
  %11 = load i32, i32* %10, align 8, !dbg !4748
  %12 = icmp eq i32 %8, %11, !dbg !4749
  br i1 %12, label %13, label %14, !dbg !4750

; <label>:13:                                     ; preds = %2
  br label %16, !dbg !4751

; <label>:14:                                     ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i32 3407, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.xcursor_merge, i32 0, i32 0)) #11, !dbg !4753
  unreachable, !dbg !4753
                                                  ; No predecessors!
  br label %16, !dbg !4755

; <label>:16:                                     ; preds = %15, %13
  %17 = load %struct._XcursorImage*, %struct._XcursorImage** %3, align 8, !dbg !4757
  %18 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %17, i32 0, i32 3, !dbg !4758
  %19 = load i32, i32* %18, align 4, !dbg !4758
  %20 = load %struct._XcursorImage*, %struct._XcursorImage** %4, align 8, !dbg !4759
  %21 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %20, i32 0, i32 3, !dbg !4760
  %22 = load i32, i32* %21, align 4, !dbg !4760
  %23 = icmp eq i32 %19, %22, !dbg !4761
  br i1 %23, label %24, label %25, !dbg !4762

; <label>:24:                                     ; preds = %16
  br label %27, !dbg !4763

; <label>:25:                                     ; preds = %16
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i32 3408, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.xcursor_merge, i32 0, i32 0)) #11, !dbg !4764
  unreachable, !dbg !4764
                                                  ; No predecessors!
  br label %27, !dbg !4765

; <label>:27:                                     ; preds = %26, %24
  store i32 0, i32* %5, align 4, !dbg !4766
  br label %28, !dbg !4768

; <label>:28:                                     ; preds = %62, %27
  %29 = load i32, i32* %5, align 4, !dbg !4769
  %30 = load %struct._XcursorImage*, %struct._XcursorImage** %3, align 8, !dbg !4772
  %31 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %30, i32 0, i32 2, !dbg !4773
  %32 = load i32, i32* %31, align 8, !dbg !4773
  %33 = load %struct._XcursorImage*, %struct._XcursorImage** %3, align 8, !dbg !4774
  %34 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %33, i32 0, i32 3, !dbg !4775
  %35 = load i32, i32* %34, align 4, !dbg !4775
  %36 = mul i32 %32, %35, !dbg !4776
  %37 = icmp ult i32 %29, %36, !dbg !4777
  br i1 %37, label %38, label %65, !dbg !4778

; <label>:38:                                     ; preds = %28
  %39 = load i32, i32* %5, align 4, !dbg !4779
  %40 = zext i32 %39 to i64, !dbg !4782
  %41 = load %struct._XcursorImage*, %struct._XcursorImage** %3, align 8, !dbg !4782
  %42 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %41, i32 0, i32 7, !dbg !4783
  %43 = load i32*, i32** %42, align 8, !dbg !4783
  %44 = getelementptr inbounds i32, i32* %43, i64 %40, !dbg !4782
  %45 = load i32, i32* %44, align 4, !dbg !4782
  %46 = icmp ne i32 %45, 0, !dbg !4782
  br i1 %46, label %48, label %47, !dbg !4784

; <label>:47:                                     ; preds = %38
  br label %62, !dbg !4785

; <label>:48:                                     ; preds = %38
  %49 = load i32, i32* %5, align 4, !dbg !4786
  %50 = zext i32 %49 to i64, !dbg !4787
  %51 = load %struct._XcursorImage*, %struct._XcursorImage** %3, align 8, !dbg !4787
  %52 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %51, i32 0, i32 7, !dbg !4788
  %53 = load i32*, i32** %52, align 8, !dbg !4788
  %54 = getelementptr inbounds i32, i32* %53, i64 %50, !dbg !4787
  %55 = load i32, i32* %54, align 4, !dbg !4787
  %56 = load i32, i32* %5, align 4, !dbg !4789
  %57 = zext i32 %56 to i64, !dbg !4790
  %58 = load %struct._XcursorImage*, %struct._XcursorImage** %4, align 8, !dbg !4790
  %59 = getelementptr inbounds %struct._XcursorImage, %struct._XcursorImage* %58, i32 0, i32 7, !dbg !4791
  %60 = load i32*, i32** %59, align 8, !dbg !4791
  %61 = getelementptr inbounds i32, i32* %60, i64 %57, !dbg !4790
  store i32 %55, i32* %61, align 4, !dbg !4792
  br label %62, !dbg !4793

; <label>:62:                                     ; preds = %48, %47
  %63 = load i32, i32* %5, align 4, !dbg !4794
  %64 = add i32 %63, 1, !dbg !4794
  store i32 %64, i32* %5, align 4, !dbg !4794
  br label %28, !dbg !4796, !llvm.loop !4797

; <label>:65:                                     ; preds = %28
  ret void, !dbg !4799
}

declare void @XcursorImageDestroy(%struct._XcursorImage*) #2

declare i64 @XcursorImageLoadCursor(%struct._XDisplay*, %struct._XcursorImage*) #2

; Function Attrs: nounwind uwtable
define void @ui_set_cursor(i8*) #0 !dbg !4800 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._seamless_window*, align 8
  %4 = alloca %struct.XRectangle, align 2
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4803, metadata !416), !dbg !4804
  %5 = load i32, i32* @g_local_cursor, align 4, !dbg !4805
  %6 = icmp ne i32 %5, 0, !dbg !4805
  br i1 %6, label %7, label %8, !dbg !4807

; <label>:7:                                      ; preds = %1
  br label %64, !dbg !4808

; <label>:8:                                      ; preds = %1
  %9 = load i64, i64* @g_current_cursor, align 8, !dbg !4810
  %10 = load i8*, i8** %2, align 8, !dbg !4811
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.21, i32 0, i32 0), i64 %9, i8* %10), !dbg !4812
  %11 = load i8*, i8** %2, align 8, !dbg !4813
  %12 = ptrtoint i8* %11 to i64, !dbg !4814
  store i64 %12, i64* @g_current_cursor, align 8, !dbg !4815
  %13 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4816
  %14 = load i64, i64* @g_wnd, align 8, !dbg !4817
  %15 = load i64, i64* @g_current_cursor, align 8, !dbg !4818
  %16 = call i32 @XDefineCursor(%struct._XDisplay* %13, i64 %14, i64 %15), !dbg !4819
  br label %17, !dbg !4820, !llvm.loop !4821

; <label>:17:                                     ; preds = %8
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %3, metadata !4822, metadata !416), !dbg !4824
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %4, metadata !4825, metadata !416), !dbg !4826
  %18 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !4827
  %19 = icmp ne %struct._seamless_window* %18, null, !dbg !4827
  br i1 %19, label %21, label %20, !dbg !4830

; <label>:20:                                     ; preds = %17
  br label %64, !dbg !4831

; <label>:21:                                     ; preds = %17
  %22 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !4833
  store %struct._seamless_window* %22, %struct._seamless_window** %3, align 8, !dbg !4836
  br label %23, !dbg !4837

; <label>:23:                                     ; preds = %56, %21
  %24 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !4838
  %25 = icmp ne %struct._seamless_window* %24, null, !dbg !4841
  br i1 %25, label %26, label %60, !dbg !4841

; <label>:26:                                     ; preds = %23
  %27 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !4842
  %28 = sext i16 %27 to i32, !dbg !4845
  %29 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !4846
  %30 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %29, i32 0, i32 4, !dbg !4847
  %31 = load i32, i32* %30, align 8, !dbg !4847
  %32 = sub nsw i32 %28, %31, !dbg !4848
  %33 = trunc i32 %32 to i16, !dbg !4845
  %34 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %4, i32 0, i32 0, !dbg !4849
  store i16 %33, i16* %34, align 2, !dbg !4850
  %35 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !4851
  %36 = sext i16 %35 to i32, !dbg !4852
  %37 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !4853
  %38 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %37, i32 0, i32 5, !dbg !4854
  %39 = load i32, i32* %38, align 4, !dbg !4854
  %40 = sub nsw i32 %36, %39, !dbg !4855
  %41 = trunc i32 %40 to i16, !dbg !4852
  %42 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %4, i32 0, i32 1, !dbg !4856
  store i16 %41, i16* %42, align 2, !dbg !4857
  %43 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !4858
  %44 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %4, i32 0, i32 2, !dbg !4859
  store i16 %43, i16* %44, align 2, !dbg !4860
  %45 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !4861
  %46 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %4, i32 0, i32 3, !dbg !4862
  store i16 %45, i16* %46, align 2, !dbg !4863
  %47 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4864
  %48 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4865
  %49 = call i32 @XSetClipRectangles(%struct._XDisplay* %47, %struct._XGC* %48, i32 0, i32 0, %struct.XRectangle* %4, i32 1, i32 3), !dbg !4866
  %50 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4867
  %51 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !4868
  %52 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %51, i32 0, i32 0, !dbg !4869
  %53 = load i64, i64* %52, align 8, !dbg !4869
  %54 = load i64, i64* @g_current_cursor, align 8, !dbg !4870
  %55 = call i32 @XDefineCursor(%struct._XDisplay* %50, i64 %53, i64 %54), !dbg !4871
  br label %56, !dbg !4873

; <label>:56:                                     ; preds = %26
  %57 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !4874
  %58 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %57, i32 0, i32 20, !dbg !4876
  %59 = load %struct._seamless_window*, %struct._seamless_window** %58, align 8, !dbg !4876
  store %struct._seamless_window* %59, %struct._seamless_window** %3, align 8, !dbg !4877
  br label %23, !dbg !4878, !llvm.loop !4879

; <label>:60:                                     ; preds = %23
  %61 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4881
  %62 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !4883
  %63 = call i32 @XSetClipRectangles(%struct._XDisplay* %61, %struct._XGC* %62, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !4884
  br label %64, !dbg !4885

; <label>:64:                                     ; preds = %7, %60, %20
  ret void, !dbg !4886
}

; Function Attrs: nounwind uwtable
define void @ui_destroy_cursor(i8*) #0 !dbg !4887 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !4888, metadata !416), !dbg !4889
  %3 = load i8*, i8** %2, align 8, !dbg !4890
  %4 = load i8*, i8** @g_null_cursor, align 8, !dbg !4892
  %5 = icmp eq i8* %3, %4, !dbg !4893
  br i1 %5, label %6, label %7, !dbg !4894

; <label>:6:                                      ; preds = %1
  br label %12, !dbg !4895

; <label>:7:                                      ; preds = %1
  %8 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4896
  %9 = load i8*, i8** %2, align 8, !dbg !4897
  %10 = ptrtoint i8* %9 to i64, !dbg !4898
  %11 = call i32 @XFreeCursor(%struct._XDisplay* %8, i64 %10), !dbg !4899
  br label %12, !dbg !4900

; <label>:12:                                     ; preds = %7, %6
  ret void, !dbg !4901
}

; Function Attrs: nounwind uwtable
define void @ui_set_null_cursor() #0 !dbg !4903 {
  %1 = load i8*, i8** @g_null_cursor, align 8, !dbg !4904
  call void @ui_set_cursor(i8* %1), !dbg !4905
  ret void, !dbg !4906
}

; Function Attrs: nounwind uwtable
define void @ui_set_standard_cursor() #0 !dbg !4907 {
  %1 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !4908
  %2 = load i64, i64* @g_wnd, align 8, !dbg !4909
  %3 = call i32 @XUndefineCursor(%struct._XDisplay* %1, i64 %2), !dbg !4910
  ret void, !dbg !4911
}

declare i32 @XUndefineCursor(%struct._XDisplay*, i64) #2

; Function Attrs: nounwind uwtable
define i8* @ui_create_colourmap(%struct._COLOURMAP*) #0 !dbg !4912 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._COLOURMAP*, align 8
  %4 = alloca %struct._COLOURENTRY*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca %struct.XColor, align 8
  %9 = alloca [256 x %struct.XColor], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca %struct.XColor*, align 8
  %16 = alloca %struct.XColor*, align 8
  %17 = alloca i64, align 8
  store %struct._COLOURMAP* %0, %struct._COLOURMAP** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._COLOURMAP** %3, metadata !4928, metadata !416), !dbg !4929
  call void @llvm.dbg.declare(metadata %struct._COLOURENTRY** %4, metadata !4930, metadata !416), !dbg !4931
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4932, metadata !416), !dbg !4933
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4934, metadata !416), !dbg !4935
  %18 = load %struct._COLOURMAP*, %struct._COLOURMAP** %3, align 8, !dbg !4936
  %19 = getelementptr inbounds %struct._COLOURMAP, %struct._COLOURMAP* %18, i32 0, i32 0, !dbg !4937
  %20 = load i16, i16* %19, align 8, !dbg !4937
  %21 = zext i16 %20 to i32, !dbg !4936
  store i32 %21, i32* %6, align 4, !dbg !4935
  %22 = load i32, i32* @g_owncolmap, align 4, !dbg !4938
  %23 = icmp ne i32 %22, 0, !dbg !4938
  br i1 %23, label %283, label %24, !dbg !4940

; <label>:24:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata i32** %7, metadata !4941, metadata !416), !dbg !4943
  %25 = load i32, i32* %6, align 4, !dbg !4944
  %26 = sext i32 %25 to i64, !dbg !4944
  %27 = mul i64 4, %26, !dbg !4945
  %28 = trunc i64 %27 to i32, !dbg !4946
  %29 = call i8* @xmalloc(i32 %28), !dbg !4947
  %30 = bitcast i8* %29 to i32*, !dbg !4948
  store i32* %30, i32** %7, align 8, !dbg !4943
  call void @llvm.dbg.declare(metadata %struct.XColor* %8, metadata !4949, metadata !416), !dbg !4950
  call void @llvm.dbg.declare(metadata [256 x %struct.XColor]* %9, metadata !4951, metadata !416), !dbg !4953
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4954, metadata !416), !dbg !4955
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4956, metadata !416), !dbg !4957
  store i32 256, i32* %11, align 4, !dbg !4957
  store i32 0, i32* %5, align 4, !dbg !4958
  br label %31, !dbg !4960

; <label>:31:                                     ; preds = %277, %24
  %32 = load i32, i32* %5, align 4, !dbg !4961
  %33 = load i32, i32* %6, align 4, !dbg !4964
  %34 = icmp slt i32 %32, %33, !dbg !4965
  br i1 %34, label %35, label %280, !dbg !4966

; <label>:35:                                     ; preds = %31
  %36 = load i32, i32* %5, align 4, !dbg !4967
  %37 = sext i32 %36 to i64, !dbg !4969
  %38 = load %struct._COLOURMAP*, %struct._COLOURMAP** %3, align 8, !dbg !4969
  %39 = getelementptr inbounds %struct._COLOURMAP, %struct._COLOURMAP* %38, i32 0, i32 1, !dbg !4970
  %40 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %39, align 8, !dbg !4970
  %41 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %40, i64 %37, !dbg !4969
  store %struct._COLOURENTRY* %41, %struct._COLOURENTRY** %4, align 8, !dbg !4971
  %42 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !4972
  %43 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %42, i32 0, i32 0, !dbg !4973
  %44 = load i8, i8* %43, align 1, !dbg !4973
  %45 = zext i8 %44 to i32, !dbg !4974
  %46 = shl i32 %45, 8, !dbg !4975
  %47 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !4976
  %48 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %47, i32 0, i32 0, !dbg !4977
  %49 = load i8, i8* %48, align 1, !dbg !4977
  %50 = zext i8 %49 to i32, !dbg !4978
  %51 = or i32 %46, %50, !dbg !4979
  %52 = trunc i32 %51 to i16, !dbg !4980
  %53 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 1, !dbg !4981
  store i16 %52, i16* %53, align 8, !dbg !4982
  %54 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !4983
  %55 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %54, i32 0, i32 1, !dbg !4984
  %56 = load i8, i8* %55, align 1, !dbg !4984
  %57 = zext i8 %56 to i32, !dbg !4985
  %58 = shl i32 %57, 8, !dbg !4986
  %59 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !4987
  %60 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %59, i32 0, i32 1, !dbg !4988
  %61 = load i8, i8* %60, align 1, !dbg !4988
  %62 = zext i8 %61 to i32, !dbg !4989
  %63 = or i32 %58, %62, !dbg !4990
  %64 = trunc i32 %63 to i16, !dbg !4991
  %65 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 2, !dbg !4992
  store i16 %64, i16* %65, align 2, !dbg !4993
  %66 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !4994
  %67 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %66, i32 0, i32 2, !dbg !4995
  %68 = load i8, i8* %67, align 1, !dbg !4995
  %69 = zext i8 %68 to i32, !dbg !4996
  %70 = shl i32 %69, 8, !dbg !4997
  %71 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !4998
  %72 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %71, i32 0, i32 2, !dbg !4999
  %73 = load i8, i8* %72, align 1, !dbg !4999
  %74 = zext i8 %73 to i32, !dbg !5000
  %75 = or i32 %70, %74, !dbg !5001
  %76 = trunc i32 %75 to i16, !dbg !5002
  %77 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 3, !dbg !5003
  store i16 %76, i16* %77, align 4, !dbg !5004
  %78 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 4, !dbg !5005
  store i8 7, i8* %78, align 2, !dbg !5006
  %79 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5007
  %80 = load i64, i64* @g_xcolmap, align 8, !dbg !5009
  %81 = call i32 @XAllocColor(%struct._XDisplay* %79, i64 %80, %struct.XColor* %8), !dbg !5010
  %82 = icmp eq i32 %81, 0, !dbg !5011
  br i1 %82, label %83, label %245, !dbg !5012

; <label>:83:                                     ; preds = %35
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5013, metadata !416), !dbg !5015
  store i32 256, i32* %12, align 4, !dbg !5015
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5016, metadata !416), !dbg !5017
  store i32 196608, i32* %13, align 4, !dbg !5017
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5018, metadata !416), !dbg !5019
  %84 = load i32, i32* %13, align 4, !dbg !5020
  %85 = sext i32 %84 to i64, !dbg !5020
  store i64 %85, i64* %14, align 8, !dbg !5019
  br label %86, !dbg !5021

; <label>:86:                                     ; preds = %90, %83
  %87 = load i32, i32* %11, align 4, !dbg !5022
  %88 = add nsw i32 %87, -1, !dbg !5022
  store i32 %88, i32* %11, align 4, !dbg !5022
  %89 = icmp ne i32 %87, 0, !dbg !5024
  br i1 %89, label %90, label %130, !dbg !5024

; <label>:90:                                     ; preds = %86
  %91 = load i32, i32* %11, align 4, !dbg !5025
  %92 = sext i32 %91 to i64, !dbg !5025
  %93 = load i32, i32* %11, align 4, !dbg !5027
  %94 = sext i32 %93 to i64, !dbg !5028
  %95 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %94, !dbg !5028
  %96 = getelementptr inbounds %struct.XColor, %struct.XColor* %95, i32 0, i32 0, !dbg !5029
  store i64 %92, i64* %96, align 16, !dbg !5030
  %97 = load i32, i32* %11, align 4, !dbg !5031
  %98 = sext i32 %97 to i64, !dbg !5032
  %99 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %98, !dbg !5032
  %100 = getelementptr inbounds %struct.XColor, %struct.XColor* %99, i32 0, i32 3, !dbg !5033
  store i16 0, i16* %100, align 4, !dbg !5034
  %101 = load i32, i32* %11, align 4, !dbg !5035
  %102 = sext i32 %101 to i64, !dbg !5036
  %103 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %102, !dbg !5036
  %104 = getelementptr inbounds %struct.XColor, %struct.XColor* %103, i32 0, i32 2, !dbg !5037
  store i16 0, i16* %104, align 2, !dbg !5038
  %105 = load i32, i32* %11, align 4, !dbg !5039
  %106 = sext i32 %105 to i64, !dbg !5040
  %107 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %106, !dbg !5040
  %108 = getelementptr inbounds %struct.XColor, %struct.XColor* %107, i32 0, i32 1, !dbg !5041
  store i16 0, i16* %108, align 8, !dbg !5042
  %109 = load i32, i32* %11, align 4, !dbg !5043
  %110 = sext i32 %109 to i64, !dbg !5044
  %111 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %110, !dbg !5044
  %112 = getelementptr inbounds %struct.XColor, %struct.XColor* %111, i32 0, i32 4, !dbg !5045
  store i8 0, i8* %112, align 2, !dbg !5046
  %113 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5047
  %114 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5048
  %115 = bitcast %struct._XDisplay* %114 to %struct.anon*, !dbg !5049
  %116 = getelementptr inbounds %struct.anon, %struct.anon* %115, i32 0, i32 33, !dbg !5049
  %117 = load i32, i32* %116, align 8, !dbg !5049
  %118 = sext i32 %117 to i64, !dbg !5049
  %119 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5048
  %120 = bitcast %struct._XDisplay* %119 to %struct.anon*, !dbg !5049
  %121 = getelementptr inbounds %struct.anon, %struct.anon* %120, i32 0, i32 35, !dbg !5049
  %122 = load %struct.Screen*, %struct.Screen** %121, align 8, !dbg !5049
  %123 = getelementptr inbounds %struct.Screen, %struct.Screen* %122, i64 %118, !dbg !5049
  %124 = getelementptr inbounds %struct.Screen, %struct.Screen* %123, i32 0, i32 12, !dbg !5050
  %125 = load i64, i64* %124, align 8, !dbg !5050
  %126 = load i32, i32* %11, align 4, !dbg !5051
  %127 = sext i32 %126 to i64, !dbg !5052
  %128 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %127, !dbg !5052
  %129 = call i32 @XQueryColor(%struct._XDisplay* %113, i64 %125, %struct.XColor* %128), !dbg !5053
  br label %86, !dbg !5054, !llvm.loop !5056

; <label>:130:                                    ; preds = %86
  store i32 0, i32* %11, align 4, !dbg !5057
  br label %131, !dbg !5058

; <label>:131:                                    ; preds = %243, %130
  %132 = load i32, i32* %12, align 4, !dbg !5059
  %133 = add nsw i32 %132, -1, !dbg !5059
  store i32 %133, i32* %12, align 4, !dbg !5059
  %134 = icmp ne i32 %132, 0, !dbg !5060
  br i1 %134, label %135, label %244, !dbg !5060

; <label>:135:                                    ; preds = %131
  %136 = load i32, i32* %12, align 4, !dbg !5061
  %137 = sext i32 %136 to i64, !dbg !5064
  %138 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %137, !dbg !5064
  %139 = getelementptr inbounds %struct.XColor, %struct.XColor* %138, i32 0, i32 4, !dbg !5065
  %140 = load i8, i8* %139, align 2, !dbg !5065
  %141 = icmp ne i8 %140, 0, !dbg !5064
  br i1 %141, label %142, label %232, !dbg !5066

; <label>:142:                                    ; preds = %135
  %143 = load i32, i32* %12, align 4, !dbg !5067
  %144 = sext i32 %143 to i64, !dbg !5069
  %145 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %144, !dbg !5069
  %146 = getelementptr inbounds %struct.XColor, %struct.XColor* %145, i32 0, i32 1, !dbg !5070
  %147 = load i16, i16* %146, align 8, !dbg !5070
  %148 = zext i16 %147 to i32, !dbg !5069
  %149 = ashr i32 %148, 8, !dbg !5071
  %150 = sext i32 %149 to i64, !dbg !5072
  %151 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 1, !dbg !5073
  %152 = load i16, i16* %151, align 8, !dbg !5073
  %153 = zext i16 %152 to i32, !dbg !5074
  %154 = ashr i32 %153, 8, !dbg !5075
  %155 = sext i32 %154 to i64, !dbg !5076
  %156 = sub nsw i64 %150, %155, !dbg !5077
  %157 = load i32, i32* %12, align 4, !dbg !5078
  %158 = sext i32 %157 to i64, !dbg !5079
  %159 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %158, !dbg !5079
  %160 = getelementptr inbounds %struct.XColor, %struct.XColor* %159, i32 0, i32 1, !dbg !5080
  %161 = load i16, i16* %160, align 8, !dbg !5080
  %162 = zext i16 %161 to i32, !dbg !5079
  %163 = ashr i32 %162, 8, !dbg !5081
  %164 = sext i32 %163 to i64, !dbg !5082
  %165 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 1, !dbg !5083
  %166 = load i16, i16* %165, align 8, !dbg !5083
  %167 = zext i16 %166 to i32, !dbg !5084
  %168 = ashr i32 %167, 8, !dbg !5085
  %169 = sext i32 %168 to i64, !dbg !5086
  %170 = sub nsw i64 %164, %169, !dbg !5087
  %171 = mul nsw i64 %156, %170, !dbg !5088
  %172 = load i32, i32* %12, align 4, !dbg !5089
  %173 = sext i32 %172 to i64, !dbg !5090
  %174 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %173, !dbg !5090
  %175 = getelementptr inbounds %struct.XColor, %struct.XColor* %174, i32 0, i32 2, !dbg !5091
  %176 = load i16, i16* %175, align 2, !dbg !5091
  %177 = zext i16 %176 to i32, !dbg !5090
  %178 = ashr i32 %177, 8, !dbg !5092
  %179 = sext i32 %178 to i64, !dbg !5093
  %180 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 2, !dbg !5094
  %181 = load i16, i16* %180, align 2, !dbg !5094
  %182 = zext i16 %181 to i32, !dbg !5095
  %183 = ashr i32 %182, 8, !dbg !5096
  %184 = sext i32 %183 to i64, !dbg !5097
  %185 = sub nsw i64 %179, %184, !dbg !5098
  %186 = load i32, i32* %12, align 4, !dbg !5099
  %187 = sext i32 %186 to i64, !dbg !5100
  %188 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %187, !dbg !5100
  %189 = getelementptr inbounds %struct.XColor, %struct.XColor* %188, i32 0, i32 2, !dbg !5101
  %190 = load i16, i16* %189, align 2, !dbg !5101
  %191 = zext i16 %190 to i32, !dbg !5100
  %192 = ashr i32 %191, 8, !dbg !5102
  %193 = sext i32 %192 to i64, !dbg !5103
  %194 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 2, !dbg !5104
  %195 = load i16, i16* %194, align 2, !dbg !5104
  %196 = zext i16 %195 to i32, !dbg !5105
  %197 = ashr i32 %196, 8, !dbg !5106
  %198 = sext i32 %197 to i64, !dbg !5107
  %199 = sub nsw i64 %193, %198, !dbg !5108
  %200 = mul nsw i64 %185, %199, !dbg !5109
  %201 = add nsw i64 %171, %200, !dbg !5110
  %202 = load i32, i32* %12, align 4, !dbg !5111
  %203 = sext i32 %202 to i64, !dbg !5112
  %204 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %203, !dbg !5112
  %205 = getelementptr inbounds %struct.XColor, %struct.XColor* %204, i32 0, i32 3, !dbg !5113
  %206 = load i16, i16* %205, align 4, !dbg !5113
  %207 = zext i16 %206 to i32, !dbg !5112
  %208 = ashr i32 %207, 8, !dbg !5114
  %209 = sext i32 %208 to i64, !dbg !5115
  %210 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 3, !dbg !5116
  %211 = load i16, i16* %210, align 4, !dbg !5116
  %212 = zext i16 %211 to i32, !dbg !5117
  %213 = ashr i32 %212, 8, !dbg !5118
  %214 = sext i32 %213 to i64, !dbg !5119
  %215 = sub nsw i64 %209, %214, !dbg !5120
  %216 = load i32, i32* %12, align 4, !dbg !5121
  %217 = sext i32 %216 to i64, !dbg !5122
  %218 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %217, !dbg !5122
  %219 = getelementptr inbounds %struct.XColor, %struct.XColor* %218, i32 0, i32 3, !dbg !5123
  %220 = load i16, i16* %219, align 4, !dbg !5123
  %221 = zext i16 %220 to i32, !dbg !5122
  %222 = ashr i32 %221, 8, !dbg !5124
  %223 = sext i32 %222 to i64, !dbg !5125
  %224 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 3, !dbg !5126
  %225 = load i16, i16* %224, align 4, !dbg !5126
  %226 = zext i16 %225 to i32, !dbg !5127
  %227 = ashr i32 %226, 8, !dbg !5128
  %228 = sext i32 %227 to i64, !dbg !5129
  %229 = sub nsw i64 %223, %228, !dbg !5130
  %230 = mul nsw i64 %215, %229, !dbg !5131
  %231 = add nsw i64 %201, %230, !dbg !5132
  store i64 %231, i64* %14, align 8, !dbg !5133
  br label %232, !dbg !5134

; <label>:232:                                    ; preds = %142, %135
  %233 = load i64, i64* %14, align 8, !dbg !5135
  %234 = load i32, i32* %13, align 4, !dbg !5137
  %235 = sext i32 %234 to i64, !dbg !5137
  %236 = icmp slt i64 %233, %235, !dbg !5138
  br i1 %236, label %237, label %243, !dbg !5139

; <label>:237:                                    ; preds = %232
  %238 = load i64, i64* %14, align 8, !dbg !5140
  %239 = trunc i64 %238 to i32, !dbg !5140
  store i32 %239, i32* %13, align 4, !dbg !5142
  %240 = load i32, i32* %12, align 4, !dbg !5143
  %241 = sext i32 %240 to i64, !dbg !5143
  %242 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 0, !dbg !5144
  store i64 %241, i64* %242, align 8, !dbg !5145
  br label %243, !dbg !5146

; <label>:243:                                    ; preds = %237, %232
  br label %131, !dbg !5147, !llvm.loop !5148

; <label>:244:                                    ; preds = %131
  br label %245, !dbg !5149

; <label>:245:                                    ; preds = %244, %35
  %246 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 0, !dbg !5150
  %247 = load i64, i64* %246, align 8, !dbg !5150
  %248 = trunc i64 %247 to i32, !dbg !5151
  store i32 %248, i32* %10, align 4, !dbg !5152
  %249 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 0, !dbg !5153
  %250 = load i64, i64* %249, align 8, !dbg !5153
  %251 = icmp ult i64 %250, 256, !dbg !5155
  br i1 %251, label %252, label %271, !dbg !5156

; <label>:252:                                    ; preds = %245
  %253 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 1, !dbg !5157
  %254 = load i16, i16* %253, align 8, !dbg !5157
  %255 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 0, !dbg !5159
  %256 = load i64, i64* %255, align 8, !dbg !5159
  %257 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %256, !dbg !5160
  %258 = getelementptr inbounds %struct.XColor, %struct.XColor* %257, i32 0, i32 1, !dbg !5161
  store i16 %254, i16* %258, align 8, !dbg !5162
  %259 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 2, !dbg !5163
  %260 = load i16, i16* %259, align 2, !dbg !5163
  %261 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 0, !dbg !5164
  %262 = load i64, i64* %261, align 8, !dbg !5164
  %263 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %262, !dbg !5165
  %264 = getelementptr inbounds %struct.XColor, %struct.XColor* %263, i32 0, i32 2, !dbg !5166
  store i16 %260, i16* %264, align 2, !dbg !5167
  %265 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 3, !dbg !5168
  %266 = load i16, i16* %265, align 4, !dbg !5168
  %267 = getelementptr inbounds %struct.XColor, %struct.XColor* %8, i32 0, i32 0, !dbg !5169
  %268 = load i64, i64* %267, align 8, !dbg !5169
  %269 = getelementptr inbounds [256 x %struct.XColor], [256 x %struct.XColor]* %9, i64 0, i64 %268, !dbg !5170
  %270 = getelementptr inbounds %struct.XColor, %struct.XColor* %269, i32 0, i32 3, !dbg !5171
  store i16 %266, i16* %270, align 4, !dbg !5172
  br label %271, !dbg !5173

; <label>:271:                                    ; preds = %252, %245
  %272 = load i32, i32* %10, align 4, !dbg !5174
  %273 = load i32, i32* %5, align 4, !dbg !5175
  %274 = sext i32 %273 to i64, !dbg !5176
  %275 = load i32*, i32** %7, align 8, !dbg !5176
  %276 = getelementptr inbounds i32, i32* %275, i64 %274, !dbg !5176
  store i32 %272, i32* %276, align 4, !dbg !5177
  br label %277, !dbg !5178

; <label>:277:                                    ; preds = %271
  %278 = load i32, i32* %5, align 4, !dbg !5179
  %279 = add nsw i32 %278, 1, !dbg !5179
  store i32 %279, i32* %5, align 4, !dbg !5179
  br label %31, !dbg !5181, !llvm.loop !5182

; <label>:280:                                    ; preds = %31
  %281 = load i32*, i32** %7, align 8, !dbg !5184
  %282 = bitcast i32* %281 to i8*, !dbg !5184
  store i8* %282, i8** %2, align 8, !dbg !5185
  br label %367, !dbg !5185

; <label>:283:                                    ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.XColor** %15, metadata !5186, metadata !416), !dbg !5188
  call void @llvm.dbg.declare(metadata %struct.XColor** %16, metadata !5189, metadata !416), !dbg !5190
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5191, metadata !416), !dbg !5192
  %284 = load i32, i32* %6, align 4, !dbg !5193
  %285 = sext i32 %284 to i64, !dbg !5193
  %286 = mul i64 16, %285, !dbg !5194
  %287 = trunc i64 %286 to i32, !dbg !5195
  %288 = call i8* @xmalloc(i32 %287), !dbg !5196
  %289 = bitcast i8* %288 to %struct.XColor*, !dbg !5197
  store %struct.XColor* %289, %struct.XColor** %15, align 8, !dbg !5198
  store i32 0, i32* %5, align 4, !dbg !5199
  br label %290, !dbg !5201

; <label>:290:                                    ; preds = %350, %283
  %291 = load i32, i32* %5, align 4, !dbg !5202
  %292 = load i32, i32* %6, align 4, !dbg !5205
  %293 = icmp slt i32 %291, %292, !dbg !5206
  br i1 %293, label %294, label %353, !dbg !5207

; <label>:294:                                    ; preds = %290
  %295 = load i32, i32* %5, align 4, !dbg !5208
  %296 = sext i32 %295 to i64, !dbg !5210
  %297 = load %struct._COLOURMAP*, %struct._COLOURMAP** %3, align 8, !dbg !5210
  %298 = getelementptr inbounds %struct._COLOURMAP, %struct._COLOURMAP* %297, i32 0, i32 1, !dbg !5211
  %299 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %298, align 8, !dbg !5211
  %300 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %299, i64 %296, !dbg !5210
  store %struct._COLOURENTRY* %300, %struct._COLOURENTRY** %4, align 8, !dbg !5212
  %301 = load i32, i32* %5, align 4, !dbg !5213
  %302 = sext i32 %301 to i64, !dbg !5214
  %303 = load %struct.XColor*, %struct.XColor** %15, align 8, !dbg !5214
  %304 = getelementptr inbounds %struct.XColor, %struct.XColor* %303, i64 %302, !dbg !5214
  store %struct.XColor* %304, %struct.XColor** %16, align 8, !dbg !5215
  %305 = load i32, i32* %5, align 4, !dbg !5216
  %306 = sext i32 %305 to i64, !dbg !5216
  %307 = load %struct.XColor*, %struct.XColor** %16, align 8, !dbg !5217
  %308 = getelementptr inbounds %struct.XColor, %struct.XColor* %307, i32 0, i32 0, !dbg !5218
  store i64 %306, i64* %308, align 8, !dbg !5219
  %309 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !5220
  %310 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %309, i32 0, i32 0, !dbg !5221
  %311 = load i8, i8* %310, align 1, !dbg !5221
  %312 = zext i8 %311 to i32, !dbg !5222
  %313 = shl i32 %312, 8, !dbg !5223
  %314 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !5224
  %315 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %314, i32 0, i32 0, !dbg !5225
  %316 = load i8, i8* %315, align 1, !dbg !5225
  %317 = zext i8 %316 to i32, !dbg !5226
  %318 = or i32 %313, %317, !dbg !5227
  %319 = trunc i32 %318 to i16, !dbg !5228
  %320 = load %struct.XColor*, %struct.XColor** %16, align 8, !dbg !5229
  %321 = getelementptr inbounds %struct.XColor, %struct.XColor* %320, i32 0, i32 1, !dbg !5230
  store i16 %319, i16* %321, align 8, !dbg !5231
  %322 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !5232
  %323 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %322, i32 0, i32 1, !dbg !5233
  %324 = load i8, i8* %323, align 1, !dbg !5233
  %325 = zext i8 %324 to i32, !dbg !5234
  %326 = shl i32 %325, 8, !dbg !5235
  %327 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !5236
  %328 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %327, i32 0, i32 1, !dbg !5237
  %329 = load i8, i8* %328, align 1, !dbg !5237
  %330 = zext i8 %329 to i32, !dbg !5238
  %331 = or i32 %326, %330, !dbg !5239
  %332 = trunc i32 %331 to i16, !dbg !5240
  %333 = load %struct.XColor*, %struct.XColor** %16, align 8, !dbg !5241
  %334 = getelementptr inbounds %struct.XColor, %struct.XColor* %333, i32 0, i32 2, !dbg !5242
  store i16 %332, i16* %334, align 2, !dbg !5243
  %335 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !5244
  %336 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %335, i32 0, i32 2, !dbg !5245
  %337 = load i8, i8* %336, align 1, !dbg !5245
  %338 = zext i8 %337 to i32, !dbg !5246
  %339 = shl i32 %338, 8, !dbg !5247
  %340 = load %struct._COLOURENTRY*, %struct._COLOURENTRY** %4, align 8, !dbg !5248
  %341 = getelementptr inbounds %struct._COLOURENTRY, %struct._COLOURENTRY* %340, i32 0, i32 2, !dbg !5249
  %342 = load i8, i8* %341, align 1, !dbg !5249
  %343 = zext i8 %342 to i32, !dbg !5250
  %344 = or i32 %339, %343, !dbg !5251
  %345 = trunc i32 %344 to i16, !dbg !5252
  %346 = load %struct.XColor*, %struct.XColor** %16, align 8, !dbg !5253
  %347 = getelementptr inbounds %struct.XColor, %struct.XColor* %346, i32 0, i32 3, !dbg !5254
  store i16 %345, i16* %347, align 4, !dbg !5255
  %348 = load %struct.XColor*, %struct.XColor** %16, align 8, !dbg !5256
  %349 = getelementptr inbounds %struct.XColor, %struct.XColor* %348, i32 0, i32 4, !dbg !5257
  store i8 7, i8* %349, align 2, !dbg !5258
  br label %350, !dbg !5259

; <label>:350:                                    ; preds = %294
  %351 = load i32, i32* %5, align 4, !dbg !5260
  %352 = add nsw i32 %351, 1, !dbg !5260
  store i32 %352, i32* %5, align 4, !dbg !5260
  br label %290, !dbg !5262, !llvm.loop !5263

; <label>:353:                                    ; preds = %290
  %354 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5265
  %355 = load i64, i64* @g_wnd, align 8, !dbg !5266
  %356 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !5267
  %357 = call i64 @XCreateColormap(%struct._XDisplay* %354, i64 %355, %struct.Visual* %356, i32 1), !dbg !5268
  store i64 %357, i64* %17, align 8, !dbg !5269
  %358 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5270
  %359 = load i64, i64* %17, align 8, !dbg !5271
  %360 = load %struct.XColor*, %struct.XColor** %15, align 8, !dbg !5272
  %361 = load i32, i32* %6, align 4, !dbg !5273
  %362 = call i32 @XStoreColors(%struct._XDisplay* %358, i64 %359, %struct.XColor* %360, i32 %361), !dbg !5274
  %363 = load %struct.XColor*, %struct.XColor** %15, align 8, !dbg !5275
  %364 = bitcast %struct.XColor* %363 to i8*, !dbg !5275
  call void @xfree(i8* %364), !dbg !5276
  %365 = load i64, i64* %17, align 8, !dbg !5277
  %366 = inttoptr i64 %365 to i8*, !dbg !5278
  store i8* %366, i8** %2, align 8, !dbg !5279
  br label %367, !dbg !5279

; <label>:367:                                    ; preds = %353, %280
  %368 = load i8*, i8** %2, align 8, !dbg !5280
  ret i8* %368, !dbg !5280
}

declare i8* @xmalloc(i32) #2

declare i32 @XAllocColor(%struct._XDisplay*, i64, %struct.XColor*) #2

declare i32 @XQueryColor(%struct._XDisplay*, i64, %struct.XColor*) #2

declare i32 @XStoreColors(%struct._XDisplay*, i64, %struct.XColor*, i32) #2

; Function Attrs: nounwind uwtable
define void @ui_destroy_colourmap(i8*) #0 !dbg !5281 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !5284, metadata !416), !dbg !5285
  %3 = load i32, i32* @g_owncolmap, align 4, !dbg !5286
  %4 = icmp ne i32 %3, 0, !dbg !5286
  br i1 %4, label %7, label %5, !dbg !5288

; <label>:5:                                      ; preds = %1
  %6 = load i8*, i8** %2, align 8, !dbg !5289
  call void @xfree(i8* %6), !dbg !5290
  br label %12, !dbg !5290

; <label>:7:                                      ; preds = %1
  %8 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5291
  %9 = load i8*, i8** %2, align 8, !dbg !5292
  %10 = ptrtoint i8* %9 to i64, !dbg !5293
  %11 = call i32 @XFreeColormap(%struct._XDisplay* %8, i64 %10), !dbg !5294
  br label %12

; <label>:12:                                     ; preds = %7, %5
  ret void, !dbg !5295
}

declare i32 @XFreeColormap(%struct._XDisplay*, i64) #2

; Function Attrs: nounwind uwtable
define void @ui_set_colourmap(i8*) #0 !dbg !5296 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._seamless_window*, align 8
  %4 = alloca %struct.XRectangle, align 2
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !5297, metadata !416), !dbg !5298
  %5 = load i32, i32* @g_owncolmap, align 4, !dbg !5299
  %6 = icmp ne i32 %5, 0, !dbg !5299
  br i1 %6, label %16, label %7, !dbg !5301

; <label>:7:                                      ; preds = %1
  %8 = load i32*, i32** @g_colmap, align 8, !dbg !5302
  %9 = icmp ne i32* %8, null, !dbg !5302
  br i1 %9, label %10, label %13, !dbg !5305

; <label>:10:                                     ; preds = %7
  %11 = load i32*, i32** @g_colmap, align 8, !dbg !5306
  %12 = bitcast i32* %11 to i8*, !dbg !5306
  call void @xfree(i8* %12), !dbg !5307
  br label %13, !dbg !5307

; <label>:13:                                     ; preds = %10, %7
  %14 = load i8*, i8** %2, align 8, !dbg !5308
  %15 = bitcast i8* %14 to i32*, !dbg !5309
  store i32* %15, i32** @g_colmap, align 8, !dbg !5310
  br label %71, !dbg !5311

; <label>:16:                                     ; preds = %1
  %17 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5312
  %18 = load i64, i64* @g_wnd, align 8, !dbg !5314
  %19 = load i8*, i8** %2, align 8, !dbg !5315
  %20 = ptrtoint i8* %19 to i64, !dbg !5316
  %21 = call i32 @XSetWindowColormap(%struct._XDisplay* %17, i64 %18, i64 %20), !dbg !5317
  br label %22, !dbg !5318, !llvm.loop !5319

; <label>:22:                                     ; preds = %16
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %3, metadata !5320, metadata !416), !dbg !5322
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %4, metadata !5323, metadata !416), !dbg !5324
  %23 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !5325
  %24 = icmp ne %struct._seamless_window* %23, null, !dbg !5325
  br i1 %24, label %26, label %25, !dbg !5328

; <label>:25:                                     ; preds = %22
  br label %70, !dbg !5329

; <label>:26:                                     ; preds = %22
  %27 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !5331
  store %struct._seamless_window* %27, %struct._seamless_window** %3, align 8, !dbg !5334
  br label %28, !dbg !5335

; <label>:28:                                     ; preds = %62, %26
  %29 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !5336
  %30 = icmp ne %struct._seamless_window* %29, null, !dbg !5339
  br i1 %30, label %31, label %66, !dbg !5339

; <label>:31:                                     ; preds = %28
  %32 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !5340
  %33 = sext i16 %32 to i32, !dbg !5343
  %34 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !5344
  %35 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %34, i32 0, i32 4, !dbg !5345
  %36 = load i32, i32* %35, align 8, !dbg !5345
  %37 = sub nsw i32 %33, %36, !dbg !5346
  %38 = trunc i32 %37 to i16, !dbg !5343
  %39 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %4, i32 0, i32 0, !dbg !5347
  store i16 %38, i16* %39, align 2, !dbg !5348
  %40 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !5349
  %41 = sext i16 %40 to i32, !dbg !5350
  %42 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !5351
  %43 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %42, i32 0, i32 5, !dbg !5352
  %44 = load i32, i32* %43, align 4, !dbg !5352
  %45 = sub nsw i32 %41, %44, !dbg !5353
  %46 = trunc i32 %45 to i16, !dbg !5350
  %47 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %4, i32 0, i32 1, !dbg !5354
  store i16 %46, i16* %47, align 2, !dbg !5355
  %48 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !5356
  %49 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %4, i32 0, i32 2, !dbg !5357
  store i16 %48, i16* %49, align 2, !dbg !5358
  %50 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !5359
  %51 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %4, i32 0, i32 3, !dbg !5360
  store i16 %50, i16* %51, align 2, !dbg !5361
  %52 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5362
  %53 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5363
  %54 = call i32 @XSetClipRectangles(%struct._XDisplay* %52, %struct._XGC* %53, i32 0, i32 0, %struct.XRectangle* %4, i32 1, i32 3), !dbg !5364
  %55 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5365
  %56 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !5366
  %57 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %56, i32 0, i32 0, !dbg !5367
  %58 = load i64, i64* %57, align 8, !dbg !5367
  %59 = load i8*, i8** %2, align 8, !dbg !5368
  %60 = ptrtoint i8* %59 to i64, !dbg !5369
  %61 = call i32 @XSetWindowColormap(%struct._XDisplay* %55, i64 %58, i64 %60), !dbg !5370
  br label %62, !dbg !5372

; <label>:62:                                     ; preds = %31
  %63 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !5373
  %64 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %63, i32 0, i32 20, !dbg !5375
  %65 = load %struct._seamless_window*, %struct._seamless_window** %64, align 8, !dbg !5375
  store %struct._seamless_window* %65, %struct._seamless_window** %3, align 8, !dbg !5376
  br label %28, !dbg !5377, !llvm.loop !5378

; <label>:66:                                     ; preds = %28
  %67 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5380
  %68 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5382
  %69 = call i32 @XSetClipRectangles(%struct._XDisplay* %67, %struct._XGC* %68, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !5383
  br label %70, !dbg !5384

; <label>:70:                                     ; preds = %66, %25
  br label %71

; <label>:71:                                     ; preds = %70, %13
  ret void, !dbg !5385
}

declare i32 @XSetWindowColormap(%struct._XDisplay*, i64, i64) #2

; Function Attrs: nounwind uwtable
define void @ui_bell() #0 !dbg !5386 {
  %1 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5387
  %2 = call i32 @XBell(%struct._XDisplay* %1, i32 0), !dbg !5388
  ret void, !dbg !5389
}

declare i32 @XBell(%struct._XDisplay*, i32) #2

; Function Attrs: nounwind uwtable
define void @ui_destblt(i8 zeroext, i32, i32, i32, i32) #0 !dbg !5390 {
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct._seamless_window*, align 8
  %12 = alloca %struct.XRectangle, align 2
  store i8 %0, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !5393, metadata !416), !dbg !5394
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5395, metadata !416), !dbg !5396
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5397, metadata !416), !dbg !5398
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5399, metadata !416), !dbg !5400
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5401, metadata !416), !dbg !5402
  %13 = load i8, i8* %6, align 1, !dbg !5403
  %14 = zext i8 %13 to i32, !dbg !5403
  %15 = icmp ne i32 %14, 12, !dbg !5406
  br i1 %15, label %16, label %24, !dbg !5407

; <label>:16:                                     ; preds = %5
  %17 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5408
  %18 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5410
  %19 = load i8, i8* %6, align 1, !dbg !5411
  %20 = zext i8 %19 to i64, !dbg !5412
  %21 = getelementptr inbounds [16 x i32], [16 x i32]* @rop2_map, i64 0, i64 %20, !dbg !5412
  %22 = load i32, i32* %21, align 4, !dbg !5412
  %23 = call i32 @XSetFunction(%struct._XDisplay* %17, %struct._XGC* %18, i32 %22), !dbg !5413
  br label %24, !dbg !5413

; <label>:24:                                     ; preds = %16, %5
  %25 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5414
  %26 = load i64, i64* @g_wnd, align 8, !dbg !5416
  %27 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5417
  %28 = load i32, i32* %7, align 4, !dbg !5418
  %29 = load i32, i32* %8, align 4, !dbg !5419
  %30 = load i32, i32* %9, align 4, !dbg !5420
  %31 = load i32, i32* %10, align 4, !dbg !5421
  %32 = call i32 @XFillRectangle(%struct._XDisplay* %25, i64 %26, %struct._XGC* %27, i32 %28, i32 %29, i32 %30, i32 %31), !dbg !5422
  br label %33, !dbg !5423, !llvm.loop !5424

; <label>:33:                                     ; preds = %24
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %11, metadata !5425, metadata !416), !dbg !5427
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %12, metadata !5428, metadata !416), !dbg !5429
  %34 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !5430
  %35 = icmp ne %struct._seamless_window* %34, null, !dbg !5430
  br i1 %35, label %37, label %36, !dbg !5433

; <label>:36:                                     ; preds = %33
  br label %92, !dbg !5434

; <label>:37:                                     ; preds = %33
  %38 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !5436
  store %struct._seamless_window* %38, %struct._seamless_window** %11, align 8, !dbg !5439
  br label %39, !dbg !5440

; <label>:39:                                     ; preds = %84, %37
  %40 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !5441
  %41 = icmp ne %struct._seamless_window* %40, null, !dbg !5444
  br i1 %41, label %42, label %88, !dbg !5444

; <label>:42:                                     ; preds = %39
  %43 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !5445
  %44 = sext i16 %43 to i32, !dbg !5448
  %45 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !5449
  %46 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %45, i32 0, i32 4, !dbg !5450
  %47 = load i32, i32* %46, align 8, !dbg !5450
  %48 = sub nsw i32 %44, %47, !dbg !5451
  %49 = trunc i32 %48 to i16, !dbg !5448
  %50 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %12, i32 0, i32 0, !dbg !5452
  store i16 %49, i16* %50, align 2, !dbg !5453
  %51 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !5454
  %52 = sext i16 %51 to i32, !dbg !5455
  %53 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !5456
  %54 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %53, i32 0, i32 5, !dbg !5457
  %55 = load i32, i32* %54, align 4, !dbg !5457
  %56 = sub nsw i32 %52, %55, !dbg !5458
  %57 = trunc i32 %56 to i16, !dbg !5455
  %58 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %12, i32 0, i32 1, !dbg !5459
  store i16 %57, i16* %58, align 2, !dbg !5460
  %59 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !5461
  %60 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %12, i32 0, i32 2, !dbg !5462
  store i16 %59, i16* %60, align 2, !dbg !5463
  %61 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !5464
  %62 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %12, i32 0, i32 3, !dbg !5465
  store i16 %61, i16* %62, align 2, !dbg !5466
  %63 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5467
  %64 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5468
  %65 = call i32 @XSetClipRectangles(%struct._XDisplay* %63, %struct._XGC* %64, i32 0, i32 0, %struct.XRectangle* %12, i32 1, i32 3), !dbg !5469
  %66 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5470
  %67 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !5471
  %68 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %67, i32 0, i32 0, !dbg !5472
  %69 = load i64, i64* %68, align 8, !dbg !5472
  %70 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5473
  %71 = load i32, i32* %7, align 4, !dbg !5474
  %72 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !5475
  %73 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %72, i32 0, i32 4, !dbg !5476
  %74 = load i32, i32* %73, align 8, !dbg !5476
  %75 = sub nsw i32 %71, %74, !dbg !5477
  %76 = load i32, i32* %8, align 4, !dbg !5478
  %77 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !5479
  %78 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %77, i32 0, i32 5, !dbg !5480
  %79 = load i32, i32* %78, align 4, !dbg !5480
  %80 = sub nsw i32 %76, %79, !dbg !5481
  %81 = load i32, i32* %9, align 4, !dbg !5482
  %82 = load i32, i32* %10, align 4, !dbg !5483
  %83 = call i32 @XFillRectangle(%struct._XDisplay* %66, i64 %69, %struct._XGC* %70, i32 %75, i32 %80, i32 %81, i32 %82), !dbg !5484
  br label %84, !dbg !5486

; <label>:84:                                     ; preds = %42
  %85 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !5487
  %86 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %85, i32 0, i32 20, !dbg !5489
  %87 = load %struct._seamless_window*, %struct._seamless_window** %86, align 8, !dbg !5489
  store %struct._seamless_window* %87, %struct._seamless_window** %11, align 8, !dbg !5490
  br label %39, !dbg !5491, !llvm.loop !5492

; <label>:88:                                     ; preds = %39
  %89 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5494
  %90 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5496
  %91 = call i32 @XSetClipRectangles(%struct._XDisplay* %89, %struct._XGC* %90, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !5497
  br label %92, !dbg !5498

; <label>:92:                                     ; preds = %88, %36
  %93 = load i32, i32* @g_ownbackstore, align 4, !dbg !5499
  %94 = icmp ne i32 %93, 0, !dbg !5499
  br i1 %94, label %95, label %104, !dbg !5499

; <label>:95:                                     ; preds = %92
  %96 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5502
  %97 = load i64, i64* @g_backstore, align 8, !dbg !5504
  %98 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5505
  %99 = load i32, i32* %7, align 4, !dbg !5506
  %100 = load i32, i32* %8, align 4, !dbg !5507
  %101 = load i32, i32* %9, align 4, !dbg !5508
  %102 = load i32, i32* %10, align 4, !dbg !5509
  %103 = call i32 @XFillRectangle(%struct._XDisplay* %96, i64 %97, %struct._XGC* %98, i32 %99, i32 %100, i32 %101, i32 %102), !dbg !5510
  br label %104, !dbg !5510

; <label>:104:                                    ; preds = %95, %92
  %105 = load i8, i8* %6, align 1, !dbg !5511
  %106 = zext i8 %105 to i32, !dbg !5511
  %107 = icmp ne i32 %106, 12, !dbg !5514
  br i1 %107, label %108, label %112, !dbg !5515

; <label>:108:                                    ; preds = %104
  %109 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5516
  %110 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5518
  %111 = call i32 @XSetFunction(%struct._XDisplay* %109, %struct._XGC* %110, i32 3), !dbg !5519
  br label %112, !dbg !5519

; <label>:112:                                    ; preds = %108, %104
  ret void, !dbg !5520
}

declare i32 @XSetFunction(%struct._XDisplay*, %struct._XGC*, i32) #2

; Function Attrs: nounwind uwtable
define void @ui_patblt(i8 zeroext, i32, i32, i32, i32, %struct._BRUSH*, i32, i32) #0 !dbg !5521 {
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct._BRUSH*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i8, align 1
  %19 = alloca [8 x i8], align 1
  %20 = alloca %struct._seamless_window*, align 8
  %21 = alloca %struct.XRectangle, align 2
  store i8 %0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !5543, metadata !416), !dbg !5544
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5545, metadata !416), !dbg !5546
  store i32 %2, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5547, metadata !416), !dbg !5548
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5549, metadata !416), !dbg !5550
  store i32 %4, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5551, metadata !416), !dbg !5552
  store %struct._BRUSH* %5, %struct._BRUSH** %14, align 8
  call void @llvm.dbg.declare(metadata %struct._BRUSH** %14, metadata !5553, metadata !416), !dbg !5554
  store i32 %6, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !5555, metadata !416), !dbg !5556
  store i32 %7, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !5557, metadata !416), !dbg !5558
  call void @llvm.dbg.declare(metadata i64* %17, metadata !5559, metadata !416), !dbg !5560
  call void @llvm.dbg.declare(metadata i8* %18, metadata !5561, metadata !416), !dbg !5562
  call void @llvm.dbg.declare(metadata [8 x i8]* %19, metadata !5563, metadata !416), !dbg !5564
  %22 = load i8, i8* %9, align 1, !dbg !5565
  %23 = zext i8 %22 to i32, !dbg !5565
  %24 = icmp ne i32 %23, 12, !dbg !5568
  br i1 %24, label %25, label %33, !dbg !5569

; <label>:25:                                     ; preds = %8
  %26 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5570
  %27 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5572
  %28 = load i8, i8* %9, align 1, !dbg !5573
  %29 = zext i8 %28 to i64, !dbg !5574
  %30 = getelementptr inbounds [16 x i32], [16 x i32]* @rop2_map, i64 0, i64 %29, !dbg !5574
  %31 = load i32, i32* %30, align 4, !dbg !5574
  %32 = call i32 @XSetFunction(%struct._XDisplay* %26, %struct._XGC* %27, i32 %31), !dbg !5575
  br label %33, !dbg !5575

; <label>:33:                                     ; preds = %25, %8
  %34 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5576
  %35 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %34, i32 0, i32 2, !dbg !5577
  %36 = load i8, i8* %35, align 2, !dbg !5577
  %37 = zext i8 %36 to i32, !dbg !5576
  switch i32 %37, label %451 [
    i32 0, label %38
    i32 2, label %78
    i32 3, label %178
  ], !dbg !5578

; <label>:38:                                     ; preds = %33
  %39 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5579
  %40 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5581
  %41 = load i32, i32* @g_server_depth, align 4, !dbg !5582
  %42 = icmp ne i32 %41, 8, !dbg !5583
  br i1 %42, label %43, label %46, !dbg !5582

; <label>:43:                                     ; preds = %38
  %44 = load i32, i32* %16, align 4, !dbg !5584
  %45 = call i32 @translate_colour(i32 %44), !dbg !5586
  br label %59, !dbg !5587

; <label>:46:                                     ; preds = %38
  %47 = load i32, i32* @g_owncolmap, align 4, !dbg !5588
  %48 = icmp ne i32 %47, 0, !dbg !5588
  br i1 %48, label %49, label %51, !dbg !5588

; <label>:49:                                     ; preds = %46
  %50 = load i32, i32* %16, align 4, !dbg !5590
  br label %57, !dbg !5592

; <label>:51:                                     ; preds = %46
  %52 = load i32, i32* %16, align 4, !dbg !5593
  %53 = zext i32 %52 to i64, !dbg !5595
  %54 = load i32*, i32** @g_colmap, align 8, !dbg !5595
  %55 = getelementptr inbounds i32, i32* %54, i64 %53, !dbg !5595
  %56 = load i32, i32* %55, align 4, !dbg !5595
  br label %57, !dbg !5596

; <label>:57:                                     ; preds = %51, %49
  %58 = phi i32 [ %50, %49 ], [ %56, %51 ], !dbg !5597
  br label %59, !dbg !5599

; <label>:59:                                     ; preds = %57, %43
  %60 = phi i32 [ %45, %43 ], [ %58, %57 ], !dbg !5600
  %61 = zext i32 %60 to i64, !dbg !5602
  %62 = call i32 @XSetForeground(%struct._XDisplay* %39, %struct._XGC* %40, i64 %61), !dbg !5603
  %63 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5604
  %64 = load i32, i32* @g_ownbackstore, align 4, !dbg !5606
  %65 = icmp ne i32 %64, 0, !dbg !5606
  br i1 %65, label %66, label %68, !dbg !5606

; <label>:66:                                     ; preds = %59
  %67 = load i64, i64* @g_backstore, align 8, !dbg !5607
  br label %70, !dbg !5609

; <label>:68:                                     ; preds = %59
  %69 = load i64, i64* @g_wnd, align 8, !dbg !5610
  br label %70, !dbg !5612

; <label>:70:                                     ; preds = %68, %66
  %71 = phi i64 [ %67, %66 ], [ %69, %68 ], !dbg !5613
  %72 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5615
  %73 = load i32, i32* %10, align 4, !dbg !5616
  %74 = load i32, i32* %11, align 4, !dbg !5617
  %75 = load i32, i32* %12, align 4, !dbg !5618
  %76 = load i32, i32* %13, align 4, !dbg !5619
  %77 = call i32 @XFillRectangle(%struct._XDisplay* %63, i64 %71, %struct._XGC* %72, i32 %73, i32 %74, i32 %75, i32 %76), !dbg !5620
  br label %456, !dbg !5621

; <label>:78:                                     ; preds = %33
  %79 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5622
  %80 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %79, i32 0, i32 3, !dbg !5623
  %81 = getelementptr inbounds [8 x i8], [8 x i8]* %80, i64 0, i64 0, !dbg !5622
  %82 = load i8, i8* %81, align 1, !dbg !5622
  %83 = zext i8 %82 to i32, !dbg !5622
  %84 = mul nsw i32 %83, 8, !dbg !5624
  %85 = sext i32 %84 to i64, !dbg !5625
  %86 = getelementptr inbounds i8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @hatch_patterns, i32 0, i32 0), i64 %85, !dbg !5625
  %87 = call i8* @ui_create_glyph(i32 8, i32 8, i8* %86), !dbg !5626
  %88 = ptrtoint i8* %87 to i64, !dbg !5627
  store i64 %88, i64* %17, align 8, !dbg !5628
  %89 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5629
  %90 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5630
  %91 = load i32, i32* @g_server_depth, align 4, !dbg !5631
  %92 = icmp ne i32 %91, 8, !dbg !5632
  br i1 %92, label %93, label %96, !dbg !5631

; <label>:93:                                     ; preds = %78
  %94 = load i32, i32* %16, align 4, !dbg !5633
  %95 = call i32 @translate_colour(i32 %94), !dbg !5634
  br label %109, !dbg !5635

; <label>:96:                                     ; preds = %78
  %97 = load i32, i32* @g_owncolmap, align 4, !dbg !5636
  %98 = icmp ne i32 %97, 0, !dbg !5636
  br i1 %98, label %99, label %101, !dbg !5636

; <label>:99:                                     ; preds = %96
  %100 = load i32, i32* %16, align 4, !dbg !5637
  br label %107, !dbg !5638

; <label>:101:                                    ; preds = %96
  %102 = load i32, i32* %16, align 4, !dbg !5639
  %103 = zext i32 %102 to i64, !dbg !5640
  %104 = load i32*, i32** @g_colmap, align 8, !dbg !5640
  %105 = getelementptr inbounds i32, i32* %104, i64 %103, !dbg !5640
  %106 = load i32, i32* %105, align 4, !dbg !5640
  br label %107, !dbg !5641

; <label>:107:                                    ; preds = %101, %99
  %108 = phi i32 [ %100, %99 ], [ %106, %101 ], !dbg !5642
  br label %109, !dbg !5643

; <label>:109:                                    ; preds = %107, %93
  %110 = phi i32 [ %95, %93 ], [ %108, %107 ], !dbg !5644
  %111 = zext i32 %110 to i64, !dbg !5645
  %112 = call i32 @XSetForeground(%struct._XDisplay* %89, %struct._XGC* %90, i64 %111), !dbg !5646
  %113 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5647
  %114 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5648
  %115 = load i32, i32* @g_server_depth, align 4, !dbg !5649
  %116 = icmp ne i32 %115, 8, !dbg !5650
  br i1 %116, label %117, label %120, !dbg !5649

; <label>:117:                                    ; preds = %109
  %118 = load i32, i32* %15, align 4, !dbg !5651
  %119 = call i32 @translate_colour(i32 %118), !dbg !5652
  br label %133, !dbg !5653

; <label>:120:                                    ; preds = %109
  %121 = load i32, i32* @g_owncolmap, align 4, !dbg !5654
  %122 = icmp ne i32 %121, 0, !dbg !5654
  br i1 %122, label %123, label %125, !dbg !5654

; <label>:123:                                    ; preds = %120
  %124 = load i32, i32* %15, align 4, !dbg !5655
  br label %131, !dbg !5656

; <label>:125:                                    ; preds = %120
  %126 = load i32, i32* %15, align 4, !dbg !5657
  %127 = zext i32 %126 to i64, !dbg !5658
  %128 = load i32*, i32** @g_colmap, align 8, !dbg !5658
  %129 = getelementptr inbounds i32, i32* %128, i64 %127, !dbg !5658
  %130 = load i32, i32* %129, align 4, !dbg !5658
  br label %131, !dbg !5659

; <label>:131:                                    ; preds = %125, %123
  %132 = phi i32 [ %124, %123 ], [ %130, %125 ], !dbg !5660
  br label %133, !dbg !5661

; <label>:133:                                    ; preds = %131, %117
  %134 = phi i32 [ %119, %117 ], [ %132, %131 ], !dbg !5662
  %135 = zext i32 %134 to i64, !dbg !5663
  %136 = call i32 @XSetBackground(%struct._XDisplay* %113, %struct._XGC* %114, i64 %135), !dbg !5664
  %137 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5665
  %138 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5666
  %139 = call i32 @XSetFillStyle(%struct._XDisplay* %137, %struct._XGC* %138, i32 3), !dbg !5667
  %140 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5668
  %141 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5669
  %142 = load i64, i64* %17, align 8, !dbg !5670
  %143 = call i32 @XSetStipple(%struct._XDisplay* %140, %struct._XGC* %141, i64 %142), !dbg !5671
  %144 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5672
  %145 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5673
  %146 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5674
  %147 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %146, i32 0, i32 0, !dbg !5675
  %148 = load i8, i8* %147, align 8, !dbg !5675
  %149 = zext i8 %148 to i32, !dbg !5674
  %150 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5676
  %151 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %150, i32 0, i32 1, !dbg !5677
  %152 = load i8, i8* %151, align 1, !dbg !5677
  %153 = zext i8 %152 to i32, !dbg !5676
  %154 = call i32 @XSetTSOrigin(%struct._XDisplay* %144, %struct._XGC* %145, i32 %149, i32 %153), !dbg !5678
  %155 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5679
  %156 = load i32, i32* @g_ownbackstore, align 4, !dbg !5681
  %157 = icmp ne i32 %156, 0, !dbg !5681
  br i1 %157, label %158, label %160, !dbg !5681

; <label>:158:                                    ; preds = %133
  %159 = load i64, i64* @g_backstore, align 8, !dbg !5682
  br label %162, !dbg !5684

; <label>:160:                                    ; preds = %133
  %161 = load i64, i64* @g_wnd, align 8, !dbg !5685
  br label %162, !dbg !5687

; <label>:162:                                    ; preds = %160, %158
  %163 = phi i64 [ %159, %158 ], [ %161, %160 ], !dbg !5688
  %164 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5690
  %165 = load i32, i32* %10, align 4, !dbg !5691
  %166 = load i32, i32* %11, align 4, !dbg !5692
  %167 = load i32, i32* %12, align 4, !dbg !5693
  %168 = load i32, i32* %13, align 4, !dbg !5694
  %169 = call i32 @XFillRectangle(%struct._XDisplay* %155, i64 %163, %struct._XGC* %164, i32 %165, i32 %166, i32 %167, i32 %168), !dbg !5695
  %170 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5696
  %171 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5697
  %172 = call i32 @XSetFillStyle(%struct._XDisplay* %170, %struct._XGC* %171, i32 0), !dbg !5698
  %173 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5699
  %174 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5700
  %175 = call i32 @XSetTSOrigin(%struct._XDisplay* %173, %struct._XGC* %174, i32 0, i32 0), !dbg !5701
  %176 = load i64, i64* %17, align 8, !dbg !5702
  %177 = inttoptr i64 %176 to i8*, !dbg !5703
  call void @ui_destroy_glyph(i8* %177), !dbg !5704
  br label %456, !dbg !5705

; <label>:178:                                    ; preds = %33
  %179 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5706
  %180 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %179, i32 0, i32 4, !dbg !5708
  %181 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %180, align 8, !dbg !5708
  %182 = icmp eq %struct._BRUSHDATA* %181, null, !dbg !5709
  br i1 %182, label %183, label %296, !dbg !5710

; <label>:183:                                    ; preds = %178
  store i8 0, i8* %18, align 1, !dbg !5711
  br label %184, !dbg !5714

; <label>:184:                                    ; preds = %200, %183
  %185 = load i8, i8* %18, align 1, !dbg !5715
  %186 = zext i8 %185 to i32, !dbg !5715
  %187 = icmp ne i32 %186, 8, !dbg !5718
  br i1 %187, label %188, label %203, !dbg !5719

; <label>:188:                                    ; preds = %184
  %189 = load i8, i8* %18, align 1, !dbg !5720
  %190 = zext i8 %189 to i64, !dbg !5721
  %191 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5721
  %192 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %191, i32 0, i32 3, !dbg !5722
  %193 = getelementptr inbounds [8 x i8], [8 x i8]* %192, i64 0, i64 %190, !dbg !5721
  %194 = load i8, i8* %193, align 1, !dbg !5721
  %195 = load i8, i8* %18, align 1, !dbg !5723
  %196 = zext i8 %195 to i32, !dbg !5723
  %197 = sub nsw i32 7, %196, !dbg !5724
  %198 = sext i32 %197 to i64, !dbg !5725
  %199 = getelementptr inbounds [8 x i8], [8 x i8]* %19, i64 0, i64 %198, !dbg !5725
  store i8 %194, i8* %199, align 1, !dbg !5726
  br label %200, !dbg !5725

; <label>:200:                                    ; preds = %188
  %201 = load i8, i8* %18, align 1, !dbg !5727
  %202 = add i8 %201, 1, !dbg !5727
  store i8 %202, i8* %18, align 1, !dbg !5727
  br label %184, !dbg !5729, !llvm.loop !5730

; <label>:203:                                    ; preds = %184
  %204 = getelementptr inbounds [8 x i8], [8 x i8]* %19, i32 0, i32 0, !dbg !5732
  %205 = call i8* @ui_create_glyph(i32 8, i32 8, i8* %204), !dbg !5733
  %206 = ptrtoint i8* %205 to i64, !dbg !5734
  store i64 %206, i64* %17, align 8, !dbg !5735
  %207 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5736
  %208 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5737
  %209 = load i32, i32* @g_server_depth, align 4, !dbg !5738
  %210 = icmp ne i32 %209, 8, !dbg !5739
  br i1 %210, label %211, label %214, !dbg !5738

; <label>:211:                                    ; preds = %203
  %212 = load i32, i32* %15, align 4, !dbg !5740
  %213 = call i32 @translate_colour(i32 %212), !dbg !5742
  br label %227, !dbg !5743

; <label>:214:                                    ; preds = %203
  %215 = load i32, i32* @g_owncolmap, align 4, !dbg !5744
  %216 = icmp ne i32 %215, 0, !dbg !5744
  br i1 %216, label %217, label %219, !dbg !5744

; <label>:217:                                    ; preds = %214
  %218 = load i32, i32* %15, align 4, !dbg !5746
  br label %225, !dbg !5748

; <label>:219:                                    ; preds = %214
  %220 = load i32, i32* %15, align 4, !dbg !5749
  %221 = zext i32 %220 to i64, !dbg !5751
  %222 = load i32*, i32** @g_colmap, align 8, !dbg !5751
  %223 = getelementptr inbounds i32, i32* %222, i64 %221, !dbg !5751
  %224 = load i32, i32* %223, align 4, !dbg !5751
  br label %225, !dbg !5752

; <label>:225:                                    ; preds = %219, %217
  %226 = phi i32 [ %218, %217 ], [ %224, %219 ], !dbg !5753
  br label %227, !dbg !5755

; <label>:227:                                    ; preds = %225, %211
  %228 = phi i32 [ %213, %211 ], [ %226, %225 ], !dbg !5756
  %229 = zext i32 %228 to i64, !dbg !5758
  %230 = call i32 @XSetForeground(%struct._XDisplay* %207, %struct._XGC* %208, i64 %229), !dbg !5759
  %231 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5760
  %232 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5761
  %233 = load i32, i32* @g_server_depth, align 4, !dbg !5762
  %234 = icmp ne i32 %233, 8, !dbg !5763
  br i1 %234, label %235, label %238, !dbg !5762

; <label>:235:                                    ; preds = %227
  %236 = load i32, i32* %16, align 4, !dbg !5764
  %237 = call i32 @translate_colour(i32 %236), !dbg !5765
  br label %251, !dbg !5766

; <label>:238:                                    ; preds = %227
  %239 = load i32, i32* @g_owncolmap, align 4, !dbg !5767
  %240 = icmp ne i32 %239, 0, !dbg !5767
  br i1 %240, label %241, label %243, !dbg !5767

; <label>:241:                                    ; preds = %238
  %242 = load i32, i32* %16, align 4, !dbg !5768
  br label %249, !dbg !5769

; <label>:243:                                    ; preds = %238
  %244 = load i32, i32* %16, align 4, !dbg !5770
  %245 = zext i32 %244 to i64, !dbg !5771
  %246 = load i32*, i32** @g_colmap, align 8, !dbg !5771
  %247 = getelementptr inbounds i32, i32* %246, i64 %245, !dbg !5771
  %248 = load i32, i32* %247, align 4, !dbg !5771
  br label %249, !dbg !5772

; <label>:249:                                    ; preds = %243, %241
  %250 = phi i32 [ %242, %241 ], [ %248, %243 ], !dbg !5773
  br label %251, !dbg !5774

; <label>:251:                                    ; preds = %249, %235
  %252 = phi i32 [ %237, %235 ], [ %250, %249 ], !dbg !5775
  %253 = zext i32 %252 to i64, !dbg !5776
  %254 = call i32 @XSetBackground(%struct._XDisplay* %231, %struct._XGC* %232, i64 %253), !dbg !5777
  %255 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5778
  %256 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5779
  %257 = call i32 @XSetFillStyle(%struct._XDisplay* %255, %struct._XGC* %256, i32 3), !dbg !5780
  %258 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5781
  %259 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5782
  %260 = load i64, i64* %17, align 8, !dbg !5783
  %261 = call i32 @XSetStipple(%struct._XDisplay* %258, %struct._XGC* %259, i64 %260), !dbg !5784
  %262 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5785
  %263 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5786
  %264 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5787
  %265 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %264, i32 0, i32 0, !dbg !5788
  %266 = load i8, i8* %265, align 8, !dbg !5788
  %267 = zext i8 %266 to i32, !dbg !5787
  %268 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5789
  %269 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %268, i32 0, i32 1, !dbg !5790
  %270 = load i8, i8* %269, align 1, !dbg !5790
  %271 = zext i8 %270 to i32, !dbg !5789
  %272 = call i32 @XSetTSOrigin(%struct._XDisplay* %262, %struct._XGC* %263, i32 %267, i32 %271), !dbg !5791
  %273 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5792
  %274 = load i32, i32* @g_ownbackstore, align 4, !dbg !5794
  %275 = icmp ne i32 %274, 0, !dbg !5794
  br i1 %275, label %276, label %278, !dbg !5794

; <label>:276:                                    ; preds = %251
  %277 = load i64, i64* @g_backstore, align 8, !dbg !5795
  br label %280, !dbg !5797

; <label>:278:                                    ; preds = %251
  %279 = load i64, i64* @g_wnd, align 8, !dbg !5798
  br label %280, !dbg !5800

; <label>:280:                                    ; preds = %278, %276
  %281 = phi i64 [ %277, %276 ], [ %279, %278 ], !dbg !5801
  %282 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5803
  %283 = load i32, i32* %10, align 4, !dbg !5804
  %284 = load i32, i32* %11, align 4, !dbg !5805
  %285 = load i32, i32* %12, align 4, !dbg !5806
  %286 = load i32, i32* %13, align 4, !dbg !5807
  %287 = call i32 @XFillRectangle(%struct._XDisplay* %273, i64 %281, %struct._XGC* %282, i32 %283, i32 %284, i32 %285, i32 %286), !dbg !5808
  %288 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5809
  %289 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5810
  %290 = call i32 @XSetFillStyle(%struct._XDisplay* %288, %struct._XGC* %289, i32 0), !dbg !5811
  %291 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5812
  %292 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5813
  %293 = call i32 @XSetTSOrigin(%struct._XDisplay* %291, %struct._XGC* %292, i32 0, i32 0), !dbg !5814
  %294 = load i64, i64* %17, align 8, !dbg !5815
  %295 = inttoptr i64 %294 to i8*, !dbg !5816
  call void @ui_destroy_glyph(i8* %295), !dbg !5817
  br label %450, !dbg !5818

; <label>:296:                                    ; preds = %178
  %297 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5819
  %298 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %297, i32 0, i32 4, !dbg !5821
  %299 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %298, align 8, !dbg !5821
  %300 = getelementptr inbounds %struct._BRUSHDATA, %struct._BRUSHDATA* %299, i32 0, i32 0, !dbg !5822
  %301 = load i32, i32* %300, align 8, !dbg !5822
  %302 = icmp ugt i32 %301, 1, !dbg !5823
  br i1 %302, label %303, label %352, !dbg !5824

; <label>:303:                                    ; preds = %296
  %304 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5825
  %305 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %304, i32 0, i32 4, !dbg !5827
  %306 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %305, align 8, !dbg !5827
  %307 = getelementptr inbounds %struct._BRUSHDATA, %struct._BRUSHDATA* %306, i32 0, i32 2, !dbg !5828
  %308 = load i8*, i8** %307, align 8, !dbg !5828
  %309 = call i8* @ui_create_bitmap(i32 8, i32 8, i8* %308), !dbg !5829
  %310 = ptrtoint i8* %309 to i64, !dbg !5830
  store i64 %310, i64* %17, align 8, !dbg !5831
  %311 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5832
  %312 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5833
  %313 = call i32 @XSetFillStyle(%struct._XDisplay* %311, %struct._XGC* %312, i32 1), !dbg !5834
  %314 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5835
  %315 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5836
  %316 = load i64, i64* %17, align 8, !dbg !5837
  %317 = call i32 @XSetTile(%struct._XDisplay* %314, %struct._XGC* %315, i64 %316), !dbg !5838
  %318 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5839
  %319 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5840
  %320 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5841
  %321 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %320, i32 0, i32 0, !dbg !5842
  %322 = load i8, i8* %321, align 8, !dbg !5842
  %323 = zext i8 %322 to i32, !dbg !5841
  %324 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5843
  %325 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %324, i32 0, i32 1, !dbg !5844
  %326 = load i8, i8* %325, align 1, !dbg !5844
  %327 = zext i8 %326 to i32, !dbg !5843
  %328 = call i32 @XSetTSOrigin(%struct._XDisplay* %318, %struct._XGC* %319, i32 %323, i32 %327), !dbg !5845
  %329 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5846
  %330 = load i32, i32* @g_ownbackstore, align 4, !dbg !5848
  %331 = icmp ne i32 %330, 0, !dbg !5848
  br i1 %331, label %332, label %334, !dbg !5848

; <label>:332:                                    ; preds = %303
  %333 = load i64, i64* @g_backstore, align 8, !dbg !5849
  br label %336, !dbg !5851

; <label>:334:                                    ; preds = %303
  %335 = load i64, i64* @g_wnd, align 8, !dbg !5852
  br label %336, !dbg !5854

; <label>:336:                                    ; preds = %334, %332
  %337 = phi i64 [ %333, %332 ], [ %335, %334 ], !dbg !5855
  %338 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5857
  %339 = load i32, i32* %10, align 4, !dbg !5858
  %340 = load i32, i32* %11, align 4, !dbg !5859
  %341 = load i32, i32* %12, align 4, !dbg !5860
  %342 = load i32, i32* %13, align 4, !dbg !5861
  %343 = call i32 @XFillRectangle(%struct._XDisplay* %329, i64 %337, %struct._XGC* %338, i32 %339, i32 %340, i32 %341, i32 %342), !dbg !5862
  %344 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5863
  %345 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5864
  %346 = call i32 @XSetFillStyle(%struct._XDisplay* %344, %struct._XGC* %345, i32 0), !dbg !5865
  %347 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5866
  %348 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5867
  %349 = call i32 @XSetTSOrigin(%struct._XDisplay* %347, %struct._XGC* %348, i32 0, i32 0), !dbg !5868
  %350 = load i64, i64* %17, align 8, !dbg !5869
  %351 = inttoptr i64 %350 to i8*, !dbg !5870
  call void @ui_destroy_bitmap(i8* %351), !dbg !5871
  br label %449, !dbg !5872

; <label>:352:                                    ; preds = %296
  %353 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5873
  %354 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %353, i32 0, i32 4, !dbg !5875
  %355 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %354, align 8, !dbg !5875
  %356 = getelementptr inbounds %struct._BRUSHDATA, %struct._BRUSHDATA* %355, i32 0, i32 2, !dbg !5876
  %357 = load i8*, i8** %356, align 8, !dbg !5876
  %358 = call i8* @ui_create_glyph(i32 8, i32 8, i8* %357), !dbg !5877
  %359 = ptrtoint i8* %358 to i64, !dbg !5878
  store i64 %359, i64* %17, align 8, !dbg !5879
  %360 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5880
  %361 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5881
  %362 = load i32, i32* @g_server_depth, align 4, !dbg !5882
  %363 = icmp ne i32 %362, 8, !dbg !5883
  br i1 %363, label %364, label %367, !dbg !5882

; <label>:364:                                    ; preds = %352
  %365 = load i32, i32* %15, align 4, !dbg !5884
  %366 = call i32 @translate_colour(i32 %365), !dbg !5886
  br label %380, !dbg !5887

; <label>:367:                                    ; preds = %352
  %368 = load i32, i32* @g_owncolmap, align 4, !dbg !5888
  %369 = icmp ne i32 %368, 0, !dbg !5888
  br i1 %369, label %370, label %372, !dbg !5888

; <label>:370:                                    ; preds = %367
  %371 = load i32, i32* %15, align 4, !dbg !5890
  br label %378, !dbg !5892

; <label>:372:                                    ; preds = %367
  %373 = load i32, i32* %15, align 4, !dbg !5893
  %374 = zext i32 %373 to i64, !dbg !5895
  %375 = load i32*, i32** @g_colmap, align 8, !dbg !5895
  %376 = getelementptr inbounds i32, i32* %375, i64 %374, !dbg !5895
  %377 = load i32, i32* %376, align 4, !dbg !5895
  br label %378, !dbg !5896

; <label>:378:                                    ; preds = %372, %370
  %379 = phi i32 [ %371, %370 ], [ %377, %372 ], !dbg !5897
  br label %380, !dbg !5899

; <label>:380:                                    ; preds = %378, %364
  %381 = phi i32 [ %366, %364 ], [ %379, %378 ], !dbg !5900
  %382 = zext i32 %381 to i64, !dbg !5902
  %383 = call i32 @XSetForeground(%struct._XDisplay* %360, %struct._XGC* %361, i64 %382), !dbg !5903
  %384 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5904
  %385 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5905
  %386 = load i32, i32* @g_server_depth, align 4, !dbg !5906
  %387 = icmp ne i32 %386, 8, !dbg !5907
  br i1 %387, label %388, label %391, !dbg !5906

; <label>:388:                                    ; preds = %380
  %389 = load i32, i32* %16, align 4, !dbg !5908
  %390 = call i32 @translate_colour(i32 %389), !dbg !5909
  br label %404, !dbg !5910

; <label>:391:                                    ; preds = %380
  %392 = load i32, i32* @g_owncolmap, align 4, !dbg !5911
  %393 = icmp ne i32 %392, 0, !dbg !5911
  br i1 %393, label %394, label %396, !dbg !5911

; <label>:394:                                    ; preds = %391
  %395 = load i32, i32* %16, align 4, !dbg !5912
  br label %402, !dbg !5913

; <label>:396:                                    ; preds = %391
  %397 = load i32, i32* %16, align 4, !dbg !5914
  %398 = zext i32 %397 to i64, !dbg !5915
  %399 = load i32*, i32** @g_colmap, align 8, !dbg !5915
  %400 = getelementptr inbounds i32, i32* %399, i64 %398, !dbg !5915
  %401 = load i32, i32* %400, align 4, !dbg !5915
  br label %402, !dbg !5916

; <label>:402:                                    ; preds = %396, %394
  %403 = phi i32 [ %395, %394 ], [ %401, %396 ], !dbg !5917
  br label %404, !dbg !5918

; <label>:404:                                    ; preds = %402, %388
  %405 = phi i32 [ %390, %388 ], [ %403, %402 ], !dbg !5919
  %406 = zext i32 %405 to i64, !dbg !5920
  %407 = call i32 @XSetBackground(%struct._XDisplay* %384, %struct._XGC* %385, i64 %406), !dbg !5921
  %408 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5922
  %409 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5923
  %410 = call i32 @XSetFillStyle(%struct._XDisplay* %408, %struct._XGC* %409, i32 3), !dbg !5924
  %411 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5925
  %412 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5926
  %413 = load i64, i64* %17, align 8, !dbg !5927
  %414 = call i32 @XSetStipple(%struct._XDisplay* %411, %struct._XGC* %412, i64 %413), !dbg !5928
  %415 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5929
  %416 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5930
  %417 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5931
  %418 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %417, i32 0, i32 0, !dbg !5932
  %419 = load i8, i8* %418, align 8, !dbg !5932
  %420 = zext i8 %419 to i32, !dbg !5931
  %421 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5933
  %422 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %421, i32 0, i32 1, !dbg !5934
  %423 = load i8, i8* %422, align 1, !dbg !5934
  %424 = zext i8 %423 to i32, !dbg !5933
  %425 = call i32 @XSetTSOrigin(%struct._XDisplay* %415, %struct._XGC* %416, i32 %420, i32 %424), !dbg !5935
  %426 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5936
  %427 = load i32, i32* @g_ownbackstore, align 4, !dbg !5938
  %428 = icmp ne i32 %427, 0, !dbg !5938
  br i1 %428, label %429, label %431, !dbg !5938

; <label>:429:                                    ; preds = %404
  %430 = load i64, i64* @g_backstore, align 8, !dbg !5939
  br label %433, !dbg !5941

; <label>:431:                                    ; preds = %404
  %432 = load i64, i64* @g_wnd, align 8, !dbg !5942
  br label %433, !dbg !5944

; <label>:433:                                    ; preds = %431, %429
  %434 = phi i64 [ %430, %429 ], [ %432, %431 ], !dbg !5945
  %435 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5947
  %436 = load i32, i32* %10, align 4, !dbg !5948
  %437 = load i32, i32* %11, align 4, !dbg !5949
  %438 = load i32, i32* %12, align 4, !dbg !5950
  %439 = load i32, i32* %13, align 4, !dbg !5951
  %440 = call i32 @XFillRectangle(%struct._XDisplay* %426, i64 %434, %struct._XGC* %435, i32 %436, i32 %437, i32 %438, i32 %439), !dbg !5952
  %441 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5953
  %442 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5954
  %443 = call i32 @XSetFillStyle(%struct._XDisplay* %441, %struct._XGC* %442, i32 0), !dbg !5955
  %444 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5956
  %445 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5957
  %446 = call i32 @XSetTSOrigin(%struct._XDisplay* %444, %struct._XGC* %445, i32 0, i32 0), !dbg !5958
  %447 = load i64, i64* %17, align 8, !dbg !5959
  %448 = inttoptr i64 %447 to i8*, !dbg !5960
  call void @ui_destroy_glyph(i8* %448), !dbg !5961
  br label %449

; <label>:449:                                    ; preds = %433, %336
  br label %450

; <label>:450:                                    ; preds = %449, %280
  br label %456, !dbg !5962

; <label>:451:                                    ; preds = %33
  %452 = load %struct._BRUSH*, %struct._BRUSH** %14, align 8, !dbg !5963
  %453 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %452, i32 0, i32 2, !dbg !5964
  %454 = load i8, i8* %453, align 2, !dbg !5964
  %455 = zext i8 %454 to i32, !dbg !5963
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.22, i32 0, i32 0), i32 %455), !dbg !5965
  br label %456, !dbg !5966

; <label>:456:                                    ; preds = %451, %450, %162, %70
  %457 = load i8, i8* %9, align 1, !dbg !5967
  %458 = zext i8 %457 to i32, !dbg !5967
  %459 = icmp ne i32 %458, 12, !dbg !5970
  br i1 %459, label %460, label %464, !dbg !5971

; <label>:460:                                    ; preds = %456
  %461 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5972
  %462 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5974
  %463 = call i32 @XSetFunction(%struct._XDisplay* %461, %struct._XGC* %462, i32 3), !dbg !5975
  br label %464, !dbg !5975

; <label>:464:                                    ; preds = %460, %456
  %465 = load i32, i32* @g_ownbackstore, align 4, !dbg !5976
  %466 = icmp ne i32 %465, 0, !dbg !5976
  br i1 %466, label %467, label %479, !dbg !5978

; <label>:467:                                    ; preds = %464
  %468 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !5979
  %469 = load i64, i64* @g_backstore, align 8, !dbg !5980
  %470 = load i64, i64* @g_wnd, align 8, !dbg !5981
  %471 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !5982
  %472 = load i32, i32* %10, align 4, !dbg !5983
  %473 = load i32, i32* %11, align 4, !dbg !5984
  %474 = load i32, i32* %12, align 4, !dbg !5985
  %475 = load i32, i32* %13, align 4, !dbg !5986
  %476 = load i32, i32* %10, align 4, !dbg !5987
  %477 = load i32, i32* %11, align 4, !dbg !5988
  %478 = call i32 @XCopyArea(%struct._XDisplay* %468, i64 %469, i64 %470, %struct._XGC* %471, i32 %472, i32 %473, i32 %474, i32 %475, i32 %476, i32 %477), !dbg !5989
  br label %479, !dbg !5989

; <label>:479:                                    ; preds = %467, %464
  br label %480, !dbg !5990, !llvm.loop !5991

; <label>:480:                                    ; preds = %479
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %20, metadata !5992, metadata !416), !dbg !5994
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %21, metadata !5995, metadata !416), !dbg !5996
  %481 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !5997
  %482 = icmp ne %struct._seamless_window* %481, null, !dbg !5997
  br i1 %482, label %484, label %483, !dbg !6000

; <label>:483:                                    ; preds = %480
  br label %549, !dbg !6001

; <label>:484:                                    ; preds = %480
  %485 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !6003
  store %struct._seamless_window* %485, %struct._seamless_window** %20, align 8, !dbg !6006
  br label %486, !dbg !6007

; <label>:486:                                    ; preds = %541, %484
  %487 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !6008
  %488 = icmp ne %struct._seamless_window* %487, null, !dbg !6011
  br i1 %488, label %489, label %545, !dbg !6011

; <label>:489:                                    ; preds = %486
  %490 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !6012
  %491 = sext i16 %490 to i32, !dbg !6015
  %492 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !6016
  %493 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %492, i32 0, i32 4, !dbg !6017
  %494 = load i32, i32* %493, align 8, !dbg !6017
  %495 = sub nsw i32 %491, %494, !dbg !6018
  %496 = trunc i32 %495 to i16, !dbg !6015
  %497 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %21, i32 0, i32 0, !dbg !6019
  store i16 %496, i16* %497, align 2, !dbg !6020
  %498 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !6021
  %499 = sext i16 %498 to i32, !dbg !6022
  %500 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !6023
  %501 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %500, i32 0, i32 5, !dbg !6024
  %502 = load i32, i32* %501, align 4, !dbg !6024
  %503 = sub nsw i32 %499, %502, !dbg !6025
  %504 = trunc i32 %503 to i16, !dbg !6022
  %505 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %21, i32 0, i32 1, !dbg !6026
  store i16 %504, i16* %505, align 2, !dbg !6027
  %506 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !6028
  %507 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %21, i32 0, i32 2, !dbg !6029
  store i16 %506, i16* %507, align 2, !dbg !6030
  %508 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !6031
  %509 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %21, i32 0, i32 3, !dbg !6032
  store i16 %508, i16* %509, align 2, !dbg !6033
  %510 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6034
  %511 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6035
  %512 = call i32 @XSetClipRectangles(%struct._XDisplay* %510, %struct._XGC* %511, i32 0, i32 0, %struct.XRectangle* %21, i32 1, i32 3), !dbg !6036
  %513 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6037
  %514 = load i32, i32* @g_ownbackstore, align 4, !dbg !6038
  %515 = icmp ne i32 %514, 0, !dbg !6038
  br i1 %515, label %516, label %518, !dbg !6038

; <label>:516:                                    ; preds = %489
  %517 = load i64, i64* @g_backstore, align 8, !dbg !6039
  br label %520, !dbg !6041

; <label>:518:                                    ; preds = %489
  %519 = load i64, i64* @g_wnd, align 8, !dbg !6042
  br label %520, !dbg !6044

; <label>:520:                                    ; preds = %518, %516
  %521 = phi i64 [ %517, %516 ], [ %519, %518 ], !dbg !6045
  %522 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !6047
  %523 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %522, i32 0, i32 0, !dbg !6048
  %524 = load i64, i64* %523, align 8, !dbg !6048
  %525 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6049
  %526 = load i32, i32* %10, align 4, !dbg !6050
  %527 = load i32, i32* %11, align 4, !dbg !6051
  %528 = load i32, i32* %12, align 4, !dbg !6052
  %529 = load i32, i32* %13, align 4, !dbg !6053
  %530 = load i32, i32* %10, align 4, !dbg !6054
  %531 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !6055
  %532 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %531, i32 0, i32 4, !dbg !6056
  %533 = load i32, i32* %532, align 8, !dbg !6056
  %534 = sub nsw i32 %530, %533, !dbg !6057
  %535 = load i32, i32* %11, align 4, !dbg !6058
  %536 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !6059
  %537 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %536, i32 0, i32 5, !dbg !6060
  %538 = load i32, i32* %537, align 4, !dbg !6060
  %539 = sub nsw i32 %535, %538, !dbg !6061
  %540 = call i32 @XCopyArea(%struct._XDisplay* %513, i64 %521, i64 %524, %struct._XGC* %525, i32 %526, i32 %527, i32 %528, i32 %529, i32 %534, i32 %539), !dbg !6062
  br label %541, !dbg !6063

; <label>:541:                                    ; preds = %520
  %542 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !6064
  %543 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %542, i32 0, i32 20, !dbg !6066
  %544 = load %struct._seamless_window*, %struct._seamless_window** %543, align 8, !dbg !6066
  store %struct._seamless_window* %544, %struct._seamless_window** %20, align 8, !dbg !6067
  br label %486, !dbg !6068, !llvm.loop !6069

; <label>:545:                                    ; preds = %486
  %546 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6071
  %547 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6073
  %548 = call i32 @XSetClipRectangles(%struct._XDisplay* %546, %struct._XGC* %547, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !6074
  br label %549, !dbg !6075

; <label>:549:                                    ; preds = %545, %483
  ret void, !dbg !6076
}

; Function Attrs: nounwind uwtable
define internal i32 @translate_colour(i32) #0 !dbg !6077 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.PixelColour, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6080, metadata !416), !dbg !6081
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %3, metadata !6082, metadata !416), !dbg !6083
  %4 = load i32, i32* @g_server_depth, align 4, !dbg !6084
  switch i32 %4, label %67 [
    i32 15, label %5
    i32 16, label %30
    i32 24, label %55
    i32 32, label %55
  ], !dbg !6085

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !6086
  %7 = lshr i32 %6, 7, !dbg !6089
  %8 = and i32 %7, 248, !dbg !6090
  %9 = load i32, i32* %2, align 4, !dbg !6091
  %10 = lshr i32 %9, 12, !dbg !6092
  %11 = and i32 %10, 7, !dbg !6093
  %12 = or i32 %8, %11, !dbg !6094
  %13 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 0, !dbg !6095
  store i32 %12, i32* %13, align 4, !dbg !6096
  %14 = load i32, i32* %2, align 4, !dbg !6097
  %15 = lshr i32 %14, 2, !dbg !6098
  %16 = and i32 %15, 248, !dbg !6099
  %17 = load i32, i32* %2, align 4, !dbg !6100
  %18 = lshr i32 %17, 8, !dbg !6101
  %19 = and i32 %18, 7, !dbg !6102
  %20 = or i32 %16, %19, !dbg !6103
  %21 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 1, !dbg !6104
  store i32 %20, i32* %21, align 4, !dbg !6105
  %22 = load i32, i32* %2, align 4, !dbg !6106
  %23 = shl i32 %22, 3, !dbg !6107
  %24 = and i32 %23, 248, !dbg !6108
  %25 = load i32, i32* %2, align 4, !dbg !6109
  %26 = lshr i32 %25, 2, !dbg !6110
  %27 = and i32 %26, 7, !dbg !6111
  %28 = or i32 %24, %27, !dbg !6112
  %29 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 2, !dbg !6113
  store i32 %28, i32* %29, align 4, !dbg !6114
  br label %71, !dbg !6115

; <label>:30:                                     ; preds = %1
  %31 = load i32, i32* %2, align 4, !dbg !6116
  %32 = lshr i32 %31, 8, !dbg !6118
  %33 = and i32 %32, 248, !dbg !6119
  %34 = load i32, i32* %2, align 4, !dbg !6120
  %35 = lshr i32 %34, 13, !dbg !6121
  %36 = and i32 %35, 7, !dbg !6122
  %37 = or i32 %33, %36, !dbg !6123
  %38 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 0, !dbg !6124
  store i32 %37, i32* %38, align 4, !dbg !6125
  %39 = load i32, i32* %2, align 4, !dbg !6126
  %40 = lshr i32 %39, 3, !dbg !6127
  %41 = and i32 %40, 252, !dbg !6128
  %42 = load i32, i32* %2, align 4, !dbg !6129
  %43 = lshr i32 %42, 9, !dbg !6130
  %44 = and i32 %43, 3, !dbg !6131
  %45 = or i32 %41, %44, !dbg !6132
  %46 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 1, !dbg !6133
  store i32 %45, i32* %46, align 4, !dbg !6134
  %47 = load i32, i32* %2, align 4, !dbg !6135
  %48 = shl i32 %47, 3, !dbg !6136
  %49 = and i32 %48, 248, !dbg !6137
  %50 = load i32, i32* %2, align 4, !dbg !6138
  %51 = lshr i32 %50, 2, !dbg !6139
  %52 = and i32 %51, 7, !dbg !6140
  %53 = or i32 %49, %52, !dbg !6141
  %54 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 2, !dbg !6142
  store i32 %53, i32* %54, align 4, !dbg !6143
  br label %71, !dbg !6144

; <label>:55:                                     ; preds = %1, %1
  %56 = load i32, i32* %2, align 4, !dbg !6145
  %57 = and i32 %56, 16711680, !dbg !6147
  %58 = lshr i32 %57, 16, !dbg !6148
  %59 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 2, !dbg !6149
  store i32 %58, i32* %59, align 4, !dbg !6150
  %60 = load i32, i32* %2, align 4, !dbg !6151
  %61 = and i32 %60, 65280, !dbg !6152
  %62 = lshr i32 %61, 8, !dbg !6153
  %63 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 1, !dbg !6154
  store i32 %62, i32* %63, align 4, !dbg !6155
  %64 = load i32, i32* %2, align 4, !dbg !6156
  %65 = and i32 %64, 255, !dbg !6157
  %66 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 0, !dbg !6158
  store i32 %65, i32* %66, align 4, !dbg !6159
  br label %71, !dbg !6160

; <label>:67:                                     ; preds = %1
  %68 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 0, !dbg !6161
  store i32 0, i32* %68, align 4, !dbg !6162
  %69 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 1, !dbg !6163
  store i32 0, i32* %69, align 4, !dbg !6164
  %70 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 2, !dbg !6165
  store i32 0, i32* %70, align 4, !dbg !6166
  br label %71, !dbg !6167

; <label>:71:                                     ; preds = %67, %55, %30, %5
  %72 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 0, !dbg !6168
  %73 = load i32, i32* %72, align 4, !dbg !6168
  %74 = load i32, i32* @g_red_shift_r, align 4, !dbg !6169
  %75 = lshr i32 %73, %74, !dbg !6170
  %76 = load i32, i32* @g_red_shift_l, align 4, !dbg !6171
  %77 = shl i32 %75, %76, !dbg !6172
  %78 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 1, !dbg !6173
  %79 = load i32, i32* %78, align 4, !dbg !6173
  %80 = load i32, i32* @g_green_shift_r, align 4, !dbg !6174
  %81 = lshr i32 %79, %80, !dbg !6175
  %82 = load i32, i32* @g_green_shift_l, align 4, !dbg !6176
  %83 = shl i32 %81, %82, !dbg !6177
  %84 = or i32 %77, %83, !dbg !6178
  %85 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %3, i32 0, i32 2, !dbg !6179
  %86 = load i32, i32* %85, align 4, !dbg !6179
  %87 = load i32, i32* @g_blue_shift_r, align 4, !dbg !6180
  %88 = lshr i32 %86, %87, !dbg !6181
  %89 = load i32, i32* @g_blue_shift_l, align 4, !dbg !6182
  %90 = shl i32 %88, %89, !dbg !6183
  %91 = or i32 %84, %90, !dbg !6184
  ret i32 %91, !dbg !6185
}

declare i32 @XSetBackground(%struct._XDisplay*, %struct._XGC*, i64) #2

declare i32 @XSetFillStyle(%struct._XDisplay*, %struct._XGC*, i32) #2

declare i32 @XSetStipple(%struct._XDisplay*, %struct._XGC*, i64) #2

declare i32 @XSetTSOrigin(%struct._XDisplay*, %struct._XGC*, i32, i32) #2

declare i32 @XSetTile(%struct._XDisplay*, %struct._XGC*, i64) #2

; Function Attrs: nounwind uwtable
define void @ui_screenblt(i8 zeroext, i32, i32, i32, i32, i32, i32) #0 !dbg !6186 {
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct._seamless_window*, align 8
  %16 = alloca %struct.XRectangle, align 2
  store i8 %0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !6189, metadata !416), !dbg !6190
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6191, metadata !416), !dbg !6192
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6193, metadata !416), !dbg !6194
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6195, metadata !416), !dbg !6196
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6197, metadata !416), !dbg !6198
  store i32 %5, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6199, metadata !416), !dbg !6200
  store i32 %6, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !6201, metadata !416), !dbg !6202
  %17 = load i8, i8* %8, align 1, !dbg !6203
  %18 = zext i8 %17 to i32, !dbg !6203
  %19 = icmp ne i32 %18, 12, !dbg !6206
  br i1 %19, label %20, label %28, !dbg !6207

; <label>:20:                                     ; preds = %7
  %21 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6208
  %22 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6210
  %23 = load i8, i8* %8, align 1, !dbg !6211
  %24 = zext i8 %23 to i64, !dbg !6212
  %25 = getelementptr inbounds [16 x i32], [16 x i32]* @rop2_map, i64 0, i64 %24, !dbg !6212
  %26 = load i32, i32* %25, align 4, !dbg !6212
  %27 = call i32 @XSetFunction(%struct._XDisplay* %21, %struct._XGC* %22, i32 %26), !dbg !6213
  br label %28, !dbg !6213

; <label>:28:                                     ; preds = %20, %7
  %29 = load i32, i32* @g_ownbackstore, align 4, !dbg !6214
  %30 = icmp ne i32 %29, 0, !dbg !6214
  br i1 %30, label %31, label %61, !dbg !6216

; <label>:31:                                     ; preds = %28
  %32 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6217
  %33 = load i32, i32* @g_Unobscured, align 4, !dbg !6219
  %34 = icmp ne i32 %33, 0, !dbg !6219
  br i1 %34, label %35, label %37, !dbg !6219

; <label>:35:                                     ; preds = %31
  %36 = load i64, i64* @g_wnd, align 8, !dbg !6220
  br label %39, !dbg !6222

; <label>:37:                                     ; preds = %31
  %38 = load i64, i64* @g_backstore, align 8, !dbg !6223
  br label %39, !dbg !6225

; <label>:39:                                     ; preds = %37, %35
  %40 = phi i64 [ %36, %35 ], [ %38, %37 ], !dbg !6226
  %41 = load i64, i64* @g_wnd, align 8, !dbg !6228
  %42 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6229
  %43 = load i32, i32* %13, align 4, !dbg !6230
  %44 = load i32, i32* %14, align 4, !dbg !6231
  %45 = load i32, i32* %11, align 4, !dbg !6232
  %46 = load i32, i32* %12, align 4, !dbg !6233
  %47 = load i32, i32* %9, align 4, !dbg !6234
  %48 = load i32, i32* %10, align 4, !dbg !6235
  %49 = call i32 @XCopyArea(%struct._XDisplay* %32, i64 %40, i64 %41, %struct._XGC* %42, i32 %43, i32 %44, i32 %45, i32 %46, i32 %47, i32 %48), !dbg !6236
  %50 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6237
  %51 = load i64, i64* @g_backstore, align 8, !dbg !6238
  %52 = load i64, i64* @g_backstore, align 8, !dbg !6239
  %53 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6240
  %54 = load i32, i32* %13, align 4, !dbg !6241
  %55 = load i32, i32* %14, align 4, !dbg !6242
  %56 = load i32, i32* %11, align 4, !dbg !6243
  %57 = load i32, i32* %12, align 4, !dbg !6244
  %58 = load i32, i32* %9, align 4, !dbg !6245
  %59 = load i32, i32* %10, align 4, !dbg !6246
  %60 = call i32 @XCopyArea(%struct._XDisplay* %50, i64 %51, i64 %52, %struct._XGC* %53, i32 %54, i32 %55, i32 %56, i32 %57, i32 %58, i32 %59), !dbg !6247
  br label %73, !dbg !6248

; <label>:61:                                     ; preds = %28
  %62 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6249
  %63 = load i64, i64* @g_wnd, align 8, !dbg !6251
  %64 = load i64, i64* @g_wnd, align 8, !dbg !6252
  %65 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6253
  %66 = load i32, i32* %13, align 4, !dbg !6254
  %67 = load i32, i32* %14, align 4, !dbg !6255
  %68 = load i32, i32* %11, align 4, !dbg !6256
  %69 = load i32, i32* %12, align 4, !dbg !6257
  %70 = load i32, i32* %9, align 4, !dbg !6258
  %71 = load i32, i32* %10, align 4, !dbg !6259
  %72 = call i32 @XCopyArea(%struct._XDisplay* %62, i64 %63, i64 %64, %struct._XGC* %65, i32 %66, i32 %67, i32 %68, i32 %69, i32 %70, i32 %71), !dbg !6260
  br label %73

; <label>:73:                                     ; preds = %61, %39
  br label %74, !dbg !6261, !llvm.loop !6262

; <label>:74:                                     ; preds = %73
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %15, metadata !6263, metadata !416), !dbg !6265
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %16, metadata !6266, metadata !416), !dbg !6267
  %75 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !6268
  %76 = icmp ne %struct._seamless_window* %75, null, !dbg !6268
  br i1 %76, label %78, label %77, !dbg !6271

; <label>:77:                                     ; preds = %74
  br label %143, !dbg !6272

; <label>:78:                                     ; preds = %74
  %79 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !6274
  store %struct._seamless_window* %79, %struct._seamless_window** %15, align 8, !dbg !6277
  br label %80, !dbg !6278

; <label>:80:                                     ; preds = %135, %78
  %81 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !6279
  %82 = icmp ne %struct._seamless_window* %81, null, !dbg !6282
  br i1 %82, label %83, label %139, !dbg !6282

; <label>:83:                                     ; preds = %80
  %84 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !6283
  %85 = sext i16 %84 to i32, !dbg !6286
  %86 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !6287
  %87 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %86, i32 0, i32 4, !dbg !6288
  %88 = load i32, i32* %87, align 8, !dbg !6288
  %89 = sub nsw i32 %85, %88, !dbg !6289
  %90 = trunc i32 %89 to i16, !dbg !6286
  %91 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %16, i32 0, i32 0, !dbg !6290
  store i16 %90, i16* %91, align 2, !dbg !6291
  %92 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !6292
  %93 = sext i16 %92 to i32, !dbg !6293
  %94 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !6294
  %95 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %94, i32 0, i32 5, !dbg !6295
  %96 = load i32, i32* %95, align 4, !dbg !6295
  %97 = sub nsw i32 %93, %96, !dbg !6296
  %98 = trunc i32 %97 to i16, !dbg !6293
  %99 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %16, i32 0, i32 1, !dbg !6297
  store i16 %98, i16* %99, align 2, !dbg !6298
  %100 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !6299
  %101 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %16, i32 0, i32 2, !dbg !6300
  store i16 %100, i16* %101, align 2, !dbg !6301
  %102 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !6302
  %103 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %16, i32 0, i32 3, !dbg !6303
  store i16 %102, i16* %103, align 2, !dbg !6304
  %104 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6305
  %105 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6306
  %106 = call i32 @XSetClipRectangles(%struct._XDisplay* %104, %struct._XGC* %105, i32 0, i32 0, %struct.XRectangle* %16, i32 1, i32 3), !dbg !6307
  %107 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6308
  %108 = load i32, i32* @g_ownbackstore, align 4, !dbg !6309
  %109 = icmp ne i32 %108, 0, !dbg !6309
  br i1 %109, label %110, label %112, !dbg !6309

; <label>:110:                                    ; preds = %83
  %111 = load i64, i64* @g_backstore, align 8, !dbg !6310
  br label %114, !dbg !6312

; <label>:112:                                    ; preds = %83
  %113 = load i64, i64* @g_wnd, align 8, !dbg !6313
  br label %114, !dbg !6315

; <label>:114:                                    ; preds = %112, %110
  %115 = phi i64 [ %111, %110 ], [ %113, %112 ], !dbg !6316
  %116 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !6318
  %117 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %116, i32 0, i32 0, !dbg !6319
  %118 = load i64, i64* %117, align 8, !dbg !6319
  %119 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6320
  %120 = load i32, i32* %9, align 4, !dbg !6321
  %121 = load i32, i32* %10, align 4, !dbg !6322
  %122 = load i32, i32* %11, align 4, !dbg !6323
  %123 = load i32, i32* %12, align 4, !dbg !6324
  %124 = load i32, i32* %9, align 4, !dbg !6325
  %125 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !6326
  %126 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %125, i32 0, i32 4, !dbg !6327
  %127 = load i32, i32* %126, align 8, !dbg !6327
  %128 = sub nsw i32 %124, %127, !dbg !6328
  %129 = load i32, i32* %10, align 4, !dbg !6329
  %130 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !6330
  %131 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %130, i32 0, i32 5, !dbg !6331
  %132 = load i32, i32* %131, align 4, !dbg !6331
  %133 = sub nsw i32 %129, %132, !dbg !6332
  %134 = call i32 @XCopyArea(%struct._XDisplay* %107, i64 %115, i64 %118, %struct._XGC* %119, i32 %120, i32 %121, i32 %122, i32 %123, i32 %128, i32 %133), !dbg !6333
  br label %135, !dbg !6334

; <label>:135:                                    ; preds = %114
  %136 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !6335
  %137 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %136, i32 0, i32 20, !dbg !6337
  %138 = load %struct._seamless_window*, %struct._seamless_window** %137, align 8, !dbg !6337
  store %struct._seamless_window* %138, %struct._seamless_window** %15, align 8, !dbg !6338
  br label %80, !dbg !6339, !llvm.loop !6340

; <label>:139:                                    ; preds = %80
  %140 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6342
  %141 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6344
  %142 = call i32 @XSetClipRectangles(%struct._XDisplay* %140, %struct._XGC* %141, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !6345
  br label %143, !dbg !6346

; <label>:143:                                    ; preds = %139, %77
  %144 = load i8, i8* %8, align 1, !dbg !6347
  %145 = zext i8 %144 to i32, !dbg !6347
  %146 = icmp ne i32 %145, 12, !dbg !6350
  br i1 %146, label %147, label %151, !dbg !6351

; <label>:147:                                    ; preds = %143
  %148 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6352
  %149 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6354
  %150 = call i32 @XSetFunction(%struct._XDisplay* %148, %struct._XGC* %149, i32 3), !dbg !6355
  br label %151, !dbg !6355

; <label>:151:                                    ; preds = %147, %143
  ret void, !dbg !6356
}

; Function Attrs: nounwind uwtable
define void @ui_memblt(i8 zeroext, i32, i32, i32, i32, i8*, i32, i32) #0 !dbg !6357 {
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct._seamless_window*, align 8
  %18 = alloca %struct.XRectangle, align 2
  store i8 %0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !6360, metadata !416), !dbg !6361
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6362, metadata !416), !dbg !6363
  store i32 %2, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6364, metadata !416), !dbg !6365
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6366, metadata !416), !dbg !6367
  store i32 %4, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6368, metadata !416), !dbg !6369
  store i8* %5, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !6370, metadata !416), !dbg !6371
  store i32 %6, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !6372, metadata !416), !dbg !6373
  store i32 %7, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !6374, metadata !416), !dbg !6375
  %19 = load i8, i8* %9, align 1, !dbg !6376
  %20 = zext i8 %19 to i32, !dbg !6376
  %21 = icmp ne i32 %20, 12, !dbg !6379
  br i1 %21, label %22, label %30, !dbg !6380

; <label>:22:                                     ; preds = %8
  %23 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6381
  %24 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6383
  %25 = load i8, i8* %9, align 1, !dbg !6384
  %26 = zext i8 %25 to i64, !dbg !6385
  %27 = getelementptr inbounds [16 x i32], [16 x i32]* @rop2_map, i64 0, i64 %26, !dbg !6385
  %28 = load i32, i32* %27, align 4, !dbg !6385
  %29 = call i32 @XSetFunction(%struct._XDisplay* %23, %struct._XGC* %24, i32 %28), !dbg !6386
  br label %30, !dbg !6386

; <label>:30:                                     ; preds = %22, %8
  %31 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6387
  %32 = load i8*, i8** %14, align 8, !dbg !6388
  %33 = ptrtoint i8* %32 to i64, !dbg !6389
  %34 = load i64, i64* @g_wnd, align 8, !dbg !6390
  %35 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6391
  %36 = load i32, i32* %15, align 4, !dbg !6392
  %37 = load i32, i32* %16, align 4, !dbg !6393
  %38 = load i32, i32* %12, align 4, !dbg !6394
  %39 = load i32, i32* %13, align 4, !dbg !6395
  %40 = load i32, i32* %10, align 4, !dbg !6396
  %41 = load i32, i32* %11, align 4, !dbg !6397
  %42 = call i32 @XCopyArea(%struct._XDisplay* %31, i64 %33, i64 %34, %struct._XGC* %35, i32 %36, i32 %37, i32 %38, i32 %39, i32 %40, i32 %41), !dbg !6398
  br label %43, !dbg !6399, !llvm.loop !6400

; <label>:43:                                     ; preds = %30
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %17, metadata !6401, metadata !416), !dbg !6403
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %18, metadata !6404, metadata !416), !dbg !6405
  %44 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !6406
  %45 = icmp ne %struct._seamless_window* %44, null, !dbg !6406
  br i1 %45, label %47, label %46, !dbg !6409

; <label>:46:                                     ; preds = %43
  br label %106, !dbg !6410

; <label>:47:                                     ; preds = %43
  %48 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !6412
  store %struct._seamless_window* %48, %struct._seamless_window** %17, align 8, !dbg !6415
  br label %49, !dbg !6416

; <label>:49:                                     ; preds = %98, %47
  %50 = load %struct._seamless_window*, %struct._seamless_window** %17, align 8, !dbg !6417
  %51 = icmp ne %struct._seamless_window* %50, null, !dbg !6420
  br i1 %51, label %52, label %102, !dbg !6420

; <label>:52:                                     ; preds = %49
  %53 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !6421
  %54 = sext i16 %53 to i32, !dbg !6424
  %55 = load %struct._seamless_window*, %struct._seamless_window** %17, align 8, !dbg !6425
  %56 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %55, i32 0, i32 4, !dbg !6426
  %57 = load i32, i32* %56, align 8, !dbg !6426
  %58 = sub nsw i32 %54, %57, !dbg !6427
  %59 = trunc i32 %58 to i16, !dbg !6424
  %60 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %18, i32 0, i32 0, !dbg !6428
  store i16 %59, i16* %60, align 2, !dbg !6429
  %61 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !6430
  %62 = sext i16 %61 to i32, !dbg !6431
  %63 = load %struct._seamless_window*, %struct._seamless_window** %17, align 8, !dbg !6432
  %64 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %63, i32 0, i32 5, !dbg !6433
  %65 = load i32, i32* %64, align 4, !dbg !6433
  %66 = sub nsw i32 %62, %65, !dbg !6434
  %67 = trunc i32 %66 to i16, !dbg !6431
  %68 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %18, i32 0, i32 1, !dbg !6435
  store i16 %67, i16* %68, align 2, !dbg !6436
  %69 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !6437
  %70 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %18, i32 0, i32 2, !dbg !6438
  store i16 %69, i16* %70, align 2, !dbg !6439
  %71 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !6440
  %72 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %18, i32 0, i32 3, !dbg !6441
  store i16 %71, i16* %72, align 2, !dbg !6442
  %73 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6443
  %74 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6444
  %75 = call i32 @XSetClipRectangles(%struct._XDisplay* %73, %struct._XGC* %74, i32 0, i32 0, %struct.XRectangle* %18, i32 1, i32 3), !dbg !6445
  %76 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6446
  %77 = load i8*, i8** %14, align 8, !dbg !6447
  %78 = ptrtoint i8* %77 to i64, !dbg !6448
  %79 = load %struct._seamless_window*, %struct._seamless_window** %17, align 8, !dbg !6449
  %80 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %79, i32 0, i32 0, !dbg !6450
  %81 = load i64, i64* %80, align 8, !dbg !6450
  %82 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6451
  %83 = load i32, i32* %15, align 4, !dbg !6452
  %84 = load i32, i32* %16, align 4, !dbg !6453
  %85 = load i32, i32* %12, align 4, !dbg !6454
  %86 = load i32, i32* %13, align 4, !dbg !6455
  %87 = load i32, i32* %10, align 4, !dbg !6456
  %88 = load %struct._seamless_window*, %struct._seamless_window** %17, align 8, !dbg !6457
  %89 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %88, i32 0, i32 4, !dbg !6458
  %90 = load i32, i32* %89, align 8, !dbg !6458
  %91 = sub nsw i32 %87, %90, !dbg !6459
  %92 = load i32, i32* %11, align 4, !dbg !6460
  %93 = load %struct._seamless_window*, %struct._seamless_window** %17, align 8, !dbg !6461
  %94 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %93, i32 0, i32 5, !dbg !6462
  %95 = load i32, i32* %94, align 4, !dbg !6462
  %96 = sub nsw i32 %92, %95, !dbg !6463
  %97 = call i32 @XCopyArea(%struct._XDisplay* %76, i64 %78, i64 %81, %struct._XGC* %82, i32 %83, i32 %84, i32 %85, i32 %86, i32 %91, i32 %96), !dbg !6464
  br label %98, !dbg !6466

; <label>:98:                                     ; preds = %52
  %99 = load %struct._seamless_window*, %struct._seamless_window** %17, align 8, !dbg !6467
  %100 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %99, i32 0, i32 20, !dbg !6469
  %101 = load %struct._seamless_window*, %struct._seamless_window** %100, align 8, !dbg !6469
  store %struct._seamless_window* %101, %struct._seamless_window** %17, align 8, !dbg !6470
  br label %49, !dbg !6471, !llvm.loop !6472

; <label>:102:                                    ; preds = %49
  %103 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6474
  %104 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6476
  %105 = call i32 @XSetClipRectangles(%struct._XDisplay* %103, %struct._XGC* %104, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !6477
  br label %106, !dbg !6478

; <label>:106:                                    ; preds = %102, %46
  %107 = load i32, i32* @g_ownbackstore, align 4, !dbg !6479
  %108 = icmp ne i32 %107, 0, !dbg !6479
  br i1 %108, label %109, label %122, !dbg !6481

; <label>:109:                                    ; preds = %106
  %110 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6482
  %111 = load i8*, i8** %14, align 8, !dbg !6483
  %112 = ptrtoint i8* %111 to i64, !dbg !6484
  %113 = load i64, i64* @g_backstore, align 8, !dbg !6485
  %114 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6486
  %115 = load i32, i32* %15, align 4, !dbg !6487
  %116 = load i32, i32* %16, align 4, !dbg !6488
  %117 = load i32, i32* %12, align 4, !dbg !6489
  %118 = load i32, i32* %13, align 4, !dbg !6490
  %119 = load i32, i32* %10, align 4, !dbg !6491
  %120 = load i32, i32* %11, align 4, !dbg !6492
  %121 = call i32 @XCopyArea(%struct._XDisplay* %110, i64 %112, i64 %113, %struct._XGC* %114, i32 %115, i32 %116, i32 %117, i32 %118, i32 %119, i32 %120), !dbg !6493
  br label %122, !dbg !6493

; <label>:122:                                    ; preds = %109, %106
  %123 = load i8, i8* %9, align 1, !dbg !6494
  %124 = zext i8 %123 to i32, !dbg !6494
  %125 = icmp ne i32 %124, 12, !dbg !6497
  br i1 %125, label %126, label %130, !dbg !6498

; <label>:126:                                    ; preds = %122
  %127 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6499
  %128 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6501
  %129 = call i32 @XSetFunction(%struct._XDisplay* %127, %struct._XGC* %128, i32 3), !dbg !6502
  br label %130, !dbg !6502

; <label>:130:                                    ; preds = %126, %122
  ret void, !dbg !6503
}

; Function Attrs: nounwind uwtable
define void @ui_triblt(i8 zeroext, i32, i32, i32, i32, i8*, i32, i32, %struct._BRUSH*, i32, i32) #0 !dbg !6504 {
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct._BRUSH*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store i8 %0, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !6507, metadata !416), !dbg !6508
  store i32 %1, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6509, metadata !416), !dbg !6510
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !6511, metadata !416), !dbg !6512
  store i32 %3, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !6513, metadata !416), !dbg !6514
  store i32 %4, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !6515, metadata !416), !dbg !6516
  store i8* %5, i8** %17, align 8
  call void @llvm.dbg.declare(metadata i8** %17, metadata !6517, metadata !416), !dbg !6518
  store i32 %6, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !6519, metadata !416), !dbg !6520
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !6521, metadata !416), !dbg !6522
  store %struct._BRUSH* %8, %struct._BRUSH** %20, align 8
  call void @llvm.dbg.declare(metadata %struct._BRUSH** %20, metadata !6523, metadata !416), !dbg !6524
  store i32 %9, i32* %21, align 4
  call void @llvm.dbg.declare(metadata i32* %21, metadata !6525, metadata !416), !dbg !6526
  store i32 %10, i32* %22, align 4
  call void @llvm.dbg.declare(metadata i32* %22, metadata !6527, metadata !416), !dbg !6528
  %23 = load i8, i8* %12, align 1, !dbg !6529
  %24 = zext i8 %23 to i32, !dbg !6529
  switch i32 %24, label %77 [
    i32 105, label %25
    i32 184, label %40
    i32 192, label %62
  ], !dbg !6530

; <label>:25:                                     ; preds = %11
  %26 = load i32, i32* %13, align 4, !dbg !6531
  %27 = load i32, i32* %14, align 4, !dbg !6533
  %28 = load i32, i32* %15, align 4, !dbg !6534
  %29 = load i32, i32* %16, align 4, !dbg !6535
  %30 = load i8*, i8** %17, align 8, !dbg !6536
  %31 = load i32, i32* %18, align 4, !dbg !6537
  %32 = load i32, i32* %19, align 4, !dbg !6538
  call void @ui_memblt(i8 zeroext 6, i32 %26, i32 %27, i32 %28, i32 %29, i8* %30, i32 %31, i32 %32), !dbg !6539
  %33 = load i32, i32* %13, align 4, !dbg !6540
  %34 = load i32, i32* %14, align 4, !dbg !6541
  %35 = load i32, i32* %15, align 4, !dbg !6542
  %36 = load i32, i32* %16, align 4, !dbg !6543
  %37 = load %struct._BRUSH*, %struct._BRUSH** %20, align 8, !dbg !6544
  %38 = load i32, i32* %21, align 4, !dbg !6545
  %39 = load i32, i32* %22, align 4, !dbg !6546
  call void @ui_patblt(i8 zeroext 9, i32 %33, i32 %34, i32 %35, i32 %36, %struct._BRUSH* %37, i32 %38, i32 %39), !dbg !6547
  br label %87, !dbg !6548

; <label>:40:                                     ; preds = %11
  %41 = load i32, i32* %13, align 4, !dbg !6549
  %42 = load i32, i32* %14, align 4, !dbg !6550
  %43 = load i32, i32* %15, align 4, !dbg !6551
  %44 = load i32, i32* %16, align 4, !dbg !6552
  %45 = load %struct._BRUSH*, %struct._BRUSH** %20, align 8, !dbg !6553
  %46 = load i32, i32* %21, align 4, !dbg !6554
  %47 = load i32, i32* %22, align 4, !dbg !6555
  call void @ui_patblt(i8 zeroext 6, i32 %41, i32 %42, i32 %43, i32 %44, %struct._BRUSH* %45, i32 %46, i32 %47), !dbg !6556
  %48 = load i32, i32* %13, align 4, !dbg !6557
  %49 = load i32, i32* %14, align 4, !dbg !6558
  %50 = load i32, i32* %15, align 4, !dbg !6559
  %51 = load i32, i32* %16, align 4, !dbg !6560
  %52 = load i8*, i8** %17, align 8, !dbg !6561
  %53 = load i32, i32* %18, align 4, !dbg !6562
  %54 = load i32, i32* %19, align 4, !dbg !6563
  call void @ui_memblt(i8 zeroext 8, i32 %48, i32 %49, i32 %50, i32 %51, i8* %52, i32 %53, i32 %54), !dbg !6564
  %55 = load i32, i32* %13, align 4, !dbg !6565
  %56 = load i32, i32* %14, align 4, !dbg !6566
  %57 = load i32, i32* %15, align 4, !dbg !6567
  %58 = load i32, i32* %16, align 4, !dbg !6568
  %59 = load %struct._BRUSH*, %struct._BRUSH** %20, align 8, !dbg !6569
  %60 = load i32, i32* %21, align 4, !dbg !6570
  %61 = load i32, i32* %22, align 4, !dbg !6571
  call void @ui_patblt(i8 zeroext 6, i32 %55, i32 %56, i32 %57, i32 %58, %struct._BRUSH* %59, i32 %60, i32 %61), !dbg !6572
  br label %87, !dbg !6573

; <label>:62:                                     ; preds = %11
  %63 = load i32, i32* %13, align 4, !dbg !6574
  %64 = load i32, i32* %14, align 4, !dbg !6575
  %65 = load i32, i32* %15, align 4, !dbg !6576
  %66 = load i32, i32* %16, align 4, !dbg !6577
  %67 = load i8*, i8** %17, align 8, !dbg !6578
  %68 = load i32, i32* %18, align 4, !dbg !6579
  %69 = load i32, i32* %19, align 4, !dbg !6580
  call void @ui_memblt(i8 zeroext 12, i32 %63, i32 %64, i32 %65, i32 %66, i8* %67, i32 %68, i32 %69), !dbg !6581
  %70 = load i32, i32* %13, align 4, !dbg !6582
  %71 = load i32, i32* %14, align 4, !dbg !6583
  %72 = load i32, i32* %15, align 4, !dbg !6584
  %73 = load i32, i32* %16, align 4, !dbg !6585
  %74 = load %struct._BRUSH*, %struct._BRUSH** %20, align 8, !dbg !6586
  %75 = load i32, i32* %21, align 4, !dbg !6587
  %76 = load i32, i32* %22, align 4, !dbg !6588
  call void @ui_patblt(i8 zeroext 8, i32 %70, i32 %71, i32 %72, i32 %73, %struct._BRUSH* %74, i32 %75, i32 %76), !dbg !6589
  br label %87, !dbg !6590

; <label>:77:                                     ; preds = %11
  %78 = load i8, i8* %12, align 1, !dbg !6591
  %79 = zext i8 %78 to i32, !dbg !6591
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i32 0, i32 0), i32 %79), !dbg !6592
  %80 = load i32, i32* %13, align 4, !dbg !6593
  %81 = load i32, i32* %14, align 4, !dbg !6594
  %82 = load i32, i32* %15, align 4, !dbg !6595
  %83 = load i32, i32* %16, align 4, !dbg !6596
  %84 = load i8*, i8** %17, align 8, !dbg !6597
  %85 = load i32, i32* %18, align 4, !dbg !6598
  %86 = load i32, i32* %19, align 4, !dbg !6599
  call void @ui_memblt(i8 zeroext 12, i32 %80, i32 %81, i32 %82, i32 %83, i8* %84, i32 %85, i32 %86), !dbg !6600
  br label %87, !dbg !6601

; <label>:87:                                     ; preds = %77, %62, %40, %25
  ret void, !dbg !6602
}

; Function Attrs: nounwind uwtable
define void @ui_line(i8 zeroext, i32, i32, i32, i32, %struct._PEN*) #0 !dbg !6603 {
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct._PEN*, align 8
  %13 = alloca %struct._seamless_window*, align 8
  %14 = alloca %struct.XRectangle, align 2
  store i8 %0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !6613, metadata !416), !dbg !6614
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6615, metadata !416), !dbg !6616
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6617, metadata !416), !dbg !6618
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6619, metadata !416), !dbg !6620
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6621, metadata !416), !dbg !6622
  store %struct._PEN* %5, %struct._PEN** %12, align 8
  call void @llvm.dbg.declare(metadata %struct._PEN** %12, metadata !6623, metadata !416), !dbg !6624
  %15 = load i8, i8* %7, align 1, !dbg !6625
  %16 = zext i8 %15 to i32, !dbg !6625
  %17 = icmp ne i32 %16, 12, !dbg !6628
  br i1 %17, label %18, label %26, !dbg !6629

; <label>:18:                                     ; preds = %6
  %19 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6630
  %20 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6632
  %21 = load i8, i8* %7, align 1, !dbg !6633
  %22 = zext i8 %21 to i64, !dbg !6634
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* @rop2_map, i64 0, i64 %22, !dbg !6634
  %24 = load i32, i32* %23, align 4, !dbg !6634
  %25 = call i32 @XSetFunction(%struct._XDisplay* %19, %struct._XGC* %20, i32 %24), !dbg !6635
  br label %26, !dbg !6635

; <label>:26:                                     ; preds = %18, %6
  %27 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6636
  %28 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6637
  %29 = load i32, i32* @g_server_depth, align 4, !dbg !6638
  %30 = icmp ne i32 %29, 8, !dbg !6639
  br i1 %30, label %31, label %36, !dbg !6638

; <label>:31:                                     ; preds = %26
  %32 = load %struct._PEN*, %struct._PEN** %12, align 8, !dbg !6640
  %33 = getelementptr inbounds %struct._PEN, %struct._PEN* %32, i32 0, i32 2, !dbg !6642
  %34 = load i32, i32* %33, align 4, !dbg !6642
  %35 = call i32 @translate_colour(i32 %34), !dbg !6643
  br label %53, !dbg !6644

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @g_owncolmap, align 4, !dbg !6645
  %38 = icmp ne i32 %37, 0, !dbg !6645
  br i1 %38, label %39, label %43, !dbg !6645

; <label>:39:                                     ; preds = %36
  %40 = load %struct._PEN*, %struct._PEN** %12, align 8, !dbg !6647
  %41 = getelementptr inbounds %struct._PEN, %struct._PEN* %40, i32 0, i32 2, !dbg !6649
  %42 = load i32, i32* %41, align 4, !dbg !6649
  br label %51, !dbg !6650

; <label>:43:                                     ; preds = %36
  %44 = load %struct._PEN*, %struct._PEN** %12, align 8, !dbg !6651
  %45 = getelementptr inbounds %struct._PEN, %struct._PEN* %44, i32 0, i32 2, !dbg !6653
  %46 = load i32, i32* %45, align 4, !dbg !6653
  %47 = zext i32 %46 to i64, !dbg !6654
  %48 = load i32*, i32** @g_colmap, align 8, !dbg !6654
  %49 = getelementptr inbounds i32, i32* %48, i64 %47, !dbg !6654
  %50 = load i32, i32* %49, align 4, !dbg !6654
  br label %51, !dbg !6655

; <label>:51:                                     ; preds = %43, %39
  %52 = phi i32 [ %42, %39 ], [ %50, %43 ], !dbg !6656
  br label %53, !dbg !6658

; <label>:53:                                     ; preds = %51, %31
  %54 = phi i32 [ %35, %31 ], [ %52, %51 ], !dbg !6659
  %55 = zext i32 %54 to i64, !dbg !6661
  %56 = call i32 @XSetForeground(%struct._XDisplay* %27, %struct._XGC* %28, i64 %55), !dbg !6662
  %57 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6663
  %58 = load i64, i64* @g_wnd, align 8, !dbg !6664
  %59 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6665
  %60 = load i32, i32* %8, align 4, !dbg !6666
  %61 = load i32, i32* %9, align 4, !dbg !6667
  %62 = load i32, i32* %10, align 4, !dbg !6668
  %63 = load i32, i32* %11, align 4, !dbg !6669
  %64 = call i32 @XDrawLine(%struct._XDisplay* %57, i64 %58, %struct._XGC* %59, i32 %60, i32 %61, i32 %62, i32 %63), !dbg !6670
  br label %65, !dbg !6671, !llvm.loop !6672

; <label>:65:                                     ; preds = %53
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %13, metadata !6673, metadata !416), !dbg !6675
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %14, metadata !6676, metadata !416), !dbg !6677
  %66 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !6678
  %67 = icmp ne %struct._seamless_window* %66, null, !dbg !6678
  br i1 %67, label %69, label %68, !dbg !6681

; <label>:68:                                     ; preds = %65
  br label %132, !dbg !6682

; <label>:69:                                     ; preds = %65
  %70 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !6684
  store %struct._seamless_window* %70, %struct._seamless_window** %13, align 8, !dbg !6687
  br label %71, !dbg !6688

; <label>:71:                                     ; preds = %124, %69
  %72 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !6689
  %73 = icmp ne %struct._seamless_window* %72, null, !dbg !6692
  br i1 %73, label %74, label %128, !dbg !6692

; <label>:74:                                     ; preds = %71
  %75 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !6693
  %76 = sext i16 %75 to i32, !dbg !6696
  %77 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !6697
  %78 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %77, i32 0, i32 4, !dbg !6698
  %79 = load i32, i32* %78, align 8, !dbg !6698
  %80 = sub nsw i32 %76, %79, !dbg !6699
  %81 = trunc i32 %80 to i16, !dbg !6696
  %82 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %14, i32 0, i32 0, !dbg !6700
  store i16 %81, i16* %82, align 2, !dbg !6701
  %83 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !6702
  %84 = sext i16 %83 to i32, !dbg !6703
  %85 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !6704
  %86 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %85, i32 0, i32 5, !dbg !6705
  %87 = load i32, i32* %86, align 4, !dbg !6705
  %88 = sub nsw i32 %84, %87, !dbg !6706
  %89 = trunc i32 %88 to i16, !dbg !6703
  %90 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %14, i32 0, i32 1, !dbg !6707
  store i16 %89, i16* %90, align 2, !dbg !6708
  %91 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !6709
  %92 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %14, i32 0, i32 2, !dbg !6710
  store i16 %91, i16* %92, align 2, !dbg !6711
  %93 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !6712
  %94 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %14, i32 0, i32 3, !dbg !6713
  store i16 %93, i16* %94, align 2, !dbg !6714
  %95 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6715
  %96 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6716
  %97 = call i32 @XSetClipRectangles(%struct._XDisplay* %95, %struct._XGC* %96, i32 0, i32 0, %struct.XRectangle* %14, i32 1, i32 3), !dbg !6717
  %98 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6718
  %99 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !6719
  %100 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %99, i32 0, i32 0, !dbg !6720
  %101 = load i64, i64* %100, align 8, !dbg !6720
  %102 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6721
  %103 = load i32, i32* %8, align 4, !dbg !6722
  %104 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !6723
  %105 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %104, i32 0, i32 4, !dbg !6724
  %106 = load i32, i32* %105, align 8, !dbg !6724
  %107 = sub nsw i32 %103, %106, !dbg !6725
  %108 = load i32, i32* %9, align 4, !dbg !6726
  %109 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !6727
  %110 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %109, i32 0, i32 5, !dbg !6728
  %111 = load i32, i32* %110, align 4, !dbg !6728
  %112 = sub nsw i32 %108, %111, !dbg !6729
  %113 = load i32, i32* %10, align 4, !dbg !6730
  %114 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !6731
  %115 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %114, i32 0, i32 4, !dbg !6732
  %116 = load i32, i32* %115, align 8, !dbg !6732
  %117 = sub nsw i32 %113, %116, !dbg !6733
  %118 = load i32, i32* %11, align 4, !dbg !6734
  %119 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !6735
  %120 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %119, i32 0, i32 5, !dbg !6736
  %121 = load i32, i32* %120, align 4, !dbg !6736
  %122 = sub nsw i32 %118, %121, !dbg !6737
  %123 = call i32 @XDrawLine(%struct._XDisplay* %98, i64 %101, %struct._XGC* %102, i32 %107, i32 %112, i32 %117, i32 %122), !dbg !6738
  br label %124, !dbg !6740

; <label>:124:                                    ; preds = %74
  %125 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !6741
  %126 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %125, i32 0, i32 20, !dbg !6743
  %127 = load %struct._seamless_window*, %struct._seamless_window** %126, align 8, !dbg !6743
  store %struct._seamless_window* %127, %struct._seamless_window** %13, align 8, !dbg !6744
  br label %71, !dbg !6745, !llvm.loop !6746

; <label>:128:                                    ; preds = %71
  %129 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6748
  %130 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6750
  %131 = call i32 @XSetClipRectangles(%struct._XDisplay* %129, %struct._XGC* %130, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !6751
  br label %132, !dbg !6752

; <label>:132:                                    ; preds = %128, %68
  %133 = load i32, i32* @g_ownbackstore, align 4, !dbg !6753
  %134 = icmp ne i32 %133, 0, !dbg !6753
  br i1 %134, label %135, label %144, !dbg !6755

; <label>:135:                                    ; preds = %132
  %136 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6756
  %137 = load i64, i64* @g_backstore, align 8, !dbg !6757
  %138 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6758
  %139 = load i32, i32* %8, align 4, !dbg !6759
  %140 = load i32, i32* %9, align 4, !dbg !6760
  %141 = load i32, i32* %10, align 4, !dbg !6761
  %142 = load i32, i32* %11, align 4, !dbg !6762
  %143 = call i32 @XDrawLine(%struct._XDisplay* %136, i64 %137, %struct._XGC* %138, i32 %139, i32 %140, i32 %141, i32 %142), !dbg !6763
  br label %144, !dbg !6763

; <label>:144:                                    ; preds = %135, %132
  %145 = load i8, i8* %7, align 1, !dbg !6764
  %146 = zext i8 %145 to i32, !dbg !6764
  %147 = icmp ne i32 %146, 12, !dbg !6767
  br i1 %147, label %148, label %152, !dbg !6768

; <label>:148:                                    ; preds = %144
  %149 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6769
  %150 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6771
  %151 = call i32 @XSetFunction(%struct._XDisplay* %149, %struct._XGC* %150, i32 3), !dbg !6772
  br label %152, !dbg !6772

; <label>:152:                                    ; preds = %148, %144
  ret void, !dbg !6773
}

declare i32 @XDrawLine(%struct._XDisplay*, i64, %struct._XGC*, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @ui_rect(i32, i32, i32, i32, i32) #0 !dbg !6774 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct._seamless_window*, align 8
  %12 = alloca %struct.XRectangle, align 2
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6777, metadata !416), !dbg !6778
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6779, metadata !416), !dbg !6780
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6781, metadata !416), !dbg !6782
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6783, metadata !416), !dbg !6784
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6785, metadata !416), !dbg !6786
  %13 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6787
  %14 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6788
  %15 = load i32, i32* @g_server_depth, align 4, !dbg !6789
  %16 = icmp ne i32 %15, 8, !dbg !6790
  br i1 %16, label %17, label %20, !dbg !6789

; <label>:17:                                     ; preds = %5
  %18 = load i32, i32* %10, align 4, !dbg !6791
  %19 = call i32 @translate_colour(i32 %18), !dbg !6793
  br label %33, !dbg !6794

; <label>:20:                                     ; preds = %5
  %21 = load i32, i32* @g_owncolmap, align 4, !dbg !6795
  %22 = icmp ne i32 %21, 0, !dbg !6795
  br i1 %22, label %23, label %25, !dbg !6795

; <label>:23:                                     ; preds = %20
  %24 = load i32, i32* %10, align 4, !dbg !6797
  br label %31, !dbg !6799

; <label>:25:                                     ; preds = %20
  %26 = load i32, i32* %10, align 4, !dbg !6800
  %27 = zext i32 %26 to i64, !dbg !6802
  %28 = load i32*, i32** @g_colmap, align 8, !dbg !6802
  %29 = getelementptr inbounds i32, i32* %28, i64 %27, !dbg !6802
  %30 = load i32, i32* %29, align 4, !dbg !6802
  br label %31, !dbg !6803

; <label>:31:                                     ; preds = %25, %23
  %32 = phi i32 [ %24, %23 ], [ %30, %25 ], !dbg !6804
  br label %33, !dbg !6806

; <label>:33:                                     ; preds = %31, %17
  %34 = phi i32 [ %19, %17 ], [ %32, %31 ], !dbg !6807
  %35 = zext i32 %34 to i64, !dbg !6809
  %36 = call i32 @XSetForeground(%struct._XDisplay* %13, %struct._XGC* %14, i64 %35), !dbg !6810
  %37 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6811
  %38 = load i64, i64* @g_wnd, align 8, !dbg !6813
  %39 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6814
  %40 = load i32, i32* %6, align 4, !dbg !6815
  %41 = load i32, i32* %7, align 4, !dbg !6816
  %42 = load i32, i32* %8, align 4, !dbg !6817
  %43 = load i32, i32* %9, align 4, !dbg !6818
  %44 = call i32 @XFillRectangle(%struct._XDisplay* %37, i64 %38, %struct._XGC* %39, i32 %40, i32 %41, i32 %42, i32 %43), !dbg !6819
  br label %45, !dbg !6820, !llvm.loop !6821

; <label>:45:                                     ; preds = %33
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %11, metadata !6822, metadata !416), !dbg !6824
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %12, metadata !6825, metadata !416), !dbg !6826
  %46 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !6827
  %47 = icmp ne %struct._seamless_window* %46, null, !dbg !6827
  br i1 %47, label %49, label %48, !dbg !6830

; <label>:48:                                     ; preds = %45
  br label %104, !dbg !6831

; <label>:49:                                     ; preds = %45
  %50 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !6833
  store %struct._seamless_window* %50, %struct._seamless_window** %11, align 8, !dbg !6836
  br label %51, !dbg !6837

; <label>:51:                                     ; preds = %96, %49
  %52 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !6838
  %53 = icmp ne %struct._seamless_window* %52, null, !dbg !6841
  br i1 %53, label %54, label %100, !dbg !6841

; <label>:54:                                     ; preds = %51
  %55 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !6842
  %56 = sext i16 %55 to i32, !dbg !6845
  %57 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !6846
  %58 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %57, i32 0, i32 4, !dbg !6847
  %59 = load i32, i32* %58, align 8, !dbg !6847
  %60 = sub nsw i32 %56, %59, !dbg !6848
  %61 = trunc i32 %60 to i16, !dbg !6845
  %62 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %12, i32 0, i32 0, !dbg !6849
  store i16 %61, i16* %62, align 2, !dbg !6850
  %63 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !6851
  %64 = sext i16 %63 to i32, !dbg !6852
  %65 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !6853
  %66 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %65, i32 0, i32 5, !dbg !6854
  %67 = load i32, i32* %66, align 4, !dbg !6854
  %68 = sub nsw i32 %64, %67, !dbg !6855
  %69 = trunc i32 %68 to i16, !dbg !6852
  %70 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %12, i32 0, i32 1, !dbg !6856
  store i16 %69, i16* %70, align 2, !dbg !6857
  %71 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !6858
  %72 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %12, i32 0, i32 2, !dbg !6859
  store i16 %71, i16* %72, align 2, !dbg !6860
  %73 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !6861
  %74 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %12, i32 0, i32 3, !dbg !6862
  store i16 %73, i16* %74, align 2, !dbg !6863
  %75 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6864
  %76 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6865
  %77 = call i32 @XSetClipRectangles(%struct._XDisplay* %75, %struct._XGC* %76, i32 0, i32 0, %struct.XRectangle* %12, i32 1, i32 3), !dbg !6866
  %78 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6867
  %79 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !6868
  %80 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %79, i32 0, i32 0, !dbg !6869
  %81 = load i64, i64* %80, align 8, !dbg !6869
  %82 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6870
  %83 = load i32, i32* %6, align 4, !dbg !6871
  %84 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !6872
  %85 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %84, i32 0, i32 4, !dbg !6873
  %86 = load i32, i32* %85, align 8, !dbg !6873
  %87 = sub nsw i32 %83, %86, !dbg !6874
  %88 = load i32, i32* %7, align 4, !dbg !6875
  %89 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !6876
  %90 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %89, i32 0, i32 5, !dbg !6877
  %91 = load i32, i32* %90, align 4, !dbg !6877
  %92 = sub nsw i32 %88, %91, !dbg !6878
  %93 = load i32, i32* %8, align 4, !dbg !6879
  %94 = load i32, i32* %9, align 4, !dbg !6880
  %95 = call i32 @XFillRectangle(%struct._XDisplay* %78, i64 %81, %struct._XGC* %82, i32 %87, i32 %92, i32 %93, i32 %94), !dbg !6881
  br label %96, !dbg !6883

; <label>:96:                                     ; preds = %54
  %97 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !6884
  %98 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %97, i32 0, i32 20, !dbg !6886
  %99 = load %struct._seamless_window*, %struct._seamless_window** %98, align 8, !dbg !6886
  store %struct._seamless_window* %99, %struct._seamless_window** %11, align 8, !dbg !6887
  br label %51, !dbg !6888, !llvm.loop !6889

; <label>:100:                                    ; preds = %51
  %101 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6891
  %102 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6893
  %103 = call i32 @XSetClipRectangles(%struct._XDisplay* %101, %struct._XGC* %102, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !6894
  br label %104, !dbg !6895

; <label>:104:                                    ; preds = %100, %48
  %105 = load i32, i32* @g_ownbackstore, align 4, !dbg !6896
  %106 = icmp ne i32 %105, 0, !dbg !6896
  br i1 %106, label %107, label %116, !dbg !6896

; <label>:107:                                    ; preds = %104
  %108 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6899
  %109 = load i64, i64* @g_backstore, align 8, !dbg !6901
  %110 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6902
  %111 = load i32, i32* %6, align 4, !dbg !6903
  %112 = load i32, i32* %7, align 4, !dbg !6904
  %113 = load i32, i32* %8, align 4, !dbg !6905
  %114 = load i32, i32* %9, align 4, !dbg !6906
  %115 = call i32 @XFillRectangle(%struct._XDisplay* %108, i64 %109, %struct._XGC* %110, i32 %111, i32 %112, i32 %113, i32 %114), !dbg !6907
  br label %116, !dbg !6907

; <label>:116:                                    ; preds = %107, %104
  ret void, !dbg !6908
}

; Function Attrs: nounwind uwtable
define void @ui_polygon(i8 zeroext, i8 zeroext, %struct._RD_POINT*, i32, %struct._BRUSH*, i32, i32) #0 !dbg !6909 {
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca %struct._RD_POINT*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct._BRUSH*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca [8 x i8], align 1
  %18 = alloca i64, align 8
  %19 = alloca %struct._seamless_window*, align 8
  %20 = alloca %struct.XRectangle, align 2
  %21 = alloca %struct._seamless_window*, align 8
  %22 = alloca %struct.XRectangle, align 2
  %23 = alloca %struct._seamless_window*, align 8
  %24 = alloca %struct.XRectangle, align 2
  %25 = alloca %struct._seamless_window*, align 8
  %26 = alloca %struct.XRectangle, align 2
  %27 = alloca %struct._seamless_window*, align 8
  %28 = alloca %struct.XRectangle, align 2
  store i8 %0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !6919, metadata !416), !dbg !6920
  store i8 %1, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !6921, metadata !416), !dbg !6922
  store %struct._RD_POINT* %2, %struct._RD_POINT** %10, align 8
  call void @llvm.dbg.declare(metadata %struct._RD_POINT** %10, metadata !6923, metadata !416), !dbg !6924
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6925, metadata !416), !dbg !6926
  store %struct._BRUSH* %4, %struct._BRUSH** %12, align 8
  call void @llvm.dbg.declare(metadata %struct._BRUSH** %12, metadata !6927, metadata !416), !dbg !6928
  store i32 %5, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6929, metadata !416), !dbg !6930
  store i32 %6, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !6931, metadata !416), !dbg !6932
  call void @llvm.dbg.declare(metadata i8* %15, metadata !6933, metadata !416), !dbg !6934
  call void @llvm.dbg.declare(metadata i8* %16, metadata !6935, metadata !416), !dbg !6936
  call void @llvm.dbg.declare(metadata [8 x i8]* %17, metadata !6937, metadata !416), !dbg !6938
  call void @llvm.dbg.declare(metadata i64* %18, metadata !6939, metadata !416), !dbg !6940
  %29 = load i8, i8* %8, align 1, !dbg !6941
  %30 = zext i8 %29 to i32, !dbg !6941
  %31 = icmp ne i32 %30, 12, !dbg !6944
  br i1 %31, label %32, label %40, !dbg !6945

; <label>:32:                                     ; preds = %7
  %33 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6946
  %34 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6948
  %35 = load i8, i8* %8, align 1, !dbg !6949
  %36 = zext i8 %35 to i64, !dbg !6950
  %37 = getelementptr inbounds [16 x i32], [16 x i32]* @rop2_map, i64 0, i64 %36, !dbg !6950
  %38 = load i32, i32* %37, align 4, !dbg !6950
  %39 = call i32 @XSetFunction(%struct._XDisplay* %33, %struct._XGC* %34, i32 %38), !dbg !6951
  br label %40, !dbg !6951

; <label>:40:                                     ; preds = %32, %7
  %41 = load i8, i8* %9, align 1, !dbg !6952
  %42 = zext i8 %41 to i32, !dbg !6952
  switch i32 %42, label %51 [
    i32 1, label %43
    i32 2, label %47
  ], !dbg !6953

; <label>:43:                                     ; preds = %40
  %44 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6954
  %45 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6956
  %46 = call i32 @XSetFillRule(%struct._XDisplay* %44, %struct._XGC* %45, i32 0), !dbg !6957
  br label %54, !dbg !6958

; <label>:47:                                     ; preds = %40
  %48 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6959
  %49 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6960
  %50 = call i32 @XSetFillRule(%struct._XDisplay* %48, %struct._XGC* %49, i32 1), !dbg !6961
  br label %54, !dbg !6962

; <label>:51:                                     ; preds = %40
  %52 = load i8, i8* %9, align 1, !dbg !6963
  %53 = zext i8 %52 to i32, !dbg !6963
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i32 0, i32 0), i32 %53), !dbg !6964
  br label %54, !dbg !6965

; <label>:54:                                     ; preds = %51, %47, %43
  %55 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !6966
  %56 = icmp ne %struct._BRUSH* %55, null, !dbg !6966
  br i1 %56, label %57, label %61, !dbg !6968

; <label>:57:                                     ; preds = %54
  %58 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !6969
  %59 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %58, i32 0, i32 2, !dbg !6970
  %60 = load i8, i8* %59, align 2, !dbg !6970
  store i8 %60, i8* %15, align 1, !dbg !6971
  br label %62, !dbg !6972

; <label>:61:                                     ; preds = %54
  store i8 0, i8* %15, align 1, !dbg !6973
  br label %62

; <label>:62:                                     ; preds = %61, %57
  %63 = load i8, i8* %15, align 1, !dbg !6974
  %64 = zext i8 %63 to i32, !dbg !6974
  switch i32 %64, label %763 [
    i32 0, label %65
    i32 2, label %162
    i32 3, label %319
  ], !dbg !6975

; <label>:65:                                     ; preds = %62
  %66 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !6976
  %67 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !6978
  %68 = load i32, i32* @g_server_depth, align 4, !dbg !6979
  %69 = icmp ne i32 %68, 8, !dbg !6980
  br i1 %69, label %70, label %73, !dbg !6979

; <label>:70:                                     ; preds = %65
  %71 = load i32, i32* %14, align 4, !dbg !6981
  %72 = call i32 @translate_colour(i32 %71), !dbg !6983
  br label %86, !dbg !6984

; <label>:73:                                     ; preds = %65
  %74 = load i32, i32* @g_owncolmap, align 4, !dbg !6985
  %75 = icmp ne i32 %74, 0, !dbg !6985
  br i1 %75, label %76, label %78, !dbg !6985

; <label>:76:                                     ; preds = %73
  %77 = load i32, i32* %14, align 4, !dbg !6987
  br label %84, !dbg !6989

; <label>:78:                                     ; preds = %73
  %79 = load i32, i32* %14, align 4, !dbg !6990
  %80 = zext i32 %79 to i64, !dbg !6992
  %81 = load i32*, i32** @g_colmap, align 8, !dbg !6992
  %82 = getelementptr inbounds i32, i32* %81, i64 %80, !dbg !6992
  %83 = load i32, i32* %82, align 4, !dbg !6992
  br label %84, !dbg !6993

; <label>:84:                                     ; preds = %78, %76
  %85 = phi i32 [ %77, %76 ], [ %83, %78 ], !dbg !6994
  br label %86, !dbg !6996

; <label>:86:                                     ; preds = %84, %70
  %87 = phi i32 [ %72, %70 ], [ %85, %84 ], !dbg !6997
  %88 = zext i32 %87 to i64, !dbg !6999
  %89 = call i32 @XSetForeground(%struct._XDisplay* %66, %struct._XGC* %67, i64 %88), !dbg !7000
  %90 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7001
  %91 = load i64, i64* @g_wnd, align 8, !dbg !7003
  %92 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7004
  %93 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7005
  %94 = bitcast %struct._RD_POINT* %93 to %struct.XPoint*, !dbg !7006
  %95 = load i32, i32* %11, align 4, !dbg !7007
  %96 = call i32 @XFillPolygon(%struct._XDisplay* %90, i64 %91, %struct._XGC* %92, %struct.XPoint* %94, i32 %95, i32 0, i32 1), !dbg !7008
  %97 = load i32, i32* @g_ownbackstore, align 4, !dbg !7009
  %98 = icmp ne i32 %97, 0, !dbg !7009
  br i1 %98, label %99, label %107, !dbg !7011

; <label>:99:                                     ; preds = %86
  %100 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7012
  %101 = load i64, i64* @g_backstore, align 8, !dbg !7014
  %102 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7015
  %103 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7016
  %104 = bitcast %struct._RD_POINT* %103 to %struct.XPoint*, !dbg !7017
  %105 = load i32, i32* %11, align 4, !dbg !7018
  %106 = call i32 @XFillPolygon(%struct._XDisplay* %100, i64 %101, %struct._XGC* %102, %struct.XPoint* %104, i32 %105, i32 0, i32 1), !dbg !7019
  br label %107, !dbg !7019

; <label>:107:                                    ; preds = %99, %86
  br label %108, !dbg !7020, !llvm.loop !7022

; <label>:108:                                    ; preds = %107
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %19, metadata !7023, metadata !416), !dbg !7025
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %20, metadata !7026, metadata !416), !dbg !7027
  %109 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7028
  %110 = icmp ne %struct._seamless_window* %109, null, !dbg !7028
  br i1 %110, label %112, label %111, !dbg !7031

; <label>:111:                                    ; preds = %108
  br label %161, !dbg !7032

; <label>:112:                                    ; preds = %108
  %113 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7034
  store %struct._seamless_window* %113, %struct._seamless_window** %19, align 8, !dbg !7037
  br label %114, !dbg !7038

; <label>:114:                                    ; preds = %153, %112
  %115 = load %struct._seamless_window*, %struct._seamless_window** %19, align 8, !dbg !7039
  %116 = icmp ne %struct._seamless_window* %115, null, !dbg !7042
  br i1 %116, label %117, label %157, !dbg !7042

; <label>:117:                                    ; preds = %114
  %118 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !7043
  %119 = sext i16 %118 to i32, !dbg !7046
  %120 = load %struct._seamless_window*, %struct._seamless_window** %19, align 8, !dbg !7047
  %121 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %120, i32 0, i32 4, !dbg !7048
  %122 = load i32, i32* %121, align 8, !dbg !7048
  %123 = sub nsw i32 %119, %122, !dbg !7049
  %124 = trunc i32 %123 to i16, !dbg !7046
  %125 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %20, i32 0, i32 0, !dbg !7050
  store i16 %124, i16* %125, align 2, !dbg !7051
  %126 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !7052
  %127 = sext i16 %126 to i32, !dbg !7053
  %128 = load %struct._seamless_window*, %struct._seamless_window** %19, align 8, !dbg !7054
  %129 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %128, i32 0, i32 5, !dbg !7055
  %130 = load i32, i32* %129, align 4, !dbg !7055
  %131 = sub nsw i32 %127, %130, !dbg !7056
  %132 = trunc i32 %131 to i16, !dbg !7053
  %133 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %20, i32 0, i32 1, !dbg !7057
  store i16 %132, i16* %133, align 2, !dbg !7058
  %134 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !7059
  %135 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %20, i32 0, i32 2, !dbg !7060
  store i16 %134, i16* %135, align 2, !dbg !7061
  %136 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !7062
  %137 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %20, i32 0, i32 3, !dbg !7063
  store i16 %136, i16* %137, align 2, !dbg !7064
  %138 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7065
  %139 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7066
  %140 = call i32 @XSetClipRectangles(%struct._XDisplay* %138, %struct._XGC* %139, i32 0, i32 0, %struct.XRectangle* %20, i32 1, i32 3), !dbg !7067
  %141 = load %struct._seamless_window*, %struct._seamless_window** %19, align 8, !dbg !7068
  %142 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %141, i32 0, i32 0, !dbg !7069
  %143 = load i64, i64* %142, align 8, !dbg !7069
  %144 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7070
  %145 = bitcast %struct._RD_POINT* %144 to %struct.XPoint*, !dbg !7071
  %146 = load i32, i32* %11, align 4, !dbg !7072
  %147 = load %struct._seamless_window*, %struct._seamless_window** %19, align 8, !dbg !7073
  %148 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %147, i32 0, i32 4, !dbg !7074
  %149 = load i32, i32* %148, align 8, !dbg !7074
  %150 = load %struct._seamless_window*, %struct._seamless_window** %19, align 8, !dbg !7075
  %151 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %150, i32 0, i32 5, !dbg !7076
  %152 = load i32, i32* %151, align 4, !dbg !7076
  call void @seamless_XFillPolygon(i64 %143, %struct.XPoint* %145, i32 %146, i32 %149, i32 %152), !dbg !7077
  br label %153, !dbg !7079

; <label>:153:                                    ; preds = %117
  %154 = load %struct._seamless_window*, %struct._seamless_window** %19, align 8, !dbg !7080
  %155 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %154, i32 0, i32 20, !dbg !7082
  %156 = load %struct._seamless_window*, %struct._seamless_window** %155, align 8, !dbg !7082
  store %struct._seamless_window* %156, %struct._seamless_window** %19, align 8, !dbg !7083
  br label %114, !dbg !7084, !llvm.loop !7085

; <label>:157:                                    ; preds = %114
  %158 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7087
  %159 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7089
  %160 = call i32 @XSetClipRectangles(%struct._XDisplay* %158, %struct._XGC* %159, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !7090
  br label %161, !dbg !7091

; <label>:161:                                    ; preds = %157, %111
  br label %768, !dbg !7092

; <label>:162:                                    ; preds = %62
  %163 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7093
  %164 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %163, i32 0, i32 3, !dbg !7094
  %165 = getelementptr inbounds [8 x i8], [8 x i8]* %164, i64 0, i64 0, !dbg !7093
  %166 = load i8, i8* %165, align 1, !dbg !7093
  %167 = zext i8 %166 to i32, !dbg !7093
  %168 = mul nsw i32 %167, 8, !dbg !7095
  %169 = sext i32 %168 to i64, !dbg !7096
  %170 = getelementptr inbounds i8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @hatch_patterns, i32 0, i32 0), i64 %169, !dbg !7096
  %171 = call i8* @ui_create_glyph(i32 8, i32 8, i8* %170), !dbg !7097
  %172 = ptrtoint i8* %171 to i64, !dbg !7098
  store i64 %172, i64* %18, align 8, !dbg !7099
  %173 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7100
  %174 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7101
  %175 = load i32, i32* @g_server_depth, align 4, !dbg !7102
  %176 = icmp ne i32 %175, 8, !dbg !7103
  br i1 %176, label %177, label %180, !dbg !7102

; <label>:177:                                    ; preds = %162
  %178 = load i32, i32* %14, align 4, !dbg !7104
  %179 = call i32 @translate_colour(i32 %178), !dbg !7105
  br label %193, !dbg !7106

; <label>:180:                                    ; preds = %162
  %181 = load i32, i32* @g_owncolmap, align 4, !dbg !7107
  %182 = icmp ne i32 %181, 0, !dbg !7107
  br i1 %182, label %183, label %185, !dbg !7107

; <label>:183:                                    ; preds = %180
  %184 = load i32, i32* %14, align 4, !dbg !7108
  br label %191, !dbg !7109

; <label>:185:                                    ; preds = %180
  %186 = load i32, i32* %14, align 4, !dbg !7110
  %187 = zext i32 %186 to i64, !dbg !7111
  %188 = load i32*, i32** @g_colmap, align 8, !dbg !7111
  %189 = getelementptr inbounds i32, i32* %188, i64 %187, !dbg !7111
  %190 = load i32, i32* %189, align 4, !dbg !7111
  br label %191, !dbg !7112

; <label>:191:                                    ; preds = %185, %183
  %192 = phi i32 [ %184, %183 ], [ %190, %185 ], !dbg !7113
  br label %193, !dbg !7114

; <label>:193:                                    ; preds = %191, %177
  %194 = phi i32 [ %179, %177 ], [ %192, %191 ], !dbg !7115
  %195 = zext i32 %194 to i64, !dbg !7116
  %196 = call i32 @XSetForeground(%struct._XDisplay* %173, %struct._XGC* %174, i64 %195), !dbg !7117
  %197 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7118
  %198 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7119
  %199 = load i32, i32* @g_server_depth, align 4, !dbg !7120
  %200 = icmp ne i32 %199, 8, !dbg !7121
  br i1 %200, label %201, label %204, !dbg !7120

; <label>:201:                                    ; preds = %193
  %202 = load i32, i32* %13, align 4, !dbg !7122
  %203 = call i32 @translate_colour(i32 %202), !dbg !7123
  br label %217, !dbg !7124

; <label>:204:                                    ; preds = %193
  %205 = load i32, i32* @g_owncolmap, align 4, !dbg !7125
  %206 = icmp ne i32 %205, 0, !dbg !7125
  br i1 %206, label %207, label %209, !dbg !7125

; <label>:207:                                    ; preds = %204
  %208 = load i32, i32* %13, align 4, !dbg !7126
  br label %215, !dbg !7127

; <label>:209:                                    ; preds = %204
  %210 = load i32, i32* %13, align 4, !dbg !7128
  %211 = zext i32 %210 to i64, !dbg !7129
  %212 = load i32*, i32** @g_colmap, align 8, !dbg !7129
  %213 = getelementptr inbounds i32, i32* %212, i64 %211, !dbg !7129
  %214 = load i32, i32* %213, align 4, !dbg !7129
  br label %215, !dbg !7130

; <label>:215:                                    ; preds = %209, %207
  %216 = phi i32 [ %208, %207 ], [ %214, %209 ], !dbg !7131
  br label %217, !dbg !7132

; <label>:217:                                    ; preds = %215, %201
  %218 = phi i32 [ %203, %201 ], [ %216, %215 ], !dbg !7133
  %219 = zext i32 %218 to i64, !dbg !7134
  %220 = call i32 @XSetBackground(%struct._XDisplay* %197, %struct._XGC* %198, i64 %219), !dbg !7135
  %221 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7136
  %222 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7137
  %223 = call i32 @XSetFillStyle(%struct._XDisplay* %221, %struct._XGC* %222, i32 3), !dbg !7138
  %224 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7139
  %225 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7140
  %226 = load i64, i64* %18, align 8, !dbg !7141
  %227 = call i32 @XSetStipple(%struct._XDisplay* %224, %struct._XGC* %225, i64 %226), !dbg !7142
  %228 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7143
  %229 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7144
  %230 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7145
  %231 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %230, i32 0, i32 0, !dbg !7146
  %232 = load i8, i8* %231, align 8, !dbg !7146
  %233 = zext i8 %232 to i32, !dbg !7145
  %234 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7147
  %235 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %234, i32 0, i32 1, !dbg !7148
  %236 = load i8, i8* %235, align 1, !dbg !7148
  %237 = zext i8 %236 to i32, !dbg !7147
  %238 = call i32 @XSetTSOrigin(%struct._XDisplay* %228, %struct._XGC* %229, i32 %233, i32 %237), !dbg !7149
  %239 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7150
  %240 = load i64, i64* @g_wnd, align 8, !dbg !7152
  %241 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7153
  %242 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7154
  %243 = bitcast %struct._RD_POINT* %242 to %struct.XPoint*, !dbg !7155
  %244 = load i32, i32* %11, align 4, !dbg !7156
  %245 = call i32 @XFillPolygon(%struct._XDisplay* %239, i64 %240, %struct._XGC* %241, %struct.XPoint* %243, i32 %244, i32 0, i32 1), !dbg !7157
  %246 = load i32, i32* @g_ownbackstore, align 4, !dbg !7158
  %247 = icmp ne i32 %246, 0, !dbg !7158
  br i1 %247, label %248, label %256, !dbg !7160

; <label>:248:                                    ; preds = %217
  %249 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7161
  %250 = load i64, i64* @g_backstore, align 8, !dbg !7163
  %251 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7164
  %252 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7165
  %253 = bitcast %struct._RD_POINT* %252 to %struct.XPoint*, !dbg !7166
  %254 = load i32, i32* %11, align 4, !dbg !7167
  %255 = call i32 @XFillPolygon(%struct._XDisplay* %249, i64 %250, %struct._XGC* %251, %struct.XPoint* %253, i32 %254, i32 0, i32 1), !dbg !7168
  br label %256, !dbg !7168

; <label>:256:                                    ; preds = %248, %217
  br label %257, !dbg !7169, !llvm.loop !7171

; <label>:257:                                    ; preds = %256
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %21, metadata !7172, metadata !416), !dbg !7174
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %22, metadata !7175, metadata !416), !dbg !7176
  %258 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7177
  %259 = icmp ne %struct._seamless_window* %258, null, !dbg !7177
  br i1 %259, label %261, label %260, !dbg !7180

; <label>:260:                                    ; preds = %257
  br label %310, !dbg !7181

; <label>:261:                                    ; preds = %257
  %262 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7183
  store %struct._seamless_window* %262, %struct._seamless_window** %21, align 8, !dbg !7186
  br label %263, !dbg !7187

; <label>:263:                                    ; preds = %302, %261
  %264 = load %struct._seamless_window*, %struct._seamless_window** %21, align 8, !dbg !7188
  %265 = icmp ne %struct._seamless_window* %264, null, !dbg !7191
  br i1 %265, label %266, label %306, !dbg !7191

; <label>:266:                                    ; preds = %263
  %267 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !7192
  %268 = sext i16 %267 to i32, !dbg !7195
  %269 = load %struct._seamless_window*, %struct._seamless_window** %21, align 8, !dbg !7196
  %270 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %269, i32 0, i32 4, !dbg !7197
  %271 = load i32, i32* %270, align 8, !dbg !7197
  %272 = sub nsw i32 %268, %271, !dbg !7198
  %273 = trunc i32 %272 to i16, !dbg !7195
  %274 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %22, i32 0, i32 0, !dbg !7199
  store i16 %273, i16* %274, align 2, !dbg !7200
  %275 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !7201
  %276 = sext i16 %275 to i32, !dbg !7202
  %277 = load %struct._seamless_window*, %struct._seamless_window** %21, align 8, !dbg !7203
  %278 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %277, i32 0, i32 5, !dbg !7204
  %279 = load i32, i32* %278, align 4, !dbg !7204
  %280 = sub nsw i32 %276, %279, !dbg !7205
  %281 = trunc i32 %280 to i16, !dbg !7202
  %282 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %22, i32 0, i32 1, !dbg !7206
  store i16 %281, i16* %282, align 2, !dbg !7207
  %283 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !7208
  %284 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %22, i32 0, i32 2, !dbg !7209
  store i16 %283, i16* %284, align 2, !dbg !7210
  %285 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !7211
  %286 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %22, i32 0, i32 3, !dbg !7212
  store i16 %285, i16* %286, align 2, !dbg !7213
  %287 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7214
  %288 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7215
  %289 = call i32 @XSetClipRectangles(%struct._XDisplay* %287, %struct._XGC* %288, i32 0, i32 0, %struct.XRectangle* %22, i32 1, i32 3), !dbg !7216
  %290 = load %struct._seamless_window*, %struct._seamless_window** %21, align 8, !dbg !7217
  %291 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %290, i32 0, i32 0, !dbg !7218
  %292 = load i64, i64* %291, align 8, !dbg !7218
  %293 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7219
  %294 = bitcast %struct._RD_POINT* %293 to %struct.XPoint*, !dbg !7220
  %295 = load i32, i32* %11, align 4, !dbg !7221
  %296 = load %struct._seamless_window*, %struct._seamless_window** %21, align 8, !dbg !7222
  %297 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %296, i32 0, i32 4, !dbg !7223
  %298 = load i32, i32* %297, align 8, !dbg !7223
  %299 = load %struct._seamless_window*, %struct._seamless_window** %21, align 8, !dbg !7224
  %300 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %299, i32 0, i32 5, !dbg !7225
  %301 = load i32, i32* %300, align 4, !dbg !7225
  call void @seamless_XFillPolygon(i64 %292, %struct.XPoint* %294, i32 %295, i32 %298, i32 %301), !dbg !7226
  br label %302, !dbg !7228

; <label>:302:                                    ; preds = %266
  %303 = load %struct._seamless_window*, %struct._seamless_window** %21, align 8, !dbg !7229
  %304 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %303, i32 0, i32 20, !dbg !7231
  %305 = load %struct._seamless_window*, %struct._seamless_window** %304, align 8, !dbg !7231
  store %struct._seamless_window* %305, %struct._seamless_window** %21, align 8, !dbg !7232
  br label %263, !dbg !7233, !llvm.loop !7234

; <label>:306:                                    ; preds = %263
  %307 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7236
  %308 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7238
  %309 = call i32 @XSetClipRectangles(%struct._XDisplay* %307, %struct._XGC* %308, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !7239
  br label %310, !dbg !7240

; <label>:310:                                    ; preds = %306, %260
  %311 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7241
  %312 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7242
  %313 = call i32 @XSetFillStyle(%struct._XDisplay* %311, %struct._XGC* %312, i32 0), !dbg !7243
  %314 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7244
  %315 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7245
  %316 = call i32 @XSetTSOrigin(%struct._XDisplay* %314, %struct._XGC* %315, i32 0, i32 0), !dbg !7246
  %317 = load i64, i64* %18, align 8, !dbg !7247
  %318 = inttoptr i64 %317 to i8*, !dbg !7248
  call void @ui_destroy_glyph(i8* %318), !dbg !7249
  br label %768, !dbg !7250

; <label>:319:                                    ; preds = %62
  %320 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7251
  %321 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %320, i32 0, i32 4, !dbg !7253
  %322 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %321, align 8, !dbg !7253
  %323 = icmp eq %struct._BRUSHDATA* %322, null, !dbg !7254
  br i1 %323, label %324, label %494, !dbg !7255

; <label>:324:                                    ; preds = %319
  store i8 0, i8* %16, align 1, !dbg !7256
  br label %325, !dbg !7259

; <label>:325:                                    ; preds = %341, %324
  %326 = load i8, i8* %16, align 1, !dbg !7260
  %327 = zext i8 %326 to i32, !dbg !7260
  %328 = icmp ne i32 %327, 8, !dbg !7263
  br i1 %328, label %329, label %344, !dbg !7264

; <label>:329:                                    ; preds = %325
  %330 = load i8, i8* %16, align 1, !dbg !7265
  %331 = zext i8 %330 to i64, !dbg !7266
  %332 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7266
  %333 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %332, i32 0, i32 3, !dbg !7267
  %334 = getelementptr inbounds [8 x i8], [8 x i8]* %333, i64 0, i64 %331, !dbg !7266
  %335 = load i8, i8* %334, align 1, !dbg !7266
  %336 = load i8, i8* %16, align 1, !dbg !7268
  %337 = zext i8 %336 to i32, !dbg !7268
  %338 = sub nsw i32 7, %337, !dbg !7269
  %339 = sext i32 %338 to i64, !dbg !7270
  %340 = getelementptr inbounds [8 x i8], [8 x i8]* %17, i64 0, i64 %339, !dbg !7270
  store i8 %335, i8* %340, align 1, !dbg !7271
  br label %341, !dbg !7270

; <label>:341:                                    ; preds = %329
  %342 = load i8, i8* %16, align 1, !dbg !7272
  %343 = add i8 %342, 1, !dbg !7272
  store i8 %343, i8* %16, align 1, !dbg !7272
  br label %325, !dbg !7274, !llvm.loop !7275

; <label>:344:                                    ; preds = %325
  %345 = getelementptr inbounds [8 x i8], [8 x i8]* %17, i32 0, i32 0, !dbg !7277
  %346 = call i8* @ui_create_glyph(i32 8, i32 8, i8* %345), !dbg !7278
  %347 = ptrtoint i8* %346 to i64, !dbg !7279
  store i64 %347, i64* %18, align 8, !dbg !7280
  %348 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7281
  %349 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7282
  %350 = load i32, i32* @g_server_depth, align 4, !dbg !7283
  %351 = icmp ne i32 %350, 8, !dbg !7284
  br i1 %351, label %352, label %355, !dbg !7283

; <label>:352:                                    ; preds = %344
  %353 = load i32, i32* %13, align 4, !dbg !7285
  %354 = call i32 @translate_colour(i32 %353), !dbg !7287
  br label %368, !dbg !7288

; <label>:355:                                    ; preds = %344
  %356 = load i32, i32* @g_owncolmap, align 4, !dbg !7289
  %357 = icmp ne i32 %356, 0, !dbg !7289
  br i1 %357, label %358, label %360, !dbg !7289

; <label>:358:                                    ; preds = %355
  %359 = load i32, i32* %13, align 4, !dbg !7291
  br label %366, !dbg !7293

; <label>:360:                                    ; preds = %355
  %361 = load i32, i32* %13, align 4, !dbg !7294
  %362 = zext i32 %361 to i64, !dbg !7296
  %363 = load i32*, i32** @g_colmap, align 8, !dbg !7296
  %364 = getelementptr inbounds i32, i32* %363, i64 %362, !dbg !7296
  %365 = load i32, i32* %364, align 4, !dbg !7296
  br label %366, !dbg !7297

; <label>:366:                                    ; preds = %360, %358
  %367 = phi i32 [ %359, %358 ], [ %365, %360 ], !dbg !7298
  br label %368, !dbg !7300

; <label>:368:                                    ; preds = %366, %352
  %369 = phi i32 [ %354, %352 ], [ %367, %366 ], !dbg !7301
  %370 = zext i32 %369 to i64, !dbg !7303
  %371 = call i32 @XSetForeground(%struct._XDisplay* %348, %struct._XGC* %349, i64 %370), !dbg !7304
  %372 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7305
  %373 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7306
  %374 = load i32, i32* @g_server_depth, align 4, !dbg !7307
  %375 = icmp ne i32 %374, 8, !dbg !7308
  br i1 %375, label %376, label %379, !dbg !7307

; <label>:376:                                    ; preds = %368
  %377 = load i32, i32* %14, align 4, !dbg !7309
  %378 = call i32 @translate_colour(i32 %377), !dbg !7310
  br label %392, !dbg !7311

; <label>:379:                                    ; preds = %368
  %380 = load i32, i32* @g_owncolmap, align 4, !dbg !7312
  %381 = icmp ne i32 %380, 0, !dbg !7312
  br i1 %381, label %382, label %384, !dbg !7312

; <label>:382:                                    ; preds = %379
  %383 = load i32, i32* %14, align 4, !dbg !7313
  br label %390, !dbg !7314

; <label>:384:                                    ; preds = %379
  %385 = load i32, i32* %14, align 4, !dbg !7315
  %386 = zext i32 %385 to i64, !dbg !7316
  %387 = load i32*, i32** @g_colmap, align 8, !dbg !7316
  %388 = getelementptr inbounds i32, i32* %387, i64 %386, !dbg !7316
  %389 = load i32, i32* %388, align 4, !dbg !7316
  br label %390, !dbg !7317

; <label>:390:                                    ; preds = %384, %382
  %391 = phi i32 [ %383, %382 ], [ %389, %384 ], !dbg !7318
  br label %392, !dbg !7319

; <label>:392:                                    ; preds = %390, %376
  %393 = phi i32 [ %378, %376 ], [ %391, %390 ], !dbg !7320
  %394 = zext i32 %393 to i64, !dbg !7321
  %395 = call i32 @XSetBackground(%struct._XDisplay* %372, %struct._XGC* %373, i64 %394), !dbg !7322
  %396 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7323
  %397 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7324
  %398 = call i32 @XSetFillStyle(%struct._XDisplay* %396, %struct._XGC* %397, i32 3), !dbg !7325
  %399 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7326
  %400 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7327
  %401 = load i64, i64* %18, align 8, !dbg !7328
  %402 = call i32 @XSetStipple(%struct._XDisplay* %399, %struct._XGC* %400, i64 %401), !dbg !7329
  %403 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7330
  %404 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7331
  %405 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7332
  %406 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %405, i32 0, i32 0, !dbg !7333
  %407 = load i8, i8* %406, align 8, !dbg !7333
  %408 = zext i8 %407 to i32, !dbg !7332
  %409 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7334
  %410 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %409, i32 0, i32 1, !dbg !7335
  %411 = load i8, i8* %410, align 1, !dbg !7335
  %412 = zext i8 %411 to i32, !dbg !7334
  %413 = call i32 @XSetTSOrigin(%struct._XDisplay* %403, %struct._XGC* %404, i32 %408, i32 %412), !dbg !7336
  %414 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7337
  %415 = load i64, i64* @g_wnd, align 8, !dbg !7339
  %416 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7340
  %417 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7341
  %418 = bitcast %struct._RD_POINT* %417 to %struct.XPoint*, !dbg !7342
  %419 = load i32, i32* %11, align 4, !dbg !7343
  %420 = call i32 @XFillPolygon(%struct._XDisplay* %414, i64 %415, %struct._XGC* %416, %struct.XPoint* %418, i32 %419, i32 0, i32 1), !dbg !7344
  %421 = load i32, i32* @g_ownbackstore, align 4, !dbg !7345
  %422 = icmp ne i32 %421, 0, !dbg !7345
  br i1 %422, label %423, label %431, !dbg !7347

; <label>:423:                                    ; preds = %392
  %424 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7348
  %425 = load i64, i64* @g_backstore, align 8, !dbg !7350
  %426 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7351
  %427 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7352
  %428 = bitcast %struct._RD_POINT* %427 to %struct.XPoint*, !dbg !7353
  %429 = load i32, i32* %11, align 4, !dbg !7354
  %430 = call i32 @XFillPolygon(%struct._XDisplay* %424, i64 %425, %struct._XGC* %426, %struct.XPoint* %428, i32 %429, i32 0, i32 1), !dbg !7355
  br label %431, !dbg !7355

; <label>:431:                                    ; preds = %423, %392
  br label %432, !dbg !7356, !llvm.loop !7358

; <label>:432:                                    ; preds = %431
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %23, metadata !7359, metadata !416), !dbg !7361
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %24, metadata !7362, metadata !416), !dbg !7363
  %433 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7364
  %434 = icmp ne %struct._seamless_window* %433, null, !dbg !7364
  br i1 %434, label %436, label %435, !dbg !7367

; <label>:435:                                    ; preds = %432
  br label %485, !dbg !7368

; <label>:436:                                    ; preds = %432
  %437 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7370
  store %struct._seamless_window* %437, %struct._seamless_window** %23, align 8, !dbg !7373
  br label %438, !dbg !7374

; <label>:438:                                    ; preds = %477, %436
  %439 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !7375
  %440 = icmp ne %struct._seamless_window* %439, null, !dbg !7378
  br i1 %440, label %441, label %481, !dbg !7378

; <label>:441:                                    ; preds = %438
  %442 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !7379
  %443 = sext i16 %442 to i32, !dbg !7382
  %444 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !7383
  %445 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %444, i32 0, i32 4, !dbg !7384
  %446 = load i32, i32* %445, align 8, !dbg !7384
  %447 = sub nsw i32 %443, %446, !dbg !7385
  %448 = trunc i32 %447 to i16, !dbg !7382
  %449 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %24, i32 0, i32 0, !dbg !7386
  store i16 %448, i16* %449, align 2, !dbg !7387
  %450 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !7388
  %451 = sext i16 %450 to i32, !dbg !7389
  %452 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !7390
  %453 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %452, i32 0, i32 5, !dbg !7391
  %454 = load i32, i32* %453, align 4, !dbg !7391
  %455 = sub nsw i32 %451, %454, !dbg !7392
  %456 = trunc i32 %455 to i16, !dbg !7389
  %457 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %24, i32 0, i32 1, !dbg !7393
  store i16 %456, i16* %457, align 2, !dbg !7394
  %458 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !7395
  %459 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %24, i32 0, i32 2, !dbg !7396
  store i16 %458, i16* %459, align 2, !dbg !7397
  %460 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !7398
  %461 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %24, i32 0, i32 3, !dbg !7399
  store i16 %460, i16* %461, align 2, !dbg !7400
  %462 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7401
  %463 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7402
  %464 = call i32 @XSetClipRectangles(%struct._XDisplay* %462, %struct._XGC* %463, i32 0, i32 0, %struct.XRectangle* %24, i32 1, i32 3), !dbg !7403
  %465 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !7404
  %466 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %465, i32 0, i32 0, !dbg !7405
  %467 = load i64, i64* %466, align 8, !dbg !7405
  %468 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7406
  %469 = bitcast %struct._RD_POINT* %468 to %struct.XPoint*, !dbg !7407
  %470 = load i32, i32* %11, align 4, !dbg !7408
  %471 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !7409
  %472 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %471, i32 0, i32 4, !dbg !7410
  %473 = load i32, i32* %472, align 8, !dbg !7410
  %474 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !7411
  %475 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %474, i32 0, i32 5, !dbg !7412
  %476 = load i32, i32* %475, align 4, !dbg !7412
  call void @seamless_XFillPolygon(i64 %467, %struct.XPoint* %469, i32 %470, i32 %473, i32 %476), !dbg !7413
  br label %477, !dbg !7415

; <label>:477:                                    ; preds = %441
  %478 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !7416
  %479 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %478, i32 0, i32 20, !dbg !7418
  %480 = load %struct._seamless_window*, %struct._seamless_window** %479, align 8, !dbg !7418
  store %struct._seamless_window* %480, %struct._seamless_window** %23, align 8, !dbg !7419
  br label %438, !dbg !7420, !llvm.loop !7421

; <label>:481:                                    ; preds = %438
  %482 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7423
  %483 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7425
  %484 = call i32 @XSetClipRectangles(%struct._XDisplay* %482, %struct._XGC* %483, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !7426
  br label %485, !dbg !7427

; <label>:485:                                    ; preds = %481, %435
  %486 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7428
  %487 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7429
  %488 = call i32 @XSetFillStyle(%struct._XDisplay* %486, %struct._XGC* %487, i32 0), !dbg !7430
  %489 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7431
  %490 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7432
  %491 = call i32 @XSetTSOrigin(%struct._XDisplay* %489, %struct._XGC* %490, i32 0, i32 0), !dbg !7433
  %492 = load i64, i64* %18, align 8, !dbg !7434
  %493 = inttoptr i64 %492 to i8*, !dbg !7435
  call void @ui_destroy_glyph(i8* %493), !dbg !7436
  br label %762, !dbg !7437

; <label>:494:                                    ; preds = %319
  %495 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7438
  %496 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %495, i32 0, i32 4, !dbg !7440
  %497 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %496, align 8, !dbg !7440
  %498 = getelementptr inbounds %struct._BRUSHDATA, %struct._BRUSHDATA* %497, i32 0, i32 0, !dbg !7441
  %499 = load i32, i32* %498, align 8, !dbg !7441
  %500 = icmp ugt i32 %499, 1, !dbg !7442
  br i1 %500, label %501, label %607, !dbg !7443

; <label>:501:                                    ; preds = %494
  %502 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7444
  %503 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %502, i32 0, i32 4, !dbg !7446
  %504 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %503, align 8, !dbg !7446
  %505 = getelementptr inbounds %struct._BRUSHDATA, %struct._BRUSHDATA* %504, i32 0, i32 2, !dbg !7447
  %506 = load i8*, i8** %505, align 8, !dbg !7447
  %507 = call i8* @ui_create_bitmap(i32 8, i32 8, i8* %506), !dbg !7448
  %508 = ptrtoint i8* %507 to i64, !dbg !7449
  store i64 %508, i64* %18, align 8, !dbg !7450
  %509 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7451
  %510 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7452
  %511 = call i32 @XSetFillStyle(%struct._XDisplay* %509, %struct._XGC* %510, i32 1), !dbg !7453
  %512 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7454
  %513 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7455
  %514 = load i64, i64* %18, align 8, !dbg !7456
  %515 = call i32 @XSetTile(%struct._XDisplay* %512, %struct._XGC* %513, i64 %514), !dbg !7457
  %516 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7458
  %517 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7459
  %518 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7460
  %519 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %518, i32 0, i32 0, !dbg !7461
  %520 = load i8, i8* %519, align 8, !dbg !7461
  %521 = zext i8 %520 to i32, !dbg !7460
  %522 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7462
  %523 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %522, i32 0, i32 1, !dbg !7463
  %524 = load i8, i8* %523, align 1, !dbg !7463
  %525 = zext i8 %524 to i32, !dbg !7462
  %526 = call i32 @XSetTSOrigin(%struct._XDisplay* %516, %struct._XGC* %517, i32 %521, i32 %525), !dbg !7464
  %527 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7465
  %528 = load i64, i64* @g_wnd, align 8, !dbg !7467
  %529 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7468
  %530 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7469
  %531 = bitcast %struct._RD_POINT* %530 to %struct.XPoint*, !dbg !7470
  %532 = load i32, i32* %11, align 4, !dbg !7471
  %533 = call i32 @XFillPolygon(%struct._XDisplay* %527, i64 %528, %struct._XGC* %529, %struct.XPoint* %531, i32 %532, i32 0, i32 1), !dbg !7472
  %534 = load i32, i32* @g_ownbackstore, align 4, !dbg !7473
  %535 = icmp ne i32 %534, 0, !dbg !7473
  br i1 %535, label %536, label %544, !dbg !7475

; <label>:536:                                    ; preds = %501
  %537 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7476
  %538 = load i64, i64* @g_backstore, align 8, !dbg !7478
  %539 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7479
  %540 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7480
  %541 = bitcast %struct._RD_POINT* %540 to %struct.XPoint*, !dbg !7481
  %542 = load i32, i32* %11, align 4, !dbg !7482
  %543 = call i32 @XFillPolygon(%struct._XDisplay* %537, i64 %538, %struct._XGC* %539, %struct.XPoint* %541, i32 %542, i32 0, i32 1), !dbg !7483
  br label %544, !dbg !7483

; <label>:544:                                    ; preds = %536, %501
  br label %545, !dbg !7484, !llvm.loop !7486

; <label>:545:                                    ; preds = %544
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %25, metadata !7487, metadata !416), !dbg !7489
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %26, metadata !7490, metadata !416), !dbg !7491
  %546 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7492
  %547 = icmp ne %struct._seamless_window* %546, null, !dbg !7492
  br i1 %547, label %549, label %548, !dbg !7495

; <label>:548:                                    ; preds = %545
  br label %598, !dbg !7496

; <label>:549:                                    ; preds = %545
  %550 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7498
  store %struct._seamless_window* %550, %struct._seamless_window** %25, align 8, !dbg !7501
  br label %551, !dbg !7502

; <label>:551:                                    ; preds = %590, %549
  %552 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !7503
  %553 = icmp ne %struct._seamless_window* %552, null, !dbg !7506
  br i1 %553, label %554, label %594, !dbg !7506

; <label>:554:                                    ; preds = %551
  %555 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !7507
  %556 = sext i16 %555 to i32, !dbg !7510
  %557 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !7511
  %558 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %557, i32 0, i32 4, !dbg !7512
  %559 = load i32, i32* %558, align 8, !dbg !7512
  %560 = sub nsw i32 %556, %559, !dbg !7513
  %561 = trunc i32 %560 to i16, !dbg !7510
  %562 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %26, i32 0, i32 0, !dbg !7514
  store i16 %561, i16* %562, align 2, !dbg !7515
  %563 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !7516
  %564 = sext i16 %563 to i32, !dbg !7517
  %565 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !7518
  %566 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %565, i32 0, i32 5, !dbg !7519
  %567 = load i32, i32* %566, align 4, !dbg !7519
  %568 = sub nsw i32 %564, %567, !dbg !7520
  %569 = trunc i32 %568 to i16, !dbg !7517
  %570 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %26, i32 0, i32 1, !dbg !7521
  store i16 %569, i16* %570, align 2, !dbg !7522
  %571 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !7523
  %572 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %26, i32 0, i32 2, !dbg !7524
  store i16 %571, i16* %572, align 2, !dbg !7525
  %573 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !7526
  %574 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %26, i32 0, i32 3, !dbg !7527
  store i16 %573, i16* %574, align 2, !dbg !7528
  %575 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7529
  %576 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7530
  %577 = call i32 @XSetClipRectangles(%struct._XDisplay* %575, %struct._XGC* %576, i32 0, i32 0, %struct.XRectangle* %26, i32 1, i32 3), !dbg !7531
  %578 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !7532
  %579 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %578, i32 0, i32 0, !dbg !7533
  %580 = load i64, i64* %579, align 8, !dbg !7533
  %581 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7534
  %582 = bitcast %struct._RD_POINT* %581 to %struct.XPoint*, !dbg !7535
  %583 = load i32, i32* %11, align 4, !dbg !7536
  %584 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !7537
  %585 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %584, i32 0, i32 4, !dbg !7538
  %586 = load i32, i32* %585, align 8, !dbg !7538
  %587 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !7539
  %588 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %587, i32 0, i32 5, !dbg !7540
  %589 = load i32, i32* %588, align 4, !dbg !7540
  call void @seamless_XFillPolygon(i64 %580, %struct.XPoint* %582, i32 %583, i32 %586, i32 %589), !dbg !7541
  br label %590, !dbg !7543

; <label>:590:                                    ; preds = %554
  %591 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !7544
  %592 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %591, i32 0, i32 20, !dbg !7546
  %593 = load %struct._seamless_window*, %struct._seamless_window** %592, align 8, !dbg !7546
  store %struct._seamless_window* %593, %struct._seamless_window** %25, align 8, !dbg !7547
  br label %551, !dbg !7548, !llvm.loop !7549

; <label>:594:                                    ; preds = %551
  %595 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7551
  %596 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7553
  %597 = call i32 @XSetClipRectangles(%struct._XDisplay* %595, %struct._XGC* %596, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !7554
  br label %598, !dbg !7555

; <label>:598:                                    ; preds = %594, %548
  %599 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7556
  %600 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7557
  %601 = call i32 @XSetFillStyle(%struct._XDisplay* %599, %struct._XGC* %600, i32 0), !dbg !7558
  %602 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7559
  %603 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7560
  %604 = call i32 @XSetTSOrigin(%struct._XDisplay* %602, %struct._XGC* %603, i32 0, i32 0), !dbg !7561
  %605 = load i64, i64* %18, align 8, !dbg !7562
  %606 = inttoptr i64 %605 to i8*, !dbg !7563
  call void @ui_destroy_bitmap(i8* %606), !dbg !7564
  br label %761, !dbg !7565

; <label>:607:                                    ; preds = %494
  %608 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7566
  %609 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %608, i32 0, i32 4, !dbg !7568
  %610 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %609, align 8, !dbg !7568
  %611 = getelementptr inbounds %struct._BRUSHDATA, %struct._BRUSHDATA* %610, i32 0, i32 2, !dbg !7569
  %612 = load i8*, i8** %611, align 8, !dbg !7569
  %613 = call i8* @ui_create_glyph(i32 8, i32 8, i8* %612), !dbg !7570
  %614 = ptrtoint i8* %613 to i64, !dbg !7571
  store i64 %614, i64* %18, align 8, !dbg !7572
  %615 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7573
  %616 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7574
  %617 = load i32, i32* @g_server_depth, align 4, !dbg !7575
  %618 = icmp ne i32 %617, 8, !dbg !7576
  br i1 %618, label %619, label %622, !dbg !7575

; <label>:619:                                    ; preds = %607
  %620 = load i32, i32* %13, align 4, !dbg !7577
  %621 = call i32 @translate_colour(i32 %620), !dbg !7579
  br label %635, !dbg !7580

; <label>:622:                                    ; preds = %607
  %623 = load i32, i32* @g_owncolmap, align 4, !dbg !7581
  %624 = icmp ne i32 %623, 0, !dbg !7581
  br i1 %624, label %625, label %627, !dbg !7581

; <label>:625:                                    ; preds = %622
  %626 = load i32, i32* %13, align 4, !dbg !7583
  br label %633, !dbg !7585

; <label>:627:                                    ; preds = %622
  %628 = load i32, i32* %13, align 4, !dbg !7586
  %629 = zext i32 %628 to i64, !dbg !7588
  %630 = load i32*, i32** @g_colmap, align 8, !dbg !7588
  %631 = getelementptr inbounds i32, i32* %630, i64 %629, !dbg !7588
  %632 = load i32, i32* %631, align 4, !dbg !7588
  br label %633, !dbg !7589

; <label>:633:                                    ; preds = %627, %625
  %634 = phi i32 [ %626, %625 ], [ %632, %627 ], !dbg !7590
  br label %635, !dbg !7592

; <label>:635:                                    ; preds = %633, %619
  %636 = phi i32 [ %621, %619 ], [ %634, %633 ], !dbg !7593
  %637 = zext i32 %636 to i64, !dbg !7595
  %638 = call i32 @XSetForeground(%struct._XDisplay* %615, %struct._XGC* %616, i64 %637), !dbg !7596
  %639 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7597
  %640 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7598
  %641 = load i32, i32* @g_server_depth, align 4, !dbg !7599
  %642 = icmp ne i32 %641, 8, !dbg !7600
  br i1 %642, label %643, label %646, !dbg !7599

; <label>:643:                                    ; preds = %635
  %644 = load i32, i32* %14, align 4, !dbg !7601
  %645 = call i32 @translate_colour(i32 %644), !dbg !7602
  br label %659, !dbg !7603

; <label>:646:                                    ; preds = %635
  %647 = load i32, i32* @g_owncolmap, align 4, !dbg !7604
  %648 = icmp ne i32 %647, 0, !dbg !7604
  br i1 %648, label %649, label %651, !dbg !7604

; <label>:649:                                    ; preds = %646
  %650 = load i32, i32* %14, align 4, !dbg !7605
  br label %657, !dbg !7606

; <label>:651:                                    ; preds = %646
  %652 = load i32, i32* %14, align 4, !dbg !7607
  %653 = zext i32 %652 to i64, !dbg !7608
  %654 = load i32*, i32** @g_colmap, align 8, !dbg !7608
  %655 = getelementptr inbounds i32, i32* %654, i64 %653, !dbg !7608
  %656 = load i32, i32* %655, align 4, !dbg !7608
  br label %657, !dbg !7609

; <label>:657:                                    ; preds = %651, %649
  %658 = phi i32 [ %650, %649 ], [ %656, %651 ], !dbg !7610
  br label %659, !dbg !7611

; <label>:659:                                    ; preds = %657, %643
  %660 = phi i32 [ %645, %643 ], [ %658, %657 ], !dbg !7612
  %661 = zext i32 %660 to i64, !dbg !7613
  %662 = call i32 @XSetBackground(%struct._XDisplay* %639, %struct._XGC* %640, i64 %661), !dbg !7614
  %663 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7615
  %664 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7616
  %665 = call i32 @XSetFillStyle(%struct._XDisplay* %663, %struct._XGC* %664, i32 3), !dbg !7617
  %666 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7618
  %667 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7619
  %668 = load i64, i64* %18, align 8, !dbg !7620
  %669 = call i32 @XSetStipple(%struct._XDisplay* %666, %struct._XGC* %667, i64 %668), !dbg !7621
  %670 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7622
  %671 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7623
  %672 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7624
  %673 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %672, i32 0, i32 0, !dbg !7625
  %674 = load i8, i8* %673, align 8, !dbg !7625
  %675 = zext i8 %674 to i32, !dbg !7624
  %676 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7626
  %677 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %676, i32 0, i32 1, !dbg !7627
  %678 = load i8, i8* %677, align 1, !dbg !7627
  %679 = zext i8 %678 to i32, !dbg !7626
  %680 = call i32 @XSetTSOrigin(%struct._XDisplay* %670, %struct._XGC* %671, i32 %675, i32 %679), !dbg !7628
  %681 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7629
  %682 = load i64, i64* @g_wnd, align 8, !dbg !7631
  %683 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7632
  %684 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7633
  %685 = bitcast %struct._RD_POINT* %684 to %struct.XPoint*, !dbg !7634
  %686 = load i32, i32* %11, align 4, !dbg !7635
  %687 = call i32 @XFillPolygon(%struct._XDisplay* %681, i64 %682, %struct._XGC* %683, %struct.XPoint* %685, i32 %686, i32 0, i32 1), !dbg !7636
  %688 = load i32, i32* @g_ownbackstore, align 4, !dbg !7637
  %689 = icmp ne i32 %688, 0, !dbg !7637
  br i1 %689, label %690, label %698, !dbg !7639

; <label>:690:                                    ; preds = %659
  %691 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7640
  %692 = load i64, i64* @g_backstore, align 8, !dbg !7642
  %693 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7643
  %694 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7644
  %695 = bitcast %struct._RD_POINT* %694 to %struct.XPoint*, !dbg !7645
  %696 = load i32, i32* %11, align 4, !dbg !7646
  %697 = call i32 @XFillPolygon(%struct._XDisplay* %691, i64 %692, %struct._XGC* %693, %struct.XPoint* %695, i32 %696, i32 0, i32 1), !dbg !7647
  br label %698, !dbg !7647

; <label>:698:                                    ; preds = %690, %659
  br label %699, !dbg !7648, !llvm.loop !7650

; <label>:699:                                    ; preds = %698
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %27, metadata !7651, metadata !416), !dbg !7653
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %28, metadata !7654, metadata !416), !dbg !7655
  %700 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7656
  %701 = icmp ne %struct._seamless_window* %700, null, !dbg !7656
  br i1 %701, label %703, label %702, !dbg !7659

; <label>:702:                                    ; preds = %699
  br label %752, !dbg !7660

; <label>:703:                                    ; preds = %699
  %704 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7662
  store %struct._seamless_window* %704, %struct._seamless_window** %27, align 8, !dbg !7665
  br label %705, !dbg !7666

; <label>:705:                                    ; preds = %744, %703
  %706 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !7667
  %707 = icmp ne %struct._seamless_window* %706, null, !dbg !7670
  br i1 %707, label %708, label %748, !dbg !7670

; <label>:708:                                    ; preds = %705
  %709 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !7671
  %710 = sext i16 %709 to i32, !dbg !7674
  %711 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !7675
  %712 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %711, i32 0, i32 4, !dbg !7676
  %713 = load i32, i32* %712, align 8, !dbg !7676
  %714 = sub nsw i32 %710, %713, !dbg !7677
  %715 = trunc i32 %714 to i16, !dbg !7674
  %716 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %28, i32 0, i32 0, !dbg !7678
  store i16 %715, i16* %716, align 2, !dbg !7679
  %717 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !7680
  %718 = sext i16 %717 to i32, !dbg !7681
  %719 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !7682
  %720 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %719, i32 0, i32 5, !dbg !7683
  %721 = load i32, i32* %720, align 4, !dbg !7683
  %722 = sub nsw i32 %718, %721, !dbg !7684
  %723 = trunc i32 %722 to i16, !dbg !7681
  %724 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %28, i32 0, i32 1, !dbg !7685
  store i16 %723, i16* %724, align 2, !dbg !7686
  %725 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !7687
  %726 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %28, i32 0, i32 2, !dbg !7688
  store i16 %725, i16* %726, align 2, !dbg !7689
  %727 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !7690
  %728 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %28, i32 0, i32 3, !dbg !7691
  store i16 %727, i16* %728, align 2, !dbg !7692
  %729 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7693
  %730 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7694
  %731 = call i32 @XSetClipRectangles(%struct._XDisplay* %729, %struct._XGC* %730, i32 0, i32 0, %struct.XRectangle* %28, i32 1, i32 3), !dbg !7695
  %732 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !7696
  %733 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %732, i32 0, i32 0, !dbg !7697
  %734 = load i64, i64* %733, align 8, !dbg !7697
  %735 = load %struct._RD_POINT*, %struct._RD_POINT** %10, align 8, !dbg !7698
  %736 = bitcast %struct._RD_POINT* %735 to %struct.XPoint*, !dbg !7699
  %737 = load i32, i32* %11, align 4, !dbg !7700
  %738 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !7701
  %739 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %738, i32 0, i32 4, !dbg !7702
  %740 = load i32, i32* %739, align 8, !dbg !7702
  %741 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !7703
  %742 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %741, i32 0, i32 5, !dbg !7704
  %743 = load i32, i32* %742, align 4, !dbg !7704
  call void @seamless_XFillPolygon(i64 %734, %struct.XPoint* %736, i32 %737, i32 %740, i32 %743), !dbg !7705
  br label %744, !dbg !7707

; <label>:744:                                    ; preds = %708
  %745 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !7708
  %746 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %745, i32 0, i32 20, !dbg !7710
  %747 = load %struct._seamless_window*, %struct._seamless_window** %746, align 8, !dbg !7710
  store %struct._seamless_window* %747, %struct._seamless_window** %27, align 8, !dbg !7711
  br label %705, !dbg !7712, !llvm.loop !7713

; <label>:748:                                    ; preds = %705
  %749 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7715
  %750 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7717
  %751 = call i32 @XSetClipRectangles(%struct._XDisplay* %749, %struct._XGC* %750, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !7718
  br label %752, !dbg !7719

; <label>:752:                                    ; preds = %748, %702
  %753 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7720
  %754 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7721
  %755 = call i32 @XSetFillStyle(%struct._XDisplay* %753, %struct._XGC* %754, i32 0), !dbg !7722
  %756 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7723
  %757 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7724
  %758 = call i32 @XSetTSOrigin(%struct._XDisplay* %756, %struct._XGC* %757, i32 0, i32 0), !dbg !7725
  %759 = load i64, i64* %18, align 8, !dbg !7726
  %760 = inttoptr i64 %759 to i8*, !dbg !7727
  call void @ui_destroy_glyph(i8* %760), !dbg !7728
  br label %761

; <label>:761:                                    ; preds = %752, %598
  br label %762

; <label>:762:                                    ; preds = %761, %485
  br label %768, !dbg !7729

; <label>:763:                                    ; preds = %62
  %764 = load %struct._BRUSH*, %struct._BRUSH** %12, align 8, !dbg !7730
  %765 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %764, i32 0, i32 2, !dbg !7731
  %766 = load i8, i8* %765, align 2, !dbg !7731
  %767 = zext i8 %766 to i32, !dbg !7730
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i32 %767), !dbg !7732
  br label %768, !dbg !7733

; <label>:768:                                    ; preds = %763, %762, %310, %161
  %769 = load i8, i8* %8, align 1, !dbg !7734
  %770 = zext i8 %769 to i32, !dbg !7734
  %771 = icmp ne i32 %770, 12, !dbg !7737
  br i1 %771, label %772, label %776, !dbg !7738

; <label>:772:                                    ; preds = %768
  %773 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7739
  %774 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7741
  %775 = call i32 @XSetFunction(%struct._XDisplay* %773, %struct._XGC* %774, i32 3), !dbg !7742
  br label %776, !dbg !7742

; <label>:776:                                    ; preds = %772, %768
  ret void, !dbg !7743
}

declare i32 @XSetFillRule(%struct._XDisplay*, %struct._XGC*, i32) #2

declare i32 @XFillPolygon(%struct._XDisplay*, i64, %struct._XGC*, %struct.XPoint*, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @seamless_XFillPolygon(i64, %struct.XPoint*, i32, i32, i32) #0 !dbg !7744 {
  %6 = alloca i64, align 8
  %7 = alloca %struct.XPoint*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i64 %0, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !7747, metadata !416), !dbg !7748
  store %struct.XPoint* %1, %struct.XPoint** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.XPoint** %7, metadata !7749, metadata !416), !dbg !7750
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7751, metadata !416), !dbg !7752
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7753, metadata !416), !dbg !7754
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7755, metadata !416), !dbg !7756
  %11 = load i32, i32* %9, align 4, !dbg !7757
  %12 = load %struct.XPoint*, %struct.XPoint** %7, align 8, !dbg !7758
  %13 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %12, i64 0, !dbg !7758
  %14 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %13, i32 0, i32 0, !dbg !7759
  %15 = load i16, i16* %14, align 2, !dbg !7760
  %16 = sext i16 %15 to i32, !dbg !7760
  %17 = sub nsw i32 %16, %11, !dbg !7760
  %18 = trunc i32 %17 to i16, !dbg !7760
  store i16 %18, i16* %14, align 2, !dbg !7760
  %19 = load i32, i32* %10, align 4, !dbg !7761
  %20 = load %struct.XPoint*, %struct.XPoint** %7, align 8, !dbg !7762
  %21 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %20, i64 0, !dbg !7762
  %22 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %21, i32 0, i32 1, !dbg !7763
  %23 = load i16, i16* %22, align 2, !dbg !7764
  %24 = sext i16 %23 to i32, !dbg !7764
  %25 = sub nsw i32 %24, %19, !dbg !7764
  %26 = trunc i32 %25 to i16, !dbg !7764
  store i16 %26, i16* %22, align 2, !dbg !7764
  %27 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7765
  %28 = load i64, i64* %6, align 8, !dbg !7766
  %29 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7767
  %30 = load %struct.XPoint*, %struct.XPoint** %7, align 8, !dbg !7768
  %31 = load i32, i32* %8, align 4, !dbg !7769
  %32 = call i32 @XFillPolygon(%struct._XDisplay* %27, i64 %28, %struct._XGC* %29, %struct.XPoint* %30, i32 %31, i32 0, i32 1), !dbg !7770
  %33 = load i32, i32* %9, align 4, !dbg !7771
  %34 = load %struct.XPoint*, %struct.XPoint** %7, align 8, !dbg !7772
  %35 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %34, i64 0, !dbg !7772
  %36 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %35, i32 0, i32 0, !dbg !7773
  %37 = load i16, i16* %36, align 2, !dbg !7774
  %38 = sext i16 %37 to i32, !dbg !7774
  %39 = add nsw i32 %38, %33, !dbg !7774
  %40 = trunc i32 %39 to i16, !dbg !7774
  store i16 %40, i16* %36, align 2, !dbg !7774
  %41 = load i32, i32* %10, align 4, !dbg !7775
  %42 = load %struct.XPoint*, %struct.XPoint** %7, align 8, !dbg !7776
  %43 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %42, i64 0, !dbg !7776
  %44 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %43, i32 0, i32 1, !dbg !7777
  %45 = load i16, i16* %44, align 2, !dbg !7778
  %46 = sext i16 %45 to i32, !dbg !7778
  %47 = add nsw i32 %46, %41, !dbg !7778
  %48 = trunc i32 %47 to i16, !dbg !7778
  store i16 %48, i16* %44, align 2, !dbg !7778
  ret void, !dbg !7779
}

; Function Attrs: nounwind uwtable
define void @ui_polyline(i8 zeroext, %struct._RD_POINT*, i32, %struct._PEN*) #0 !dbg !7780 {
  %5 = alloca i8, align 1
  %6 = alloca %struct._RD_POINT*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct._PEN*, align 8
  %9 = alloca %struct._seamless_window*, align 8
  %10 = alloca %struct.XRectangle, align 2
  store i8 %0, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !7783, metadata !416), !dbg !7784
  store %struct._RD_POINT* %1, %struct._RD_POINT** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._RD_POINT** %6, metadata !7785, metadata !416), !dbg !7786
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7787, metadata !416), !dbg !7788
  store %struct._PEN* %3, %struct._PEN** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._PEN** %8, metadata !7789, metadata !416), !dbg !7790
  %11 = load i8, i8* %5, align 1, !dbg !7791
  %12 = zext i8 %11 to i32, !dbg !7791
  %13 = icmp ne i32 %12, 12, !dbg !7794
  br i1 %13, label %14, label %22, !dbg !7795

; <label>:14:                                     ; preds = %4
  %15 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7796
  %16 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7798
  %17 = load i8, i8* %5, align 1, !dbg !7799
  %18 = zext i8 %17 to i64, !dbg !7800
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* @rop2_map, i64 0, i64 %18, !dbg !7800
  %20 = load i32, i32* %19, align 4, !dbg !7800
  %21 = call i32 @XSetFunction(%struct._XDisplay* %15, %struct._XGC* %16, i32 %20), !dbg !7801
  br label %22, !dbg !7801

; <label>:22:                                     ; preds = %14, %4
  %23 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7802
  %24 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7803
  %25 = load i32, i32* @g_server_depth, align 4, !dbg !7804
  %26 = icmp ne i32 %25, 8, !dbg !7805
  br i1 %26, label %27, label %32, !dbg !7804

; <label>:27:                                     ; preds = %22
  %28 = load %struct._PEN*, %struct._PEN** %8, align 8, !dbg !7806
  %29 = getelementptr inbounds %struct._PEN, %struct._PEN* %28, i32 0, i32 2, !dbg !7808
  %30 = load i32, i32* %29, align 4, !dbg !7808
  %31 = call i32 @translate_colour(i32 %30), !dbg !7809
  br label %49, !dbg !7810

; <label>:32:                                     ; preds = %22
  %33 = load i32, i32* @g_owncolmap, align 4, !dbg !7811
  %34 = icmp ne i32 %33, 0, !dbg !7811
  br i1 %34, label %35, label %39, !dbg !7811

; <label>:35:                                     ; preds = %32
  %36 = load %struct._PEN*, %struct._PEN** %8, align 8, !dbg !7813
  %37 = getelementptr inbounds %struct._PEN, %struct._PEN* %36, i32 0, i32 2, !dbg !7815
  %38 = load i32, i32* %37, align 4, !dbg !7815
  br label %47, !dbg !7816

; <label>:39:                                     ; preds = %32
  %40 = load %struct._PEN*, %struct._PEN** %8, align 8, !dbg !7817
  %41 = getelementptr inbounds %struct._PEN, %struct._PEN* %40, i32 0, i32 2, !dbg !7819
  %42 = load i32, i32* %41, align 4, !dbg !7819
  %43 = zext i32 %42 to i64, !dbg !7820
  %44 = load i32*, i32** @g_colmap, align 8, !dbg !7820
  %45 = getelementptr inbounds i32, i32* %44, i64 %43, !dbg !7820
  %46 = load i32, i32* %45, align 4, !dbg !7820
  br label %47, !dbg !7821

; <label>:47:                                     ; preds = %39, %35
  %48 = phi i32 [ %38, %35 ], [ %46, %39 ], !dbg !7822
  br label %49, !dbg !7824

; <label>:49:                                     ; preds = %47, %27
  %50 = phi i32 [ %31, %27 ], [ %48, %47 ], !dbg !7825
  %51 = zext i32 %50 to i64, !dbg !7827
  %52 = call i32 @XSetForeground(%struct._XDisplay* %23, %struct._XGC* %24, i64 %51), !dbg !7828
  %53 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7829
  %54 = load i64, i64* @g_wnd, align 8, !dbg !7830
  %55 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7831
  %56 = load %struct._RD_POINT*, %struct._RD_POINT** %6, align 8, !dbg !7832
  %57 = bitcast %struct._RD_POINT* %56 to %struct.XPoint*, !dbg !7833
  %58 = load i32, i32* %7, align 4, !dbg !7834
  %59 = call i32 @XDrawLines(%struct._XDisplay* %53, i64 %54, %struct._XGC* %55, %struct.XPoint* %57, i32 %58, i32 1), !dbg !7835
  %60 = load i32, i32* @g_ownbackstore, align 4, !dbg !7836
  %61 = icmp ne i32 %60, 0, !dbg !7836
  br i1 %61, label %62, label %70, !dbg !7838

; <label>:62:                                     ; preds = %49
  %63 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7839
  %64 = load i64, i64* @g_backstore, align 8, !dbg !7840
  %65 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7841
  %66 = load %struct._RD_POINT*, %struct._RD_POINT** %6, align 8, !dbg !7842
  %67 = bitcast %struct._RD_POINT* %66 to %struct.XPoint*, !dbg !7843
  %68 = load i32, i32* %7, align 4, !dbg !7844
  %69 = call i32 @XDrawLines(%struct._XDisplay* %63, i64 %64, %struct._XGC* %65, %struct.XPoint* %67, i32 %68, i32 1), !dbg !7845
  br label %70, !dbg !7845

; <label>:70:                                     ; preds = %62, %49
  br label %71, !dbg !7846, !llvm.loop !7847

; <label>:71:                                     ; preds = %70
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %9, metadata !7848, metadata !416), !dbg !7850
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %10, metadata !7851, metadata !416), !dbg !7852
  %72 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7853
  %73 = icmp ne %struct._seamless_window* %72, null, !dbg !7853
  br i1 %73, label %75, label %74, !dbg !7856

; <label>:74:                                     ; preds = %71
  br label %124, !dbg !7857

; <label>:75:                                     ; preds = %71
  %76 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !7859
  store %struct._seamless_window* %76, %struct._seamless_window** %9, align 8, !dbg !7862
  br label %77, !dbg !7863

; <label>:77:                                     ; preds = %116, %75
  %78 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !7864
  %79 = icmp ne %struct._seamless_window* %78, null, !dbg !7867
  br i1 %79, label %80, label %120, !dbg !7867

; <label>:80:                                     ; preds = %77
  %81 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !7868
  %82 = sext i16 %81 to i32, !dbg !7871
  %83 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !7872
  %84 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %83, i32 0, i32 4, !dbg !7873
  %85 = load i32, i32* %84, align 8, !dbg !7873
  %86 = sub nsw i32 %82, %85, !dbg !7874
  %87 = trunc i32 %86 to i16, !dbg !7871
  %88 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %10, i32 0, i32 0, !dbg !7875
  store i16 %87, i16* %88, align 2, !dbg !7876
  %89 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !7877
  %90 = sext i16 %89 to i32, !dbg !7878
  %91 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !7879
  %92 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %91, i32 0, i32 5, !dbg !7880
  %93 = load i32, i32* %92, align 4, !dbg !7880
  %94 = sub nsw i32 %90, %93, !dbg !7881
  %95 = trunc i32 %94 to i16, !dbg !7878
  %96 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %10, i32 0, i32 1, !dbg !7882
  store i16 %95, i16* %96, align 2, !dbg !7883
  %97 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !7884
  %98 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %10, i32 0, i32 2, !dbg !7885
  store i16 %97, i16* %98, align 2, !dbg !7886
  %99 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !7887
  %100 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %10, i32 0, i32 3, !dbg !7888
  store i16 %99, i16* %100, align 2, !dbg !7889
  %101 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7890
  %102 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7891
  %103 = call i32 @XSetClipRectangles(%struct._XDisplay* %101, %struct._XGC* %102, i32 0, i32 0, %struct.XRectangle* %10, i32 1, i32 3), !dbg !7892
  %104 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !7893
  %105 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %104, i32 0, i32 0, !dbg !7894
  %106 = load i64, i64* %105, align 8, !dbg !7894
  %107 = load %struct._RD_POINT*, %struct._RD_POINT** %6, align 8, !dbg !7895
  %108 = bitcast %struct._RD_POINT* %107 to %struct.XPoint*, !dbg !7896
  %109 = load i32, i32* %7, align 4, !dbg !7897
  %110 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !7898
  %111 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %110, i32 0, i32 4, !dbg !7899
  %112 = load i32, i32* %111, align 8, !dbg !7899
  %113 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !7900
  %114 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %113, i32 0, i32 5, !dbg !7901
  %115 = load i32, i32* %114, align 4, !dbg !7901
  call void @seamless_XDrawLines(i64 %106, %struct.XPoint* %108, i32 %109, i32 %112, i32 %115), !dbg !7902
  br label %116, !dbg !7904

; <label>:116:                                    ; preds = %80
  %117 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !7905
  %118 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %117, i32 0, i32 20, !dbg !7907
  %119 = load %struct._seamless_window*, %struct._seamless_window** %118, align 8, !dbg !7907
  store %struct._seamless_window* %119, %struct._seamless_window** %9, align 8, !dbg !7908
  br label %77, !dbg !7909, !llvm.loop !7910

; <label>:120:                                    ; preds = %77
  %121 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7912
  %122 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7914
  %123 = call i32 @XSetClipRectangles(%struct._XDisplay* %121, %struct._XGC* %122, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !7915
  br label %124, !dbg !7916

; <label>:124:                                    ; preds = %120, %74
  %125 = load i8, i8* %5, align 1, !dbg !7917
  %126 = zext i8 %125 to i32, !dbg !7917
  %127 = icmp ne i32 %126, 12, !dbg !7920
  br i1 %127, label %128, label %132, !dbg !7921

; <label>:128:                                    ; preds = %124
  %129 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7922
  %130 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7924
  %131 = call i32 @XSetFunction(%struct._XDisplay* %129, %struct._XGC* %130, i32 3), !dbg !7925
  br label %132, !dbg !7925

; <label>:132:                                    ; preds = %128, %124
  ret void, !dbg !7926
}

declare i32 @XDrawLines(%struct._XDisplay*, i64, %struct._XGC*, %struct.XPoint*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @seamless_XDrawLines(i64, %struct.XPoint*, i32, i32, i32) #0 !dbg !7927 {
  %6 = alloca i64, align 8
  %7 = alloca %struct.XPoint*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i64 %0, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !7928, metadata !416), !dbg !7929
  store %struct.XPoint* %1, %struct.XPoint** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.XPoint** %7, metadata !7930, metadata !416), !dbg !7931
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7932, metadata !416), !dbg !7933
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7934, metadata !416), !dbg !7935
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7936, metadata !416), !dbg !7937
  %11 = load i32, i32* %9, align 4, !dbg !7938
  %12 = load %struct.XPoint*, %struct.XPoint** %7, align 8, !dbg !7939
  %13 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %12, i64 0, !dbg !7939
  %14 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %13, i32 0, i32 0, !dbg !7940
  %15 = load i16, i16* %14, align 2, !dbg !7941
  %16 = sext i16 %15 to i32, !dbg !7941
  %17 = sub nsw i32 %16, %11, !dbg !7941
  %18 = trunc i32 %17 to i16, !dbg !7941
  store i16 %18, i16* %14, align 2, !dbg !7941
  %19 = load i32, i32* %10, align 4, !dbg !7942
  %20 = load %struct.XPoint*, %struct.XPoint** %7, align 8, !dbg !7943
  %21 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %20, i64 0, !dbg !7943
  %22 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %21, i32 0, i32 1, !dbg !7944
  %23 = load i16, i16* %22, align 2, !dbg !7945
  %24 = sext i16 %23 to i32, !dbg !7945
  %25 = sub nsw i32 %24, %19, !dbg !7945
  %26 = trunc i32 %25 to i16, !dbg !7945
  store i16 %26, i16* %22, align 2, !dbg !7945
  %27 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7946
  %28 = load i64, i64* %6, align 8, !dbg !7947
  %29 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7948
  %30 = load %struct.XPoint*, %struct.XPoint** %7, align 8, !dbg !7949
  %31 = load i32, i32* %8, align 4, !dbg !7950
  %32 = call i32 @XDrawLines(%struct._XDisplay* %27, i64 %28, %struct._XGC* %29, %struct.XPoint* %30, i32 %31, i32 1), !dbg !7951
  %33 = load i32, i32* %9, align 4, !dbg !7952
  %34 = load %struct.XPoint*, %struct.XPoint** %7, align 8, !dbg !7953
  %35 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %34, i64 0, !dbg !7953
  %36 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %35, i32 0, i32 0, !dbg !7954
  %37 = load i16, i16* %36, align 2, !dbg !7955
  %38 = sext i16 %37 to i32, !dbg !7955
  %39 = add nsw i32 %38, %33, !dbg !7955
  %40 = trunc i32 %39 to i16, !dbg !7955
  store i16 %40, i16* %36, align 2, !dbg !7955
  %41 = load i32, i32* %10, align 4, !dbg !7956
  %42 = load %struct.XPoint*, %struct.XPoint** %7, align 8, !dbg !7957
  %43 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %42, i64 0, !dbg !7957
  %44 = getelementptr inbounds %struct.XPoint, %struct.XPoint* %43, i32 0, i32 1, !dbg !7958
  %45 = load i16, i16* %44, align 2, !dbg !7959
  %46 = sext i16 %45 to i32, !dbg !7959
  %47 = add nsw i32 %46, %41, !dbg !7959
  %48 = trunc i32 %47 to i16, !dbg !7959
  store i16 %48, i16* %44, align 2, !dbg !7959
  ret void, !dbg !7960
}

; Function Attrs: nounwind uwtable
define void @ui_ellipse(i8 zeroext, i8 zeroext, i32, i32, i32, i32, %struct._BRUSH*, i32, i32) #0 !dbg !7961 {
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct._BRUSH*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca [8 x i8], align 1
  %22 = alloca i64, align 8
  %23 = alloca %struct._seamless_window*, align 8
  %24 = alloca %struct.XRectangle, align 2
  %25 = alloca %struct._seamless_window*, align 8
  %26 = alloca %struct.XRectangle, align 2
  %27 = alloca %struct._seamless_window*, align 8
  %28 = alloca %struct.XRectangle, align 2
  %29 = alloca %struct._seamless_window*, align 8
  %30 = alloca %struct.XRectangle, align 2
  %31 = alloca %struct._seamless_window*, align 8
  %32 = alloca %struct.XRectangle, align 2
  %33 = alloca %struct._seamless_window*, align 8
  %34 = alloca %struct.XRectangle, align 2
  %35 = alloca %struct._seamless_window*, align 8
  %36 = alloca %struct.XRectangle, align 2
  %37 = alloca %struct._seamless_window*, align 8
  %38 = alloca %struct.XRectangle, align 2
  %39 = alloca %struct._seamless_window*, align 8
  %40 = alloca %struct.XRectangle, align 2
  %41 = alloca %struct._seamless_window*, align 8
  %42 = alloca %struct.XRectangle, align 2
  store i8 %0, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !7964, metadata !416), !dbg !7965
  store i8 %1, i8* %11, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !7966, metadata !416), !dbg !7967
  store i32 %2, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !7968, metadata !416), !dbg !7969
  store i32 %3, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !7970, metadata !416), !dbg !7971
  store i32 %4, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !7972, metadata !416), !dbg !7973
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !7974, metadata !416), !dbg !7975
  store %struct._BRUSH* %6, %struct._BRUSH** %16, align 8
  call void @llvm.dbg.declare(metadata %struct._BRUSH** %16, metadata !7976, metadata !416), !dbg !7977
  store i32 %7, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !7978, metadata !416), !dbg !7979
  store i32 %8, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !7980, metadata !416), !dbg !7981
  call void @llvm.dbg.declare(metadata i8* %19, metadata !7982, metadata !416), !dbg !7983
  call void @llvm.dbg.declare(metadata i8* %20, metadata !7984, metadata !416), !dbg !7985
  call void @llvm.dbg.declare(metadata [8 x i8]* %21, metadata !7986, metadata !416), !dbg !7987
  call void @llvm.dbg.declare(metadata i64* %22, metadata !7988, metadata !416), !dbg !7989
  %43 = load i8, i8* %10, align 1, !dbg !7990
  %44 = zext i8 %43 to i32, !dbg !7990
  %45 = icmp ne i32 %44, 12, !dbg !7993
  br i1 %45, label %46, label %54, !dbg !7994

; <label>:46:                                     ; preds = %9
  %47 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !7995
  %48 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !7997
  %49 = load i8, i8* %10, align 1, !dbg !7998
  %50 = zext i8 %49 to i64, !dbg !7999
  %51 = getelementptr inbounds [16 x i32], [16 x i32]* @rop2_map, i64 0, i64 %50, !dbg !7999
  %52 = load i32, i32* %51, align 4, !dbg !7999
  %53 = call i32 @XSetFunction(%struct._XDisplay* %47, %struct._XGC* %48, i32 %52), !dbg !8000
  br label %54, !dbg !8000

; <label>:54:                                     ; preds = %46, %9
  %55 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8001
  %56 = icmp ne %struct._BRUSH* %55, null, !dbg !8001
  br i1 %56, label %57, label %61, !dbg !8003

; <label>:57:                                     ; preds = %54
  %58 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8004
  %59 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %58, i32 0, i32 2, !dbg !8005
  %60 = load i8, i8* %59, align 2, !dbg !8005
  store i8 %60, i8* %19, align 1, !dbg !8006
  br label %62, !dbg !8007

; <label>:61:                                     ; preds = %54
  store i8 0, i8* %19, align 1, !dbg !8008
  br label %62

; <label>:62:                                     ; preds = %61, %57
  %63 = load i8, i8* %19, align 1, !dbg !8009
  %64 = zext i8 %63 to i32, !dbg !8009
  switch i32 %64, label %1228 [
    i32 0, label %65
    i32 2, label %255
    i32 3, label %505
  ], !dbg !8010

; <label>:65:                                     ; preds = %62
  %66 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8011
  %67 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8013
  %68 = load i32, i32* @g_server_depth, align 4, !dbg !8014
  %69 = icmp ne i32 %68, 8, !dbg !8015
  br i1 %69, label %70, label %73, !dbg !8014

; <label>:70:                                     ; preds = %65
  %71 = load i32, i32* %18, align 4, !dbg !8016
  %72 = call i32 @translate_colour(i32 %71), !dbg !8018
  br label %86, !dbg !8019

; <label>:73:                                     ; preds = %65
  %74 = load i32, i32* @g_owncolmap, align 4, !dbg !8020
  %75 = icmp ne i32 %74, 0, !dbg !8020
  br i1 %75, label %76, label %78, !dbg !8020

; <label>:76:                                     ; preds = %73
  %77 = load i32, i32* %18, align 4, !dbg !8022
  br label %84, !dbg !8024

; <label>:78:                                     ; preds = %73
  %79 = load i32, i32* %18, align 4, !dbg !8025
  %80 = zext i32 %79 to i64, !dbg !8027
  %81 = load i32*, i32** @g_colmap, align 8, !dbg !8027
  %82 = getelementptr inbounds i32, i32* %81, i64 %80, !dbg !8027
  %83 = load i32, i32* %82, align 4, !dbg !8027
  br label %84, !dbg !8028

; <label>:84:                                     ; preds = %78, %76
  %85 = phi i32 [ %77, %76 ], [ %83, %78 ], !dbg !8029
  br label %86, !dbg !8031

; <label>:86:                                     ; preds = %84, %70
  %87 = phi i32 [ %72, %70 ], [ %85, %84 ], !dbg !8032
  %88 = zext i32 %87 to i64, !dbg !8034
  %89 = call i32 @XSetForeground(%struct._XDisplay* %66, %struct._XGC* %67, i64 %88), !dbg !8035
  %90 = load i8, i8* %11, align 1, !dbg !8036
  %91 = zext i8 %90 to i32, !dbg !8036
  switch i32 %91, label %254 [
    i32 0, label %92
    i32 1, label %173
  ], !dbg !8038

; <label>:92:                                     ; preds = %86
  %93 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8039
  %94 = load i64, i64* @g_wnd, align 8, !dbg !8042
  %95 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8043
  %96 = load i32, i32* %12, align 4, !dbg !8044
  %97 = load i32, i32* %13, align 4, !dbg !8045
  %98 = load i32, i32* %14, align 4, !dbg !8046
  %99 = load i32, i32* %15, align 4, !dbg !8047
  %100 = call i32 @XDrawArc(%struct._XDisplay* %93, i64 %94, %struct._XGC* %95, i32 %96, i32 %97, i32 %98, i32 %99, i32 0, i32 23040), !dbg !8048
  br label %101, !dbg !8049, !llvm.loop !8050

; <label>:101:                                    ; preds = %92
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %23, metadata !8052, metadata !416), !dbg !8054
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %24, metadata !8055, metadata !416), !dbg !8056
  %102 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8057
  %103 = icmp ne %struct._seamless_window* %102, null, !dbg !8057
  br i1 %103, label %105, label %104, !dbg !8060

; <label>:104:                                    ; preds = %101
  br label %160, !dbg !8061

; <label>:105:                                    ; preds = %101
  %106 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8063
  store %struct._seamless_window* %106, %struct._seamless_window** %23, align 8, !dbg !8066
  br label %107, !dbg !8067

; <label>:107:                                    ; preds = %152, %105
  %108 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !8068
  %109 = icmp ne %struct._seamless_window* %108, null, !dbg !8071
  br i1 %109, label %110, label %156, !dbg !8071

; <label>:110:                                    ; preds = %107
  %111 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !8072
  %112 = sext i16 %111 to i32, !dbg !8075
  %113 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !8076
  %114 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %113, i32 0, i32 4, !dbg !8077
  %115 = load i32, i32* %114, align 8, !dbg !8077
  %116 = sub nsw i32 %112, %115, !dbg !8078
  %117 = trunc i32 %116 to i16, !dbg !8075
  %118 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %24, i32 0, i32 0, !dbg !8079
  store i16 %117, i16* %118, align 2, !dbg !8080
  %119 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !8081
  %120 = sext i16 %119 to i32, !dbg !8082
  %121 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !8083
  %122 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %121, i32 0, i32 5, !dbg !8084
  %123 = load i32, i32* %122, align 4, !dbg !8084
  %124 = sub nsw i32 %120, %123, !dbg !8085
  %125 = trunc i32 %124 to i16, !dbg !8082
  %126 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %24, i32 0, i32 1, !dbg !8086
  store i16 %125, i16* %126, align 2, !dbg !8087
  %127 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !8088
  %128 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %24, i32 0, i32 2, !dbg !8089
  store i16 %127, i16* %128, align 2, !dbg !8090
  %129 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !8091
  %130 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %24, i32 0, i32 3, !dbg !8092
  store i16 %129, i16* %130, align 2, !dbg !8093
  %131 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8094
  %132 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8095
  %133 = call i32 @XSetClipRectangles(%struct._XDisplay* %131, %struct._XGC* %132, i32 0, i32 0, %struct.XRectangle* %24, i32 1, i32 3), !dbg !8096
  %134 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8097
  %135 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !8098
  %136 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %135, i32 0, i32 0, !dbg !8099
  %137 = load i64, i64* %136, align 8, !dbg !8099
  %138 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8100
  %139 = load i32, i32* %12, align 4, !dbg !8101
  %140 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !8102
  %141 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %140, i32 0, i32 4, !dbg !8103
  %142 = load i32, i32* %141, align 8, !dbg !8103
  %143 = sub nsw i32 %139, %142, !dbg !8104
  %144 = load i32, i32* %13, align 4, !dbg !8105
  %145 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !8106
  %146 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %145, i32 0, i32 5, !dbg !8107
  %147 = load i32, i32* %146, align 4, !dbg !8107
  %148 = sub nsw i32 %144, %147, !dbg !8108
  %149 = load i32, i32* %14, align 4, !dbg !8109
  %150 = load i32, i32* %15, align 4, !dbg !8110
  %151 = call i32 @XDrawArc(%struct._XDisplay* %134, i64 %137, %struct._XGC* %138, i32 %143, i32 %148, i32 %149, i32 %150, i32 0, i32 23040), !dbg !8111
  br label %152, !dbg !8113

; <label>:152:                                    ; preds = %110
  %153 = load %struct._seamless_window*, %struct._seamless_window** %23, align 8, !dbg !8114
  %154 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %153, i32 0, i32 20, !dbg !8116
  %155 = load %struct._seamless_window*, %struct._seamless_window** %154, align 8, !dbg !8116
  store %struct._seamless_window* %155, %struct._seamless_window** %23, align 8, !dbg !8117
  br label %107, !dbg !8118, !llvm.loop !8119

; <label>:156:                                    ; preds = %107
  %157 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8121
  %158 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8123
  %159 = call i32 @XSetClipRectangles(%struct._XDisplay* %157, %struct._XGC* %158, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !8124
  br label %160, !dbg !8125

; <label>:160:                                    ; preds = %156, %104
  %161 = load i32, i32* @g_ownbackstore, align 4, !dbg !8126
  %162 = icmp ne i32 %161, 0, !dbg !8126
  br i1 %162, label %163, label %172, !dbg !8126

; <label>:163:                                    ; preds = %160
  %164 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8129
  %165 = load i64, i64* @g_backstore, align 8, !dbg !8131
  %166 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8132
  %167 = load i32, i32* %12, align 4, !dbg !8133
  %168 = load i32, i32* %13, align 4, !dbg !8134
  %169 = load i32, i32* %14, align 4, !dbg !8135
  %170 = load i32, i32* %15, align 4, !dbg !8136
  %171 = call i32 @XDrawArc(%struct._XDisplay* %164, i64 %165, %struct._XGC* %166, i32 %167, i32 %168, i32 %169, i32 %170, i32 0, i32 23040), !dbg !8137
  br label %172, !dbg !8137

; <label>:172:                                    ; preds = %163, %160
  br label %254, !dbg !8138

; <label>:173:                                    ; preds = %86
  %174 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8140
  %175 = load i64, i64* @g_wnd, align 8, !dbg !8142
  %176 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8143
  %177 = load i32, i32* %12, align 4, !dbg !8144
  %178 = load i32, i32* %13, align 4, !dbg !8145
  %179 = load i32, i32* %14, align 4, !dbg !8146
  %180 = load i32, i32* %15, align 4, !dbg !8147
  %181 = call i32 @XFillArc(%struct._XDisplay* %174, i64 %175, %struct._XGC* %176, i32 %177, i32 %178, i32 %179, i32 %180, i32 0, i32 23040), !dbg !8148
  br label %182, !dbg !8149, !llvm.loop !8150

; <label>:182:                                    ; preds = %173
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %25, metadata !8152, metadata !416), !dbg !8154
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %26, metadata !8155, metadata !416), !dbg !8156
  %183 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8157
  %184 = icmp ne %struct._seamless_window* %183, null, !dbg !8157
  br i1 %184, label %186, label %185, !dbg !8160

; <label>:185:                                    ; preds = %182
  br label %241, !dbg !8161

; <label>:186:                                    ; preds = %182
  %187 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8163
  store %struct._seamless_window* %187, %struct._seamless_window** %25, align 8, !dbg !8166
  br label %188, !dbg !8167

; <label>:188:                                    ; preds = %233, %186
  %189 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !8168
  %190 = icmp ne %struct._seamless_window* %189, null, !dbg !8171
  br i1 %190, label %191, label %237, !dbg !8171

; <label>:191:                                    ; preds = %188
  %192 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !8172
  %193 = sext i16 %192 to i32, !dbg !8175
  %194 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !8176
  %195 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %194, i32 0, i32 4, !dbg !8177
  %196 = load i32, i32* %195, align 8, !dbg !8177
  %197 = sub nsw i32 %193, %196, !dbg !8178
  %198 = trunc i32 %197 to i16, !dbg !8175
  %199 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %26, i32 0, i32 0, !dbg !8179
  store i16 %198, i16* %199, align 2, !dbg !8180
  %200 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !8181
  %201 = sext i16 %200 to i32, !dbg !8182
  %202 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !8183
  %203 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %202, i32 0, i32 5, !dbg !8184
  %204 = load i32, i32* %203, align 4, !dbg !8184
  %205 = sub nsw i32 %201, %204, !dbg !8185
  %206 = trunc i32 %205 to i16, !dbg !8182
  %207 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %26, i32 0, i32 1, !dbg !8186
  store i16 %206, i16* %207, align 2, !dbg !8187
  %208 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !8188
  %209 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %26, i32 0, i32 2, !dbg !8189
  store i16 %208, i16* %209, align 2, !dbg !8190
  %210 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !8191
  %211 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %26, i32 0, i32 3, !dbg !8192
  store i16 %210, i16* %211, align 2, !dbg !8193
  %212 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8194
  %213 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8195
  %214 = call i32 @XSetClipRectangles(%struct._XDisplay* %212, %struct._XGC* %213, i32 0, i32 0, %struct.XRectangle* %26, i32 1, i32 3), !dbg !8196
  %215 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8197
  %216 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !8198
  %217 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %216, i32 0, i32 0, !dbg !8199
  %218 = load i64, i64* %217, align 8, !dbg !8199
  %219 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8200
  %220 = load i32, i32* %12, align 4, !dbg !8201
  %221 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !8202
  %222 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %221, i32 0, i32 4, !dbg !8203
  %223 = load i32, i32* %222, align 8, !dbg !8203
  %224 = sub nsw i32 %220, %223, !dbg !8204
  %225 = load i32, i32* %13, align 4, !dbg !8205
  %226 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !8206
  %227 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %226, i32 0, i32 5, !dbg !8207
  %228 = load i32, i32* %227, align 4, !dbg !8207
  %229 = sub nsw i32 %225, %228, !dbg !8208
  %230 = load i32, i32* %14, align 4, !dbg !8209
  %231 = load i32, i32* %15, align 4, !dbg !8210
  %232 = call i32 @XFillArc(%struct._XDisplay* %215, i64 %218, %struct._XGC* %219, i32 %224, i32 %229, i32 %230, i32 %231, i32 0, i32 23040), !dbg !8211
  br label %233, !dbg !8213

; <label>:233:                                    ; preds = %191
  %234 = load %struct._seamless_window*, %struct._seamless_window** %25, align 8, !dbg !8214
  %235 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %234, i32 0, i32 20, !dbg !8216
  %236 = load %struct._seamless_window*, %struct._seamless_window** %235, align 8, !dbg !8216
  store %struct._seamless_window* %236, %struct._seamless_window** %25, align 8, !dbg !8217
  br label %188, !dbg !8218, !llvm.loop !8219

; <label>:237:                                    ; preds = %188
  %238 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8221
  %239 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8223
  %240 = call i32 @XSetClipRectangles(%struct._XDisplay* %238, %struct._XGC* %239, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !8224
  br label %241, !dbg !8225

; <label>:241:                                    ; preds = %237, %185
  %242 = load i32, i32* @g_ownbackstore, align 4, !dbg !8226
  %243 = icmp ne i32 %242, 0, !dbg !8226
  br i1 %243, label %244, label %253, !dbg !8226

; <label>:244:                                    ; preds = %241
  %245 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8229
  %246 = load i64, i64* @g_backstore, align 8, !dbg !8231
  %247 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8232
  %248 = load i32, i32* %12, align 4, !dbg !8233
  %249 = load i32, i32* %13, align 4, !dbg !8234
  %250 = load i32, i32* %14, align 4, !dbg !8235
  %251 = load i32, i32* %15, align 4, !dbg !8236
  %252 = call i32 @XFillArc(%struct._XDisplay* %245, i64 %246, %struct._XGC* %247, i32 %248, i32 %249, i32 %250, i32 %251, i32 0, i32 23040), !dbg !8237
  br label %253, !dbg !8237

; <label>:253:                                    ; preds = %244, %241
  br label %254, !dbg !8238

; <label>:254:                                    ; preds = %86, %253, %172
  br label %1233, !dbg !8240

; <label>:255:                                    ; preds = %62
  %256 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8241
  %257 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %256, i32 0, i32 3, !dbg !8242
  %258 = getelementptr inbounds [8 x i8], [8 x i8]* %257, i64 0, i64 0, !dbg !8241
  %259 = load i8, i8* %258, align 1, !dbg !8241
  %260 = zext i8 %259 to i32, !dbg !8241
  %261 = mul nsw i32 %260, 8, !dbg !8243
  %262 = sext i32 %261 to i64, !dbg !8244
  %263 = getelementptr inbounds i8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @hatch_patterns, i32 0, i32 0), i64 %262, !dbg !8244
  %264 = call i8* @ui_create_glyph(i32 8, i32 8, i8* %263), !dbg !8245
  %265 = ptrtoint i8* %264 to i64, !dbg !8246
  store i64 %265, i64* %22, align 8, !dbg !8247
  %266 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8248
  %267 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8249
  %268 = load i32, i32* @g_server_depth, align 4, !dbg !8250
  %269 = icmp ne i32 %268, 8, !dbg !8251
  br i1 %269, label %270, label %273, !dbg !8250

; <label>:270:                                    ; preds = %255
  %271 = load i32, i32* %18, align 4, !dbg !8252
  %272 = call i32 @translate_colour(i32 %271), !dbg !8253
  br label %286, !dbg !8254

; <label>:273:                                    ; preds = %255
  %274 = load i32, i32* @g_owncolmap, align 4, !dbg !8255
  %275 = icmp ne i32 %274, 0, !dbg !8255
  br i1 %275, label %276, label %278, !dbg !8255

; <label>:276:                                    ; preds = %273
  %277 = load i32, i32* %18, align 4, !dbg !8256
  br label %284, !dbg !8257

; <label>:278:                                    ; preds = %273
  %279 = load i32, i32* %18, align 4, !dbg !8258
  %280 = zext i32 %279 to i64, !dbg !8259
  %281 = load i32*, i32** @g_colmap, align 8, !dbg !8259
  %282 = getelementptr inbounds i32, i32* %281, i64 %280, !dbg !8259
  %283 = load i32, i32* %282, align 4, !dbg !8259
  br label %284, !dbg !8260

; <label>:284:                                    ; preds = %278, %276
  %285 = phi i32 [ %277, %276 ], [ %283, %278 ], !dbg !8261
  br label %286, !dbg !8262

; <label>:286:                                    ; preds = %284, %270
  %287 = phi i32 [ %272, %270 ], [ %285, %284 ], !dbg !8263
  %288 = zext i32 %287 to i64, !dbg !8264
  %289 = call i32 @XSetForeground(%struct._XDisplay* %266, %struct._XGC* %267, i64 %288), !dbg !8265
  %290 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8266
  %291 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8267
  %292 = load i32, i32* @g_server_depth, align 4, !dbg !8268
  %293 = icmp ne i32 %292, 8, !dbg !8269
  br i1 %293, label %294, label %297, !dbg !8268

; <label>:294:                                    ; preds = %286
  %295 = load i32, i32* %17, align 4, !dbg !8270
  %296 = call i32 @translate_colour(i32 %295), !dbg !8271
  br label %310, !dbg !8272

; <label>:297:                                    ; preds = %286
  %298 = load i32, i32* @g_owncolmap, align 4, !dbg !8273
  %299 = icmp ne i32 %298, 0, !dbg !8273
  br i1 %299, label %300, label %302, !dbg !8273

; <label>:300:                                    ; preds = %297
  %301 = load i32, i32* %17, align 4, !dbg !8274
  br label %308, !dbg !8275

; <label>:302:                                    ; preds = %297
  %303 = load i32, i32* %17, align 4, !dbg !8276
  %304 = zext i32 %303 to i64, !dbg !8277
  %305 = load i32*, i32** @g_colmap, align 8, !dbg !8277
  %306 = getelementptr inbounds i32, i32* %305, i64 %304, !dbg !8277
  %307 = load i32, i32* %306, align 4, !dbg !8277
  br label %308, !dbg !8278

; <label>:308:                                    ; preds = %302, %300
  %309 = phi i32 [ %301, %300 ], [ %307, %302 ], !dbg !8279
  br label %310, !dbg !8280

; <label>:310:                                    ; preds = %308, %294
  %311 = phi i32 [ %296, %294 ], [ %309, %308 ], !dbg !8281
  %312 = zext i32 %311 to i64, !dbg !8282
  %313 = call i32 @XSetBackground(%struct._XDisplay* %290, %struct._XGC* %291, i64 %312), !dbg !8283
  %314 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8284
  %315 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8285
  %316 = call i32 @XSetFillStyle(%struct._XDisplay* %314, %struct._XGC* %315, i32 3), !dbg !8286
  %317 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8287
  %318 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8288
  %319 = load i64, i64* %22, align 8, !dbg !8289
  %320 = call i32 @XSetStipple(%struct._XDisplay* %317, %struct._XGC* %318, i64 %319), !dbg !8290
  %321 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8291
  %322 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8292
  %323 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8293
  %324 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %323, i32 0, i32 0, !dbg !8294
  %325 = load i8, i8* %324, align 8, !dbg !8294
  %326 = zext i8 %325 to i32, !dbg !8293
  %327 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8295
  %328 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %327, i32 0, i32 1, !dbg !8296
  %329 = load i8, i8* %328, align 1, !dbg !8296
  %330 = zext i8 %329 to i32, !dbg !8295
  %331 = call i32 @XSetTSOrigin(%struct._XDisplay* %321, %struct._XGC* %322, i32 %326, i32 %330), !dbg !8297
  %332 = load i8, i8* %11, align 1, !dbg !8298
  %333 = zext i8 %332 to i32, !dbg !8298
  switch i32 %333, label %496 [
    i32 0, label %334
    i32 1, label %415
  ], !dbg !8300

; <label>:334:                                    ; preds = %310
  %335 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8301
  %336 = load i64, i64* @g_wnd, align 8, !dbg !8304
  %337 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8305
  %338 = load i32, i32* %12, align 4, !dbg !8306
  %339 = load i32, i32* %13, align 4, !dbg !8307
  %340 = load i32, i32* %14, align 4, !dbg !8308
  %341 = load i32, i32* %15, align 4, !dbg !8309
  %342 = call i32 @XDrawArc(%struct._XDisplay* %335, i64 %336, %struct._XGC* %337, i32 %338, i32 %339, i32 %340, i32 %341, i32 0, i32 23040), !dbg !8310
  br label %343, !dbg !8311, !llvm.loop !8312

; <label>:343:                                    ; preds = %334
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %27, metadata !8314, metadata !416), !dbg !8316
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %28, metadata !8317, metadata !416), !dbg !8318
  %344 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8319
  %345 = icmp ne %struct._seamless_window* %344, null, !dbg !8319
  br i1 %345, label %347, label %346, !dbg !8322

; <label>:346:                                    ; preds = %343
  br label %402, !dbg !8323

; <label>:347:                                    ; preds = %343
  %348 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8325
  store %struct._seamless_window* %348, %struct._seamless_window** %27, align 8, !dbg !8328
  br label %349, !dbg !8329

; <label>:349:                                    ; preds = %394, %347
  %350 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !8330
  %351 = icmp ne %struct._seamless_window* %350, null, !dbg !8333
  br i1 %351, label %352, label %398, !dbg !8333

; <label>:352:                                    ; preds = %349
  %353 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !8334
  %354 = sext i16 %353 to i32, !dbg !8337
  %355 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !8338
  %356 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %355, i32 0, i32 4, !dbg !8339
  %357 = load i32, i32* %356, align 8, !dbg !8339
  %358 = sub nsw i32 %354, %357, !dbg !8340
  %359 = trunc i32 %358 to i16, !dbg !8337
  %360 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %28, i32 0, i32 0, !dbg !8341
  store i16 %359, i16* %360, align 2, !dbg !8342
  %361 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !8343
  %362 = sext i16 %361 to i32, !dbg !8344
  %363 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !8345
  %364 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %363, i32 0, i32 5, !dbg !8346
  %365 = load i32, i32* %364, align 4, !dbg !8346
  %366 = sub nsw i32 %362, %365, !dbg !8347
  %367 = trunc i32 %366 to i16, !dbg !8344
  %368 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %28, i32 0, i32 1, !dbg !8348
  store i16 %367, i16* %368, align 2, !dbg !8349
  %369 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !8350
  %370 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %28, i32 0, i32 2, !dbg !8351
  store i16 %369, i16* %370, align 2, !dbg !8352
  %371 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !8353
  %372 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %28, i32 0, i32 3, !dbg !8354
  store i16 %371, i16* %372, align 2, !dbg !8355
  %373 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8356
  %374 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8357
  %375 = call i32 @XSetClipRectangles(%struct._XDisplay* %373, %struct._XGC* %374, i32 0, i32 0, %struct.XRectangle* %28, i32 1, i32 3), !dbg !8358
  %376 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8359
  %377 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !8360
  %378 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %377, i32 0, i32 0, !dbg !8361
  %379 = load i64, i64* %378, align 8, !dbg !8361
  %380 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8362
  %381 = load i32, i32* %12, align 4, !dbg !8363
  %382 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !8364
  %383 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %382, i32 0, i32 4, !dbg !8365
  %384 = load i32, i32* %383, align 8, !dbg !8365
  %385 = sub nsw i32 %381, %384, !dbg !8366
  %386 = load i32, i32* %13, align 4, !dbg !8367
  %387 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !8368
  %388 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %387, i32 0, i32 5, !dbg !8369
  %389 = load i32, i32* %388, align 4, !dbg !8369
  %390 = sub nsw i32 %386, %389, !dbg !8370
  %391 = load i32, i32* %14, align 4, !dbg !8371
  %392 = load i32, i32* %15, align 4, !dbg !8372
  %393 = call i32 @XDrawArc(%struct._XDisplay* %376, i64 %379, %struct._XGC* %380, i32 %385, i32 %390, i32 %391, i32 %392, i32 0, i32 23040), !dbg !8373
  br label %394, !dbg !8375

; <label>:394:                                    ; preds = %352
  %395 = load %struct._seamless_window*, %struct._seamless_window** %27, align 8, !dbg !8376
  %396 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %395, i32 0, i32 20, !dbg !8378
  %397 = load %struct._seamless_window*, %struct._seamless_window** %396, align 8, !dbg !8378
  store %struct._seamless_window* %397, %struct._seamless_window** %27, align 8, !dbg !8379
  br label %349, !dbg !8380, !llvm.loop !8381

; <label>:398:                                    ; preds = %349
  %399 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8383
  %400 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8385
  %401 = call i32 @XSetClipRectangles(%struct._XDisplay* %399, %struct._XGC* %400, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !8386
  br label %402, !dbg !8387

; <label>:402:                                    ; preds = %398, %346
  %403 = load i32, i32* @g_ownbackstore, align 4, !dbg !8388
  %404 = icmp ne i32 %403, 0, !dbg !8388
  br i1 %404, label %405, label %414, !dbg !8388

; <label>:405:                                    ; preds = %402
  %406 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8391
  %407 = load i64, i64* @g_backstore, align 8, !dbg !8393
  %408 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8394
  %409 = load i32, i32* %12, align 4, !dbg !8395
  %410 = load i32, i32* %13, align 4, !dbg !8396
  %411 = load i32, i32* %14, align 4, !dbg !8397
  %412 = load i32, i32* %15, align 4, !dbg !8398
  %413 = call i32 @XDrawArc(%struct._XDisplay* %406, i64 %407, %struct._XGC* %408, i32 %409, i32 %410, i32 %411, i32 %412, i32 0, i32 23040), !dbg !8399
  br label %414, !dbg !8399

; <label>:414:                                    ; preds = %405, %402
  br label %496, !dbg !8400

; <label>:415:                                    ; preds = %310
  %416 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8402
  %417 = load i64, i64* @g_wnd, align 8, !dbg !8404
  %418 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8405
  %419 = load i32, i32* %12, align 4, !dbg !8406
  %420 = load i32, i32* %13, align 4, !dbg !8407
  %421 = load i32, i32* %14, align 4, !dbg !8408
  %422 = load i32, i32* %15, align 4, !dbg !8409
  %423 = call i32 @XFillArc(%struct._XDisplay* %416, i64 %417, %struct._XGC* %418, i32 %419, i32 %420, i32 %421, i32 %422, i32 0, i32 23040), !dbg !8410
  br label %424, !dbg !8411, !llvm.loop !8412

; <label>:424:                                    ; preds = %415
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %29, metadata !8414, metadata !416), !dbg !8416
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %30, metadata !8417, metadata !416), !dbg !8418
  %425 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8419
  %426 = icmp ne %struct._seamless_window* %425, null, !dbg !8419
  br i1 %426, label %428, label %427, !dbg !8422

; <label>:427:                                    ; preds = %424
  br label %483, !dbg !8423

; <label>:428:                                    ; preds = %424
  %429 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8425
  store %struct._seamless_window* %429, %struct._seamless_window** %29, align 8, !dbg !8428
  br label %430, !dbg !8429

; <label>:430:                                    ; preds = %475, %428
  %431 = load %struct._seamless_window*, %struct._seamless_window** %29, align 8, !dbg !8430
  %432 = icmp ne %struct._seamless_window* %431, null, !dbg !8433
  br i1 %432, label %433, label %479, !dbg !8433

; <label>:433:                                    ; preds = %430
  %434 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !8434
  %435 = sext i16 %434 to i32, !dbg !8437
  %436 = load %struct._seamless_window*, %struct._seamless_window** %29, align 8, !dbg !8438
  %437 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %436, i32 0, i32 4, !dbg !8439
  %438 = load i32, i32* %437, align 8, !dbg !8439
  %439 = sub nsw i32 %435, %438, !dbg !8440
  %440 = trunc i32 %439 to i16, !dbg !8437
  %441 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %30, i32 0, i32 0, !dbg !8441
  store i16 %440, i16* %441, align 2, !dbg !8442
  %442 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !8443
  %443 = sext i16 %442 to i32, !dbg !8444
  %444 = load %struct._seamless_window*, %struct._seamless_window** %29, align 8, !dbg !8445
  %445 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %444, i32 0, i32 5, !dbg !8446
  %446 = load i32, i32* %445, align 4, !dbg !8446
  %447 = sub nsw i32 %443, %446, !dbg !8447
  %448 = trunc i32 %447 to i16, !dbg !8444
  %449 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %30, i32 0, i32 1, !dbg !8448
  store i16 %448, i16* %449, align 2, !dbg !8449
  %450 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !8450
  %451 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %30, i32 0, i32 2, !dbg !8451
  store i16 %450, i16* %451, align 2, !dbg !8452
  %452 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !8453
  %453 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %30, i32 0, i32 3, !dbg !8454
  store i16 %452, i16* %453, align 2, !dbg !8455
  %454 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8456
  %455 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8457
  %456 = call i32 @XSetClipRectangles(%struct._XDisplay* %454, %struct._XGC* %455, i32 0, i32 0, %struct.XRectangle* %30, i32 1, i32 3), !dbg !8458
  %457 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8459
  %458 = load %struct._seamless_window*, %struct._seamless_window** %29, align 8, !dbg !8460
  %459 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %458, i32 0, i32 0, !dbg !8461
  %460 = load i64, i64* %459, align 8, !dbg !8461
  %461 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8462
  %462 = load i32, i32* %12, align 4, !dbg !8463
  %463 = load %struct._seamless_window*, %struct._seamless_window** %29, align 8, !dbg !8464
  %464 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %463, i32 0, i32 4, !dbg !8465
  %465 = load i32, i32* %464, align 8, !dbg !8465
  %466 = sub nsw i32 %462, %465, !dbg !8466
  %467 = load i32, i32* %13, align 4, !dbg !8467
  %468 = load %struct._seamless_window*, %struct._seamless_window** %29, align 8, !dbg !8468
  %469 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %468, i32 0, i32 5, !dbg !8469
  %470 = load i32, i32* %469, align 4, !dbg !8469
  %471 = sub nsw i32 %467, %470, !dbg !8470
  %472 = load i32, i32* %14, align 4, !dbg !8471
  %473 = load i32, i32* %15, align 4, !dbg !8472
  %474 = call i32 @XFillArc(%struct._XDisplay* %457, i64 %460, %struct._XGC* %461, i32 %466, i32 %471, i32 %472, i32 %473, i32 0, i32 23040), !dbg !8473
  br label %475, !dbg !8475

; <label>:475:                                    ; preds = %433
  %476 = load %struct._seamless_window*, %struct._seamless_window** %29, align 8, !dbg !8476
  %477 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %476, i32 0, i32 20, !dbg !8478
  %478 = load %struct._seamless_window*, %struct._seamless_window** %477, align 8, !dbg !8478
  store %struct._seamless_window* %478, %struct._seamless_window** %29, align 8, !dbg !8479
  br label %430, !dbg !8480, !llvm.loop !8481

; <label>:479:                                    ; preds = %430
  %480 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8483
  %481 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8485
  %482 = call i32 @XSetClipRectangles(%struct._XDisplay* %480, %struct._XGC* %481, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !8486
  br label %483, !dbg !8487

; <label>:483:                                    ; preds = %479, %427
  %484 = load i32, i32* @g_ownbackstore, align 4, !dbg !8488
  %485 = icmp ne i32 %484, 0, !dbg !8488
  br i1 %485, label %486, label %495, !dbg !8488

; <label>:486:                                    ; preds = %483
  %487 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8491
  %488 = load i64, i64* @g_backstore, align 8, !dbg !8493
  %489 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8494
  %490 = load i32, i32* %12, align 4, !dbg !8495
  %491 = load i32, i32* %13, align 4, !dbg !8496
  %492 = load i32, i32* %14, align 4, !dbg !8497
  %493 = load i32, i32* %15, align 4, !dbg !8498
  %494 = call i32 @XFillArc(%struct._XDisplay* %487, i64 %488, %struct._XGC* %489, i32 %490, i32 %491, i32 %492, i32 %493, i32 0, i32 23040), !dbg !8499
  br label %495, !dbg !8499

; <label>:495:                                    ; preds = %486, %483
  br label %496, !dbg !8500

; <label>:496:                                    ; preds = %310, %495, %414
  %497 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8502
  %498 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8503
  %499 = call i32 @XSetFillStyle(%struct._XDisplay* %497, %struct._XGC* %498, i32 0), !dbg !8504
  %500 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8505
  %501 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8506
  %502 = call i32 @XSetTSOrigin(%struct._XDisplay* %500, %struct._XGC* %501, i32 0, i32 0), !dbg !8507
  %503 = load i64, i64* %22, align 8, !dbg !8508
  %504 = inttoptr i64 %503 to i8*, !dbg !8509
  call void @ui_destroy_glyph(i8* %504), !dbg !8510
  br label %1233, !dbg !8511

; <label>:505:                                    ; preds = %62
  %506 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8512
  %507 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %506, i32 0, i32 4, !dbg !8514
  %508 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %507, align 8, !dbg !8514
  %509 = icmp eq %struct._BRUSHDATA* %508, null, !dbg !8515
  br i1 %509, label %510, label %773, !dbg !8516

; <label>:510:                                    ; preds = %505
  store i8 0, i8* %20, align 1, !dbg !8517
  br label %511, !dbg !8520

; <label>:511:                                    ; preds = %527, %510
  %512 = load i8, i8* %20, align 1, !dbg !8521
  %513 = zext i8 %512 to i32, !dbg !8521
  %514 = icmp ne i32 %513, 8, !dbg !8524
  br i1 %514, label %515, label %530, !dbg !8525

; <label>:515:                                    ; preds = %511
  %516 = load i8, i8* %20, align 1, !dbg !8526
  %517 = zext i8 %516 to i64, !dbg !8527
  %518 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8527
  %519 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %518, i32 0, i32 3, !dbg !8528
  %520 = getelementptr inbounds [8 x i8], [8 x i8]* %519, i64 0, i64 %517, !dbg !8527
  %521 = load i8, i8* %520, align 1, !dbg !8527
  %522 = load i8, i8* %20, align 1, !dbg !8529
  %523 = zext i8 %522 to i32, !dbg !8529
  %524 = sub nsw i32 7, %523, !dbg !8530
  %525 = sext i32 %524 to i64, !dbg !8531
  %526 = getelementptr inbounds [8 x i8], [8 x i8]* %21, i64 0, i64 %525, !dbg !8531
  store i8 %521, i8* %526, align 1, !dbg !8532
  br label %527, !dbg !8531

; <label>:527:                                    ; preds = %515
  %528 = load i8, i8* %20, align 1, !dbg !8533
  %529 = add i8 %528, 1, !dbg !8533
  store i8 %529, i8* %20, align 1, !dbg !8533
  br label %511, !dbg !8535, !llvm.loop !8536

; <label>:530:                                    ; preds = %511
  %531 = getelementptr inbounds [8 x i8], [8 x i8]* %21, i32 0, i32 0, !dbg !8538
  %532 = call i8* @ui_create_glyph(i32 8, i32 8, i8* %531), !dbg !8539
  %533 = ptrtoint i8* %532 to i64, !dbg !8540
  store i64 %533, i64* %22, align 8, !dbg !8541
  %534 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8542
  %535 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8543
  %536 = load i32, i32* @g_server_depth, align 4, !dbg !8544
  %537 = icmp ne i32 %536, 8, !dbg !8545
  br i1 %537, label %538, label %541, !dbg !8544

; <label>:538:                                    ; preds = %530
  %539 = load i32, i32* %17, align 4, !dbg !8546
  %540 = call i32 @translate_colour(i32 %539), !dbg !8548
  br label %554, !dbg !8549

; <label>:541:                                    ; preds = %530
  %542 = load i32, i32* @g_owncolmap, align 4, !dbg !8550
  %543 = icmp ne i32 %542, 0, !dbg !8550
  br i1 %543, label %544, label %546, !dbg !8550

; <label>:544:                                    ; preds = %541
  %545 = load i32, i32* %17, align 4, !dbg !8552
  br label %552, !dbg !8554

; <label>:546:                                    ; preds = %541
  %547 = load i32, i32* %17, align 4, !dbg !8555
  %548 = zext i32 %547 to i64, !dbg !8557
  %549 = load i32*, i32** @g_colmap, align 8, !dbg !8557
  %550 = getelementptr inbounds i32, i32* %549, i64 %548, !dbg !8557
  %551 = load i32, i32* %550, align 4, !dbg !8557
  br label %552, !dbg !8558

; <label>:552:                                    ; preds = %546, %544
  %553 = phi i32 [ %545, %544 ], [ %551, %546 ], !dbg !8559
  br label %554, !dbg !8561

; <label>:554:                                    ; preds = %552, %538
  %555 = phi i32 [ %540, %538 ], [ %553, %552 ], !dbg !8562
  %556 = zext i32 %555 to i64, !dbg !8564
  %557 = call i32 @XSetForeground(%struct._XDisplay* %534, %struct._XGC* %535, i64 %556), !dbg !8565
  %558 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8566
  %559 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8567
  %560 = load i32, i32* @g_server_depth, align 4, !dbg !8568
  %561 = icmp ne i32 %560, 8, !dbg !8569
  br i1 %561, label %562, label %565, !dbg !8568

; <label>:562:                                    ; preds = %554
  %563 = load i32, i32* %18, align 4, !dbg !8570
  %564 = call i32 @translate_colour(i32 %563), !dbg !8571
  br label %578, !dbg !8572

; <label>:565:                                    ; preds = %554
  %566 = load i32, i32* @g_owncolmap, align 4, !dbg !8573
  %567 = icmp ne i32 %566, 0, !dbg !8573
  br i1 %567, label %568, label %570, !dbg !8573

; <label>:568:                                    ; preds = %565
  %569 = load i32, i32* %18, align 4, !dbg !8574
  br label %576, !dbg !8575

; <label>:570:                                    ; preds = %565
  %571 = load i32, i32* %18, align 4, !dbg !8576
  %572 = zext i32 %571 to i64, !dbg !8577
  %573 = load i32*, i32** @g_colmap, align 8, !dbg !8577
  %574 = getelementptr inbounds i32, i32* %573, i64 %572, !dbg !8577
  %575 = load i32, i32* %574, align 4, !dbg !8577
  br label %576, !dbg !8578

; <label>:576:                                    ; preds = %570, %568
  %577 = phi i32 [ %569, %568 ], [ %575, %570 ], !dbg !8579
  br label %578, !dbg !8580

; <label>:578:                                    ; preds = %576, %562
  %579 = phi i32 [ %564, %562 ], [ %577, %576 ], !dbg !8581
  %580 = zext i32 %579 to i64, !dbg !8582
  %581 = call i32 @XSetBackground(%struct._XDisplay* %558, %struct._XGC* %559, i64 %580), !dbg !8583
  %582 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8584
  %583 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8585
  %584 = call i32 @XSetFillStyle(%struct._XDisplay* %582, %struct._XGC* %583, i32 3), !dbg !8586
  %585 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8587
  %586 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8588
  %587 = load i64, i64* %22, align 8, !dbg !8589
  %588 = call i32 @XSetStipple(%struct._XDisplay* %585, %struct._XGC* %586, i64 %587), !dbg !8590
  %589 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8591
  %590 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8592
  %591 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8593
  %592 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %591, i32 0, i32 0, !dbg !8594
  %593 = load i8, i8* %592, align 8, !dbg !8594
  %594 = zext i8 %593 to i32, !dbg !8593
  %595 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8595
  %596 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %595, i32 0, i32 1, !dbg !8596
  %597 = load i8, i8* %596, align 1, !dbg !8596
  %598 = zext i8 %597 to i32, !dbg !8595
  %599 = call i32 @XSetTSOrigin(%struct._XDisplay* %589, %struct._XGC* %590, i32 %594, i32 %598), !dbg !8597
  %600 = load i8, i8* %11, align 1, !dbg !8598
  %601 = zext i8 %600 to i32, !dbg !8598
  switch i32 %601, label %764 [
    i32 0, label %602
    i32 1, label %683
  ], !dbg !8600

; <label>:602:                                    ; preds = %578
  %603 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8601
  %604 = load i64, i64* @g_wnd, align 8, !dbg !8604
  %605 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8605
  %606 = load i32, i32* %12, align 4, !dbg !8606
  %607 = load i32, i32* %13, align 4, !dbg !8607
  %608 = load i32, i32* %14, align 4, !dbg !8608
  %609 = load i32, i32* %15, align 4, !dbg !8609
  %610 = call i32 @XDrawArc(%struct._XDisplay* %603, i64 %604, %struct._XGC* %605, i32 %606, i32 %607, i32 %608, i32 %609, i32 0, i32 23040), !dbg !8610
  br label %611, !dbg !8611, !llvm.loop !8612

; <label>:611:                                    ; preds = %602
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %31, metadata !8614, metadata !416), !dbg !8616
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %32, metadata !8617, metadata !416), !dbg !8618
  %612 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8619
  %613 = icmp ne %struct._seamless_window* %612, null, !dbg !8619
  br i1 %613, label %615, label %614, !dbg !8622

; <label>:614:                                    ; preds = %611
  br label %670, !dbg !8623

; <label>:615:                                    ; preds = %611
  %616 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8625
  store %struct._seamless_window* %616, %struct._seamless_window** %31, align 8, !dbg !8628
  br label %617, !dbg !8629

; <label>:617:                                    ; preds = %662, %615
  %618 = load %struct._seamless_window*, %struct._seamless_window** %31, align 8, !dbg !8630
  %619 = icmp ne %struct._seamless_window* %618, null, !dbg !8633
  br i1 %619, label %620, label %666, !dbg !8633

; <label>:620:                                    ; preds = %617
  %621 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !8634
  %622 = sext i16 %621 to i32, !dbg !8637
  %623 = load %struct._seamless_window*, %struct._seamless_window** %31, align 8, !dbg !8638
  %624 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %623, i32 0, i32 4, !dbg !8639
  %625 = load i32, i32* %624, align 8, !dbg !8639
  %626 = sub nsw i32 %622, %625, !dbg !8640
  %627 = trunc i32 %626 to i16, !dbg !8637
  %628 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %32, i32 0, i32 0, !dbg !8641
  store i16 %627, i16* %628, align 2, !dbg !8642
  %629 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !8643
  %630 = sext i16 %629 to i32, !dbg !8644
  %631 = load %struct._seamless_window*, %struct._seamless_window** %31, align 8, !dbg !8645
  %632 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %631, i32 0, i32 5, !dbg !8646
  %633 = load i32, i32* %632, align 4, !dbg !8646
  %634 = sub nsw i32 %630, %633, !dbg !8647
  %635 = trunc i32 %634 to i16, !dbg !8644
  %636 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %32, i32 0, i32 1, !dbg !8648
  store i16 %635, i16* %636, align 2, !dbg !8649
  %637 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !8650
  %638 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %32, i32 0, i32 2, !dbg !8651
  store i16 %637, i16* %638, align 2, !dbg !8652
  %639 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !8653
  %640 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %32, i32 0, i32 3, !dbg !8654
  store i16 %639, i16* %640, align 2, !dbg !8655
  %641 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8656
  %642 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8657
  %643 = call i32 @XSetClipRectangles(%struct._XDisplay* %641, %struct._XGC* %642, i32 0, i32 0, %struct.XRectangle* %32, i32 1, i32 3), !dbg !8658
  %644 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8659
  %645 = load %struct._seamless_window*, %struct._seamless_window** %31, align 8, !dbg !8660
  %646 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %645, i32 0, i32 0, !dbg !8661
  %647 = load i64, i64* %646, align 8, !dbg !8661
  %648 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8662
  %649 = load i32, i32* %12, align 4, !dbg !8663
  %650 = load %struct._seamless_window*, %struct._seamless_window** %31, align 8, !dbg !8664
  %651 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %650, i32 0, i32 4, !dbg !8665
  %652 = load i32, i32* %651, align 8, !dbg !8665
  %653 = sub nsw i32 %649, %652, !dbg !8666
  %654 = load i32, i32* %13, align 4, !dbg !8667
  %655 = load %struct._seamless_window*, %struct._seamless_window** %31, align 8, !dbg !8668
  %656 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %655, i32 0, i32 5, !dbg !8669
  %657 = load i32, i32* %656, align 4, !dbg !8669
  %658 = sub nsw i32 %654, %657, !dbg !8670
  %659 = load i32, i32* %14, align 4, !dbg !8671
  %660 = load i32, i32* %15, align 4, !dbg !8672
  %661 = call i32 @XDrawArc(%struct._XDisplay* %644, i64 %647, %struct._XGC* %648, i32 %653, i32 %658, i32 %659, i32 %660, i32 0, i32 23040), !dbg !8673
  br label %662, !dbg !8675

; <label>:662:                                    ; preds = %620
  %663 = load %struct._seamless_window*, %struct._seamless_window** %31, align 8, !dbg !8676
  %664 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %663, i32 0, i32 20, !dbg !8678
  %665 = load %struct._seamless_window*, %struct._seamless_window** %664, align 8, !dbg !8678
  store %struct._seamless_window* %665, %struct._seamless_window** %31, align 8, !dbg !8679
  br label %617, !dbg !8680, !llvm.loop !8681

; <label>:666:                                    ; preds = %617
  %667 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8683
  %668 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8685
  %669 = call i32 @XSetClipRectangles(%struct._XDisplay* %667, %struct._XGC* %668, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !8686
  br label %670, !dbg !8687

; <label>:670:                                    ; preds = %666, %614
  %671 = load i32, i32* @g_ownbackstore, align 4, !dbg !8688
  %672 = icmp ne i32 %671, 0, !dbg !8688
  br i1 %672, label %673, label %682, !dbg !8688

; <label>:673:                                    ; preds = %670
  %674 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8691
  %675 = load i64, i64* @g_backstore, align 8, !dbg !8693
  %676 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8694
  %677 = load i32, i32* %12, align 4, !dbg !8695
  %678 = load i32, i32* %13, align 4, !dbg !8696
  %679 = load i32, i32* %14, align 4, !dbg !8697
  %680 = load i32, i32* %15, align 4, !dbg !8698
  %681 = call i32 @XDrawArc(%struct._XDisplay* %674, i64 %675, %struct._XGC* %676, i32 %677, i32 %678, i32 %679, i32 %680, i32 0, i32 23040), !dbg !8699
  br label %682, !dbg !8699

; <label>:682:                                    ; preds = %673, %670
  br label %764, !dbg !8700

; <label>:683:                                    ; preds = %578
  %684 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8702
  %685 = load i64, i64* @g_wnd, align 8, !dbg !8704
  %686 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8705
  %687 = load i32, i32* %12, align 4, !dbg !8706
  %688 = load i32, i32* %13, align 4, !dbg !8707
  %689 = load i32, i32* %14, align 4, !dbg !8708
  %690 = load i32, i32* %15, align 4, !dbg !8709
  %691 = call i32 @XFillArc(%struct._XDisplay* %684, i64 %685, %struct._XGC* %686, i32 %687, i32 %688, i32 %689, i32 %690, i32 0, i32 23040), !dbg !8710
  br label %692, !dbg !8711, !llvm.loop !8712

; <label>:692:                                    ; preds = %683
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %33, metadata !8714, metadata !416), !dbg !8716
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %34, metadata !8717, metadata !416), !dbg !8718
  %693 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8719
  %694 = icmp ne %struct._seamless_window* %693, null, !dbg !8719
  br i1 %694, label %696, label %695, !dbg !8722

; <label>:695:                                    ; preds = %692
  br label %751, !dbg !8723

; <label>:696:                                    ; preds = %692
  %697 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8725
  store %struct._seamless_window* %697, %struct._seamless_window** %33, align 8, !dbg !8728
  br label %698, !dbg !8729

; <label>:698:                                    ; preds = %743, %696
  %699 = load %struct._seamless_window*, %struct._seamless_window** %33, align 8, !dbg !8730
  %700 = icmp ne %struct._seamless_window* %699, null, !dbg !8733
  br i1 %700, label %701, label %747, !dbg !8733

; <label>:701:                                    ; preds = %698
  %702 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !8734
  %703 = sext i16 %702 to i32, !dbg !8737
  %704 = load %struct._seamless_window*, %struct._seamless_window** %33, align 8, !dbg !8738
  %705 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %704, i32 0, i32 4, !dbg !8739
  %706 = load i32, i32* %705, align 8, !dbg !8739
  %707 = sub nsw i32 %703, %706, !dbg !8740
  %708 = trunc i32 %707 to i16, !dbg !8737
  %709 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %34, i32 0, i32 0, !dbg !8741
  store i16 %708, i16* %709, align 2, !dbg !8742
  %710 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !8743
  %711 = sext i16 %710 to i32, !dbg !8744
  %712 = load %struct._seamless_window*, %struct._seamless_window** %33, align 8, !dbg !8745
  %713 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %712, i32 0, i32 5, !dbg !8746
  %714 = load i32, i32* %713, align 4, !dbg !8746
  %715 = sub nsw i32 %711, %714, !dbg !8747
  %716 = trunc i32 %715 to i16, !dbg !8744
  %717 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %34, i32 0, i32 1, !dbg !8748
  store i16 %716, i16* %717, align 2, !dbg !8749
  %718 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !8750
  %719 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %34, i32 0, i32 2, !dbg !8751
  store i16 %718, i16* %719, align 2, !dbg !8752
  %720 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !8753
  %721 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %34, i32 0, i32 3, !dbg !8754
  store i16 %720, i16* %721, align 2, !dbg !8755
  %722 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8756
  %723 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8757
  %724 = call i32 @XSetClipRectangles(%struct._XDisplay* %722, %struct._XGC* %723, i32 0, i32 0, %struct.XRectangle* %34, i32 1, i32 3), !dbg !8758
  %725 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8759
  %726 = load %struct._seamless_window*, %struct._seamless_window** %33, align 8, !dbg !8760
  %727 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %726, i32 0, i32 0, !dbg !8761
  %728 = load i64, i64* %727, align 8, !dbg !8761
  %729 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8762
  %730 = load i32, i32* %12, align 4, !dbg !8763
  %731 = load %struct._seamless_window*, %struct._seamless_window** %33, align 8, !dbg !8764
  %732 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %731, i32 0, i32 4, !dbg !8765
  %733 = load i32, i32* %732, align 8, !dbg !8765
  %734 = sub nsw i32 %730, %733, !dbg !8766
  %735 = load i32, i32* %13, align 4, !dbg !8767
  %736 = load %struct._seamless_window*, %struct._seamless_window** %33, align 8, !dbg !8768
  %737 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %736, i32 0, i32 5, !dbg !8769
  %738 = load i32, i32* %737, align 4, !dbg !8769
  %739 = sub nsw i32 %735, %738, !dbg !8770
  %740 = load i32, i32* %14, align 4, !dbg !8771
  %741 = load i32, i32* %15, align 4, !dbg !8772
  %742 = call i32 @XFillArc(%struct._XDisplay* %725, i64 %728, %struct._XGC* %729, i32 %734, i32 %739, i32 %740, i32 %741, i32 0, i32 23040), !dbg !8773
  br label %743, !dbg !8775

; <label>:743:                                    ; preds = %701
  %744 = load %struct._seamless_window*, %struct._seamless_window** %33, align 8, !dbg !8776
  %745 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %744, i32 0, i32 20, !dbg !8778
  %746 = load %struct._seamless_window*, %struct._seamless_window** %745, align 8, !dbg !8778
  store %struct._seamless_window* %746, %struct._seamless_window** %33, align 8, !dbg !8779
  br label %698, !dbg !8780, !llvm.loop !8781

; <label>:747:                                    ; preds = %698
  %748 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8783
  %749 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8785
  %750 = call i32 @XSetClipRectangles(%struct._XDisplay* %748, %struct._XGC* %749, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !8786
  br label %751, !dbg !8787

; <label>:751:                                    ; preds = %747, %695
  %752 = load i32, i32* @g_ownbackstore, align 4, !dbg !8788
  %753 = icmp ne i32 %752, 0, !dbg !8788
  br i1 %753, label %754, label %763, !dbg !8788

; <label>:754:                                    ; preds = %751
  %755 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8791
  %756 = load i64, i64* @g_backstore, align 8, !dbg !8793
  %757 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8794
  %758 = load i32, i32* %12, align 4, !dbg !8795
  %759 = load i32, i32* %13, align 4, !dbg !8796
  %760 = load i32, i32* %14, align 4, !dbg !8797
  %761 = load i32, i32* %15, align 4, !dbg !8798
  %762 = call i32 @XFillArc(%struct._XDisplay* %755, i64 %756, %struct._XGC* %757, i32 %758, i32 %759, i32 %760, i32 %761, i32 0, i32 23040), !dbg !8799
  br label %763, !dbg !8799

; <label>:763:                                    ; preds = %754, %751
  br label %764, !dbg !8800

; <label>:764:                                    ; preds = %578, %763, %682
  %765 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8802
  %766 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8803
  %767 = call i32 @XSetFillStyle(%struct._XDisplay* %765, %struct._XGC* %766, i32 0), !dbg !8804
  %768 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8805
  %769 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8806
  %770 = call i32 @XSetTSOrigin(%struct._XDisplay* %768, %struct._XGC* %769, i32 0, i32 0), !dbg !8807
  %771 = load i64, i64* %22, align 8, !dbg !8808
  %772 = inttoptr i64 %771 to i8*, !dbg !8809
  call void @ui_destroy_glyph(i8* %772), !dbg !8810
  br label %1227, !dbg !8811

; <label>:773:                                    ; preds = %505
  %774 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8812
  %775 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %774, i32 0, i32 4, !dbg !8814
  %776 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %775, align 8, !dbg !8814
  %777 = getelementptr inbounds %struct._BRUSHDATA, %struct._BRUSHDATA* %776, i32 0, i32 0, !dbg !8815
  %778 = load i32, i32* %777, align 8, !dbg !8815
  %779 = icmp ugt i32 %778, 1, !dbg !8816
  br i1 %779, label %780, label %979, !dbg !8817

; <label>:780:                                    ; preds = %773
  %781 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8818
  %782 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %781, i32 0, i32 4, !dbg !8820
  %783 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %782, align 8, !dbg !8820
  %784 = getelementptr inbounds %struct._BRUSHDATA, %struct._BRUSHDATA* %783, i32 0, i32 2, !dbg !8821
  %785 = load i8*, i8** %784, align 8, !dbg !8821
  %786 = call i8* @ui_create_bitmap(i32 8, i32 8, i8* %785), !dbg !8822
  %787 = ptrtoint i8* %786 to i64, !dbg !8823
  store i64 %787, i64* %22, align 8, !dbg !8824
  %788 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8825
  %789 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8826
  %790 = call i32 @XSetFillStyle(%struct._XDisplay* %788, %struct._XGC* %789, i32 1), !dbg !8827
  %791 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8828
  %792 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8829
  %793 = load i64, i64* %22, align 8, !dbg !8830
  %794 = call i32 @XSetTile(%struct._XDisplay* %791, %struct._XGC* %792, i64 %793), !dbg !8831
  %795 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8832
  %796 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8833
  %797 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8834
  %798 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %797, i32 0, i32 0, !dbg !8835
  %799 = load i8, i8* %798, align 8, !dbg !8835
  %800 = zext i8 %799 to i32, !dbg !8834
  %801 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !8836
  %802 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %801, i32 0, i32 1, !dbg !8837
  %803 = load i8, i8* %802, align 1, !dbg !8837
  %804 = zext i8 %803 to i32, !dbg !8836
  %805 = call i32 @XSetTSOrigin(%struct._XDisplay* %795, %struct._XGC* %796, i32 %800, i32 %804), !dbg !8838
  %806 = load i8, i8* %11, align 1, !dbg !8839
  %807 = zext i8 %806 to i32, !dbg !8839
  switch i32 %807, label %970 [
    i32 0, label %808
    i32 1, label %889
  ], !dbg !8841

; <label>:808:                                    ; preds = %780
  %809 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8842
  %810 = load i64, i64* @g_wnd, align 8, !dbg !8845
  %811 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8846
  %812 = load i32, i32* %12, align 4, !dbg !8847
  %813 = load i32, i32* %13, align 4, !dbg !8848
  %814 = load i32, i32* %14, align 4, !dbg !8849
  %815 = load i32, i32* %15, align 4, !dbg !8850
  %816 = call i32 @XDrawArc(%struct._XDisplay* %809, i64 %810, %struct._XGC* %811, i32 %812, i32 %813, i32 %814, i32 %815, i32 0, i32 23040), !dbg !8851
  br label %817, !dbg !8852, !llvm.loop !8853

; <label>:817:                                    ; preds = %808
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %35, metadata !8855, metadata !416), !dbg !8857
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %36, metadata !8858, metadata !416), !dbg !8859
  %818 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8860
  %819 = icmp ne %struct._seamless_window* %818, null, !dbg !8860
  br i1 %819, label %821, label %820, !dbg !8863

; <label>:820:                                    ; preds = %817
  br label %876, !dbg !8864

; <label>:821:                                    ; preds = %817
  %822 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8866
  store %struct._seamless_window* %822, %struct._seamless_window** %35, align 8, !dbg !8869
  br label %823, !dbg !8870

; <label>:823:                                    ; preds = %868, %821
  %824 = load %struct._seamless_window*, %struct._seamless_window** %35, align 8, !dbg !8871
  %825 = icmp ne %struct._seamless_window* %824, null, !dbg !8874
  br i1 %825, label %826, label %872, !dbg !8874

; <label>:826:                                    ; preds = %823
  %827 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !8875
  %828 = sext i16 %827 to i32, !dbg !8878
  %829 = load %struct._seamless_window*, %struct._seamless_window** %35, align 8, !dbg !8879
  %830 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %829, i32 0, i32 4, !dbg !8880
  %831 = load i32, i32* %830, align 8, !dbg !8880
  %832 = sub nsw i32 %828, %831, !dbg !8881
  %833 = trunc i32 %832 to i16, !dbg !8878
  %834 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %36, i32 0, i32 0, !dbg !8882
  store i16 %833, i16* %834, align 2, !dbg !8883
  %835 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !8884
  %836 = sext i16 %835 to i32, !dbg !8885
  %837 = load %struct._seamless_window*, %struct._seamless_window** %35, align 8, !dbg !8886
  %838 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %837, i32 0, i32 5, !dbg !8887
  %839 = load i32, i32* %838, align 4, !dbg !8887
  %840 = sub nsw i32 %836, %839, !dbg !8888
  %841 = trunc i32 %840 to i16, !dbg !8885
  %842 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %36, i32 0, i32 1, !dbg !8889
  store i16 %841, i16* %842, align 2, !dbg !8890
  %843 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !8891
  %844 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %36, i32 0, i32 2, !dbg !8892
  store i16 %843, i16* %844, align 2, !dbg !8893
  %845 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !8894
  %846 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %36, i32 0, i32 3, !dbg !8895
  store i16 %845, i16* %846, align 2, !dbg !8896
  %847 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8897
  %848 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8898
  %849 = call i32 @XSetClipRectangles(%struct._XDisplay* %847, %struct._XGC* %848, i32 0, i32 0, %struct.XRectangle* %36, i32 1, i32 3), !dbg !8899
  %850 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8900
  %851 = load %struct._seamless_window*, %struct._seamless_window** %35, align 8, !dbg !8901
  %852 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %851, i32 0, i32 0, !dbg !8902
  %853 = load i64, i64* %852, align 8, !dbg !8902
  %854 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8903
  %855 = load i32, i32* %12, align 4, !dbg !8904
  %856 = load %struct._seamless_window*, %struct._seamless_window** %35, align 8, !dbg !8905
  %857 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %856, i32 0, i32 4, !dbg !8906
  %858 = load i32, i32* %857, align 8, !dbg !8906
  %859 = sub nsw i32 %855, %858, !dbg !8907
  %860 = load i32, i32* %13, align 4, !dbg !8908
  %861 = load %struct._seamless_window*, %struct._seamless_window** %35, align 8, !dbg !8909
  %862 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %861, i32 0, i32 5, !dbg !8910
  %863 = load i32, i32* %862, align 4, !dbg !8910
  %864 = sub nsw i32 %860, %863, !dbg !8911
  %865 = load i32, i32* %14, align 4, !dbg !8912
  %866 = load i32, i32* %15, align 4, !dbg !8913
  %867 = call i32 @XDrawArc(%struct._XDisplay* %850, i64 %853, %struct._XGC* %854, i32 %859, i32 %864, i32 %865, i32 %866, i32 0, i32 23040), !dbg !8914
  br label %868, !dbg !8916

; <label>:868:                                    ; preds = %826
  %869 = load %struct._seamless_window*, %struct._seamless_window** %35, align 8, !dbg !8917
  %870 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %869, i32 0, i32 20, !dbg !8919
  %871 = load %struct._seamless_window*, %struct._seamless_window** %870, align 8, !dbg !8919
  store %struct._seamless_window* %871, %struct._seamless_window** %35, align 8, !dbg !8920
  br label %823, !dbg !8921, !llvm.loop !8922

; <label>:872:                                    ; preds = %823
  %873 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8924
  %874 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8926
  %875 = call i32 @XSetClipRectangles(%struct._XDisplay* %873, %struct._XGC* %874, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !8927
  br label %876, !dbg !8928

; <label>:876:                                    ; preds = %872, %820
  %877 = load i32, i32* @g_ownbackstore, align 4, !dbg !8929
  %878 = icmp ne i32 %877, 0, !dbg !8929
  br i1 %878, label %879, label %888, !dbg !8929

; <label>:879:                                    ; preds = %876
  %880 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8932
  %881 = load i64, i64* @g_backstore, align 8, !dbg !8934
  %882 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8935
  %883 = load i32, i32* %12, align 4, !dbg !8936
  %884 = load i32, i32* %13, align 4, !dbg !8937
  %885 = load i32, i32* %14, align 4, !dbg !8938
  %886 = load i32, i32* %15, align 4, !dbg !8939
  %887 = call i32 @XDrawArc(%struct._XDisplay* %880, i64 %881, %struct._XGC* %882, i32 %883, i32 %884, i32 %885, i32 %886, i32 0, i32 23040), !dbg !8940
  br label %888, !dbg !8940

; <label>:888:                                    ; preds = %879, %876
  br label %970, !dbg !8941

; <label>:889:                                    ; preds = %780
  %890 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8943
  %891 = load i64, i64* @g_wnd, align 8, !dbg !8945
  %892 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8946
  %893 = load i32, i32* %12, align 4, !dbg !8947
  %894 = load i32, i32* %13, align 4, !dbg !8948
  %895 = load i32, i32* %14, align 4, !dbg !8949
  %896 = load i32, i32* %15, align 4, !dbg !8950
  %897 = call i32 @XFillArc(%struct._XDisplay* %890, i64 %891, %struct._XGC* %892, i32 %893, i32 %894, i32 %895, i32 %896, i32 0, i32 23040), !dbg !8951
  br label %898, !dbg !8952, !llvm.loop !8953

; <label>:898:                                    ; preds = %889
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %37, metadata !8955, metadata !416), !dbg !8957
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %38, metadata !8958, metadata !416), !dbg !8959
  %899 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8960
  %900 = icmp ne %struct._seamless_window* %899, null, !dbg !8960
  br i1 %900, label %902, label %901, !dbg !8963

; <label>:901:                                    ; preds = %898
  br label %957, !dbg !8964

; <label>:902:                                    ; preds = %898
  %903 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !8966
  store %struct._seamless_window* %903, %struct._seamless_window** %37, align 8, !dbg !8969
  br label %904, !dbg !8970

; <label>:904:                                    ; preds = %949, %902
  %905 = load %struct._seamless_window*, %struct._seamless_window** %37, align 8, !dbg !8971
  %906 = icmp ne %struct._seamless_window* %905, null, !dbg !8974
  br i1 %906, label %907, label %953, !dbg !8974

; <label>:907:                                    ; preds = %904
  %908 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !8975
  %909 = sext i16 %908 to i32, !dbg !8978
  %910 = load %struct._seamless_window*, %struct._seamless_window** %37, align 8, !dbg !8979
  %911 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %910, i32 0, i32 4, !dbg !8980
  %912 = load i32, i32* %911, align 8, !dbg !8980
  %913 = sub nsw i32 %909, %912, !dbg !8981
  %914 = trunc i32 %913 to i16, !dbg !8978
  %915 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %38, i32 0, i32 0, !dbg !8982
  store i16 %914, i16* %915, align 2, !dbg !8983
  %916 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !8984
  %917 = sext i16 %916 to i32, !dbg !8985
  %918 = load %struct._seamless_window*, %struct._seamless_window** %37, align 8, !dbg !8986
  %919 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %918, i32 0, i32 5, !dbg !8987
  %920 = load i32, i32* %919, align 4, !dbg !8987
  %921 = sub nsw i32 %917, %920, !dbg !8988
  %922 = trunc i32 %921 to i16, !dbg !8985
  %923 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %38, i32 0, i32 1, !dbg !8989
  store i16 %922, i16* %923, align 2, !dbg !8990
  %924 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !8991
  %925 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %38, i32 0, i32 2, !dbg !8992
  store i16 %924, i16* %925, align 2, !dbg !8993
  %926 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !8994
  %927 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %38, i32 0, i32 3, !dbg !8995
  store i16 %926, i16* %927, align 2, !dbg !8996
  %928 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !8997
  %929 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !8998
  %930 = call i32 @XSetClipRectangles(%struct._XDisplay* %928, %struct._XGC* %929, i32 0, i32 0, %struct.XRectangle* %38, i32 1, i32 3), !dbg !8999
  %931 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9000
  %932 = load %struct._seamless_window*, %struct._seamless_window** %37, align 8, !dbg !9001
  %933 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %932, i32 0, i32 0, !dbg !9002
  %934 = load i64, i64* %933, align 8, !dbg !9002
  %935 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9003
  %936 = load i32, i32* %12, align 4, !dbg !9004
  %937 = load %struct._seamless_window*, %struct._seamless_window** %37, align 8, !dbg !9005
  %938 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %937, i32 0, i32 4, !dbg !9006
  %939 = load i32, i32* %938, align 8, !dbg !9006
  %940 = sub nsw i32 %936, %939, !dbg !9007
  %941 = load i32, i32* %13, align 4, !dbg !9008
  %942 = load %struct._seamless_window*, %struct._seamless_window** %37, align 8, !dbg !9009
  %943 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %942, i32 0, i32 5, !dbg !9010
  %944 = load i32, i32* %943, align 4, !dbg !9010
  %945 = sub nsw i32 %941, %944, !dbg !9011
  %946 = load i32, i32* %14, align 4, !dbg !9012
  %947 = load i32, i32* %15, align 4, !dbg !9013
  %948 = call i32 @XFillArc(%struct._XDisplay* %931, i64 %934, %struct._XGC* %935, i32 %940, i32 %945, i32 %946, i32 %947, i32 0, i32 23040), !dbg !9014
  br label %949, !dbg !9016

; <label>:949:                                    ; preds = %907
  %950 = load %struct._seamless_window*, %struct._seamless_window** %37, align 8, !dbg !9017
  %951 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %950, i32 0, i32 20, !dbg !9019
  %952 = load %struct._seamless_window*, %struct._seamless_window** %951, align 8, !dbg !9019
  store %struct._seamless_window* %952, %struct._seamless_window** %37, align 8, !dbg !9020
  br label %904, !dbg !9021, !llvm.loop !9022

; <label>:953:                                    ; preds = %904
  %954 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9024
  %955 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9026
  %956 = call i32 @XSetClipRectangles(%struct._XDisplay* %954, %struct._XGC* %955, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !9027
  br label %957, !dbg !9028

; <label>:957:                                    ; preds = %953, %901
  %958 = load i32, i32* @g_ownbackstore, align 4, !dbg !9029
  %959 = icmp ne i32 %958, 0, !dbg !9029
  br i1 %959, label %960, label %969, !dbg !9029

; <label>:960:                                    ; preds = %957
  %961 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9032
  %962 = load i64, i64* @g_backstore, align 8, !dbg !9034
  %963 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9035
  %964 = load i32, i32* %12, align 4, !dbg !9036
  %965 = load i32, i32* %13, align 4, !dbg !9037
  %966 = load i32, i32* %14, align 4, !dbg !9038
  %967 = load i32, i32* %15, align 4, !dbg !9039
  %968 = call i32 @XFillArc(%struct._XDisplay* %961, i64 %962, %struct._XGC* %963, i32 %964, i32 %965, i32 %966, i32 %967, i32 0, i32 23040), !dbg !9040
  br label %969, !dbg !9040

; <label>:969:                                    ; preds = %960, %957
  br label %970, !dbg !9041

; <label>:970:                                    ; preds = %780, %969, %888
  %971 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9043
  %972 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9044
  %973 = call i32 @XSetFillStyle(%struct._XDisplay* %971, %struct._XGC* %972, i32 0), !dbg !9045
  %974 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9046
  %975 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9047
  %976 = call i32 @XSetTSOrigin(%struct._XDisplay* %974, %struct._XGC* %975, i32 0, i32 0), !dbg !9048
  %977 = load i64, i64* %22, align 8, !dbg !9049
  %978 = inttoptr i64 %977 to i8*, !dbg !9050
  call void @ui_destroy_bitmap(i8* %978), !dbg !9051
  br label %1226, !dbg !9052

; <label>:979:                                    ; preds = %773
  %980 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !9053
  %981 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %980, i32 0, i32 4, !dbg !9055
  %982 = load %struct._BRUSHDATA*, %struct._BRUSHDATA** %981, align 8, !dbg !9055
  %983 = getelementptr inbounds %struct._BRUSHDATA, %struct._BRUSHDATA* %982, i32 0, i32 2, !dbg !9056
  %984 = load i8*, i8** %983, align 8, !dbg !9056
  %985 = call i8* @ui_create_glyph(i32 8, i32 8, i8* %984), !dbg !9057
  %986 = ptrtoint i8* %985 to i64, !dbg !9058
  store i64 %986, i64* %22, align 8, !dbg !9059
  %987 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9060
  %988 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9061
  %989 = load i32, i32* @g_server_depth, align 4, !dbg !9062
  %990 = icmp ne i32 %989, 8, !dbg !9063
  br i1 %990, label %991, label %994, !dbg !9062

; <label>:991:                                    ; preds = %979
  %992 = load i32, i32* %17, align 4, !dbg !9064
  %993 = call i32 @translate_colour(i32 %992), !dbg !9066
  br label %1007, !dbg !9067

; <label>:994:                                    ; preds = %979
  %995 = load i32, i32* @g_owncolmap, align 4, !dbg !9068
  %996 = icmp ne i32 %995, 0, !dbg !9068
  br i1 %996, label %997, label %999, !dbg !9068

; <label>:997:                                    ; preds = %994
  %998 = load i32, i32* %17, align 4, !dbg !9070
  br label %1005, !dbg !9072

; <label>:999:                                    ; preds = %994
  %1000 = load i32, i32* %17, align 4, !dbg !9073
  %1001 = zext i32 %1000 to i64, !dbg !9075
  %1002 = load i32*, i32** @g_colmap, align 8, !dbg !9075
  %1003 = getelementptr inbounds i32, i32* %1002, i64 %1001, !dbg !9075
  %1004 = load i32, i32* %1003, align 4, !dbg !9075
  br label %1005, !dbg !9076

; <label>:1005:                                   ; preds = %999, %997
  %1006 = phi i32 [ %998, %997 ], [ %1004, %999 ], !dbg !9077
  br label %1007, !dbg !9079

; <label>:1007:                                   ; preds = %1005, %991
  %1008 = phi i32 [ %993, %991 ], [ %1006, %1005 ], !dbg !9080
  %1009 = zext i32 %1008 to i64, !dbg !9082
  %1010 = call i32 @XSetForeground(%struct._XDisplay* %987, %struct._XGC* %988, i64 %1009), !dbg !9083
  %1011 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9084
  %1012 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9085
  %1013 = load i32, i32* @g_server_depth, align 4, !dbg !9086
  %1014 = icmp ne i32 %1013, 8, !dbg !9087
  br i1 %1014, label %1015, label %1018, !dbg !9086

; <label>:1015:                                   ; preds = %1007
  %1016 = load i32, i32* %18, align 4, !dbg !9088
  %1017 = call i32 @translate_colour(i32 %1016), !dbg !9089
  br label %1031, !dbg !9090

; <label>:1018:                                   ; preds = %1007
  %1019 = load i32, i32* @g_owncolmap, align 4, !dbg !9091
  %1020 = icmp ne i32 %1019, 0, !dbg !9091
  br i1 %1020, label %1021, label %1023, !dbg !9091

; <label>:1021:                                   ; preds = %1018
  %1022 = load i32, i32* %18, align 4, !dbg !9092
  br label %1029, !dbg !9093

; <label>:1023:                                   ; preds = %1018
  %1024 = load i32, i32* %18, align 4, !dbg !9094
  %1025 = zext i32 %1024 to i64, !dbg !9095
  %1026 = load i32*, i32** @g_colmap, align 8, !dbg !9095
  %1027 = getelementptr inbounds i32, i32* %1026, i64 %1025, !dbg !9095
  %1028 = load i32, i32* %1027, align 4, !dbg !9095
  br label %1029, !dbg !9096

; <label>:1029:                                   ; preds = %1023, %1021
  %1030 = phi i32 [ %1022, %1021 ], [ %1028, %1023 ], !dbg !9097
  br label %1031, !dbg !9098

; <label>:1031:                                   ; preds = %1029, %1015
  %1032 = phi i32 [ %1017, %1015 ], [ %1030, %1029 ], !dbg !9099
  %1033 = zext i32 %1032 to i64, !dbg !9100
  %1034 = call i32 @XSetBackground(%struct._XDisplay* %1011, %struct._XGC* %1012, i64 %1033), !dbg !9101
  %1035 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9102
  %1036 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9103
  %1037 = call i32 @XSetFillStyle(%struct._XDisplay* %1035, %struct._XGC* %1036, i32 3), !dbg !9104
  %1038 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9105
  %1039 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9106
  %1040 = load i64, i64* %22, align 8, !dbg !9107
  %1041 = call i32 @XSetStipple(%struct._XDisplay* %1038, %struct._XGC* %1039, i64 %1040), !dbg !9108
  %1042 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9109
  %1043 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9110
  %1044 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !9111
  %1045 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %1044, i32 0, i32 0, !dbg !9112
  %1046 = load i8, i8* %1045, align 8, !dbg !9112
  %1047 = zext i8 %1046 to i32, !dbg !9111
  %1048 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !9113
  %1049 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %1048, i32 0, i32 1, !dbg !9114
  %1050 = load i8, i8* %1049, align 1, !dbg !9114
  %1051 = zext i8 %1050 to i32, !dbg !9113
  %1052 = call i32 @XSetTSOrigin(%struct._XDisplay* %1042, %struct._XGC* %1043, i32 %1047, i32 %1051), !dbg !9115
  %1053 = load i8, i8* %11, align 1, !dbg !9116
  %1054 = zext i8 %1053 to i32, !dbg !9116
  switch i32 %1054, label %1217 [
    i32 0, label %1055
    i32 1, label %1136
  ], !dbg !9118

; <label>:1055:                                   ; preds = %1031
  %1056 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9119
  %1057 = load i64, i64* @g_wnd, align 8, !dbg !9122
  %1058 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9123
  %1059 = load i32, i32* %12, align 4, !dbg !9124
  %1060 = load i32, i32* %13, align 4, !dbg !9125
  %1061 = load i32, i32* %14, align 4, !dbg !9126
  %1062 = load i32, i32* %15, align 4, !dbg !9127
  %1063 = call i32 @XDrawArc(%struct._XDisplay* %1056, i64 %1057, %struct._XGC* %1058, i32 %1059, i32 %1060, i32 %1061, i32 %1062, i32 0, i32 23040), !dbg !9128
  br label %1064, !dbg !9129, !llvm.loop !9130

; <label>:1064:                                   ; preds = %1055
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %39, metadata !9132, metadata !416), !dbg !9134
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %40, metadata !9135, metadata !416), !dbg !9136
  %1065 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !9137
  %1066 = icmp ne %struct._seamless_window* %1065, null, !dbg !9137
  br i1 %1066, label %1068, label %1067, !dbg !9140

; <label>:1067:                                   ; preds = %1064
  br label %1123, !dbg !9141

; <label>:1068:                                   ; preds = %1064
  %1069 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !9143
  store %struct._seamless_window* %1069, %struct._seamless_window** %39, align 8, !dbg !9146
  br label %1070, !dbg !9147

; <label>:1070:                                   ; preds = %1115, %1068
  %1071 = load %struct._seamless_window*, %struct._seamless_window** %39, align 8, !dbg !9148
  %1072 = icmp ne %struct._seamless_window* %1071, null, !dbg !9151
  br i1 %1072, label %1073, label %1119, !dbg !9151

; <label>:1073:                                   ; preds = %1070
  %1074 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !9152
  %1075 = sext i16 %1074 to i32, !dbg !9155
  %1076 = load %struct._seamless_window*, %struct._seamless_window** %39, align 8, !dbg !9156
  %1077 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1076, i32 0, i32 4, !dbg !9157
  %1078 = load i32, i32* %1077, align 8, !dbg !9157
  %1079 = sub nsw i32 %1075, %1078, !dbg !9158
  %1080 = trunc i32 %1079 to i16, !dbg !9155
  %1081 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %40, i32 0, i32 0, !dbg !9159
  store i16 %1080, i16* %1081, align 2, !dbg !9160
  %1082 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !9161
  %1083 = sext i16 %1082 to i32, !dbg !9162
  %1084 = load %struct._seamless_window*, %struct._seamless_window** %39, align 8, !dbg !9163
  %1085 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1084, i32 0, i32 5, !dbg !9164
  %1086 = load i32, i32* %1085, align 4, !dbg !9164
  %1087 = sub nsw i32 %1083, %1086, !dbg !9165
  %1088 = trunc i32 %1087 to i16, !dbg !9162
  %1089 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %40, i32 0, i32 1, !dbg !9166
  store i16 %1088, i16* %1089, align 2, !dbg !9167
  %1090 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !9168
  %1091 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %40, i32 0, i32 2, !dbg !9169
  store i16 %1090, i16* %1091, align 2, !dbg !9170
  %1092 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !9171
  %1093 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %40, i32 0, i32 3, !dbg !9172
  store i16 %1092, i16* %1093, align 2, !dbg !9173
  %1094 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9174
  %1095 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9175
  %1096 = call i32 @XSetClipRectangles(%struct._XDisplay* %1094, %struct._XGC* %1095, i32 0, i32 0, %struct.XRectangle* %40, i32 1, i32 3), !dbg !9176
  %1097 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9177
  %1098 = load %struct._seamless_window*, %struct._seamless_window** %39, align 8, !dbg !9178
  %1099 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1098, i32 0, i32 0, !dbg !9179
  %1100 = load i64, i64* %1099, align 8, !dbg !9179
  %1101 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9180
  %1102 = load i32, i32* %12, align 4, !dbg !9181
  %1103 = load %struct._seamless_window*, %struct._seamless_window** %39, align 8, !dbg !9182
  %1104 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1103, i32 0, i32 4, !dbg !9183
  %1105 = load i32, i32* %1104, align 8, !dbg !9183
  %1106 = sub nsw i32 %1102, %1105, !dbg !9184
  %1107 = load i32, i32* %13, align 4, !dbg !9185
  %1108 = load %struct._seamless_window*, %struct._seamless_window** %39, align 8, !dbg !9186
  %1109 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1108, i32 0, i32 5, !dbg !9187
  %1110 = load i32, i32* %1109, align 4, !dbg !9187
  %1111 = sub nsw i32 %1107, %1110, !dbg !9188
  %1112 = load i32, i32* %14, align 4, !dbg !9189
  %1113 = load i32, i32* %15, align 4, !dbg !9190
  %1114 = call i32 @XDrawArc(%struct._XDisplay* %1097, i64 %1100, %struct._XGC* %1101, i32 %1106, i32 %1111, i32 %1112, i32 %1113, i32 0, i32 23040), !dbg !9191
  br label %1115, !dbg !9193

; <label>:1115:                                   ; preds = %1073
  %1116 = load %struct._seamless_window*, %struct._seamless_window** %39, align 8, !dbg !9194
  %1117 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1116, i32 0, i32 20, !dbg !9196
  %1118 = load %struct._seamless_window*, %struct._seamless_window** %1117, align 8, !dbg !9196
  store %struct._seamless_window* %1118, %struct._seamless_window** %39, align 8, !dbg !9197
  br label %1070, !dbg !9198, !llvm.loop !9199

; <label>:1119:                                   ; preds = %1070
  %1120 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9201
  %1121 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9203
  %1122 = call i32 @XSetClipRectangles(%struct._XDisplay* %1120, %struct._XGC* %1121, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !9204
  br label %1123, !dbg !9205

; <label>:1123:                                   ; preds = %1119, %1067
  %1124 = load i32, i32* @g_ownbackstore, align 4, !dbg !9206
  %1125 = icmp ne i32 %1124, 0, !dbg !9206
  br i1 %1125, label %1126, label %1135, !dbg !9206

; <label>:1126:                                   ; preds = %1123
  %1127 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9209
  %1128 = load i64, i64* @g_backstore, align 8, !dbg !9211
  %1129 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9212
  %1130 = load i32, i32* %12, align 4, !dbg !9213
  %1131 = load i32, i32* %13, align 4, !dbg !9214
  %1132 = load i32, i32* %14, align 4, !dbg !9215
  %1133 = load i32, i32* %15, align 4, !dbg !9216
  %1134 = call i32 @XDrawArc(%struct._XDisplay* %1127, i64 %1128, %struct._XGC* %1129, i32 %1130, i32 %1131, i32 %1132, i32 %1133, i32 0, i32 23040), !dbg !9217
  br label %1135, !dbg !9217

; <label>:1135:                                   ; preds = %1126, %1123
  br label %1217, !dbg !9218

; <label>:1136:                                   ; preds = %1031
  %1137 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9220
  %1138 = load i64, i64* @g_wnd, align 8, !dbg !9222
  %1139 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9223
  %1140 = load i32, i32* %12, align 4, !dbg !9224
  %1141 = load i32, i32* %13, align 4, !dbg !9225
  %1142 = load i32, i32* %14, align 4, !dbg !9226
  %1143 = load i32, i32* %15, align 4, !dbg !9227
  %1144 = call i32 @XFillArc(%struct._XDisplay* %1137, i64 %1138, %struct._XGC* %1139, i32 %1140, i32 %1141, i32 %1142, i32 %1143, i32 0, i32 23040), !dbg !9228
  br label %1145, !dbg !9229, !llvm.loop !9230

; <label>:1145:                                   ; preds = %1136
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %41, metadata !9232, metadata !416), !dbg !9234
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %42, metadata !9235, metadata !416), !dbg !9236
  %1146 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !9237
  %1147 = icmp ne %struct._seamless_window* %1146, null, !dbg !9237
  br i1 %1147, label %1149, label %1148, !dbg !9240

; <label>:1148:                                   ; preds = %1145
  br label %1204, !dbg !9241

; <label>:1149:                                   ; preds = %1145
  %1150 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !9243
  store %struct._seamless_window* %1150, %struct._seamless_window** %41, align 8, !dbg !9246
  br label %1151, !dbg !9247

; <label>:1151:                                   ; preds = %1196, %1149
  %1152 = load %struct._seamless_window*, %struct._seamless_window** %41, align 8, !dbg !9248
  %1153 = icmp ne %struct._seamless_window* %1152, null, !dbg !9251
  br i1 %1153, label %1154, label %1200, !dbg !9251

; <label>:1154:                                   ; preds = %1151
  %1155 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !9252
  %1156 = sext i16 %1155 to i32, !dbg !9255
  %1157 = load %struct._seamless_window*, %struct._seamless_window** %41, align 8, !dbg !9256
  %1158 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1157, i32 0, i32 4, !dbg !9257
  %1159 = load i32, i32* %1158, align 8, !dbg !9257
  %1160 = sub nsw i32 %1156, %1159, !dbg !9258
  %1161 = trunc i32 %1160 to i16, !dbg !9255
  %1162 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %42, i32 0, i32 0, !dbg !9259
  store i16 %1161, i16* %1162, align 2, !dbg !9260
  %1163 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !9261
  %1164 = sext i16 %1163 to i32, !dbg !9262
  %1165 = load %struct._seamless_window*, %struct._seamless_window** %41, align 8, !dbg !9263
  %1166 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1165, i32 0, i32 5, !dbg !9264
  %1167 = load i32, i32* %1166, align 4, !dbg !9264
  %1168 = sub nsw i32 %1164, %1167, !dbg !9265
  %1169 = trunc i32 %1168 to i16, !dbg !9262
  %1170 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %42, i32 0, i32 1, !dbg !9266
  store i16 %1169, i16* %1170, align 2, !dbg !9267
  %1171 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !9268
  %1172 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %42, i32 0, i32 2, !dbg !9269
  store i16 %1171, i16* %1172, align 2, !dbg !9270
  %1173 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !9271
  %1174 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %42, i32 0, i32 3, !dbg !9272
  store i16 %1173, i16* %1174, align 2, !dbg !9273
  %1175 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9274
  %1176 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9275
  %1177 = call i32 @XSetClipRectangles(%struct._XDisplay* %1175, %struct._XGC* %1176, i32 0, i32 0, %struct.XRectangle* %42, i32 1, i32 3), !dbg !9276
  %1178 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9277
  %1179 = load %struct._seamless_window*, %struct._seamless_window** %41, align 8, !dbg !9278
  %1180 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1179, i32 0, i32 0, !dbg !9279
  %1181 = load i64, i64* %1180, align 8, !dbg !9279
  %1182 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9280
  %1183 = load i32, i32* %12, align 4, !dbg !9281
  %1184 = load %struct._seamless_window*, %struct._seamless_window** %41, align 8, !dbg !9282
  %1185 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1184, i32 0, i32 4, !dbg !9283
  %1186 = load i32, i32* %1185, align 8, !dbg !9283
  %1187 = sub nsw i32 %1183, %1186, !dbg !9284
  %1188 = load i32, i32* %13, align 4, !dbg !9285
  %1189 = load %struct._seamless_window*, %struct._seamless_window** %41, align 8, !dbg !9286
  %1190 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1189, i32 0, i32 5, !dbg !9287
  %1191 = load i32, i32* %1190, align 4, !dbg !9287
  %1192 = sub nsw i32 %1188, %1191, !dbg !9288
  %1193 = load i32, i32* %14, align 4, !dbg !9289
  %1194 = load i32, i32* %15, align 4, !dbg !9290
  %1195 = call i32 @XFillArc(%struct._XDisplay* %1178, i64 %1181, %struct._XGC* %1182, i32 %1187, i32 %1192, i32 %1193, i32 %1194, i32 0, i32 23040), !dbg !9291
  br label %1196, !dbg !9293

; <label>:1196:                                   ; preds = %1154
  %1197 = load %struct._seamless_window*, %struct._seamless_window** %41, align 8, !dbg !9294
  %1198 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %1197, i32 0, i32 20, !dbg !9296
  %1199 = load %struct._seamless_window*, %struct._seamless_window** %1198, align 8, !dbg !9296
  store %struct._seamless_window* %1199, %struct._seamless_window** %41, align 8, !dbg !9297
  br label %1151, !dbg !9298, !llvm.loop !9299

; <label>:1200:                                   ; preds = %1151
  %1201 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9301
  %1202 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9303
  %1203 = call i32 @XSetClipRectangles(%struct._XDisplay* %1201, %struct._XGC* %1202, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !9304
  br label %1204, !dbg !9305

; <label>:1204:                                   ; preds = %1200, %1148
  %1205 = load i32, i32* @g_ownbackstore, align 4, !dbg !9306
  %1206 = icmp ne i32 %1205, 0, !dbg !9306
  br i1 %1206, label %1207, label %1216, !dbg !9306

; <label>:1207:                                   ; preds = %1204
  %1208 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9309
  %1209 = load i64, i64* @g_backstore, align 8, !dbg !9311
  %1210 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9312
  %1211 = load i32, i32* %12, align 4, !dbg !9313
  %1212 = load i32, i32* %13, align 4, !dbg !9314
  %1213 = load i32, i32* %14, align 4, !dbg !9315
  %1214 = load i32, i32* %15, align 4, !dbg !9316
  %1215 = call i32 @XFillArc(%struct._XDisplay* %1208, i64 %1209, %struct._XGC* %1210, i32 %1211, i32 %1212, i32 %1213, i32 %1214, i32 0, i32 23040), !dbg !9317
  br label %1216, !dbg !9317

; <label>:1216:                                   ; preds = %1207, %1204
  br label %1217, !dbg !9318

; <label>:1217:                                   ; preds = %1031, %1216, %1135
  %1218 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9320
  %1219 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9321
  %1220 = call i32 @XSetFillStyle(%struct._XDisplay* %1218, %struct._XGC* %1219, i32 0), !dbg !9322
  %1221 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9323
  %1222 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9324
  %1223 = call i32 @XSetTSOrigin(%struct._XDisplay* %1221, %struct._XGC* %1222, i32 0, i32 0), !dbg !9325
  %1224 = load i64, i64* %22, align 8, !dbg !9326
  %1225 = inttoptr i64 %1224 to i8*, !dbg !9327
  call void @ui_destroy_glyph(i8* %1225), !dbg !9328
  br label %1226

; <label>:1226:                                   ; preds = %1217, %970
  br label %1227

; <label>:1227:                                   ; preds = %1226, %764
  br label %1233, !dbg !9329

; <label>:1228:                                   ; preds = %62
  %1229 = load %struct._BRUSH*, %struct._BRUSH** %16, align 8, !dbg !9330
  %1230 = getelementptr inbounds %struct._BRUSH, %struct._BRUSH* %1229, i32 0, i32 2, !dbg !9331
  %1231 = load i8, i8* %1230, align 2, !dbg !9331
  %1232 = zext i8 %1231 to i32, !dbg !9330
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i32 %1232), !dbg !9332
  br label %1233, !dbg !9333

; <label>:1233:                                   ; preds = %1228, %1227, %496, %254
  %1234 = load i8, i8* %10, align 1, !dbg !9334
  %1235 = zext i8 %1234 to i32, !dbg !9334
  %1236 = icmp ne i32 %1235, 12, !dbg !9337
  br i1 %1236, label %1237, label %1241, !dbg !9338

; <label>:1237:                                   ; preds = %1233
  %1238 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9339
  %1239 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9341
  %1240 = call i32 @XSetFunction(%struct._XDisplay* %1238, %struct._XGC* %1239, i32 3), !dbg !9342
  br label %1241, !dbg !9342

; <label>:1241:                                   ; preds = %1237, %1233
  ret void, !dbg !9343
}

declare i32 @XDrawArc(%struct._XDisplay*, i64, %struct._XGC*, i32, i32, i32, i32, i32, i32) #2

declare i32 @XFillArc(%struct._XDisplay*, i64, %struct._XGC*, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @ui_draw_glyph(i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32) #0 !dbg !9344 {
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9347, metadata !416), !dbg !9348
  store i32 %1, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !9349, metadata !416), !dbg !9350
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9351, metadata !416), !dbg !9352
  store i32 %3, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !9353, metadata !416), !dbg !9354
  store i32 %4, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !9355, metadata !416), !dbg !9356
  store i8* %5, i8** %16, align 8
  call void @llvm.dbg.declare(metadata i8** %16, metadata !9357, metadata !416), !dbg !9358
  store i32 %6, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !9359, metadata !416), !dbg !9360
  store i32 %7, i32* %18, align 4
  call void @llvm.dbg.declare(metadata i32* %18, metadata !9361, metadata !416), !dbg !9362
  store i32 %8, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9363, metadata !416), !dbg !9364
  store i32 %9, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !9365, metadata !416), !dbg !9366
  %21 = load i32, i32* %17, align 4, !dbg !9367
  %22 = load i32, i32* %18, align 4, !dbg !9368
  %23 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9369
  %24 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9370
  %25 = load i32, i32* @g_server_depth, align 4, !dbg !9371
  %26 = icmp ne i32 %25, 8, !dbg !9372
  br i1 %26, label %27, label %30, !dbg !9371

; <label>:27:                                     ; preds = %10
  %28 = load i32, i32* %20, align 4, !dbg !9373
  %29 = call i32 @translate_colour(i32 %28), !dbg !9375
  br label %43, !dbg !9376

; <label>:30:                                     ; preds = %10
  %31 = load i32, i32* @g_owncolmap, align 4, !dbg !9377
  %32 = icmp ne i32 %31, 0, !dbg !9377
  br i1 %32, label %33, label %35, !dbg !9377

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* %20, align 4, !dbg !9379
  br label %41, !dbg !9381

; <label>:35:                                     ; preds = %30
  %36 = load i32, i32* %20, align 4, !dbg !9382
  %37 = zext i32 %36 to i64, !dbg !9384
  %38 = load i32*, i32** @g_colmap, align 8, !dbg !9384
  %39 = getelementptr inbounds i32, i32* %38, i64 %37, !dbg !9384
  %40 = load i32, i32* %39, align 4, !dbg !9384
  br label %41, !dbg !9385

; <label>:41:                                     ; preds = %35, %33
  %42 = phi i32 [ %34, %33 ], [ %40, %35 ], !dbg !9386
  br label %43, !dbg !9388

; <label>:43:                                     ; preds = %41, %27
  %44 = phi i32 [ %29, %27 ], [ %42, %41 ], !dbg !9389
  %45 = zext i32 %44 to i64, !dbg !9391
  %46 = call i32 @XSetForeground(%struct._XDisplay* %23, %struct._XGC* %24, i64 %45), !dbg !9392
  %47 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9393
  %48 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9394
  %49 = load i32, i32* @g_server_depth, align 4, !dbg !9395
  %50 = icmp ne i32 %49, 8, !dbg !9396
  br i1 %50, label %51, label %54, !dbg !9395

; <label>:51:                                     ; preds = %43
  %52 = load i32, i32* %19, align 4, !dbg !9397
  %53 = call i32 @translate_colour(i32 %52), !dbg !9398
  br label %67, !dbg !9399

; <label>:54:                                     ; preds = %43
  %55 = load i32, i32* @g_owncolmap, align 4, !dbg !9400
  %56 = icmp ne i32 %55, 0, !dbg !9400
  br i1 %56, label %57, label %59, !dbg !9400

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* %19, align 4, !dbg !9401
  br label %65, !dbg !9402

; <label>:59:                                     ; preds = %54
  %60 = load i32, i32* %19, align 4, !dbg !9403
  %61 = zext i32 %60 to i64, !dbg !9404
  %62 = load i32*, i32** @g_colmap, align 8, !dbg !9404
  %63 = getelementptr inbounds i32, i32* %62, i64 %61, !dbg !9404
  %64 = load i32, i32* %63, align 4, !dbg !9404
  br label %65, !dbg !9405

; <label>:65:                                     ; preds = %59, %57
  %66 = phi i32 [ %58, %57 ], [ %64, %59 ], !dbg !9406
  br label %67, !dbg !9407

; <label>:67:                                     ; preds = %65, %51
  %68 = phi i32 [ %53, %51 ], [ %66, %65 ], !dbg !9408
  %69 = zext i32 %68 to i64, !dbg !9409
  %70 = call i32 @XSetBackground(%struct._XDisplay* %47, %struct._XGC* %48, i64 %69), !dbg !9410
  %71 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9411
  %72 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9412
  %73 = load i32, i32* %11, align 4, !dbg !9413
  %74 = icmp eq i32 %73, 0, !dbg !9414
  %75 = select i1 %74, i32 2, i32 3, !dbg !9415
  %76 = call i32 @XSetFillStyle(%struct._XDisplay* %71, %struct._XGC* %72, i32 %75), !dbg !9416
  %77 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9417
  %78 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9418
  %79 = load i8*, i8** %16, align 8, !dbg !9419
  %80 = ptrtoint i8* %79 to i64, !dbg !9420
  %81 = call i32 @XSetStipple(%struct._XDisplay* %77, %struct._XGC* %78, i64 %80), !dbg !9421
  %82 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9422
  %83 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9423
  %84 = load i32, i32* %12, align 4, !dbg !9424
  %85 = load i32, i32* %13, align 4, !dbg !9425
  %86 = call i32 @XSetTSOrigin(%struct._XDisplay* %82, %struct._XGC* %83, i32 %84, i32 %85), !dbg !9426
  %87 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9427
  %88 = load i32, i32* @g_ownbackstore, align 4, !dbg !9429
  %89 = icmp ne i32 %88, 0, !dbg !9429
  br i1 %89, label %90, label %92, !dbg !9429

; <label>:90:                                     ; preds = %67
  %91 = load i64, i64* @g_backstore, align 8, !dbg !9430
  br label %94, !dbg !9432

; <label>:92:                                     ; preds = %67
  %93 = load i64, i64* @g_wnd, align 8, !dbg !9433
  br label %94, !dbg !9435

; <label>:94:                                     ; preds = %92, %90
  %95 = phi i64 [ %91, %90 ], [ %93, %92 ], !dbg !9436
  %96 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9438
  %97 = load i32, i32* %12, align 4, !dbg !9439
  %98 = load i32, i32* %13, align 4, !dbg !9440
  %99 = load i32, i32* %14, align 4, !dbg !9441
  %100 = load i32, i32* %15, align 4, !dbg !9442
  %101 = call i32 @XFillRectangle(%struct._XDisplay* %87, i64 %95, %struct._XGC* %96, i32 %97, i32 %98, i32 %99, i32 %100), !dbg !9443
  %102 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9444
  %103 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9445
  %104 = call i32 @XSetFillStyle(%struct._XDisplay* %102, %struct._XGC* %103, i32 0), !dbg !9446
  ret void, !dbg !9447
}

; Function Attrs: nounwind uwtable
define void @ui_draw_text(i8 zeroext, i8 zeroext, i8 zeroext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct._BRUSH*, i32, i32, i8*, i8 zeroext) #0 !dbg !9448 {
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca %struct._BRUSH*, align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i8*, align 8
  %38 = alloca i8, align 1
  %39 = alloca %struct.XWindowAttributes, align 8
  %40 = alloca %struct._FONTGLYPH*, align 8
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca %struct._DATABLOB*, align 8
  %47 = alloca %struct._seamless_window*, align 8
  %48 = alloca %struct.XRectangle, align 2
  %49 = alloca %struct._seamless_window*, align 8
  %50 = alloca %struct.XRectangle, align 2
  store i8 %0, i8* %20, align 1
  call void @llvm.dbg.declare(metadata i8* %20, metadata !9451, metadata !416), !dbg !9452
  store i8 %1, i8* %21, align 1
  call void @llvm.dbg.declare(metadata i8* %21, metadata !9453, metadata !416), !dbg !9454
  store i8 %2, i8* %22, align 1
  call void @llvm.dbg.declare(metadata i8* %22, metadata !9455, metadata !416), !dbg !9456
  store i32 %3, i32* %23, align 4
  call void @llvm.dbg.declare(metadata i32* %23, metadata !9457, metadata !416), !dbg !9458
  store i32 %4, i32* %24, align 4
  call void @llvm.dbg.declare(metadata i32* %24, metadata !9459, metadata !416), !dbg !9460
  store i32 %5, i32* %25, align 4
  call void @llvm.dbg.declare(metadata i32* %25, metadata !9461, metadata !416), !dbg !9462
  store i32 %6, i32* %26, align 4
  call void @llvm.dbg.declare(metadata i32* %26, metadata !9463, metadata !416), !dbg !9464
  store i32 %7, i32* %27, align 4
  call void @llvm.dbg.declare(metadata i32* %27, metadata !9465, metadata !416), !dbg !9466
  store i32 %8, i32* %28, align 4
  call void @llvm.dbg.declare(metadata i32* %28, metadata !9467, metadata !416), !dbg !9468
  store i32 %9, i32* %29, align 4
  call void @llvm.dbg.declare(metadata i32* %29, metadata !9469, metadata !416), !dbg !9470
  store i32 %10, i32* %30, align 4
  call void @llvm.dbg.declare(metadata i32* %30, metadata !9471, metadata !416), !dbg !9472
  store i32 %11, i32* %31, align 4
  call void @llvm.dbg.declare(metadata i32* %31, metadata !9473, metadata !416), !dbg !9474
  store i32 %12, i32* %32, align 4
  call void @llvm.dbg.declare(metadata i32* %32, metadata !9475, metadata !416), !dbg !9476
  store i32 %13, i32* %33, align 4
  call void @llvm.dbg.declare(metadata i32* %33, metadata !9477, metadata !416), !dbg !9478
  store %struct._BRUSH* %14, %struct._BRUSH** %34, align 8
  call void @llvm.dbg.declare(metadata %struct._BRUSH** %34, metadata !9479, metadata !416), !dbg !9480
  store i32 %15, i32* %35, align 4
  call void @llvm.dbg.declare(metadata i32* %35, metadata !9481, metadata !416), !dbg !9482
  store i32 %16, i32* %36, align 4
  call void @llvm.dbg.declare(metadata i32* %36, metadata !9483, metadata !416), !dbg !9484
  store i8* %17, i8** %37, align 8
  call void @llvm.dbg.declare(metadata i8** %37, metadata !9485, metadata !416), !dbg !9486
  store i8 %18, i8* %38, align 1
  call void @llvm.dbg.declare(metadata i8* %38, metadata !9487, metadata !416), !dbg !9488
  call void @llvm.dbg.declare(metadata %struct.XWindowAttributes* %39, metadata !9489, metadata !416), !dbg !9490
  %51 = load i8, i8* %22, align 1, !dbg !9491
  %52 = load %struct._BRUSH*, %struct._BRUSH** %34, align 8, !dbg !9492
  %53 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9493
  %54 = load i64, i64* @g_wnd, align 8, !dbg !9494
  %55 = call i32 @XGetWindowAttributes(%struct._XDisplay* %53, i64 %54, %struct.XWindowAttributes* %39), !dbg !9495
  call void @llvm.dbg.declare(metadata %struct._FONTGLYPH** %40, metadata !9496, metadata !416), !dbg !9506
  call void @llvm.dbg.declare(metadata i32* %41, metadata !9507, metadata !416), !dbg !9508
  call void @llvm.dbg.declare(metadata i32* %42, metadata !9509, metadata !416), !dbg !9510
  call void @llvm.dbg.declare(metadata i32* %43, metadata !9511, metadata !416), !dbg !9512
  call void @llvm.dbg.declare(metadata i32* %44, metadata !9513, metadata !416), !dbg !9514
  call void @llvm.dbg.declare(metadata i32* %45, metadata !9515, metadata !416), !dbg !9516
  call void @llvm.dbg.declare(metadata %struct._DATABLOB** %46, metadata !9517, metadata !416), !dbg !9524
  %56 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9525
  %57 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9526
  %58 = load i32, i32* @g_server_depth, align 4, !dbg !9527
  %59 = icmp ne i32 %58, 8, !dbg !9528
  br i1 %59, label %60, label %63, !dbg !9527

; <label>:60:                                     ; preds = %19
  %61 = load i32, i32* %35, align 4, !dbg !9529
  %62 = call i32 @translate_colour(i32 %61), !dbg !9531
  br label %76, !dbg !9532

; <label>:63:                                     ; preds = %19
  %64 = load i32, i32* @g_owncolmap, align 4, !dbg !9533
  %65 = icmp ne i32 %64, 0, !dbg !9533
  br i1 %65, label %66, label %68, !dbg !9533

; <label>:66:                                     ; preds = %63
  %67 = load i32, i32* %35, align 4, !dbg !9535
  br label %74, !dbg !9537

; <label>:68:                                     ; preds = %63
  %69 = load i32, i32* %35, align 4, !dbg !9538
  %70 = zext i32 %69 to i64, !dbg !9540
  %71 = load i32*, i32** @g_colmap, align 8, !dbg !9540
  %72 = getelementptr inbounds i32, i32* %71, i64 %70, !dbg !9540
  %73 = load i32, i32* %72, align 4, !dbg !9540
  br label %74, !dbg !9541

; <label>:74:                                     ; preds = %68, %66
  %75 = phi i32 [ %67, %66 ], [ %73, %68 ], !dbg !9542
  br label %76, !dbg !9544

; <label>:76:                                     ; preds = %74, %60
  %77 = phi i32 [ %62, %60 ], [ %75, %74 ], !dbg !9545
  %78 = zext i32 %77 to i64, !dbg !9547
  %79 = call i32 @XSetForeground(%struct._XDisplay* %56, %struct._XGC* %57, i64 %78), !dbg !9548
  %80 = load i32, i32* %30, align 4, !dbg !9549
  %81 = load i32, i32* %32, align 4, !dbg !9551
  %82 = add nsw i32 %80, %81, !dbg !9552
  %83 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %39, i32 0, i32 2, !dbg !9553
  %84 = load i32, i32* %83, align 8, !dbg !9553
  %85 = icmp sgt i32 %82, %84, !dbg !9554
  br i1 %85, label %86, label %91, !dbg !9555

; <label>:86:                                     ; preds = %76
  %87 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %39, i32 0, i32 2, !dbg !9556
  %88 = load i32, i32* %87, align 8, !dbg !9556
  %89 = load i32, i32* %30, align 4, !dbg !9557
  %90 = sub nsw i32 %88, %89, !dbg !9558
  store i32 %90, i32* %32, align 4, !dbg !9559
  br label %91, !dbg !9560

; <label>:91:                                     ; preds = %86, %76
  %92 = load i32, i32* %32, align 4, !dbg !9561
  %93 = icmp sgt i32 %92, 1, !dbg !9563
  br i1 %93, label %94, label %110, !dbg !9564

; <label>:94:                                     ; preds = %91
  %95 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9565
  %96 = load i32, i32* @g_ownbackstore, align 4, !dbg !9568
  %97 = icmp ne i32 %96, 0, !dbg !9568
  br i1 %97, label %98, label %100, !dbg !9568

; <label>:98:                                     ; preds = %94
  %99 = load i64, i64* @g_backstore, align 8, !dbg !9569
  br label %102, !dbg !9571

; <label>:100:                                    ; preds = %94
  %101 = load i64, i64* @g_wnd, align 8, !dbg !9572
  br label %102, !dbg !9574

; <label>:102:                                    ; preds = %100, %98
  %103 = phi i64 [ %99, %98 ], [ %101, %100 ], !dbg !9575
  %104 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9577
  %105 = load i32, i32* %30, align 4, !dbg !9578
  %106 = load i32, i32* %31, align 4, !dbg !9579
  %107 = load i32, i32* %32, align 4, !dbg !9580
  %108 = load i32, i32* %33, align 4, !dbg !9581
  %109 = call i32 @XFillRectangle(%struct._XDisplay* %95, i64 %103, %struct._XGC* %104, i32 %105, i32 %106, i32 %107, i32 %108), !dbg !9582
  br label %130, !dbg !9583

; <label>:110:                                    ; preds = %91
  %111 = load i32, i32* %23, align 4, !dbg !9584
  %112 = icmp eq i32 %111, 1, !dbg !9586
  br i1 %112, label %113, label %129, !dbg !9587

; <label>:113:                                    ; preds = %110
  %114 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9588
  %115 = load i32, i32* @g_ownbackstore, align 4, !dbg !9591
  %116 = icmp ne i32 %115, 0, !dbg !9591
  br i1 %116, label %117, label %119, !dbg !9591

; <label>:117:                                    ; preds = %113
  %118 = load i64, i64* @g_backstore, align 8, !dbg !9592
  br label %121, !dbg !9594

; <label>:119:                                    ; preds = %113
  %120 = load i64, i64* @g_wnd, align 8, !dbg !9595
  br label %121, !dbg !9597

; <label>:121:                                    ; preds = %119, %117
  %122 = phi i64 [ %118, %117 ], [ %120, %119 ], !dbg !9598
  %123 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9600
  %124 = load i32, i32* %26, align 4, !dbg !9601
  %125 = load i32, i32* %27, align 4, !dbg !9602
  %126 = load i32, i32* %28, align 4, !dbg !9603
  %127 = load i32, i32* %29, align 4, !dbg !9604
  %128 = call i32 @XFillRectangle(%struct._XDisplay* %114, i64 %122, %struct._XGC* %123, i32 %124, i32 %125, i32 %126, i32 %127), !dbg !9605
  br label %129, !dbg !9606

; <label>:129:                                    ; preds = %121, %110
  br label %130

; <label>:130:                                    ; preds = %129, %102
  %131 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9607
  %132 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9608
  %133 = load i32, i32* @g_server_depth, align 4, !dbg !9609
  %134 = icmp ne i32 %133, 8, !dbg !9610
  br i1 %134, label %135, label %138, !dbg !9609

; <label>:135:                                    ; preds = %130
  %136 = load i32, i32* %36, align 4, !dbg !9611
  %137 = call i32 @translate_colour(i32 %136), !dbg !9612
  br label %151, !dbg !9613

; <label>:138:                                    ; preds = %130
  %139 = load i32, i32* @g_owncolmap, align 4, !dbg !9614
  %140 = icmp ne i32 %139, 0, !dbg !9614
  br i1 %140, label %141, label %143, !dbg !9614

; <label>:141:                                    ; preds = %138
  %142 = load i32, i32* %36, align 4, !dbg !9615
  br label %149, !dbg !9616

; <label>:143:                                    ; preds = %138
  %144 = load i32, i32* %36, align 4, !dbg !9617
  %145 = zext i32 %144 to i64, !dbg !9618
  %146 = load i32*, i32** @g_colmap, align 8, !dbg !9618
  %147 = getelementptr inbounds i32, i32* %146, i64 %145, !dbg !9618
  %148 = load i32, i32* %147, align 4, !dbg !9618
  br label %149, !dbg !9619

; <label>:149:                                    ; preds = %143, %141
  %150 = phi i32 [ %142, %141 ], [ %148, %143 ], !dbg !9620
  br label %151, !dbg !9621

; <label>:151:                                    ; preds = %149, %135
  %152 = phi i32 [ %137, %135 ], [ %150, %149 ], !dbg !9622
  %153 = zext i32 %152 to i64, !dbg !9623
  %154 = call i32 @XSetForeground(%struct._XDisplay* %131, %struct._XGC* %132, i64 %153), !dbg !9624
  %155 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9625
  %156 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9626
  %157 = load i32, i32* @g_server_depth, align 4, !dbg !9627
  %158 = icmp ne i32 %157, 8, !dbg !9628
  br i1 %158, label %159, label %162, !dbg !9627

; <label>:159:                                    ; preds = %151
  %160 = load i32, i32* %35, align 4, !dbg !9629
  %161 = call i32 @translate_colour(i32 %160), !dbg !9630
  br label %175, !dbg !9631

; <label>:162:                                    ; preds = %151
  %163 = load i32, i32* @g_owncolmap, align 4, !dbg !9632
  %164 = icmp ne i32 %163, 0, !dbg !9632
  br i1 %164, label %165, label %167, !dbg !9632

; <label>:165:                                    ; preds = %162
  %166 = load i32, i32* %35, align 4, !dbg !9633
  br label %173, !dbg !9634

; <label>:167:                                    ; preds = %162
  %168 = load i32, i32* %35, align 4, !dbg !9635
  %169 = zext i32 %168 to i64, !dbg !9636
  %170 = load i32*, i32** @g_colmap, align 8, !dbg !9636
  %171 = getelementptr inbounds i32, i32* %170, i64 %169, !dbg !9636
  %172 = load i32, i32* %171, align 4, !dbg !9636
  br label %173, !dbg !9637

; <label>:173:                                    ; preds = %167, %165
  %174 = phi i32 [ %166, %165 ], [ %172, %167 ], !dbg !9638
  br label %175, !dbg !9639

; <label>:175:                                    ; preds = %173, %159
  %176 = phi i32 [ %161, %159 ], [ %174, %173 ], !dbg !9640
  %177 = zext i32 %176 to i64, !dbg !9641
  %178 = call i32 @XSetBackground(%struct._XDisplay* %155, %struct._XGC* %156, i64 %177), !dbg !9642
  %179 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9643
  %180 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9644
  %181 = call i32 @XSetFillStyle(%struct._XDisplay* %179, %struct._XGC* %180, i32 2), !dbg !9645
  store i32 0, i32* %41, align 4, !dbg !9646
  br label %182, !dbg !9648

; <label>:182:                                    ; preds = %632, %175
  %183 = load i32, i32* %41, align 4, !dbg !9649
  %184 = load i8, i8* %38, align 1, !dbg !9652
  %185 = zext i8 %184 to i32, !dbg !9652
  %186 = icmp slt i32 %183, %185, !dbg !9653
  br i1 %186, label %187, label %633, !dbg !9654

; <label>:187:                                    ; preds = %182
  %188 = load i32, i32* %41, align 4, !dbg !9655
  %189 = sext i32 %188 to i64, !dbg !9657
  %190 = load i8*, i8** %37, align 8, !dbg !9657
  %191 = getelementptr inbounds i8, i8* %190, i64 %189, !dbg !9657
  %192 = load i8, i8* %191, align 1, !dbg !9657
  %193 = zext i8 %192 to i32, !dbg !9657
  switch i32 %193, label %483 [
    i32 255, label %194
    i32 254, label %227
  ], !dbg !9658

; <label>:194:                                    ; preds = %187
  %195 = load i32, i32* %41, align 4, !dbg !9659
  %196 = add nsw i32 %195, 3, !dbg !9662
  %197 = load i8, i8* %38, align 1, !dbg !9663
  %198 = zext i8 %197 to i32, !dbg !9663
  %199 = icmp sgt i32 %196, %198, !dbg !9664
  br i1 %199, label %200, label %201, !dbg !9665

; <label>:200:                                    ; preds = %194
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i32 0, i32 0)), !dbg !9666
  store i8 0, i8* %38, align 1, !dbg !9668
  store i32 0, i32* %41, align 4, !dbg !9669
  br label %632, !dbg !9670

; <label>:201:                                    ; preds = %194
  %202 = load i32, i32* %41, align 4, !dbg !9671
  %203 = add nsw i32 %202, 1, !dbg !9672
  %204 = sext i32 %203 to i64, !dbg !9673
  %205 = load i8*, i8** %37, align 8, !dbg !9673
  %206 = getelementptr inbounds i8, i8* %205, i64 %204, !dbg !9673
  %207 = load i8, i8* %206, align 1, !dbg !9673
  %208 = load i8*, i8** %37, align 8, !dbg !9674
  %209 = load i32, i32* %41, align 4, !dbg !9675
  %210 = add nsw i32 %209, 2, !dbg !9676
  %211 = sext i32 %210 to i64, !dbg !9677
  %212 = load i8*, i8** %37, align 8, !dbg !9677
  %213 = getelementptr inbounds i8, i8* %212, i64 %211, !dbg !9677
  %214 = load i8, i8* %213, align 1, !dbg !9677
  %215 = zext i8 %214 to i32, !dbg !9677
  call void @cache_put_text(i8 zeroext %207, i8* %208, i32 %215), !dbg !9678
  %216 = load i32, i32* %41, align 4, !dbg !9679
  %217 = add nsw i32 %216, 3, !dbg !9679
  store i32 %217, i32* %41, align 4, !dbg !9679
  %218 = load i32, i32* %41, align 4, !dbg !9680
  %219 = load i8, i8* %38, align 1, !dbg !9681
  %220 = zext i8 %219 to i32, !dbg !9681
  %221 = sub nsw i32 %220, %218, !dbg !9681
  %222 = trunc i32 %221 to i8, !dbg !9681
  store i8 %222, i8* %38, align 1, !dbg !9681
  %223 = load i32, i32* %41, align 4, !dbg !9682
  %224 = sext i32 %223 to i64, !dbg !9683
  %225 = load i8*, i8** %37, align 8, !dbg !9683
  %226 = getelementptr inbounds i8, i8* %225, i64 %224, !dbg !9683
  store i8* %226, i8** %37, align 8, !dbg !9684
  store i32 0, i32* %41, align 4, !dbg !9685
  br label %632, !dbg !9686

; <label>:227:                                    ; preds = %187
  %228 = load i32, i32* %41, align 4, !dbg !9687
  %229 = add nsw i32 %228, 2, !dbg !9689
  %230 = load i8, i8* %38, align 1, !dbg !9690
  %231 = zext i8 %230 to i32, !dbg !9690
  %232 = icmp sgt i32 %229, %231, !dbg !9691
  br i1 %232, label %233, label %234, !dbg !9692

; <label>:233:                                    ; preds = %227
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i32 0, i32 0)), !dbg !9693
  store i8 0, i8* %38, align 1, !dbg !9695
  store i32 0, i32* %41, align 4, !dbg !9696
  br label %632, !dbg !9697

; <label>:234:                                    ; preds = %227
  %235 = load i32, i32* %41, align 4, !dbg !9698
  %236 = add nsw i32 %235, 1, !dbg !9699
  %237 = sext i32 %236 to i64, !dbg !9700
  %238 = load i8*, i8** %37, align 8, !dbg !9700
  %239 = getelementptr inbounds i8, i8* %238, i64 %237, !dbg !9700
  %240 = load i8, i8* %239, align 1, !dbg !9700
  %241 = call %struct._DATABLOB* @cache_get_text(i8 zeroext %240), !dbg !9701
  store %struct._DATABLOB* %241, %struct._DATABLOB** %46, align 8, !dbg !9702
  %242 = load %struct._DATABLOB*, %struct._DATABLOB** %46, align 8, !dbg !9703
  %243 = getelementptr inbounds %struct._DATABLOB, %struct._DATABLOB* %242, i32 0, i32 0, !dbg !9705
  %244 = load i8*, i8** %243, align 8, !dbg !9705
  %245 = icmp ne i8* %244, null, !dbg !9706
  br i1 %245, label %246, label %461, !dbg !9707

; <label>:246:                                    ; preds = %234
  %247 = load %struct._DATABLOB*, %struct._DATABLOB** %46, align 8, !dbg !9708
  %248 = getelementptr inbounds %struct._DATABLOB, %struct._DATABLOB* %247, i32 0, i32 0, !dbg !9711
  %249 = load i8*, i8** %248, align 8, !dbg !9711
  %250 = getelementptr inbounds i8, i8* %249, i64 1, !dbg !9712
  %251 = load i8, i8* %250, align 1, !dbg !9712
  %252 = zext i8 %251 to i32, !dbg !9712
  %253 = icmp eq i32 %252, 0, !dbg !9713
  br i1 %253, label %254, label %291, !dbg !9714

; <label>:254:                                    ; preds = %246
  %255 = load i8, i8* %21, align 1, !dbg !9715
  %256 = zext i8 %255 to i32, !dbg !9715
  %257 = and i32 %256, 32, !dbg !9717
  %258 = icmp ne i32 %257, 0, !dbg !9717
  br i1 %258, label %291, label %259, !dbg !9718

; <label>:259:                                    ; preds = %254
  %260 = load i32, i32* %41, align 4, !dbg !9719
  %261 = add nsw i32 %260, 2, !dbg !9721
  %262 = load i8, i8* %38, align 1, !dbg !9722
  %263 = zext i8 %262 to i32, !dbg !9722
  %264 = icmp slt i32 %261, %263, !dbg !9723
  br i1 %264, label %265, label %291, !dbg !9724

; <label>:265:                                    ; preds = %259
  %266 = load i8, i8* %21, align 1, !dbg !9726
  %267 = zext i8 %266 to i32, !dbg !9726
  %268 = and i32 %267, 4, !dbg !9729
  %269 = icmp ne i32 %268, 0, !dbg !9729
  br i1 %269, label %270, label %280, !dbg !9730

; <label>:270:                                    ; preds = %265
  %271 = load i32, i32* %41, align 4, !dbg !9731
  %272 = add nsw i32 %271, 2, !dbg !9732
  %273 = sext i32 %272 to i64, !dbg !9733
  %274 = load i8*, i8** %37, align 8, !dbg !9733
  %275 = getelementptr inbounds i8, i8* %274, i64 %273, !dbg !9733
  %276 = load i8, i8* %275, align 1, !dbg !9733
  %277 = zext i8 %276 to i32, !dbg !9733
  %278 = load i32, i32* %25, align 4, !dbg !9734
  %279 = add nsw i32 %278, %277, !dbg !9734
  store i32 %279, i32* %25, align 4, !dbg !9734
  br label %290, !dbg !9735

; <label>:280:                                    ; preds = %265
  %281 = load i32, i32* %41, align 4, !dbg !9736
  %282 = add nsw i32 %281, 2, !dbg !9737
  %283 = sext i32 %282 to i64, !dbg !9738
  %284 = load i8*, i8** %37, align 8, !dbg !9738
  %285 = getelementptr inbounds i8, i8* %284, i64 %283, !dbg !9738
  %286 = load i8, i8* %285, align 1, !dbg !9738
  %287 = zext i8 %286 to i32, !dbg !9738
  %288 = load i32, i32* %24, align 4, !dbg !9739
  %289 = add nsw i32 %288, %287, !dbg !9739
  store i32 %289, i32* %24, align 4, !dbg !9739
  br label %290

; <label>:290:                                    ; preds = %280, %270
  br label %291, !dbg !9740

; <label>:291:                                    ; preds = %290, %259, %254, %246
  store i32 0, i32* %42, align 4, !dbg !9741
  br label %292, !dbg !9743

; <label>:292:                                    ; preds = %457, %291
  %293 = load i32, i32* %42, align 4, !dbg !9744
  %294 = load %struct._DATABLOB*, %struct._DATABLOB** %46, align 8, !dbg !9747
  %295 = getelementptr inbounds %struct._DATABLOB, %struct._DATABLOB* %294, i32 0, i32 1, !dbg !9748
  %296 = load i32, i32* %295, align 8, !dbg !9748
  %297 = icmp slt i32 %293, %296, !dbg !9749
  br i1 %297, label %298, label %460, !dbg !9750

; <label>:298:                                    ; preds = %292
  %299 = load i8, i8* %20, align 1, !dbg !9751
  %300 = load i32, i32* %42, align 4, !dbg !9753
  %301 = sext i32 %300 to i64, !dbg !9754
  %302 = load %struct._DATABLOB*, %struct._DATABLOB** %46, align 8, !dbg !9755
  %303 = getelementptr inbounds %struct._DATABLOB, %struct._DATABLOB* %302, i32 0, i32 0, !dbg !9756
  %304 = load i8*, i8** %303, align 8, !dbg !9756
  %305 = getelementptr inbounds i8, i8* %304, i64 %301, !dbg !9754
  %306 = load i8, i8* %305, align 1, !dbg !9754
  %307 = zext i8 %306 to i16, !dbg !9754
  %308 = call %struct._FONTGLYPH* @cache_get_font(i8 zeroext %299, i16 zeroext %307), !dbg !9757
  store %struct._FONTGLYPH* %308, %struct._FONTGLYPH** %40, align 8, !dbg !9758
  %309 = load i8, i8* %21, align 1, !dbg !9759
  %310 = zext i8 %309 to i32, !dbg !9759
  %311 = and i32 %310, 32, !dbg !9761
  %312 = icmp ne i32 %311, 0, !dbg !9761
  br i1 %312, label %395, label %313, !dbg !9762

; <label>:313:                                    ; preds = %298
  %314 = load i32, i32* %42, align 4, !dbg !9763
  %315 = add nsw i32 %314, 1, !dbg !9763
  store i32 %315, i32* %42, align 4, !dbg !9763
  %316 = sext i32 %315 to i64, !dbg !9766
  %317 = load %struct._DATABLOB*, %struct._DATABLOB** %46, align 8, !dbg !9767
  %318 = getelementptr inbounds %struct._DATABLOB, %struct._DATABLOB* %317, i32 0, i32 0, !dbg !9768
  %319 = load i8*, i8** %318, align 8, !dbg !9768
  %320 = getelementptr inbounds i8, i8* %319, i64 %316, !dbg !9766
  %321 = load i8, i8* %320, align 1, !dbg !9766
  %322 = zext i8 %321 to i32, !dbg !9766
  store i32 %322, i32* %43, align 4, !dbg !9769
  %323 = load i32, i32* %43, align 4, !dbg !9770
  %324 = and i32 %323, 128, !dbg !9771
  %325 = icmp ne i32 %324, 0, !dbg !9771
  br i1 %325, label %326, label %380, !dbg !9772

; <label>:326:                                    ; preds = %313
  %327 = load i8, i8* %21, align 1, !dbg !9773
  %328 = zext i8 %327 to i32, !dbg !9773
  %329 = and i32 %328, 4, !dbg !9778
  %330 = icmp ne i32 %329, 0, !dbg !9778
  br i1 %330, label %331, label %354, !dbg !9773

; <label>:331:                                    ; preds = %326
  %332 = load i32, i32* %42, align 4, !dbg !9779
  %333 = add nsw i32 %332, 1, !dbg !9781
  %334 = sext i32 %333 to i64, !dbg !9782
  %335 = load %struct._DATABLOB*, %struct._DATABLOB** %46, align 8, !dbg !9783
  %336 = getelementptr inbounds %struct._DATABLOB, %struct._DATABLOB* %335, i32 0, i32 0, !dbg !9784
  %337 = load i8*, i8** %336, align 8, !dbg !9784
  %338 = getelementptr inbounds i8, i8* %337, i64 %334, !dbg !9782
  %339 = load i8, i8* %338, align 1, !dbg !9782
  %340 = zext i8 %339 to i32, !dbg !9782
  %341 = load i32, i32* %42, align 4, !dbg !9785
  %342 = add nsw i32 %341, 2, !dbg !9786
  %343 = sext i32 %342 to i64, !dbg !9787
  %344 = load %struct._DATABLOB*, %struct._DATABLOB** %46, align 8, !dbg !9788
  %345 = getelementptr inbounds %struct._DATABLOB, %struct._DATABLOB* %344, i32 0, i32 0, !dbg !9789
  %346 = load i8*, i8** %345, align 8, !dbg !9789
  %347 = getelementptr inbounds i8, i8* %346, i64 %343, !dbg !9787
  %348 = load i8, i8* %347, align 1, !dbg !9787
  %349 = zext i8 %348 to i32, !dbg !9787
  %350 = shl i32 %349, 8, !dbg !9790
  %351 = or i32 %340, %350, !dbg !9791
  %352 = load i32, i32* %25, align 4, !dbg !9792
  %353 = add nsw i32 %352, %351, !dbg !9792
  store i32 %353, i32* %25, align 4, !dbg !9792
  br label %377, !dbg !9793

; <label>:354:                                    ; preds = %326
  %355 = load i32, i32* %42, align 4, !dbg !9794
  %356 = add nsw i32 %355, 1, !dbg !9796
  %357 = sext i32 %356 to i64, !dbg !9797
  %358 = load %struct._DATABLOB*, %struct._DATABLOB** %46, align 8, !dbg !9798
  %359 = getelementptr inbounds %struct._DATABLOB, %struct._DATABLOB* %358, i32 0, i32 0, !dbg !9799
  %360 = load i8*, i8** %359, align 8, !dbg !9799
  %361 = getelementptr inbounds i8, i8* %360, i64 %357, !dbg !9797
  %362 = load i8, i8* %361, align 1, !dbg !9797
  %363 = zext i8 %362 to i32, !dbg !9797
  %364 = load i32, i32* %42, align 4, !dbg !9800
  %365 = add nsw i32 %364, 2, !dbg !9801
  %366 = sext i32 %365 to i64, !dbg !9802
  %367 = load %struct._DATABLOB*, %struct._DATABLOB** %46, align 8, !dbg !9803
  %368 = getelementptr inbounds %struct._DATABLOB, %struct._DATABLOB* %367, i32 0, i32 0, !dbg !9804
  %369 = load i8*, i8** %368, align 8, !dbg !9804
  %370 = getelementptr inbounds i8, i8* %369, i64 %366, !dbg !9802
  %371 = load i8, i8* %370, align 1, !dbg !9802
  %372 = zext i8 %371 to i32, !dbg !9802
  %373 = shl i32 %372, 8, !dbg !9805
  %374 = or i32 %363, %373, !dbg !9806
  %375 = load i32, i32* %24, align 4, !dbg !9807
  %376 = add nsw i32 %375, %374, !dbg !9807
  store i32 %376, i32* %24, align 4, !dbg !9807
  br label %377

; <label>:377:                                    ; preds = %354, %331
  %378 = load i32, i32* %42, align 4, !dbg !9808
  %379 = add nsw i32 %378, 2, !dbg !9808
  store i32 %379, i32* %42, align 4, !dbg !9808
  br label %394, !dbg !9810

; <label>:380:                                    ; preds = %313
  %381 = load i8, i8* %21, align 1, !dbg !9811
  %382 = zext i8 %381 to i32, !dbg !9811
  %383 = and i32 %382, 4, !dbg !9815
  %384 = icmp ne i32 %383, 0, !dbg !9815
  br i1 %384, label %385, label %389, !dbg !9811

; <label>:385:                                    ; preds = %380
  %386 = load i32, i32* %43, align 4, !dbg !9816
  %387 = load i32, i32* %25, align 4, !dbg !9818
  %388 = add nsw i32 %387, %386, !dbg !9818
  store i32 %388, i32* %25, align 4, !dbg !9818
  br label %393, !dbg !9819

; <label>:389:                                    ; preds = %380
  %390 = load i32, i32* %43, align 4, !dbg !9820
  %391 = load i32, i32* %24, align 4, !dbg !9822
  %392 = add nsw i32 %391, %390, !dbg !9822
  store i32 %392, i32* %24, align 4, !dbg !9822
  br label %393

; <label>:393:                                    ; preds = %389, %385
  br label %394

; <label>:394:                                    ; preds = %393, %377
  br label %395, !dbg !9823

; <label>:395:                                    ; preds = %394, %298
  %396 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9825
  %397 = icmp ne %struct._FONTGLYPH* %396, null, !dbg !9828
  br i1 %397, label %398, label %456, !dbg !9825

; <label>:398:                                    ; preds = %395
  %399 = load i32, i32* %24, align 4, !dbg !9829
  %400 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9832
  %401 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %400, i32 0, i32 0, !dbg !9833
  %402 = load i16, i16* %401, align 8, !dbg !9833
  %403 = sext i16 %402 to i32, !dbg !9832
  %404 = add nsw i32 %399, %403, !dbg !9834
  store i32 %404, i32* %44, align 4, !dbg !9835
  %405 = load i32, i32* %25, align 4, !dbg !9836
  %406 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9837
  %407 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %406, i32 0, i32 1, !dbg !9838
  %408 = load i16, i16* %407, align 2, !dbg !9838
  %409 = sext i16 %408 to i32, !dbg !9837
  %410 = add nsw i32 %405, %409, !dbg !9839
  store i32 %410, i32* %45, align 4, !dbg !9840
  %411 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9841
  %412 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9842
  %413 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9843
  %414 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %413, i32 0, i32 4, !dbg !9844
  %415 = load i8*, i8** %414, align 8, !dbg !9844
  %416 = ptrtoint i8* %415 to i64, !dbg !9845
  %417 = call i32 @XSetStipple(%struct._XDisplay* %411, %struct._XGC* %412, i64 %416), !dbg !9846
  %418 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9847
  %419 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9848
  %420 = load i32, i32* %44, align 4, !dbg !9849
  %421 = load i32, i32* %45, align 4, !dbg !9850
  %422 = call i32 @XSetTSOrigin(%struct._XDisplay* %418, %struct._XGC* %419, i32 %420, i32 %421), !dbg !9851
  %423 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9853
  %424 = load i32, i32* @g_ownbackstore, align 4, !dbg !9854
  %425 = icmp ne i32 %424, 0, !dbg !9854
  br i1 %425, label %426, label %428, !dbg !9854

; <label>:426:                                    ; preds = %398
  %427 = load i64, i64* @g_backstore, align 8, !dbg !9855
  br label %430, !dbg !9858

; <label>:428:                                    ; preds = %398
  %429 = load i64, i64* @g_wnd, align 8, !dbg !9859
  br label %430, !dbg !9861

; <label>:430:                                    ; preds = %428, %426
  %431 = phi i64 [ %427, %426 ], [ %429, %428 ], !dbg !9862
  %432 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9864
  %433 = load i32, i32* %44, align 4, !dbg !9865
  %434 = load i32, i32* %45, align 4, !dbg !9866
  %435 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9867
  %436 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %435, i32 0, i32 2, !dbg !9868
  %437 = load i16, i16* %436, align 4, !dbg !9868
  %438 = zext i16 %437 to i32, !dbg !9867
  %439 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9869
  %440 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %439, i32 0, i32 3, !dbg !9870
  %441 = load i16, i16* %440, align 2, !dbg !9870
  %442 = zext i16 %441 to i32, !dbg !9869
  %443 = call i32 @XFillRectangle(%struct._XDisplay* %423, i64 %431, %struct._XGC* %432, i32 %433, i32 %434, i32 %438, i32 %442), !dbg !9871
  %444 = load i8, i8* %21, align 1, !dbg !9872
  %445 = zext i8 %444 to i32, !dbg !9872
  %446 = and i32 %445, 32, !dbg !9873
  %447 = icmp ne i32 %446, 0, !dbg !9873
  br i1 %447, label %448, label %455, !dbg !9872

; <label>:448:                                    ; preds = %430
  %449 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9874
  %450 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %449, i32 0, i32 2, !dbg !9877
  %451 = load i16, i16* %450, align 4, !dbg !9877
  %452 = zext i16 %451 to i32, !dbg !9874
  %453 = load i32, i32* %24, align 4, !dbg !9878
  %454 = add nsw i32 %453, %452, !dbg !9878
  store i32 %454, i32* %24, align 4, !dbg !9878
  br label %455, !dbg !9879

; <label>:455:                                    ; preds = %448, %430
  br label %456, !dbg !9880

; <label>:456:                                    ; preds = %455, %395
  br label %457, !dbg !9882

; <label>:457:                                    ; preds = %456
  %458 = load i32, i32* %42, align 4, !dbg !9884
  %459 = add nsw i32 %458, 1, !dbg !9884
  store i32 %459, i32* %42, align 4, !dbg !9884
  br label %292, !dbg !9886, !llvm.loop !9887

; <label>:460:                                    ; preds = %292
  br label %461, !dbg !9889

; <label>:461:                                    ; preds = %460, %234
  %462 = load i32, i32* %41, align 4, !dbg !9890
  %463 = add nsw i32 %462, 2, !dbg !9892
  %464 = load i8, i8* %38, align 1, !dbg !9893
  %465 = zext i8 %464 to i32, !dbg !9893
  %466 = icmp slt i32 %463, %465, !dbg !9894
  br i1 %466, label %467, label %470, !dbg !9895

; <label>:467:                                    ; preds = %461
  %468 = load i32, i32* %41, align 4, !dbg !9896
  %469 = add nsw i32 %468, 3, !dbg !9896
  store i32 %469, i32* %41, align 4, !dbg !9896
  br label %473, !dbg !9897

; <label>:470:                                    ; preds = %461
  %471 = load i32, i32* %41, align 4, !dbg !9898
  %472 = add nsw i32 %471, 2, !dbg !9898
  store i32 %472, i32* %41, align 4, !dbg !9898
  br label %473

; <label>:473:                                    ; preds = %470, %467
  %474 = load i32, i32* %41, align 4, !dbg !9899
  %475 = load i8, i8* %38, align 1, !dbg !9900
  %476 = zext i8 %475 to i32, !dbg !9900
  %477 = sub nsw i32 %476, %474, !dbg !9900
  %478 = trunc i32 %477 to i8, !dbg !9900
  store i8 %478, i8* %38, align 1, !dbg !9900
  %479 = load i32, i32* %41, align 4, !dbg !9901
  %480 = sext i32 %479 to i64, !dbg !9902
  %481 = load i8*, i8** %37, align 8, !dbg !9902
  %482 = getelementptr inbounds i8, i8* %481, i64 %480, !dbg !9902
  store i8* %482, i8** %37, align 8, !dbg !9903
  store i32 0, i32* %41, align 4, !dbg !9904
  br label %632, !dbg !9905

; <label>:483:                                    ; preds = %187
  %484 = load i8, i8* %20, align 1, !dbg !9906
  %485 = load i32, i32* %41, align 4, !dbg !9908
  %486 = sext i32 %485 to i64, !dbg !9909
  %487 = load i8*, i8** %37, align 8, !dbg !9909
  %488 = getelementptr inbounds i8, i8* %487, i64 %486, !dbg !9909
  %489 = load i8, i8* %488, align 1, !dbg !9909
  %490 = zext i8 %489 to i16, !dbg !9909
  %491 = call %struct._FONTGLYPH* @cache_get_font(i8 zeroext %484, i16 zeroext %490), !dbg !9910
  store %struct._FONTGLYPH* %491, %struct._FONTGLYPH** %40, align 8, !dbg !9911
  %492 = load i8, i8* %21, align 1, !dbg !9912
  %493 = zext i8 %492 to i32, !dbg !9912
  %494 = and i32 %493, 32, !dbg !9914
  %495 = icmp ne i32 %494, 0, !dbg !9914
  br i1 %495, label %568, label %496, !dbg !9915

; <label>:496:                                    ; preds = %483
  %497 = load i32, i32* %41, align 4, !dbg !9916
  %498 = add nsw i32 %497, 1, !dbg !9916
  store i32 %498, i32* %41, align 4, !dbg !9916
  %499 = sext i32 %498 to i64, !dbg !9919
  %500 = load i8*, i8** %37, align 8, !dbg !9919
  %501 = getelementptr inbounds i8, i8* %500, i64 %499, !dbg !9919
  %502 = load i8, i8* %501, align 1, !dbg !9919
  %503 = zext i8 %502 to i32, !dbg !9919
  store i32 %503, i32* %43, align 4, !dbg !9920
  %504 = load i32, i32* %43, align 4, !dbg !9921
  %505 = and i32 %504, 128, !dbg !9922
  %506 = icmp ne i32 %505, 0, !dbg !9922
  br i1 %506, label %507, label %553, !dbg !9923

; <label>:507:                                    ; preds = %496
  %508 = load i8, i8* %21, align 1, !dbg !9924
  %509 = zext i8 %508 to i32, !dbg !9924
  %510 = and i32 %509, 4, !dbg !9929
  %511 = icmp ne i32 %510, 0, !dbg !9929
  br i1 %511, label %512, label %531, !dbg !9924

; <label>:512:                                    ; preds = %507
  %513 = load i32, i32* %41, align 4, !dbg !9930
  %514 = add nsw i32 %513, 1, !dbg !9932
  %515 = sext i32 %514 to i64, !dbg !9933
  %516 = load i8*, i8** %37, align 8, !dbg !9933
  %517 = getelementptr inbounds i8, i8* %516, i64 %515, !dbg !9933
  %518 = load i8, i8* %517, align 1, !dbg !9933
  %519 = zext i8 %518 to i32, !dbg !9933
  %520 = load i32, i32* %41, align 4, !dbg !9934
  %521 = add nsw i32 %520, 2, !dbg !9935
  %522 = sext i32 %521 to i64, !dbg !9936
  %523 = load i8*, i8** %37, align 8, !dbg !9936
  %524 = getelementptr inbounds i8, i8* %523, i64 %522, !dbg !9936
  %525 = load i8, i8* %524, align 1, !dbg !9936
  %526 = zext i8 %525 to i32, !dbg !9936
  %527 = shl i32 %526, 8, !dbg !9937
  %528 = or i32 %519, %527, !dbg !9938
  %529 = load i32, i32* %25, align 4, !dbg !9939
  %530 = add nsw i32 %529, %528, !dbg !9939
  store i32 %530, i32* %25, align 4, !dbg !9939
  br label %550, !dbg !9940

; <label>:531:                                    ; preds = %507
  %532 = load i32, i32* %41, align 4, !dbg !9941
  %533 = add nsw i32 %532, 1, !dbg !9943
  %534 = sext i32 %533 to i64, !dbg !9944
  %535 = load i8*, i8** %37, align 8, !dbg !9944
  %536 = getelementptr inbounds i8, i8* %535, i64 %534, !dbg !9944
  %537 = load i8, i8* %536, align 1, !dbg !9944
  %538 = zext i8 %537 to i32, !dbg !9944
  %539 = load i32, i32* %41, align 4, !dbg !9945
  %540 = add nsw i32 %539, 2, !dbg !9946
  %541 = sext i32 %540 to i64, !dbg !9947
  %542 = load i8*, i8** %37, align 8, !dbg !9947
  %543 = getelementptr inbounds i8, i8* %542, i64 %541, !dbg !9947
  %544 = load i8, i8* %543, align 1, !dbg !9947
  %545 = zext i8 %544 to i32, !dbg !9947
  %546 = shl i32 %545, 8, !dbg !9948
  %547 = or i32 %538, %546, !dbg !9949
  %548 = load i32, i32* %24, align 4, !dbg !9950
  %549 = add nsw i32 %548, %547, !dbg !9950
  store i32 %549, i32* %24, align 4, !dbg !9950
  br label %550

; <label>:550:                                    ; preds = %531, %512
  %551 = load i32, i32* %41, align 4, !dbg !9951
  %552 = add nsw i32 %551, 2, !dbg !9951
  store i32 %552, i32* %41, align 4, !dbg !9951
  br label %567, !dbg !9953

; <label>:553:                                    ; preds = %496
  %554 = load i8, i8* %21, align 1, !dbg !9954
  %555 = zext i8 %554 to i32, !dbg !9954
  %556 = and i32 %555, 4, !dbg !9958
  %557 = icmp ne i32 %556, 0, !dbg !9958
  br i1 %557, label %558, label %562, !dbg !9954

; <label>:558:                                    ; preds = %553
  %559 = load i32, i32* %43, align 4, !dbg !9959
  %560 = load i32, i32* %25, align 4, !dbg !9961
  %561 = add nsw i32 %560, %559, !dbg !9961
  store i32 %561, i32* %25, align 4, !dbg !9961
  br label %566, !dbg !9962

; <label>:562:                                    ; preds = %553
  %563 = load i32, i32* %43, align 4, !dbg !9963
  %564 = load i32, i32* %24, align 4, !dbg !9965
  %565 = add nsw i32 %564, %563, !dbg !9965
  store i32 %565, i32* %24, align 4, !dbg !9965
  br label %566

; <label>:566:                                    ; preds = %562, %558
  br label %567

; <label>:567:                                    ; preds = %566, %550
  br label %568, !dbg !9966

; <label>:568:                                    ; preds = %567, %483
  %569 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9968
  %570 = icmp ne %struct._FONTGLYPH* %569, null, !dbg !9971
  br i1 %570, label %571, label %629, !dbg !9968

; <label>:571:                                    ; preds = %568
  %572 = load i32, i32* %24, align 4, !dbg !9972
  %573 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9975
  %574 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %573, i32 0, i32 0, !dbg !9976
  %575 = load i16, i16* %574, align 8, !dbg !9976
  %576 = sext i16 %575 to i32, !dbg !9975
  %577 = add nsw i32 %572, %576, !dbg !9977
  store i32 %577, i32* %44, align 4, !dbg !9978
  %578 = load i32, i32* %25, align 4, !dbg !9979
  %579 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9980
  %580 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %579, i32 0, i32 1, !dbg !9981
  %581 = load i16, i16* %580, align 2, !dbg !9981
  %582 = sext i16 %581 to i32, !dbg !9980
  %583 = add nsw i32 %578, %582, !dbg !9982
  store i32 %583, i32* %45, align 4, !dbg !9983
  %584 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9984
  %585 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9985
  %586 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !9986
  %587 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %586, i32 0, i32 4, !dbg !9987
  %588 = load i8*, i8** %587, align 8, !dbg !9987
  %589 = ptrtoint i8* %588 to i64, !dbg !9988
  %590 = call i32 @XSetStipple(%struct._XDisplay* %584, %struct._XGC* %585, i64 %589), !dbg !9989
  %591 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9990
  %592 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !9991
  %593 = load i32, i32* %44, align 4, !dbg !9992
  %594 = load i32, i32* %45, align 4, !dbg !9993
  %595 = call i32 @XSetTSOrigin(%struct._XDisplay* %591, %struct._XGC* %592, i32 %593, i32 %594), !dbg !9994
  %596 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !9996
  %597 = load i32, i32* @g_ownbackstore, align 4, !dbg !9997
  %598 = icmp ne i32 %597, 0, !dbg !9997
  br i1 %598, label %599, label %601, !dbg !9997

; <label>:599:                                    ; preds = %571
  %600 = load i64, i64* @g_backstore, align 8, !dbg !9998
  br label %603, !dbg !10001

; <label>:601:                                    ; preds = %571
  %602 = load i64, i64* @g_wnd, align 8, !dbg !10002
  br label %603, !dbg !10004

; <label>:603:                                    ; preds = %601, %599
  %604 = phi i64 [ %600, %599 ], [ %602, %601 ], !dbg !10005
  %605 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10007
  %606 = load i32, i32* %44, align 4, !dbg !10008
  %607 = load i32, i32* %45, align 4, !dbg !10009
  %608 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !10010
  %609 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %608, i32 0, i32 2, !dbg !10011
  %610 = load i16, i16* %609, align 4, !dbg !10011
  %611 = zext i16 %610 to i32, !dbg !10010
  %612 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !10012
  %613 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %612, i32 0, i32 3, !dbg !10013
  %614 = load i16, i16* %613, align 2, !dbg !10013
  %615 = zext i16 %614 to i32, !dbg !10012
  %616 = call i32 @XFillRectangle(%struct._XDisplay* %596, i64 %604, %struct._XGC* %605, i32 %606, i32 %607, i32 %611, i32 %615), !dbg !10014
  %617 = load i8, i8* %21, align 1, !dbg !10015
  %618 = zext i8 %617 to i32, !dbg !10015
  %619 = and i32 %618, 32, !dbg !10016
  %620 = icmp ne i32 %619, 0, !dbg !10016
  br i1 %620, label %621, label %628, !dbg !10015

; <label>:621:                                    ; preds = %603
  %622 = load %struct._FONTGLYPH*, %struct._FONTGLYPH** %40, align 8, !dbg !10017
  %623 = getelementptr inbounds %struct._FONTGLYPH, %struct._FONTGLYPH* %622, i32 0, i32 2, !dbg !10020
  %624 = load i16, i16* %623, align 4, !dbg !10020
  %625 = zext i16 %624 to i32, !dbg !10017
  %626 = load i32, i32* %24, align 4, !dbg !10021
  %627 = add nsw i32 %626, %625, !dbg !10021
  store i32 %627, i32* %24, align 4, !dbg !10021
  br label %628, !dbg !10022

; <label>:628:                                    ; preds = %621, %603
  br label %629, !dbg !10023

; <label>:629:                                    ; preds = %628, %568
  %630 = load i32, i32* %41, align 4, !dbg !10025
  %631 = add nsw i32 %630, 1, !dbg !10025
  store i32 %631, i32* %41, align 4, !dbg !10025
  br label %632, !dbg !10026

; <label>:632:                                    ; preds = %629, %473, %233, %201, %200
  br label %182, !dbg !10027, !llvm.loop !10029

; <label>:633:                                    ; preds = %182
  %634 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10031
  %635 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10032
  %636 = call i32 @XSetFillStyle(%struct._XDisplay* %634, %struct._XGC* %635, i32 0), !dbg !10033
  %637 = load i32, i32* @g_ownbackstore, align 4, !dbg !10034
  %638 = icmp ne i32 %637, 0, !dbg !10034
  br i1 %638, label %639, label %793, !dbg !10036

; <label>:639:                                    ; preds = %633
  %640 = load i32, i32* %32, align 4, !dbg !10037
  %641 = icmp sgt i32 %640, 1, !dbg !10040
  br i1 %641, label %642, label %717, !dbg !10041

; <label>:642:                                    ; preds = %639
  %643 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10042
  %644 = load i64, i64* @g_backstore, align 8, !dbg !10044
  %645 = load i64, i64* @g_wnd, align 8, !dbg !10045
  %646 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10046
  %647 = load i32, i32* %30, align 4, !dbg !10047
  %648 = load i32, i32* %31, align 4, !dbg !10048
  %649 = load i32, i32* %32, align 4, !dbg !10049
  %650 = load i32, i32* %33, align 4, !dbg !10050
  %651 = load i32, i32* %30, align 4, !dbg !10051
  %652 = load i32, i32* %31, align 4, !dbg !10052
  %653 = call i32 @XCopyArea(%struct._XDisplay* %643, i64 %644, i64 %645, %struct._XGC* %646, i32 %647, i32 %648, i32 %649, i32 %650, i32 %651, i32 %652), !dbg !10053
  br label %654, !dbg !10054, !llvm.loop !10055

; <label>:654:                                    ; preds = %642
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %47, metadata !10056, metadata !416), !dbg !10058
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %48, metadata !10059, metadata !416), !dbg !10060
  %655 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10061
  %656 = icmp ne %struct._seamless_window* %655, null, !dbg !10061
  br i1 %656, label %658, label %657, !dbg !10064

; <label>:657:                                    ; preds = %654
  br label %716, !dbg !10065

; <label>:658:                                    ; preds = %654
  %659 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10067
  store %struct._seamless_window* %659, %struct._seamless_window** %47, align 8, !dbg !10070
  br label %660, !dbg !10071

; <label>:660:                                    ; preds = %708, %658
  %661 = load %struct._seamless_window*, %struct._seamless_window** %47, align 8, !dbg !10072
  %662 = icmp ne %struct._seamless_window* %661, null, !dbg !10075
  br i1 %662, label %663, label %712, !dbg !10075

; <label>:663:                                    ; preds = %660
  %664 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !10076
  %665 = sext i16 %664 to i32, !dbg !10079
  %666 = load %struct._seamless_window*, %struct._seamless_window** %47, align 8, !dbg !10080
  %667 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %666, i32 0, i32 4, !dbg !10081
  %668 = load i32, i32* %667, align 8, !dbg !10081
  %669 = sub nsw i32 %665, %668, !dbg !10082
  %670 = trunc i32 %669 to i16, !dbg !10079
  %671 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %48, i32 0, i32 0, !dbg !10083
  store i16 %670, i16* %671, align 2, !dbg !10084
  %672 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !10085
  %673 = sext i16 %672 to i32, !dbg !10086
  %674 = load %struct._seamless_window*, %struct._seamless_window** %47, align 8, !dbg !10087
  %675 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %674, i32 0, i32 5, !dbg !10088
  %676 = load i32, i32* %675, align 4, !dbg !10088
  %677 = sub nsw i32 %673, %676, !dbg !10089
  %678 = trunc i32 %677 to i16, !dbg !10086
  %679 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %48, i32 0, i32 1, !dbg !10090
  store i16 %678, i16* %679, align 2, !dbg !10091
  %680 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !10092
  %681 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %48, i32 0, i32 2, !dbg !10093
  store i16 %680, i16* %681, align 2, !dbg !10094
  %682 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !10095
  %683 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %48, i32 0, i32 3, !dbg !10096
  store i16 %682, i16* %683, align 2, !dbg !10097
  %684 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10098
  %685 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10099
  %686 = call i32 @XSetClipRectangles(%struct._XDisplay* %684, %struct._XGC* %685, i32 0, i32 0, %struct.XRectangle* %48, i32 1, i32 3), !dbg !10100
  %687 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10101
  %688 = load i64, i64* @g_backstore, align 8, !dbg !10102
  %689 = load %struct._seamless_window*, %struct._seamless_window** %47, align 8, !dbg !10103
  %690 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %689, i32 0, i32 0, !dbg !10104
  %691 = load i64, i64* %690, align 8, !dbg !10104
  %692 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10105
  %693 = load i32, i32* %30, align 4, !dbg !10106
  %694 = load i32, i32* %31, align 4, !dbg !10107
  %695 = load i32, i32* %32, align 4, !dbg !10108
  %696 = load i32, i32* %33, align 4, !dbg !10109
  %697 = load i32, i32* %30, align 4, !dbg !10110
  %698 = load %struct._seamless_window*, %struct._seamless_window** %47, align 8, !dbg !10111
  %699 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %698, i32 0, i32 4, !dbg !10112
  %700 = load i32, i32* %699, align 8, !dbg !10112
  %701 = sub nsw i32 %697, %700, !dbg !10113
  %702 = load i32, i32* %31, align 4, !dbg !10114
  %703 = load %struct._seamless_window*, %struct._seamless_window** %47, align 8, !dbg !10115
  %704 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %703, i32 0, i32 5, !dbg !10116
  %705 = load i32, i32* %704, align 4, !dbg !10116
  %706 = sub nsw i32 %702, %705, !dbg !10117
  %707 = call i32 @XCopyArea(%struct._XDisplay* %687, i64 %688, i64 %691, %struct._XGC* %692, i32 %693, i32 %694, i32 %695, i32 %696, i32 %701, i32 %706), !dbg !10118
  br label %708, !dbg !10120

; <label>:708:                                    ; preds = %663
  %709 = load %struct._seamless_window*, %struct._seamless_window** %47, align 8, !dbg !10121
  %710 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %709, i32 0, i32 20, !dbg !10123
  %711 = load %struct._seamless_window*, %struct._seamless_window** %710, align 8, !dbg !10123
  store %struct._seamless_window* %711, %struct._seamless_window** %47, align 8, !dbg !10124
  br label %660, !dbg !10125, !llvm.loop !10126

; <label>:712:                                    ; preds = %660
  %713 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10128
  %714 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10130
  %715 = call i32 @XSetClipRectangles(%struct._XDisplay* %713, %struct._XGC* %714, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !10131
  br label %716, !dbg !10132

; <label>:716:                                    ; preds = %712, %657
  br label %792, !dbg !10133

; <label>:717:                                    ; preds = %639
  %718 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10134
  %719 = load i64, i64* @g_backstore, align 8, !dbg !10136
  %720 = load i64, i64* @g_wnd, align 8, !dbg !10137
  %721 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10138
  %722 = load i32, i32* %26, align 4, !dbg !10139
  %723 = load i32, i32* %27, align 4, !dbg !10140
  %724 = load i32, i32* %28, align 4, !dbg !10141
  %725 = load i32, i32* %29, align 4, !dbg !10142
  %726 = load i32, i32* %26, align 4, !dbg !10143
  %727 = load i32, i32* %27, align 4, !dbg !10144
  %728 = call i32 @XCopyArea(%struct._XDisplay* %718, i64 %719, i64 %720, %struct._XGC* %721, i32 %722, i32 %723, i32 %724, i32 %725, i32 %726, i32 %727), !dbg !10145
  br label %729, !dbg !10146, !llvm.loop !10147

; <label>:729:                                    ; preds = %717
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %49, metadata !10148, metadata !416), !dbg !10150
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %50, metadata !10151, metadata !416), !dbg !10152
  %730 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10153
  %731 = icmp ne %struct._seamless_window* %730, null, !dbg !10153
  br i1 %731, label %733, label %732, !dbg !10156

; <label>:732:                                    ; preds = %729
  br label %791, !dbg !10157

; <label>:733:                                    ; preds = %729
  %734 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10159
  store %struct._seamless_window* %734, %struct._seamless_window** %49, align 8, !dbg !10162
  br label %735, !dbg !10163

; <label>:735:                                    ; preds = %783, %733
  %736 = load %struct._seamless_window*, %struct._seamless_window** %49, align 8, !dbg !10164
  %737 = icmp ne %struct._seamless_window* %736, null, !dbg !10167
  br i1 %737, label %738, label %787, !dbg !10167

; <label>:738:                                    ; preds = %735
  %739 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !10168
  %740 = sext i16 %739 to i32, !dbg !10171
  %741 = load %struct._seamless_window*, %struct._seamless_window** %49, align 8, !dbg !10172
  %742 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %741, i32 0, i32 4, !dbg !10173
  %743 = load i32, i32* %742, align 8, !dbg !10173
  %744 = sub nsw i32 %740, %743, !dbg !10174
  %745 = trunc i32 %744 to i16, !dbg !10171
  %746 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %50, i32 0, i32 0, !dbg !10175
  store i16 %745, i16* %746, align 2, !dbg !10176
  %747 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !10177
  %748 = sext i16 %747 to i32, !dbg !10178
  %749 = load %struct._seamless_window*, %struct._seamless_window** %49, align 8, !dbg !10179
  %750 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %749, i32 0, i32 5, !dbg !10180
  %751 = load i32, i32* %750, align 4, !dbg !10180
  %752 = sub nsw i32 %748, %751, !dbg !10181
  %753 = trunc i32 %752 to i16, !dbg !10178
  %754 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %50, i32 0, i32 1, !dbg !10182
  store i16 %753, i16* %754, align 2, !dbg !10183
  %755 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !10184
  %756 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %50, i32 0, i32 2, !dbg !10185
  store i16 %755, i16* %756, align 2, !dbg !10186
  %757 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !10187
  %758 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %50, i32 0, i32 3, !dbg !10188
  store i16 %757, i16* %758, align 2, !dbg !10189
  %759 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10190
  %760 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10191
  %761 = call i32 @XSetClipRectangles(%struct._XDisplay* %759, %struct._XGC* %760, i32 0, i32 0, %struct.XRectangle* %50, i32 1, i32 3), !dbg !10192
  %762 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10193
  %763 = load i64, i64* @g_backstore, align 8, !dbg !10194
  %764 = load %struct._seamless_window*, %struct._seamless_window** %49, align 8, !dbg !10195
  %765 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %764, i32 0, i32 0, !dbg !10196
  %766 = load i64, i64* %765, align 8, !dbg !10196
  %767 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10197
  %768 = load i32, i32* %26, align 4, !dbg !10198
  %769 = load i32, i32* %27, align 4, !dbg !10199
  %770 = load i32, i32* %28, align 4, !dbg !10200
  %771 = load i32, i32* %29, align 4, !dbg !10201
  %772 = load i32, i32* %26, align 4, !dbg !10202
  %773 = load %struct._seamless_window*, %struct._seamless_window** %49, align 8, !dbg !10203
  %774 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %773, i32 0, i32 4, !dbg !10204
  %775 = load i32, i32* %774, align 8, !dbg !10204
  %776 = sub nsw i32 %772, %775, !dbg !10205
  %777 = load i32, i32* %27, align 4, !dbg !10206
  %778 = load %struct._seamless_window*, %struct._seamless_window** %49, align 8, !dbg !10207
  %779 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %778, i32 0, i32 5, !dbg !10208
  %780 = load i32, i32* %779, align 4, !dbg !10208
  %781 = sub nsw i32 %777, %780, !dbg !10209
  %782 = call i32 @XCopyArea(%struct._XDisplay* %762, i64 %763, i64 %766, %struct._XGC* %767, i32 %768, i32 %769, i32 %770, i32 %771, i32 %776, i32 %781), !dbg !10210
  br label %783, !dbg !10212

; <label>:783:                                    ; preds = %738
  %784 = load %struct._seamless_window*, %struct._seamless_window** %49, align 8, !dbg !10213
  %785 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %784, i32 0, i32 20, !dbg !10215
  %786 = load %struct._seamless_window*, %struct._seamless_window** %785, align 8, !dbg !10215
  store %struct._seamless_window* %786, %struct._seamless_window** %49, align 8, !dbg !10216
  br label %735, !dbg !10217, !llvm.loop !10218

; <label>:787:                                    ; preds = %735
  %788 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10220
  %789 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10222
  %790 = call i32 @XSetClipRectangles(%struct._XDisplay* %788, %struct._XGC* %789, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !10223
  br label %791, !dbg !10224

; <label>:791:                                    ; preds = %787, %732
  br label %792

; <label>:792:                                    ; preds = %791, %716
  br label %793, !dbg !10225

; <label>:793:                                    ; preds = %792, %633
  ret void, !dbg !10226
}

declare void @cache_put_text(i8 zeroext, i8*, i32) #2

declare %struct._DATABLOB* @cache_get_text(i8 zeroext) #2

declare %struct._FONTGLYPH* @cache_get_font(i8 zeroext, i16 zeroext) #2

; Function Attrs: nounwind uwtable
define void @ui_desktop_save(i32, i32, i32, i32, i32) #0 !dbg !10227 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca %struct._XImage*, align 8
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10230, metadata !416), !dbg !10231
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10232, metadata !416), !dbg !10233
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10234, metadata !416), !dbg !10235
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10236, metadata !416), !dbg !10237
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10238, metadata !416), !dbg !10239
  call void @llvm.dbg.declare(metadata i64* %11, metadata !10240, metadata !416), !dbg !10241
  call void @llvm.dbg.declare(metadata %struct._XImage** %12, metadata !10242, metadata !416), !dbg !10243
  %13 = load i32, i32* @g_ownbackstore, align 4, !dbg !10244
  %14 = icmp ne i32 %13, 0, !dbg !10244
  br i1 %14, label %15, label %25, !dbg !10246

; <label>:15:                                     ; preds = %5
  %16 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10247
  %17 = load i64, i64* @g_backstore, align 8, !dbg !10249
  %18 = load i32, i32* %7, align 4, !dbg !10250
  %19 = load i32, i32* %8, align 4, !dbg !10251
  %20 = load i32, i32* %9, align 4, !dbg !10252
  %21 = load i32, i32* %10, align 4, !dbg !10253
  %22 = call %struct._XImage* @XGetImage(%struct._XDisplay* %16, i64 %17, i32 %18, i32 %19, i32 %20, i32 %21, i64 -1, i32 2), !dbg !10254
  store %struct._XImage* %22, %struct._XImage** %12, align 8, !dbg !10255
  %23 = load %struct._XImage*, %struct._XImage** %12, align 8, !dbg !10256
  %24 = bitcast %struct._XImage* %23 to i8*, !dbg !10256
  call void @exit_if_null(i8* %24), !dbg !10257
  br label %51, !dbg !10258

; <label>:25:                                     ; preds = %5
  %26 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10259
  %27 = load i64, i64* @g_wnd, align 8, !dbg !10261
  %28 = load i32, i32* %9, align 4, !dbg !10262
  %29 = load i32, i32* %10, align 4, !dbg !10263
  %30 = load i32, i32* @g_depth, align 4, !dbg !10264
  %31 = call i64 @XCreatePixmap(%struct._XDisplay* %26, i64 %27, i32 %28, i32 %29, i32 %30), !dbg !10265
  store i64 %31, i64* %11, align 8, !dbg !10266
  %32 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10267
  %33 = load i64, i64* @g_wnd, align 8, !dbg !10268
  %34 = load i64, i64* %11, align 8, !dbg !10269
  %35 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10270
  %36 = load i32, i32* %7, align 4, !dbg !10271
  %37 = load i32, i32* %8, align 4, !dbg !10272
  %38 = load i32, i32* %9, align 4, !dbg !10273
  %39 = load i32, i32* %10, align 4, !dbg !10274
  %40 = call i32 @XCopyArea(%struct._XDisplay* %32, i64 %33, i64 %34, %struct._XGC* %35, i32 %36, i32 %37, i32 %38, i32 %39, i32 0, i32 0), !dbg !10275
  %41 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10276
  %42 = load i64, i64* %11, align 8, !dbg !10277
  %43 = load i32, i32* %9, align 4, !dbg !10278
  %44 = load i32, i32* %10, align 4, !dbg !10279
  %45 = call %struct._XImage* @XGetImage(%struct._XDisplay* %41, i64 %42, i32 0, i32 0, i32 %43, i32 %44, i64 -1, i32 2), !dbg !10280
  store %struct._XImage* %45, %struct._XImage** %12, align 8, !dbg !10281
  %46 = load %struct._XImage*, %struct._XImage** %12, align 8, !dbg !10282
  %47 = bitcast %struct._XImage* %46 to i8*, !dbg !10282
  call void @exit_if_null(i8* %47), !dbg !10283
  %48 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10284
  %49 = load i64, i64* %11, align 8, !dbg !10285
  %50 = call i32 @XFreePixmap(%struct._XDisplay* %48, i64 %49), !dbg !10286
  br label %51

; <label>:51:                                     ; preds = %25, %15
  %52 = load i32, i32* @g_bpp, align 4, !dbg !10287
  %53 = sdiv i32 %52, 8, !dbg !10288
  %54 = load i32, i32* %6, align 4, !dbg !10289
  %55 = mul i32 %54, %53, !dbg !10289
  store i32 %55, i32* %6, align 4, !dbg !10289
  %56 = load i32, i32* %6, align 4, !dbg !10290
  %57 = load i32, i32* %9, align 4, !dbg !10291
  %58 = load i32, i32* %10, align 4, !dbg !10292
  %59 = load %struct._XImage*, %struct._XImage** %12, align 8, !dbg !10293
  %60 = getelementptr inbounds %struct._XImage, %struct._XImage* %59, i32 0, i32 10, !dbg !10294
  %61 = load i32, i32* %60, align 4, !dbg !10294
  %62 = load i32, i32* @g_bpp, align 4, !dbg !10295
  %63 = sdiv i32 %62, 8, !dbg !10296
  %64 = load %struct._XImage*, %struct._XImage** %12, align 8, !dbg !10297
  %65 = getelementptr inbounds %struct._XImage, %struct._XImage* %64, i32 0, i32 4, !dbg !10298
  %66 = load i8*, i8** %65, align 8, !dbg !10298
  call void @cache_put_desktop(i32 %56, i32 %57, i32 %58, i32 %61, i32 %63, i8* %66), !dbg !10299
  %67 = load %struct._XImage*, %struct._XImage** %12, align 8, !dbg !10300
  %68 = getelementptr inbounds %struct._XImage, %struct._XImage* %67, i32 0, i32 16, !dbg !10301
  %69 = getelementptr inbounds %struct.funcs, %struct.funcs* %68, i32 0, i32 1, !dbg !10302
  %70 = load i32 (%struct._XImage*)*, i32 (%struct._XImage*)** %69, align 8, !dbg !10302
  %71 = load %struct._XImage*, %struct._XImage** %12, align 8, !dbg !10300
  %72 = call i32 %70(%struct._XImage* %71), !dbg !10303
  ret void, !dbg !10304
}

declare %struct._XImage* @XGetImage(%struct._XDisplay*, i64, i32, i32, i32, i32, i64, i32) #2

declare void @exit_if_null(i8*) #2

declare void @cache_put_desktop(i32, i32, i32, i32, i32, i8*) #2

; Function Attrs: nounwind uwtable
define void @ui_desktop_restore(i32, i32, i32, i32, i32) #0 !dbg !10305 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct._XImage*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct._seamless_window*, align 8
  %14 = alloca %struct.XRectangle, align 2
  %15 = alloca %struct._seamless_window*, align 8
  %16 = alloca %struct.XRectangle, align 2
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10306, metadata !416), !dbg !10307
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10308, metadata !416), !dbg !10309
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10310, metadata !416), !dbg !10311
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10312, metadata !416), !dbg !10313
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10314, metadata !416), !dbg !10315
  call void @llvm.dbg.declare(metadata %struct._XImage** %11, metadata !10316, metadata !416), !dbg !10317
  call void @llvm.dbg.declare(metadata i8** %12, metadata !10318, metadata !416), !dbg !10319
  %17 = load i32, i32* @g_bpp, align 4, !dbg !10320
  %18 = sdiv i32 %17, 8, !dbg !10321
  %19 = load i32, i32* %6, align 4, !dbg !10322
  %20 = mul i32 %19, %18, !dbg !10322
  store i32 %20, i32* %6, align 4, !dbg !10322
  %21 = load i32, i32* %6, align 4, !dbg !10323
  %22 = load i32, i32* %9, align 4, !dbg !10324
  %23 = load i32, i32* %10, align 4, !dbg !10325
  %24 = load i32, i32* @g_bpp, align 4, !dbg !10326
  %25 = sdiv i32 %24, 8, !dbg !10327
  %26 = call i8* @cache_get_desktop(i32 %21, i32 %22, i32 %23, i32 %25), !dbg !10328
  store i8* %26, i8** %12, align 8, !dbg !10329
  %27 = load i8*, i8** %12, align 8, !dbg !10330
  %28 = icmp eq i8* %27, null, !dbg !10332
  br i1 %28, label %29, label %30, !dbg !10333

; <label>:29:                                     ; preds = %5
  br label %202, !dbg !10334

; <label>:30:                                     ; preds = %5
  %31 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10335
  %32 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !10336
  %33 = load i32, i32* @g_depth, align 4, !dbg !10337
  %34 = load i8*, i8** %12, align 8, !dbg !10338
  %35 = load i32, i32* %9, align 4, !dbg !10339
  %36 = load i32, i32* %10, align 4, !dbg !10340
  %37 = load i32, i32* @g_bpp, align 4, !dbg !10341
  %38 = call %struct._XImage* @XCreateImage(%struct._XDisplay* %31, %struct.Visual* %32, i32 %33, i32 2, i32 0, i8* %34, i32 %35, i32 %36, i32 %37, i32 0), !dbg !10342
  store %struct._XImage* %38, %struct._XImage** %11, align 8, !dbg !10343
  %39 = load i32, i32* @g_ownbackstore, align 4, !dbg !10344
  %40 = icmp ne i32 %39, 0, !dbg !10344
  br i1 %40, label %41, label %125, !dbg !10346

; <label>:41:                                     ; preds = %30
  %42 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10347
  %43 = load i64, i64* @g_backstore, align 8, !dbg !10349
  %44 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10350
  %45 = load %struct._XImage*, %struct._XImage** %11, align 8, !dbg !10351
  %46 = load i32, i32* %7, align 4, !dbg !10352
  %47 = load i32, i32* %8, align 4, !dbg !10353
  %48 = load i32, i32* %9, align 4, !dbg !10354
  %49 = load i32, i32* %10, align 4, !dbg !10355
  %50 = call i32 @XPutImage(%struct._XDisplay* %42, i64 %43, %struct._XGC* %44, %struct._XImage* %45, i32 0, i32 0, i32 %46, i32 %47, i32 %48, i32 %49), !dbg !10356
  %51 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10357
  %52 = load i64, i64* @g_backstore, align 8, !dbg !10358
  %53 = load i64, i64* @g_wnd, align 8, !dbg !10359
  %54 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10360
  %55 = load i32, i32* %7, align 4, !dbg !10361
  %56 = load i32, i32* %8, align 4, !dbg !10362
  %57 = load i32, i32* %9, align 4, !dbg !10363
  %58 = load i32, i32* %10, align 4, !dbg !10364
  %59 = load i32, i32* %7, align 4, !dbg !10365
  %60 = load i32, i32* %8, align 4, !dbg !10366
  %61 = call i32 @XCopyArea(%struct._XDisplay* %51, i64 %52, i64 %53, %struct._XGC* %54, i32 %55, i32 %56, i32 %57, i32 %58, i32 %59, i32 %60), !dbg !10367
  br label %62, !dbg !10368, !llvm.loop !10369

; <label>:62:                                     ; preds = %41
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %13, metadata !10370, metadata !416), !dbg !10372
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %14, metadata !10373, metadata !416), !dbg !10374
  %63 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10375
  %64 = icmp ne %struct._seamless_window* %63, null, !dbg !10375
  br i1 %64, label %66, label %65, !dbg !10378

; <label>:65:                                     ; preds = %62
  br label %124, !dbg !10379

; <label>:66:                                     ; preds = %62
  %67 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10381
  store %struct._seamless_window* %67, %struct._seamless_window** %13, align 8, !dbg !10384
  br label %68, !dbg !10385

; <label>:68:                                     ; preds = %116, %66
  %69 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !10386
  %70 = icmp ne %struct._seamless_window* %69, null, !dbg !10389
  br i1 %70, label %71, label %120, !dbg !10389

; <label>:71:                                     ; preds = %68
  %72 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !10390
  %73 = sext i16 %72 to i32, !dbg !10393
  %74 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !10394
  %75 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %74, i32 0, i32 4, !dbg !10395
  %76 = load i32, i32* %75, align 8, !dbg !10395
  %77 = sub nsw i32 %73, %76, !dbg !10396
  %78 = trunc i32 %77 to i16, !dbg !10393
  %79 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %14, i32 0, i32 0, !dbg !10397
  store i16 %78, i16* %79, align 2, !dbg !10398
  %80 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !10399
  %81 = sext i16 %80 to i32, !dbg !10400
  %82 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !10401
  %83 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %82, i32 0, i32 5, !dbg !10402
  %84 = load i32, i32* %83, align 4, !dbg !10402
  %85 = sub nsw i32 %81, %84, !dbg !10403
  %86 = trunc i32 %85 to i16, !dbg !10400
  %87 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %14, i32 0, i32 1, !dbg !10404
  store i16 %86, i16* %87, align 2, !dbg !10405
  %88 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !10406
  %89 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %14, i32 0, i32 2, !dbg !10407
  store i16 %88, i16* %89, align 2, !dbg !10408
  %90 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !10409
  %91 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %14, i32 0, i32 3, !dbg !10410
  store i16 %90, i16* %91, align 2, !dbg !10411
  %92 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10412
  %93 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10413
  %94 = call i32 @XSetClipRectangles(%struct._XDisplay* %92, %struct._XGC* %93, i32 0, i32 0, %struct.XRectangle* %14, i32 1, i32 3), !dbg !10414
  %95 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10415
  %96 = load i64, i64* @g_backstore, align 8, !dbg !10416
  %97 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !10417
  %98 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %97, i32 0, i32 0, !dbg !10418
  %99 = load i64, i64* %98, align 8, !dbg !10418
  %100 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10419
  %101 = load i32, i32* %7, align 4, !dbg !10420
  %102 = load i32, i32* %8, align 4, !dbg !10421
  %103 = load i32, i32* %9, align 4, !dbg !10422
  %104 = load i32, i32* %10, align 4, !dbg !10423
  %105 = load i32, i32* %7, align 4, !dbg !10424
  %106 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !10425
  %107 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %106, i32 0, i32 4, !dbg !10426
  %108 = load i32, i32* %107, align 8, !dbg !10426
  %109 = sub nsw i32 %105, %108, !dbg !10427
  %110 = load i32, i32* %8, align 4, !dbg !10428
  %111 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !10429
  %112 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %111, i32 0, i32 5, !dbg !10430
  %113 = load i32, i32* %112, align 4, !dbg !10430
  %114 = sub nsw i32 %110, %113, !dbg !10431
  %115 = call i32 @XCopyArea(%struct._XDisplay* %95, i64 %96, i64 %99, %struct._XGC* %100, i32 %101, i32 %102, i32 %103, i32 %104, i32 %109, i32 %114), !dbg !10432
  br label %116, !dbg !10434

; <label>:116:                                    ; preds = %71
  %117 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !10435
  %118 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %117, i32 0, i32 20, !dbg !10437
  %119 = load %struct._seamless_window*, %struct._seamless_window** %118, align 8, !dbg !10437
  store %struct._seamless_window* %119, %struct._seamless_window** %13, align 8, !dbg !10438
  br label %68, !dbg !10439, !llvm.loop !10440

; <label>:120:                                    ; preds = %68
  %121 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10442
  %122 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10444
  %123 = call i32 @XSetClipRectangles(%struct._XDisplay* %121, %struct._XGC* %122, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !10445
  br label %124, !dbg !10446

; <label>:124:                                    ; preds = %120, %65
  br label %198, !dbg !10447

; <label>:125:                                    ; preds = %30
  %126 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10448
  %127 = load i64, i64* @g_wnd, align 8, !dbg !10450
  %128 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10451
  %129 = load %struct._XImage*, %struct._XImage** %11, align 8, !dbg !10452
  %130 = load i32, i32* %7, align 4, !dbg !10453
  %131 = load i32, i32* %8, align 4, !dbg !10454
  %132 = load i32, i32* %9, align 4, !dbg !10455
  %133 = load i32, i32* %10, align 4, !dbg !10456
  %134 = call i32 @XPutImage(%struct._XDisplay* %126, i64 %127, %struct._XGC* %128, %struct._XImage* %129, i32 0, i32 0, i32 %130, i32 %131, i32 %132, i32 %133), !dbg !10457
  br label %135, !dbg !10458, !llvm.loop !10459

; <label>:135:                                    ; preds = %125
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %15, metadata !10460, metadata !416), !dbg !10462
  call void @llvm.dbg.declare(metadata %struct.XRectangle* %16, metadata !10463, metadata !416), !dbg !10464
  %136 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10465
  %137 = icmp ne %struct._seamless_window* %136, null, !dbg !10465
  br i1 %137, label %139, label %138, !dbg !10468

; <label>:138:                                    ; preds = %135
  br label %197, !dbg !10469

; <label>:139:                                    ; preds = %135
  %140 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10471
  store %struct._seamless_window* %140, %struct._seamless_window** %15, align 8, !dbg !10474
  br label %141, !dbg !10475

; <label>:141:                                    ; preds = %189, %139
  %142 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !10476
  %143 = icmp ne %struct._seamless_window* %142, null, !dbg !10479
  br i1 %143, label %144, label %193, !dbg !10479

; <label>:144:                                    ; preds = %141
  %145 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 0), align 2, !dbg !10480
  %146 = sext i16 %145 to i32, !dbg !10483
  %147 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !10484
  %148 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %147, i32 0, i32 4, !dbg !10485
  %149 = load i32, i32* %148, align 8, !dbg !10485
  %150 = sub nsw i32 %146, %149, !dbg !10486
  %151 = trunc i32 %150 to i16, !dbg !10483
  %152 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %16, i32 0, i32 0, !dbg !10487
  store i16 %151, i16* %152, align 2, !dbg !10488
  %153 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 1), align 2, !dbg !10489
  %154 = sext i16 %153 to i32, !dbg !10490
  %155 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !10491
  %156 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %155, i32 0, i32 5, !dbg !10492
  %157 = load i32, i32* %156, align 4, !dbg !10492
  %158 = sub nsw i32 %154, %157, !dbg !10493
  %159 = trunc i32 %158 to i16, !dbg !10490
  %160 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %16, i32 0, i32 1, !dbg !10494
  store i16 %159, i16* %160, align 2, !dbg !10495
  %161 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 2), align 2, !dbg !10496
  %162 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %16, i32 0, i32 2, !dbg !10497
  store i16 %161, i16* %162, align 2, !dbg !10498
  %163 = load i16, i16* getelementptr inbounds (%struct.XRectangle, %struct.XRectangle* @g_clip_rectangle, i32 0, i32 3), align 2, !dbg !10499
  %164 = getelementptr inbounds %struct.XRectangle, %struct.XRectangle* %16, i32 0, i32 3, !dbg !10500
  store i16 %163, i16* %164, align 2, !dbg !10501
  %165 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10502
  %166 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10503
  %167 = call i32 @XSetClipRectangles(%struct._XDisplay* %165, %struct._XGC* %166, i32 0, i32 0, %struct.XRectangle* %16, i32 1, i32 3), !dbg !10504
  %168 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10505
  %169 = load i64, i64* @g_wnd, align 8, !dbg !10506
  %170 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !10507
  %171 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %170, i32 0, i32 0, !dbg !10508
  %172 = load i64, i64* %171, align 8, !dbg !10508
  %173 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10509
  %174 = load i32, i32* %7, align 4, !dbg !10510
  %175 = load i32, i32* %8, align 4, !dbg !10511
  %176 = load i32, i32* %9, align 4, !dbg !10512
  %177 = load i32, i32* %10, align 4, !dbg !10513
  %178 = load i32, i32* %7, align 4, !dbg !10514
  %179 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !10515
  %180 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %179, i32 0, i32 4, !dbg !10516
  %181 = load i32, i32* %180, align 8, !dbg !10516
  %182 = sub nsw i32 %178, %181, !dbg !10517
  %183 = load i32, i32* %8, align 4, !dbg !10518
  %184 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !10519
  %185 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %184, i32 0, i32 5, !dbg !10520
  %186 = load i32, i32* %185, align 4, !dbg !10520
  %187 = sub nsw i32 %183, %186, !dbg !10521
  %188 = call i32 @XCopyArea(%struct._XDisplay* %168, i64 %169, i64 %172, %struct._XGC* %173, i32 %174, i32 %175, i32 %176, i32 %177, i32 %182, i32 %187), !dbg !10522
  br label %189, !dbg !10524

; <label>:189:                                    ; preds = %144
  %190 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !10525
  %191 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %190, i32 0, i32 20, !dbg !10527
  %192 = load %struct._seamless_window*, %struct._seamless_window** %191, align 8, !dbg !10527
  store %struct._seamless_window* %192, %struct._seamless_window** %15, align 8, !dbg !10528
  br label %141, !dbg !10529, !llvm.loop !10530

; <label>:193:                                    ; preds = %141
  %194 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10532
  %195 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !10534
  %196 = call i32 @XSetClipRectangles(%struct._XDisplay* %194, %struct._XGC* %195, i32 0, i32 0, %struct.XRectangle* @g_clip_rectangle, i32 1, i32 3), !dbg !10535
  br label %197, !dbg !10536

; <label>:197:                                    ; preds = %193, %138
  br label %198

; <label>:198:                                    ; preds = %197, %124
  %199 = load %struct._XImage*, %struct._XImage** %11, align 8, !dbg !10537
  %200 = bitcast %struct._XImage* %199 to i8*, !dbg !10537
  %201 = call i32 @XFree(i8* %200), !dbg !10538
  br label %202, !dbg !10539

; <label>:202:                                    ; preds = %198, %29
  ret void, !dbg !10540
}

declare i8* @cache_get_desktop(i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @ui_begin_update() #0 !dbg !10542 {
  ret void, !dbg !10543
}

; Function Attrs: nounwind uwtable
define void @ui_end_update() #0 !dbg !10544 {
  %1 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10545
  %2 = call i32 @XFlush(%struct._XDisplay* %1), !dbg !10546
  ret void, !dbg !10547
}

declare i32 @XFlush(%struct._XDisplay*) #2

; Function Attrs: nounwind uwtable
define void @ui_seamless_begin(i32) #0 !dbg !10548 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10551, metadata !416), !dbg !10552
  %3 = load i32, i32* @g_seamless_rdp, align 4, !dbg !10553
  %4 = icmp ne i32 %3, 0, !dbg !10553
  br i1 %4, label %6, label %5, !dbg !10555

; <label>:5:                                      ; preds = %1
  br label %23, !dbg !10556

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @g_seamless_started, align 4, !dbg !10557
  %8 = icmp ne i32 %7, 0, !dbg !10557
  br i1 %8, label %9, label %10, !dbg !10559

; <label>:9:                                      ; preds = %6
  br label %23, !dbg !10560

; <label>:10:                                     ; preds = %6
  store i32 1, i32* @g_seamless_started, align 4, !dbg !10561
  %11 = load i32, i32* %2, align 4, !dbg !10562
  store i32 %11, i32* @g_seamless_hidden, align 4, !dbg !10563
  %12 = load i32, i32* %2, align 4, !dbg !10564
  %13 = icmp ne i32 %12, 0, !dbg !10564
  br i1 %13, label %15, label %14, !dbg !10566

; <label>:14:                                     ; preds = %10
  call void @ui_seamless_toggle(), !dbg !10567
  br label %15, !dbg !10567

; <label>:15:                                     ; preds = %14, %10
  %16 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @g_seamless_spawn_cmd, i64 0, i64 0), align 1, !dbg !10568
  %17 = icmp ne i8 %16, 0, !dbg !10568
  br i1 %17, label %18, label %20, !dbg !10570

; <label>:18:                                     ; preds = %15
  %19 = call i32 @seamless_send_spawn(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @g_seamless_spawn_cmd, i32 0, i32 0)), !dbg !10571
  store i8 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @g_seamless_spawn_cmd, i64 0, i64 0), align 1, !dbg !10573
  br label %20, !dbg !10574

; <label>:20:                                     ; preds = %18, %15
  %21 = load i32, i32* @g_seamless_persistent_mode, align 4, !dbg !10575
  %22 = call i32 @seamless_send_persistent(i32 %21), !dbg !10576
  br label %23, !dbg !10577

; <label>:23:                                     ; preds = %20, %9, %5
  ret void, !dbg !10578
}

; Function Attrs: nounwind uwtable
define void @ui_seamless_toggle() #0 !dbg !10580 {
  %1 = load i32, i32* @g_seamless_rdp, align 4, !dbg !10581
  %2 = icmp ne i32 %1, 0, !dbg !10581
  br i1 %2, label %4, label %3, !dbg !10583

; <label>:3:                                      ; preds = %0
  br label %40, !dbg !10584

; <label>:4:                                      ; preds = %0
  %5 = load i32, i32* @g_seamless_started, align 4, !dbg !10585
  %6 = icmp ne i32 %5, 0, !dbg !10585
  br i1 %6, label %8, label %7, !dbg !10587

; <label>:7:                                      ; preds = %4
  br label %40, !dbg !10588

; <label>:8:                                      ; preds = %4
  %9 = load i32, i32* @g_seamless_hidden, align 4, !dbg !10589
  %10 = icmp ne i32 %9, 0, !dbg !10589
  br i1 %10, label %11, label %12, !dbg !10591

; <label>:11:                                     ; preds = %8
  br label %40, !dbg !10592

; <label>:12:                                     ; preds = %8
  %13 = load i32, i32* @g_seamless_active, align 4, !dbg !10593
  %14 = icmp ne i32 %13, 0, !dbg !10593
  br i1 %14, label %15, label %30, !dbg !10595

; <label>:15:                                     ; preds = %12
  br label %16, !dbg !10596

; <label>:16:                                     ; preds = %19, %15
  %17 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10598
  %18 = icmp ne %struct._seamless_window* %17, null, !dbg !10600
  br i1 %18, label %19, label %26, !dbg !10600

; <label>:19:                                     ; preds = %16
  %20 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10601
  %21 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10603
  %22 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %21, i32 0, i32 0, !dbg !10604
  %23 = load i64, i64* %22, align 8, !dbg !10604
  %24 = call i32 @XDestroyWindow(%struct._XDisplay* %20, i64 %23), !dbg !10605
  %25 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10606
  call void @sw_remove_window(%struct._seamless_window* %25), !dbg !10607
  br label %16, !dbg !10608, !llvm.loop !10610

; <label>:26:                                     ; preds = %16
  %27 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10611
  %28 = load i64, i64* @g_wnd, align 8, !dbg !10612
  %29 = call i32 @XMapWindow(%struct._XDisplay* %27, i64 %28), !dbg !10613
  br label %35, !dbg !10614

; <label>:30:                                     ; preds = %12
  %31 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10615
  %32 = load i64, i64* @g_wnd, align 8, !dbg !10617
  %33 = call i32 @XUnmapWindow(%struct._XDisplay* %31, i64 %32), !dbg !10618
  %34 = call i32 @seamless_send_sync(), !dbg !10619
  br label %35

; <label>:35:                                     ; preds = %30, %26
  %36 = load i32, i32* @g_seamless_active, align 4, !dbg !10620
  %37 = icmp ne i32 %36, 0, !dbg !10621
  %38 = xor i1 %37, true, !dbg !10621
  %39 = zext i1 %38 to i32, !dbg !10621
  store i32 %39, i32* @g_seamless_active, align 4, !dbg !10622
  br label %40, !dbg !10623

; <label>:40:                                     ; preds = %35, %11, %7, %3
  ret void, !dbg !10624
}

declare i32 @seamless_send_spawn(i8*) #2

declare i32 @seamless_send_persistent(i32) #2

; Function Attrs: nounwind uwtable
define void @ui_seamless_end() #0 !dbg !10626 {
  br label %1, !dbg !10627

; <label>:1:                                      ; preds = %4, %0
  %2 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10628
  %3 = icmp ne %struct._seamless_window* %2, null, !dbg !10630
  br i1 %3, label %4, label %11, !dbg !10630

; <label>:4:                                      ; preds = %1
  %5 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10631
  %6 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10633
  %7 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %6, i32 0, i32 0, !dbg !10634
  %8 = load i64, i64* %7, align 8, !dbg !10634
  %9 = call i32 @XDestroyWindow(%struct._XDisplay* %5, i64 %8), !dbg !10635
  %10 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10636
  call void @sw_remove_window(%struct._seamless_window* %10), !dbg !10637
  br label %1, !dbg !10638, !llvm.loop !10640

; <label>:11:                                     ; preds = %1
  store i32 0, i32* @g_seamless_started, align 4, !dbg !10641
  store i32 0, i32* @g_seamless_active, align 4, !dbg !10642
  store i32 0, i32* @g_seamless_hidden, align 4, !dbg !10643
  ret void, !dbg !10644
}

; Function Attrs: nounwind uwtable
define internal void @sw_remove_window(%struct._seamless_window*) #0 !dbg !10645 {
  %2 = alloca %struct._seamless_window*, align 8
  %3 = alloca %struct._seamless_window*, align 8
  %4 = alloca %struct._seamless_window**, align 8
  store %struct._seamless_window* %0, %struct._seamless_window** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %2, metadata !10648, metadata !416), !dbg !10649
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %3, metadata !10650, metadata !416), !dbg !10651
  call void @llvm.dbg.declare(metadata %struct._seamless_window*** %4, metadata !10652, metadata !416), !dbg !10654
  store %struct._seamless_window** @g_seamless_windows, %struct._seamless_window*** %4, align 8, !dbg !10654
  %5 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10655
  store %struct._seamless_window* %5, %struct._seamless_window** %3, align 8, !dbg !10657
  br label %6, !dbg !10658

; <label>:6:                                      ; preds = %52, %1
  %7 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10659
  %8 = icmp ne %struct._seamless_window* %7, null, !dbg !10662
  br i1 %8, label %9, label %56, !dbg !10662

; <label>:9:                                      ; preds = %6
  %10 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10663
  %11 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !10666
  %12 = icmp eq %struct._seamless_window* %10, %11, !dbg !10667
  br i1 %12, label %13, label %49, !dbg !10668

; <label>:13:                                     ; preds = %9
  %14 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10669
  %15 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %14, i32 0, i32 20, !dbg !10671
  %16 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !10671
  %17 = load %struct._seamless_window**, %struct._seamless_window*** %4, align 8, !dbg !10672
  store %struct._seamless_window* %16, %struct._seamless_window** %17, align 8, !dbg !10673
  %18 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10674
  %19 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %18, i32 0, i32 3, !dbg !10675
  %20 = load %struct._seamless_group*, %struct._seamless_group** %19, align 8, !dbg !10675
  %21 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %20, i32 0, i32 2, !dbg !10676
  %22 = load i32, i32* %21, align 8, !dbg !10677
  %23 = add i32 %22, -1, !dbg !10677
  store i32 %23, i32* %21, align 8, !dbg !10677
  %24 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10678
  %25 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %24, i32 0, i32 3, !dbg !10680
  %26 = load %struct._seamless_group*, %struct._seamless_group** %25, align 8, !dbg !10680
  %27 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %26, i32 0, i32 2, !dbg !10681
  %28 = load i32, i32* %27, align 8, !dbg !10681
  %29 = icmp eq i32 %28, 0, !dbg !10682
  br i1 %29, label %30, label %42, !dbg !10683

; <label>:30:                                     ; preds = %13
  %31 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10684
  %32 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10686
  %33 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %32, i32 0, i32 3, !dbg !10687
  %34 = load %struct._seamless_group*, %struct._seamless_group** %33, align 8, !dbg !10687
  %35 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %34, i32 0, i32 0, !dbg !10688
  %36 = load i64, i64* %35, align 8, !dbg !10688
  %37 = call i32 @XDestroyWindow(%struct._XDisplay* %31, i64 %36), !dbg !10689
  %38 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10690
  %39 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %38, i32 0, i32 3, !dbg !10691
  %40 = load %struct._seamless_group*, %struct._seamless_group** %39, align 8, !dbg !10691
  %41 = bitcast %struct._seamless_group* %40 to i8*, !dbg !10690
  call void @xfree(i8* %41), !dbg !10692
  br label %42, !dbg !10693

; <label>:42:                                     ; preds = %30, %13
  %43 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10694
  %44 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %43, i32 0, i32 10, !dbg !10695
  %45 = load %struct.timeval*, %struct.timeval** %44, align 8, !dbg !10695
  %46 = bitcast %struct.timeval* %45 to i8*, !dbg !10694
  call void @xfree(i8* %46), !dbg !10696
  %47 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10697
  %48 = bitcast %struct._seamless_window* %47 to i8*, !dbg !10697
  call void @xfree(i8* %48), !dbg !10698
  br label %57, !dbg !10699

; <label>:49:                                     ; preds = %9
  %50 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10700
  %51 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %50, i32 0, i32 20, !dbg !10701
  store %struct._seamless_window** %51, %struct._seamless_window*** %4, align 8, !dbg !10702
  br label %52, !dbg !10703

; <label>:52:                                     ; preds = %49
  %53 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !10704
  %54 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %53, i32 0, i32 20, !dbg !10706
  %55 = load %struct._seamless_window*, %struct._seamless_window** %54, align 8, !dbg !10706
  store %struct._seamless_window* %55, %struct._seamless_window** %3, align 8, !dbg !10707
  br label %6, !dbg !10708, !llvm.loop !10709

; <label>:56:                                     ; preds = %6
  br label %57, !dbg !10711

; <label>:57:                                     ; preds = %56, %42
  ret void, !dbg !10712
}

; Function Attrs: nounwind uwtable
define void @ui_seamless_hide_desktop() #0 !dbg !10713 {
  %1 = load i32, i32* @g_seamless_rdp, align 4, !dbg !10714
  %2 = icmp ne i32 %1, 0, !dbg !10714
  br i1 %2, label %4, label %3, !dbg !10716

; <label>:3:                                      ; preds = %0
  br label %13, !dbg !10717

; <label>:4:                                      ; preds = %0
  %5 = load i32, i32* @g_seamless_started, align 4, !dbg !10718
  %6 = icmp ne i32 %5, 0, !dbg !10718
  br i1 %6, label %8, label %7, !dbg !10720

; <label>:7:                                      ; preds = %4
  br label %13, !dbg !10721

; <label>:8:                                      ; preds = %4
  %9 = load i32, i32* @g_seamless_active, align 4, !dbg !10722
  %10 = icmp ne i32 %9, 0, !dbg !10722
  br i1 %10, label %11, label %12, !dbg !10724

; <label>:11:                                     ; preds = %8
  call void @ui_seamless_toggle(), !dbg !10725
  br label %12, !dbg !10725

; <label>:12:                                     ; preds = %11, %8
  store i32 1, i32* @g_seamless_hidden, align 4, !dbg !10726
  br label %13, !dbg !10727

; <label>:13:                                     ; preds = %12, %7, %3
  ret void, !dbg !10728
}

; Function Attrs: nounwind uwtable
define void @ui_seamless_unhide_desktop() #0 !dbg !10730 {
  %1 = load i32, i32* @g_seamless_rdp, align 4, !dbg !10731
  %2 = icmp ne i32 %1, 0, !dbg !10731
  br i1 %2, label %4, label %3, !dbg !10733

; <label>:3:                                      ; preds = %0
  br label %9, !dbg !10734

; <label>:4:                                      ; preds = %0
  %5 = load i32, i32* @g_seamless_started, align 4, !dbg !10735
  %6 = icmp ne i32 %5, 0, !dbg !10735
  br i1 %6, label %8, label %7, !dbg !10737

; <label>:7:                                      ; preds = %4
  br label %9, !dbg !10738

; <label>:8:                                      ; preds = %4
  store i32 0, i32* @g_seamless_hidden, align 4, !dbg !10739
  call void @ui_seamless_toggle(), !dbg !10740
  br label %9, !dbg !10741

; <label>:9:                                      ; preds = %8, %7, %3
  ret void, !dbg !10742
}

declare i32 @XUnmapWindow(%struct._XDisplay*, i64) #2

declare i32 @seamless_send_sync() #2

; Function Attrs: nounwind uwtable
define void @ui_seamless_create_window(i64, i64, i64, i64) #0 !dbg !10744 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.XSetWindowAttributes, align 8
  %11 = alloca %struct.XClassHint*, align 8
  %12 = alloca %struct.XSizeHints*, align 8
  %13 = alloca %struct.XWMHints*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct._seamless_window*, align 8
  %17 = alloca %struct._seamless_window*, align 8
  %18 = alloca [2 x i64], align 16
  store i64 %0, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !10747, metadata !416), !dbg !10748
  store i64 %1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !10749, metadata !416), !dbg !10750
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !10751, metadata !416), !dbg !10752
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !10753, metadata !416), !dbg !10754
  call void @llvm.dbg.declare(metadata i64* %9, metadata !10755, metadata !416), !dbg !10756
  call void @llvm.dbg.declare(metadata %struct.XSetWindowAttributes* %10, metadata !10757, metadata !416), !dbg !10758
  call void @llvm.dbg.declare(metadata %struct.XClassHint** %11, metadata !10759, metadata !416), !dbg !10760
  call void @llvm.dbg.declare(metadata %struct.XSizeHints** %12, metadata !10761, metadata !416), !dbg !10762
  call void @llvm.dbg.declare(metadata %struct.XWMHints** %13, metadata !10763, metadata !416), !dbg !10777
  call void @llvm.dbg.declare(metadata i64* %14, metadata !10778, metadata !416), !dbg !10779
  call void @llvm.dbg.declare(metadata i64* %15, metadata !10780, metadata !416), !dbg !10781
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %16, metadata !10782, metadata !416), !dbg !10783
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %17, metadata !10784, metadata !416), !dbg !10785
  %19 = load i32, i32* @g_seamless_active, align 4, !dbg !10786
  %20 = icmp ne i32 %19, 0, !dbg !10786
  br i1 %20, label %22, label %21, !dbg !10788

; <label>:21:                                     ; preds = %4
  br label %219, !dbg !10789

; <label>:22:                                     ; preds = %4
  %23 = load i64, i64* %5, align 8, !dbg !10790
  %24 = call %struct._seamless_window* @sw_get_window_by_id(i64 %23), !dbg !10791
  store %struct._seamless_window* %24, %struct._seamless_window** %16, align 8, !dbg !10792
  %25 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10793
  %26 = icmp ne %struct._seamless_window* %25, null, !dbg !10793
  br i1 %26, label %27, label %28, !dbg !10795

; <label>:27:                                     ; preds = %22
  br label %219, !dbg !10796

; <label>:28:                                     ; preds = %22
  %29 = call i64 @get_window_attribs_seamless(%struct.XSetWindowAttributes* %10), !dbg !10797
  store i64 %29, i64* %15, align 8, !dbg !10798
  %30 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10799
  %31 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !10800
  %32 = getelementptr inbounds %struct.Screen, %struct.Screen* %31, i32 0, i32 2, !dbg !10801
  %33 = load i64, i64* %32, align 8, !dbg !10801
  %34 = load i32, i32* @g_depth, align 4, !dbg !10802
  %35 = load %struct.Visual*, %struct.Visual** @g_visual, align 8, !dbg !10803
  %36 = load i64, i64* %15, align 8, !dbg !10804
  %37 = call i64 @XCreateWindow(%struct._XDisplay* %30, i64 %33, i32 -1, i32 -1, i32 1, i32 1, i32 0, i32 %34, i32 1, %struct.Visual* %35, i64 %36, %struct.XSetWindowAttributes* %10), !dbg !10805
  store i64 %37, i64* %9, align 8, !dbg !10806
  %38 = load i64, i64* %9, align 8, !dbg !10807
  %39 = call i32 @getpid() #9, !dbg !10808
  call void @ewmh_set_wm_pid(i64 %38, i32 %39), !dbg !10809
  %40 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10811
  %41 = load i64, i64* %9, align 8, !dbg !10812
  call void @set_wm_client_machine(%struct._XDisplay* %40, i64 %41), !dbg !10813
  %42 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10814
  %43 = load i64, i64* %9, align 8, !dbg !10815
  %44 = call i32 @XStoreName(%struct._XDisplay* %42, i64 %43, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0)), !dbg !10816
  %45 = load i64, i64* %9, align 8, !dbg !10817
  call void @ewmh_set_wm_name(i64 %45, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0)), !dbg !10818
  %46 = load i64, i64* %9, align 8, !dbg !10819
  call void @mwm_hide_decorations(i64 %46), !dbg !10820
  %47 = call %struct.XClassHint* @XAllocClassHint(), !dbg !10821
  store %struct.XClassHint* %47, %struct.XClassHint** %11, align 8, !dbg !10822
  %48 = load %struct.XClassHint*, %struct.XClassHint** %11, align 8, !dbg !10823
  %49 = icmp ne %struct.XClassHint* %48, null, !dbg !10825
  br i1 %49, label %50, label %62, !dbg !10826

; <label>:50:                                     ; preds = %28
  %51 = load %struct.XClassHint*, %struct.XClassHint** %11, align 8, !dbg !10827
  %52 = getelementptr inbounds %struct.XClassHint, %struct.XClassHint* %51, i32 0, i32 0, !dbg !10829
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i8** %52, align 8, !dbg !10830
  %53 = load %struct.XClassHint*, %struct.XClassHint** %11, align 8, !dbg !10831
  %54 = getelementptr inbounds %struct.XClassHint, %struct.XClassHint* %53, i32 0, i32 1, !dbg !10832
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0), i8** %54, align 8, !dbg !10833
  %55 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10834
  %56 = load i64, i64* %9, align 8, !dbg !10835
  %57 = load %struct.XClassHint*, %struct.XClassHint** %11, align 8, !dbg !10836
  %58 = call i32 @XSetClassHint(%struct._XDisplay* %55, i64 %56, %struct.XClassHint* %57), !dbg !10837
  %59 = load %struct.XClassHint*, %struct.XClassHint** %11, align 8, !dbg !10838
  %60 = bitcast %struct.XClassHint* %59 to i8*, !dbg !10838
  %61 = call i32 @XFree(i8* %60), !dbg !10839
  br label %62, !dbg !10840

; <label>:62:                                     ; preds = %50, %28
  %63 = call %struct.XSizeHints* @XAllocSizeHints(), !dbg !10841
  store %struct.XSizeHints* %63, %struct.XSizeHints** %12, align 8, !dbg !10842
  %64 = load %struct.XSizeHints*, %struct.XSizeHints** %12, align 8, !dbg !10843
  %65 = icmp ne %struct.XSizeHints* %64, null, !dbg !10845
  br i1 %65, label %66, label %75, !dbg !10846

; <label>:66:                                     ; preds = %62
  %67 = load %struct.XSizeHints*, %struct.XSizeHints** %12, align 8, !dbg !10847
  %68 = getelementptr inbounds %struct.XSizeHints, %struct.XSizeHints* %67, i32 0, i32 0, !dbg !10849
  store i64 1, i64* %68, align 8, !dbg !10850
  %69 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10851
  %70 = load i64, i64* %9, align 8, !dbg !10852
  %71 = load %struct.XSizeHints*, %struct.XSizeHints** %12, align 8, !dbg !10853
  call void @XSetWMNormalHints(%struct._XDisplay* %69, i64 %70, %struct.XSizeHints* %71), !dbg !10854
  %72 = load %struct.XSizeHints*, %struct.XSizeHints** %12, align 8, !dbg !10855
  %73 = bitcast %struct.XSizeHints* %72 to i8*, !dbg !10855
  %74 = call i32 @XFree(i8* %73), !dbg !10856
  br label %75, !dbg !10857

; <label>:75:                                     ; preds = %66, %62
  %76 = load i64, i64* %7, align 8, !dbg !10858
  %77 = icmp eq i64 %76, 4294967295, !dbg !10860
  br i1 %77, label %78, label %87, !dbg !10861

; <label>:78:                                     ; preds = %75
  %79 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10862
  %80 = load i64, i64* %9, align 8, !dbg !10864
  %81 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !10865
  %82 = getelementptr inbounds %struct.Screen, %struct.Screen* %81, i32 0, i32 2, !dbg !10866
  %83 = load i64, i64* %82, align 8, !dbg !10866
  %84 = call i32 @XSetTransientForHint(%struct._XDisplay* %79, i64 %80, i64 %83), !dbg !10867
  %85 = load i64, i64* %9, align 8, !dbg !10868
  %86 = call i32 @ewmh_set_window_popup(i64 %85), !dbg !10869
  br label %106, !dbg !10870

; <label>:87:                                     ; preds = %75
  %88 = load i64, i64* %7, align 8, !dbg !10871
  %89 = icmp ne i64 %88, 0, !dbg !10873
  br i1 %89, label %90, label %105, !dbg !10874

; <label>:90:                                     ; preds = %87
  %91 = load i64, i64* %7, align 8, !dbg !10875
  %92 = call %struct._seamless_window* @sw_get_window_by_id(i64 %91), !dbg !10877
  store %struct._seamless_window* %92, %struct._seamless_window** %17, align 8, !dbg !10878
  %93 = load %struct._seamless_window*, %struct._seamless_window** %17, align 8, !dbg !10879
  %94 = icmp ne %struct._seamless_window* %93, null, !dbg !10879
  br i1 %94, label %95, label %102, !dbg !10881

; <label>:95:                                     ; preds = %90
  %96 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10882
  %97 = load i64, i64* %9, align 8, !dbg !10883
  %98 = load %struct._seamless_window*, %struct._seamless_window** %17, align 8, !dbg !10884
  %99 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %98, i32 0, i32 0, !dbg !10885
  %100 = load i64, i64* %99, align 8, !dbg !10885
  %101 = call i32 @XSetTransientForHint(%struct._XDisplay* %96, i64 %97, i64 %100), !dbg !10886
  br label %104, !dbg !10886

; <label>:102:                                    ; preds = %90
  %103 = load i64, i64* %7, align 8, !dbg !10887
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.29, i32 0, i32 0), i64 %103), !dbg !10888
  br label %104

; <label>:104:                                    ; preds = %102, %95
  br label %105, !dbg !10889

; <label>:105:                                    ; preds = %104, %87
  br label %106

; <label>:106:                                    ; preds = %105, %78
  %107 = load i64, i64* %8, align 8, !dbg !10890
  %108 = and i64 %107, 1, !dbg !10892
  %109 = icmp ne i64 %108, 0, !dbg !10892
  br i1 %109, label %110, label %123, !dbg !10893

; <label>:110:                                    ; preds = %106
  %111 = load i64, i64* %7, align 8, !dbg !10894
  %112 = icmp eq i64 %111, 0, !dbg !10897
  br i1 %112, label %113, label %120, !dbg !10898

; <label>:113:                                    ; preds = %110
  %114 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10899
  %115 = load i64, i64* %9, align 8, !dbg !10900
  %116 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !10901
  %117 = getelementptr inbounds %struct.Screen, %struct.Screen* %116, i32 0, i32 2, !dbg !10902
  %118 = load i64, i64* %117, align 8, !dbg !10902
  %119 = call i32 @XSetTransientForHint(%struct._XDisplay* %114, i64 %115, i64 %118), !dbg !10903
  br label %120, !dbg !10903

; <label>:120:                                    ; preds = %113, %110
  %121 = load i64, i64* %9, align 8, !dbg !10904
  %122 = call i32 @ewmh_set_window_modal(i64 %121), !dbg !10905
  br label %123, !dbg !10906

; <label>:123:                                    ; preds = %120, %106
  %124 = load i64, i64* %8, align 8, !dbg !10907
  %125 = and i64 %124, 2, !dbg !10909
  %126 = icmp ne i64 %125, 0, !dbg !10909
  br i1 %126, label %127, label %130, !dbg !10910

; <label>:127:                                    ; preds = %123
  %128 = load i64, i64* %9, align 8, !dbg !10911
  %129 = call i32 @ewmh_set_window_above(i64 %128), !dbg !10913
  br label %130, !dbg !10914

; <label>:130:                                    ; preds = %127, %123
  call void @get_input_mask(i64* %14), !dbg !10915
  %131 = load i64, i64* %14, align 8, !dbg !10916
  %132 = or i64 %131, 4194304, !dbg !10916
  store i64 %132, i64* %14, align 8, !dbg !10916
  %133 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10917
  %134 = load i64, i64* %9, align 8, !dbg !10918
  %135 = load i64, i64* %14, align 8, !dbg !10919
  %136 = call i32 @XSelectInput(%struct._XDisplay* %133, i64 %134, i64 %135), !dbg !10920
  call void @llvm.dbg.declare(metadata [2 x i64]* %18, metadata !10921, metadata !416), !dbg !10922
  %137 = getelementptr inbounds [2 x i64], [2 x i64]* %18, i64 0, i64 0, !dbg !10923
  %138 = load i64, i64* @g_net_wm_ping_atom, align 8, !dbg !10924
  store i64 %138, i64* %137, align 8, !dbg !10923
  %139 = getelementptr inbounds i64, i64* %137, i64 1, !dbg !10923
  %140 = load i64, i64* @g_kill_atom, align 8, !dbg !10925
  store i64 %140, i64* %139, align 8, !dbg !10923
  %141 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !10926
  %142 = load i64, i64* %9, align 8, !dbg !10927
  %143 = getelementptr inbounds [2 x i64], [2 x i64]* %18, i32 0, i32 0, !dbg !10928
  %144 = call i32 @XSetWMProtocols(%struct._XDisplay* %141, i64 %142, i64* %143, i32 2), !dbg !10929
  %145 = call i8* @xmalloc(i32 4200), !dbg !10930
  %146 = bitcast i8* %145 to %struct._seamless_window*, !dbg !10930
  store %struct._seamless_window* %146, %struct._seamless_window** %16, align 8, !dbg !10931
  %147 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10932
  %148 = bitcast %struct._seamless_window* %147 to i8*, !dbg !10933
  call void @llvm.memset.p0i8.i64(i8* %148, i8 0, i64 4200, i32 8, i1 false), !dbg !10933
  %149 = load i64, i64* %9, align 8, !dbg !10934
  %150 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10935
  %151 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %150, i32 0, i32 0, !dbg !10936
  store i64 %149, i64* %151, align 8, !dbg !10937
  %152 = load i64, i64* %5, align 8, !dbg !10938
  %153 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10939
  %154 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %153, i32 0, i32 1, !dbg !10940
  store i64 %152, i64* %154, align 8, !dbg !10941
  %155 = load i64, i64* %6, align 8, !dbg !10942
  %156 = call %struct._seamless_group* @sw_find_group(i64 %155, i32 0), !dbg !10943
  %157 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10944
  %158 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %157, i32 0, i32 3, !dbg !10945
  store %struct._seamless_group* %156, %struct._seamless_group** %158, align 8, !dbg !10946
  %159 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10947
  %160 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %159, i32 0, i32 3, !dbg !10948
  %161 = load %struct._seamless_group*, %struct._seamless_group** %160, align 8, !dbg !10948
  %162 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %161, i32 0, i32 2, !dbg !10949
  %163 = load i32, i32* %162, align 8, !dbg !10950
  %164 = add i32 %163, 1, !dbg !10950
  store i32 %164, i32* %162, align 8, !dbg !10950
  %165 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10951
  %166 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %165, i32 0, i32 8, !dbg !10952
  store i32 -1, i32* %166, align 8, !dbg !10953
  %167 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10954
  %168 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %167, i32 0, i32 9, !dbg !10955
  store i32 0, i32* %168, align 4, !dbg !10956
  %169 = call i8* @xmalloc(i32 16), !dbg !10957
  %170 = bitcast i8* %169 to %struct.timeval*, !dbg !10957
  %171 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10958
  %172 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %171, i32 0, i32 10, !dbg !10959
  store %struct.timeval* %170, %struct.timeval** %172, align 8, !dbg !10960
  %173 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10961
  %174 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %173, i32 0, i32 10, !dbg !10962
  %175 = load %struct.timeval*, %struct.timeval** %174, align 8, !dbg !10962
  %176 = getelementptr inbounds %struct.timeval, %struct.timeval* %175, i32 0, i32 1, !dbg !10963
  store i64 0, i64* %176, align 8, !dbg !10964
  %177 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10961
  %178 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %177, i32 0, i32 10, !dbg !10962
  %179 = load %struct.timeval*, %struct.timeval** %178, align 8, !dbg !10962
  %180 = getelementptr inbounds %struct.timeval, %struct.timeval* %179, i32 0, i32 0, !dbg !10963
  store i64 0, i64* %180, align 8, !dbg !10965
  %181 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10966
  %182 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %181, i32 0, i32 11, !dbg !10967
  store i32 0, i32* %182, align 8, !dbg !10968
  %183 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10969
  %184 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %183, i32 0, i32 12, !dbg !10970
  store i32 0, i32* %184, align 4, !dbg !10971
  %185 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10972
  %186 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %185, i32 0, i32 14, !dbg !10973
  store i32 0, i32* %186, align 4, !dbg !10974
  %187 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10975
  %188 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %187, i32 0, i32 13, !dbg !10976
  store i32 0, i32* %188, align 8, !dbg !10977
  %189 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10978
  %190 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %189, i32 0, i32 16, !dbg !10979
  store i32 0, i32* %190, align 4, !dbg !10980
  %191 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10981
  %192 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %191, i32 0, i32 15, !dbg !10982
  store i32 0, i32* %192, align 8, !dbg !10983
  %193 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10984
  %194 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10985
  %195 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %194, i32 0, i32 20, !dbg !10986
  store %struct._seamless_window* %193, %struct._seamless_window** %195, align 8, !dbg !10987
  %196 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10988
  store %struct._seamless_window* %196, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !10989
  %197 = call %struct.XWMHints* @XAllocWMHints(), !dbg !10990
  store %struct.XWMHints* %197, %struct.XWMHints** %13, align 8, !dbg !10991
  %198 = load %struct.XWMHints*, %struct.XWMHints** %13, align 8, !dbg !10992
  %199 = icmp ne %struct.XWMHints* %198, null, !dbg !10992
  br i1 %199, label %200, label %219, !dbg !10994

; <label>:200:                                    ; preds = %130
  %201 = load %struct.XWMHints*, %struct.XWMHints** %13, align 8, !dbg !10995
  %202 = getelementptr inbounds %struct.XWMHints, %struct.XWMHints* %201, i32 0, i32 0, !dbg !10997
  store i64 64, i64* %202, align 8, !dbg !10998
  %203 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !10999
  %204 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %203, i32 0, i32 3, !dbg !11000
  %205 = load %struct._seamless_group*, %struct._seamless_group** %204, align 8, !dbg !11000
  %206 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %205, i32 0, i32 0, !dbg !11001
  %207 = load i64, i64* %206, align 8, !dbg !11001
  %208 = load %struct.XWMHints*, %struct.XWMHints** %13, align 8, !dbg !11002
  %209 = getelementptr inbounds %struct.XWMHints, %struct.XWMHints* %208, i32 0, i32 8, !dbg !11003
  store i64 %207, i64* %209, align 8, !dbg !11004
  %210 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11005
  %211 = load %struct._seamless_window*, %struct._seamless_window** %16, align 8, !dbg !11006
  %212 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %211, i32 0, i32 0, !dbg !11007
  %213 = load i64, i64* %212, align 8, !dbg !11007
  %214 = load %struct.XWMHints*, %struct.XWMHints** %13, align 8, !dbg !11008
  %215 = call i32 @XSetWMHints(%struct._XDisplay* %210, i64 %213, %struct.XWMHints* %214), !dbg !11009
  %216 = load %struct.XWMHints*, %struct.XWMHints** %13, align 8, !dbg !11010
  %217 = bitcast %struct.XWMHints* %216 to i8*, !dbg !11010
  %218 = call i32 @XFree(i8* %217), !dbg !11011
  br label %219, !dbg !11012

; <label>:219:                                    ; preds = %21, %27, %200, %130
  ret void, !dbg !11013
}

; Function Attrs: nounwind uwtable
define internal i64 @get_window_attribs_seamless(%struct.XSetWindowAttributes*) #0 !dbg !11014 {
  %2 = alloca %struct.XSetWindowAttributes*, align 8
  store %struct.XSetWindowAttributes* %0, %struct.XSetWindowAttributes** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.XSetWindowAttributes** %2, metadata !11015, metadata !416), !dbg !11016
  %3 = load %struct.XSetWindowAttributes*, %struct.XSetWindowAttributes** %2, align 8, !dbg !11017
  %4 = call i64 @get_window_attribs(%struct.XSetWindowAttributes* %3), !dbg !11018
  %5 = and i64 %4, -513, !dbg !11019
  ret i64 %5, !dbg !11020
}

declare i32 @XSetTransientForHint(%struct._XDisplay*, i64, i64) #2

declare i32 @ewmh_set_window_popup(i64) #2

declare i32 @ewmh_set_window_modal(i64) #2

declare i32 @ewmh_set_window_above(i64) #2

; Function Attrs: nounwind uwtable
define internal %struct._seamless_group* @sw_find_group(i64, i32) #0 !dbg !11021 {
  %3 = alloca %struct._seamless_group*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct._seamless_window*, align 8
  %7 = alloca %struct._seamless_group*, align 8
  %8 = alloca %struct.XSetWindowAttributes, align 8
  store i64 %0, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11024, metadata !416), !dbg !11025
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11026, metadata !416), !dbg !11027
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %6, metadata !11028, metadata !416), !dbg !11029
  call void @llvm.dbg.declare(metadata %struct._seamless_group** %7, metadata !11030, metadata !416), !dbg !11031
  call void @llvm.dbg.declare(metadata %struct.XSetWindowAttributes* %8, metadata !11032, metadata !416), !dbg !11033
  %9 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !11034
  store %struct._seamless_window* %9, %struct._seamless_window** %6, align 8, !dbg !11036
  br label %10, !dbg !11037

; <label>:10:                                     ; preds = %26, %2
  %11 = load %struct._seamless_window*, %struct._seamless_window** %6, align 8, !dbg !11038
  %12 = icmp ne %struct._seamless_window* %11, null, !dbg !11041
  br i1 %12, label %13, label %30, !dbg !11041

; <label>:13:                                     ; preds = %10
  %14 = load %struct._seamless_window*, %struct._seamless_window** %6, align 8, !dbg !11042
  %15 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %14, i32 0, i32 3, !dbg !11045
  %16 = load %struct._seamless_group*, %struct._seamless_group** %15, align 8, !dbg !11045
  %17 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %16, i32 0, i32 1, !dbg !11046
  %18 = load i64, i64* %17, align 8, !dbg !11046
  %19 = load i64, i64* %4, align 8, !dbg !11047
  %20 = icmp eq i64 %18, %19, !dbg !11048
  br i1 %20, label %21, label %25, !dbg !11049

; <label>:21:                                     ; preds = %13
  %22 = load %struct._seamless_window*, %struct._seamless_window** %6, align 8, !dbg !11050
  %23 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %22, i32 0, i32 3, !dbg !11051
  %24 = load %struct._seamless_group*, %struct._seamless_group** %23, align 8, !dbg !11051
  store %struct._seamless_group* %24, %struct._seamless_group** %3, align 8, !dbg !11052
  br label %54, !dbg !11052

; <label>:25:                                     ; preds = %13
  br label %26, !dbg !11053

; <label>:26:                                     ; preds = %25
  %27 = load %struct._seamless_window*, %struct._seamless_window** %6, align 8, !dbg !11054
  %28 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %27, i32 0, i32 20, !dbg !11056
  %29 = load %struct._seamless_window*, %struct._seamless_window** %28, align 8, !dbg !11056
  store %struct._seamless_window* %29, %struct._seamless_window** %6, align 8, !dbg !11057
  br label %10, !dbg !11058, !llvm.loop !11059

; <label>:30:                                     ; preds = %10
  %31 = load i32, i32* %5, align 4, !dbg !11061
  %32 = icmp ne i32 %31, 0, !dbg !11061
  br i1 %32, label %33, label %34, !dbg !11063

; <label>:33:                                     ; preds = %30
  store %struct._seamless_group* null, %struct._seamless_group** %3, align 8, !dbg !11064
  br label %54, !dbg !11064

; <label>:34:                                     ; preds = %30
  %35 = call i8* @xmalloc(i32 24), !dbg !11065
  %36 = bitcast i8* %35 to %struct._seamless_group*, !dbg !11065
  store %struct._seamless_group* %36, %struct._seamless_group** %7, align 8, !dbg !11066
  %37 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11067
  %38 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !11068
  %39 = getelementptr inbounds %struct.Screen, %struct.Screen* %38, i32 0, i32 2, !dbg !11069
  %40 = load i64, i64* %39, align 8, !dbg !11069
  %41 = call i64 @XCreateWindow(%struct._XDisplay* %37, i64 %40, i32 -1, i32 -1, i32 1, i32 1, i32 0, i32 0, i32 0, %struct.Visual* null, i64 0, %struct.XSetWindowAttributes* %8), !dbg !11070
  %42 = load %struct._seamless_group*, %struct._seamless_group** %7, align 8, !dbg !11071
  %43 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %42, i32 0, i32 0, !dbg !11072
  store i64 %41, i64* %43, align 8, !dbg !11073
  %44 = load %struct._seamless_group*, %struct._seamless_group** %7, align 8, !dbg !11074
  %45 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %44, i32 0, i32 0, !dbg !11075
  %46 = load i64, i64* %45, align 8, !dbg !11075
  %47 = call i32 @getpid() #9, !dbg !11076
  call void @ewmh_set_wm_pid(i64 %46, i32 %47), !dbg !11077
  %48 = load i64, i64* %4, align 8, !dbg !11079
  %49 = load %struct._seamless_group*, %struct._seamless_group** %7, align 8, !dbg !11080
  %50 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %49, i32 0, i32 1, !dbg !11081
  store i64 %48, i64* %50, align 8, !dbg !11082
  %51 = load %struct._seamless_group*, %struct._seamless_group** %7, align 8, !dbg !11083
  %52 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %51, i32 0, i32 2, !dbg !11084
  store i32 0, i32* %52, align 8, !dbg !11085
  %53 = load %struct._seamless_group*, %struct._seamless_group** %7, align 8, !dbg !11086
  store %struct._seamless_group* %53, %struct._seamless_group** %3, align 8, !dbg !11087
  br label %54, !dbg !11087

; <label>:54:                                     ; preds = %34, %33, %21
  %55 = load %struct._seamless_group*, %struct._seamless_group** %3, align 8, !dbg !11088
  ret %struct._seamless_group* %55, !dbg !11088
}

declare %struct.XWMHints* @XAllocWMHints() #2

declare i32 @XSetWMHints(%struct._XDisplay*, i64, %struct.XWMHints*) #2

; Function Attrs: nounwind uwtable
define void @ui_seamless_destroy_window(i64, i64) #0 !dbg !11089 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct._seamless_window*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !11092, metadata !416), !dbg !11093
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11094, metadata !416), !dbg !11095
  %6 = load i64, i64* %4, align 8, !dbg !11096
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %5, metadata !11097, metadata !416), !dbg !11098
  %7 = load i32, i32* @g_seamless_active, align 4, !dbg !11099
  %8 = icmp ne i32 %7, 0, !dbg !11099
  br i1 %8, label %10, label %9, !dbg !11101

; <label>:9:                                      ; preds = %2
  br label %24, !dbg !11102

; <label>:10:                                     ; preds = %2
  %11 = load i64, i64* %3, align 8, !dbg !11103
  %12 = call %struct._seamless_window* @sw_get_window_by_id(i64 %11), !dbg !11104
  store %struct._seamless_window* %12, %struct._seamless_window** %5, align 8, !dbg !11105
  %13 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11106
  %14 = icmp ne %struct._seamless_window* %13, null, !dbg !11106
  br i1 %14, label %17, label %15, !dbg !11108

; <label>:15:                                     ; preds = %10
  %16 = load i64, i64* %3, align 8, !dbg !11109
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.30, i32 0, i32 0), i64 %16), !dbg !11111
  br label %24, !dbg !11112

; <label>:17:                                     ; preds = %10
  %18 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11113
  %19 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11114
  %20 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %19, i32 0, i32 0, !dbg !11115
  %21 = load i64, i64* %20, align 8, !dbg !11115
  %22 = call i32 @XDestroyWindow(%struct._XDisplay* %18, i64 %21), !dbg !11116
  %23 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11117
  call void @sw_remove_window(%struct._seamless_window* %23), !dbg !11118
  br label %24, !dbg !11119

; <label>:24:                                     ; preds = %17, %15, %9
  ret void, !dbg !11120
}

; Function Attrs: nounwind uwtable
define void @ui_seamless_destroy_group(i64, i64) #0 !dbg !11122 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct._seamless_window*, align 8
  %6 = alloca %struct._seamless_window*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !11123, metadata !416), !dbg !11124
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11125, metadata !416), !dbg !11126
  %7 = load i64, i64* %4, align 8, !dbg !11127
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %5, metadata !11128, metadata !416), !dbg !11129
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %6, metadata !11130, metadata !416), !dbg !11131
  %8 = load i32, i32* @g_seamless_active, align 4, !dbg !11132
  %9 = icmp ne i32 %8, 0, !dbg !11132
  br i1 %9, label %11, label %10, !dbg !11134

; <label>:10:                                     ; preds = %2
  br label %37, !dbg !11135

; <label>:11:                                     ; preds = %2
  %12 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !11136
  store %struct._seamless_window* %12, %struct._seamless_window** %5, align 8, !dbg !11138
  br label %13, !dbg !11139

; <label>:13:                                     ; preds = %35, %11
  %14 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11140
  %15 = icmp ne %struct._seamless_window* %14, null, !dbg !11143
  br i1 %15, label %16, label %37, !dbg !11143

; <label>:16:                                     ; preds = %13
  %17 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11144
  %18 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %17, i32 0, i32 20, !dbg !11146
  %19 = load %struct._seamless_window*, %struct._seamless_window** %18, align 8, !dbg !11146
  store %struct._seamless_window* %19, %struct._seamless_window** %6, align 8, !dbg !11147
  %20 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11148
  %21 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %20, i32 0, i32 3, !dbg !11150
  %22 = load %struct._seamless_group*, %struct._seamless_group** %21, align 8, !dbg !11150
  %23 = getelementptr inbounds %struct._seamless_group, %struct._seamless_group* %22, i32 0, i32 1, !dbg !11151
  %24 = load i64, i64* %23, align 8, !dbg !11151
  %25 = load i64, i64* %3, align 8, !dbg !11152
  %26 = icmp eq i64 %24, %25, !dbg !11153
  br i1 %26, label %27, label %34, !dbg !11154

; <label>:27:                                     ; preds = %16
  %28 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11155
  %29 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11157
  %30 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %29, i32 0, i32 0, !dbg !11158
  %31 = load i64, i64* %30, align 8, !dbg !11158
  %32 = call i32 @XDestroyWindow(%struct._XDisplay* %28, i64 %31), !dbg !11159
  %33 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11160
  call void @sw_remove_window(%struct._seamless_window* %33), !dbg !11161
  br label %34, !dbg !11162

; <label>:34:                                     ; preds = %27, %16
  br label %35, !dbg !11163

; <label>:35:                                     ; preds = %34
  %36 = load %struct._seamless_window*, %struct._seamless_window** %6, align 8, !dbg !11164
  store %struct._seamless_window* %36, %struct._seamless_window** %5, align 8, !dbg !11166
  br label %13, !dbg !11167, !llvm.loop !11168

; <label>:37:                                     ; preds = %10, %13
  ret void, !dbg !11170
}

; Function Attrs: nounwind uwtable
define void @ui_seamless_seticon(i64, i8*, i32, i32, i32, i8*, i64) #0 !dbg !11171 {
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %struct._seamless_window*, align 8
  store i64 %0, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !11178, metadata !416), !dbg !11179
  store i8* %1, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !11180, metadata !416), !dbg !11181
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11182, metadata !416), !dbg !11183
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !11184, metadata !416), !dbg !11185
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !11186, metadata !416), !dbg !11187
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !11188, metadata !416), !dbg !11189
  store i64 %6, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !11190, metadata !416), !dbg !11191
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %15, metadata !11192, metadata !416), !dbg !11193
  %16 = load i32, i32* @g_seamless_active, align 4, !dbg !11194
  %17 = icmp ne i32 %16, 0, !dbg !11194
  br i1 %17, label %19, label %18, !dbg !11196

; <label>:18:                                     ; preds = %7
  br label %126, !dbg !11197

; <label>:19:                                     ; preds = %7
  %20 = load i64, i64* %8, align 8, !dbg !11198
  %21 = call %struct._seamless_window* @sw_get_window_by_id(i64 %20), !dbg !11199
  store %struct._seamless_window* %21, %struct._seamless_window** %15, align 8, !dbg !11200
  %22 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11201
  %23 = icmp ne %struct._seamless_window* %22, null, !dbg !11201
  br i1 %23, label %26, label %24, !dbg !11203

; <label>:24:                                     ; preds = %19
  %25 = load i64, i64* %8, align 8, !dbg !11204
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.31, i32 0, i32 0), i64 %25), !dbg !11206
  br label %126, !dbg !11207

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* %12, align 4, !dbg !11208
  %28 = icmp eq i32 %27, 0, !dbg !11210
  br i1 %28, label %29, label %61, !dbg !11211

; <label>:29:                                     ; preds = %26
  %30 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11212
  %31 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %30, i32 0, i32 17, !dbg !11215
  %32 = load i32, i32* %31, align 8, !dbg !11215
  %33 = icmp ne i32 %32, 0, !dbg !11212
  br i1 %33, label %34, label %35, !dbg !11216

; <label>:34:                                     ; preds = %29
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.32, i32 0, i32 0)), !dbg !11217
  br label %35, !dbg !11217

; <label>:35:                                     ; preds = %34, %29
  %36 = load i8*, i8** %9, align 8, !dbg !11218
  %37 = call i32 @strcmp(i8* %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0)) #10, !dbg !11220
  %38 = icmp ne i32 %37, 0, !dbg !11221
  br i1 %38, label %39, label %41, !dbg !11222

; <label>:39:                                     ; preds = %35
  %40 = load i8*, i8** %9, align 8, !dbg !11223
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i8* %40), !dbg !11225
  br label %126, !dbg !11226

; <label>:41:                                     ; preds = %35
  %42 = load i32, i32* %10, align 4, !dbg !11227
  %43 = load i32, i32* %11, align 4, !dbg !11228
  %44 = mul nsw i32 %42, %43, !dbg !11229
  %45 = mul nsw i32 %44, 4, !dbg !11230
  %46 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11231
  %47 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %46, i32 0, i32 17, !dbg !11232
  store i32 %45, i32* %47, align 8, !dbg !11233
  %48 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11234
  %49 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %48, i32 0, i32 17, !dbg !11236
  %50 = load i32, i32* %49, align 8, !dbg !11236
  %51 = icmp ugt i32 %50, 4096, !dbg !11237
  br i1 %51, label %52, label %58, !dbg !11238

; <label>:52:                                     ; preds = %41
  %53 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11239
  %54 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %53, i32 0, i32 17, !dbg !11241
  %55 = load i32, i32* %54, align 8, !dbg !11241
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 %55), !dbg !11242
  %56 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11243
  %57 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %56, i32 0, i32 17, !dbg !11244
  store i32 0, i32* %57, align 8, !dbg !11245
  br label %126, !dbg !11246

; <label>:58:                                     ; preds = %41
  %59 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11247
  %60 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %59, i32 0, i32 18, !dbg !11248
  store i32 0, i32* %60, align 4, !dbg !11249
  br label %68, !dbg !11250

; <label>:61:                                     ; preds = %26
  %62 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11251
  %63 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %62, i32 0, i32 17, !dbg !11254
  %64 = load i32, i32* %63, align 8, !dbg !11254
  %65 = icmp ne i32 %64, 0, !dbg !11251
  br i1 %65, label %67, label %66, !dbg !11255

; <label>:66:                                     ; preds = %61
  br label %126, !dbg !11256

; <label>:67:                                     ; preds = %61
  br label %68

; <label>:68:                                     ; preds = %67, %58
  %69 = load i64, i64* %14, align 8, !dbg !11257
  %70 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11259
  %71 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %70, i32 0, i32 17, !dbg !11260
  %72 = load i32, i32* %71, align 8, !dbg !11260
  %73 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11261
  %74 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %73, i32 0, i32 18, !dbg !11262
  %75 = load i32, i32* %74, align 4, !dbg !11262
  %76 = sub i32 %72, %75, !dbg !11263
  %77 = zext i32 %76 to i64, !dbg !11264
  %78 = icmp ugt i64 %69, %77, !dbg !11265
  br i1 %78, label %79, label %90, !dbg !11266

; <label>:79:                                     ; preds = %68
  %80 = load i64, i64* %14, align 8, !dbg !11267
  %81 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11269
  %82 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %81, i32 0, i32 17, !dbg !11270
  %83 = load i32, i32* %82, align 8, !dbg !11270
  %84 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11271
  %85 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %84, i32 0, i32 18, !dbg !11272
  %86 = load i32, i32* %85, align 4, !dbg !11272
  %87 = sub i32 %83, %86, !dbg !11273
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.36, i32 0, i32 0), i64 %80, i32 %87), !dbg !11274
  %88 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11275
  %89 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %88, i32 0, i32 17, !dbg !11276
  store i32 0, i32* %89, align 8, !dbg !11277
  br label %126, !dbg !11278

; <label>:90:                                     ; preds = %68
  %91 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11279
  %92 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %91, i32 0, i32 19, !dbg !11280
  %93 = getelementptr inbounds [4096 x i8], [4096 x i8]* %92, i32 0, i32 0, !dbg !11279
  %94 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11281
  %95 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %94, i32 0, i32 18, !dbg !11282
  %96 = load i32, i32* %95, align 4, !dbg !11282
  %97 = zext i32 %96 to i64, !dbg !11283
  %98 = getelementptr inbounds i8, i8* %93, i64 %97, !dbg !11283
  %99 = load i8*, i8** %13, align 8, !dbg !11284
  %100 = load i64, i64* %14, align 8, !dbg !11285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 %100, i32 1, i1 false), !dbg !11286
  %101 = load i64, i64* %14, align 8, !dbg !11287
  %102 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11288
  %103 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %102, i32 0, i32 18, !dbg !11289
  %104 = load i32, i32* %103, align 4, !dbg !11290
  %105 = zext i32 %104 to i64, !dbg !11290
  %106 = add i64 %105, %101, !dbg !11290
  %107 = trunc i64 %106 to i32, !dbg !11290
  store i32 %107, i32* %103, align 4, !dbg !11290
  %108 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11291
  %109 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %108, i32 0, i32 18, !dbg !11293
  %110 = load i32, i32* %109, align 4, !dbg !11293
  %111 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11294
  %112 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %111, i32 0, i32 17, !dbg !11295
  %113 = load i32, i32* %112, align 8, !dbg !11295
  %114 = icmp eq i32 %110, %113, !dbg !11296
  br i1 %114, label %115, label %126, !dbg !11297

; <label>:115:                                    ; preds = %90
  %116 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11298
  %117 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %116, i32 0, i32 0, !dbg !11300
  %118 = load i64, i64* %117, align 8, !dbg !11300
  %119 = load i32, i32* %10, align 4, !dbg !11301
  %120 = load i32, i32* %11, align 4, !dbg !11302
  %121 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11303
  %122 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %121, i32 0, i32 19, !dbg !11304
  %123 = getelementptr inbounds [4096 x i8], [4096 x i8]* %122, i32 0, i32 0, !dbg !11303
  call void @ewmh_set_icon(i64 %118, i32 %119, i32 %120, i8* %123), !dbg !11305
  %124 = load %struct._seamless_window*, %struct._seamless_window** %15, align 8, !dbg !11306
  %125 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %124, i32 0, i32 17, !dbg !11307
  store i32 0, i32* %125, align 8, !dbg !11308
  br label %126, !dbg !11309

; <label>:126:                                    ; preds = %18, %24, %39, %52, %66, %79, %115, %90
  ret void, !dbg !11310
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

declare void @ewmh_set_icon(i64, i32, i32, i8*) #2

; Function Attrs: nounwind uwtable
define void @ui_seamless_delicon(i64, i8*, i32, i32) #0 !dbg !11311 {
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct._seamless_window*, align 8
  store i64 %0, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !11314, metadata !416), !dbg !11315
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11316, metadata !416), !dbg !11317
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11318, metadata !416), !dbg !11319
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11320, metadata !416), !dbg !11321
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %9, metadata !11322, metadata !416), !dbg !11323
  %10 = load i32, i32* @g_seamless_active, align 4, !dbg !11324
  %11 = icmp ne i32 %10, 0, !dbg !11324
  br i1 %11, label %13, label %12, !dbg !11326

; <label>:12:                                     ; preds = %4
  br label %32, !dbg !11327

; <label>:13:                                     ; preds = %4
  %14 = load i64, i64* %5, align 8, !dbg !11328
  %15 = call %struct._seamless_window* @sw_get_window_by_id(i64 %14), !dbg !11329
  store %struct._seamless_window* %15, %struct._seamless_window** %9, align 8, !dbg !11330
  %16 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !11331
  %17 = icmp ne %struct._seamless_window* %16, null, !dbg !11331
  br i1 %17, label %20, label %18, !dbg !11333

; <label>:18:                                     ; preds = %13
  %19 = load i64, i64* %5, align 8, !dbg !11334
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.37, i32 0, i32 0), i64 %19), !dbg !11336
  br label %32, !dbg !11337

; <label>:20:                                     ; preds = %13
  %21 = load i8*, i8** %6, align 8, !dbg !11338
  %22 = call i32 @strcmp(i8* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0)) #10, !dbg !11340
  %23 = icmp ne i32 %22, 0, !dbg !11341
  br i1 %23, label %24, label %26, !dbg !11342

; <label>:24:                                     ; preds = %20
  %25 = load i8*, i8** %6, align 8, !dbg !11343
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i8* %25), !dbg !11345
  br label %32, !dbg !11346

; <label>:26:                                     ; preds = %20
  %27 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !11347
  %28 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %27, i32 0, i32 0, !dbg !11348
  %29 = load i64, i64* %28, align 8, !dbg !11348
  %30 = load i32, i32* %7, align 4, !dbg !11349
  %31 = load i32, i32* %8, align 4, !dbg !11350
  call void @ewmh_del_icon(i64 %29, i32 %30, i32 %31), !dbg !11351
  br label %32, !dbg !11352

; <label>:32:                                     ; preds = %26, %24, %18, %12
  ret void, !dbg !11353
}

declare void @ewmh_del_icon(i64, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @ui_seamless_move_window(i64, i32, i32, i32, i32, i64) #0 !dbg !11355 {
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca %struct._seamless_window*, align 8
  store i64 %0, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !11358, metadata !416), !dbg !11359
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11360, metadata !416), !dbg !11361
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11362, metadata !416), !dbg !11363
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11364, metadata !416), !dbg !11365
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !11366, metadata !416), !dbg !11367
  store i64 %5, i64* %12, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !11368, metadata !416), !dbg !11369
  %14 = load i64, i64* %12, align 8, !dbg !11370
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %13, metadata !11371, metadata !416), !dbg !11372
  %15 = load i32, i32* @g_seamless_active, align 4, !dbg !11373
  %16 = icmp ne i32 %15, 0, !dbg !11373
  br i1 %16, label %18, label %17, !dbg !11375

; <label>:17:                                     ; preds = %6
  br label %74, !dbg !11376

; <label>:18:                                     ; preds = %6
  %19 = load i64, i64* %7, align 8, !dbg !11377
  %20 = call %struct._seamless_window* @sw_get_window_by_id(i64 %19), !dbg !11378
  store %struct._seamless_window* %20, %struct._seamless_window** %13, align 8, !dbg !11379
  %21 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11380
  %22 = icmp ne %struct._seamless_window* %21, null, !dbg !11380
  br i1 %22, label %25, label %23, !dbg !11382

; <label>:23:                                     ; preds = %18
  %24 = load i64, i64* %7, align 8, !dbg !11383
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38, i32 0, i32 0), i64 %24), !dbg !11385
  br label %74, !dbg !11386

; <label>:25:                                     ; preds = %18
  %26 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11387
  %27 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %26, i32 0, i32 11, !dbg !11389
  %28 = load i32, i32* %27, align 8, !dbg !11389
  %29 = icmp ne i32 %28, 0, !dbg !11387
  br i1 %29, label %30, label %31, !dbg !11390

; <label>:30:                                     ; preds = %25
  br label %74, !dbg !11391

; <label>:31:                                     ; preds = %25
  %32 = load i32, i32* %10, align 4, !dbg !11392
  %33 = icmp ne i32 %32, 0, !dbg !11392
  br i1 %33, label %34, label %37, !dbg !11394

; <label>:34:                                     ; preds = %31
  %35 = load i32, i32* %11, align 4, !dbg !11395
  %36 = icmp ne i32 %35, 0, !dbg !11395
  br i1 %36, label %38, label %37, !dbg !11397

; <label>:37:                                     ; preds = %34, %31
  br label %74, !dbg !11398

; <label>:38:                                     ; preds = %34
  %39 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11399
  %40 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %39, i32 0, i32 8, !dbg !11400
  %41 = load i32, i32* %40, align 8, !dbg !11400
  switch i32 %41, label %44 [
    i32 1, label %42
    i32 2, label %42
  ], !dbg !11401

; <label>:42:                                     ; preds = %38, %38
  %43 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11402
  call void @sw_update_position(%struct._seamless_window* %43), !dbg !11404
  br label %74, !dbg !11405

; <label>:44:                                     ; preds = %38
  %45 = load i32, i32* %8, align 4, !dbg !11406
  %46 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11407
  %47 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %46, i32 0, i32 4, !dbg !11408
  store i32 %45, i32* %47, align 8, !dbg !11409
  %48 = load i32, i32* %9, align 4, !dbg !11410
  %49 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11411
  %50 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %49, i32 0, i32 5, !dbg !11412
  store i32 %48, i32* %50, align 4, !dbg !11413
  %51 = load i32, i32* %10, align 4, !dbg !11414
  %52 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11415
  %53 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %52, i32 0, i32 6, !dbg !11416
  store i32 %51, i32* %53, align 8, !dbg !11417
  %54 = load i32, i32* %11, align 4, !dbg !11418
  %55 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11419
  %56 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %55, i32 0, i32 7, !dbg !11420
  store i32 %54, i32* %56, align 4, !dbg !11421
  %57 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11422
  %58 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11423
  %59 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %58, i32 0, i32 0, !dbg !11424
  %60 = load i64, i64* %59, align 8, !dbg !11424
  %61 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11425
  %62 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %61, i32 0, i32 4, !dbg !11426
  %63 = load i32, i32* %62, align 8, !dbg !11426
  %64 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11427
  %65 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %64, i32 0, i32 5, !dbg !11428
  %66 = load i32, i32* %65, align 4, !dbg !11428
  %67 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11429
  %68 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %67, i32 0, i32 6, !dbg !11430
  %69 = load i32, i32* %68, align 8, !dbg !11430
  %70 = load %struct._seamless_window*, %struct._seamless_window** %13, align 8, !dbg !11431
  %71 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %70, i32 0, i32 7, !dbg !11432
  %72 = load i32, i32* %71, align 4, !dbg !11432
  %73 = call i32 @XMoveResizeWindow(%struct._XDisplay* %57, i64 %60, i32 %63, i32 %66, i32 %69, i32 %72), !dbg !11433
  br label %74, !dbg !11434

; <label>:74:                                     ; preds = %44, %42, %37, %30, %23, %17
  ret void, !dbg !11435
}

; Function Attrs: nounwind uwtable
define internal void @sw_update_position(%struct._seamless_window*) #0 !dbg !11437 {
  %2 = alloca %struct._seamless_window*, align 8
  %3 = alloca %struct.XWindowAttributes, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store %struct._seamless_window* %0, %struct._seamless_window** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %2, metadata !11438, metadata !416), !dbg !11439
  call void @llvm.dbg.declare(metadata %struct.XWindowAttributes* %3, metadata !11440, metadata !416), !dbg !11441
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11442, metadata !416), !dbg !11443
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11444, metadata !416), !dbg !11445
  call void @llvm.dbg.declare(metadata i64* %6, metadata !11446, metadata !416), !dbg !11447
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11448, metadata !416), !dbg !11449
  %8 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11450
  %9 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !11451
  %10 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %9, i32 0, i32 0, !dbg !11452
  %11 = load i64, i64* %10, align 8, !dbg !11452
  %12 = call i32 @XGetWindowAttributes(%struct._XDisplay* %8, i64 %11, %struct.XWindowAttributes* %3), !dbg !11453
  %13 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11454
  %14 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !11455
  %15 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %14, i32 0, i32 0, !dbg !11456
  %16 = load i64, i64* %15, align 8, !dbg !11456
  %17 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %3, i32 0, i32 7, !dbg !11457
  %18 = load i64, i64* %17, align 8, !dbg !11457
  %19 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %3, i32 0, i32 4, !dbg !11458
  %20 = load i32, i32* %19, align 8, !dbg !11458
  %21 = sub nsw i32 0, %20, !dbg !11459
  %22 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %3, i32 0, i32 4, !dbg !11460
  %23 = load i32, i32* %22, align 8, !dbg !11460
  %24 = sub nsw i32 0, %23, !dbg !11461
  %25 = call i32 @XTranslateCoordinates(%struct._XDisplay* %13, i64 %16, i64 %18, i32 %21, i32 %24, i32* %4, i32* %5, i64* %6), !dbg !11462
  %26 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !11463
  %27 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %26, i32 0, i32 1, !dbg !11464
  %28 = load i64, i64* %27, align 8, !dbg !11464
  %29 = load i32, i32* %4, align 4, !dbg !11465
  %30 = load i32, i32* %5, align 4, !dbg !11466
  %31 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %3, i32 0, i32 2, !dbg !11467
  %32 = load i32, i32* %31, align 8, !dbg !11467
  %33 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %3, i32 0, i32 3, !dbg !11468
  %34 = load i32, i32* %33, align 4, !dbg !11468
  %35 = call i32 @seamless_send_position(i64 %28, i32 %29, i32 %30, i32 %32, i32 %34, i64 0), !dbg !11469
  store i32 %35, i32* %7, align 4, !dbg !11470
  %36 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !11471
  %37 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %36, i32 0, i32 11, !dbg !11472
  store i32 1, i32* %37, align 8, !dbg !11473
  %38 = load i32, i32* %7, align 4, !dbg !11474
  %39 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !11475
  %40 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %39, i32 0, i32 12, !dbg !11476
  store i32 %38, i32* %40, align 4, !dbg !11477
  %41 = load i32, i32* %4, align 4, !dbg !11478
  %42 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !11479
  %43 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %42, i32 0, i32 13, !dbg !11480
  store i32 %41, i32* %43, align 8, !dbg !11481
  %44 = load i32, i32* %5, align 4, !dbg !11482
  %45 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !11483
  %46 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %45, i32 0, i32 14, !dbg !11484
  store i32 %44, i32* %46, align 4, !dbg !11485
  %47 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %3, i32 0, i32 2, !dbg !11486
  %48 = load i32, i32* %47, align 8, !dbg !11486
  %49 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !11487
  %50 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %49, i32 0, i32 15, !dbg !11488
  store i32 %48, i32* %50, align 8, !dbg !11489
  %51 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %3, i32 0, i32 3, !dbg !11490
  %52 = load i32, i32* %51, align 4, !dbg !11490
  %53 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !11491
  %54 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %53, i32 0, i32 16, !dbg !11492
  store i32 %52, i32* %54, align 4, !dbg !11493
  ret void, !dbg !11494
}

declare i32 @XMoveResizeWindow(%struct._XDisplay*, i64, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @ui_seamless_restack_window(i64, i64, i64) #0 !dbg !11495 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct._seamless_window*, align 8
  %8 = alloca %struct.XWindowChanges, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct._seamless_window*, align 8
  store i64 %0, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11498, metadata !416), !dbg !11499
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !11500, metadata !416), !dbg !11501
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !11502, metadata !416), !dbg !11503
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %7, metadata !11504, metadata !416), !dbg !11505
  call void @llvm.dbg.declare(metadata %struct.XWindowChanges* %8, metadata !11506, metadata !416), !dbg !11517
  call void @llvm.dbg.declare(metadata i64* %9, metadata !11518, metadata !416), !dbg !11519
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11520, metadata !416), !dbg !11521
  %12 = load i32, i32* @g_seamless_active, align 4, !dbg !11522
  %13 = icmp ne i32 %12, 0, !dbg !11522
  br i1 %13, label %15, label %14, !dbg !11524

; <label>:14:                                     ; preds = %3
  br label %91, !dbg !11525

; <label>:15:                                     ; preds = %3
  %16 = load i64, i64* %4, align 8, !dbg !11526
  %17 = call %struct._seamless_window* @sw_get_window_by_id(i64 %16), !dbg !11527
  store %struct._seamless_window* %17, %struct._seamless_window** %7, align 8, !dbg !11528
  %18 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11529
  %19 = icmp ne %struct._seamless_window* %18, null, !dbg !11529
  br i1 %19, label %22, label %20, !dbg !11531

; <label>:20:                                     ; preds = %15
  %21 = load i64, i64* %4, align 8, !dbg !11532
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.39, i32 0, i32 0), i64 %21), !dbg !11534
  br label %91, !dbg !11535

; <label>:22:                                     ; preds = %15
  %23 = load i64, i64* %5, align 8, !dbg !11536
  %24 = icmp ne i64 %23, 0, !dbg !11536
  br i1 %24, label %25, label %62, !dbg !11538

; <label>:25:                                     ; preds = %22
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %11, metadata !11539, metadata !416), !dbg !11541
  %26 = load i64, i64* %5, align 8, !dbg !11542
  %27 = call %struct._seamless_window* @sw_get_window_by_id(i64 %26), !dbg !11543
  store %struct._seamless_window* %27, %struct._seamless_window** %11, align 8, !dbg !11544
  %28 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !11545
  %29 = icmp ne %struct._seamless_window* %28, null, !dbg !11545
  br i1 %29, label %32, label %30, !dbg !11547

; <label>:30:                                     ; preds = %25
  %31 = load i64, i64* %5, align 8, !dbg !11548
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.40, i32 0, i32 0), i64 %31), !dbg !11550
  br label %91, !dbg !11551

; <label>:32:                                     ; preds = %25
  %33 = getelementptr inbounds %struct.XWindowChanges, %struct.XWindowChanges* %8, i32 0, i32 6, !dbg !11552
  store i32 1, i32* %33, align 8, !dbg !11553
  store i32 96, i32* %10, align 4, !dbg !11554
  %34 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !11555
  %35 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %34, i32 0, i32 0, !dbg !11556
  %36 = load i64, i64* %35, align 8, !dbg !11556
  %37 = getelementptr inbounds %struct.XWindowChanges, %struct.XWindowChanges* %8, i32 0, i32 5, !dbg !11557
  store i64 %36, i64* %37, align 8, !dbg !11558
  %38 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11559
  %39 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %38, i32 0, i32 0, !dbg !11561
  %40 = load i64, i64* %39, align 8, !dbg !11561
  %41 = call i32 @ewmh_is_window_above(i64 %40), !dbg !11562
  %42 = icmp ne i32 %41, 0, !dbg !11562
  br i1 %42, label %43, label %52, !dbg !11563

; <label>:43:                                     ; preds = %32
  %44 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !11564
  %45 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %44, i32 0, i32 0, !dbg !11567
  %46 = load i64, i64* %45, align 8, !dbg !11567
  %47 = call i32 @ewmh_is_window_above(i64 %46), !dbg !11568
  %48 = icmp ne i32 %47, 0, !dbg !11568
  br i1 %48, label %51, label %49, !dbg !11569

; <label>:49:                                     ; preds = %43
  %50 = getelementptr inbounds %struct.XWindowChanges, %struct.XWindowChanges* %8, i32 0, i32 6, !dbg !11570
  store i32 1, i32* %50, align 8, !dbg !11572
  store i32 64, i32* %10, align 4, !dbg !11573
  br label %51, !dbg !11574

; <label>:51:                                     ; preds = %49, %43
  br label %61, !dbg !11575

; <label>:52:                                     ; preds = %32
  %53 = load %struct._seamless_window*, %struct._seamless_window** %11, align 8, !dbg !11576
  %54 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %53, i32 0, i32 0, !dbg !11579
  %55 = load i64, i64* %54, align 8, !dbg !11579
  %56 = call i32 @ewmh_is_window_above(i64 %55), !dbg !11580
  %57 = icmp ne i32 %56, 0, !dbg !11580
  br i1 %57, label %58, label %60, !dbg !11581

; <label>:58:                                     ; preds = %52
  %59 = getelementptr inbounds %struct.XWindowChanges, %struct.XWindowChanges* %8, i32 0, i32 6, !dbg !11582
  store i32 0, i32* %59, align 8, !dbg !11584
  store i32 64, i32* %10, align 4, !dbg !11585
  br label %60, !dbg !11586

; <label>:60:                                     ; preds = %58, %52
  br label %61

; <label>:61:                                     ; preds = %60, %51
  br label %64, !dbg !11587

; <label>:62:                                     ; preds = %22
  %63 = getelementptr inbounds %struct.XWindowChanges, %struct.XWindowChanges* %8, i32 0, i32 6, !dbg !11588
  store i32 0, i32* %63, align 8, !dbg !11590
  store i32 64, i32* %10, align 4, !dbg !11591
  br label %64

; <label>:64:                                     ; preds = %62, %61
  %65 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11592
  %66 = call i64 @XNextRequest(%struct._XDisplay* %65), !dbg !11593
  store i64 %66, i64* %9, align 8, !dbg !11594
  %67 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11595
  %68 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11596
  %69 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %68, i32 0, i32 0, !dbg !11597
  %70 = load i64, i64* %69, align 8, !dbg !11597
  %71 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11598
  %72 = bitcast %struct._XDisplay* %71 to %struct.anon*, !dbg !11599
  %73 = getelementptr inbounds %struct.anon, %struct.anon* %72, i32 0, i32 33, !dbg !11599
  %74 = load i32, i32* %73, align 8, !dbg !11599
  %75 = load i32, i32* %10, align 4, !dbg !11600
  %76 = call i32 @XReconfigureWMWindow(%struct._XDisplay* %67, i64 %70, i32 %74, i32 %75, %struct.XWindowChanges* %8), !dbg !11601
  %77 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11602
  %78 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %77, i32 0, i32 0, !dbg !11603
  %79 = load i64, i64* %78, align 8, !dbg !11603
  %80 = load i64, i64* %9, align 8, !dbg !11604
  call void @sw_wait_configurenotify(i64 %79, i64 %80), !dbg !11605
  %81 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11606
  %82 = load i64, i64* %5, align 8, !dbg !11607
  call void @sw_restack_window(%struct._seamless_window* %81, i64 %82), !dbg !11608
  %83 = load i64, i64* %6, align 8, !dbg !11609
  %84 = and i64 %83, 2, !dbg !11611
  %85 = icmp ne i64 %84, 0, !dbg !11611
  br i1 %85, label %86, label %91, !dbg !11612

; <label>:86:                                     ; preds = %64
  %87 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11613
  %88 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %87, i32 0, i32 0, !dbg !11615
  %89 = load i64, i64* %88, align 8, !dbg !11615
  %90 = call i32 @ewmh_set_window_above(i64 %89), !dbg !11616
  br label %91, !dbg !11617

; <label>:91:                                     ; preds = %14, %20, %30, %86, %64
  ret void, !dbg !11618
}

declare i32 @ewmh_is_window_above(i64) #2

declare i64 @XNextRequest(%struct._XDisplay*) #2

declare i32 @XReconfigureWMWindow(%struct._XDisplay*, i64, i32, i32, %struct.XWindowChanges*) #2

; Function Attrs: nounwind uwtable
define internal void @sw_wait_configurenotify(i64, i64) #0 !dbg !11619 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union._XEvent, align 8
  %6 = alloca %struct._sw_configurenotify_context, align 8
  %7 = alloca %struct.timeval, align 8
  %8 = alloca %struct.timeval, align 8
  %9 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !11622, metadata !416), !dbg !11623
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11624, metadata !416), !dbg !11625
  call void @llvm.dbg.declare(metadata %union._XEvent* %5, metadata !11626, metadata !416), !dbg !11627
  call void @llvm.dbg.declare(metadata %struct._sw_configurenotify_context* %6, metadata !11628, metadata !416), !dbg !11629
  call void @llvm.dbg.declare(metadata %struct.timeval* %7, metadata !11630, metadata !416), !dbg !11631
  call void @llvm.dbg.declare(metadata %struct.timeval* %8, metadata !11632, metadata !416), !dbg !11633
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11634, metadata !416), !dbg !11635
  store i32 0, i32* %9, align 4, !dbg !11635
  %10 = load i64, i64* %3, align 8, !dbg !11636
  %11 = getelementptr inbounds %struct._sw_configurenotify_context, %struct._sw_configurenotify_context* %6, i32 0, i32 0, !dbg !11637
  store i64 %10, i64* %11, align 8, !dbg !11638
  %12 = load i64, i64* %4, align 8, !dbg !11639
  %13 = getelementptr inbounds %struct._sw_configurenotify_context, %struct._sw_configurenotify_context* %6, i32 0, i32 1, !dbg !11640
  store i64 %12, i64* %13, align 8, !dbg !11641
  %14 = call i32 @gettimeofday(%struct.timeval* %8, %struct.timezone* null) #9, !dbg !11642
  %15 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 1, !dbg !11643
  %16 = load i64, i64* %15, align 8, !dbg !11644
  %17 = add nsw i64 %16, 500000, !dbg !11644
  store i64 %17, i64* %15, align 8, !dbg !11644
  br label %18, !dbg !11645, !llvm.loop !11646

; <label>:18:                                     ; preds = %47, %2
  %19 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11647
  %20 = bitcast %struct._sw_configurenotify_context* %6 to i8*, !dbg !11650
  %21 = call i32 @XCheckIfEvent(%struct._XDisplay* %19, %union._XEvent* %5, i32 (%struct._XDisplay*, %union._XEvent*, i8*)* @sw_configurenotify_p, i8* %20), !dbg !11651
  %22 = icmp ne i32 %21, 0, !dbg !11651
  br i1 %22, label %23, label %24, !dbg !11652

; <label>:23:                                     ; preds = %18
  store i32 1, i32* %9, align 4, !dbg !11653
  br label %50, !dbg !11655

; <label>:24:                                     ; preds = %18
  %25 = call i32 @usleep(i32 100000), !dbg !11656
  %26 = call i32 @gettimeofday(%struct.timeval* %7, %struct.timezone* null) #9, !dbg !11657
  br label %27, !dbg !11658

; <label>:27:                                     ; preds = %24
  %28 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 0, !dbg !11659
  %29 = load i64, i64* %28, align 8, !dbg !11659
  %30 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 0, !dbg !11659
  %31 = load i64, i64* %30, align 8, !dbg !11659
  %32 = icmp eq i64 %29, %31, !dbg !11660
  br i1 %32, label %33, label %40, !dbg !11661

; <label>:33:                                     ; preds = %27
  %34 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 1, !dbg !11662
  %35 = load i64, i64* %34, align 8, !dbg !11662
  %36 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 1, !dbg !11662
  %37 = load i64, i64* %36, align 8, !dbg !11662
  %38 = icmp slt i64 %35, %37, !dbg !11664
  %39 = zext i1 %38 to i32, !dbg !11664
  br label %47, !dbg !11665

; <label>:40:                                     ; preds = %27
  %41 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 0, !dbg !11666
  %42 = load i64, i64* %41, align 8, !dbg !11666
  %43 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 0, !dbg !11666
  %44 = load i64, i64* %43, align 8, !dbg !11666
  %45 = icmp slt i64 %42, %44, !dbg !11668
  %46 = zext i1 %45 to i32, !dbg !11668
  br label %47, !dbg !11669

; <label>:47:                                     ; preds = %40, %33
  %48 = phi i32 [ %39, %33 ], [ %46, %40 ], !dbg !11670
  %49 = icmp ne i32 %48, 0, !dbg !11672
  br i1 %49, label %18, label %50, !dbg !11672, !llvm.loop !11646

; <label>:50:                                     ; preds = %47, %23
  %51 = load i32, i32* %9, align 4, !dbg !11674
  %52 = icmp ne i32 %51, 0, !dbg !11674
  br i1 %52, label %54, label %53, !dbg !11676

; <label>:53:                                     ; preds = %50
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.70, i32 0, i32 0)), !dbg !11677
  br label %54, !dbg !11679

; <label>:54:                                     ; preds = %53, %50
  ret void, !dbg !11680
}

; Function Attrs: nounwind uwtable
define internal void @sw_restack_window(%struct._seamless_window*, i64) #0 !dbg !11681 {
  %3 = alloca %struct._seamless_window*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct._seamless_window*, align 8
  store %struct._seamless_window* %0, %struct._seamless_window** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %3, metadata !11684, metadata !416), !dbg !11685
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11686, metadata !416), !dbg !11687
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %5, metadata !11688, metadata !416), !dbg !11689
  %6 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !11690
  store %struct._seamless_window* %6, %struct._seamless_window** %5, align 8, !dbg !11692
  br label %7, !dbg !11693

; <label>:7:                                      ; preds = %20, %2
  %8 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11694
  %9 = icmp ne %struct._seamless_window* %8, null, !dbg !11697
  br i1 %9, label %10, label %24, !dbg !11697

; <label>:10:                                     ; preds = %7
  %11 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11698
  %12 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %11, i32 0, i32 2, !dbg !11701
  %13 = load i64, i64* %12, align 8, !dbg !11701
  %14 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11702
  %15 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %14, i32 0, i32 1, !dbg !11703
  %16 = load i64, i64* %15, align 8, !dbg !11703
  %17 = icmp eq i64 %13, %16, !dbg !11704
  br i1 %17, label %18, label %19, !dbg !11705

; <label>:18:                                     ; preds = %10
  br label %24, !dbg !11706

; <label>:19:                                     ; preds = %10
  br label %20, !dbg !11707

; <label>:20:                                     ; preds = %19
  %21 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11708
  %22 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %21, i32 0, i32 20, !dbg !11710
  %23 = load %struct._seamless_window*, %struct._seamless_window** %22, align 8, !dbg !11710
  store %struct._seamless_window* %23, %struct._seamless_window** %5, align 8, !dbg !11711
  br label %7, !dbg !11712, !llvm.loop !11713

; <label>:24:                                     ; preds = %18, %7
  %25 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11715
  %26 = icmp ne %struct._seamless_window* %25, null, !dbg !11715
  br i1 %26, label %27, label %33, !dbg !11717

; <label>:27:                                     ; preds = %24
  %28 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11718
  %29 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %28, i32 0, i32 2, !dbg !11719
  %30 = load i64, i64* %29, align 8, !dbg !11719
  %31 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11720
  %32 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %31, i32 0, i32 2, !dbg !11721
  store i64 %30, i64* %32, align 8, !dbg !11722
  br label %33, !dbg !11720

; <label>:33:                                     ; preds = %27, %24
  %34 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !11723
  store %struct._seamless_window* %34, %struct._seamless_window** %5, align 8, !dbg !11725
  br label %35, !dbg !11726

; <label>:35:                                     ; preds = %46, %33
  %36 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11727
  %37 = icmp ne %struct._seamless_window* %36, null, !dbg !11730
  br i1 %37, label %38, label %50, !dbg !11730

; <label>:38:                                     ; preds = %35
  %39 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11731
  %40 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %39, i32 0, i32 2, !dbg !11734
  %41 = load i64, i64* %40, align 8, !dbg !11734
  %42 = load i64, i64* %4, align 8, !dbg !11735
  %43 = icmp eq i64 %41, %42, !dbg !11736
  br i1 %43, label %44, label %45, !dbg !11737

; <label>:44:                                     ; preds = %38
  br label %50, !dbg !11738

; <label>:45:                                     ; preds = %38
  br label %46, !dbg !11739

; <label>:46:                                     ; preds = %45
  %47 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11740
  %48 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %47, i32 0, i32 20, !dbg !11742
  %49 = load %struct._seamless_window*, %struct._seamless_window** %48, align 8, !dbg !11742
  store %struct._seamless_window* %49, %struct._seamless_window** %5, align 8, !dbg !11743
  br label %35, !dbg !11744, !llvm.loop !11745

; <label>:50:                                     ; preds = %44, %35
  %51 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11747
  %52 = icmp ne %struct._seamless_window* %51, null, !dbg !11747
  br i1 %52, label %53, label %59, !dbg !11749

; <label>:53:                                     ; preds = %50
  %54 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11750
  %55 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %54, i32 0, i32 1, !dbg !11751
  %56 = load i64, i64* %55, align 8, !dbg !11751
  %57 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !11752
  %58 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %57, i32 0, i32 2, !dbg !11753
  store i64 %56, i64* %58, align 8, !dbg !11754
  br label %59, !dbg !11752

; <label>:59:                                     ; preds = %53, %50
  %60 = load i64, i64* %4, align 8, !dbg !11755
  %61 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11756
  %62 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %61, i32 0, i32 2, !dbg !11757
  store i64 %60, i64* %62, align 8, !dbg !11758
  ret void, !dbg !11759
}

; Function Attrs: nounwind uwtable
define void @ui_seamless_settitle(i64, i8*, i64) #0 !dbg !11760 {
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct._seamless_window*, align 8
  store i64 %0, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11763, metadata !416), !dbg !11764
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11765, metadata !416), !dbg !11766
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !11767, metadata !416), !dbg !11768
  %8 = load i64, i64* %6, align 8, !dbg !11769
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %7, metadata !11770, metadata !416), !dbg !11771
  %9 = load i32, i32* @g_seamless_active, align 4, !dbg !11772
  %10 = icmp ne i32 %9, 0, !dbg !11772
  br i1 %10, label %12, label %11, !dbg !11774

; <label>:11:                                     ; preds = %3
  br label %30, !dbg !11775

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %4, align 8, !dbg !11776
  %14 = call %struct._seamless_window* @sw_get_window_by_id(i64 %13), !dbg !11777
  store %struct._seamless_window* %14, %struct._seamless_window** %7, align 8, !dbg !11778
  %15 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11779
  %16 = icmp ne %struct._seamless_window* %15, null, !dbg !11779
  br i1 %16, label %19, label %17, !dbg !11781

; <label>:17:                                     ; preds = %12
  %18 = load i64, i64* %4, align 8, !dbg !11782
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.41, i32 0, i32 0), i64 %18), !dbg !11784
  br label %30, !dbg !11785

; <label>:19:                                     ; preds = %12
  %20 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11786
  %21 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11787
  %22 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %21, i32 0, i32 0, !dbg !11788
  %23 = load i64, i64* %22, align 8, !dbg !11788
  %24 = load i8*, i8** %5, align 8, !dbg !11789
  %25 = call i32 @XStoreName(%struct._XDisplay* %20, i64 %23, i8* %24), !dbg !11790
  %26 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11791
  %27 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %26, i32 0, i32 0, !dbg !11792
  %28 = load i64, i64* %27, align 8, !dbg !11792
  %29 = load i8*, i8** %5, align 8, !dbg !11793
  call void @ewmh_set_wm_name(i64 %28, i8* %29), !dbg !11794
  br label %30, !dbg !11795

; <label>:30:                                     ; preds = %19, %17, %11
  ret void, !dbg !11796
}

; Function Attrs: nounwind uwtable
define void @ui_seamless_setstate(i64, i32, i64) #0 !dbg !11798 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca %struct._seamless_window*, align 8
  %8 = alloca %struct.XWMHints*, align 8
  store i64 %0, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11801, metadata !416), !dbg !11802
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11803, metadata !416), !dbg !11804
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !11805, metadata !416), !dbg !11806
  %9 = load i64, i64* %6, align 8, !dbg !11807
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %7, metadata !11808, metadata !416), !dbg !11809
  %10 = load i32, i32* @g_seamless_active, align 4, !dbg !11810
  %11 = icmp ne i32 %10, 0, !dbg !11810
  br i1 %11, label %13, label %12, !dbg !11812

; <label>:12:                                     ; preds = %3
  br label %85, !dbg !11813

; <label>:13:                                     ; preds = %3
  %14 = load i64, i64* %4, align 8, !dbg !11814
  %15 = call %struct._seamless_window* @sw_get_window_by_id(i64 %14), !dbg !11815
  store %struct._seamless_window* %15, %struct._seamless_window** %7, align 8, !dbg !11816
  %16 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11817
  %17 = icmp ne %struct._seamless_window* %16, null, !dbg !11817
  br i1 %17, label %20, label %18, !dbg !11819

; <label>:18:                                     ; preds = %13
  %19 = load i64, i64* %4, align 8, !dbg !11820
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.42, i32 0, i32 0), i64 %19), !dbg !11822
  br label %85, !dbg !11823

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* %5, align 4, !dbg !11824
  switch i32 %21, label %79 [
    i32 0, label %22
    i32 2, label %22
    i32 1, label %33
  ], !dbg !11825

; <label>:22:                                     ; preds = %20, %20
  %23 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11826
  %24 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %23, i32 0, i32 0, !dbg !11828
  %25 = load i64, i64* %24, align 8, !dbg !11828
  %26 = load i32, i32* %5, align 4, !dbg !11829
  %27 = call i32 @ewmh_change_state(i64 %25, i32 %26), !dbg !11830
  %28 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11831
  %29 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11832
  %30 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %29, i32 0, i32 0, !dbg !11833
  %31 = load i64, i64* %30, align 8, !dbg !11833
  %32 = call i32 @XMapWindow(%struct._XDisplay* %28, i64 %31), !dbg !11834
  br label %81, !dbg !11835

; <label>:33:                                     ; preds = %20
  %34 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11836
  %35 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %34, i32 0, i32 8, !dbg !11838
  %36 = load i32, i32* %35, align 8, !dbg !11838
  %37 = icmp eq i32 %36, -1, !dbg !11839
  br i1 %37, label %38, label %68, !dbg !11840

; <label>:38:                                     ; preds = %33
  call void @llvm.dbg.declare(metadata %struct.XWMHints** %8, metadata !11841, metadata !416), !dbg !11843
  %39 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11844
  %40 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11845
  %41 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %40, i32 0, i32 0, !dbg !11846
  %42 = load i64, i64* %41, align 8, !dbg !11846
  %43 = call %struct.XWMHints* @XGetWMHints(%struct._XDisplay* %39, i64 %42), !dbg !11847
  store %struct.XWMHints* %43, %struct.XWMHints** %8, align 8, !dbg !11848
  %44 = load %struct.XWMHints*, %struct.XWMHints** %8, align 8, !dbg !11849
  %45 = icmp ne %struct.XWMHints* %44, null, !dbg !11849
  br i1 %45, label %46, label %62, !dbg !11851

; <label>:46:                                     ; preds = %38
  %47 = load %struct.XWMHints*, %struct.XWMHints** %8, align 8, !dbg !11852
  %48 = getelementptr inbounds %struct.XWMHints, %struct.XWMHints* %47, i32 0, i32 0, !dbg !11854
  %49 = load i64, i64* %48, align 8, !dbg !11855
  %50 = or i64 %49, 2, !dbg !11855
  store i64 %50, i64* %48, align 8, !dbg !11855
  %51 = load %struct.XWMHints*, %struct.XWMHints** %8, align 8, !dbg !11856
  %52 = getelementptr inbounds %struct.XWMHints, %struct.XWMHints* %51, i32 0, i32 2, !dbg !11857
  store i32 3, i32* %52, align 4, !dbg !11858
  %53 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11859
  %54 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11860
  %55 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %54, i32 0, i32 0, !dbg !11861
  %56 = load i64, i64* %55, align 8, !dbg !11861
  %57 = load %struct.XWMHints*, %struct.XWMHints** %8, align 8, !dbg !11862
  %58 = call i32 @XSetWMHints(%struct._XDisplay* %53, i64 %56, %struct.XWMHints* %57), !dbg !11863
  %59 = load %struct.XWMHints*, %struct.XWMHints** %8, align 8, !dbg !11864
  %60 = bitcast %struct.XWMHints* %59 to i8*, !dbg !11864
  %61 = call i32 @XFree(i8* %60), !dbg !11865
  br label %62, !dbg !11866

; <label>:62:                                     ; preds = %46, %38
  %63 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11867
  %64 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11868
  %65 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %64, i32 0, i32 0, !dbg !11869
  %66 = load i64, i64* %65, align 8, !dbg !11869
  %67 = call i32 @XMapWindow(%struct._XDisplay* %63, i64 %66), !dbg !11870
  br label %78, !dbg !11871

; <label>:68:                                     ; preds = %33
  %69 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11872
  %70 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11873
  %71 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %70, i32 0, i32 0, !dbg !11874
  %72 = load i64, i64* %71, align 8, !dbg !11874
  %73 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11875
  %74 = bitcast %struct._XDisplay* %73 to %struct.anon*, !dbg !11876
  %75 = getelementptr inbounds %struct.anon, %struct.anon* %74, i32 0, i32 33, !dbg !11876
  %76 = load i32, i32* %75, align 8, !dbg !11876
  %77 = call i32 @XIconifyWindow(%struct._XDisplay* %69, i64 %72, i32 %76), !dbg !11877
  br label %78

; <label>:78:                                     ; preds = %68, %62
  br label %81, !dbg !11878

; <label>:79:                                     ; preds = %20
  %80 = load i32, i32* %5, align 4, !dbg !11879
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43, i32 0, i32 0), i32 %80), !dbg !11880
  br label %81, !dbg !11881

; <label>:81:                                     ; preds = %79, %78, %22
  %82 = load i32, i32* %5, align 4, !dbg !11882
  %83 = load %struct._seamless_window*, %struct._seamless_window** %7, align 8, !dbg !11883
  %84 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %83, i32 0, i32 8, !dbg !11884
  store i32 %82, i32* %84, align 8, !dbg !11885
  br label %85, !dbg !11886

; <label>:85:                                     ; preds = %81, %18, %12
  ret void, !dbg !11887
}

declare i32 @ewmh_change_state(i64, i32) #2

declare %struct.XWMHints* @XGetWMHints(%struct._XDisplay*, i64) #2

declare i32 @XIconifyWindow(%struct._XDisplay*, i64, i32) #2

; Function Attrs: nounwind uwtable
define void @ui_seamless_syncbegin(i64) #0 !dbg !11889 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !11892, metadata !416), !dbg !11893
  %3 = load i64, i64* %2, align 8, !dbg !11894
  %4 = load i32, i32* @g_seamless_active, align 4, !dbg !11895
  %5 = icmp ne i32 %4, 0, !dbg !11895
  br i1 %5, label %7, label %6, !dbg !11897

; <label>:6:                                      ; preds = %1
  br label %18, !dbg !11898

; <label>:7:                                      ; preds = %1
  br label %8, !dbg !11899

; <label>:8:                                      ; preds = %11, %7
  %9 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !11900
  %10 = icmp ne %struct._seamless_window* %9, null, !dbg !11902
  br i1 %10, label %11, label %18, !dbg !11902

; <label>:11:                                     ; preds = %8
  %12 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11903
  %13 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !11905
  %14 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %13, i32 0, i32 0, !dbg !11906
  %15 = load i64, i64* %14, align 8, !dbg !11906
  %16 = call i32 @XDestroyWindow(%struct._XDisplay* %12, i64 %15), !dbg !11907
  %17 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !11908
  call void @sw_remove_window(%struct._seamless_window* %17), !dbg !11909
  br label %8, !dbg !11910, !llvm.loop !11912

; <label>:18:                                     ; preds = %6, %8
  ret void, !dbg !11913
}

; Function Attrs: nounwind uwtable
define void @ui_seamless_ack(i32) #0 !dbg !11914 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._seamless_window*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11917, metadata !416), !dbg !11918
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %3, metadata !11919, metadata !416), !dbg !11920
  %4 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !11921
  store %struct._seamless_window* %4, %struct._seamless_window** %3, align 8, !dbg !11923
  br label %5, !dbg !11924

; <label>:5:                                      ; preds = %62, %1
  %6 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11925
  %7 = icmp ne %struct._seamless_window* %6, null, !dbg !11928
  br i1 %7, label %8, label %66, !dbg !11928

; <label>:8:                                      ; preds = %5
  %9 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11929
  %10 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %9, i32 0, i32 11, !dbg !11932
  %11 = load i32, i32* %10, align 8, !dbg !11932
  %12 = icmp ne i32 %11, 0, !dbg !11929
  br i1 %12, label %13, label %61, !dbg !11933

; <label>:13:                                     ; preds = %8
  %14 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11934
  %15 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %14, i32 0, i32 12, !dbg !11936
  %16 = load i32, i32* %15, align 4, !dbg !11936
  %17 = load i32, i32* %2, align 4, !dbg !11937
  %18 = icmp eq i32 %16, %17, !dbg !11938
  br i1 %18, label %19, label %61, !dbg !11939

; <label>:19:                                     ; preds = %13
  %20 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11940
  %21 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %20, i32 0, i32 13, !dbg !11942
  %22 = load i32, i32* %21, align 8, !dbg !11942
  %23 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11943
  %24 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %23, i32 0, i32 4, !dbg !11944
  store i32 %22, i32* %24, align 8, !dbg !11945
  %25 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11946
  %26 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %25, i32 0, i32 14, !dbg !11947
  %27 = load i32, i32* %26, align 4, !dbg !11947
  %28 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11948
  %29 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %28, i32 0, i32 5, !dbg !11949
  store i32 %27, i32* %29, align 4, !dbg !11950
  %30 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11951
  %31 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %30, i32 0, i32 15, !dbg !11952
  %32 = load i32, i32* %31, align 8, !dbg !11952
  %33 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11953
  %34 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %33, i32 0, i32 6, !dbg !11954
  store i32 %32, i32* %34, align 8, !dbg !11955
  %35 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11956
  %36 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %35, i32 0, i32 16, !dbg !11957
  %37 = load i32, i32* %36, align 4, !dbg !11957
  %38 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11958
  %39 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %38, i32 0, i32 7, !dbg !11959
  store i32 %37, i32* %39, align 4, !dbg !11960
  %40 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11961
  %41 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %40, i32 0, i32 11, !dbg !11962
  store i32 0, i32* %41, align 8, !dbg !11963
  %42 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !11964
  %43 = load i64, i64* @g_backstore, align 8, !dbg !11965
  %44 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11966
  %45 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %44, i32 0, i32 0, !dbg !11967
  %46 = load i64, i64* %45, align 8, !dbg !11967
  %47 = load %struct._XGC*, %struct._XGC** @g_gc, align 8, !dbg !11968
  %48 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11969
  %49 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %48, i32 0, i32 4, !dbg !11970
  %50 = load i32, i32* %49, align 8, !dbg !11970
  %51 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11971
  %52 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %51, i32 0, i32 5, !dbg !11972
  %53 = load i32, i32* %52, align 4, !dbg !11972
  %54 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11973
  %55 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %54, i32 0, i32 6, !dbg !11974
  %56 = load i32, i32* %55, align 8, !dbg !11974
  %57 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11975
  %58 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %57, i32 0, i32 7, !dbg !11976
  %59 = load i32, i32* %58, align 4, !dbg !11976
  %60 = call i32 @XCopyArea(%struct._XDisplay* %42, i64 %43, i64 %46, %struct._XGC* %47, i32 %50, i32 %53, i32 %56, i32 %59, i32 0, i32 0), !dbg !11977
  br label %66, !dbg !11978

; <label>:61:                                     ; preds = %13, %8
  br label %62, !dbg !11979

; <label>:62:                                     ; preds = %61
  %63 = load %struct._seamless_window*, %struct._seamless_window** %3, align 8, !dbg !11980
  %64 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %63, i32 0, i32 20, !dbg !11982
  %65 = load %struct._seamless_window*, %struct._seamless_window** %64, align 8, !dbg !11982
  store %struct._seamless_window* %65, %struct._seamless_window** %3, align 8, !dbg !11983
  br label %5, !dbg !11984, !llvm.loop !11985

; <label>:66:                                     ; preds = %19, %5
  ret void, !dbg !11987
}

declare %struct.XPixmapFormatValues* @XListPixmapFormats(%struct._XDisplay*, i32*) #2

declare %struct.XVisualInfo* @XGetVisualInfo(%struct._XDisplay*, i64, %struct.XVisualInfo*, i32*) #2

; Function Attrs: nounwind uwtable
define internal i32 @calculate_mask_weight(i32) #0 !dbg !11988 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11991, metadata !416), !dbg !11992
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11993, metadata !416), !dbg !11994
  store i32 0, i32* %3, align 4, !dbg !11994
  br label %4, !dbg !11995, !llvm.loop !11996

; <label>:4:                                      ; preds = %9, %1
  %5 = load i32, i32* %2, align 4, !dbg !11997
  %6 = and i32 %5, 1, !dbg !11999
  %7 = load i32, i32* %3, align 4, !dbg !12000
  %8 = add i32 %7, %6, !dbg !12000
  store i32 %8, i32* %3, align 4, !dbg !12000
  br label %9, !dbg !12001

; <label>:9:                                      ; preds = %4
  %10 = load i32, i32* %2, align 4, !dbg !12002
  %11 = lshr i32 %10, 1, !dbg !12002
  store i32 %11, i32* %2, align 4, !dbg !12002
  %12 = icmp ne i32 %11, 0, !dbg !12003
  br i1 %12, label %4, label %13, !dbg !12003, !llvm.loop !11996

; <label>:13:                                     ; preds = %9
  %14 = load i32, i32* %3, align 4, !dbg !12005
  ret i32 %14, !dbg !12006
}

; Function Attrs: nounwind uwtable
define internal void @calculate_shifts(i32, i32*, i32*) #0 !dbg !12007 {
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12011, metadata !416), !dbg !12012
  store i32* %1, i32** %5, align 8
  call void @llvm.dbg.declare(metadata i32** %5, metadata !12013, metadata !416), !dbg !12014
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !12015, metadata !416), !dbg !12016
  %7 = load i32, i32* %4, align 4, !dbg !12017
  %8 = call i32 @ffs(i32 %7) #1, !dbg !12018
  %9 = sub nsw i32 %8, 1, !dbg !12019
  %10 = load i32*, i32** %6, align 8, !dbg !12020
  store i32 %9, i32* %10, align 4, !dbg !12021
  %11 = load i32*, i32** %6, align 8, !dbg !12022
  %12 = load i32, i32* %11, align 4, !dbg !12023
  %13 = load i32, i32* %4, align 4, !dbg !12024
  %14 = lshr i32 %13, %12, !dbg !12024
  store i32 %14, i32* %4, align 4, !dbg !12024
  %15 = load i32, i32* %4, align 4, !dbg !12025
  %16 = load i32, i32* %4, align 4, !dbg !12026
  %17 = lshr i32 %16, 1, !dbg !12027
  %18 = xor i32 %17, -1, !dbg !12028
  %19 = and i32 %15, %18, !dbg !12029
  %20 = call i32 @ffs(i32 %19) #1, !dbg !12030
  %21 = sub nsw i32 8, %20, !dbg !12031
  %22 = load i32*, i32** %5, align 8, !dbg !12032
  store i32 %21, i32* %22, align 4, !dbg !12033
  ret void, !dbg !12034
}

; Function Attrs: nounwind readnone
declare i32 @ffs(i32) #7

declare i32 @XGetPointerMapping(%struct._XDisplay*, i8*, i32) #2

; Function Attrs: nounwind
declare i32 @gethostname(i8*, i64) #4

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

declare void @XSetWMClientMachine(%struct._XDisplay*, i64, %struct.XTextProperty*) #2

declare i32 @XChangeProperty(%struct._XDisplay*, i64, i64, i64, i32, i32, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @seamless_restack_test() #0 !dbg !12035 {
  %1 = alloca [3 x i64], align 16
  %2 = alloca i32, align 4
  %3 = alloca %union._XEvent, align 8
  %4 = alloca %struct.XWindowChanges, align 8
  %5 = alloca i64, align 8
  %6 = alloca [64 x i8], align 16
  call void @llvm.dbg.declare(metadata [3 x i64]* %1, metadata !12036, metadata !416), !dbg !12040
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12041, metadata !416), !dbg !12042
  call void @llvm.dbg.declare(metadata %union._XEvent* %3, metadata !12043, metadata !416), !dbg !12044
  call void @llvm.dbg.declare(metadata %struct.XWindowChanges* %4, metadata !12045, metadata !416), !dbg !12046
  call void @llvm.dbg.declare(metadata i64* %5, metadata !12047, metadata !416), !dbg !12048
  store i32 0, i32* %2, align 4, !dbg !12049
  br label %7, !dbg !12051

; <label>:7:                                      ; preds = %58, %0
  %8 = load i32, i32* %2, align 4, !dbg !12052
  %9 = icmp slt i32 %8, 3, !dbg !12055
  br i1 %9, label %10, label %61, !dbg !12056

; <label>:10:                                     ; preds = %7
  call void @llvm.dbg.declare(metadata [64 x i8]* %6, metadata !12057, metadata !416), !dbg !12059
  %11 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12060
  %12 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !12061
  %13 = getelementptr inbounds %struct.Screen, %struct.Screen* %12, i32 0, i32 2, !dbg !12062
  %14 = load i64, i64* %13, align 8, !dbg !12062
  %15 = call i64 @XCreateSimpleWindow(%struct._XDisplay* %11, i64 %14, i32 0, i32 0, i32 20, i32 20, i32 0, i64 0, i64 0), !dbg !12063
  %16 = load i32, i32* %2, align 4, !dbg !12064
  %17 = sext i32 %16 to i64, !dbg !12065
  %18 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 %17, !dbg !12065
  store i64 %15, i64* %18, align 8, !dbg !12066
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i32 0, i32 0, !dbg !12067
  %20 = load i32, i32* %2, align 4, !dbg !12068
  %21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %19, i64 64, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.48, i32 0, i32 0), i32 %20) #9, !dbg !12069
  %22 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12070
  %23 = load i32, i32* %2, align 4, !dbg !12071
  %24 = sext i32 %23 to i64, !dbg !12072
  %25 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 %24, !dbg !12072
  %26 = load i64, i64* %25, align 8, !dbg !12072
  %27 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i32 0, i32 0, !dbg !12073
  %28 = call i32 @XStoreName(%struct._XDisplay* %22, i64 %26, i8* %27), !dbg !12074
  %29 = load i32, i32* %2, align 4, !dbg !12075
  %30 = sext i32 %29 to i64, !dbg !12076
  %31 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 %30, !dbg !12076
  %32 = load i64, i64* %31, align 8, !dbg !12076
  %33 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i32 0, i32 0, !dbg !12077
  call void @ewmh_set_wm_name(i64 %32, i8* %33), !dbg !12078
  %34 = load i32, i32* %2, align 4, !dbg !12079
  %35 = sext i32 %34 to i64, !dbg !12080
  %36 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 %35, !dbg !12080
  %37 = load i64, i64* %36, align 8, !dbg !12080
  call void @mwm_hide_decorations(i64 %37), !dbg !12081
  %38 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12082
  %39 = load i32, i32* %2, align 4, !dbg !12083
  %40 = sext i32 %39 to i64, !dbg !12084
  %41 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 %40, !dbg !12084
  %42 = load i64, i64* %41, align 8, !dbg !12084
  %43 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !12085
  %44 = getelementptr inbounds %struct.Screen, %struct.Screen* %43, i32 0, i32 2, !dbg !12086
  %45 = load i64, i64* %44, align 8, !dbg !12086
  %46 = call i32 @XSetTransientForHint(%struct._XDisplay* %38, i64 %42, i64 %45), !dbg !12087
  %47 = load i32, i32* %2, align 4, !dbg !12088
  %48 = sext i32 %47 to i64, !dbg !12089
  %49 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 %48, !dbg !12089
  %50 = load i64, i64* %49, align 8, !dbg !12089
  %51 = call i32 @ewmh_set_window_popup(i64 %50), !dbg !12090
  %52 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12091
  %53 = load i32, i32* %2, align 4, !dbg !12092
  %54 = sext i32 %53 to i64, !dbg !12093
  %55 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 %54, !dbg !12093
  %56 = load i64, i64* %55, align 8, !dbg !12093
  %57 = call i32 @XSelectInput(%struct._XDisplay* %52, i64 %56, i64 131072), !dbg !12094
  br label %58, !dbg !12095

; <label>:58:                                     ; preds = %10
  %59 = load i32, i32* %2, align 4, !dbg !12096
  %60 = add nsw i32 %59, 1, !dbg !12096
  store i32 %60, i32* %2, align 4, !dbg !12096
  br label %7, !dbg !12098, !llvm.loop !12099

; <label>:61:                                     ; preds = %7
  %62 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12101
  %63 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 2, !dbg !12102
  %64 = load i64, i64* %63, align 16, !dbg !12102
  %65 = call i32 @XMapRaised(%struct._XDisplay* %62, i64 %64), !dbg !12103
  br label %66, !dbg !12104, !llvm.loop !12105

; <label>:66:                                     ; preds = %71, %61
  %67 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12106
  %68 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 2, !dbg !12108
  %69 = load i64, i64* %68, align 16, !dbg !12108
  %70 = call i32 @XWindowEvent(%struct._XDisplay* %67, i64 %69, i64 131072, %union._XEvent* %3), !dbg !12109
  br label %71, !dbg !12110

; <label>:71:                                     ; preds = %66
  %72 = bitcast %union._XEvent* %3 to i32*, !dbg !12111
  %73 = load i32, i32* %72, align 8, !dbg !12111
  %74 = icmp ne i32 %73, 19, !dbg !12112
  br i1 %74, label %66, label %75, !dbg !12113, !llvm.loop !12105

; <label>:75:                                     ; preds = %71
  %76 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12115
  %77 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 0, !dbg !12116
  %78 = load i64, i64* %77, align 16, !dbg !12116
  %79 = call i32 @XMapRaised(%struct._XDisplay* %76, i64 %78), !dbg !12117
  br label %80, !dbg !12118, !llvm.loop !12119

; <label>:80:                                     ; preds = %85, %75
  %81 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12120
  %82 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 0, !dbg !12122
  %83 = load i64, i64* %82, align 16, !dbg !12122
  %84 = call i32 @XWindowEvent(%struct._XDisplay* %81, i64 %83, i64 131072, %union._XEvent* %3), !dbg !12123
  br label %85, !dbg !12124

; <label>:85:                                     ; preds = %80
  %86 = bitcast %union._XEvent* %3 to i32*, !dbg !12125
  %87 = load i32, i32* %86, align 8, !dbg !12125
  %88 = icmp ne i32 %87, 19, !dbg !12126
  br i1 %88, label %80, label %89, !dbg !12127, !llvm.loop !12119

; <label>:89:                                     ; preds = %85
  %90 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12129
  %91 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 1, !dbg !12130
  %92 = load i64, i64* %91, align 8, !dbg !12130
  %93 = call i32 @XMapRaised(%struct._XDisplay* %90, i64 %92), !dbg !12131
  br label %94, !dbg !12132, !llvm.loop !12133

; <label>:94:                                     ; preds = %99, %89
  %95 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12134
  %96 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 1, !dbg !12136
  %97 = load i64, i64* %96, align 8, !dbg !12136
  %98 = call i32 @XWindowEvent(%struct._XDisplay* %95, i64 %97, i64 131072, %union._XEvent* %3), !dbg !12137
  br label %99, !dbg !12138

; <label>:99:                                     ; preds = %94
  %100 = bitcast %union._XEvent* %3 to i32*, !dbg !12139
  %101 = load i32, i32* %100, align 8, !dbg !12139
  %102 = icmp ne i32 %101, 19, !dbg !12140
  br i1 %102, label %94, label %103, !dbg !12141, !llvm.loop !12133

; <label>:103:                                    ; preds = %99
  %104 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 0, !dbg !12143
  %105 = load i64, i64* %104, align 16, !dbg !12143
  %106 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 1, !dbg !12145
  %107 = load i64, i64* %106, align 8, !dbg !12145
  %108 = call i32 @sw_window_is_behind(i64 %105, i64 %107), !dbg !12146
  %109 = icmp ne i32 %108, 0, !dbg !12146
  br i1 %109, label %110, label %117, !dbg !12147

; <label>:110:                                    ; preds = %103
  %111 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 2, !dbg !12148
  %112 = load i64, i64* %111, align 16, !dbg !12148
  %113 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 1, !dbg !12150
  %114 = load i64, i64* %113, align 8, !dbg !12150
  %115 = call i32 @sw_window_is_behind(i64 %112, i64 %114), !dbg !12151
  %116 = icmp ne i32 %115, 0, !dbg !12151
  br i1 %116, label %132, label %117, !dbg !12152

; <label>:117:                                    ; preds = %110, %103
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.49, i32 0, i32 0)), !dbg !12153
  store i32 1, i32* @g_seamless_broken_restack, align 4, !dbg !12155
  store i32 0, i32* %2, align 4, !dbg !12156
  br label %118, !dbg !12158

; <label>:118:                                    ; preds = %128, %117
  %119 = load i32, i32* %2, align 4, !dbg !12159
  %120 = icmp slt i32 %119, 3, !dbg !12162
  br i1 %120, label %121, label %131, !dbg !12163

; <label>:121:                                    ; preds = %118
  %122 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12164
  %123 = load i32, i32* %2, align 4, !dbg !12165
  %124 = sext i32 %123 to i64, !dbg !12166
  %125 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 %124, !dbg !12166
  %126 = load i64, i64* %125, align 8, !dbg !12166
  %127 = call i32 @XDestroyWindow(%struct._XDisplay* %122, i64 %126), !dbg !12167
  br label %128, !dbg !12167

; <label>:128:                                    ; preds = %121
  %129 = load i32, i32* %2, align 4, !dbg !12168
  %130 = add nsw i32 %129, 1, !dbg !12168
  store i32 %130, i32* %2, align 4, !dbg !12168
  br label %118, !dbg !12170, !llvm.loop !12171

; <label>:131:                                    ; preds = %118
  br label %192, !dbg !12173

; <label>:132:                                    ; preds = %110
  %133 = getelementptr inbounds %struct.XWindowChanges, %struct.XWindowChanges* %4, i32 0, i32 6, !dbg !12174
  store i32 1, i32* %133, align 8, !dbg !12175
  %134 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 0, !dbg !12176
  %135 = load i64, i64* %134, align 16, !dbg !12176
  %136 = getelementptr inbounds %struct.XWindowChanges, %struct.XWindowChanges* %4, i32 0, i32 5, !dbg !12177
  store i64 %135, i64* %136, align 8, !dbg !12178
  %137 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12179
  %138 = call i64 @XNextRequest(%struct._XDisplay* %137), !dbg !12180
  store i64 %138, i64* %5, align 8, !dbg !12181
  %139 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12182
  %140 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 1, !dbg !12183
  %141 = load i64, i64* %140, align 8, !dbg !12183
  %142 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12184
  %143 = bitcast %struct._XDisplay* %142 to %struct.anon*, !dbg !12185
  %144 = getelementptr inbounds %struct.anon, %struct.anon* %143, i32 0, i32 33, !dbg !12185
  %145 = load i32, i32* %144, align 8, !dbg !12185
  %146 = call i32 @XReconfigureWMWindow(%struct._XDisplay* %139, i64 %141, i32 %145, i32 96, %struct.XWindowChanges* %4), !dbg !12186
  %147 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 1, !dbg !12187
  %148 = load i64, i64* %147, align 8, !dbg !12187
  %149 = load i64, i64* %5, align 8, !dbg !12188
  call void @sw_wait_configurenotify(i64 %148, i64 %149), !dbg !12189
  %150 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 1, !dbg !12190
  %151 = load i64, i64* %150, align 8, !dbg !12190
  %152 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 0, !dbg !12192
  %153 = load i64, i64* %152, align 16, !dbg !12192
  %154 = call i32 @sw_window_is_behind(i64 %151, i64 %153), !dbg !12193
  %155 = icmp ne i32 %154, 0, !dbg !12193
  br i1 %155, label %157, label %156, !dbg !12194

; <label>:156:                                    ; preds = %132
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.50, i32 0, i32 0)), !dbg !12195
  store i32 1, i32* @g_seamless_broken_restack, align 4, !dbg !12197
  br label %166, !dbg !12198

; <label>:157:                                    ; preds = %132
  %158 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 1, !dbg !12199
  %159 = load i64, i64* %158, align 8, !dbg !12199
  %160 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 2, !dbg !12201
  %161 = load i64, i64* %160, align 16, !dbg !12201
  %162 = call i32 @sw_window_is_behind(i64 %159, i64 %161), !dbg !12202
  %163 = icmp ne i32 %162, 0, !dbg !12202
  br i1 %163, label %164, label %165, !dbg !12203

; <label>:164:                                    ; preds = %157
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.51, i32 0, i32 0)), !dbg !12204
  store i32 1, i32* @g_seamless_broken_restack, align 4, !dbg !12206
  br label %165, !dbg !12207

; <label>:165:                                    ; preds = %164, %157
  br label %166

; <label>:166:                                    ; preds = %165, %156
  store i32 0, i32* %2, align 4, !dbg !12208
  br label %167, !dbg !12210

; <label>:167:                                    ; preds = %189, %166
  %168 = load i32, i32* %2, align 4, !dbg !12211
  %169 = icmp slt i32 %168, 3, !dbg !12214
  br i1 %169, label %170, label %192, !dbg !12215

; <label>:170:                                    ; preds = %167
  %171 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12216
  %172 = load i32, i32* %2, align 4, !dbg !12218
  %173 = sext i32 %172 to i64, !dbg !12219
  %174 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 %173, !dbg !12219
  %175 = load i64, i64* %174, align 8, !dbg !12219
  %176 = call i32 @XDestroyWindow(%struct._XDisplay* %171, i64 %175), !dbg !12220
  br label %177, !dbg !12221, !llvm.loop !12222

; <label>:177:                                    ; preds = %184, %170
  %178 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12223
  %179 = load i32, i32* %2, align 4, !dbg !12225
  %180 = sext i32 %179 to i64, !dbg !12226
  %181 = getelementptr inbounds [3 x i64], [3 x i64]* %1, i64 0, i64 %180, !dbg !12226
  %182 = load i64, i64* %181, align 8, !dbg !12226
  %183 = call i32 @XWindowEvent(%struct._XDisplay* %178, i64 %182, i64 131072, %union._XEvent* %3), !dbg !12227
  br label %184, !dbg !12228

; <label>:184:                                    ; preds = %177
  %185 = bitcast %union._XEvent* %3 to i32*, !dbg !12229
  %186 = load i32, i32* %185, align 8, !dbg !12229
  %187 = icmp ne i32 %186, 17, !dbg !12230
  br i1 %187, label %177, label %188, !dbg !12231, !llvm.loop !12222

; <label>:188:                                    ; preds = %184
  br label %189, !dbg !12233

; <label>:189:                                    ; preds = %188
  %190 = load i32, i32* %2, align 4, !dbg !12234
  %191 = add nsw i32 %190, 1, !dbg !12234
  store i32 %191, i32* %2, align 4, !dbg !12234
  br label %167, !dbg !12236, !llvm.loop !12237

; <label>:192:                                    ; preds = %131, %167
  ret void, !dbg !12239
}

declare i64 @XCreateSimpleWindow(%struct._XDisplay*, i64, i32, i32, i32, i32, i32, i64, i64) #2

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #4

declare i32 @XMapRaised(%struct._XDisplay*, i64) #2

declare i32 @XWindowEvent(%struct._XDisplay*, i64, i64, %union._XEvent*) #2

; Function Attrs: nounwind uwtable
define internal i32 @sw_window_is_behind(i64, i64) #0 !dbg !12240 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12243, metadata !416), !dbg !12244
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !12245, metadata !416), !dbg !12246
  call void @llvm.dbg.declare(metadata i64* %5, metadata !12247, metadata !416), !dbg !12248
  call void @llvm.dbg.declare(metadata i64* %6, metadata !12249, metadata !416), !dbg !12250
  call void @llvm.dbg.declare(metadata i64** %7, metadata !12251, metadata !416), !dbg !12253
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12254, metadata !416), !dbg !12255
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12256, metadata !416), !dbg !12257
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12258, metadata !416), !dbg !12259
  store i32 0, i32* %10, align 4, !dbg !12259
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12260, metadata !416), !dbg !12261
  store i32 0, i32* %11, align 4, !dbg !12261
  %12 = load i64, i64* %3, align 8, !dbg !12262
  %13 = call i64 @sw_get_toplevel(i64 %12), !dbg !12263
  store i64 %13, i64* %3, align 8, !dbg !12264
  %14 = load i64, i64* %4, align 8, !dbg !12265
  %15 = call i64 @sw_get_toplevel(i64 %14), !dbg !12266
  store i64 %15, i64* %4, align 8, !dbg !12267
  %16 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12268
  %17 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !12269
  %18 = getelementptr inbounds %struct.Screen, %struct.Screen* %17, i32 0, i32 2, !dbg !12270
  %19 = load i64, i64* %18, align 8, !dbg !12270
  %20 = call i32 @XQueryTree(%struct._XDisplay* %16, i64 %19, i64* %5, i64* %6, i64** %7, i32* %8), !dbg !12271
  %21 = load i32, i32* %8, align 4, !dbg !12272
  %22 = sub i32 %21, 1, !dbg !12274
  store i32 %22, i32* %9, align 4, !dbg !12275
  br label %23, !dbg !12276

; <label>:23:                                     ; preds = %46, %2
  %24 = load i32, i32* %9, align 4, !dbg !12277
  %25 = icmp sge i32 %24, 0, !dbg !12280
  br i1 %25, label %26, label %49, !dbg !12281

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* %9, align 4, !dbg !12282
  %28 = sext i32 %27 to i64, !dbg !12285
  %29 = load i64*, i64** %7, align 8, !dbg !12285
  %30 = getelementptr inbounds i64, i64* %29, i64 %28, !dbg !12285
  %31 = load i64, i64* %30, align 8, !dbg !12285
  %32 = load i64, i64* %4, align 8, !dbg !12286
  %33 = icmp eq i64 %31, %32, !dbg !12287
  br i1 %33, label %34, label %35, !dbg !12288

; <label>:34:                                     ; preds = %26
  store i32 1, i32* %10, align 4, !dbg !12289
  br label %45, !dbg !12291

; <label>:35:                                     ; preds = %26
  %36 = load i32, i32* %9, align 4, !dbg !12292
  %37 = sext i32 %36 to i64, !dbg !12294
  %38 = load i64*, i64** %7, align 8, !dbg !12294
  %39 = getelementptr inbounds i64, i64* %38, i64 %37, !dbg !12294
  %40 = load i64, i64* %39, align 8, !dbg !12294
  %41 = load i64, i64* %3, align 8, !dbg !12295
  %42 = icmp eq i64 %40, %41, !dbg !12296
  br i1 %42, label %43, label %44, !dbg !12297

; <label>:43:                                     ; preds = %35
  store i32 1, i32* %11, align 4, !dbg !12298
  br label %49, !dbg !12300

; <label>:44:                                     ; preds = %35
  br label %45

; <label>:45:                                     ; preds = %44, %34
  br label %46, !dbg !12301

; <label>:46:                                     ; preds = %45
  %47 = load i32, i32* %9, align 4, !dbg !12302
  %48 = add nsw i32 %47, -1, !dbg !12302
  store i32 %48, i32* %9, align 4, !dbg !12302
  br label %23, !dbg !12304, !llvm.loop !12305

; <label>:49:                                     ; preds = %43, %23
  %50 = load i64*, i64** %7, align 8, !dbg !12307
  %51 = icmp ne i64* %50, null, !dbg !12307
  br i1 %51, label %52, label %56, !dbg !12309

; <label>:52:                                     ; preds = %49
  %53 = load i64*, i64** %7, align 8, !dbg !12310
  %54 = bitcast i64* %53 to i8*, !dbg !12310
  %55 = call i32 @XFree(i8* %54), !dbg !12311
  br label %56, !dbg !12311

; <label>:56:                                     ; preds = %52, %49
  %57 = load i32, i32* %11, align 4, !dbg !12312
  %58 = icmp ne i32 %57, 0, !dbg !12312
  br i1 %58, label %66, label %59, !dbg !12314

; <label>:59:                                     ; preds = %56
  %60 = load i64, i64* %3, align 8, !dbg !12315
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.52, i32 0, i32 0), i64 %60), !dbg !12317
  %61 = load i32, i32* %10, align 4, !dbg !12318
  %62 = icmp ne i32 %61, 0, !dbg !12318
  br i1 %62, label %65, label %63, !dbg !12320

; <label>:63:                                     ; preds = %59
  %64 = load i64, i64* %4, align 8, !dbg !12321
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.53, i32 0, i32 0), i64 %64), !dbg !12323
  br label %65, !dbg !12324

; <label>:65:                                     ; preds = %63, %59
  br label %66, !dbg !12325

; <label>:66:                                     ; preds = %65, %56
  %67 = load i32, i32* %10, align 4, !dbg !12326
  ret i32 %67, !dbg !12327
}

; Function Attrs: nounwind uwtable
define internal i64 @sw_get_toplevel(i64) #0 !dbg !12328 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !12331, metadata !416), !dbg !12332
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12333, metadata !416), !dbg !12334
  call void @llvm.dbg.declare(metadata i64* %4, metadata !12335, metadata !416), !dbg !12336
  call void @llvm.dbg.declare(metadata i64** %5, metadata !12337, metadata !416), !dbg !12338
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12339, metadata !416), !dbg !12340
  br label %7, !dbg !12341

; <label>:7:                                      ; preds = %1, %20
  %8 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12342
  %9 = load i64, i64* %2, align 8, !dbg !12344
  %10 = call i32 @XQueryTree(%struct._XDisplay* %8, i64 %9, i64* %3, i64* %4, i64** %5, i32* %6), !dbg !12345
  %11 = load i64, i64* %3, align 8, !dbg !12346
  %12 = load i64, i64* %4, align 8, !dbg !12348
  %13 = icmp eq i64 %11, %12, !dbg !12349
  br i1 %13, label %14, label %15, !dbg !12350

; <label>:14:                                     ; preds = %7
  br label %22, !dbg !12351

; <label>:15:                                     ; preds = %7
  %16 = load i64, i64* %4, align 8, !dbg !12353
  %17 = icmp ne i64 %16, 0, !dbg !12353
  br i1 %17, label %19, label %18, !dbg !12355

; <label>:18:                                     ; preds = %15
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.54, i32 0, i32 0)), !dbg !12356
  br label %19, !dbg !12358

; <label>:19:                                     ; preds = %18, %15
  br label %20

; <label>:20:                                     ; preds = %19
  %21 = load i64, i64* %4, align 8, !dbg !12359
  store i64 %21, i64* %2, align 8, !dbg !12360
  br label %7, !dbg !12361, !llvm.loop !12363

; <label>:22:                                     ; preds = %14
  %23 = load i64, i64* %2, align 8, !dbg !12364
  ret i64 %23, !dbg !12365
}

declare i32 @XQueryTree(%struct._XDisplay*, i64, i64*, i64*, i64**, i32*) #2

declare i32 @XNextEvent(%struct._XDisplay*, %union._XEvent*) #2

declare i32 @XFilterEvent(%union._XEvent*, i64) #2

; Function Attrs: nounwind uwtable
define internal %struct._seamless_window* @sw_get_window_by_wnd(i64) #0 !dbg !12366 {
  %2 = alloca %struct._seamless_window*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct._seamless_window*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12369, metadata !416), !dbg !12370
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %4, metadata !12371, metadata !416), !dbg !12372
  %5 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !12373
  store %struct._seamless_window* %5, %struct._seamless_window** %4, align 8, !dbg !12375
  br label %6, !dbg !12376

; <label>:6:                                      ; preds = %18, %1
  %7 = load %struct._seamless_window*, %struct._seamless_window** %4, align 8, !dbg !12377
  %8 = icmp ne %struct._seamless_window* %7, null, !dbg !12380
  br i1 %8, label %9, label %22, !dbg !12380

; <label>:9:                                      ; preds = %6
  %10 = load %struct._seamless_window*, %struct._seamless_window** %4, align 8, !dbg !12381
  %11 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %10, i32 0, i32 0, !dbg !12384
  %12 = load i64, i64* %11, align 8, !dbg !12384
  %13 = load i64, i64* %3, align 8, !dbg !12385
  %14 = icmp eq i64 %12, %13, !dbg !12386
  br i1 %14, label %15, label %17, !dbg !12387

; <label>:15:                                     ; preds = %9
  %16 = load %struct._seamless_window*, %struct._seamless_window** %4, align 8, !dbg !12388
  store %struct._seamless_window* %16, %struct._seamless_window** %2, align 8, !dbg !12389
  br label %23, !dbg !12389

; <label>:17:                                     ; preds = %9
  br label %18, !dbg !12390

; <label>:18:                                     ; preds = %17
  %19 = load %struct._seamless_window*, %struct._seamless_window** %4, align 8, !dbg !12391
  %20 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %19, i32 0, i32 20, !dbg !12393
  %21 = load %struct._seamless_window*, %struct._seamless_window** %20, align 8, !dbg !12393
  store %struct._seamless_window* %21, %struct._seamless_window** %4, align 8, !dbg !12394
  br label %6, !dbg !12395, !llvm.loop !12396

; <label>:22:                                     ; preds = %6
  store %struct._seamless_window* null, %struct._seamless_window** %2, align 8, !dbg !12398
  br label %23, !dbg !12398

; <label>:23:                                     ; preds = %22, %15
  %24 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !12399
  ret %struct._seamless_window* %24, !dbg !12399
}

declare i32 @seamless_send_destroy(i64) #2

declare i32 @XSendEvent(%struct._XDisplay*, i64, i32, i64, %union._XEvent*) #2

declare i32 @XmbLookupString(%struct._XIC*, %struct.XKeyEvent*, i8*, i32, i64*, i32*) #2

declare i32 @XLookupString(%struct.XKeyEvent*, i8*, i32, i64*, %struct._XComposeStatus*) #2

declare i8* @get_ksname(i32) #2

declare void @set_keypress_keysym(i32, i64) #2

; Function Attrs: nounwind
declare i64 @time(i64*) #4

declare i32 @handle_special_keys(i32, i32, i32, i32) #2

declare void @xkeymap_send_keys(i32, i32, i32, i32, i32, i8 zeroext) #2

declare i64 @reset_keypress_keysym(i32, i64) #2

; Function Attrs: nounwind uwtable
define internal void @handle_button_event(%union._XEvent* byval align 8, i32) #0 !dbg !12400 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.XWindowAttributes, align 8
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata %union._XEvent* %0, metadata !12403, metadata !416), !dbg !12404
  store i32 %1, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12405, metadata !416), !dbg !12406
  call void @llvm.dbg.declare(metadata %struct.XWindowAttributes* %4, metadata !12407, metadata !416), !dbg !12408
  call void @llvm.dbg.declare(metadata i16* %5, metadata !12409, metadata !416), !dbg !12410
  call void @llvm.dbg.declare(metadata i16* %6, metadata !12411, metadata !416), !dbg !12412
  call void @llvm.dbg.declare(metadata i16* %7, metadata !12413, metadata !416), !dbg !12414
  store i16 0, i16* %7, align 2, !dbg !12414
  %8 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12415
  %9 = load i64, i64* @g_wnd, align 8, !dbg !12416
  %10 = call i32 @XGetWindowAttributes(%struct._XDisplay* %8, i64 %9, %struct.XWindowAttributes* %4), !dbg !12417
  %11 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12418
  %12 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %11, i32 0, i32 7, !dbg !12419
  %13 = load i64, i64* %12, align 8, !dbg !12419
  store i64 %13, i64* @g_last_gesturetime, align 8, !dbg !12420
  %14 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12421
  %15 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %14, i32 0, i32 13, !dbg !12422
  %16 = load i32, i32* %15, align 4, !dbg !12422
  %17 = sub i32 %16, 1, !dbg !12423
  %18 = zext i32 %17 to i64, !dbg !12424
  %19 = getelementptr inbounds [32 x i8], [32 x i8]* @g_pointer_log_to_phys_map, i64 0, i64 %18, !dbg !12424
  %20 = load i8, i8* %19, align 1, !dbg !12424
  %21 = zext i8 %20 to i32, !dbg !12424
  %22 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12425
  %23 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %22, i32 0, i32 13, !dbg !12426
  store i32 %21, i32* %23, align 4, !dbg !12427
  %24 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12428
  %25 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %24, i32 0, i32 13, !dbg !12429
  %26 = load i32, i32* %25, align 4, !dbg !12429
  %27 = call zeroext i16 @xkeymap_translate_button(i32 %26, i16* %6), !dbg !12430
  store i16 %27, i16* %5, align 2, !dbg !12431
  %28 = load i16, i16* %5, align 2, !dbg !12432
  %29 = zext i16 %28 to i32, !dbg !12432
  %30 = icmp eq i32 %29, 0, !dbg !12434
  br i1 %30, label %31, label %32, !dbg !12435

; <label>:31:                                     ; preds = %2
  br label %195, !dbg !12436

; <label>:32:                                     ; preds = %2
  %33 = load i32, i32* %3, align 4, !dbg !12437
  %34 = icmp ne i32 %33, 0, !dbg !12437
  br i1 %34, label %35, label %36, !dbg !12439

; <label>:35:                                     ; preds = %32
  store i16 -32768, i16* %7, align 2, !dbg !12440
  br label %36, !dbg !12441

; <label>:36:                                     ; preds = %35, %32
  %37 = load i32, i32* @g_moving_wnd, align 4, !dbg !12442
  %38 = icmp ne i32 %37, 0, !dbg !12442
  br i1 %38, label %39, label %44, !dbg !12444

; <label>:39:                                     ; preds = %36
  %40 = bitcast %union._XEvent* %0 to i32*, !dbg !12445
  %41 = load i32, i32* %40, align 8, !dbg !12445
  %42 = icmp eq i32 %41, 5, !dbg !12447
  br i1 %42, label %43, label %44, !dbg !12448

; <label>:43:                                     ; preds = %39
  store i32 0, i32* @g_moving_wnd, align 4, !dbg !12449
  br label %44, !dbg !12450

; <label>:44:                                     ; preds = %43, %39, %36
  %45 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12451
  %46 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %45, i32 0, i32 9, !dbg !12453
  %47 = load i32, i32* %46, align 4, !dbg !12453
  %48 = load i32, i32* @g_win_button_size, align 4, !dbg !12454
  %49 = icmp slt i32 %47, %48, !dbg !12455
  br i1 %49, label %50, label %141, !dbg !12456

; <label>:50:                                     ; preds = %44
  %51 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12457
  %52 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %51, i32 0, i32 8, !dbg !12460
  %53 = load i32, i32* %52, align 8, !dbg !12460
  %54 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %4, i32 0, i32 2, !dbg !12461
  %55 = load i32, i32* %54, align 8, !dbg !12461
  %56 = load i32, i32* @g_win_button_size, align 4, !dbg !12462
  %57 = sub nsw i32 %55, %56, !dbg !12463
  %58 = icmp sge i32 %53, %57, !dbg !12464
  br i1 %58, label %59, label %60, !dbg !12465

; <label>:59:                                     ; preds = %50
  br label %140, !dbg !12466

; <label>:60:                                     ; preds = %50
  %61 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12468
  %62 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %61, i32 0, i32 8, !dbg !12470
  %63 = load i32, i32* %62, align 8, !dbg !12470
  %64 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %4, i32 0, i32 2, !dbg !12471
  %65 = load i32, i32* %64, align 8, !dbg !12471
  %66 = load i32, i32* @g_win_button_size, align 4, !dbg !12472
  %67 = mul nsw i32 %66, 2, !dbg !12473
  %68 = sub nsw i32 %65, %67, !dbg !12474
  %69 = icmp sge i32 %63, %68, !dbg !12475
  br i1 %69, label %70, label %76, !dbg !12476

; <label>:70:                                     ; preds = %60
  %71 = bitcast %union._XEvent* %0 to i32*, !dbg !12477
  %72 = load i32, i32* %71, align 8, !dbg !12477
  %73 = icmp eq i32 %72, 4, !dbg !12480
  br i1 %73, label %74, label %75, !dbg !12481

; <label>:74:                                     ; preds = %70
  br label %195, !dbg !12482

; <label>:75:                                     ; preds = %70
  br label %139, !dbg !12483

; <label>:76:                                     ; preds = %60
  %77 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12484
  %78 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %77, i32 0, i32 8, !dbg !12486
  %79 = load i32, i32* %78, align 8, !dbg !12486
  %80 = getelementptr inbounds %struct.XWindowAttributes, %struct.XWindowAttributes* %4, i32 0, i32 2, !dbg !12487
  %81 = load i32, i32* %80, align 8, !dbg !12487
  %82 = load i32, i32* @g_win_button_size, align 4, !dbg !12488
  %83 = mul nsw i32 %82, 3, !dbg !12489
  %84 = sub nsw i32 %81, %83, !dbg !12490
  %85 = icmp sge i32 %79, %84, !dbg !12491
  br i1 %85, label %86, label %103, !dbg !12492

; <label>:86:                                     ; preds = %76
  %87 = bitcast %union._XEvent* %0 to i32*, !dbg !12493
  %88 = load i32, i32* %87, align 8, !dbg !12493
  %89 = icmp eq i32 %88, 5, !dbg !12496
  br i1 %89, label %90, label %102, !dbg !12497

; <label>:90:                                     ; preds = %86
  %91 = call i64 @time(i64* null) #9, !dbg !12498
  %92 = trunc i64 %91 to i32, !dbg !12498
  %93 = load i16, i16* %6, align 2, !dbg !12500
  %94 = load i16, i16* %5, align 2, !dbg !12501
  call void @rdp_send_input(i32 %92, i16 zeroext %93, i16 zeroext %94, i16 zeroext 1, i16 zeroext 1), !dbg !12502
  %95 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12504
  %96 = load i64, i64* @g_wnd, align 8, !dbg !12505
  %97 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12506
  %98 = bitcast %struct._XDisplay* %97 to %struct.anon*, !dbg !12507
  %99 = getelementptr inbounds %struct.anon, %struct.anon* %98, i32 0, i32 33, !dbg !12507
  %100 = load i32, i32* %99, align 8, !dbg !12507
  %101 = call i32 @XIconifyWindow(%struct._XDisplay* %95, i64 %96, i32 %100), !dbg !12508
  br label %195, !dbg !12509

; <label>:102:                                    ; preds = %86
  br label %138, !dbg !12510

; <label>:103:                                    ; preds = %76
  %104 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12511
  %105 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %104, i32 0, i32 8, !dbg !12513
  %106 = load i32, i32* %105, align 8, !dbg !12513
  %107 = load i32, i32* @g_win_button_size, align 4, !dbg !12514
  %108 = icmp sle i32 %106, %107, !dbg !12515
  br i1 %108, label %109, label %115, !dbg !12516

; <label>:109:                                    ; preds = %103
  %110 = bitcast %union._XEvent* %0 to i32*, !dbg !12517
  %111 = load i32, i32* %110, align 8, !dbg !12517
  %112 = icmp eq i32 %111, 4, !dbg !12520
  br i1 %112, label %113, label %114, !dbg !12521

; <label>:113:                                    ; preds = %109
  br label %195, !dbg !12522

; <label>:114:                                    ; preds = %109
  br label %137, !dbg !12523

; <label>:115:                                    ; preds = %103
  %116 = bitcast %union._XEvent* %0 to i32*, !dbg !12524
  %117 = load i32, i32* %116, align 8, !dbg !12524
  %118 = icmp eq i32 %117, 4, !dbg !12527
  br i1 %118, label %119, label %136, !dbg !12528

; <label>:119:                                    ; preds = %115
  %120 = load i32, i32* @g_fullscreen, align 4, !dbg !12529
  %121 = icmp ne i32 %120, 0, !dbg !12529
  br i1 %121, label %135, label %122, !dbg !12532

; <label>:122:                                    ; preds = %119
  %123 = load i32, i32* @g_hide_decorations, align 4, !dbg !12533
  %124 = icmp ne i32 %123, 0, !dbg !12533
  br i1 %124, label %125, label %135, !dbg !12535

; <label>:125:                                    ; preds = %122
  %126 = load i32, i32* @g_using_full_workarea, align 4, !dbg !12536
  %127 = icmp ne i32 %126, 0, !dbg !12536
  br i1 %127, label %135, label %128, !dbg !12538

; <label>:128:                                    ; preds = %125
  store i32 1, i32* @g_moving_wnd, align 4, !dbg !12539
  %129 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12541
  %130 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %129, i32 0, i32 8, !dbg !12542
  %131 = load i32, i32* %130, align 8, !dbg !12542
  store i32 %131, i32* @g_move_x_offset, align 4, !dbg !12543
  %132 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12544
  %133 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %132, i32 0, i32 9, !dbg !12545
  %134 = load i32, i32* %133, align 4, !dbg !12545
  store i32 %134, i32* @g_move_y_offset, align 4, !dbg !12546
  br label %135, !dbg !12547

; <label>:135:                                    ; preds = %128, %125, %122, %119
  br label %195, !dbg !12548

; <label>:136:                                    ; preds = %115
  br label %137

; <label>:137:                                    ; preds = %136, %114
  br label %138

; <label>:138:                                    ; preds = %137, %102
  br label %139

; <label>:139:                                    ; preds = %138, %75
  br label %140

; <label>:140:                                    ; preds = %139, %59
  br label %141, !dbg !12549

; <label>:141:                                    ; preds = %140, %44
  %142 = load i32, i32* %3, align 4, !dbg !12550
  %143 = icmp ne i32 %142, 0, !dbg !12550
  br i1 %143, label %153, label %144, !dbg !12552

; <label>:144:                                    ; preds = %141
  %145 = load i16, i16* %5, align 2, !dbg !12553
  %146 = zext i16 %145 to i32, !dbg !12553
  %147 = icmp eq i32 %146, 640, !dbg !12555
  br i1 %147, label %152, label %148, !dbg !12556

; <label>:148:                                    ; preds = %144
  %149 = load i16, i16* %5, align 2, !dbg !12557
  %150 = zext i16 %149 to i32, !dbg !12557
  %151 = icmp eq i32 %150, 896, !dbg !12559
  br i1 %151, label %152, label %153, !dbg !12560

; <label>:152:                                    ; preds = %148, %144
  br label %195, !dbg !12561

; <label>:153:                                    ; preds = %148, %141
  %154 = bitcast %union._XEvent* %0 to %struct.XMotionEvent*, !dbg !12563
  %155 = getelementptr inbounds %struct.XMotionEvent, %struct.XMotionEvent* %154, i32 0, i32 4, !dbg !12565
  %156 = load i64, i64* %155, align 8, !dbg !12565
  %157 = load i64, i64* @g_wnd, align 8, !dbg !12566
  %158 = icmp eq i64 %156, %157, !dbg !12567
  br i1 %158, label %159, label %177, !dbg !12568

; <label>:159:                                    ; preds = %153
  %160 = call i64 @time(i64* null) #9, !dbg !12569
  %161 = trunc i64 %160 to i32, !dbg !12569
  %162 = load i16, i16* %6, align 2, !dbg !12571
  %163 = load i16, i16* %7, align 2, !dbg !12572
  %164 = zext i16 %163 to i32, !dbg !12572
  %165 = load i16, i16* %5, align 2, !dbg !12573
  %166 = zext i16 %165 to i32, !dbg !12573
  %167 = or i32 %164, %166, !dbg !12574
  %168 = trunc i32 %167 to i16, !dbg !12572
  %169 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12575
  %170 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %169, i32 0, i32 8, !dbg !12576
  %171 = load i32, i32* %170, align 8, !dbg !12576
  %172 = trunc i32 %171 to i16, !dbg !12577
  %173 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12578
  %174 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %173, i32 0, i32 9, !dbg !12579
  %175 = load i32, i32* %174, align 4, !dbg !12579
  %176 = trunc i32 %175 to i16, !dbg !12580
  call void @rdp_send_input(i32 %161, i16 zeroext %162, i16 zeroext %168, i16 zeroext %172, i16 zeroext %176), !dbg !12581
  br label %195, !dbg !12583

; <label>:177:                                    ; preds = %153
  %178 = call i64 @time(i64* null) #9, !dbg !12584
  %179 = trunc i64 %178 to i32, !dbg !12584
  %180 = load i16, i16* %6, align 2, !dbg !12586
  %181 = load i16, i16* %7, align 2, !dbg !12587
  %182 = zext i16 %181 to i32, !dbg !12587
  %183 = load i16, i16* %5, align 2, !dbg !12588
  %184 = zext i16 %183 to i32, !dbg !12588
  %185 = or i32 %182, %184, !dbg !12589
  %186 = trunc i32 %185 to i16, !dbg !12587
  %187 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12590
  %188 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %187, i32 0, i32 10, !dbg !12591
  %189 = load i32, i32* %188, align 8, !dbg !12591
  %190 = trunc i32 %189 to i16, !dbg !12592
  %191 = bitcast %union._XEvent* %0 to %struct.XButtonEvent*, !dbg !12593
  %192 = getelementptr inbounds %struct.XButtonEvent, %struct.XButtonEvent* %191, i32 0, i32 11, !dbg !12594
  %193 = load i32, i32* %192, align 4, !dbg !12594
  %194 = trunc i32 %193 to i16, !dbg !12595
  call void @rdp_send_input(i32 %179, i16 zeroext %180, i16 zeroext %186, i16 zeroext %190, i16 zeroext %194), !dbg !12596
  br label %195

; <label>:195:                                    ; preds = %31, %74, %90, %113, %135, %152, %177, %159
  ret void, !dbg !12598
}

declare i32 @XMoveWindow(%struct._XDisplay*, i64, i32, i32) #2

declare i32 @XSetInputFocus(%struct._XDisplay*, i64, i32, i64) #2

declare void @rdp_send_input(i32, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext) #2

declare void @reset_modifier_keys() #2

declare i32 @XGrabKeyboard(%struct._XDisplay*, i64, i32, i32, i32, i64) #2

declare i32 @seamless_send_focus(i64, i64) #2

declare i32 @XUngrabKeyboard(%struct._XDisplay*, i64) #2

declare i32 @XRefreshKeyboardMapping(%struct.XMappingEvent*) #2

declare void @xclip_handle_SelectionNotify(%struct.XSelectionEvent*) #2

declare void @xclip_handle_SelectionRequest(%struct.XSelectionRequestEvent*) #2

declare void @xclip_handle_SelectionClear() #2

declare void @xclip_handle_PropertyNotify(%struct.XPropertyEvent*) #2

declare i32 @ewmh_get_window_state(i64) #2

declare i32 @seamless_send_state(i64, i32, i64) #2

declare i32 @ewmh_get_window_desktop(i64) #2

; Function Attrs: nounwind uwtable
define internal void @sw_all_to_desktop(i64, i32) #0 !dbg !12599 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct._seamless_window*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12602, metadata !416), !dbg !12603
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12604, metadata !416), !dbg !12605
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %5, metadata !12606, metadata !416), !dbg !12607
  %6 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !12608
  store %struct._seamless_window* %6, %struct._seamless_window** %5, align 8, !dbg !12610
  br label %7, !dbg !12611

; <label>:7:                                      ; preds = %33, %2
  %8 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !12612
  %9 = icmp ne %struct._seamless_window* %8, null, !dbg !12615
  br i1 %9, label %10, label %37, !dbg !12615

; <label>:10:                                     ; preds = %7
  %11 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !12616
  %12 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %11, i32 0, i32 0, !dbg !12619
  %13 = load i64, i64* %12, align 8, !dbg !12619
  %14 = load i64, i64* %3, align 8, !dbg !12620
  %15 = icmp eq i64 %13, %14, !dbg !12621
  br i1 %15, label %16, label %17, !dbg !12622

; <label>:16:                                     ; preds = %10
  br label %33, !dbg !12623

; <label>:17:                                     ; preds = %10
  %18 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !12624
  %19 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %18, i32 0, i32 9, !dbg !12626
  %20 = load i32, i32* %19, align 4, !dbg !12626
  %21 = load i32, i32* %4, align 4, !dbg !12627
  %22 = icmp ne i32 %20, %21, !dbg !12628
  br i1 %22, label %23, label %32, !dbg !12629

; <label>:23:                                     ; preds = %17
  %24 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !12630
  %25 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %24, i32 0, i32 0, !dbg !12632
  %26 = load i64, i64* %25, align 8, !dbg !12632
  %27 = load i32, i32* %4, align 4, !dbg !12633
  %28 = call i32 @ewmh_move_to_desktop(i64 %26, i32 %27), !dbg !12634
  %29 = load i32, i32* %4, align 4, !dbg !12635
  %30 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !12636
  %31 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %30, i32 0, i32 9, !dbg !12637
  store i32 %29, i32* %31, align 4, !dbg !12638
  br label %32, !dbg !12639

; <label>:32:                                     ; preds = %23, %17
  br label %33, !dbg !12640

; <label>:33:                                     ; preds = %32, %16
  %34 = load %struct._seamless_window*, %struct._seamless_window** %5, align 8, !dbg !12641
  %35 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %34, i32 0, i32 20, !dbg !12643
  %36 = load %struct._seamless_window*, %struct._seamless_window** %35, align 8, !dbg !12643
  store %struct._seamless_window* %36, %struct._seamless_window** %5, align 8, !dbg !12644
  br label %7, !dbg !12645, !llvm.loop !12646

; <label>:37:                                     ; preds = %7
  ret void, !dbg !12648
}

declare void @rdp_send_suppress_output_pdu(i32) #2

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #4

declare i32 @XRRUpdateConfiguration(%union._XEvent*) #2

declare i32 @XSync(%struct._XDisplay*, i32) #2

declare void @utils_apply_session_size_limitations(i32*, i32*) #2

; Function Attrs: nounwind uwtable
define internal void @sw_handle_restack(%struct._seamless_window*) #0 !dbg !12649 {
  %2 = alloca %struct._seamless_window*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct._seamless_window*, align 8
  store %struct._seamless_window* %0, %struct._seamless_window** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %2, metadata !12650, metadata !416), !dbg !12651
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12652, metadata !416), !dbg !12653
  call void @llvm.dbg.declare(metadata i64* %4, metadata !12654, metadata !416), !dbg !12655
  call void @llvm.dbg.declare(metadata i64* %5, metadata !12656, metadata !416), !dbg !12657
  call void @llvm.dbg.declare(metadata i64** %6, metadata !12658, metadata !416), !dbg !12659
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12660, metadata !416), !dbg !12661
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12662, metadata !416), !dbg !12663
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %9, metadata !12664, metadata !416), !dbg !12665
  %10 = load %struct._XDisplay*, %struct._XDisplay** @g_display, align 8, !dbg !12666
  %11 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !12667
  %12 = getelementptr inbounds %struct.Screen, %struct.Screen* %11, i32 0, i32 2, !dbg !12668
  %13 = load i64, i64* %12, align 8, !dbg !12668
  %14 = call i32 @XQueryTree(%struct._XDisplay* %10, i64 %13, i64* %4, i64* %5, i64** %6, i32* %7), !dbg !12669
  store i32 %14, i32* %3, align 4, !dbg !12670
  %15 = load i32, i32* %3, align 4, !dbg !12671
  %16 = icmp ne i32 %15, 0, !dbg !12671
  br i1 %16, label %17, label %20, !dbg !12673

; <label>:17:                                     ; preds = %1
  %18 = load i32, i32* %7, align 4, !dbg !12674
  %19 = icmp ne i32 %18, 0, !dbg !12674
  br i1 %19, label %21, label %20, !dbg !12676

; <label>:20:                                     ; preds = %17, %1
  br label %108, !dbg !12677

; <label>:21:                                     ; preds = %17
  store %struct._seamless_window* null, %struct._seamless_window** %9, align 8, !dbg !12678
  store i32 0, i32* %8, align 4, !dbg !12679
  br label %22, !dbg !12680

; <label>:22:                                     ; preds = %39, %21
  %23 = load i32, i32* %8, align 4, !dbg !12681
  %24 = zext i32 %23 to i64, !dbg !12683
  %25 = load i64*, i64** %6, align 8, !dbg !12683
  %26 = getelementptr inbounds i64, i64* %25, i64 %24, !dbg !12683
  %27 = load i64, i64* %26, align 8, !dbg !12683
  %28 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !12684
  %29 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %28, i32 0, i32 0, !dbg !12685
  %30 = load i64, i64* %29, align 8, !dbg !12685
  %31 = icmp ne i64 %27, %30, !dbg !12686
  br i1 %31, label %32, label %40, !dbg !12687

; <label>:32:                                     ; preds = %22
  %33 = load i32, i32* %8, align 4, !dbg !12688
  %34 = add i32 %33, 1, !dbg !12688
  store i32 %34, i32* %8, align 4, !dbg !12688
  %35 = load i32, i32* %8, align 4, !dbg !12690
  %36 = load i32, i32* %7, align 4, !dbg !12692
  %37 = icmp uge i32 %35, %36, !dbg !12693
  br i1 %37, label %38, label %39, !dbg !12694

; <label>:38:                                     ; preds = %32
  br label %104, !dbg !12695

; <label>:39:                                     ; preds = %32
  br label %22, !dbg !12696, !llvm.loop !12698

; <label>:40:                                     ; preds = %22
  %41 = load i32, i32* %8, align 4, !dbg !12699
  %42 = add i32 %41, 1, !dbg !12699
  store i32 %42, i32* %8, align 4, !dbg !12699
  br label %43, !dbg !12701

; <label>:43:                                     ; preds = %58, %40
  %44 = load i32, i32* %8, align 4, !dbg !12702
  %45 = load i32, i32* %7, align 4, !dbg !12705
  %46 = icmp ult i32 %44, %45, !dbg !12706
  br i1 %46, label %47, label %61, !dbg !12707

; <label>:47:                                     ; preds = %43
  %48 = load i32, i32* %8, align 4, !dbg !12708
  %49 = zext i32 %48 to i64, !dbg !12710
  %50 = load i64*, i64** %6, align 8, !dbg !12710
  %51 = getelementptr inbounds i64, i64* %50, i64 %49, !dbg !12710
  %52 = load i64, i64* %51, align 8, !dbg !12710
  %53 = call %struct._seamless_window* @sw_get_window_by_wnd(i64 %52), !dbg !12711
  store %struct._seamless_window* %53, %struct._seamless_window** %9, align 8, !dbg !12712
  %54 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !12713
  %55 = icmp ne %struct._seamless_window* %54, null, !dbg !12713
  br i1 %55, label %56, label %57, !dbg !12715

; <label>:56:                                     ; preds = %47
  br label %61, !dbg !12716

; <label>:57:                                     ; preds = %47
  br label %58, !dbg !12717

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* %8, align 4, !dbg !12718
  %60 = add i32 %59, 1, !dbg !12718
  store i32 %60, i32* %8, align 4, !dbg !12718
  br label %43, !dbg !12720, !llvm.loop !12721

; <label>:61:                                     ; preds = %56, %43
  %62 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !12723
  %63 = icmp ne %struct._seamless_window* %62, null, !dbg !12723
  br i1 %63, label %70, label %64, !dbg !12725

; <label>:64:                                     ; preds = %61
  %65 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !12726
  %66 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %65, i32 0, i32 2, !dbg !12728
  %67 = load i64, i64* %66, align 8, !dbg !12728
  %68 = icmp ne i64 %67, 0, !dbg !12726
  br i1 %68, label %70, label %69, !dbg !12729

; <label>:69:                                     ; preds = %64
  br label %104, !dbg !12730

; <label>:70:                                     ; preds = %64, %61
  %71 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !12731
  %72 = icmp ne %struct._seamless_window* %71, null, !dbg !12731
  br i1 %72, label %73, label %82, !dbg !12733

; <label>:73:                                     ; preds = %70
  %74 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !12734
  %75 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %74, i32 0, i32 1, !dbg !12736
  %76 = load i64, i64* %75, align 8, !dbg !12736
  %77 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !12737
  %78 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %77, i32 0, i32 2, !dbg !12738
  %79 = load i64, i64* %78, align 8, !dbg !12738
  %80 = icmp eq i64 %76, %79, !dbg !12739
  br i1 %80, label %81, label %82, !dbg !12740

; <label>:81:                                     ; preds = %73
  br label %104, !dbg !12741

; <label>:82:                                     ; preds = %73, %70
  %83 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !12742
  %84 = icmp ne %struct._seamless_window* %83, null, !dbg !12742
  br i1 %84, label %85, label %97, !dbg !12744

; <label>:85:                                     ; preds = %82
  %86 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !12745
  %87 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %86, i32 0, i32 1, !dbg !12747
  %88 = load i64, i64* %87, align 8, !dbg !12747
  %89 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !12748
  %90 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %89, i32 0, i32 1, !dbg !12749
  %91 = load i64, i64* %90, align 8, !dbg !12749
  %92 = call i32 @seamless_send_zchange(i64 %88, i64 %91, i64 0), !dbg !12750
  %93 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !12751
  %94 = load %struct._seamless_window*, %struct._seamless_window** %9, align 8, !dbg !12752
  %95 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %94, i32 0, i32 1, !dbg !12753
  %96 = load i64, i64* %95, align 8, !dbg !12753
  call void @sw_restack_window(%struct._seamless_window* %93, i64 %96), !dbg !12754
  br label %103, !dbg !12755

; <label>:97:                                     ; preds = %82
  %98 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !12756
  %99 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %98, i32 0, i32 1, !dbg !12758
  %100 = load i64, i64* %99, align 8, !dbg !12758
  %101 = call i32 @seamless_send_zchange(i64 %100, i64 0, i64 0), !dbg !12759
  %102 = load %struct._seamless_window*, %struct._seamless_window** %2, align 8, !dbg !12760
  call void @sw_restack_window(%struct._seamless_window* %102, i64 0), !dbg !12761
  br label %103

; <label>:103:                                    ; preds = %97, %85
  br label %104, !dbg !12762

; <label>:104:                                    ; preds = %103, %81, %69, %38
  %105 = load i64*, i64** %6, align 8, !dbg !12764
  %106 = bitcast i64* %105 to i8*, !dbg !12764
  %107 = call i32 @XFree(i8* %106), !dbg !12765
  br label %108, !dbg !12766

; <label>:108:                                    ; preds = %104, %20
  ret void, !dbg !12767
}

declare zeroext i16 @xkeymap_translate_button(i32, i16*) #2

declare i32 @ewmh_move_to_desktop(i64, i32) #2

declare i32 @seamless_send_zchange(i64, i64, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @process_pending_resize() #0 !dbg !12768 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !12769, metadata !416), !dbg !12770
  call void @llvm.dbg.declare(metadata %struct.timeval* %3, metadata !12771, metadata !416), !dbg !12772
  %4 = call i32 @gettimeofday(%struct.timeval* %3, %struct.timezone* null) #9, !dbg !12773
  %5 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.timeval* @g_resize_timer to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !12774
  %6 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.timeval* @g_resize_timer to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !12774
  %7 = bitcast %struct.timeval* %3 to { i64, i64 }*, !dbg !12774
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !12774
  %9 = load i64, i64* %8, align 8, !dbg !12774
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !12774
  %11 = load i64, i64* %10, align 8, !dbg !12774
  %12 = call i32 @time_difference_in_ms(i64 %5, i64 %6, i64 %9, i64 %11), !dbg !12774
  %13 = icmp ule i32 %12, 500, !dbg !12776
  br i1 %13, label %14, label %15, !dbg !12777

; <label>:14:                                     ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !12778
  br label %73, !dbg !12778

; <label>:15:                                     ; preds = %0
  %16 = call i32 @timeval_is_set(%struct.timeval* @g_pending_resize_defer_timer), !dbg !12779
  %17 = icmp ne i32 %16, 0, !dbg !12779
  br i1 %17, label %18, label %29, !dbg !12781

; <label>:18:                                     ; preds = %15
  %19 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.timeval* @g_pending_resize_defer_timer to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !12782
  %20 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.timeval* @g_pending_resize_defer_timer to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !12782
  %21 = bitcast %struct.timeval* %3 to { i64, i64 }*, !dbg !12782
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 0, !dbg !12782
  %23 = load i64, i64* %22, align 8, !dbg !12782
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i32 0, i32 1, !dbg !12782
  %25 = load i64, i64* %24, align 8, !dbg !12782
  %26 = call i32 @time_difference_in_ms(i64 %19, i64 %20, i64 %23, i64 %25), !dbg !12782
  %27 = icmp uge i32 %26, 2000, !dbg !12783
  br i1 %27, label %28, label %29, !dbg !12784

; <label>:28:                                     ; preds = %18
  store i64 0, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @g_pending_resize_defer_timer, i32 0, i32 1), align 8, !dbg !12786
  store i64 0, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @g_pending_resize_defer_timer, i32 0, i32 0), align 8, !dbg !12788
  store i32 0, i32* @g_pending_resize_defer, align 4, !dbg !12789
  br label %29, !dbg !12790

; <label>:29:                                     ; preds = %28, %18, %15
  %30 = load i32, i32* @g_pending_resize_defer, align 4, !dbg !12791
  %31 = icmp eq i32 %30, 1, !dbg !12793
  br i1 %31, label %32, label %33, !dbg !12794

; <label>:32:                                     ; preds = %29
  store i32 0, i32* %1, align 4, !dbg !12795
  br label %73, !dbg !12795

; <label>:33:                                     ; preds = %29
  %34 = load i32, i32* @g_fullscreen, align 4, !dbg !12796
  %35 = icmp ne i32 %34, 0, !dbg !12796
  br i1 %35, label %39, label %36, !dbg !12798

; <label>:36:                                     ; preds = %33
  %37 = load i32, i32* @g_seamless_rdp, align 4, !dbg !12799
  %38 = icmp ne i32 %37, 0, !dbg !12799
  br i1 %38, label %39, label %50, !dbg !12801

; <label>:39:                                     ; preds = %36, %33
  %40 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !12802
  %41 = getelementptr inbounds %struct.Screen, %struct.Screen* %40, i32 0, i32 3, !dbg !12804
  %42 = load i32, i32* %41, align 8, !dbg !12804
  store i32 %42, i32* @g_requested_session_width, align 4, !dbg !12805
  %43 = load %struct.Screen*, %struct.Screen** @g_screen, align 8, !dbg !12806
  %44 = getelementptr inbounds %struct.Screen, %struct.Screen* %43, i32 0, i32 4, !dbg !12807
  %45 = load i32, i32* %44, align 4, !dbg !12807
  store i32 %45, i32* @g_requested_session_height, align 4, !dbg !12808
  %46 = load i32, i32* @g_window_size_type, align 4, !dbg !12809
  %47 = icmp eq i32 %46, 1, !dbg !12811
  br i1 %47, label %48, label %49, !dbg !12812

; <label>:48:                                     ; preds = %39
  br label %49, !dbg !12813

; <label>:49:                                     ; preds = %48, %39
  br label %53, !dbg !12815

; <label>:50:                                     ; preds = %36
  %51 = load i32, i32* @g_window_width, align 4, !dbg !12816
  store i32 %51, i32* @g_requested_session_width, align 4, !dbg !12818
  %52 = load i32, i32* @g_window_height, align 4, !dbg !12819
  store i32 %52, i32* @g_requested_session_height, align 4, !dbg !12820
  br label %53

; <label>:53:                                     ; preds = %50, %49
  %54 = call i32 (...) @rdpedisp_is_available(), !dbg !12821
  %55 = icmp eq i32 %54, 0, !dbg !12823
  br i1 %55, label %56, label %59, !dbg !12824

; <label>:56:                                     ; preds = %53
  %57 = load i32, i32* @g_requested_session_width, align 4, !dbg !12825
  %58 = load i32, i32* @g_requested_session_height, align 4, !dbg !12827
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.64, i32 0, i32 0), i32 %57, i32 %58), !dbg !12828
  store i32 1, i32* %1, align 4, !dbg !12829
  br label %73, !dbg !12829

; <label>:59:                                     ; preds = %53
  %60 = call i64 @time(i64* null) #9, !dbg !12830
  store i64 %60, i64* %2, align 8, !dbg !12832
  %61 = load i64, i64* %2, align 8, !dbg !12833
  %62 = load i64, i64* @g_wait_for_deactivate_ts, align 8, !dbg !12835
  %63 = sub nsw i64 %61, %62, !dbg !12836
  %64 = icmp sle i64 %63, 5, !dbg !12837
  br i1 %64, label %65, label %66, !dbg !12838

; <label>:65:                                     ; preds = %59
  store i32 0, i32* %1, align 4, !dbg !12839
  br label %73, !dbg !12839

; <label>:66:                                     ; preds = %59
  %67 = load i32, i32* @g_requested_session_width, align 4, !dbg !12840
  %68 = load i32, i32* @g_requested_session_height, align 4, !dbg !12841
  call void (i32, i32, i8*, ...) @logger(i32 0, i32 1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.65, i32 0, i32 0), i32 %67, i32 %68), !dbg !12842
  %69 = load i32, i32* @g_requested_session_width, align 4, !dbg !12843
  %70 = load i32, i32* @g_requested_session_height, align 4, !dbg !12844
  call void @rdpedisp_set_session_size(i32 %69, i32 %70), !dbg !12845
  store i32 0, i32* @g_pending_resize, align 4, !dbg !12846
  %71 = load i64, i64* %2, align 8, !dbg !12847
  store i64 %71, i64* @g_wait_for_deactivate_ts, align 8, !dbg !12848
  br label %72

; <label>:72:                                     ; preds = %66
  store i32 0, i32* %1, align 4, !dbg !12849
  br label %73, !dbg !12849

; <label>:73:                                     ; preds = %72, %65, %56, %32, %14
  %74 = load i32, i32* %1, align 4, !dbg !12850
  ret i32 %74, !dbg !12850
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @time_difference_in_ms(i64, i64, i64, i64) #5 !dbg !12851 {
  %5 = alloca %struct.timeval, align 8
  %6 = alloca %struct.timeval, align 8
  %7 = alloca i32, align 4
  %8 = bitcast %struct.timeval* %5 to { i64, i64 }*
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0
  store i64 %0, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1
  store i64 %1, i64* %10, align 8
  %11 = bitcast %struct.timeval* %6 to { i64, i64 }*
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1
  store i64 %3, i64* %13, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval* %5, metadata !12854, metadata !416), !dbg !12855
  call void @llvm.dbg.declare(metadata %struct.timeval* %6, metadata !12856, metadata !416), !dbg !12857
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12858, metadata !416), !dbg !12859
  store i32 0, i32* %7, align 4, !dbg !12860
  %14 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i32 0, i32 0, !dbg !12861
  %15 = load i64, i64* %14, align 8, !dbg !12861
  %16 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i32 0, i32 0, !dbg !12862
  %17 = load i64, i64* %16, align 8, !dbg !12862
  %18 = sub nsw i64 %15, %17, !dbg !12863
  %19 = mul nsw i64 %18, 1000, !dbg !12864
  %20 = load i32, i32* %7, align 4, !dbg !12865
  %21 = zext i32 %20 to i64, !dbg !12865
  %22 = add nsw i64 %21, %19, !dbg !12865
  %23 = trunc i64 %22 to i32, !dbg !12865
  store i32 %23, i32* %7, align 4, !dbg !12865
  %24 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i32 0, i32 1, !dbg !12866
  %25 = load i64, i64* %24, align 8, !dbg !12866
  %26 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i32 0, i32 1, !dbg !12867
  %27 = load i64, i64* %26, align 8, !dbg !12867
  %28 = sub nsw i64 %25, %27, !dbg !12868
  %29 = sdiv i64 %28, 1000, !dbg !12869
  %30 = load i32, i32* %7, align 4, !dbg !12870
  %31 = zext i32 %30 to i64, !dbg !12870
  %32 = add nsw i64 %31, %29, !dbg !12870
  %33 = trunc i64 %32 to i32, !dbg !12870
  store i32 %33, i32* %7, align 4, !dbg !12870
  %34 = load i32, i32* %7, align 4, !dbg !12871
  ret i32 %34, !dbg !12872
}

; Function Attrs: nounwind uwtable
define internal i32 @timeval_is_set(%struct.timeval*) #0 !dbg !12873 {
  %2 = alloca %struct.timeval*, align 8
  store %struct.timeval* %0, %struct.timeval** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %2, metadata !12876, metadata !416), !dbg !12877
  %3 = load %struct.timeval*, %struct.timeval** %2, align 8, !dbg !12878
  %4 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 0, !dbg !12879
  %5 = load i64, i64* %4, align 8, !dbg !12879
  %6 = icmp eq i64 %5, 0, !dbg !12880
  br i1 %6, label %7, label %12, !dbg !12881

; <label>:7:                                      ; preds = %1
  %8 = load %struct.timeval*, %struct.timeval** %2, align 8, !dbg !12882
  %9 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 1, !dbg !12884
  %10 = load i64, i64* %9, align 8, !dbg !12884
  %11 = icmp eq i64 %10, 0, !dbg !12885
  br label %12

; <label>:12:                                     ; preds = %7, %1
  %13 = phi i1 [ false, %1 ], [ %11, %7 ]
  %14 = select i1 %13, i32 0, i32 1, !dbg !12886
  ret i32 %14, !dbg !12888
}

declare i32 @rdpedisp_is_available(...) #2

declare void @rdpedisp_set_session_size(i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @sw_check_timers() #0 !dbg !12889 {
  %1 = alloca %struct._seamless_window*, align 8
  %2 = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct._seamless_window** %1, metadata !12890, metadata !416), !dbg !12891
  call void @llvm.dbg.declare(metadata %struct.timeval* %2, metadata !12892, metadata !416), !dbg !12893
  %3 = call i32 @gettimeofday(%struct.timeval* %2, %struct.timezone* null) #9, !dbg !12894
  %4 = load %struct._seamless_window*, %struct._seamless_window** @g_seamless_windows, align 8, !dbg !12895
  store %struct._seamless_window* %4, %struct._seamless_window** %1, align 8, !dbg !12897
  br label %5, !dbg !12898

; <label>:5:                                      ; preds = %60, %0
  %6 = load %struct._seamless_window*, %struct._seamless_window** %1, align 8, !dbg !12899
  %7 = icmp ne %struct._seamless_window* %6, null, !dbg !12902
  br i1 %7, label %8, label %64, !dbg !12902

; <label>:8:                                      ; preds = %5
  %9 = load %struct._seamless_window*, %struct._seamless_window** %1, align 8, !dbg !12903
  %10 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %9, i32 0, i32 10, !dbg !12906
  %11 = load %struct.timeval*, %struct.timeval** %10, align 8, !dbg !12906
  %12 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 0, !dbg !12907
  %13 = load i64, i64* %12, align 8, !dbg !12907
  %14 = icmp ne i64 %13, 0, !dbg !12908
  br i1 %14, label %22, label %15, !dbg !12909

; <label>:15:                                     ; preds = %8
  %16 = load %struct._seamless_window*, %struct._seamless_window** %1, align 8, !dbg !12910
  %17 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %16, i32 0, i32 10, !dbg !12912
  %18 = load %struct.timeval*, %struct.timeval** %17, align 8, !dbg !12912
  %19 = getelementptr inbounds %struct.timeval, %struct.timeval* %18, i32 0, i32 1, !dbg !12913
  %20 = load i64, i64* %19, align 8, !dbg !12913
  %21 = icmp ne i64 %20, 0, !dbg !12914
  br i1 %21, label %22, label %59, !dbg !12915

; <label>:22:                                     ; preds = %15, %8
  %23 = load %struct._seamless_window*, %struct._seamless_window** %1, align 8, !dbg !12916
  %24 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %23, i32 0, i32 10, !dbg !12918
  %25 = load %struct.timeval*, %struct.timeval** %24, align 8, !dbg !12918
  %26 = getelementptr inbounds %struct.timeval, %struct.timeval* %25, i32 0, i32 0, !dbg !12919
  %27 = load i64, i64* %26, align 8, !dbg !12919
  %28 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i32 0, i32 0, !dbg !12919
  %29 = load i64, i64* %28, align 8, !dbg !12919
  %30 = icmp eq i64 %27, %29, !dbg !12920
  br i1 %30, label %31, label %40, !dbg !12921

; <label>:31:                                     ; preds = %22
  %32 = load %struct._seamless_window*, %struct._seamless_window** %1, align 8, !dbg !12922
  %33 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %32, i32 0, i32 10, !dbg !12924
  %34 = load %struct.timeval*, %struct.timeval** %33, align 8, !dbg !12924
  %35 = getelementptr inbounds %struct.timeval, %struct.timeval* %34, i32 0, i32 1, !dbg !12925
  %36 = load i64, i64* %35, align 8, !dbg !12925
  %37 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i32 0, i32 1, !dbg !12925
  %38 = load i64, i64* %37, align 8, !dbg !12925
  %39 = icmp slt i64 %36, %38, !dbg !12922
  br i1 %39, label %49, label %59, !dbg !12926

; <label>:40:                                     ; preds = %22
  %41 = load %struct._seamless_window*, %struct._seamless_window** %1, align 8, !dbg !12927
  %42 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %41, i32 0, i32 10, !dbg !12929
  %43 = load %struct.timeval*, %struct.timeval** %42, align 8, !dbg !12929
  %44 = getelementptr inbounds %struct.timeval, %struct.timeval* %43, i32 0, i32 0, !dbg !12930
  %45 = load i64, i64* %44, align 8, !dbg !12930
  %46 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i32 0, i32 0, !dbg !12930
  %47 = load i64, i64* %46, align 8, !dbg !12930
  %48 = icmp slt i64 %45, %47, !dbg !12927
  br i1 %48, label %49, label %59, !dbg !12931

; <label>:49:                                     ; preds = %40, %31
  %50 = load %struct._seamless_window*, %struct._seamless_window** %1, align 8, !dbg !12932
  %51 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %50, i32 0, i32 10, !dbg !12934
  %52 = load %struct.timeval*, %struct.timeval** %51, align 8, !dbg !12934
  %53 = getelementptr inbounds %struct.timeval, %struct.timeval* %52, i32 0, i32 1, !dbg !12935
  store i64 0, i64* %53, align 8, !dbg !12936
  %54 = load %struct._seamless_window*, %struct._seamless_window** %1, align 8, !dbg !12932
  %55 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %54, i32 0, i32 10, !dbg !12934
  %56 = load %struct.timeval*, %struct.timeval** %55, align 8, !dbg !12934
  %57 = getelementptr inbounds %struct.timeval, %struct.timeval* %56, i32 0, i32 0, !dbg !12935
  store i64 0, i64* %57, align 8, !dbg !12937
  %58 = load %struct._seamless_window*, %struct._seamless_window** %1, align 8, !dbg !12938
  call void @sw_update_position(%struct._seamless_window* %58), !dbg !12939
  br label %59, !dbg !12940

; <label>:59:                                     ; preds = %49, %40, %31, %15
  br label %60, !dbg !12941

; <label>:60:                                     ; preds = %59
  %61 = load %struct._seamless_window*, %struct._seamless_window** %1, align 8, !dbg !12942
  %62 = getelementptr inbounds %struct._seamless_window, %struct._seamless_window* %61, i32 0, i32 20, !dbg !12944
  %63 = load %struct._seamless_window*, %struct._seamless_window** %62, align 8, !dbg !12944
  store %struct._seamless_window* %63, %struct._seamless_window** %1, align 8, !dbg !12945
  br label %5, !dbg !12946, !llvm.loop !12947

; <label>:64:                                     ; preds = %5
  ret void, !dbg !12949
}

declare void @rdpsnd_add_fds(i32*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) #2

declare void @rdpdr_add_fds(i32*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*, i32*) #2

declare void @seamless_select_timeout(%struct.timeval*) #2

declare void @ctrl_add_fds(i32*, %struct.fd_set*) #2

declare i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) #2

; Function Attrs: nounwind
declare i8* @strerror(i32) #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

declare void @rdpsnd_check_fds(%struct.fd_set*, %struct.fd_set*) #2

declare void @rdpdr_check_fds(%struct.fd_set*, %struct.fd_set*, i32) #2

declare void @ctrl_check_fds(%struct.fd_set*, %struct.fd_set*) #2

; Function Attrs: nounwind uwtable
define internal void @translate24to32(i8*, i8*, i8*) #0 !dbg !12950 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.PixelColour, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !12955, metadata !416), !dbg !12956
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12957, metadata !416), !dbg !12958
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12959, metadata !416), !dbg !12960
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12961, metadata !416), !dbg !12962
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12963, metadata !416), !dbg !12964
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %9, metadata !12965, metadata !416), !dbg !12966
  %10 = load i32, i32* @g_compatible_arch, align 4, !dbg !12967
  %11 = icmp ne i32 %10, 0, !dbg !12967
  br i1 %11, label %12, label %170, !dbg !12969

; <label>:12:                                     ; preds = %3
  br label %13, !dbg !12970

; <label>:13:                                     ; preds = %18, %12
  %14 = load i8*, i8** %5, align 8, !dbg !12973
  %15 = load i8*, i8** %6, align 8, !dbg !12975
  %16 = getelementptr inbounds i8, i8* %15, i64 -32, !dbg !12976
  %17 = icmp ule i8* %14, %16, !dbg !12977
  br i1 %17, label %18, label %147, !dbg !12978

; <label>:18:                                     ; preds = %13
  %19 = load i8*, i8** %4, align 8, !dbg !12979
  %20 = bitcast i8* %19 to i16*, !dbg !12982
  %21 = load i16, i16* %20, align 2, !dbg !12982
  %22 = zext i16 %21 to i32, !dbg !12982
  %23 = load i8*, i8** %4, align 8, !dbg !12983
  %24 = getelementptr inbounds i8, i8* %23, i64 2, !dbg !12984
  %25 = load i8, i8* %24, align 1, !dbg !12985
  %26 = zext i8 %25 to i32, !dbg !12985
  %27 = shl i32 %26, 16, !dbg !12986
  %28 = add nsw i32 %22, %27, !dbg !12987
  %29 = load i8*, i8** %5, align 8, !dbg !12988
  %30 = bitcast i8* %29 to i32*, !dbg !12989
  store i32 %28, i32* %30, align 4, !dbg !12990
  %31 = load i8*, i8** %5, align 8, !dbg !12991
  %32 = getelementptr inbounds i8, i8* %31, i64 4, !dbg !12991
  store i8* %32, i8** %5, align 8, !dbg !12991
  %33 = load i8*, i8** %4, align 8, !dbg !12992
  %34 = getelementptr inbounds i8, i8* %33, i64 3, !dbg !12992
  store i8* %34, i8** %4, align 8, !dbg !12992
  %35 = load i8*, i8** %4, align 8, !dbg !12993
  %36 = bitcast i8* %35 to i16*, !dbg !12994
  %37 = load i16, i16* %36, align 2, !dbg !12994
  %38 = zext i16 %37 to i32, !dbg !12994
  %39 = load i8*, i8** %4, align 8, !dbg !12995
  %40 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !12996
  %41 = load i8, i8* %40, align 1, !dbg !12997
  %42 = zext i8 %41 to i32, !dbg !12997
  %43 = shl i32 %42, 16, !dbg !12998
  %44 = add nsw i32 %38, %43, !dbg !12999
  %45 = load i8*, i8** %5, align 8, !dbg !13000
  %46 = bitcast i8* %45 to i32*, !dbg !13001
  store i32 %44, i32* %46, align 4, !dbg !13002
  %47 = load i8*, i8** %5, align 8, !dbg !13003
  %48 = getelementptr inbounds i8, i8* %47, i64 4, !dbg !13003
  store i8* %48, i8** %5, align 8, !dbg !13003
  %49 = load i8*, i8** %4, align 8, !dbg !13004
  %50 = getelementptr inbounds i8, i8* %49, i64 3, !dbg !13004
  store i8* %50, i8** %4, align 8, !dbg !13004
  %51 = load i8*, i8** %4, align 8, !dbg !13005
  %52 = bitcast i8* %51 to i16*, !dbg !13006
  %53 = load i16, i16* %52, align 2, !dbg !13006
  %54 = zext i16 %53 to i32, !dbg !13006
  %55 = load i8*, i8** %4, align 8, !dbg !13007
  %56 = getelementptr inbounds i8, i8* %55, i64 2, !dbg !13008
  %57 = load i8, i8* %56, align 1, !dbg !13009
  %58 = zext i8 %57 to i32, !dbg !13009
  %59 = shl i32 %58, 16, !dbg !13010
  %60 = add nsw i32 %54, %59, !dbg !13011
  %61 = load i8*, i8** %5, align 8, !dbg !13012
  %62 = bitcast i8* %61 to i32*, !dbg !13013
  store i32 %60, i32* %62, align 4, !dbg !13014
  %63 = load i8*, i8** %5, align 8, !dbg !13015
  %64 = getelementptr inbounds i8, i8* %63, i64 4, !dbg !13015
  store i8* %64, i8** %5, align 8, !dbg !13015
  %65 = load i8*, i8** %4, align 8, !dbg !13016
  %66 = getelementptr inbounds i8, i8* %65, i64 3, !dbg !13016
  store i8* %66, i8** %4, align 8, !dbg !13016
  %67 = load i8*, i8** %4, align 8, !dbg !13017
  %68 = bitcast i8* %67 to i16*, !dbg !13018
  %69 = load i16, i16* %68, align 2, !dbg !13018
  %70 = zext i16 %69 to i32, !dbg !13018
  %71 = load i8*, i8** %4, align 8, !dbg !13019
  %72 = getelementptr inbounds i8, i8* %71, i64 2, !dbg !13020
  %73 = load i8, i8* %72, align 1, !dbg !13021
  %74 = zext i8 %73 to i32, !dbg !13021
  %75 = shl i32 %74, 16, !dbg !13022
  %76 = add nsw i32 %70, %75, !dbg !13023
  %77 = load i8*, i8** %5, align 8, !dbg !13024
  %78 = bitcast i8* %77 to i32*, !dbg !13025
  store i32 %76, i32* %78, align 4, !dbg !13026
  %79 = load i8*, i8** %5, align 8, !dbg !13027
  %80 = getelementptr inbounds i8, i8* %79, i64 4, !dbg !13027
  store i8* %80, i8** %5, align 8, !dbg !13027
  %81 = load i8*, i8** %4, align 8, !dbg !13028
  %82 = getelementptr inbounds i8, i8* %81, i64 3, !dbg !13028
  store i8* %82, i8** %4, align 8, !dbg !13028
  %83 = load i8*, i8** %4, align 8, !dbg !13029
  %84 = bitcast i8* %83 to i16*, !dbg !13030
  %85 = load i16, i16* %84, align 2, !dbg !13030
  %86 = zext i16 %85 to i32, !dbg !13030
  %87 = load i8*, i8** %4, align 8, !dbg !13031
  %88 = getelementptr inbounds i8, i8* %87, i64 2, !dbg !13032
  %89 = load i8, i8* %88, align 1, !dbg !13033
  %90 = zext i8 %89 to i32, !dbg !13033
  %91 = shl i32 %90, 16, !dbg !13034
  %92 = add nsw i32 %86, %91, !dbg !13035
  %93 = load i8*, i8** %5, align 8, !dbg !13036
  %94 = bitcast i8* %93 to i32*, !dbg !13037
  store i32 %92, i32* %94, align 4, !dbg !13038
  %95 = load i8*, i8** %5, align 8, !dbg !13039
  %96 = getelementptr inbounds i8, i8* %95, i64 4, !dbg !13039
  store i8* %96, i8** %5, align 8, !dbg !13039
  %97 = load i8*, i8** %4, align 8, !dbg !13040
  %98 = getelementptr inbounds i8, i8* %97, i64 3, !dbg !13040
  store i8* %98, i8** %4, align 8, !dbg !13040
  %99 = load i8*, i8** %4, align 8, !dbg !13041
  %100 = bitcast i8* %99 to i16*, !dbg !13042
  %101 = load i16, i16* %100, align 2, !dbg !13042
  %102 = zext i16 %101 to i32, !dbg !13042
  %103 = load i8*, i8** %4, align 8, !dbg !13043
  %104 = getelementptr inbounds i8, i8* %103, i64 2, !dbg !13044
  %105 = load i8, i8* %104, align 1, !dbg !13045
  %106 = zext i8 %105 to i32, !dbg !13045
  %107 = shl i32 %106, 16, !dbg !13046
  %108 = add nsw i32 %102, %107, !dbg !13047
  %109 = load i8*, i8** %5, align 8, !dbg !13048
  %110 = bitcast i8* %109 to i32*, !dbg !13049
  store i32 %108, i32* %110, align 4, !dbg !13050
  %111 = load i8*, i8** %5, align 8, !dbg !13051
  %112 = getelementptr inbounds i8, i8* %111, i64 4, !dbg !13051
  store i8* %112, i8** %5, align 8, !dbg !13051
  %113 = load i8*, i8** %4, align 8, !dbg !13052
  %114 = getelementptr inbounds i8, i8* %113, i64 3, !dbg !13052
  store i8* %114, i8** %4, align 8, !dbg !13052
  %115 = load i8*, i8** %4, align 8, !dbg !13053
  %116 = bitcast i8* %115 to i16*, !dbg !13054
  %117 = load i16, i16* %116, align 2, !dbg !13054
  %118 = zext i16 %117 to i32, !dbg !13054
  %119 = load i8*, i8** %4, align 8, !dbg !13055
  %120 = getelementptr inbounds i8, i8* %119, i64 2, !dbg !13056
  %121 = load i8, i8* %120, align 1, !dbg !13057
  %122 = zext i8 %121 to i32, !dbg !13057
  %123 = shl i32 %122, 16, !dbg !13058
  %124 = add nsw i32 %118, %123, !dbg !13059
  %125 = load i8*, i8** %5, align 8, !dbg !13060
  %126 = bitcast i8* %125 to i32*, !dbg !13061
  store i32 %124, i32* %126, align 4, !dbg !13062
  %127 = load i8*, i8** %5, align 8, !dbg !13063
  %128 = getelementptr inbounds i8, i8* %127, i64 4, !dbg !13063
  store i8* %128, i8** %5, align 8, !dbg !13063
  %129 = load i8*, i8** %4, align 8, !dbg !13064
  %130 = getelementptr inbounds i8, i8* %129, i64 3, !dbg !13064
  store i8* %130, i8** %4, align 8, !dbg !13064
  %131 = load i8*, i8** %4, align 8, !dbg !13065
  %132 = bitcast i8* %131 to i16*, !dbg !13066
  %133 = load i16, i16* %132, align 2, !dbg !13066
  %134 = zext i16 %133 to i32, !dbg !13066
  %135 = load i8*, i8** %4, align 8, !dbg !13067
  %136 = getelementptr inbounds i8, i8* %135, i64 2, !dbg !13068
  %137 = load i8, i8* %136, align 1, !dbg !13069
  %138 = zext i8 %137 to i32, !dbg !13069
  %139 = shl i32 %138, 16, !dbg !13070
  %140 = add nsw i32 %134, %139, !dbg !13071
  %141 = load i8*, i8** %5, align 8, !dbg !13072
  %142 = bitcast i8* %141 to i32*, !dbg !13073
  store i32 %140, i32* %142, align 4, !dbg !13074
  %143 = load i8*, i8** %5, align 8, !dbg !13075
  %144 = getelementptr inbounds i8, i8* %143, i64 4, !dbg !13075
  store i8* %144, i8** %5, align 8, !dbg !13075
  %145 = load i8*, i8** %4, align 8, !dbg !13076
  %146 = getelementptr inbounds i8, i8* %145, i64 3, !dbg !13076
  store i8* %146, i8** %4, align 8, !dbg !13076
  br label %13, !dbg !13077, !llvm.loop !13078

; <label>:147:                                    ; preds = %13
  br label %148, !dbg !13079

; <label>:148:                                    ; preds = %152, %147
  %149 = load i8*, i8** %5, align 8, !dbg !13081
  %150 = load i8*, i8** %6, align 8, !dbg !13083
  %151 = icmp ult i8* %149, %150, !dbg !13084
  br i1 %151, label %152, label %169, !dbg !13085

; <label>:152:                                    ; preds = %148
  %153 = load i8*, i8** %4, align 8, !dbg !13086
  %154 = bitcast i8* %153 to i16*, !dbg !13089
  %155 = load i16, i16* %154, align 2, !dbg !13089
  %156 = zext i16 %155 to i32, !dbg !13089
  %157 = load i8*, i8** %4, align 8, !dbg !13090
  %158 = getelementptr inbounds i8, i8* %157, i64 2, !dbg !13091
  %159 = load i8, i8* %158, align 1, !dbg !13092
  %160 = zext i8 %159 to i32, !dbg !13092
  %161 = shl i32 %160, 16, !dbg !13093
  %162 = add nsw i32 %156, %161, !dbg !13094
  %163 = load i8*, i8** %5, align 8, !dbg !13095
  %164 = bitcast i8* %163 to i32*, !dbg !13096
  store i32 %162, i32* %164, align 4, !dbg !13097
  %165 = load i8*, i8** %5, align 8, !dbg !13098
  %166 = getelementptr inbounds i8, i8* %165, i64 4, !dbg !13098
  store i8* %166, i8** %5, align 8, !dbg !13098
  %167 = load i8*, i8** %4, align 8, !dbg !13099
  %168 = getelementptr inbounds i8, i8* %167, i64 3, !dbg !13099
  store i8* %168, i8** %4, align 8, !dbg !13099
  br label %148, !dbg !13100, !llvm.loop !13101

; <label>:169:                                    ; preds = %148
  br label %324, !dbg !13103

; <label>:170:                                    ; preds = %3
  %171 = load i32, i32* @g_xserver_be, align 4, !dbg !13104
  %172 = icmp ne i32 %171, 0, !dbg !13104
  br i1 %172, label %173, label %248, !dbg !13106

; <label>:173:                                    ; preds = %170
  br label %174, !dbg !13107

; <label>:174:                                    ; preds = %178, %173
  %175 = load i8*, i8** %5, align 8, !dbg !13109
  %176 = load i8*, i8** %6, align 8, !dbg !13111
  %177 = icmp ult i8* %175, %176, !dbg !13112
  br i1 %177, label %178, label %247, !dbg !13113

; <label>:178:                                    ; preds = %174
  %179 = load i8*, i8** %4, align 8, !dbg !13114
  %180 = getelementptr inbounds i8, i8* %179, i32 1, !dbg !13114
  store i8* %180, i8** %4, align 8, !dbg !13114
  %181 = load i8, i8* %179, align 1, !dbg !13116
  %182 = zext i8 %181 to i32, !dbg !13116
  %183 = shl i32 %182, 16, !dbg !13117
  store i32 %183, i32* %7, align 4, !dbg !13118
  %184 = load i8*, i8** %4, align 8, !dbg !13119
  %185 = getelementptr inbounds i8, i8* %184, i32 1, !dbg !13119
  store i8* %185, i8** %4, align 8, !dbg !13119
  %186 = load i8, i8* %184, align 1, !dbg !13120
  %187 = zext i8 %186 to i32, !dbg !13120
  %188 = shl i32 %187, 8, !dbg !13121
  %189 = load i32, i32* %7, align 4, !dbg !13122
  %190 = or i32 %189, %188, !dbg !13122
  store i32 %190, i32* %7, align 4, !dbg !13122
  %191 = load i8*, i8** %4, align 8, !dbg !13123
  %192 = getelementptr inbounds i8, i8* %191, i32 1, !dbg !13123
  store i8* %192, i8** %4, align 8, !dbg !13123
  %193 = load i8, i8* %191, align 1, !dbg !13124
  %194 = zext i8 %193 to i32, !dbg !13124
  %195 = load i32, i32* %7, align 4, !dbg !13125
  %196 = or i32 %195, %194, !dbg !13125
  store i32 %196, i32* %7, align 4, !dbg !13125
  %197 = load i32, i32* %7, align 4, !dbg !13126
  %198 = and i32 %197, 16711680, !dbg !13128
  %199 = lshr i32 %198, 16, !dbg !13129
  %200 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13130
  store i32 %199, i32* %200, align 4, !dbg !13131
  %201 = load i32, i32* %7, align 4, !dbg !13132
  %202 = and i32 %201, 65280, !dbg !13133
  %203 = lshr i32 %202, 8, !dbg !13134
  %204 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13135
  store i32 %203, i32* %204, align 4, !dbg !13136
  %205 = load i32, i32* %7, align 4, !dbg !13137
  %206 = and i32 %205, 255, !dbg !13138
  %207 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13139
  store i32 %206, i32* %207, align 4, !dbg !13140
  %208 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13141
  %209 = load i32, i32* %208, align 4, !dbg !13141
  %210 = load i32, i32* @g_red_shift_r, align 4, !dbg !13142
  %211 = lshr i32 %209, %210, !dbg !13143
  %212 = load i32, i32* @g_red_shift_l, align 4, !dbg !13144
  %213 = shl i32 %211, %212, !dbg !13145
  %214 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13146
  %215 = load i32, i32* %214, align 4, !dbg !13146
  %216 = load i32, i32* @g_green_shift_r, align 4, !dbg !13147
  %217 = lshr i32 %215, %216, !dbg !13148
  %218 = load i32, i32* @g_green_shift_l, align 4, !dbg !13149
  %219 = shl i32 %217, %218, !dbg !13150
  %220 = or i32 %213, %219, !dbg !13151
  %221 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13152
  %222 = load i32, i32* %221, align 4, !dbg !13152
  %223 = load i32, i32* @g_blue_shift_r, align 4, !dbg !13153
  %224 = lshr i32 %222, %223, !dbg !13154
  %225 = load i32, i32* @g_blue_shift_l, align 4, !dbg !13155
  %226 = shl i32 %224, %225, !dbg !13156
  %227 = or i32 %220, %226, !dbg !13157
  store i32 %227, i32* %8, align 4, !dbg !13158
  %228 = load i32, i32* %8, align 4, !dbg !13159
  %229 = lshr i32 %228, 24, !dbg !13161
  %230 = trunc i32 %229 to i8, !dbg !13159
  %231 = load i8*, i8** %5, align 8, !dbg !13162
  %232 = getelementptr inbounds i8, i8* %231, i32 1, !dbg !13162
  store i8* %232, i8** %5, align 8, !dbg !13162
  store i8 %230, i8* %231, align 1, !dbg !13163
  %233 = load i32, i32* %8, align 4, !dbg !13164
  %234 = lshr i32 %233, 16, !dbg !13165
  %235 = trunc i32 %234 to i8, !dbg !13164
  %236 = load i8*, i8** %5, align 8, !dbg !13166
  %237 = getelementptr inbounds i8, i8* %236, i32 1, !dbg !13166
  store i8* %237, i8** %5, align 8, !dbg !13166
  store i8 %235, i8* %236, align 1, !dbg !13167
  %238 = load i32, i32* %8, align 4, !dbg !13168
  %239 = lshr i32 %238, 8, !dbg !13169
  %240 = trunc i32 %239 to i8, !dbg !13168
  %241 = load i8*, i8** %5, align 8, !dbg !13170
  %242 = getelementptr inbounds i8, i8* %241, i32 1, !dbg !13170
  store i8* %242, i8** %5, align 8, !dbg !13170
  store i8 %240, i8* %241, align 1, !dbg !13171
  %243 = load i32, i32* %8, align 4, !dbg !13172
  %244 = trunc i32 %243 to i8, !dbg !13172
  %245 = load i8*, i8** %5, align 8, !dbg !13173
  %246 = getelementptr inbounds i8, i8* %245, i32 1, !dbg !13173
  store i8* %246, i8** %5, align 8, !dbg !13173
  store i8 %244, i8* %245, align 1, !dbg !13174
  br label %174, !dbg !13175, !llvm.loop !13177

; <label>:247:                                    ; preds = %174
  br label %323, !dbg !13178

; <label>:248:                                    ; preds = %170
  br label %249, !dbg !13179

; <label>:249:                                    ; preds = %253, %248
  %250 = load i8*, i8** %5, align 8, !dbg !13181
  %251 = load i8*, i8** %6, align 8, !dbg !13183
  %252 = icmp ult i8* %250, %251, !dbg !13184
  br i1 %252, label %253, label %322, !dbg !13185

; <label>:253:                                    ; preds = %249
  %254 = load i8*, i8** %4, align 8, !dbg !13186
  %255 = getelementptr inbounds i8, i8* %254, i32 1, !dbg !13186
  store i8* %255, i8** %4, align 8, !dbg !13186
  %256 = load i8, i8* %254, align 1, !dbg !13188
  %257 = zext i8 %256 to i32, !dbg !13188
  %258 = shl i32 %257, 16, !dbg !13189
  store i32 %258, i32* %7, align 4, !dbg !13190
  %259 = load i8*, i8** %4, align 8, !dbg !13191
  %260 = getelementptr inbounds i8, i8* %259, i32 1, !dbg !13191
  store i8* %260, i8** %4, align 8, !dbg !13191
  %261 = load i8, i8* %259, align 1, !dbg !13192
  %262 = zext i8 %261 to i32, !dbg !13192
  %263 = shl i32 %262, 8, !dbg !13193
  %264 = load i32, i32* %7, align 4, !dbg !13194
  %265 = or i32 %264, %263, !dbg !13194
  store i32 %265, i32* %7, align 4, !dbg !13194
  %266 = load i8*, i8** %4, align 8, !dbg !13195
  %267 = getelementptr inbounds i8, i8* %266, i32 1, !dbg !13195
  store i8* %267, i8** %4, align 8, !dbg !13195
  %268 = load i8, i8* %266, align 1, !dbg !13196
  %269 = zext i8 %268 to i32, !dbg !13196
  %270 = load i32, i32* %7, align 4, !dbg !13197
  %271 = or i32 %270, %269, !dbg !13197
  store i32 %271, i32* %7, align 4, !dbg !13197
  %272 = load i32, i32* %7, align 4, !dbg !13198
  %273 = and i32 %272, 16711680, !dbg !13200
  %274 = lshr i32 %273, 16, !dbg !13201
  %275 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13202
  store i32 %274, i32* %275, align 4, !dbg !13203
  %276 = load i32, i32* %7, align 4, !dbg !13204
  %277 = and i32 %276, 65280, !dbg !13205
  %278 = lshr i32 %277, 8, !dbg !13206
  %279 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13207
  store i32 %278, i32* %279, align 4, !dbg !13208
  %280 = load i32, i32* %7, align 4, !dbg !13209
  %281 = and i32 %280, 255, !dbg !13210
  %282 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13211
  store i32 %281, i32* %282, align 4, !dbg !13212
  %283 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13213
  %284 = load i32, i32* %283, align 4, !dbg !13213
  %285 = load i32, i32* @g_red_shift_r, align 4, !dbg !13214
  %286 = lshr i32 %284, %285, !dbg !13215
  %287 = load i32, i32* @g_red_shift_l, align 4, !dbg !13216
  %288 = shl i32 %286, %287, !dbg !13217
  %289 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13218
  %290 = load i32, i32* %289, align 4, !dbg !13218
  %291 = load i32, i32* @g_green_shift_r, align 4, !dbg !13219
  %292 = lshr i32 %290, %291, !dbg !13220
  %293 = load i32, i32* @g_green_shift_l, align 4, !dbg !13221
  %294 = shl i32 %292, %293, !dbg !13222
  %295 = or i32 %288, %294, !dbg !13223
  %296 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13224
  %297 = load i32, i32* %296, align 4, !dbg !13224
  %298 = load i32, i32* @g_blue_shift_r, align 4, !dbg !13225
  %299 = lshr i32 %297, %298, !dbg !13226
  %300 = load i32, i32* @g_blue_shift_l, align 4, !dbg !13227
  %301 = shl i32 %299, %300, !dbg !13228
  %302 = or i32 %295, %301, !dbg !13229
  store i32 %302, i32* %8, align 4, !dbg !13230
  %303 = load i32, i32* %8, align 4, !dbg !13231
  %304 = trunc i32 %303 to i8, !dbg !13231
  %305 = load i8*, i8** %5, align 8, !dbg !13233
  %306 = getelementptr inbounds i8, i8* %305, i32 1, !dbg !13233
  store i8* %306, i8** %5, align 8, !dbg !13233
  store i8 %304, i8* %305, align 1, !dbg !13234
  %307 = load i32, i32* %8, align 4, !dbg !13235
  %308 = lshr i32 %307, 8, !dbg !13236
  %309 = trunc i32 %308 to i8, !dbg !13235
  %310 = load i8*, i8** %5, align 8, !dbg !13237
  %311 = getelementptr inbounds i8, i8* %310, i32 1, !dbg !13237
  store i8* %311, i8** %5, align 8, !dbg !13237
  store i8 %309, i8* %310, align 1, !dbg !13238
  %312 = load i32, i32* %8, align 4, !dbg !13239
  %313 = lshr i32 %312, 16, !dbg !13240
  %314 = trunc i32 %313 to i8, !dbg !13239
  %315 = load i8*, i8** %5, align 8, !dbg !13241
  %316 = getelementptr inbounds i8, i8* %315, i32 1, !dbg !13241
  store i8* %316, i8** %5, align 8, !dbg !13241
  store i8 %314, i8* %315, align 1, !dbg !13242
  %317 = load i32, i32* %8, align 4, !dbg !13243
  %318 = lshr i32 %317, 24, !dbg !13244
  %319 = trunc i32 %318 to i8, !dbg !13243
  %320 = load i8*, i8** %5, align 8, !dbg !13245
  %321 = getelementptr inbounds i8, i8* %320, i32 1, !dbg !13245
  store i8* %321, i8** %5, align 8, !dbg !13245
  store i8 %319, i8* %320, align 1, !dbg !13246
  br label %249, !dbg !13247, !llvm.loop !13249

; <label>:322:                                    ; preds = %249
  br label %323

; <label>:323:                                    ; preds = %322, %247
  br label %324

; <label>:324:                                    ; preds = %323, %169
  ret void, !dbg !13250
}

; Function Attrs: nounwind uwtable
define internal void @translate24to24(i8*, i8*, i8*) #0 !dbg !13251 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.PixelColour, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !13252, metadata !416), !dbg !13253
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !13254, metadata !416), !dbg !13255
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !13256, metadata !416), !dbg !13257
  call void @llvm.dbg.declare(metadata i32* %7, metadata !13258, metadata !416), !dbg !13259
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13260, metadata !416), !dbg !13261
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %9, metadata !13262, metadata !416), !dbg !13263
  %10 = load i32, i32* @g_xserver_be, align 4, !dbg !13264
  %11 = icmp ne i32 %10, 0, !dbg !13264
  br i1 %11, label %12, label %82, !dbg !13266

; <label>:12:                                     ; preds = %3
  br label %13, !dbg !13267

; <label>:13:                                     ; preds = %17, %12
  %14 = load i8*, i8** %5, align 8, !dbg !13269
  %15 = load i8*, i8** %6, align 8, !dbg !13271
  %16 = icmp ult i8* %14, %15, !dbg !13272
  br i1 %16, label %17, label %81, !dbg !13273

; <label>:17:                                     ; preds = %13
  %18 = load i8*, i8** %4, align 8, !dbg !13274
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !13274
  store i8* %19, i8** %4, align 8, !dbg !13274
  %20 = load i8, i8* %18, align 1, !dbg !13276
  %21 = zext i8 %20 to i32, !dbg !13276
  %22 = shl i32 %21, 16, !dbg !13277
  store i32 %22, i32* %7, align 4, !dbg !13278
  %23 = load i8*, i8** %4, align 8, !dbg !13279
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !13279
  store i8* %24, i8** %4, align 8, !dbg !13279
  %25 = load i8, i8* %23, align 1, !dbg !13280
  %26 = zext i8 %25 to i32, !dbg !13280
  %27 = shl i32 %26, 8, !dbg !13281
  %28 = load i32, i32* %7, align 4, !dbg !13282
  %29 = or i32 %28, %27, !dbg !13282
  store i32 %29, i32* %7, align 4, !dbg !13282
  %30 = load i8*, i8** %4, align 8, !dbg !13283
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !13283
  store i8* %31, i8** %4, align 8, !dbg !13283
  %32 = load i8, i8* %30, align 1, !dbg !13284
  %33 = zext i8 %32 to i32, !dbg !13284
  %34 = load i32, i32* %7, align 4, !dbg !13285
  %35 = or i32 %34, %33, !dbg !13285
  store i32 %35, i32* %7, align 4, !dbg !13285
  %36 = load i32, i32* %7, align 4, !dbg !13286
  %37 = and i32 %36, 16711680, !dbg !13288
  %38 = lshr i32 %37, 16, !dbg !13289
  %39 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13290
  store i32 %38, i32* %39, align 4, !dbg !13291
  %40 = load i32, i32* %7, align 4, !dbg !13292
  %41 = and i32 %40, 65280, !dbg !13293
  %42 = lshr i32 %41, 8, !dbg !13294
  %43 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13295
  store i32 %42, i32* %43, align 4, !dbg !13296
  %44 = load i32, i32* %7, align 4, !dbg !13297
  %45 = and i32 %44, 255, !dbg !13298
  %46 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13299
  store i32 %45, i32* %46, align 4, !dbg !13300
  %47 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13301
  %48 = load i32, i32* %47, align 4, !dbg !13301
  %49 = load i32, i32* @g_red_shift_r, align 4, !dbg !13302
  %50 = lshr i32 %48, %49, !dbg !13303
  %51 = load i32, i32* @g_red_shift_l, align 4, !dbg !13304
  %52 = shl i32 %50, %51, !dbg !13305
  %53 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13306
  %54 = load i32, i32* %53, align 4, !dbg !13306
  %55 = load i32, i32* @g_green_shift_r, align 4, !dbg !13307
  %56 = lshr i32 %54, %55, !dbg !13308
  %57 = load i32, i32* @g_green_shift_l, align 4, !dbg !13309
  %58 = shl i32 %56, %57, !dbg !13310
  %59 = or i32 %52, %58, !dbg !13311
  %60 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13312
  %61 = load i32, i32* %60, align 4, !dbg !13312
  %62 = load i32, i32* @g_blue_shift_r, align 4, !dbg !13313
  %63 = lshr i32 %61, %62, !dbg !13314
  %64 = load i32, i32* @g_blue_shift_l, align 4, !dbg !13315
  %65 = shl i32 %63, %64, !dbg !13316
  %66 = or i32 %59, %65, !dbg !13317
  store i32 %66, i32* %8, align 4, !dbg !13318
  %67 = load i32, i32* %8, align 4, !dbg !13319
  %68 = lshr i32 %67, 16, !dbg !13321
  %69 = trunc i32 %68 to i8, !dbg !13319
  %70 = load i8*, i8** %5, align 8, !dbg !13322
  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !13322
  store i8* %71, i8** %5, align 8, !dbg !13322
  store i8 %69, i8* %70, align 1, !dbg !13323
  %72 = load i32, i32* %8, align 4, !dbg !13324
  %73 = lshr i32 %72, 8, !dbg !13325
  %74 = trunc i32 %73 to i8, !dbg !13324
  %75 = load i8*, i8** %5, align 8, !dbg !13326
  %76 = getelementptr inbounds i8, i8* %75, i32 1, !dbg !13326
  store i8* %76, i8** %5, align 8, !dbg !13326
  store i8 %74, i8* %75, align 1, !dbg !13327
  %77 = load i32, i32* %8, align 4, !dbg !13328
  %78 = trunc i32 %77 to i8, !dbg !13328
  %79 = load i8*, i8** %5, align 8, !dbg !13329
  %80 = getelementptr inbounds i8, i8* %79, i32 1, !dbg !13329
  store i8* %80, i8** %5, align 8, !dbg !13329
  store i8 %78, i8* %79, align 1, !dbg !13330
  br label %13, !dbg !13331, !llvm.loop !13333

; <label>:81:                                     ; preds = %13
  br label %152, !dbg !13334

; <label>:82:                                     ; preds = %3
  br label %83, !dbg !13335

; <label>:83:                                     ; preds = %87, %82
  %84 = load i8*, i8** %5, align 8, !dbg !13337
  %85 = load i8*, i8** %6, align 8, !dbg !13339
  %86 = icmp ult i8* %84, %85, !dbg !13340
  br i1 %86, label %87, label %151, !dbg !13341

; <label>:87:                                     ; preds = %83
  %88 = load i8*, i8** %4, align 8, !dbg !13342
  %89 = getelementptr inbounds i8, i8* %88, i32 1, !dbg !13342
  store i8* %89, i8** %4, align 8, !dbg !13342
  %90 = load i8, i8* %88, align 1, !dbg !13344
  %91 = zext i8 %90 to i32, !dbg !13344
  %92 = shl i32 %91, 16, !dbg !13345
  store i32 %92, i32* %7, align 4, !dbg !13346
  %93 = load i8*, i8** %4, align 8, !dbg !13347
  %94 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !13347
  store i8* %94, i8** %4, align 8, !dbg !13347
  %95 = load i8, i8* %93, align 1, !dbg !13348
  %96 = zext i8 %95 to i32, !dbg !13348
  %97 = shl i32 %96, 8, !dbg !13349
  %98 = load i32, i32* %7, align 4, !dbg !13350
  %99 = or i32 %98, %97, !dbg !13350
  store i32 %99, i32* %7, align 4, !dbg !13350
  %100 = load i8*, i8** %4, align 8, !dbg !13351
  %101 = getelementptr inbounds i8, i8* %100, i32 1, !dbg !13351
  store i8* %101, i8** %4, align 8, !dbg !13351
  %102 = load i8, i8* %100, align 1, !dbg !13352
  %103 = zext i8 %102 to i32, !dbg !13352
  %104 = load i32, i32* %7, align 4, !dbg !13353
  %105 = or i32 %104, %103, !dbg !13353
  store i32 %105, i32* %7, align 4, !dbg !13353
  %106 = load i32, i32* %7, align 4, !dbg !13354
  %107 = and i32 %106, 16711680, !dbg !13356
  %108 = lshr i32 %107, 16, !dbg !13357
  %109 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13358
  store i32 %108, i32* %109, align 4, !dbg !13359
  %110 = load i32, i32* %7, align 4, !dbg !13360
  %111 = and i32 %110, 65280, !dbg !13361
  %112 = lshr i32 %111, 8, !dbg !13362
  %113 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13363
  store i32 %112, i32* %113, align 4, !dbg !13364
  %114 = load i32, i32* %7, align 4, !dbg !13365
  %115 = and i32 %114, 255, !dbg !13366
  %116 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13367
  store i32 %115, i32* %116, align 4, !dbg !13368
  %117 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13369
  %118 = load i32, i32* %117, align 4, !dbg !13369
  %119 = load i32, i32* @g_red_shift_r, align 4, !dbg !13370
  %120 = lshr i32 %118, %119, !dbg !13371
  %121 = load i32, i32* @g_red_shift_l, align 4, !dbg !13372
  %122 = shl i32 %120, %121, !dbg !13373
  %123 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13374
  %124 = load i32, i32* %123, align 4, !dbg !13374
  %125 = load i32, i32* @g_green_shift_r, align 4, !dbg !13375
  %126 = lshr i32 %124, %125, !dbg !13376
  %127 = load i32, i32* @g_green_shift_l, align 4, !dbg !13377
  %128 = shl i32 %126, %127, !dbg !13378
  %129 = or i32 %122, %128, !dbg !13379
  %130 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13380
  %131 = load i32, i32* %130, align 4, !dbg !13380
  %132 = load i32, i32* @g_blue_shift_r, align 4, !dbg !13381
  %133 = lshr i32 %131, %132, !dbg !13382
  %134 = load i32, i32* @g_blue_shift_l, align 4, !dbg !13383
  %135 = shl i32 %133, %134, !dbg !13384
  %136 = or i32 %129, %135, !dbg !13385
  store i32 %136, i32* %8, align 4, !dbg !13386
  %137 = load i32, i32* %8, align 4, !dbg !13387
  %138 = trunc i32 %137 to i8, !dbg !13387
  %139 = load i8*, i8** %5, align 8, !dbg !13389
  %140 = getelementptr inbounds i8, i8* %139, i32 1, !dbg !13389
  store i8* %140, i8** %5, align 8, !dbg !13389
  store i8 %138, i8* %139, align 1, !dbg !13390
  %141 = load i32, i32* %8, align 4, !dbg !13391
  %142 = lshr i32 %141, 8, !dbg !13392
  %143 = trunc i32 %142 to i8, !dbg !13391
  %144 = load i8*, i8** %5, align 8, !dbg !13393
  %145 = getelementptr inbounds i8, i8* %144, i32 1, !dbg !13393
  store i8* %145, i8** %5, align 8, !dbg !13393
  store i8 %143, i8* %144, align 1, !dbg !13394
  %146 = load i32, i32* %8, align 4, !dbg !13395
  %147 = lshr i32 %146, 16, !dbg !13396
  %148 = trunc i32 %147 to i8, !dbg !13395
  %149 = load i8*, i8** %5, align 8, !dbg !13397
  %150 = getelementptr inbounds i8, i8* %149, i32 1, !dbg !13397
  store i8* %150, i8** %5, align 8, !dbg !13397
  store i8 %148, i8* %149, align 1, !dbg !13398
  br label %83, !dbg !13399, !llvm.loop !13401

; <label>:151:                                    ; preds = %83
  br label %152

; <label>:152:                                    ; preds = %151, %81
  ret void, !dbg !13402
}

; Function Attrs: nounwind uwtable
define internal void @translate24to16(i8*, i8*, i8*) #0 !dbg !13403 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca %struct.PixelColour, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !13404, metadata !416), !dbg !13405
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !13406, metadata !416), !dbg !13407
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !13408, metadata !416), !dbg !13409
  call void @llvm.dbg.declare(metadata i32* %7, metadata !13410, metadata !416), !dbg !13411
  store i32 0, i32* %7, align 4, !dbg !13411
  call void @llvm.dbg.declare(metadata i16* %8, metadata !13412, metadata !416), !dbg !13413
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %9, metadata !13414, metadata !416), !dbg !13415
  br label %10, !dbg !13416

; <label>:10:                                     ; preds = %89, %3
  %11 = load i8*, i8** %5, align 8, !dbg !13417
  %12 = load i8*, i8** %6, align 8, !dbg !13419
  %13 = icmp ult i8* %11, %12, !dbg !13420
  br i1 %13, label %14, label %90, !dbg !13421

; <label>:14:                                     ; preds = %10
  %15 = load i8*, i8** %4, align 8, !dbg !13422
  %16 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !13422
  store i8* %16, i8** %4, align 8, !dbg !13422
  %17 = load i8, i8* %15, align 1, !dbg !13424
  %18 = zext i8 %17 to i32, !dbg !13424
  %19 = shl i32 %18, 16, !dbg !13425
  store i32 %19, i32* %7, align 4, !dbg !13426
  %20 = load i8*, i8** %4, align 8, !dbg !13427
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !13427
  store i8* %21, i8** %4, align 8, !dbg !13427
  %22 = load i8, i8* %20, align 1, !dbg !13428
  %23 = zext i8 %22 to i32, !dbg !13428
  %24 = shl i32 %23, 8, !dbg !13429
  %25 = load i32, i32* %7, align 4, !dbg !13430
  %26 = or i32 %25, %24, !dbg !13430
  store i32 %26, i32* %7, align 4, !dbg !13430
  %27 = load i8*, i8** %4, align 8, !dbg !13431
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !13431
  store i8* %28, i8** %4, align 8, !dbg !13431
  %29 = load i8, i8* %27, align 1, !dbg !13432
  %30 = zext i8 %29 to i32, !dbg !13432
  %31 = load i32, i32* %7, align 4, !dbg !13433
  %32 = or i32 %31, %30, !dbg !13433
  store i32 %32, i32* %7, align 4, !dbg !13433
  %33 = load i32, i32* %7, align 4, !dbg !13434
  %34 = and i32 %33, 16711680, !dbg !13436
  %35 = lshr i32 %34, 16, !dbg !13437
  %36 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13438
  store i32 %35, i32* %36, align 4, !dbg !13439
  %37 = load i32, i32* %7, align 4, !dbg !13440
  %38 = and i32 %37, 65280, !dbg !13441
  %39 = lshr i32 %38, 8, !dbg !13442
  %40 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13443
  store i32 %39, i32* %40, align 4, !dbg !13444
  %41 = load i32, i32* %7, align 4, !dbg !13445
  %42 = and i32 %41, 255, !dbg !13446
  %43 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13447
  store i32 %42, i32* %43, align 4, !dbg !13448
  %44 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13449
  %45 = load i32, i32* %44, align 4, !dbg !13449
  %46 = load i32, i32* @g_red_shift_r, align 4, !dbg !13450
  %47 = lshr i32 %45, %46, !dbg !13451
  %48 = load i32, i32* @g_red_shift_l, align 4, !dbg !13452
  %49 = shl i32 %47, %48, !dbg !13453
  %50 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13454
  %51 = load i32, i32* %50, align 4, !dbg !13454
  %52 = load i32, i32* @g_green_shift_r, align 4, !dbg !13455
  %53 = lshr i32 %51, %52, !dbg !13456
  %54 = load i32, i32* @g_green_shift_l, align 4, !dbg !13457
  %55 = shl i32 %53, %54, !dbg !13458
  %56 = or i32 %49, %55, !dbg !13459
  %57 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13460
  %58 = load i32, i32* %57, align 4, !dbg !13460
  %59 = load i32, i32* @g_blue_shift_r, align 4, !dbg !13461
  %60 = lshr i32 %58, %59, !dbg !13462
  %61 = load i32, i32* @g_blue_shift_l, align 4, !dbg !13463
  %62 = shl i32 %60, %61, !dbg !13464
  %63 = or i32 %56, %62, !dbg !13465
  %64 = trunc i32 %63 to i16, !dbg !13466
  store i16 %64, i16* %8, align 2, !dbg !13467
  %65 = load i32, i32* @g_xserver_be, align 4, !dbg !13468
  %66 = icmp ne i32 %65, 0, !dbg !13468
  br i1 %66, label %67, label %78, !dbg !13470

; <label>:67:                                     ; preds = %14
  %68 = load i16, i16* %8, align 2, !dbg !13471
  %69 = zext i16 %68 to i32, !dbg !13471
  %70 = ashr i32 %69, 8, !dbg !13474
  %71 = trunc i32 %70 to i8, !dbg !13471
  %72 = load i8*, i8** %5, align 8, !dbg !13475
  %73 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !13475
  store i8* %73, i8** %5, align 8, !dbg !13475
  store i8 %71, i8* %72, align 1, !dbg !13476
  %74 = load i16, i16* %8, align 2, !dbg !13477
  %75 = trunc i16 %74 to i8, !dbg !13477
  %76 = load i8*, i8** %5, align 8, !dbg !13478
  %77 = getelementptr inbounds i8, i8* %76, i32 1, !dbg !13478
  store i8* %77, i8** %5, align 8, !dbg !13478
  store i8 %75, i8* %76, align 1, !dbg !13479
  br label %89, !dbg !13480

; <label>:78:                                     ; preds = %14
  %79 = load i16, i16* %8, align 2, !dbg !13481
  %80 = trunc i16 %79 to i8, !dbg !13481
  %81 = load i8*, i8** %5, align 8, !dbg !13484
  %82 = getelementptr inbounds i8, i8* %81, i32 1, !dbg !13484
  store i8* %82, i8** %5, align 8, !dbg !13484
  store i8 %80, i8* %81, align 1, !dbg !13485
  %83 = load i16, i16* %8, align 2, !dbg !13486
  %84 = zext i16 %83 to i32, !dbg !13486
  %85 = ashr i32 %84, 8, !dbg !13487
  %86 = trunc i32 %85 to i8, !dbg !13486
  %87 = load i8*, i8** %5, align 8, !dbg !13488
  %88 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !13488
  store i8* %88, i8** %5, align 8, !dbg !13488
  store i8 %86, i8* %87, align 1, !dbg !13489
  br label %89

; <label>:89:                                     ; preds = %78, %67
  br label %10, !dbg !13490, !llvm.loop !13492

; <label>:90:                                     ; preds = %10
  ret void, !dbg !13493
}

; Function Attrs: nounwind uwtable
define internal void @translate16to32(i16*, i8*, i8*) #0 !dbg !13494 {
  %4 = alloca i16*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca %struct.PixelColour, align 4
  store i16* %0, i16** %4, align 8
  call void @llvm.dbg.declare(metadata i16** %4, metadata !13499, metadata !416), !dbg !13500
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !13501, metadata !416), !dbg !13502
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !13503, metadata !416), !dbg !13504
  call void @llvm.dbg.declare(metadata i16* %7, metadata !13505, metadata !416), !dbg !13506
  call void @llvm.dbg.declare(metadata i32* %8, metadata !13507, metadata !416), !dbg !13508
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %9, metadata !13509, metadata !416), !dbg !13510
  %10 = load i32, i32* @g_compatible_arch, align 4, !dbg !13511
  %11 = icmp ne i32 %10, 0, !dbg !13511
  br i1 %11, label %12, label %476, !dbg !13513

; <label>:12:                                     ; preds = %3
  br label %13, !dbg !13514

; <label>:13:                                     ; preds = %18, %12
  %14 = load i8*, i8** %5, align 8, !dbg !13517
  %15 = load i8*, i8** %6, align 8, !dbg !13519
  %16 = getelementptr inbounds i8, i8* %15, i64 -32, !dbg !13520
  %17 = icmp ule i8* %14, %16, !dbg !13521
  br i1 %17, label %18, label %419, !dbg !13522

; <label>:18:                                     ; preds = %13
  %19 = load i16*, i16** %4, align 8, !dbg !13523
  %20 = getelementptr inbounds i16, i16* %19, i32 1, !dbg !13523
  store i16* %20, i16** %4, align 8, !dbg !13523
  %21 = load i16, i16* %19, align 2, !dbg !13526
  store i16 %21, i16* %7, align 2, !dbg !13527
  %22 = load i16, i16* %7, align 2, !dbg !13528
  %23 = zext i16 %22 to i32, !dbg !13528
  %24 = ashr i32 %23, 8, !dbg !13529
  %25 = and i32 %24, 248, !dbg !13530
  %26 = load i16, i16* %7, align 2, !dbg !13531
  %27 = zext i16 %26 to i32, !dbg !13531
  %28 = ashr i32 %27, 13, !dbg !13532
  %29 = and i32 %28, 7, !dbg !13533
  %30 = or i32 %25, %29, !dbg !13534
  %31 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13535
  store i32 %30, i32* %31, align 4, !dbg !13536
  %32 = load i16, i16* %7, align 2, !dbg !13537
  %33 = zext i16 %32 to i32, !dbg !13537
  %34 = ashr i32 %33, 3, !dbg !13538
  %35 = and i32 %34, 252, !dbg !13539
  %36 = load i16, i16* %7, align 2, !dbg !13540
  %37 = zext i16 %36 to i32, !dbg !13540
  %38 = ashr i32 %37, 9, !dbg !13541
  %39 = and i32 %38, 3, !dbg !13542
  %40 = or i32 %35, %39, !dbg !13543
  %41 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13544
  store i32 %40, i32* %41, align 4, !dbg !13545
  %42 = load i16, i16* %7, align 2, !dbg !13546
  %43 = zext i16 %42 to i32, !dbg !13546
  %44 = shl i32 %43, 3, !dbg !13547
  %45 = and i32 %44, 248, !dbg !13548
  %46 = load i16, i16* %7, align 2, !dbg !13549
  %47 = zext i16 %46 to i32, !dbg !13549
  %48 = ashr i32 %47, 2, !dbg !13550
  %49 = and i32 %48, 7, !dbg !13551
  %50 = or i32 %45, %49, !dbg !13552
  %51 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13553
  store i32 %50, i32* %51, align 4, !dbg !13554
  %52 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13555
  %53 = load i32, i32* %52, align 4, !dbg !13555
  %54 = trunc i32 %53 to i8, !dbg !13556
  %55 = load i8*, i8** %5, align 8, !dbg !13557
  %56 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !13557
  store i8* %56, i8** %5, align 8, !dbg !13557
  store i8 %54, i8* %55, align 1, !dbg !13558
  %57 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13559
  %58 = load i32, i32* %57, align 4, !dbg !13559
  %59 = trunc i32 %58 to i8, !dbg !13560
  %60 = load i8*, i8** %5, align 8, !dbg !13561
  %61 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !13561
  store i8* %61, i8** %5, align 8, !dbg !13561
  store i8 %59, i8* %60, align 1, !dbg !13562
  %62 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13563
  %63 = load i32, i32* %62, align 4, !dbg !13563
  %64 = trunc i32 %63 to i8, !dbg !13564
  %65 = load i8*, i8** %5, align 8, !dbg !13565
  %66 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !13565
  store i8* %66, i8** %5, align 8, !dbg !13565
  store i8 %64, i8* %65, align 1, !dbg !13566
  %67 = load i8*, i8** %5, align 8, !dbg !13567
  %68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !13567
  store i8* %68, i8** %5, align 8, !dbg !13567
  store i8 0, i8* %67, align 1, !dbg !13568
  %69 = load i16*, i16** %4, align 8, !dbg !13569
  %70 = getelementptr inbounds i16, i16* %69, i32 1, !dbg !13569
  store i16* %70, i16** %4, align 8, !dbg !13569
  %71 = load i16, i16* %69, align 2, !dbg !13570
  store i16 %71, i16* %7, align 2, !dbg !13571
  %72 = load i16, i16* %7, align 2, !dbg !13572
  %73 = zext i16 %72 to i32, !dbg !13572
  %74 = ashr i32 %73, 8, !dbg !13573
  %75 = and i32 %74, 248, !dbg !13574
  %76 = load i16, i16* %7, align 2, !dbg !13575
  %77 = zext i16 %76 to i32, !dbg !13575
  %78 = ashr i32 %77, 13, !dbg !13576
  %79 = and i32 %78, 7, !dbg !13577
  %80 = or i32 %75, %79, !dbg !13578
  %81 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13579
  store i32 %80, i32* %81, align 4, !dbg !13580
  %82 = load i16, i16* %7, align 2, !dbg !13581
  %83 = zext i16 %82 to i32, !dbg !13581
  %84 = ashr i32 %83, 3, !dbg !13582
  %85 = and i32 %84, 252, !dbg !13583
  %86 = load i16, i16* %7, align 2, !dbg !13584
  %87 = zext i16 %86 to i32, !dbg !13584
  %88 = ashr i32 %87, 9, !dbg !13585
  %89 = and i32 %88, 3, !dbg !13586
  %90 = or i32 %85, %89, !dbg !13587
  %91 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13588
  store i32 %90, i32* %91, align 4, !dbg !13589
  %92 = load i16, i16* %7, align 2, !dbg !13590
  %93 = zext i16 %92 to i32, !dbg !13590
  %94 = shl i32 %93, 3, !dbg !13591
  %95 = and i32 %94, 248, !dbg !13592
  %96 = load i16, i16* %7, align 2, !dbg !13593
  %97 = zext i16 %96 to i32, !dbg !13593
  %98 = ashr i32 %97, 2, !dbg !13594
  %99 = and i32 %98, 7, !dbg !13595
  %100 = or i32 %95, %99, !dbg !13596
  %101 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13597
  store i32 %100, i32* %101, align 4, !dbg !13598
  %102 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13599
  %103 = load i32, i32* %102, align 4, !dbg !13599
  %104 = trunc i32 %103 to i8, !dbg !13600
  %105 = load i8*, i8** %5, align 8, !dbg !13601
  %106 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !13601
  store i8* %106, i8** %5, align 8, !dbg !13601
  store i8 %104, i8* %105, align 1, !dbg !13602
  %107 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13603
  %108 = load i32, i32* %107, align 4, !dbg !13603
  %109 = trunc i32 %108 to i8, !dbg !13604
  %110 = load i8*, i8** %5, align 8, !dbg !13605
  %111 = getelementptr inbounds i8, i8* %110, i32 1, !dbg !13605
  store i8* %111, i8** %5, align 8, !dbg !13605
  store i8 %109, i8* %110, align 1, !dbg !13606
  %112 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13607
  %113 = load i32, i32* %112, align 4, !dbg !13607
  %114 = trunc i32 %113 to i8, !dbg !13608
  %115 = load i8*, i8** %5, align 8, !dbg !13609
  %116 = getelementptr inbounds i8, i8* %115, i32 1, !dbg !13609
  store i8* %116, i8** %5, align 8, !dbg !13609
  store i8 %114, i8* %115, align 1, !dbg !13610
  %117 = load i8*, i8** %5, align 8, !dbg !13611
  %118 = getelementptr inbounds i8, i8* %117, i32 1, !dbg !13611
  store i8* %118, i8** %5, align 8, !dbg !13611
  store i8 0, i8* %117, align 1, !dbg !13612
  %119 = load i16*, i16** %4, align 8, !dbg !13613
  %120 = getelementptr inbounds i16, i16* %119, i32 1, !dbg !13613
  store i16* %120, i16** %4, align 8, !dbg !13613
  %121 = load i16, i16* %119, align 2, !dbg !13614
  store i16 %121, i16* %7, align 2, !dbg !13615
  %122 = load i16, i16* %7, align 2, !dbg !13616
  %123 = zext i16 %122 to i32, !dbg !13616
  %124 = ashr i32 %123, 8, !dbg !13617
  %125 = and i32 %124, 248, !dbg !13618
  %126 = load i16, i16* %7, align 2, !dbg !13619
  %127 = zext i16 %126 to i32, !dbg !13619
  %128 = ashr i32 %127, 13, !dbg !13620
  %129 = and i32 %128, 7, !dbg !13621
  %130 = or i32 %125, %129, !dbg !13622
  %131 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13623
  store i32 %130, i32* %131, align 4, !dbg !13624
  %132 = load i16, i16* %7, align 2, !dbg !13625
  %133 = zext i16 %132 to i32, !dbg !13625
  %134 = ashr i32 %133, 3, !dbg !13626
  %135 = and i32 %134, 252, !dbg !13627
  %136 = load i16, i16* %7, align 2, !dbg !13628
  %137 = zext i16 %136 to i32, !dbg !13628
  %138 = ashr i32 %137, 9, !dbg !13629
  %139 = and i32 %138, 3, !dbg !13630
  %140 = or i32 %135, %139, !dbg !13631
  %141 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13632
  store i32 %140, i32* %141, align 4, !dbg !13633
  %142 = load i16, i16* %7, align 2, !dbg !13634
  %143 = zext i16 %142 to i32, !dbg !13634
  %144 = shl i32 %143, 3, !dbg !13635
  %145 = and i32 %144, 248, !dbg !13636
  %146 = load i16, i16* %7, align 2, !dbg !13637
  %147 = zext i16 %146 to i32, !dbg !13637
  %148 = ashr i32 %147, 2, !dbg !13638
  %149 = and i32 %148, 7, !dbg !13639
  %150 = or i32 %145, %149, !dbg !13640
  %151 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13641
  store i32 %150, i32* %151, align 4, !dbg !13642
  %152 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13643
  %153 = load i32, i32* %152, align 4, !dbg !13643
  %154 = trunc i32 %153 to i8, !dbg !13644
  %155 = load i8*, i8** %5, align 8, !dbg !13645
  %156 = getelementptr inbounds i8, i8* %155, i32 1, !dbg !13645
  store i8* %156, i8** %5, align 8, !dbg !13645
  store i8 %154, i8* %155, align 1, !dbg !13646
  %157 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13647
  %158 = load i32, i32* %157, align 4, !dbg !13647
  %159 = trunc i32 %158 to i8, !dbg !13648
  %160 = load i8*, i8** %5, align 8, !dbg !13649
  %161 = getelementptr inbounds i8, i8* %160, i32 1, !dbg !13649
  store i8* %161, i8** %5, align 8, !dbg !13649
  store i8 %159, i8* %160, align 1, !dbg !13650
  %162 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13651
  %163 = load i32, i32* %162, align 4, !dbg !13651
  %164 = trunc i32 %163 to i8, !dbg !13652
  %165 = load i8*, i8** %5, align 8, !dbg !13653
  %166 = getelementptr inbounds i8, i8* %165, i32 1, !dbg !13653
  store i8* %166, i8** %5, align 8, !dbg !13653
  store i8 %164, i8* %165, align 1, !dbg !13654
  %167 = load i8*, i8** %5, align 8, !dbg !13655
  %168 = getelementptr inbounds i8, i8* %167, i32 1, !dbg !13655
  store i8* %168, i8** %5, align 8, !dbg !13655
  store i8 0, i8* %167, align 1, !dbg !13656
  %169 = load i16*, i16** %4, align 8, !dbg !13657
  %170 = getelementptr inbounds i16, i16* %169, i32 1, !dbg !13657
  store i16* %170, i16** %4, align 8, !dbg !13657
  %171 = load i16, i16* %169, align 2, !dbg !13658
  store i16 %171, i16* %7, align 2, !dbg !13659
  %172 = load i16, i16* %7, align 2, !dbg !13660
  %173 = zext i16 %172 to i32, !dbg !13660
  %174 = ashr i32 %173, 8, !dbg !13661
  %175 = and i32 %174, 248, !dbg !13662
  %176 = load i16, i16* %7, align 2, !dbg !13663
  %177 = zext i16 %176 to i32, !dbg !13663
  %178 = ashr i32 %177, 13, !dbg !13664
  %179 = and i32 %178, 7, !dbg !13665
  %180 = or i32 %175, %179, !dbg !13666
  %181 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13667
  store i32 %180, i32* %181, align 4, !dbg !13668
  %182 = load i16, i16* %7, align 2, !dbg !13669
  %183 = zext i16 %182 to i32, !dbg !13669
  %184 = ashr i32 %183, 3, !dbg !13670
  %185 = and i32 %184, 252, !dbg !13671
  %186 = load i16, i16* %7, align 2, !dbg !13672
  %187 = zext i16 %186 to i32, !dbg !13672
  %188 = ashr i32 %187, 9, !dbg !13673
  %189 = and i32 %188, 3, !dbg !13674
  %190 = or i32 %185, %189, !dbg !13675
  %191 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13676
  store i32 %190, i32* %191, align 4, !dbg !13677
  %192 = load i16, i16* %7, align 2, !dbg !13678
  %193 = zext i16 %192 to i32, !dbg !13678
  %194 = shl i32 %193, 3, !dbg !13679
  %195 = and i32 %194, 248, !dbg !13680
  %196 = load i16, i16* %7, align 2, !dbg !13681
  %197 = zext i16 %196 to i32, !dbg !13681
  %198 = ashr i32 %197, 2, !dbg !13682
  %199 = and i32 %198, 7, !dbg !13683
  %200 = or i32 %195, %199, !dbg !13684
  %201 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13685
  store i32 %200, i32* %201, align 4, !dbg !13686
  %202 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13687
  %203 = load i32, i32* %202, align 4, !dbg !13687
  %204 = trunc i32 %203 to i8, !dbg !13688
  %205 = load i8*, i8** %5, align 8, !dbg !13689
  %206 = getelementptr inbounds i8, i8* %205, i32 1, !dbg !13689
  store i8* %206, i8** %5, align 8, !dbg !13689
  store i8 %204, i8* %205, align 1, !dbg !13690
  %207 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13691
  %208 = load i32, i32* %207, align 4, !dbg !13691
  %209 = trunc i32 %208 to i8, !dbg !13692
  %210 = load i8*, i8** %5, align 8, !dbg !13693
  %211 = getelementptr inbounds i8, i8* %210, i32 1, !dbg !13693
  store i8* %211, i8** %5, align 8, !dbg !13693
  store i8 %209, i8* %210, align 1, !dbg !13694
  %212 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13695
  %213 = load i32, i32* %212, align 4, !dbg !13695
  %214 = trunc i32 %213 to i8, !dbg !13696
  %215 = load i8*, i8** %5, align 8, !dbg !13697
  %216 = getelementptr inbounds i8, i8* %215, i32 1, !dbg !13697
  store i8* %216, i8** %5, align 8, !dbg !13697
  store i8 %214, i8* %215, align 1, !dbg !13698
  %217 = load i8*, i8** %5, align 8, !dbg !13699
  %218 = getelementptr inbounds i8, i8* %217, i32 1, !dbg !13699
  store i8* %218, i8** %5, align 8, !dbg !13699
  store i8 0, i8* %217, align 1, !dbg !13700
  %219 = load i16*, i16** %4, align 8, !dbg !13701
  %220 = getelementptr inbounds i16, i16* %219, i32 1, !dbg !13701
  store i16* %220, i16** %4, align 8, !dbg !13701
  %221 = load i16, i16* %219, align 2, !dbg !13702
  store i16 %221, i16* %7, align 2, !dbg !13703
  %222 = load i16, i16* %7, align 2, !dbg !13704
  %223 = zext i16 %222 to i32, !dbg !13704
  %224 = ashr i32 %223, 8, !dbg !13705
  %225 = and i32 %224, 248, !dbg !13706
  %226 = load i16, i16* %7, align 2, !dbg !13707
  %227 = zext i16 %226 to i32, !dbg !13707
  %228 = ashr i32 %227, 13, !dbg !13708
  %229 = and i32 %228, 7, !dbg !13709
  %230 = or i32 %225, %229, !dbg !13710
  %231 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13711
  store i32 %230, i32* %231, align 4, !dbg !13712
  %232 = load i16, i16* %7, align 2, !dbg !13713
  %233 = zext i16 %232 to i32, !dbg !13713
  %234 = ashr i32 %233, 3, !dbg !13714
  %235 = and i32 %234, 252, !dbg !13715
  %236 = load i16, i16* %7, align 2, !dbg !13716
  %237 = zext i16 %236 to i32, !dbg !13716
  %238 = ashr i32 %237, 9, !dbg !13717
  %239 = and i32 %238, 3, !dbg !13718
  %240 = or i32 %235, %239, !dbg !13719
  %241 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13720
  store i32 %240, i32* %241, align 4, !dbg !13721
  %242 = load i16, i16* %7, align 2, !dbg !13722
  %243 = zext i16 %242 to i32, !dbg !13722
  %244 = shl i32 %243, 3, !dbg !13723
  %245 = and i32 %244, 248, !dbg !13724
  %246 = load i16, i16* %7, align 2, !dbg !13725
  %247 = zext i16 %246 to i32, !dbg !13725
  %248 = ashr i32 %247, 2, !dbg !13726
  %249 = and i32 %248, 7, !dbg !13727
  %250 = or i32 %245, %249, !dbg !13728
  %251 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13729
  store i32 %250, i32* %251, align 4, !dbg !13730
  %252 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13731
  %253 = load i32, i32* %252, align 4, !dbg !13731
  %254 = trunc i32 %253 to i8, !dbg !13732
  %255 = load i8*, i8** %5, align 8, !dbg !13733
  %256 = getelementptr inbounds i8, i8* %255, i32 1, !dbg !13733
  store i8* %256, i8** %5, align 8, !dbg !13733
  store i8 %254, i8* %255, align 1, !dbg !13734
  %257 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13735
  %258 = load i32, i32* %257, align 4, !dbg !13735
  %259 = trunc i32 %258 to i8, !dbg !13736
  %260 = load i8*, i8** %5, align 8, !dbg !13737
  %261 = getelementptr inbounds i8, i8* %260, i32 1, !dbg !13737
  store i8* %261, i8** %5, align 8, !dbg !13737
  store i8 %259, i8* %260, align 1, !dbg !13738
  %262 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13739
  %263 = load i32, i32* %262, align 4, !dbg !13739
  %264 = trunc i32 %263 to i8, !dbg !13740
  %265 = load i8*, i8** %5, align 8, !dbg !13741
  %266 = getelementptr inbounds i8, i8* %265, i32 1, !dbg !13741
  store i8* %266, i8** %5, align 8, !dbg !13741
  store i8 %264, i8* %265, align 1, !dbg !13742
  %267 = load i8*, i8** %5, align 8, !dbg !13743
  %268 = getelementptr inbounds i8, i8* %267, i32 1, !dbg !13743
  store i8* %268, i8** %5, align 8, !dbg !13743
  store i8 0, i8* %267, align 1, !dbg !13744
  %269 = load i16*, i16** %4, align 8, !dbg !13745
  %270 = getelementptr inbounds i16, i16* %269, i32 1, !dbg !13745
  store i16* %270, i16** %4, align 8, !dbg !13745
  %271 = load i16, i16* %269, align 2, !dbg !13746
  store i16 %271, i16* %7, align 2, !dbg !13747
  %272 = load i16, i16* %7, align 2, !dbg !13748
  %273 = zext i16 %272 to i32, !dbg !13748
  %274 = ashr i32 %273, 8, !dbg !13749
  %275 = and i32 %274, 248, !dbg !13750
  %276 = load i16, i16* %7, align 2, !dbg !13751
  %277 = zext i16 %276 to i32, !dbg !13751
  %278 = ashr i32 %277, 13, !dbg !13752
  %279 = and i32 %278, 7, !dbg !13753
  %280 = or i32 %275, %279, !dbg !13754
  %281 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13755
  store i32 %280, i32* %281, align 4, !dbg !13756
  %282 = load i16, i16* %7, align 2, !dbg !13757
  %283 = zext i16 %282 to i32, !dbg !13757
  %284 = ashr i32 %283, 3, !dbg !13758
  %285 = and i32 %284, 252, !dbg !13759
  %286 = load i16, i16* %7, align 2, !dbg !13760
  %287 = zext i16 %286 to i32, !dbg !13760
  %288 = ashr i32 %287, 9, !dbg !13761
  %289 = and i32 %288, 3, !dbg !13762
  %290 = or i32 %285, %289, !dbg !13763
  %291 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13764
  store i32 %290, i32* %291, align 4, !dbg !13765
  %292 = load i16, i16* %7, align 2, !dbg !13766
  %293 = zext i16 %292 to i32, !dbg !13766
  %294 = shl i32 %293, 3, !dbg !13767
  %295 = and i32 %294, 248, !dbg !13768
  %296 = load i16, i16* %7, align 2, !dbg !13769
  %297 = zext i16 %296 to i32, !dbg !13769
  %298 = ashr i32 %297, 2, !dbg !13770
  %299 = and i32 %298, 7, !dbg !13771
  %300 = or i32 %295, %299, !dbg !13772
  %301 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13773
  store i32 %300, i32* %301, align 4, !dbg !13774
  %302 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13775
  %303 = load i32, i32* %302, align 4, !dbg !13775
  %304 = trunc i32 %303 to i8, !dbg !13776
  %305 = load i8*, i8** %5, align 8, !dbg !13777
  %306 = getelementptr inbounds i8, i8* %305, i32 1, !dbg !13777
  store i8* %306, i8** %5, align 8, !dbg !13777
  store i8 %304, i8* %305, align 1, !dbg !13778
  %307 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13779
  %308 = load i32, i32* %307, align 4, !dbg !13779
  %309 = trunc i32 %308 to i8, !dbg !13780
  %310 = load i8*, i8** %5, align 8, !dbg !13781
  %311 = getelementptr inbounds i8, i8* %310, i32 1, !dbg !13781
  store i8* %311, i8** %5, align 8, !dbg !13781
  store i8 %309, i8* %310, align 1, !dbg !13782
  %312 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13783
  %313 = load i32, i32* %312, align 4, !dbg !13783
  %314 = trunc i32 %313 to i8, !dbg !13784
  %315 = load i8*, i8** %5, align 8, !dbg !13785
  %316 = getelementptr inbounds i8, i8* %315, i32 1, !dbg !13785
  store i8* %316, i8** %5, align 8, !dbg !13785
  store i8 %314, i8* %315, align 1, !dbg !13786
  %317 = load i8*, i8** %5, align 8, !dbg !13787
  %318 = getelementptr inbounds i8, i8* %317, i32 1, !dbg !13787
  store i8* %318, i8** %5, align 8, !dbg !13787
  store i8 0, i8* %317, align 1, !dbg !13788
  %319 = load i16*, i16** %4, align 8, !dbg !13789
  %320 = getelementptr inbounds i16, i16* %319, i32 1, !dbg !13789
  store i16* %320, i16** %4, align 8, !dbg !13789
  %321 = load i16, i16* %319, align 2, !dbg !13790
  store i16 %321, i16* %7, align 2, !dbg !13791
  %322 = load i16, i16* %7, align 2, !dbg !13792
  %323 = zext i16 %322 to i32, !dbg !13792
  %324 = ashr i32 %323, 8, !dbg !13793
  %325 = and i32 %324, 248, !dbg !13794
  %326 = load i16, i16* %7, align 2, !dbg !13795
  %327 = zext i16 %326 to i32, !dbg !13795
  %328 = ashr i32 %327, 13, !dbg !13796
  %329 = and i32 %328, 7, !dbg !13797
  %330 = or i32 %325, %329, !dbg !13798
  %331 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13799
  store i32 %330, i32* %331, align 4, !dbg !13800
  %332 = load i16, i16* %7, align 2, !dbg !13801
  %333 = zext i16 %332 to i32, !dbg !13801
  %334 = ashr i32 %333, 3, !dbg !13802
  %335 = and i32 %334, 252, !dbg !13803
  %336 = load i16, i16* %7, align 2, !dbg !13804
  %337 = zext i16 %336 to i32, !dbg !13804
  %338 = ashr i32 %337, 9, !dbg !13805
  %339 = and i32 %338, 3, !dbg !13806
  %340 = or i32 %335, %339, !dbg !13807
  %341 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13808
  store i32 %340, i32* %341, align 4, !dbg !13809
  %342 = load i16, i16* %7, align 2, !dbg !13810
  %343 = zext i16 %342 to i32, !dbg !13810
  %344 = shl i32 %343, 3, !dbg !13811
  %345 = and i32 %344, 248, !dbg !13812
  %346 = load i16, i16* %7, align 2, !dbg !13813
  %347 = zext i16 %346 to i32, !dbg !13813
  %348 = ashr i32 %347, 2, !dbg !13814
  %349 = and i32 %348, 7, !dbg !13815
  %350 = or i32 %345, %349, !dbg !13816
  %351 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13817
  store i32 %350, i32* %351, align 4, !dbg !13818
  %352 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13819
  %353 = load i32, i32* %352, align 4, !dbg !13819
  %354 = trunc i32 %353 to i8, !dbg !13820
  %355 = load i8*, i8** %5, align 8, !dbg !13821
  %356 = getelementptr inbounds i8, i8* %355, i32 1, !dbg !13821
  store i8* %356, i8** %5, align 8, !dbg !13821
  store i8 %354, i8* %355, align 1, !dbg !13822
  %357 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13823
  %358 = load i32, i32* %357, align 4, !dbg !13823
  %359 = trunc i32 %358 to i8, !dbg !13824
  %360 = load i8*, i8** %5, align 8, !dbg !13825
  %361 = getelementptr inbounds i8, i8* %360, i32 1, !dbg !13825
  store i8* %361, i8** %5, align 8, !dbg !13825
  store i8 %359, i8* %360, align 1, !dbg !13826
  %362 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13827
  %363 = load i32, i32* %362, align 4, !dbg !13827
  %364 = trunc i32 %363 to i8, !dbg !13828
  %365 = load i8*, i8** %5, align 8, !dbg !13829
  %366 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !13829
  store i8* %366, i8** %5, align 8, !dbg !13829
  store i8 %364, i8* %365, align 1, !dbg !13830
  %367 = load i8*, i8** %5, align 8, !dbg !13831
  %368 = getelementptr inbounds i8, i8* %367, i32 1, !dbg !13831
  store i8* %368, i8** %5, align 8, !dbg !13831
  store i8 0, i8* %367, align 1, !dbg !13832
  %369 = load i16*, i16** %4, align 8, !dbg !13833
  %370 = getelementptr inbounds i16, i16* %369, i32 1, !dbg !13833
  store i16* %370, i16** %4, align 8, !dbg !13833
  %371 = load i16, i16* %369, align 2, !dbg !13834
  store i16 %371, i16* %7, align 2, !dbg !13835
  %372 = load i16, i16* %7, align 2, !dbg !13836
  %373 = zext i16 %372 to i32, !dbg !13836
  %374 = ashr i32 %373, 8, !dbg !13837
  %375 = and i32 %374, 248, !dbg !13838
  %376 = load i16, i16* %7, align 2, !dbg !13839
  %377 = zext i16 %376 to i32, !dbg !13839
  %378 = ashr i32 %377, 13, !dbg !13840
  %379 = and i32 %378, 7, !dbg !13841
  %380 = or i32 %375, %379, !dbg !13842
  %381 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13843
  store i32 %380, i32* %381, align 4, !dbg !13844
  %382 = load i16, i16* %7, align 2, !dbg !13845
  %383 = zext i16 %382 to i32, !dbg !13845
  %384 = ashr i32 %383, 3, !dbg !13846
  %385 = and i32 %384, 252, !dbg !13847
  %386 = load i16, i16* %7, align 2, !dbg !13848
  %387 = zext i16 %386 to i32, !dbg !13848
  %388 = ashr i32 %387, 9, !dbg !13849
  %389 = and i32 %388, 3, !dbg !13850
  %390 = or i32 %385, %389, !dbg !13851
  %391 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13852
  store i32 %390, i32* %391, align 4, !dbg !13853
  %392 = load i16, i16* %7, align 2, !dbg !13854
  %393 = zext i16 %392 to i32, !dbg !13854
  %394 = shl i32 %393, 3, !dbg !13855
  %395 = and i32 %394, 248, !dbg !13856
  %396 = load i16, i16* %7, align 2, !dbg !13857
  %397 = zext i16 %396 to i32, !dbg !13857
  %398 = ashr i32 %397, 2, !dbg !13858
  %399 = and i32 %398, 7, !dbg !13859
  %400 = or i32 %395, %399, !dbg !13860
  %401 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13861
  store i32 %400, i32* %401, align 4, !dbg !13862
  %402 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13863
  %403 = load i32, i32* %402, align 4, !dbg !13863
  %404 = trunc i32 %403 to i8, !dbg !13864
  %405 = load i8*, i8** %5, align 8, !dbg !13865
  %406 = getelementptr inbounds i8, i8* %405, i32 1, !dbg !13865
  store i8* %406, i8** %5, align 8, !dbg !13865
  store i8 %404, i8* %405, align 1, !dbg !13866
  %407 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13867
  %408 = load i32, i32* %407, align 4, !dbg !13867
  %409 = trunc i32 %408 to i8, !dbg !13868
  %410 = load i8*, i8** %5, align 8, !dbg !13869
  %411 = getelementptr inbounds i8, i8* %410, i32 1, !dbg !13869
  store i8* %411, i8** %5, align 8, !dbg !13869
  store i8 %409, i8* %410, align 1, !dbg !13870
  %412 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13871
  %413 = load i32, i32* %412, align 4, !dbg !13871
  %414 = trunc i32 %413 to i8, !dbg !13872
  %415 = load i8*, i8** %5, align 8, !dbg !13873
  %416 = getelementptr inbounds i8, i8* %415, i32 1, !dbg !13873
  store i8* %416, i8** %5, align 8, !dbg !13873
  store i8 %414, i8* %415, align 1, !dbg !13874
  %417 = load i8*, i8** %5, align 8, !dbg !13875
  %418 = getelementptr inbounds i8, i8* %417, i32 1, !dbg !13875
  store i8* %418, i8** %5, align 8, !dbg !13875
  store i8 0, i8* %417, align 1, !dbg !13876
  br label %13, !dbg !13877, !llvm.loop !13878

; <label>:419:                                    ; preds = %13
  br label %420, !dbg !13879

; <label>:420:                                    ; preds = %424, %419
  %421 = load i8*, i8** %5, align 8, !dbg !13881
  %422 = load i8*, i8** %6, align 8, !dbg !13883
  %423 = icmp ult i8* %421, %422, !dbg !13884
  br i1 %423, label %424, label %475, !dbg !13885

; <label>:424:                                    ; preds = %420
  %425 = load i16*, i16** %4, align 8, !dbg !13886
  %426 = getelementptr inbounds i16, i16* %425, i32 1, !dbg !13886
  store i16* %426, i16** %4, align 8, !dbg !13886
  %427 = load i16, i16* %425, align 2, !dbg !13889
  store i16 %427, i16* %7, align 2, !dbg !13890
  %428 = load i16, i16* %7, align 2, !dbg !13891
  %429 = zext i16 %428 to i32, !dbg !13891
  %430 = ashr i32 %429, 8, !dbg !13892
  %431 = and i32 %430, 248, !dbg !13893
  %432 = load i16, i16* %7, align 2, !dbg !13894
  %433 = zext i16 %432 to i32, !dbg !13894
  %434 = ashr i32 %433, 13, !dbg !13895
  %435 = and i32 %434, 7, !dbg !13896
  %436 = or i32 %431, %435, !dbg !13897
  %437 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13898
  store i32 %436, i32* %437, align 4, !dbg !13899
  %438 = load i16, i16* %7, align 2, !dbg !13900
  %439 = zext i16 %438 to i32, !dbg !13900
  %440 = ashr i32 %439, 3, !dbg !13901
  %441 = and i32 %440, 252, !dbg !13902
  %442 = load i16, i16* %7, align 2, !dbg !13903
  %443 = zext i16 %442 to i32, !dbg !13903
  %444 = ashr i32 %443, 9, !dbg !13904
  %445 = and i32 %444, 3, !dbg !13905
  %446 = or i32 %441, %445, !dbg !13906
  %447 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13907
  store i32 %446, i32* %447, align 4, !dbg !13908
  %448 = load i16, i16* %7, align 2, !dbg !13909
  %449 = zext i16 %448 to i32, !dbg !13909
  %450 = shl i32 %449, 3, !dbg !13910
  %451 = and i32 %450, 248, !dbg !13911
  %452 = load i16, i16* %7, align 2, !dbg !13912
  %453 = zext i16 %452 to i32, !dbg !13912
  %454 = ashr i32 %453, 2, !dbg !13913
  %455 = and i32 %454, 7, !dbg !13914
  %456 = or i32 %451, %455, !dbg !13915
  %457 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13916
  store i32 %456, i32* %457, align 4, !dbg !13917
  %458 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13918
  %459 = load i32, i32* %458, align 4, !dbg !13918
  %460 = trunc i32 %459 to i8, !dbg !13919
  %461 = load i8*, i8** %5, align 8, !dbg !13920
  %462 = getelementptr inbounds i8, i8* %461, i32 1, !dbg !13920
  store i8* %462, i8** %5, align 8, !dbg !13920
  store i8 %460, i8* %461, align 1, !dbg !13921
  %463 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13922
  %464 = load i32, i32* %463, align 4, !dbg !13922
  %465 = trunc i32 %464 to i8, !dbg !13923
  %466 = load i8*, i8** %5, align 8, !dbg !13924
  %467 = getelementptr inbounds i8, i8* %466, i32 1, !dbg !13924
  store i8* %467, i8** %5, align 8, !dbg !13924
  store i8 %465, i8* %466, align 1, !dbg !13925
  %468 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13926
  %469 = load i32, i32* %468, align 4, !dbg !13926
  %470 = trunc i32 %469 to i8, !dbg !13927
  %471 = load i8*, i8** %5, align 8, !dbg !13928
  %472 = getelementptr inbounds i8, i8* %471, i32 1, !dbg !13928
  store i8* %472, i8** %5, align 8, !dbg !13928
  store i8 %470, i8* %471, align 1, !dbg !13929
  %473 = load i8*, i8** %5, align 8, !dbg !13930
  %474 = getelementptr inbounds i8, i8* %473, i32 1, !dbg !13930
  store i8* %474, i8** %5, align 8, !dbg !13930
  store i8 0, i8* %473, align 1, !dbg !13931
  br label %420, !dbg !13932, !llvm.loop !13933

; <label>:475:                                    ; preds = %420
  br label %822, !dbg !13935

; <label>:476:                                    ; preds = %3
  %477 = load i32, i32* @g_xserver_be, align 4, !dbg !13936
  %478 = icmp ne i32 %477, 0, !dbg !13936
  br i1 %478, label %479, label %650, !dbg !13938

; <label>:479:                                    ; preds = %476
  %480 = load i32, i32* @g_host_be, align 4, !dbg !13939
  %481 = icmp ne i32 %480, 0, !dbg !13939
  br i1 %481, label %482, label %570, !dbg !13942

; <label>:482:                                    ; preds = %479
  br label %483, !dbg !13943

; <label>:483:                                    ; preds = %487, %482
  %484 = load i8*, i8** %5, align 8, !dbg !13945
  %485 = load i8*, i8** %6, align 8, !dbg !13947
  %486 = icmp ult i8* %484, %485, !dbg !13948
  br i1 %486, label %487, label %569, !dbg !13949

; <label>:487:                                    ; preds = %483
  %488 = load i16*, i16** %4, align 8, !dbg !13950
  %489 = getelementptr inbounds i16, i16* %488, i32 1, !dbg !13950
  store i16* %489, i16** %4, align 8, !dbg !13950
  %490 = load i16, i16* %488, align 2, !dbg !13952
  store i16 %490, i16* %7, align 2, !dbg !13953
  %491 = load i16, i16* %7, align 2, !dbg !13954
  %492 = zext i16 %491 to i32, !dbg !13954
  %493 = and i32 %492, 255, !dbg !13956
  %494 = shl i32 %493, 8, !dbg !13957
  %495 = load i16, i16* %7, align 2, !dbg !13958
  %496 = zext i16 %495 to i32, !dbg !13958
  %497 = ashr i32 %496, 8, !dbg !13959
  %498 = or i32 %494, %497, !dbg !13960
  %499 = trunc i32 %498 to i16, !dbg !13961
  store i16 %499, i16* %7, align 2, !dbg !13962
  %500 = load i16, i16* %7, align 2, !dbg !13963
  %501 = zext i16 %500 to i32, !dbg !13963
  %502 = ashr i32 %501, 8, !dbg !13965
  %503 = and i32 %502, 248, !dbg !13966
  %504 = load i16, i16* %7, align 2, !dbg !13967
  %505 = zext i16 %504 to i32, !dbg !13967
  %506 = ashr i32 %505, 13, !dbg !13968
  %507 = and i32 %506, 7, !dbg !13969
  %508 = or i32 %503, %507, !dbg !13970
  %509 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13971
  store i32 %508, i32* %509, align 4, !dbg !13972
  %510 = load i16, i16* %7, align 2, !dbg !13973
  %511 = zext i16 %510 to i32, !dbg !13973
  %512 = ashr i32 %511, 3, !dbg !13974
  %513 = and i32 %512, 252, !dbg !13975
  %514 = load i16, i16* %7, align 2, !dbg !13976
  %515 = zext i16 %514 to i32, !dbg !13976
  %516 = ashr i32 %515, 9, !dbg !13977
  %517 = and i32 %516, 3, !dbg !13978
  %518 = or i32 %513, %517, !dbg !13979
  %519 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13980
  store i32 %518, i32* %519, align 4, !dbg !13981
  %520 = load i16, i16* %7, align 2, !dbg !13982
  %521 = zext i16 %520 to i32, !dbg !13982
  %522 = shl i32 %521, 3, !dbg !13983
  %523 = and i32 %522, 248, !dbg !13984
  %524 = load i16, i16* %7, align 2, !dbg !13985
  %525 = zext i16 %524 to i32, !dbg !13985
  %526 = ashr i32 %525, 2, !dbg !13986
  %527 = and i32 %526, 7, !dbg !13987
  %528 = or i32 %523, %527, !dbg !13988
  %529 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !13989
  store i32 %528, i32* %529, align 4, !dbg !13990
  %530 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !13991
  %531 = load i32, i32* %530, align 4, !dbg !13991
  %532 = load i32, i32* @g_red_shift_r, align 4, !dbg !13992
  %533 = lshr i32 %531, %532, !dbg !13993
  %534 = load i32, i32* @g_red_shift_l, align 4, !dbg !13994
  %535 = shl i32 %533, %534, !dbg !13995
  %536 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !13996
  %537 = load i32, i32* %536, align 4, !dbg !13996
  %538 = load i32, i32* @g_green_shift_r, align 4, !dbg !13997
  %539 = lshr i32 %537, %538, !dbg !13998
  %540 = load i32, i32* @g_green_shift_l, align 4, !dbg !13999
  %541 = shl i32 %539, %540, !dbg !14000
  %542 = or i32 %535, %541, !dbg !14001
  %543 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14002
  %544 = load i32, i32* %543, align 4, !dbg !14002
  %545 = load i32, i32* @g_blue_shift_r, align 4, !dbg !14003
  %546 = lshr i32 %544, %545, !dbg !14004
  %547 = load i32, i32* @g_blue_shift_l, align 4, !dbg !14005
  %548 = shl i32 %546, %547, !dbg !14006
  %549 = or i32 %542, %548, !dbg !14007
  store i32 %549, i32* %8, align 4, !dbg !14008
  %550 = load i32, i32* %8, align 4, !dbg !14009
  %551 = lshr i32 %550, 24, !dbg !14011
  %552 = trunc i32 %551 to i8, !dbg !14009
  %553 = load i8*, i8** %5, align 8, !dbg !14012
  %554 = getelementptr inbounds i8, i8* %553, i32 1, !dbg !14012
  store i8* %554, i8** %5, align 8, !dbg !14012
  store i8 %552, i8* %553, align 1, !dbg !14013
  %555 = load i32, i32* %8, align 4, !dbg !14014
  %556 = lshr i32 %555, 16, !dbg !14015
  %557 = trunc i32 %556 to i8, !dbg !14014
  %558 = load i8*, i8** %5, align 8, !dbg !14016
  %559 = getelementptr inbounds i8, i8* %558, i32 1, !dbg !14016
  store i8* %559, i8** %5, align 8, !dbg !14016
  store i8 %557, i8* %558, align 1, !dbg !14017
  %560 = load i32, i32* %8, align 4, !dbg !14018
  %561 = lshr i32 %560, 8, !dbg !14019
  %562 = trunc i32 %561 to i8, !dbg !14018
  %563 = load i8*, i8** %5, align 8, !dbg !14020
  %564 = getelementptr inbounds i8, i8* %563, i32 1, !dbg !14020
  store i8* %564, i8** %5, align 8, !dbg !14020
  store i8 %562, i8* %563, align 1, !dbg !14021
  %565 = load i32, i32* %8, align 4, !dbg !14022
  %566 = trunc i32 %565 to i8, !dbg !14022
  %567 = load i8*, i8** %5, align 8, !dbg !14023
  %568 = getelementptr inbounds i8, i8* %567, i32 1, !dbg !14023
  store i8* %568, i8** %5, align 8, !dbg !14023
  store i8 %566, i8* %567, align 1, !dbg !14024
  br label %483, !dbg !14025, !llvm.loop !14027

; <label>:569:                                    ; preds = %483
  br label %649, !dbg !14028

; <label>:570:                                    ; preds = %479
  br label %571, !dbg !14029

; <label>:571:                                    ; preds = %575, %570
  %572 = load i8*, i8** %5, align 8, !dbg !14031
  %573 = load i8*, i8** %6, align 8, !dbg !14033
  %574 = icmp ult i8* %572, %573, !dbg !14034
  br i1 %574, label %575, label %648, !dbg !14035

; <label>:575:                                    ; preds = %571
  %576 = load i16*, i16** %4, align 8, !dbg !14036
  %577 = getelementptr inbounds i16, i16* %576, i32 1, !dbg !14036
  store i16* %577, i16** %4, align 8, !dbg !14036
  %578 = load i16, i16* %576, align 2, !dbg !14038
  store i16 %578, i16* %7, align 2, !dbg !14039
  %579 = load i16, i16* %7, align 2, !dbg !14040
  %580 = zext i16 %579 to i32, !dbg !14040
  %581 = ashr i32 %580, 8, !dbg !14042
  %582 = and i32 %581, 248, !dbg !14043
  %583 = load i16, i16* %7, align 2, !dbg !14044
  %584 = zext i16 %583 to i32, !dbg !14044
  %585 = ashr i32 %584, 13, !dbg !14045
  %586 = and i32 %585, 7, !dbg !14046
  %587 = or i32 %582, %586, !dbg !14047
  %588 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14048
  store i32 %587, i32* %588, align 4, !dbg !14049
  %589 = load i16, i16* %7, align 2, !dbg !14050
  %590 = zext i16 %589 to i32, !dbg !14050
  %591 = ashr i32 %590, 3, !dbg !14051
  %592 = and i32 %591, 252, !dbg !14052
  %593 = load i16, i16* %7, align 2, !dbg !14053
  %594 = zext i16 %593 to i32, !dbg !14053
  %595 = ashr i32 %594, 9, !dbg !14054
  %596 = and i32 %595, 3, !dbg !14055
  %597 = or i32 %592, %596, !dbg !14056
  %598 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14057
  store i32 %597, i32* %598, align 4, !dbg !14058
  %599 = load i16, i16* %7, align 2, !dbg !14059
  %600 = zext i16 %599 to i32, !dbg !14059
  %601 = shl i32 %600, 3, !dbg !14060
  %602 = and i32 %601, 248, !dbg !14061
  %603 = load i16, i16* %7, align 2, !dbg !14062
  %604 = zext i16 %603 to i32, !dbg !14062
  %605 = ashr i32 %604, 2, !dbg !14063
  %606 = and i32 %605, 7, !dbg !14064
  %607 = or i32 %602, %606, !dbg !14065
  %608 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14066
  store i32 %607, i32* %608, align 4, !dbg !14067
  %609 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14068
  %610 = load i32, i32* %609, align 4, !dbg !14068
  %611 = load i32, i32* @g_red_shift_r, align 4, !dbg !14069
  %612 = lshr i32 %610, %611, !dbg !14070
  %613 = load i32, i32* @g_red_shift_l, align 4, !dbg !14071
  %614 = shl i32 %612, %613, !dbg !14072
  %615 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14073
  %616 = load i32, i32* %615, align 4, !dbg !14073
  %617 = load i32, i32* @g_green_shift_r, align 4, !dbg !14074
  %618 = lshr i32 %616, %617, !dbg !14075
  %619 = load i32, i32* @g_green_shift_l, align 4, !dbg !14076
  %620 = shl i32 %618, %619, !dbg !14077
  %621 = or i32 %614, %620, !dbg !14078
  %622 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14079
  %623 = load i32, i32* %622, align 4, !dbg !14079
  %624 = load i32, i32* @g_blue_shift_r, align 4, !dbg !14080
  %625 = lshr i32 %623, %624, !dbg !14081
  %626 = load i32, i32* @g_blue_shift_l, align 4, !dbg !14082
  %627 = shl i32 %625, %626, !dbg !14083
  %628 = or i32 %621, %627, !dbg !14084
  store i32 %628, i32* %8, align 4, !dbg !14085
  %629 = load i32, i32* %8, align 4, !dbg !14086
  %630 = lshr i32 %629, 24, !dbg !14088
  %631 = trunc i32 %630 to i8, !dbg !14086
  %632 = load i8*, i8** %5, align 8, !dbg !14089
  %633 = getelementptr inbounds i8, i8* %632, i32 1, !dbg !14089
  store i8* %633, i8** %5, align 8, !dbg !14089
  store i8 %631, i8* %632, align 1, !dbg !14090
  %634 = load i32, i32* %8, align 4, !dbg !14091
  %635 = lshr i32 %634, 16, !dbg !14092
  %636 = trunc i32 %635 to i8, !dbg !14091
  %637 = load i8*, i8** %5, align 8, !dbg !14093
  %638 = getelementptr inbounds i8, i8* %637, i32 1, !dbg !14093
  store i8* %638, i8** %5, align 8, !dbg !14093
  store i8 %636, i8* %637, align 1, !dbg !14094
  %639 = load i32, i32* %8, align 4, !dbg !14095
  %640 = lshr i32 %639, 8, !dbg !14096
  %641 = trunc i32 %640 to i8, !dbg !14095
  %642 = load i8*, i8** %5, align 8, !dbg !14097
  %643 = getelementptr inbounds i8, i8* %642, i32 1, !dbg !14097
  store i8* %643, i8** %5, align 8, !dbg !14097
  store i8 %641, i8* %642, align 1, !dbg !14098
  %644 = load i32, i32* %8, align 4, !dbg !14099
  %645 = trunc i32 %644 to i8, !dbg !14099
  %646 = load i8*, i8** %5, align 8, !dbg !14100
  %647 = getelementptr inbounds i8, i8* %646, i32 1, !dbg !14100
  store i8* %647, i8** %5, align 8, !dbg !14100
  store i8 %645, i8* %646, align 1, !dbg !14101
  br label %571, !dbg !14102, !llvm.loop !14104

; <label>:648:                                    ; preds = %571
  br label %649

; <label>:649:                                    ; preds = %648, %569
  br label %821, !dbg !14105

; <label>:650:                                    ; preds = %476
  %651 = load i32, i32* @g_host_be, align 4, !dbg !14106
  %652 = icmp ne i32 %651, 0, !dbg !14106
  br i1 %652, label %653, label %741, !dbg !14109

; <label>:653:                                    ; preds = %650
  br label %654, !dbg !14110

; <label>:654:                                    ; preds = %658, %653
  %655 = load i8*, i8** %5, align 8, !dbg !14112
  %656 = load i8*, i8** %6, align 8, !dbg !14114
  %657 = icmp ult i8* %655, %656, !dbg !14115
  br i1 %657, label %658, label %740, !dbg !14116

; <label>:658:                                    ; preds = %654
  %659 = load i16*, i16** %4, align 8, !dbg !14117
  %660 = getelementptr inbounds i16, i16* %659, i32 1, !dbg !14117
  store i16* %660, i16** %4, align 8, !dbg !14117
  %661 = load i16, i16* %659, align 2, !dbg !14119
  store i16 %661, i16* %7, align 2, !dbg !14120
  %662 = load i16, i16* %7, align 2, !dbg !14121
  %663 = zext i16 %662 to i32, !dbg !14121
  %664 = and i32 %663, 255, !dbg !14123
  %665 = shl i32 %664, 8, !dbg !14124
  %666 = load i16, i16* %7, align 2, !dbg !14125
  %667 = zext i16 %666 to i32, !dbg !14125
  %668 = ashr i32 %667, 8, !dbg !14126
  %669 = or i32 %665, %668, !dbg !14127
  %670 = trunc i32 %669 to i16, !dbg !14128
  store i16 %670, i16* %7, align 2, !dbg !14129
  %671 = load i16, i16* %7, align 2, !dbg !14130
  %672 = zext i16 %671 to i32, !dbg !14130
  %673 = ashr i32 %672, 8, !dbg !14132
  %674 = and i32 %673, 248, !dbg !14133
  %675 = load i16, i16* %7, align 2, !dbg !14134
  %676 = zext i16 %675 to i32, !dbg !14134
  %677 = ashr i32 %676, 13, !dbg !14135
  %678 = and i32 %677, 7, !dbg !14136
  %679 = or i32 %674, %678, !dbg !14137
  %680 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14138
  store i32 %679, i32* %680, align 4, !dbg !14139
  %681 = load i16, i16* %7, align 2, !dbg !14140
  %682 = zext i16 %681 to i32, !dbg !14140
  %683 = ashr i32 %682, 3, !dbg !14141
  %684 = and i32 %683, 252, !dbg !14142
  %685 = load i16, i16* %7, align 2, !dbg !14143
  %686 = zext i16 %685 to i32, !dbg !14143
  %687 = ashr i32 %686, 9, !dbg !14144
  %688 = and i32 %687, 3, !dbg !14145
  %689 = or i32 %684, %688, !dbg !14146
  %690 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14147
  store i32 %689, i32* %690, align 4, !dbg !14148
  %691 = load i16, i16* %7, align 2, !dbg !14149
  %692 = zext i16 %691 to i32, !dbg !14149
  %693 = shl i32 %692, 3, !dbg !14150
  %694 = and i32 %693, 248, !dbg !14151
  %695 = load i16, i16* %7, align 2, !dbg !14152
  %696 = zext i16 %695 to i32, !dbg !14152
  %697 = ashr i32 %696, 2, !dbg !14153
  %698 = and i32 %697, 7, !dbg !14154
  %699 = or i32 %694, %698, !dbg !14155
  %700 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14156
  store i32 %699, i32* %700, align 4, !dbg !14157
  %701 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14158
  %702 = load i32, i32* %701, align 4, !dbg !14158
  %703 = load i32, i32* @g_red_shift_r, align 4, !dbg !14159
  %704 = lshr i32 %702, %703, !dbg !14160
  %705 = load i32, i32* @g_red_shift_l, align 4, !dbg !14161
  %706 = shl i32 %704, %705, !dbg !14162
  %707 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14163
  %708 = load i32, i32* %707, align 4, !dbg !14163
  %709 = load i32, i32* @g_green_shift_r, align 4, !dbg !14164
  %710 = lshr i32 %708, %709, !dbg !14165
  %711 = load i32, i32* @g_green_shift_l, align 4, !dbg !14166
  %712 = shl i32 %710, %711, !dbg !14167
  %713 = or i32 %706, %712, !dbg !14168
  %714 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14169
  %715 = load i32, i32* %714, align 4, !dbg !14169
  %716 = load i32, i32* @g_blue_shift_r, align 4, !dbg !14170
  %717 = lshr i32 %715, %716, !dbg !14171
  %718 = load i32, i32* @g_blue_shift_l, align 4, !dbg !14172
  %719 = shl i32 %717, %718, !dbg !14173
  %720 = or i32 %713, %719, !dbg !14174
  store i32 %720, i32* %8, align 4, !dbg !14175
  %721 = load i32, i32* %8, align 4, !dbg !14176
  %722 = trunc i32 %721 to i8, !dbg !14176
  %723 = load i8*, i8** %5, align 8, !dbg !14178
  %724 = getelementptr inbounds i8, i8* %723, i32 1, !dbg !14178
  store i8* %724, i8** %5, align 8, !dbg !14178
  store i8 %722, i8* %723, align 1, !dbg !14179
  %725 = load i32, i32* %8, align 4, !dbg !14180
  %726 = lshr i32 %725, 8, !dbg !14181
  %727 = trunc i32 %726 to i8, !dbg !14180
  %728 = load i8*, i8** %5, align 8, !dbg !14182
  %729 = getelementptr inbounds i8, i8* %728, i32 1, !dbg !14182
  store i8* %729, i8** %5, align 8, !dbg !14182
  store i8 %727, i8* %728, align 1, !dbg !14183
  %730 = load i32, i32* %8, align 4, !dbg !14184
  %731 = lshr i32 %730, 16, !dbg !14185
  %732 = trunc i32 %731 to i8, !dbg !14184
  %733 = load i8*, i8** %5, align 8, !dbg !14186
  %734 = getelementptr inbounds i8, i8* %733, i32 1, !dbg !14186
  store i8* %734, i8** %5, align 8, !dbg !14186
  store i8 %732, i8* %733, align 1, !dbg !14187
  %735 = load i32, i32* %8, align 4, !dbg !14188
  %736 = lshr i32 %735, 24, !dbg !14189
  %737 = trunc i32 %736 to i8, !dbg !14188
  %738 = load i8*, i8** %5, align 8, !dbg !14190
  %739 = getelementptr inbounds i8, i8* %738, i32 1, !dbg !14190
  store i8* %739, i8** %5, align 8, !dbg !14190
  store i8 %737, i8* %738, align 1, !dbg !14191
  br label %654, !dbg !14192, !llvm.loop !14194

; <label>:740:                                    ; preds = %654
  br label %820, !dbg !14195

; <label>:741:                                    ; preds = %650
  br label %742, !dbg !14196

; <label>:742:                                    ; preds = %746, %741
  %743 = load i8*, i8** %5, align 8, !dbg !14198
  %744 = load i8*, i8** %6, align 8, !dbg !14200
  %745 = icmp ult i8* %743, %744, !dbg !14201
  br i1 %745, label %746, label %819, !dbg !14202

; <label>:746:                                    ; preds = %742
  %747 = load i16*, i16** %4, align 8, !dbg !14203
  %748 = getelementptr inbounds i16, i16* %747, i32 1, !dbg !14203
  store i16* %748, i16** %4, align 8, !dbg !14203
  %749 = load i16, i16* %747, align 2, !dbg !14205
  store i16 %749, i16* %7, align 2, !dbg !14206
  %750 = load i16, i16* %7, align 2, !dbg !14207
  %751 = zext i16 %750 to i32, !dbg !14207
  %752 = ashr i32 %751, 8, !dbg !14209
  %753 = and i32 %752, 248, !dbg !14210
  %754 = load i16, i16* %7, align 2, !dbg !14211
  %755 = zext i16 %754 to i32, !dbg !14211
  %756 = ashr i32 %755, 13, !dbg !14212
  %757 = and i32 %756, 7, !dbg !14213
  %758 = or i32 %753, %757, !dbg !14214
  %759 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14215
  store i32 %758, i32* %759, align 4, !dbg !14216
  %760 = load i16, i16* %7, align 2, !dbg !14217
  %761 = zext i16 %760 to i32, !dbg !14217
  %762 = ashr i32 %761, 3, !dbg !14218
  %763 = and i32 %762, 252, !dbg !14219
  %764 = load i16, i16* %7, align 2, !dbg !14220
  %765 = zext i16 %764 to i32, !dbg !14220
  %766 = ashr i32 %765, 9, !dbg !14221
  %767 = and i32 %766, 3, !dbg !14222
  %768 = or i32 %763, %767, !dbg !14223
  %769 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14224
  store i32 %768, i32* %769, align 4, !dbg !14225
  %770 = load i16, i16* %7, align 2, !dbg !14226
  %771 = zext i16 %770 to i32, !dbg !14226
  %772 = shl i32 %771, 3, !dbg !14227
  %773 = and i32 %772, 248, !dbg !14228
  %774 = load i16, i16* %7, align 2, !dbg !14229
  %775 = zext i16 %774 to i32, !dbg !14229
  %776 = ashr i32 %775, 2, !dbg !14230
  %777 = and i32 %776, 7, !dbg !14231
  %778 = or i32 %773, %777, !dbg !14232
  %779 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14233
  store i32 %778, i32* %779, align 4, !dbg !14234
  %780 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14235
  %781 = load i32, i32* %780, align 4, !dbg !14235
  %782 = load i32, i32* @g_red_shift_r, align 4, !dbg !14236
  %783 = lshr i32 %781, %782, !dbg !14237
  %784 = load i32, i32* @g_red_shift_l, align 4, !dbg !14238
  %785 = shl i32 %783, %784, !dbg !14239
  %786 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14240
  %787 = load i32, i32* %786, align 4, !dbg !14240
  %788 = load i32, i32* @g_green_shift_r, align 4, !dbg !14241
  %789 = lshr i32 %787, %788, !dbg !14242
  %790 = load i32, i32* @g_green_shift_l, align 4, !dbg !14243
  %791 = shl i32 %789, %790, !dbg !14244
  %792 = or i32 %785, %791, !dbg !14245
  %793 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14246
  %794 = load i32, i32* %793, align 4, !dbg !14246
  %795 = load i32, i32* @g_blue_shift_r, align 4, !dbg !14247
  %796 = lshr i32 %794, %795, !dbg !14248
  %797 = load i32, i32* @g_blue_shift_l, align 4, !dbg !14249
  %798 = shl i32 %796, %797, !dbg !14250
  %799 = or i32 %792, %798, !dbg !14251
  store i32 %799, i32* %8, align 4, !dbg !14252
  %800 = load i32, i32* %8, align 4, !dbg !14253
  %801 = trunc i32 %800 to i8, !dbg !14253
  %802 = load i8*, i8** %5, align 8, !dbg !14255
  %803 = getelementptr inbounds i8, i8* %802, i32 1, !dbg !14255
  store i8* %803, i8** %5, align 8, !dbg !14255
  store i8 %801, i8* %802, align 1, !dbg !14256
  %804 = load i32, i32* %8, align 4, !dbg !14257
  %805 = lshr i32 %804, 8, !dbg !14258
  %806 = trunc i32 %805 to i8, !dbg !14257
  %807 = load i8*, i8** %5, align 8, !dbg !14259
  %808 = getelementptr inbounds i8, i8* %807, i32 1, !dbg !14259
  store i8* %808, i8** %5, align 8, !dbg !14259
  store i8 %806, i8* %807, align 1, !dbg !14260
  %809 = load i32, i32* %8, align 4, !dbg !14261
  %810 = lshr i32 %809, 16, !dbg !14262
  %811 = trunc i32 %810 to i8, !dbg !14261
  %812 = load i8*, i8** %5, align 8, !dbg !14263
  %813 = getelementptr inbounds i8, i8* %812, i32 1, !dbg !14263
  store i8* %813, i8** %5, align 8, !dbg !14263
  store i8 %811, i8* %812, align 1, !dbg !14264
  %814 = load i32, i32* %8, align 4, !dbg !14265
  %815 = lshr i32 %814, 24, !dbg !14266
  %816 = trunc i32 %815 to i8, !dbg !14265
  %817 = load i8*, i8** %5, align 8, !dbg !14267
  %818 = getelementptr inbounds i8, i8* %817, i32 1, !dbg !14267
  store i8* %818, i8** %5, align 8, !dbg !14267
  store i8 %816, i8* %817, align 1, !dbg !14268
  br label %742, !dbg !14269, !llvm.loop !14271

; <label>:819:                                    ; preds = %742
  br label %820

; <label>:820:                                    ; preds = %819, %740
  br label %821

; <label>:821:                                    ; preds = %820, %649
  br label %822

; <label>:822:                                    ; preds = %821, %475
  ret void, !dbg !14272
}

; Function Attrs: nounwind uwtable
define internal void @translate16to24(i16*, i8*, i8*) #0 !dbg !14273 {
  %4 = alloca i16*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca %struct.PixelColour, align 4
  store i16* %0, i16** %4, align 8
  call void @llvm.dbg.declare(metadata i16** %4, metadata !14274, metadata !416), !dbg !14275
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !14276, metadata !416), !dbg !14277
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !14278, metadata !416), !dbg !14279
  call void @llvm.dbg.declare(metadata i32* %7, metadata !14280, metadata !416), !dbg !14281
  call void @llvm.dbg.declare(metadata i16* %8, metadata !14282, metadata !416), !dbg !14283
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %9, metadata !14284, metadata !416), !dbg !14285
  %10 = load i32, i32* @g_compatible_arch, align 4, !dbg !14286
  %11 = icmp ne i32 %10, 0, !dbg !14286
  br i1 %11, label %12, label %458, !dbg !14288

; <label>:12:                                     ; preds = %3
  br label %13, !dbg !14289

; <label>:13:                                     ; preds = %18, %12
  %14 = load i8*, i8** %5, align 8, !dbg !14292
  %15 = load i8*, i8** %6, align 8, !dbg !14294
  %16 = getelementptr inbounds i8, i8* %15, i64 -24, !dbg !14295
  %17 = icmp ule i8* %14, %16, !dbg !14296
  br i1 %17, label %18, label %403, !dbg !14297

; <label>:18:                                     ; preds = %13
  %19 = load i16*, i16** %4, align 8, !dbg !14298
  %20 = getelementptr inbounds i16, i16* %19, i32 1, !dbg !14298
  store i16* %20, i16** %4, align 8, !dbg !14298
  %21 = load i16, i16* %19, align 2, !dbg !14301
  store i16 %21, i16* %8, align 2, !dbg !14302
  %22 = load i16, i16* %8, align 2, !dbg !14303
  %23 = zext i16 %22 to i32, !dbg !14303
  %24 = ashr i32 %23, 8, !dbg !14304
  %25 = and i32 %24, 248, !dbg !14305
  %26 = load i16, i16* %8, align 2, !dbg !14306
  %27 = zext i16 %26 to i32, !dbg !14306
  %28 = ashr i32 %27, 13, !dbg !14307
  %29 = and i32 %28, 7, !dbg !14308
  %30 = or i32 %25, %29, !dbg !14309
  %31 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14310
  store i32 %30, i32* %31, align 4, !dbg !14311
  %32 = load i16, i16* %8, align 2, !dbg !14312
  %33 = zext i16 %32 to i32, !dbg !14312
  %34 = ashr i32 %33, 3, !dbg !14313
  %35 = and i32 %34, 252, !dbg !14314
  %36 = load i16, i16* %8, align 2, !dbg !14315
  %37 = zext i16 %36 to i32, !dbg !14315
  %38 = ashr i32 %37, 9, !dbg !14316
  %39 = and i32 %38, 3, !dbg !14317
  %40 = or i32 %35, %39, !dbg !14318
  %41 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14319
  store i32 %40, i32* %41, align 4, !dbg !14320
  %42 = load i16, i16* %8, align 2, !dbg !14321
  %43 = zext i16 %42 to i32, !dbg !14321
  %44 = shl i32 %43, 3, !dbg !14322
  %45 = and i32 %44, 248, !dbg !14323
  %46 = load i16, i16* %8, align 2, !dbg !14324
  %47 = zext i16 %46 to i32, !dbg !14324
  %48 = ashr i32 %47, 2, !dbg !14325
  %49 = and i32 %48, 7, !dbg !14326
  %50 = or i32 %45, %49, !dbg !14327
  %51 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14328
  store i32 %50, i32* %51, align 4, !dbg !14329
  %52 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14330
  %53 = load i32, i32* %52, align 4, !dbg !14330
  %54 = trunc i32 %53 to i8, !dbg !14331
  %55 = load i8*, i8** %5, align 8, !dbg !14332
  %56 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !14332
  store i8* %56, i8** %5, align 8, !dbg !14332
  store i8 %54, i8* %55, align 1, !dbg !14333
  %57 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14334
  %58 = load i32, i32* %57, align 4, !dbg !14334
  %59 = trunc i32 %58 to i8, !dbg !14335
  %60 = load i8*, i8** %5, align 8, !dbg !14336
  %61 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !14336
  store i8* %61, i8** %5, align 8, !dbg !14336
  store i8 %59, i8* %60, align 1, !dbg !14337
  %62 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14338
  %63 = load i32, i32* %62, align 4, !dbg !14338
  %64 = trunc i32 %63 to i8, !dbg !14339
  %65 = load i8*, i8** %5, align 8, !dbg !14340
  %66 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !14340
  store i8* %66, i8** %5, align 8, !dbg !14340
  store i8 %64, i8* %65, align 1, !dbg !14341
  %67 = load i16*, i16** %4, align 8, !dbg !14342
  %68 = getelementptr inbounds i16, i16* %67, i32 1, !dbg !14342
  store i16* %68, i16** %4, align 8, !dbg !14342
  %69 = load i16, i16* %67, align 2, !dbg !14343
  store i16 %69, i16* %8, align 2, !dbg !14344
  %70 = load i16, i16* %8, align 2, !dbg !14345
  %71 = zext i16 %70 to i32, !dbg !14345
  %72 = ashr i32 %71, 8, !dbg !14346
  %73 = and i32 %72, 248, !dbg !14347
  %74 = load i16, i16* %8, align 2, !dbg !14348
  %75 = zext i16 %74 to i32, !dbg !14348
  %76 = ashr i32 %75, 13, !dbg !14349
  %77 = and i32 %76, 7, !dbg !14350
  %78 = or i32 %73, %77, !dbg !14351
  %79 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14352
  store i32 %78, i32* %79, align 4, !dbg !14353
  %80 = load i16, i16* %8, align 2, !dbg !14354
  %81 = zext i16 %80 to i32, !dbg !14354
  %82 = ashr i32 %81, 3, !dbg !14355
  %83 = and i32 %82, 252, !dbg !14356
  %84 = load i16, i16* %8, align 2, !dbg !14357
  %85 = zext i16 %84 to i32, !dbg !14357
  %86 = ashr i32 %85, 9, !dbg !14358
  %87 = and i32 %86, 3, !dbg !14359
  %88 = or i32 %83, %87, !dbg !14360
  %89 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14361
  store i32 %88, i32* %89, align 4, !dbg !14362
  %90 = load i16, i16* %8, align 2, !dbg !14363
  %91 = zext i16 %90 to i32, !dbg !14363
  %92 = shl i32 %91, 3, !dbg !14364
  %93 = and i32 %92, 248, !dbg !14365
  %94 = load i16, i16* %8, align 2, !dbg !14366
  %95 = zext i16 %94 to i32, !dbg !14366
  %96 = ashr i32 %95, 2, !dbg !14367
  %97 = and i32 %96, 7, !dbg !14368
  %98 = or i32 %93, %97, !dbg !14369
  %99 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14370
  store i32 %98, i32* %99, align 4, !dbg !14371
  %100 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14372
  %101 = load i32, i32* %100, align 4, !dbg !14372
  %102 = trunc i32 %101 to i8, !dbg !14373
  %103 = load i8*, i8** %5, align 8, !dbg !14374
  %104 = getelementptr inbounds i8, i8* %103, i32 1, !dbg !14374
  store i8* %104, i8** %5, align 8, !dbg !14374
  store i8 %102, i8* %103, align 1, !dbg !14375
  %105 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14376
  %106 = load i32, i32* %105, align 4, !dbg !14376
  %107 = trunc i32 %106 to i8, !dbg !14377
  %108 = load i8*, i8** %5, align 8, !dbg !14378
  %109 = getelementptr inbounds i8, i8* %108, i32 1, !dbg !14378
  store i8* %109, i8** %5, align 8, !dbg !14378
  store i8 %107, i8* %108, align 1, !dbg !14379
  %110 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14380
  %111 = load i32, i32* %110, align 4, !dbg !14380
  %112 = trunc i32 %111 to i8, !dbg !14381
  %113 = load i8*, i8** %5, align 8, !dbg !14382
  %114 = getelementptr inbounds i8, i8* %113, i32 1, !dbg !14382
  store i8* %114, i8** %5, align 8, !dbg !14382
  store i8 %112, i8* %113, align 1, !dbg !14383
  %115 = load i16*, i16** %4, align 8, !dbg !14384
  %116 = getelementptr inbounds i16, i16* %115, i32 1, !dbg !14384
  store i16* %116, i16** %4, align 8, !dbg !14384
  %117 = load i16, i16* %115, align 2, !dbg !14385
  store i16 %117, i16* %8, align 2, !dbg !14386
  %118 = load i16, i16* %8, align 2, !dbg !14387
  %119 = zext i16 %118 to i32, !dbg !14387
  %120 = ashr i32 %119, 8, !dbg !14388
  %121 = and i32 %120, 248, !dbg !14389
  %122 = load i16, i16* %8, align 2, !dbg !14390
  %123 = zext i16 %122 to i32, !dbg !14390
  %124 = ashr i32 %123, 13, !dbg !14391
  %125 = and i32 %124, 7, !dbg !14392
  %126 = or i32 %121, %125, !dbg !14393
  %127 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14394
  store i32 %126, i32* %127, align 4, !dbg !14395
  %128 = load i16, i16* %8, align 2, !dbg !14396
  %129 = zext i16 %128 to i32, !dbg !14396
  %130 = ashr i32 %129, 3, !dbg !14397
  %131 = and i32 %130, 252, !dbg !14398
  %132 = load i16, i16* %8, align 2, !dbg !14399
  %133 = zext i16 %132 to i32, !dbg !14399
  %134 = ashr i32 %133, 9, !dbg !14400
  %135 = and i32 %134, 3, !dbg !14401
  %136 = or i32 %131, %135, !dbg !14402
  %137 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14403
  store i32 %136, i32* %137, align 4, !dbg !14404
  %138 = load i16, i16* %8, align 2, !dbg !14405
  %139 = zext i16 %138 to i32, !dbg !14405
  %140 = shl i32 %139, 3, !dbg !14406
  %141 = and i32 %140, 248, !dbg !14407
  %142 = load i16, i16* %8, align 2, !dbg !14408
  %143 = zext i16 %142 to i32, !dbg !14408
  %144 = ashr i32 %143, 2, !dbg !14409
  %145 = and i32 %144, 7, !dbg !14410
  %146 = or i32 %141, %145, !dbg !14411
  %147 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14412
  store i32 %146, i32* %147, align 4, !dbg !14413
  %148 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14414
  %149 = load i32, i32* %148, align 4, !dbg !14414
  %150 = trunc i32 %149 to i8, !dbg !14415
  %151 = load i8*, i8** %5, align 8, !dbg !14416
  %152 = getelementptr inbounds i8, i8* %151, i32 1, !dbg !14416
  store i8* %152, i8** %5, align 8, !dbg !14416
  store i8 %150, i8* %151, align 1, !dbg !14417
  %153 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14418
  %154 = load i32, i32* %153, align 4, !dbg !14418
  %155 = trunc i32 %154 to i8, !dbg !14419
  %156 = load i8*, i8** %5, align 8, !dbg !14420
  %157 = getelementptr inbounds i8, i8* %156, i32 1, !dbg !14420
  store i8* %157, i8** %5, align 8, !dbg !14420
  store i8 %155, i8* %156, align 1, !dbg !14421
  %158 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14422
  %159 = load i32, i32* %158, align 4, !dbg !14422
  %160 = trunc i32 %159 to i8, !dbg !14423
  %161 = load i8*, i8** %5, align 8, !dbg !14424
  %162 = getelementptr inbounds i8, i8* %161, i32 1, !dbg !14424
  store i8* %162, i8** %5, align 8, !dbg !14424
  store i8 %160, i8* %161, align 1, !dbg !14425
  %163 = load i16*, i16** %4, align 8, !dbg !14426
  %164 = getelementptr inbounds i16, i16* %163, i32 1, !dbg !14426
  store i16* %164, i16** %4, align 8, !dbg !14426
  %165 = load i16, i16* %163, align 2, !dbg !14427
  store i16 %165, i16* %8, align 2, !dbg !14428
  %166 = load i16, i16* %8, align 2, !dbg !14429
  %167 = zext i16 %166 to i32, !dbg !14429
  %168 = ashr i32 %167, 8, !dbg !14430
  %169 = and i32 %168, 248, !dbg !14431
  %170 = load i16, i16* %8, align 2, !dbg !14432
  %171 = zext i16 %170 to i32, !dbg !14432
  %172 = ashr i32 %171, 13, !dbg !14433
  %173 = and i32 %172, 7, !dbg !14434
  %174 = or i32 %169, %173, !dbg !14435
  %175 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14436
  store i32 %174, i32* %175, align 4, !dbg !14437
  %176 = load i16, i16* %8, align 2, !dbg !14438
  %177 = zext i16 %176 to i32, !dbg !14438
  %178 = ashr i32 %177, 3, !dbg !14439
  %179 = and i32 %178, 252, !dbg !14440
  %180 = load i16, i16* %8, align 2, !dbg !14441
  %181 = zext i16 %180 to i32, !dbg !14441
  %182 = ashr i32 %181, 9, !dbg !14442
  %183 = and i32 %182, 3, !dbg !14443
  %184 = or i32 %179, %183, !dbg !14444
  %185 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14445
  store i32 %184, i32* %185, align 4, !dbg !14446
  %186 = load i16, i16* %8, align 2, !dbg !14447
  %187 = zext i16 %186 to i32, !dbg !14447
  %188 = shl i32 %187, 3, !dbg !14448
  %189 = and i32 %188, 248, !dbg !14449
  %190 = load i16, i16* %8, align 2, !dbg !14450
  %191 = zext i16 %190 to i32, !dbg !14450
  %192 = ashr i32 %191, 2, !dbg !14451
  %193 = and i32 %192, 7, !dbg !14452
  %194 = or i32 %189, %193, !dbg !14453
  %195 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14454
  store i32 %194, i32* %195, align 4, !dbg !14455
  %196 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14456
  %197 = load i32, i32* %196, align 4, !dbg !14456
  %198 = trunc i32 %197 to i8, !dbg !14457
  %199 = load i8*, i8** %5, align 8, !dbg !14458
  %200 = getelementptr inbounds i8, i8* %199, i32 1, !dbg !14458
  store i8* %200, i8** %5, align 8, !dbg !14458
  store i8 %198, i8* %199, align 1, !dbg !14459
  %201 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14460
  %202 = load i32, i32* %201, align 4, !dbg !14460
  %203 = trunc i32 %202 to i8, !dbg !14461
  %204 = load i8*, i8** %5, align 8, !dbg !14462
  %205 = getelementptr inbounds i8, i8* %204, i32 1, !dbg !14462
  store i8* %205, i8** %5, align 8, !dbg !14462
  store i8 %203, i8* %204, align 1, !dbg !14463
  %206 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14464
  %207 = load i32, i32* %206, align 4, !dbg !14464
  %208 = trunc i32 %207 to i8, !dbg !14465
  %209 = load i8*, i8** %5, align 8, !dbg !14466
  %210 = getelementptr inbounds i8, i8* %209, i32 1, !dbg !14466
  store i8* %210, i8** %5, align 8, !dbg !14466
  store i8 %208, i8* %209, align 1, !dbg !14467
  %211 = load i16*, i16** %4, align 8, !dbg !14468
  %212 = getelementptr inbounds i16, i16* %211, i32 1, !dbg !14468
  store i16* %212, i16** %4, align 8, !dbg !14468
  %213 = load i16, i16* %211, align 2, !dbg !14469
  store i16 %213, i16* %8, align 2, !dbg !14470
  %214 = load i16, i16* %8, align 2, !dbg !14471
  %215 = zext i16 %214 to i32, !dbg !14471
  %216 = ashr i32 %215, 8, !dbg !14472
  %217 = and i32 %216, 248, !dbg !14473
  %218 = load i16, i16* %8, align 2, !dbg !14474
  %219 = zext i16 %218 to i32, !dbg !14474
  %220 = ashr i32 %219, 13, !dbg !14475
  %221 = and i32 %220, 7, !dbg !14476
  %222 = or i32 %217, %221, !dbg !14477
  %223 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14478
  store i32 %222, i32* %223, align 4, !dbg !14479
  %224 = load i16, i16* %8, align 2, !dbg !14480
  %225 = zext i16 %224 to i32, !dbg !14480
  %226 = ashr i32 %225, 3, !dbg !14481
  %227 = and i32 %226, 252, !dbg !14482
  %228 = load i16, i16* %8, align 2, !dbg !14483
  %229 = zext i16 %228 to i32, !dbg !14483
  %230 = ashr i32 %229, 9, !dbg !14484
  %231 = and i32 %230, 3, !dbg !14485
  %232 = or i32 %227, %231, !dbg !14486
  %233 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14487
  store i32 %232, i32* %233, align 4, !dbg !14488
  %234 = load i16, i16* %8, align 2, !dbg !14489
  %235 = zext i16 %234 to i32, !dbg !14489
  %236 = shl i32 %235, 3, !dbg !14490
  %237 = and i32 %236, 248, !dbg !14491
  %238 = load i16, i16* %8, align 2, !dbg !14492
  %239 = zext i16 %238 to i32, !dbg !14492
  %240 = ashr i32 %239, 2, !dbg !14493
  %241 = and i32 %240, 7, !dbg !14494
  %242 = or i32 %237, %241, !dbg !14495
  %243 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14496
  store i32 %242, i32* %243, align 4, !dbg !14497
  %244 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14498
  %245 = load i32, i32* %244, align 4, !dbg !14498
  %246 = trunc i32 %245 to i8, !dbg !14499
  %247 = load i8*, i8** %5, align 8, !dbg !14500
  %248 = getelementptr inbounds i8, i8* %247, i32 1, !dbg !14500
  store i8* %248, i8** %5, align 8, !dbg !14500
  store i8 %246, i8* %247, align 1, !dbg !14501
  %249 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14502
  %250 = load i32, i32* %249, align 4, !dbg !14502
  %251 = trunc i32 %250 to i8, !dbg !14503
  %252 = load i8*, i8** %5, align 8, !dbg !14504
  %253 = getelementptr inbounds i8, i8* %252, i32 1, !dbg !14504
  store i8* %253, i8** %5, align 8, !dbg !14504
  store i8 %251, i8* %252, align 1, !dbg !14505
  %254 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14506
  %255 = load i32, i32* %254, align 4, !dbg !14506
  %256 = trunc i32 %255 to i8, !dbg !14507
  %257 = load i8*, i8** %5, align 8, !dbg !14508
  %258 = getelementptr inbounds i8, i8* %257, i32 1, !dbg !14508
  store i8* %258, i8** %5, align 8, !dbg !14508
  store i8 %256, i8* %257, align 1, !dbg !14509
  %259 = load i16*, i16** %4, align 8, !dbg !14510
  %260 = getelementptr inbounds i16, i16* %259, i32 1, !dbg !14510
  store i16* %260, i16** %4, align 8, !dbg !14510
  %261 = load i16, i16* %259, align 2, !dbg !14511
  store i16 %261, i16* %8, align 2, !dbg !14512
  %262 = load i16, i16* %8, align 2, !dbg !14513
  %263 = zext i16 %262 to i32, !dbg !14513
  %264 = ashr i32 %263, 8, !dbg !14514
  %265 = and i32 %264, 248, !dbg !14515
  %266 = load i16, i16* %8, align 2, !dbg !14516
  %267 = zext i16 %266 to i32, !dbg !14516
  %268 = ashr i32 %267, 13, !dbg !14517
  %269 = and i32 %268, 7, !dbg !14518
  %270 = or i32 %265, %269, !dbg !14519
  %271 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14520
  store i32 %270, i32* %271, align 4, !dbg !14521
  %272 = load i16, i16* %8, align 2, !dbg !14522
  %273 = zext i16 %272 to i32, !dbg !14522
  %274 = ashr i32 %273, 3, !dbg !14523
  %275 = and i32 %274, 252, !dbg !14524
  %276 = load i16, i16* %8, align 2, !dbg !14525
  %277 = zext i16 %276 to i32, !dbg !14525
  %278 = ashr i32 %277, 9, !dbg !14526
  %279 = and i32 %278, 3, !dbg !14527
  %280 = or i32 %275, %279, !dbg !14528
  %281 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14529
  store i32 %280, i32* %281, align 4, !dbg !14530
  %282 = load i16, i16* %8, align 2, !dbg !14531
  %283 = zext i16 %282 to i32, !dbg !14531
  %284 = shl i32 %283, 3, !dbg !14532
  %285 = and i32 %284, 248, !dbg !14533
  %286 = load i16, i16* %8, align 2, !dbg !14534
  %287 = zext i16 %286 to i32, !dbg !14534
  %288 = ashr i32 %287, 2, !dbg !14535
  %289 = and i32 %288, 7, !dbg !14536
  %290 = or i32 %285, %289, !dbg !14537
  %291 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14538
  store i32 %290, i32* %291, align 4, !dbg !14539
  %292 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14540
  %293 = load i32, i32* %292, align 4, !dbg !14540
  %294 = trunc i32 %293 to i8, !dbg !14541
  %295 = load i8*, i8** %5, align 8, !dbg !14542
  %296 = getelementptr inbounds i8, i8* %295, i32 1, !dbg !14542
  store i8* %296, i8** %5, align 8, !dbg !14542
  store i8 %294, i8* %295, align 1, !dbg !14543
  %297 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14544
  %298 = load i32, i32* %297, align 4, !dbg !14544
  %299 = trunc i32 %298 to i8, !dbg !14545
  %300 = load i8*, i8** %5, align 8, !dbg !14546
  %301 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !14546
  store i8* %301, i8** %5, align 8, !dbg !14546
  store i8 %299, i8* %300, align 1, !dbg !14547
  %302 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14548
  %303 = load i32, i32* %302, align 4, !dbg !14548
  %304 = trunc i32 %303 to i8, !dbg !14549
  %305 = load i8*, i8** %5, align 8, !dbg !14550
  %306 = getelementptr inbounds i8, i8* %305, i32 1, !dbg !14550
  store i8* %306, i8** %5, align 8, !dbg !14550
  store i8 %304, i8* %305, align 1, !dbg !14551
  %307 = load i16*, i16** %4, align 8, !dbg !14552
  %308 = getelementptr inbounds i16, i16* %307, i32 1, !dbg !14552
  store i16* %308, i16** %4, align 8, !dbg !14552
  %309 = load i16, i16* %307, align 2, !dbg !14553
  store i16 %309, i16* %8, align 2, !dbg !14554
  %310 = load i16, i16* %8, align 2, !dbg !14555
  %311 = zext i16 %310 to i32, !dbg !14555
  %312 = ashr i32 %311, 8, !dbg !14556
  %313 = and i32 %312, 248, !dbg !14557
  %314 = load i16, i16* %8, align 2, !dbg !14558
  %315 = zext i16 %314 to i32, !dbg !14558
  %316 = ashr i32 %315, 13, !dbg !14559
  %317 = and i32 %316, 7, !dbg !14560
  %318 = or i32 %313, %317, !dbg !14561
  %319 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14562
  store i32 %318, i32* %319, align 4, !dbg !14563
  %320 = load i16, i16* %8, align 2, !dbg !14564
  %321 = zext i16 %320 to i32, !dbg !14564
  %322 = ashr i32 %321, 3, !dbg !14565
  %323 = and i32 %322, 252, !dbg !14566
  %324 = load i16, i16* %8, align 2, !dbg !14567
  %325 = zext i16 %324 to i32, !dbg !14567
  %326 = ashr i32 %325, 9, !dbg !14568
  %327 = and i32 %326, 3, !dbg !14569
  %328 = or i32 %323, %327, !dbg !14570
  %329 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14571
  store i32 %328, i32* %329, align 4, !dbg !14572
  %330 = load i16, i16* %8, align 2, !dbg !14573
  %331 = zext i16 %330 to i32, !dbg !14573
  %332 = shl i32 %331, 3, !dbg !14574
  %333 = and i32 %332, 248, !dbg !14575
  %334 = load i16, i16* %8, align 2, !dbg !14576
  %335 = zext i16 %334 to i32, !dbg !14576
  %336 = ashr i32 %335, 2, !dbg !14577
  %337 = and i32 %336, 7, !dbg !14578
  %338 = or i32 %333, %337, !dbg !14579
  %339 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14580
  store i32 %338, i32* %339, align 4, !dbg !14581
  %340 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14582
  %341 = load i32, i32* %340, align 4, !dbg !14582
  %342 = trunc i32 %341 to i8, !dbg !14583
  %343 = load i8*, i8** %5, align 8, !dbg !14584
  %344 = getelementptr inbounds i8, i8* %343, i32 1, !dbg !14584
  store i8* %344, i8** %5, align 8, !dbg !14584
  store i8 %342, i8* %343, align 1, !dbg !14585
  %345 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14586
  %346 = load i32, i32* %345, align 4, !dbg !14586
  %347 = trunc i32 %346 to i8, !dbg !14587
  %348 = load i8*, i8** %5, align 8, !dbg !14588
  %349 = getelementptr inbounds i8, i8* %348, i32 1, !dbg !14588
  store i8* %349, i8** %5, align 8, !dbg !14588
  store i8 %347, i8* %348, align 1, !dbg !14589
  %350 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14590
  %351 = load i32, i32* %350, align 4, !dbg !14590
  %352 = trunc i32 %351 to i8, !dbg !14591
  %353 = load i8*, i8** %5, align 8, !dbg !14592
  %354 = getelementptr inbounds i8, i8* %353, i32 1, !dbg !14592
  store i8* %354, i8** %5, align 8, !dbg !14592
  store i8 %352, i8* %353, align 1, !dbg !14593
  %355 = load i16*, i16** %4, align 8, !dbg !14594
  %356 = getelementptr inbounds i16, i16* %355, i32 1, !dbg !14594
  store i16* %356, i16** %4, align 8, !dbg !14594
  %357 = load i16, i16* %355, align 2, !dbg !14595
  store i16 %357, i16* %8, align 2, !dbg !14596
  %358 = load i16, i16* %8, align 2, !dbg !14597
  %359 = zext i16 %358 to i32, !dbg !14597
  %360 = ashr i32 %359, 8, !dbg !14598
  %361 = and i32 %360, 248, !dbg !14599
  %362 = load i16, i16* %8, align 2, !dbg !14600
  %363 = zext i16 %362 to i32, !dbg !14600
  %364 = ashr i32 %363, 13, !dbg !14601
  %365 = and i32 %364, 7, !dbg !14602
  %366 = or i32 %361, %365, !dbg !14603
  %367 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14604
  store i32 %366, i32* %367, align 4, !dbg !14605
  %368 = load i16, i16* %8, align 2, !dbg !14606
  %369 = zext i16 %368 to i32, !dbg !14606
  %370 = ashr i32 %369, 3, !dbg !14607
  %371 = and i32 %370, 252, !dbg !14608
  %372 = load i16, i16* %8, align 2, !dbg !14609
  %373 = zext i16 %372 to i32, !dbg !14609
  %374 = ashr i32 %373, 9, !dbg !14610
  %375 = and i32 %374, 3, !dbg !14611
  %376 = or i32 %371, %375, !dbg !14612
  %377 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14613
  store i32 %376, i32* %377, align 4, !dbg !14614
  %378 = load i16, i16* %8, align 2, !dbg !14615
  %379 = zext i16 %378 to i32, !dbg !14615
  %380 = shl i32 %379, 3, !dbg !14616
  %381 = and i32 %380, 248, !dbg !14617
  %382 = load i16, i16* %8, align 2, !dbg !14618
  %383 = zext i16 %382 to i32, !dbg !14618
  %384 = ashr i32 %383, 2, !dbg !14619
  %385 = and i32 %384, 7, !dbg !14620
  %386 = or i32 %381, %385, !dbg !14621
  %387 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14622
  store i32 %386, i32* %387, align 4, !dbg !14623
  %388 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14624
  %389 = load i32, i32* %388, align 4, !dbg !14624
  %390 = trunc i32 %389 to i8, !dbg !14625
  %391 = load i8*, i8** %5, align 8, !dbg !14626
  %392 = getelementptr inbounds i8, i8* %391, i32 1, !dbg !14626
  store i8* %392, i8** %5, align 8, !dbg !14626
  store i8 %390, i8* %391, align 1, !dbg !14627
  %393 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14628
  %394 = load i32, i32* %393, align 4, !dbg !14628
  %395 = trunc i32 %394 to i8, !dbg !14629
  %396 = load i8*, i8** %5, align 8, !dbg !14630
  %397 = getelementptr inbounds i8, i8* %396, i32 1, !dbg !14630
  store i8* %397, i8** %5, align 8, !dbg !14630
  store i8 %395, i8* %396, align 1, !dbg !14631
  %398 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14632
  %399 = load i32, i32* %398, align 4, !dbg !14632
  %400 = trunc i32 %399 to i8, !dbg !14633
  %401 = load i8*, i8** %5, align 8, !dbg !14634
  %402 = getelementptr inbounds i8, i8* %401, i32 1, !dbg !14634
  store i8* %402, i8** %5, align 8, !dbg !14634
  store i8 %400, i8* %401, align 1, !dbg !14635
  br label %13, !dbg !14636, !llvm.loop !14637

; <label>:403:                                    ; preds = %13
  br label %404, !dbg !14638

; <label>:404:                                    ; preds = %408, %403
  %405 = load i8*, i8** %5, align 8, !dbg !14640
  %406 = load i8*, i8** %6, align 8, !dbg !14642
  %407 = icmp ult i8* %405, %406, !dbg !14643
  br i1 %407, label %408, label %457, !dbg !14644

; <label>:408:                                    ; preds = %404
  %409 = load i16*, i16** %4, align 8, !dbg !14645
  %410 = getelementptr inbounds i16, i16* %409, i32 1, !dbg !14645
  store i16* %410, i16** %4, align 8, !dbg !14645
  %411 = load i16, i16* %409, align 2, !dbg !14648
  store i16 %411, i16* %8, align 2, !dbg !14649
  %412 = load i16, i16* %8, align 2, !dbg !14650
  %413 = zext i16 %412 to i32, !dbg !14650
  %414 = ashr i32 %413, 8, !dbg !14651
  %415 = and i32 %414, 248, !dbg !14652
  %416 = load i16, i16* %8, align 2, !dbg !14653
  %417 = zext i16 %416 to i32, !dbg !14653
  %418 = ashr i32 %417, 13, !dbg !14654
  %419 = and i32 %418, 7, !dbg !14655
  %420 = or i32 %415, %419, !dbg !14656
  %421 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14657
  store i32 %420, i32* %421, align 4, !dbg !14658
  %422 = load i16, i16* %8, align 2, !dbg !14659
  %423 = zext i16 %422 to i32, !dbg !14659
  %424 = ashr i32 %423, 3, !dbg !14660
  %425 = and i32 %424, 252, !dbg !14661
  %426 = load i16, i16* %8, align 2, !dbg !14662
  %427 = zext i16 %426 to i32, !dbg !14662
  %428 = ashr i32 %427, 9, !dbg !14663
  %429 = and i32 %428, 3, !dbg !14664
  %430 = or i32 %425, %429, !dbg !14665
  %431 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14666
  store i32 %430, i32* %431, align 4, !dbg !14667
  %432 = load i16, i16* %8, align 2, !dbg !14668
  %433 = zext i16 %432 to i32, !dbg !14668
  %434 = shl i32 %433, 3, !dbg !14669
  %435 = and i32 %434, 248, !dbg !14670
  %436 = load i16, i16* %8, align 2, !dbg !14671
  %437 = zext i16 %436 to i32, !dbg !14671
  %438 = ashr i32 %437, 2, !dbg !14672
  %439 = and i32 %438, 7, !dbg !14673
  %440 = or i32 %435, %439, !dbg !14674
  %441 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14675
  store i32 %440, i32* %441, align 4, !dbg !14676
  %442 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14677
  %443 = load i32, i32* %442, align 4, !dbg !14677
  %444 = trunc i32 %443 to i8, !dbg !14678
  %445 = load i8*, i8** %5, align 8, !dbg !14679
  %446 = getelementptr inbounds i8, i8* %445, i32 1, !dbg !14679
  store i8* %446, i8** %5, align 8, !dbg !14679
  store i8 %444, i8* %445, align 1, !dbg !14680
  %447 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14681
  %448 = load i32, i32* %447, align 4, !dbg !14681
  %449 = trunc i32 %448 to i8, !dbg !14682
  %450 = load i8*, i8** %5, align 8, !dbg !14683
  %451 = getelementptr inbounds i8, i8* %450, i32 1, !dbg !14683
  store i8* %451, i8** %5, align 8, !dbg !14683
  store i8 %449, i8* %450, align 1, !dbg !14684
  %452 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14685
  %453 = load i32, i32* %452, align 4, !dbg !14685
  %454 = trunc i32 %453 to i8, !dbg !14686
  %455 = load i8*, i8** %5, align 8, !dbg !14687
  %456 = getelementptr inbounds i8, i8* %455, i32 1, !dbg !14687
  store i8* %456, i8** %5, align 8, !dbg !14687
  store i8 %454, i8* %455, align 1, !dbg !14688
  br label %404, !dbg !14689, !llvm.loop !14690

; <label>:457:                                    ; preds = %404
  br label %784, !dbg !14692

; <label>:458:                                    ; preds = %3
  %459 = load i32, i32* @g_xserver_be, align 4, !dbg !14693
  %460 = icmp ne i32 %459, 0, !dbg !14693
  br i1 %460, label %461, label %622, !dbg !14695

; <label>:461:                                    ; preds = %458
  %462 = load i32, i32* @g_host_be, align 4, !dbg !14696
  %463 = icmp ne i32 %462, 0, !dbg !14696
  br i1 %463, label %464, label %547, !dbg !14699

; <label>:464:                                    ; preds = %461
  br label %465, !dbg !14700

; <label>:465:                                    ; preds = %469, %464
  %466 = load i8*, i8** %5, align 8, !dbg !14702
  %467 = load i8*, i8** %6, align 8, !dbg !14704
  %468 = icmp ult i8* %466, %467, !dbg !14705
  br i1 %468, label %469, label %546, !dbg !14706

; <label>:469:                                    ; preds = %465
  %470 = load i16*, i16** %4, align 8, !dbg !14707
  %471 = getelementptr inbounds i16, i16* %470, i32 1, !dbg !14707
  store i16* %471, i16** %4, align 8, !dbg !14707
  %472 = load i16, i16* %470, align 2, !dbg !14709
  store i16 %472, i16* %8, align 2, !dbg !14710
  %473 = load i16, i16* %8, align 2, !dbg !14711
  %474 = zext i16 %473 to i32, !dbg !14711
  %475 = and i32 %474, 255, !dbg !14713
  %476 = shl i32 %475, 8, !dbg !14714
  %477 = load i16, i16* %8, align 2, !dbg !14715
  %478 = zext i16 %477 to i32, !dbg !14715
  %479 = ashr i32 %478, 8, !dbg !14716
  %480 = or i32 %476, %479, !dbg !14717
  %481 = trunc i32 %480 to i16, !dbg !14718
  store i16 %481, i16* %8, align 2, !dbg !14719
  %482 = load i16, i16* %8, align 2, !dbg !14720
  %483 = zext i16 %482 to i32, !dbg !14720
  %484 = ashr i32 %483, 8, !dbg !14722
  %485 = and i32 %484, 248, !dbg !14723
  %486 = load i16, i16* %8, align 2, !dbg !14724
  %487 = zext i16 %486 to i32, !dbg !14724
  %488 = ashr i32 %487, 13, !dbg !14725
  %489 = and i32 %488, 7, !dbg !14726
  %490 = or i32 %485, %489, !dbg !14727
  %491 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14728
  store i32 %490, i32* %491, align 4, !dbg !14729
  %492 = load i16, i16* %8, align 2, !dbg !14730
  %493 = zext i16 %492 to i32, !dbg !14730
  %494 = ashr i32 %493, 3, !dbg !14731
  %495 = and i32 %494, 252, !dbg !14732
  %496 = load i16, i16* %8, align 2, !dbg !14733
  %497 = zext i16 %496 to i32, !dbg !14733
  %498 = ashr i32 %497, 9, !dbg !14734
  %499 = and i32 %498, 3, !dbg !14735
  %500 = or i32 %495, %499, !dbg !14736
  %501 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14737
  store i32 %500, i32* %501, align 4, !dbg !14738
  %502 = load i16, i16* %8, align 2, !dbg !14739
  %503 = zext i16 %502 to i32, !dbg !14739
  %504 = shl i32 %503, 3, !dbg !14740
  %505 = and i32 %504, 248, !dbg !14741
  %506 = load i16, i16* %8, align 2, !dbg !14742
  %507 = zext i16 %506 to i32, !dbg !14742
  %508 = ashr i32 %507, 2, !dbg !14743
  %509 = and i32 %508, 7, !dbg !14744
  %510 = or i32 %505, %509, !dbg !14745
  %511 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14746
  store i32 %510, i32* %511, align 4, !dbg !14747
  %512 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14748
  %513 = load i32, i32* %512, align 4, !dbg !14748
  %514 = load i32, i32* @g_red_shift_r, align 4, !dbg !14749
  %515 = lshr i32 %513, %514, !dbg !14750
  %516 = load i32, i32* @g_red_shift_l, align 4, !dbg !14751
  %517 = shl i32 %515, %516, !dbg !14752
  %518 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14753
  %519 = load i32, i32* %518, align 4, !dbg !14753
  %520 = load i32, i32* @g_green_shift_r, align 4, !dbg !14754
  %521 = lshr i32 %519, %520, !dbg !14755
  %522 = load i32, i32* @g_green_shift_l, align 4, !dbg !14756
  %523 = shl i32 %521, %522, !dbg !14757
  %524 = or i32 %517, %523, !dbg !14758
  %525 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14759
  %526 = load i32, i32* %525, align 4, !dbg !14759
  %527 = load i32, i32* @g_blue_shift_r, align 4, !dbg !14760
  %528 = lshr i32 %526, %527, !dbg !14761
  %529 = load i32, i32* @g_blue_shift_l, align 4, !dbg !14762
  %530 = shl i32 %528, %529, !dbg !14763
  %531 = or i32 %524, %530, !dbg !14764
  store i32 %531, i32* %7, align 4, !dbg !14765
  %532 = load i32, i32* %7, align 4, !dbg !14766
  %533 = lshr i32 %532, 16, !dbg !14768
  %534 = trunc i32 %533 to i8, !dbg !14766
  %535 = load i8*, i8** %5, align 8, !dbg !14769
  %536 = getelementptr inbounds i8, i8* %535, i32 1, !dbg !14769
  store i8* %536, i8** %5, align 8, !dbg !14769
  store i8 %534, i8* %535, align 1, !dbg !14770
  %537 = load i32, i32* %7, align 4, !dbg !14771
  %538 = lshr i32 %537, 8, !dbg !14772
  %539 = trunc i32 %538 to i8, !dbg !14771
  %540 = load i8*, i8** %5, align 8, !dbg !14773
  %541 = getelementptr inbounds i8, i8* %540, i32 1, !dbg !14773
  store i8* %541, i8** %5, align 8, !dbg !14773
  store i8 %539, i8* %540, align 1, !dbg !14774
  %542 = load i32, i32* %7, align 4, !dbg !14775
  %543 = trunc i32 %542 to i8, !dbg !14775
  %544 = load i8*, i8** %5, align 8, !dbg !14776
  %545 = getelementptr inbounds i8, i8* %544, i32 1, !dbg !14776
  store i8* %545, i8** %5, align 8, !dbg !14776
  store i8 %543, i8* %544, align 1, !dbg !14777
  br label %465, !dbg !14778, !llvm.loop !14780

; <label>:546:                                    ; preds = %465
  br label %621, !dbg !14781

; <label>:547:                                    ; preds = %461
  br label %548, !dbg !14782

; <label>:548:                                    ; preds = %552, %547
  %549 = load i8*, i8** %5, align 8, !dbg !14784
  %550 = load i8*, i8** %6, align 8, !dbg !14786
  %551 = icmp ult i8* %549, %550, !dbg !14787
  br i1 %551, label %552, label %620, !dbg !14788

; <label>:552:                                    ; preds = %548
  %553 = load i16*, i16** %4, align 8, !dbg !14789
  %554 = getelementptr inbounds i16, i16* %553, i32 1, !dbg !14789
  store i16* %554, i16** %4, align 8, !dbg !14789
  %555 = load i16, i16* %553, align 2, !dbg !14791
  store i16 %555, i16* %8, align 2, !dbg !14792
  %556 = load i16, i16* %8, align 2, !dbg !14793
  %557 = zext i16 %556 to i32, !dbg !14793
  %558 = ashr i32 %557, 8, !dbg !14795
  %559 = and i32 %558, 248, !dbg !14796
  %560 = load i16, i16* %8, align 2, !dbg !14797
  %561 = zext i16 %560 to i32, !dbg !14797
  %562 = ashr i32 %561, 13, !dbg !14798
  %563 = and i32 %562, 7, !dbg !14799
  %564 = or i32 %559, %563, !dbg !14800
  %565 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14801
  store i32 %564, i32* %565, align 4, !dbg !14802
  %566 = load i16, i16* %8, align 2, !dbg !14803
  %567 = zext i16 %566 to i32, !dbg !14803
  %568 = ashr i32 %567, 3, !dbg !14804
  %569 = and i32 %568, 252, !dbg !14805
  %570 = load i16, i16* %8, align 2, !dbg !14806
  %571 = zext i16 %570 to i32, !dbg !14806
  %572 = ashr i32 %571, 9, !dbg !14807
  %573 = and i32 %572, 3, !dbg !14808
  %574 = or i32 %569, %573, !dbg !14809
  %575 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14810
  store i32 %574, i32* %575, align 4, !dbg !14811
  %576 = load i16, i16* %8, align 2, !dbg !14812
  %577 = zext i16 %576 to i32, !dbg !14812
  %578 = shl i32 %577, 3, !dbg !14813
  %579 = and i32 %578, 248, !dbg !14814
  %580 = load i16, i16* %8, align 2, !dbg !14815
  %581 = zext i16 %580 to i32, !dbg !14815
  %582 = ashr i32 %581, 2, !dbg !14816
  %583 = and i32 %582, 7, !dbg !14817
  %584 = or i32 %579, %583, !dbg !14818
  %585 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14819
  store i32 %584, i32* %585, align 4, !dbg !14820
  %586 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14821
  %587 = load i32, i32* %586, align 4, !dbg !14821
  %588 = load i32, i32* @g_red_shift_r, align 4, !dbg !14822
  %589 = lshr i32 %587, %588, !dbg !14823
  %590 = load i32, i32* @g_red_shift_l, align 4, !dbg !14824
  %591 = shl i32 %589, %590, !dbg !14825
  %592 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14826
  %593 = load i32, i32* %592, align 4, !dbg !14826
  %594 = load i32, i32* @g_green_shift_r, align 4, !dbg !14827
  %595 = lshr i32 %593, %594, !dbg !14828
  %596 = load i32, i32* @g_green_shift_l, align 4, !dbg !14829
  %597 = shl i32 %595, %596, !dbg !14830
  %598 = or i32 %591, %597, !dbg !14831
  %599 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14832
  %600 = load i32, i32* %599, align 4, !dbg !14832
  %601 = load i32, i32* @g_blue_shift_r, align 4, !dbg !14833
  %602 = lshr i32 %600, %601, !dbg !14834
  %603 = load i32, i32* @g_blue_shift_l, align 4, !dbg !14835
  %604 = shl i32 %602, %603, !dbg !14836
  %605 = or i32 %598, %604, !dbg !14837
  store i32 %605, i32* %7, align 4, !dbg !14838
  %606 = load i32, i32* %7, align 4, !dbg !14839
  %607 = lshr i32 %606, 16, !dbg !14841
  %608 = trunc i32 %607 to i8, !dbg !14839
  %609 = load i8*, i8** %5, align 8, !dbg !14842
  %610 = getelementptr inbounds i8, i8* %609, i32 1, !dbg !14842
  store i8* %610, i8** %5, align 8, !dbg !14842
  store i8 %608, i8* %609, align 1, !dbg !14843
  %611 = load i32, i32* %7, align 4, !dbg !14844
  %612 = lshr i32 %611, 8, !dbg !14845
  %613 = trunc i32 %612 to i8, !dbg !14844
  %614 = load i8*, i8** %5, align 8, !dbg !14846
  %615 = getelementptr inbounds i8, i8* %614, i32 1, !dbg !14846
  store i8* %615, i8** %5, align 8, !dbg !14846
  store i8 %613, i8* %614, align 1, !dbg !14847
  %616 = load i32, i32* %7, align 4, !dbg !14848
  %617 = trunc i32 %616 to i8, !dbg !14848
  %618 = load i8*, i8** %5, align 8, !dbg !14849
  %619 = getelementptr inbounds i8, i8* %618, i32 1, !dbg !14849
  store i8* %619, i8** %5, align 8, !dbg !14849
  store i8 %617, i8* %618, align 1, !dbg !14850
  br label %548, !dbg !14851, !llvm.loop !14853

; <label>:620:                                    ; preds = %548
  br label %621

; <label>:621:                                    ; preds = %620, %546
  br label %783, !dbg !14854

; <label>:622:                                    ; preds = %458
  %623 = load i32, i32* @g_host_be, align 4, !dbg !14855
  %624 = icmp ne i32 %623, 0, !dbg !14855
  br i1 %624, label %625, label %708, !dbg !14858

; <label>:625:                                    ; preds = %622
  br label %626, !dbg !14859

; <label>:626:                                    ; preds = %630, %625
  %627 = load i8*, i8** %5, align 8, !dbg !14861
  %628 = load i8*, i8** %6, align 8, !dbg !14863
  %629 = icmp ult i8* %627, %628, !dbg !14864
  br i1 %629, label %630, label %707, !dbg !14865

; <label>:630:                                    ; preds = %626
  %631 = load i16*, i16** %4, align 8, !dbg !14866
  %632 = getelementptr inbounds i16, i16* %631, i32 1, !dbg !14866
  store i16* %632, i16** %4, align 8, !dbg !14866
  %633 = load i16, i16* %631, align 2, !dbg !14868
  store i16 %633, i16* %8, align 2, !dbg !14869
  %634 = load i16, i16* %8, align 2, !dbg !14870
  %635 = zext i16 %634 to i32, !dbg !14870
  %636 = and i32 %635, 255, !dbg !14872
  %637 = shl i32 %636, 8, !dbg !14873
  %638 = load i16, i16* %8, align 2, !dbg !14874
  %639 = zext i16 %638 to i32, !dbg !14874
  %640 = ashr i32 %639, 8, !dbg !14875
  %641 = or i32 %637, %640, !dbg !14876
  %642 = trunc i32 %641 to i16, !dbg !14877
  store i16 %642, i16* %8, align 2, !dbg !14878
  %643 = load i16, i16* %8, align 2, !dbg !14879
  %644 = zext i16 %643 to i32, !dbg !14879
  %645 = ashr i32 %644, 8, !dbg !14881
  %646 = and i32 %645, 248, !dbg !14882
  %647 = load i16, i16* %8, align 2, !dbg !14883
  %648 = zext i16 %647 to i32, !dbg !14883
  %649 = ashr i32 %648, 13, !dbg !14884
  %650 = and i32 %649, 7, !dbg !14885
  %651 = or i32 %646, %650, !dbg !14886
  %652 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14887
  store i32 %651, i32* %652, align 4, !dbg !14888
  %653 = load i16, i16* %8, align 2, !dbg !14889
  %654 = zext i16 %653 to i32, !dbg !14889
  %655 = ashr i32 %654, 3, !dbg !14890
  %656 = and i32 %655, 252, !dbg !14891
  %657 = load i16, i16* %8, align 2, !dbg !14892
  %658 = zext i16 %657 to i32, !dbg !14892
  %659 = ashr i32 %658, 9, !dbg !14893
  %660 = and i32 %659, 3, !dbg !14894
  %661 = or i32 %656, %660, !dbg !14895
  %662 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14896
  store i32 %661, i32* %662, align 4, !dbg !14897
  %663 = load i16, i16* %8, align 2, !dbg !14898
  %664 = zext i16 %663 to i32, !dbg !14898
  %665 = shl i32 %664, 3, !dbg !14899
  %666 = and i32 %665, 248, !dbg !14900
  %667 = load i16, i16* %8, align 2, !dbg !14901
  %668 = zext i16 %667 to i32, !dbg !14901
  %669 = ashr i32 %668, 2, !dbg !14902
  %670 = and i32 %669, 7, !dbg !14903
  %671 = or i32 %666, %670, !dbg !14904
  %672 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14905
  store i32 %671, i32* %672, align 4, !dbg !14906
  %673 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14907
  %674 = load i32, i32* %673, align 4, !dbg !14907
  %675 = load i32, i32* @g_red_shift_r, align 4, !dbg !14908
  %676 = lshr i32 %674, %675, !dbg !14909
  %677 = load i32, i32* @g_red_shift_l, align 4, !dbg !14910
  %678 = shl i32 %676, %677, !dbg !14911
  %679 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14912
  %680 = load i32, i32* %679, align 4, !dbg !14912
  %681 = load i32, i32* @g_green_shift_r, align 4, !dbg !14913
  %682 = lshr i32 %680, %681, !dbg !14914
  %683 = load i32, i32* @g_green_shift_l, align 4, !dbg !14915
  %684 = shl i32 %682, %683, !dbg !14916
  %685 = or i32 %678, %684, !dbg !14917
  %686 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14918
  %687 = load i32, i32* %686, align 4, !dbg !14918
  %688 = load i32, i32* @g_blue_shift_r, align 4, !dbg !14919
  %689 = lshr i32 %687, %688, !dbg !14920
  %690 = load i32, i32* @g_blue_shift_l, align 4, !dbg !14921
  %691 = shl i32 %689, %690, !dbg !14922
  %692 = or i32 %685, %691, !dbg !14923
  store i32 %692, i32* %7, align 4, !dbg !14924
  %693 = load i32, i32* %7, align 4, !dbg !14925
  %694 = trunc i32 %693 to i8, !dbg !14925
  %695 = load i8*, i8** %5, align 8, !dbg !14927
  %696 = getelementptr inbounds i8, i8* %695, i32 1, !dbg !14927
  store i8* %696, i8** %5, align 8, !dbg !14927
  store i8 %694, i8* %695, align 1, !dbg !14928
  %697 = load i32, i32* %7, align 4, !dbg !14929
  %698 = lshr i32 %697, 8, !dbg !14930
  %699 = trunc i32 %698 to i8, !dbg !14929
  %700 = load i8*, i8** %5, align 8, !dbg !14931
  %701 = getelementptr inbounds i8, i8* %700, i32 1, !dbg !14931
  store i8* %701, i8** %5, align 8, !dbg !14931
  store i8 %699, i8* %700, align 1, !dbg !14932
  %702 = load i32, i32* %7, align 4, !dbg !14933
  %703 = lshr i32 %702, 16, !dbg !14934
  %704 = trunc i32 %703 to i8, !dbg !14933
  %705 = load i8*, i8** %5, align 8, !dbg !14935
  %706 = getelementptr inbounds i8, i8* %705, i32 1, !dbg !14935
  store i8* %706, i8** %5, align 8, !dbg !14935
  store i8 %704, i8* %705, align 1, !dbg !14936
  br label %626, !dbg !14937, !llvm.loop !14939

; <label>:707:                                    ; preds = %626
  br label %782, !dbg !14940

; <label>:708:                                    ; preds = %622
  br label %709, !dbg !14941

; <label>:709:                                    ; preds = %713, %708
  %710 = load i8*, i8** %5, align 8, !dbg !14943
  %711 = load i8*, i8** %6, align 8, !dbg !14945
  %712 = icmp ult i8* %710, %711, !dbg !14946
  br i1 %712, label %713, label %781, !dbg !14947

; <label>:713:                                    ; preds = %709
  %714 = load i16*, i16** %4, align 8, !dbg !14948
  %715 = getelementptr inbounds i16, i16* %714, i32 1, !dbg !14948
  store i16* %715, i16** %4, align 8, !dbg !14948
  %716 = load i16, i16* %714, align 2, !dbg !14950
  store i16 %716, i16* %8, align 2, !dbg !14951
  %717 = load i16, i16* %8, align 2, !dbg !14952
  %718 = zext i16 %717 to i32, !dbg !14952
  %719 = ashr i32 %718, 8, !dbg !14954
  %720 = and i32 %719, 248, !dbg !14955
  %721 = load i16, i16* %8, align 2, !dbg !14956
  %722 = zext i16 %721 to i32, !dbg !14956
  %723 = ashr i32 %722, 13, !dbg !14957
  %724 = and i32 %723, 7, !dbg !14958
  %725 = or i32 %720, %724, !dbg !14959
  %726 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14960
  store i32 %725, i32* %726, align 4, !dbg !14961
  %727 = load i16, i16* %8, align 2, !dbg !14962
  %728 = zext i16 %727 to i32, !dbg !14962
  %729 = ashr i32 %728, 3, !dbg !14963
  %730 = and i32 %729, 252, !dbg !14964
  %731 = load i16, i16* %8, align 2, !dbg !14965
  %732 = zext i16 %731 to i32, !dbg !14965
  %733 = ashr i32 %732, 9, !dbg !14966
  %734 = and i32 %733, 3, !dbg !14967
  %735 = or i32 %730, %734, !dbg !14968
  %736 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14969
  store i32 %735, i32* %736, align 4, !dbg !14970
  %737 = load i16, i16* %8, align 2, !dbg !14971
  %738 = zext i16 %737 to i32, !dbg !14971
  %739 = shl i32 %738, 3, !dbg !14972
  %740 = and i32 %739, 248, !dbg !14973
  %741 = load i16, i16* %8, align 2, !dbg !14974
  %742 = zext i16 %741 to i32, !dbg !14974
  %743 = ashr i32 %742, 2, !dbg !14975
  %744 = and i32 %743, 7, !dbg !14976
  %745 = or i32 %740, %744, !dbg !14977
  %746 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14978
  store i32 %745, i32* %746, align 4, !dbg !14979
  %747 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !14980
  %748 = load i32, i32* %747, align 4, !dbg !14980
  %749 = load i32, i32* @g_red_shift_r, align 4, !dbg !14981
  %750 = lshr i32 %748, %749, !dbg !14982
  %751 = load i32, i32* @g_red_shift_l, align 4, !dbg !14983
  %752 = shl i32 %750, %751, !dbg !14984
  %753 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !14985
  %754 = load i32, i32* %753, align 4, !dbg !14985
  %755 = load i32, i32* @g_green_shift_r, align 4, !dbg !14986
  %756 = lshr i32 %754, %755, !dbg !14987
  %757 = load i32, i32* @g_green_shift_l, align 4, !dbg !14988
  %758 = shl i32 %756, %757, !dbg !14989
  %759 = or i32 %752, %758, !dbg !14990
  %760 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !14991
  %761 = load i32, i32* %760, align 4, !dbg !14991
  %762 = load i32, i32* @g_blue_shift_r, align 4, !dbg !14992
  %763 = lshr i32 %761, %762, !dbg !14993
  %764 = load i32, i32* @g_blue_shift_l, align 4, !dbg !14994
  %765 = shl i32 %763, %764, !dbg !14995
  %766 = or i32 %759, %765, !dbg !14996
  store i32 %766, i32* %7, align 4, !dbg !14997
  %767 = load i32, i32* %7, align 4, !dbg !14998
  %768 = trunc i32 %767 to i8, !dbg !14998
  %769 = load i8*, i8** %5, align 8, !dbg !15000
  %770 = getelementptr inbounds i8, i8* %769, i32 1, !dbg !15000
  store i8* %770, i8** %5, align 8, !dbg !15000
  store i8 %768, i8* %769, align 1, !dbg !15001
  %771 = load i32, i32* %7, align 4, !dbg !15002
  %772 = lshr i32 %771, 8, !dbg !15003
  %773 = trunc i32 %772 to i8, !dbg !15002
  %774 = load i8*, i8** %5, align 8, !dbg !15004
  %775 = getelementptr inbounds i8, i8* %774, i32 1, !dbg !15004
  store i8* %775, i8** %5, align 8, !dbg !15004
  store i8 %773, i8* %774, align 1, !dbg !15005
  %776 = load i32, i32* %7, align 4, !dbg !15006
  %777 = lshr i32 %776, 16, !dbg !15007
  %778 = trunc i32 %777 to i8, !dbg !15006
  %779 = load i8*, i8** %5, align 8, !dbg !15008
  %780 = getelementptr inbounds i8, i8* %779, i32 1, !dbg !15008
  store i8* %780, i8** %5, align 8, !dbg !15008
  store i8 %778, i8* %779, align 1, !dbg !15009
  br label %709, !dbg !15010, !llvm.loop !15012

; <label>:781:                                    ; preds = %709
  br label %782

; <label>:782:                                    ; preds = %781, %707
  br label %783

; <label>:783:                                    ; preds = %782, %621
  br label %784

; <label>:784:                                    ; preds = %783, %457
  ret void, !dbg !15013
}

; Function Attrs: nounwind uwtable
define internal void @translate16to16(i16*, i8*, i8*) #0 !dbg !15014 {
  %4 = alloca i16*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca %struct.PixelColour, align 4
  store i16* %0, i16** %4, align 8
  call void @llvm.dbg.declare(metadata i16** %4, metadata !15015, metadata !416), !dbg !15016
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15017, metadata !416), !dbg !15018
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !15019, metadata !416), !dbg !15020
  call void @llvm.dbg.declare(metadata i16* %7, metadata !15021, metadata !416), !dbg !15022
  call void @llvm.dbg.declare(metadata i16* %8, metadata !15023, metadata !416), !dbg !15024
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %9, metadata !15025, metadata !416), !dbg !15026
  %10 = load i32, i32* @g_xserver_be, align 4, !dbg !15027
  %11 = icmp ne i32 %10, 0, !dbg !15027
  br i1 %11, label %12, label %167, !dbg !15029

; <label>:12:                                     ; preds = %3
  %13 = load i32, i32* @g_host_be, align 4, !dbg !15030
  %14 = icmp ne i32 %13, 0, !dbg !15030
  br i1 %14, label %15, label %95, !dbg !15033

; <label>:15:                                     ; preds = %12
  br label %16, !dbg !15034

; <label>:16:                                     ; preds = %20, %15
  %17 = load i8*, i8** %5, align 8, !dbg !15036
  %18 = load i8*, i8** %6, align 8, !dbg !15038
  %19 = icmp ult i8* %17, %18, !dbg !15039
  br i1 %19, label %20, label %94, !dbg !15040

; <label>:20:                                     ; preds = %16
  %21 = load i16*, i16** %4, align 8, !dbg !15041
  %22 = getelementptr inbounds i16, i16* %21, i32 1, !dbg !15041
  store i16* %22, i16** %4, align 8, !dbg !15041
  %23 = load i16, i16* %21, align 2, !dbg !15043
  store i16 %23, i16* %7, align 2, !dbg !15044
  %24 = load i16, i16* %7, align 2, !dbg !15045
  %25 = zext i16 %24 to i32, !dbg !15045
  %26 = and i32 %25, 255, !dbg !15047
  %27 = shl i32 %26, 8, !dbg !15048
  %28 = load i16, i16* %7, align 2, !dbg !15049
  %29 = zext i16 %28 to i32, !dbg !15049
  %30 = ashr i32 %29, 8, !dbg !15050
  %31 = or i32 %27, %30, !dbg !15051
  %32 = trunc i32 %31 to i16, !dbg !15052
  store i16 %32, i16* %7, align 2, !dbg !15053
  %33 = load i16, i16* %7, align 2, !dbg !15054
  %34 = zext i16 %33 to i32, !dbg !15054
  %35 = ashr i32 %34, 8, !dbg !15056
  %36 = and i32 %35, 248, !dbg !15057
  %37 = load i16, i16* %7, align 2, !dbg !15058
  %38 = zext i16 %37 to i32, !dbg !15058
  %39 = ashr i32 %38, 13, !dbg !15059
  %40 = and i32 %39, 7, !dbg !15060
  %41 = or i32 %36, %40, !dbg !15061
  %42 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15062
  store i32 %41, i32* %42, align 4, !dbg !15063
  %43 = load i16, i16* %7, align 2, !dbg !15064
  %44 = zext i16 %43 to i32, !dbg !15064
  %45 = ashr i32 %44, 3, !dbg !15065
  %46 = and i32 %45, 252, !dbg !15066
  %47 = load i16, i16* %7, align 2, !dbg !15067
  %48 = zext i16 %47 to i32, !dbg !15067
  %49 = ashr i32 %48, 9, !dbg !15068
  %50 = and i32 %49, 3, !dbg !15069
  %51 = or i32 %46, %50, !dbg !15070
  %52 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15071
  store i32 %51, i32* %52, align 4, !dbg !15072
  %53 = load i16, i16* %7, align 2, !dbg !15073
  %54 = zext i16 %53 to i32, !dbg !15073
  %55 = shl i32 %54, 3, !dbg !15074
  %56 = and i32 %55, 248, !dbg !15075
  %57 = load i16, i16* %7, align 2, !dbg !15076
  %58 = zext i16 %57 to i32, !dbg !15076
  %59 = ashr i32 %58, 2, !dbg !15077
  %60 = and i32 %59, 7, !dbg !15078
  %61 = or i32 %56, %60, !dbg !15079
  %62 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15080
  store i32 %61, i32* %62, align 4, !dbg !15081
  %63 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15082
  %64 = load i32, i32* %63, align 4, !dbg !15082
  %65 = load i32, i32* @g_red_shift_r, align 4, !dbg !15083
  %66 = lshr i32 %64, %65, !dbg !15084
  %67 = load i32, i32* @g_red_shift_l, align 4, !dbg !15085
  %68 = shl i32 %66, %67, !dbg !15086
  %69 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15087
  %70 = load i32, i32* %69, align 4, !dbg !15087
  %71 = load i32, i32* @g_green_shift_r, align 4, !dbg !15088
  %72 = lshr i32 %70, %71, !dbg !15089
  %73 = load i32, i32* @g_green_shift_l, align 4, !dbg !15090
  %74 = shl i32 %72, %73, !dbg !15091
  %75 = or i32 %68, %74, !dbg !15092
  %76 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15093
  %77 = load i32, i32* %76, align 4, !dbg !15093
  %78 = load i32, i32* @g_blue_shift_r, align 4, !dbg !15094
  %79 = lshr i32 %77, %78, !dbg !15095
  %80 = load i32, i32* @g_blue_shift_l, align 4, !dbg !15096
  %81 = shl i32 %79, %80, !dbg !15097
  %82 = or i32 %75, %81, !dbg !15098
  %83 = trunc i32 %82 to i16, !dbg !15099
  store i16 %83, i16* %8, align 2, !dbg !15100
  %84 = load i16, i16* %8, align 2, !dbg !15101
  %85 = zext i16 %84 to i32, !dbg !15101
  %86 = ashr i32 %85, 8, !dbg !15103
  %87 = trunc i32 %86 to i8, !dbg !15101
  %88 = load i8*, i8** %5, align 8, !dbg !15104
  %89 = getelementptr inbounds i8, i8* %88, i32 1, !dbg !15104
  store i8* %89, i8** %5, align 8, !dbg !15104
  store i8 %87, i8* %88, align 1, !dbg !15105
  %90 = load i16, i16* %8, align 2, !dbg !15106
  %91 = trunc i16 %90 to i8, !dbg !15106
  %92 = load i8*, i8** %5, align 8, !dbg !15107
  %93 = getelementptr inbounds i8, i8* %92, i32 1, !dbg !15107
  store i8* %93, i8** %5, align 8, !dbg !15107
  store i8 %91, i8* %92, align 1, !dbg !15108
  br label %16, !dbg !15109, !llvm.loop !15111

; <label>:94:                                     ; preds = %16
  br label %166, !dbg !15112

; <label>:95:                                     ; preds = %12
  br label %96, !dbg !15113

; <label>:96:                                     ; preds = %100, %95
  %97 = load i8*, i8** %5, align 8, !dbg !15115
  %98 = load i8*, i8** %6, align 8, !dbg !15117
  %99 = icmp ult i8* %97, %98, !dbg !15118
  br i1 %99, label %100, label %165, !dbg !15119

; <label>:100:                                    ; preds = %96
  %101 = load i16*, i16** %4, align 8, !dbg !15120
  %102 = getelementptr inbounds i16, i16* %101, i32 1, !dbg !15120
  store i16* %102, i16** %4, align 8, !dbg !15120
  %103 = load i16, i16* %101, align 2, !dbg !15122
  store i16 %103, i16* %7, align 2, !dbg !15123
  %104 = load i16, i16* %7, align 2, !dbg !15124
  %105 = zext i16 %104 to i32, !dbg !15124
  %106 = ashr i32 %105, 8, !dbg !15126
  %107 = and i32 %106, 248, !dbg !15127
  %108 = load i16, i16* %7, align 2, !dbg !15128
  %109 = zext i16 %108 to i32, !dbg !15128
  %110 = ashr i32 %109, 13, !dbg !15129
  %111 = and i32 %110, 7, !dbg !15130
  %112 = or i32 %107, %111, !dbg !15131
  %113 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15132
  store i32 %112, i32* %113, align 4, !dbg !15133
  %114 = load i16, i16* %7, align 2, !dbg !15134
  %115 = zext i16 %114 to i32, !dbg !15134
  %116 = ashr i32 %115, 3, !dbg !15135
  %117 = and i32 %116, 252, !dbg !15136
  %118 = load i16, i16* %7, align 2, !dbg !15137
  %119 = zext i16 %118 to i32, !dbg !15137
  %120 = ashr i32 %119, 9, !dbg !15138
  %121 = and i32 %120, 3, !dbg !15139
  %122 = or i32 %117, %121, !dbg !15140
  %123 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15141
  store i32 %122, i32* %123, align 4, !dbg !15142
  %124 = load i16, i16* %7, align 2, !dbg !15143
  %125 = zext i16 %124 to i32, !dbg !15143
  %126 = shl i32 %125, 3, !dbg !15144
  %127 = and i32 %126, 248, !dbg !15145
  %128 = load i16, i16* %7, align 2, !dbg !15146
  %129 = zext i16 %128 to i32, !dbg !15146
  %130 = ashr i32 %129, 2, !dbg !15147
  %131 = and i32 %130, 7, !dbg !15148
  %132 = or i32 %127, %131, !dbg !15149
  %133 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15150
  store i32 %132, i32* %133, align 4, !dbg !15151
  %134 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15152
  %135 = load i32, i32* %134, align 4, !dbg !15152
  %136 = load i32, i32* @g_red_shift_r, align 4, !dbg !15153
  %137 = lshr i32 %135, %136, !dbg !15154
  %138 = load i32, i32* @g_red_shift_l, align 4, !dbg !15155
  %139 = shl i32 %137, %138, !dbg !15156
  %140 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15157
  %141 = load i32, i32* %140, align 4, !dbg !15157
  %142 = load i32, i32* @g_green_shift_r, align 4, !dbg !15158
  %143 = lshr i32 %141, %142, !dbg !15159
  %144 = load i32, i32* @g_green_shift_l, align 4, !dbg !15160
  %145 = shl i32 %143, %144, !dbg !15161
  %146 = or i32 %139, %145, !dbg !15162
  %147 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15163
  %148 = load i32, i32* %147, align 4, !dbg !15163
  %149 = load i32, i32* @g_blue_shift_r, align 4, !dbg !15164
  %150 = lshr i32 %148, %149, !dbg !15165
  %151 = load i32, i32* @g_blue_shift_l, align 4, !dbg !15166
  %152 = shl i32 %150, %151, !dbg !15167
  %153 = or i32 %146, %152, !dbg !15168
  %154 = trunc i32 %153 to i16, !dbg !15169
  store i16 %154, i16* %8, align 2, !dbg !15170
  %155 = load i16, i16* %8, align 2, !dbg !15171
  %156 = zext i16 %155 to i32, !dbg !15171
  %157 = ashr i32 %156, 8, !dbg !15173
  %158 = trunc i32 %157 to i8, !dbg !15171
  %159 = load i8*, i8** %5, align 8, !dbg !15174
  %160 = getelementptr inbounds i8, i8* %159, i32 1, !dbg !15174
  store i8* %160, i8** %5, align 8, !dbg !15174
  store i8 %158, i8* %159, align 1, !dbg !15175
  %161 = load i16, i16* %8, align 2, !dbg !15176
  %162 = trunc i16 %161 to i8, !dbg !15176
  %163 = load i8*, i8** %5, align 8, !dbg !15177
  %164 = getelementptr inbounds i8, i8* %163, i32 1, !dbg !15177
  store i8* %164, i8** %5, align 8, !dbg !15177
  store i8 %162, i8* %163, align 1, !dbg !15178
  br label %96, !dbg !15179, !llvm.loop !15181

; <label>:165:                                    ; preds = %96
  br label %166

; <label>:166:                                    ; preds = %165, %94
  br label %322, !dbg !15182

; <label>:167:                                    ; preds = %3
  %168 = load i32, i32* @g_host_be, align 4, !dbg !15183
  %169 = icmp ne i32 %168, 0, !dbg !15183
  br i1 %169, label %170, label %250, !dbg !15186

; <label>:170:                                    ; preds = %167
  br label %171, !dbg !15187

; <label>:171:                                    ; preds = %175, %170
  %172 = load i8*, i8** %5, align 8, !dbg !15189
  %173 = load i8*, i8** %6, align 8, !dbg !15191
  %174 = icmp ult i8* %172, %173, !dbg !15192
  br i1 %174, label %175, label %249, !dbg !15193

; <label>:175:                                    ; preds = %171
  %176 = load i16*, i16** %4, align 8, !dbg !15194
  %177 = getelementptr inbounds i16, i16* %176, i32 1, !dbg !15194
  store i16* %177, i16** %4, align 8, !dbg !15194
  %178 = load i16, i16* %176, align 2, !dbg !15196
  store i16 %178, i16* %7, align 2, !dbg !15197
  %179 = load i16, i16* %7, align 2, !dbg !15198
  %180 = zext i16 %179 to i32, !dbg !15198
  %181 = and i32 %180, 255, !dbg !15200
  %182 = shl i32 %181, 8, !dbg !15201
  %183 = load i16, i16* %7, align 2, !dbg !15202
  %184 = zext i16 %183 to i32, !dbg !15202
  %185 = ashr i32 %184, 8, !dbg !15203
  %186 = or i32 %182, %185, !dbg !15204
  %187 = trunc i32 %186 to i16, !dbg !15205
  store i16 %187, i16* %7, align 2, !dbg !15206
  %188 = load i16, i16* %7, align 2, !dbg !15207
  %189 = zext i16 %188 to i32, !dbg !15207
  %190 = ashr i32 %189, 8, !dbg !15209
  %191 = and i32 %190, 248, !dbg !15210
  %192 = load i16, i16* %7, align 2, !dbg !15211
  %193 = zext i16 %192 to i32, !dbg !15211
  %194 = ashr i32 %193, 13, !dbg !15212
  %195 = and i32 %194, 7, !dbg !15213
  %196 = or i32 %191, %195, !dbg !15214
  %197 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15215
  store i32 %196, i32* %197, align 4, !dbg !15216
  %198 = load i16, i16* %7, align 2, !dbg !15217
  %199 = zext i16 %198 to i32, !dbg !15217
  %200 = ashr i32 %199, 3, !dbg !15218
  %201 = and i32 %200, 252, !dbg !15219
  %202 = load i16, i16* %7, align 2, !dbg !15220
  %203 = zext i16 %202 to i32, !dbg !15220
  %204 = ashr i32 %203, 9, !dbg !15221
  %205 = and i32 %204, 3, !dbg !15222
  %206 = or i32 %201, %205, !dbg !15223
  %207 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15224
  store i32 %206, i32* %207, align 4, !dbg !15225
  %208 = load i16, i16* %7, align 2, !dbg !15226
  %209 = zext i16 %208 to i32, !dbg !15226
  %210 = shl i32 %209, 3, !dbg !15227
  %211 = and i32 %210, 248, !dbg !15228
  %212 = load i16, i16* %7, align 2, !dbg !15229
  %213 = zext i16 %212 to i32, !dbg !15229
  %214 = ashr i32 %213, 2, !dbg !15230
  %215 = and i32 %214, 7, !dbg !15231
  %216 = or i32 %211, %215, !dbg !15232
  %217 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15233
  store i32 %216, i32* %217, align 4, !dbg !15234
  %218 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15235
  %219 = load i32, i32* %218, align 4, !dbg !15235
  %220 = load i32, i32* @g_red_shift_r, align 4, !dbg !15236
  %221 = lshr i32 %219, %220, !dbg !15237
  %222 = load i32, i32* @g_red_shift_l, align 4, !dbg !15238
  %223 = shl i32 %221, %222, !dbg !15239
  %224 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15240
  %225 = load i32, i32* %224, align 4, !dbg !15240
  %226 = load i32, i32* @g_green_shift_r, align 4, !dbg !15241
  %227 = lshr i32 %225, %226, !dbg !15242
  %228 = load i32, i32* @g_green_shift_l, align 4, !dbg !15243
  %229 = shl i32 %227, %228, !dbg !15244
  %230 = or i32 %223, %229, !dbg !15245
  %231 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15246
  %232 = load i32, i32* %231, align 4, !dbg !15246
  %233 = load i32, i32* @g_blue_shift_r, align 4, !dbg !15247
  %234 = lshr i32 %232, %233, !dbg !15248
  %235 = load i32, i32* @g_blue_shift_l, align 4, !dbg !15249
  %236 = shl i32 %234, %235, !dbg !15250
  %237 = or i32 %230, %236, !dbg !15251
  %238 = trunc i32 %237 to i16, !dbg !15252
  store i16 %238, i16* %8, align 2, !dbg !15253
  %239 = load i16, i16* %8, align 2, !dbg !15254
  %240 = trunc i16 %239 to i8, !dbg !15254
  %241 = load i8*, i8** %5, align 8, !dbg !15256
  %242 = getelementptr inbounds i8, i8* %241, i32 1, !dbg !15256
  store i8* %242, i8** %5, align 8, !dbg !15256
  store i8 %240, i8* %241, align 1, !dbg !15257
  %243 = load i16, i16* %8, align 2, !dbg !15258
  %244 = zext i16 %243 to i32, !dbg !15258
  %245 = ashr i32 %244, 8, !dbg !15259
  %246 = trunc i32 %245 to i8, !dbg !15258
  %247 = load i8*, i8** %5, align 8, !dbg !15260
  %248 = getelementptr inbounds i8, i8* %247, i32 1, !dbg !15260
  store i8* %248, i8** %5, align 8, !dbg !15260
  store i8 %246, i8* %247, align 1, !dbg !15261
  br label %171, !dbg !15262, !llvm.loop !15264

; <label>:249:                                    ; preds = %171
  br label %321, !dbg !15265

; <label>:250:                                    ; preds = %167
  br label %251, !dbg !15266

; <label>:251:                                    ; preds = %255, %250
  %252 = load i8*, i8** %5, align 8, !dbg !15268
  %253 = load i8*, i8** %6, align 8, !dbg !15270
  %254 = icmp ult i8* %252, %253, !dbg !15271
  br i1 %254, label %255, label %320, !dbg !15272

; <label>:255:                                    ; preds = %251
  %256 = load i16*, i16** %4, align 8, !dbg !15273
  %257 = getelementptr inbounds i16, i16* %256, i32 1, !dbg !15273
  store i16* %257, i16** %4, align 8, !dbg !15273
  %258 = load i16, i16* %256, align 2, !dbg !15275
  store i16 %258, i16* %7, align 2, !dbg !15276
  %259 = load i16, i16* %7, align 2, !dbg !15277
  %260 = zext i16 %259 to i32, !dbg !15277
  %261 = ashr i32 %260, 8, !dbg !15279
  %262 = and i32 %261, 248, !dbg !15280
  %263 = load i16, i16* %7, align 2, !dbg !15281
  %264 = zext i16 %263 to i32, !dbg !15281
  %265 = ashr i32 %264, 13, !dbg !15282
  %266 = and i32 %265, 7, !dbg !15283
  %267 = or i32 %262, %266, !dbg !15284
  %268 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15285
  store i32 %267, i32* %268, align 4, !dbg !15286
  %269 = load i16, i16* %7, align 2, !dbg !15287
  %270 = zext i16 %269 to i32, !dbg !15287
  %271 = ashr i32 %270, 3, !dbg !15288
  %272 = and i32 %271, 252, !dbg !15289
  %273 = load i16, i16* %7, align 2, !dbg !15290
  %274 = zext i16 %273 to i32, !dbg !15290
  %275 = ashr i32 %274, 9, !dbg !15291
  %276 = and i32 %275, 3, !dbg !15292
  %277 = or i32 %272, %276, !dbg !15293
  %278 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15294
  store i32 %277, i32* %278, align 4, !dbg !15295
  %279 = load i16, i16* %7, align 2, !dbg !15296
  %280 = zext i16 %279 to i32, !dbg !15296
  %281 = shl i32 %280, 3, !dbg !15297
  %282 = and i32 %281, 248, !dbg !15298
  %283 = load i16, i16* %7, align 2, !dbg !15299
  %284 = zext i16 %283 to i32, !dbg !15299
  %285 = ashr i32 %284, 2, !dbg !15300
  %286 = and i32 %285, 7, !dbg !15301
  %287 = or i32 %282, %286, !dbg !15302
  %288 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15303
  store i32 %287, i32* %288, align 4, !dbg !15304
  %289 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15305
  %290 = load i32, i32* %289, align 4, !dbg !15305
  %291 = load i32, i32* @g_red_shift_r, align 4, !dbg !15306
  %292 = lshr i32 %290, %291, !dbg !15307
  %293 = load i32, i32* @g_red_shift_l, align 4, !dbg !15308
  %294 = shl i32 %292, %293, !dbg !15309
  %295 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15310
  %296 = load i32, i32* %295, align 4, !dbg !15310
  %297 = load i32, i32* @g_green_shift_r, align 4, !dbg !15311
  %298 = lshr i32 %296, %297, !dbg !15312
  %299 = load i32, i32* @g_green_shift_l, align 4, !dbg !15313
  %300 = shl i32 %298, %299, !dbg !15314
  %301 = or i32 %294, %300, !dbg !15315
  %302 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15316
  %303 = load i32, i32* %302, align 4, !dbg !15316
  %304 = load i32, i32* @g_blue_shift_r, align 4, !dbg !15317
  %305 = lshr i32 %303, %304, !dbg !15318
  %306 = load i32, i32* @g_blue_shift_l, align 4, !dbg !15319
  %307 = shl i32 %305, %306, !dbg !15320
  %308 = or i32 %301, %307, !dbg !15321
  %309 = trunc i32 %308 to i16, !dbg !15322
  store i16 %309, i16* %8, align 2, !dbg !15323
  %310 = load i16, i16* %8, align 2, !dbg !15324
  %311 = trunc i16 %310 to i8, !dbg !15324
  %312 = load i8*, i8** %5, align 8, !dbg !15326
  %313 = getelementptr inbounds i8, i8* %312, i32 1, !dbg !15326
  store i8* %313, i8** %5, align 8, !dbg !15326
  store i8 %311, i8* %312, align 1, !dbg !15327
  %314 = load i16, i16* %8, align 2, !dbg !15328
  %315 = zext i16 %314 to i32, !dbg !15328
  %316 = ashr i32 %315, 8, !dbg !15329
  %317 = trunc i32 %316 to i8, !dbg !15328
  %318 = load i8*, i8** %5, align 8, !dbg !15330
  %319 = getelementptr inbounds i8, i8* %318, i32 1, !dbg !15330
  store i8* %319, i8** %5, align 8, !dbg !15330
  store i8 %317, i8* %318, align 1, !dbg !15331
  br label %251, !dbg !15332, !llvm.loop !15334

; <label>:320:                                    ; preds = %251
  br label %321

; <label>:321:                                    ; preds = %320, %249
  br label %322

; <label>:322:                                    ; preds = %321, %166
  ret void, !dbg !15335
}

; Function Attrs: nounwind uwtable
define internal void @translate15to32(i16*, i8*, i8*) #0 !dbg !15336 {
  %4 = alloca i16*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca %struct.PixelColour, align 4
  store i16* %0, i16** %4, align 8
  call void @llvm.dbg.declare(metadata i16** %4, metadata !15337, metadata !416), !dbg !15338
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15339, metadata !416), !dbg !15340
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !15341, metadata !416), !dbg !15342
  call void @llvm.dbg.declare(metadata i16* %7, metadata !15343, metadata !416), !dbg !15344
  call void @llvm.dbg.declare(metadata i32* %8, metadata !15345, metadata !416), !dbg !15346
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %9, metadata !15347, metadata !416), !dbg !15348
  %10 = load i32, i32* @g_compatible_arch, align 4, !dbg !15349
  %11 = icmp ne i32 %10, 0, !dbg !15349
  br i1 %11, label %12, label %476, !dbg !15351

; <label>:12:                                     ; preds = %3
  br label %13, !dbg !15352

; <label>:13:                                     ; preds = %18, %12
  %14 = load i8*, i8** %5, align 8, !dbg !15355
  %15 = load i8*, i8** %6, align 8, !dbg !15357
  %16 = getelementptr inbounds i8, i8* %15, i64 -32, !dbg !15358
  %17 = icmp ule i8* %14, %16, !dbg !15359
  br i1 %17, label %18, label %419, !dbg !15360

; <label>:18:                                     ; preds = %13
  %19 = load i16*, i16** %4, align 8, !dbg !15361
  %20 = getelementptr inbounds i16, i16* %19, i32 1, !dbg !15361
  store i16* %20, i16** %4, align 8, !dbg !15361
  %21 = load i16, i16* %19, align 2, !dbg !15364
  store i16 %21, i16* %7, align 2, !dbg !15365
  %22 = load i16, i16* %7, align 2, !dbg !15366
  %23 = zext i16 %22 to i32, !dbg !15366
  %24 = ashr i32 %23, 7, !dbg !15367
  %25 = and i32 %24, 248, !dbg !15368
  %26 = load i16, i16* %7, align 2, !dbg !15369
  %27 = zext i16 %26 to i32, !dbg !15369
  %28 = ashr i32 %27, 12, !dbg !15370
  %29 = and i32 %28, 7, !dbg !15371
  %30 = or i32 %25, %29, !dbg !15372
  %31 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15373
  store i32 %30, i32* %31, align 4, !dbg !15374
  %32 = load i16, i16* %7, align 2, !dbg !15375
  %33 = zext i16 %32 to i32, !dbg !15375
  %34 = ashr i32 %33, 2, !dbg !15376
  %35 = and i32 %34, 248, !dbg !15377
  %36 = load i16, i16* %7, align 2, !dbg !15378
  %37 = zext i16 %36 to i32, !dbg !15378
  %38 = ashr i32 %37, 8, !dbg !15379
  %39 = and i32 %38, 7, !dbg !15380
  %40 = or i32 %35, %39, !dbg !15381
  %41 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15382
  store i32 %40, i32* %41, align 4, !dbg !15383
  %42 = load i16, i16* %7, align 2, !dbg !15384
  %43 = zext i16 %42 to i32, !dbg !15384
  %44 = shl i32 %43, 3, !dbg !15385
  %45 = and i32 %44, 248, !dbg !15386
  %46 = load i16, i16* %7, align 2, !dbg !15387
  %47 = zext i16 %46 to i32, !dbg !15387
  %48 = ashr i32 %47, 2, !dbg !15388
  %49 = and i32 %48, 7, !dbg !15389
  %50 = or i32 %45, %49, !dbg !15390
  %51 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15391
  store i32 %50, i32* %51, align 4, !dbg !15392
  %52 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15393
  %53 = load i32, i32* %52, align 4, !dbg !15393
  %54 = trunc i32 %53 to i8, !dbg !15394
  %55 = load i8*, i8** %5, align 8, !dbg !15395
  %56 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !15395
  store i8* %56, i8** %5, align 8, !dbg !15395
  store i8 %54, i8* %55, align 1, !dbg !15396
  %57 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15397
  %58 = load i32, i32* %57, align 4, !dbg !15397
  %59 = trunc i32 %58 to i8, !dbg !15398
  %60 = load i8*, i8** %5, align 8, !dbg !15399
  %61 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !15399
  store i8* %61, i8** %5, align 8, !dbg !15399
  store i8 %59, i8* %60, align 1, !dbg !15400
  %62 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15401
  %63 = load i32, i32* %62, align 4, !dbg !15401
  %64 = trunc i32 %63 to i8, !dbg !15402
  %65 = load i8*, i8** %5, align 8, !dbg !15403
  %66 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !15403
  store i8* %66, i8** %5, align 8, !dbg !15403
  store i8 %64, i8* %65, align 1, !dbg !15404
  %67 = load i8*, i8** %5, align 8, !dbg !15405
  %68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !15405
  store i8* %68, i8** %5, align 8, !dbg !15405
  store i8 0, i8* %67, align 1, !dbg !15406
  %69 = load i16*, i16** %4, align 8, !dbg !15407
  %70 = getelementptr inbounds i16, i16* %69, i32 1, !dbg !15407
  store i16* %70, i16** %4, align 8, !dbg !15407
  %71 = load i16, i16* %69, align 2, !dbg !15408
  store i16 %71, i16* %7, align 2, !dbg !15409
  %72 = load i16, i16* %7, align 2, !dbg !15410
  %73 = zext i16 %72 to i32, !dbg !15410
  %74 = ashr i32 %73, 7, !dbg !15411
  %75 = and i32 %74, 248, !dbg !15412
  %76 = load i16, i16* %7, align 2, !dbg !15413
  %77 = zext i16 %76 to i32, !dbg !15413
  %78 = ashr i32 %77, 12, !dbg !15414
  %79 = and i32 %78, 7, !dbg !15415
  %80 = or i32 %75, %79, !dbg !15416
  %81 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15417
  store i32 %80, i32* %81, align 4, !dbg !15418
  %82 = load i16, i16* %7, align 2, !dbg !15419
  %83 = zext i16 %82 to i32, !dbg !15419
  %84 = ashr i32 %83, 2, !dbg !15420
  %85 = and i32 %84, 248, !dbg !15421
  %86 = load i16, i16* %7, align 2, !dbg !15422
  %87 = zext i16 %86 to i32, !dbg !15422
  %88 = ashr i32 %87, 8, !dbg !15423
  %89 = and i32 %88, 7, !dbg !15424
  %90 = or i32 %85, %89, !dbg !15425
  %91 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15426
  store i32 %90, i32* %91, align 4, !dbg !15427
  %92 = load i16, i16* %7, align 2, !dbg !15428
  %93 = zext i16 %92 to i32, !dbg !15428
  %94 = shl i32 %93, 3, !dbg !15429
  %95 = and i32 %94, 248, !dbg !15430
  %96 = load i16, i16* %7, align 2, !dbg !15431
  %97 = zext i16 %96 to i32, !dbg !15431
  %98 = ashr i32 %97, 2, !dbg !15432
  %99 = and i32 %98, 7, !dbg !15433
  %100 = or i32 %95, %99, !dbg !15434
  %101 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15435
  store i32 %100, i32* %101, align 4, !dbg !15436
  %102 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15437
  %103 = load i32, i32* %102, align 4, !dbg !15437
  %104 = trunc i32 %103 to i8, !dbg !15438
  %105 = load i8*, i8** %5, align 8, !dbg !15439
  %106 = getelementptr inbounds i8, i8* %105, i32 1, !dbg !15439
  store i8* %106, i8** %5, align 8, !dbg !15439
  store i8 %104, i8* %105, align 1, !dbg !15440
  %107 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15441
  %108 = load i32, i32* %107, align 4, !dbg !15441
  %109 = trunc i32 %108 to i8, !dbg !15442
  %110 = load i8*, i8** %5, align 8, !dbg !15443
  %111 = getelementptr inbounds i8, i8* %110, i32 1, !dbg !15443
  store i8* %111, i8** %5, align 8, !dbg !15443
  store i8 %109, i8* %110, align 1, !dbg !15444
  %112 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15445
  %113 = load i32, i32* %112, align 4, !dbg !15445
  %114 = trunc i32 %113 to i8, !dbg !15446
  %115 = load i8*, i8** %5, align 8, !dbg !15447
  %116 = getelementptr inbounds i8, i8* %115, i32 1, !dbg !15447
  store i8* %116, i8** %5, align 8, !dbg !15447
  store i8 %114, i8* %115, align 1, !dbg !15448
  %117 = load i8*, i8** %5, align 8, !dbg !15449
  %118 = getelementptr inbounds i8, i8* %117, i32 1, !dbg !15449
  store i8* %118, i8** %5, align 8, !dbg !15449
  store i8 0, i8* %117, align 1, !dbg !15450
  %119 = load i16*, i16** %4, align 8, !dbg !15451
  %120 = getelementptr inbounds i16, i16* %119, i32 1, !dbg !15451
  store i16* %120, i16** %4, align 8, !dbg !15451
  %121 = load i16, i16* %119, align 2, !dbg !15452
  store i16 %121, i16* %7, align 2, !dbg !15453
  %122 = load i16, i16* %7, align 2, !dbg !15454
  %123 = zext i16 %122 to i32, !dbg !15454
  %124 = ashr i32 %123, 7, !dbg !15455
  %125 = and i32 %124, 248, !dbg !15456
  %126 = load i16, i16* %7, align 2, !dbg !15457
  %127 = zext i16 %126 to i32, !dbg !15457
  %128 = ashr i32 %127, 12, !dbg !15458
  %129 = and i32 %128, 7, !dbg !15459
  %130 = or i32 %125, %129, !dbg !15460
  %131 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15461
  store i32 %130, i32* %131, align 4, !dbg !15462
  %132 = load i16, i16* %7, align 2, !dbg !15463
  %133 = zext i16 %132 to i32, !dbg !15463
  %134 = ashr i32 %133, 2, !dbg !15464
  %135 = and i32 %134, 248, !dbg !15465
  %136 = load i16, i16* %7, align 2, !dbg !15466
  %137 = zext i16 %136 to i32, !dbg !15466
  %138 = ashr i32 %137, 8, !dbg !15467
  %139 = and i32 %138, 7, !dbg !15468
  %140 = or i32 %135, %139, !dbg !15469
  %141 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15470
  store i32 %140, i32* %141, align 4, !dbg !15471
  %142 = load i16, i16* %7, align 2, !dbg !15472
  %143 = zext i16 %142 to i32, !dbg !15472
  %144 = shl i32 %143, 3, !dbg !15473
  %145 = and i32 %144, 248, !dbg !15474
  %146 = load i16, i16* %7, align 2, !dbg !15475
  %147 = zext i16 %146 to i32, !dbg !15475
  %148 = ashr i32 %147, 2, !dbg !15476
  %149 = and i32 %148, 7, !dbg !15477
  %150 = or i32 %145, %149, !dbg !15478
  %151 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15479
  store i32 %150, i32* %151, align 4, !dbg !15480
  %152 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15481
  %153 = load i32, i32* %152, align 4, !dbg !15481
  %154 = trunc i32 %153 to i8, !dbg !15482
  %155 = load i8*, i8** %5, align 8, !dbg !15483
  %156 = getelementptr inbounds i8, i8* %155, i32 1, !dbg !15483
  store i8* %156, i8** %5, align 8, !dbg !15483
  store i8 %154, i8* %155, align 1, !dbg !15484
  %157 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15485
  %158 = load i32, i32* %157, align 4, !dbg !15485
  %159 = trunc i32 %158 to i8, !dbg !15486
  %160 = load i8*, i8** %5, align 8, !dbg !15487
  %161 = getelementptr inbounds i8, i8* %160, i32 1, !dbg !15487
  store i8* %161, i8** %5, align 8, !dbg !15487
  store i8 %159, i8* %160, align 1, !dbg !15488
  %162 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15489
  %163 = load i32, i32* %162, align 4, !dbg !15489
  %164 = trunc i32 %163 to i8, !dbg !15490
  %165 = load i8*, i8** %5, align 8, !dbg !15491
  %166 = getelementptr inbounds i8, i8* %165, i32 1, !dbg !15491
  store i8* %166, i8** %5, align 8, !dbg !15491
  store i8 %164, i8* %165, align 1, !dbg !15492
  %167 = load i8*, i8** %5, align 8, !dbg !15493
  %168 = getelementptr inbounds i8, i8* %167, i32 1, !dbg !15493
  store i8* %168, i8** %5, align 8, !dbg !15493
  store i8 0, i8* %167, align 1, !dbg !15494
  %169 = load i16*, i16** %4, align 8, !dbg !15495
  %170 = getelementptr inbounds i16, i16* %169, i32 1, !dbg !15495
  store i16* %170, i16** %4, align 8, !dbg !15495
  %171 = load i16, i16* %169, align 2, !dbg !15496
  store i16 %171, i16* %7, align 2, !dbg !15497
  %172 = load i16, i16* %7, align 2, !dbg !15498
  %173 = zext i16 %172 to i32, !dbg !15498
  %174 = ashr i32 %173, 7, !dbg !15499
  %175 = and i32 %174, 248, !dbg !15500
  %176 = load i16, i16* %7, align 2, !dbg !15501
  %177 = zext i16 %176 to i32, !dbg !15501
  %178 = ashr i32 %177, 12, !dbg !15502
  %179 = and i32 %178, 7, !dbg !15503
  %180 = or i32 %175, %179, !dbg !15504
  %181 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15505
  store i32 %180, i32* %181, align 4, !dbg !15506
  %182 = load i16, i16* %7, align 2, !dbg !15507
  %183 = zext i16 %182 to i32, !dbg !15507
  %184 = ashr i32 %183, 2, !dbg !15508
  %185 = and i32 %184, 248, !dbg !15509
  %186 = load i16, i16* %7, align 2, !dbg !15510
  %187 = zext i16 %186 to i32, !dbg !15510
  %188 = ashr i32 %187, 8, !dbg !15511
  %189 = and i32 %188, 7, !dbg !15512
  %190 = or i32 %185, %189, !dbg !15513
  %191 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15514
  store i32 %190, i32* %191, align 4, !dbg !15515
  %192 = load i16, i16* %7, align 2, !dbg !15516
  %193 = zext i16 %192 to i32, !dbg !15516
  %194 = shl i32 %193, 3, !dbg !15517
  %195 = and i32 %194, 248, !dbg !15518
  %196 = load i16, i16* %7, align 2, !dbg !15519
  %197 = zext i16 %196 to i32, !dbg !15519
  %198 = ashr i32 %197, 2, !dbg !15520
  %199 = and i32 %198, 7, !dbg !15521
  %200 = or i32 %195, %199, !dbg !15522
  %201 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15523
  store i32 %200, i32* %201, align 4, !dbg !15524
  %202 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15525
  %203 = load i32, i32* %202, align 4, !dbg !15525
  %204 = trunc i32 %203 to i8, !dbg !15526
  %205 = load i8*, i8** %5, align 8, !dbg !15527
  %206 = getelementptr inbounds i8, i8* %205, i32 1, !dbg !15527
  store i8* %206, i8** %5, align 8, !dbg !15527
  store i8 %204, i8* %205, align 1, !dbg !15528
  %207 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15529
  %208 = load i32, i32* %207, align 4, !dbg !15529
  %209 = trunc i32 %208 to i8, !dbg !15530
  %210 = load i8*, i8** %5, align 8, !dbg !15531
  %211 = getelementptr inbounds i8, i8* %210, i32 1, !dbg !15531
  store i8* %211, i8** %5, align 8, !dbg !15531
  store i8 %209, i8* %210, align 1, !dbg !15532
  %212 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15533
  %213 = load i32, i32* %212, align 4, !dbg !15533
  %214 = trunc i32 %213 to i8, !dbg !15534
  %215 = load i8*, i8** %5, align 8, !dbg !15535
  %216 = getelementptr inbounds i8, i8* %215, i32 1, !dbg !15535
  store i8* %216, i8** %5, align 8, !dbg !15535
  store i8 %214, i8* %215, align 1, !dbg !15536
  %217 = load i8*, i8** %5, align 8, !dbg !15537
  %218 = getelementptr inbounds i8, i8* %217, i32 1, !dbg !15537
  store i8* %218, i8** %5, align 8, !dbg !15537
  store i8 0, i8* %217, align 1, !dbg !15538
  %219 = load i16*, i16** %4, align 8, !dbg !15539
  %220 = getelementptr inbounds i16, i16* %219, i32 1, !dbg !15539
  store i16* %220, i16** %4, align 8, !dbg !15539
  %221 = load i16, i16* %219, align 2, !dbg !15540
  store i16 %221, i16* %7, align 2, !dbg !15541
  %222 = load i16, i16* %7, align 2, !dbg !15542
  %223 = zext i16 %222 to i32, !dbg !15542
  %224 = ashr i32 %223, 7, !dbg !15543
  %225 = and i32 %224, 248, !dbg !15544
  %226 = load i16, i16* %7, align 2, !dbg !15545
  %227 = zext i16 %226 to i32, !dbg !15545
  %228 = ashr i32 %227, 12, !dbg !15546
  %229 = and i32 %228, 7, !dbg !15547
  %230 = or i32 %225, %229, !dbg !15548
  %231 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15549
  store i32 %230, i32* %231, align 4, !dbg !15550
  %232 = load i16, i16* %7, align 2, !dbg !15551
  %233 = zext i16 %232 to i32, !dbg !15551
  %234 = ashr i32 %233, 2, !dbg !15552
  %235 = and i32 %234, 248, !dbg !15553
  %236 = load i16, i16* %7, align 2, !dbg !15554
  %237 = zext i16 %236 to i32, !dbg !15554
  %238 = ashr i32 %237, 8, !dbg !15555
  %239 = and i32 %238, 7, !dbg !15556
  %240 = or i32 %235, %239, !dbg !15557
  %241 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15558
  store i32 %240, i32* %241, align 4, !dbg !15559
  %242 = load i16, i16* %7, align 2, !dbg !15560
  %243 = zext i16 %242 to i32, !dbg !15560
  %244 = shl i32 %243, 3, !dbg !15561
  %245 = and i32 %244, 248, !dbg !15562
  %246 = load i16, i16* %7, align 2, !dbg !15563
  %247 = zext i16 %246 to i32, !dbg !15563
  %248 = ashr i32 %247, 2, !dbg !15564
  %249 = and i32 %248, 7, !dbg !15565
  %250 = or i32 %245, %249, !dbg !15566
  %251 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15567
  store i32 %250, i32* %251, align 4, !dbg !15568
  %252 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15569
  %253 = load i32, i32* %252, align 4, !dbg !15569
  %254 = trunc i32 %253 to i8, !dbg !15570
  %255 = load i8*, i8** %5, align 8, !dbg !15571
  %256 = getelementptr inbounds i8, i8* %255, i32 1, !dbg !15571
  store i8* %256, i8** %5, align 8, !dbg !15571
  store i8 %254, i8* %255, align 1, !dbg !15572
  %257 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15573
  %258 = load i32, i32* %257, align 4, !dbg !15573
  %259 = trunc i32 %258 to i8, !dbg !15574
  %260 = load i8*, i8** %5, align 8, !dbg !15575
  %261 = getelementptr inbounds i8, i8* %260, i32 1, !dbg !15575
  store i8* %261, i8** %5, align 8, !dbg !15575
  store i8 %259, i8* %260, align 1, !dbg !15576
  %262 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15577
  %263 = load i32, i32* %262, align 4, !dbg !15577
  %264 = trunc i32 %263 to i8, !dbg !15578
  %265 = load i8*, i8** %5, align 8, !dbg !15579
  %266 = getelementptr inbounds i8, i8* %265, i32 1, !dbg !15579
  store i8* %266, i8** %5, align 8, !dbg !15579
  store i8 %264, i8* %265, align 1, !dbg !15580
  %267 = load i8*, i8** %5, align 8, !dbg !15581
  %268 = getelementptr inbounds i8, i8* %267, i32 1, !dbg !15581
  store i8* %268, i8** %5, align 8, !dbg !15581
  store i8 0, i8* %267, align 1, !dbg !15582
  %269 = load i16*, i16** %4, align 8, !dbg !15583
  %270 = getelementptr inbounds i16, i16* %269, i32 1, !dbg !15583
  store i16* %270, i16** %4, align 8, !dbg !15583
  %271 = load i16, i16* %269, align 2, !dbg !15584
  store i16 %271, i16* %7, align 2, !dbg !15585
  %272 = load i16, i16* %7, align 2, !dbg !15586
  %273 = zext i16 %272 to i32, !dbg !15586
  %274 = ashr i32 %273, 7, !dbg !15587
  %275 = and i32 %274, 248, !dbg !15588
  %276 = load i16, i16* %7, align 2, !dbg !15589
  %277 = zext i16 %276 to i32, !dbg !15589
  %278 = ashr i32 %277, 12, !dbg !15590
  %279 = and i32 %278, 7, !dbg !15591
  %280 = or i32 %275, %279, !dbg !15592
  %281 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15593
  store i32 %280, i32* %281, align 4, !dbg !15594
  %282 = load i16, i16* %7, align 2, !dbg !15595
  %283 = zext i16 %282 to i32, !dbg !15595
  %284 = ashr i32 %283, 2, !dbg !15596
  %285 = and i32 %284, 248, !dbg !15597
  %286 = load i16, i16* %7, align 2, !dbg !15598
  %287 = zext i16 %286 to i32, !dbg !15598
  %288 = ashr i32 %287, 8, !dbg !15599
  %289 = and i32 %288, 7, !dbg !15600
  %290 = or i32 %285, %289, !dbg !15601
  %291 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15602
  store i32 %290, i32* %291, align 4, !dbg !15603
  %292 = load i16, i16* %7, align 2, !dbg !15604
  %293 = zext i16 %292 to i32, !dbg !15604
  %294 = shl i32 %293, 3, !dbg !15605
  %295 = and i32 %294, 248, !dbg !15606
  %296 = load i16, i16* %7, align 2, !dbg !15607
  %297 = zext i16 %296 to i32, !dbg !15607
  %298 = ashr i32 %297, 2, !dbg !15608
  %299 = and i32 %298, 7, !dbg !15609
  %300 = or i32 %295, %299, !dbg !15610
  %301 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15611
  store i32 %300, i32* %301, align 4, !dbg !15612
  %302 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15613
  %303 = load i32, i32* %302, align 4, !dbg !15613
  %304 = trunc i32 %303 to i8, !dbg !15614
  %305 = load i8*, i8** %5, align 8, !dbg !15615
  %306 = getelementptr inbounds i8, i8* %305, i32 1, !dbg !15615
  store i8* %306, i8** %5, align 8, !dbg !15615
  store i8 %304, i8* %305, align 1, !dbg !15616
  %307 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15617
  %308 = load i32, i32* %307, align 4, !dbg !15617
  %309 = trunc i32 %308 to i8, !dbg !15618
  %310 = load i8*, i8** %5, align 8, !dbg !15619
  %311 = getelementptr inbounds i8, i8* %310, i32 1, !dbg !15619
  store i8* %311, i8** %5, align 8, !dbg !15619
  store i8 %309, i8* %310, align 1, !dbg !15620
  %312 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15621
  %313 = load i32, i32* %312, align 4, !dbg !15621
  %314 = trunc i32 %313 to i8, !dbg !15622
  %315 = load i8*, i8** %5, align 8, !dbg !15623
  %316 = getelementptr inbounds i8, i8* %315, i32 1, !dbg !15623
  store i8* %316, i8** %5, align 8, !dbg !15623
  store i8 %314, i8* %315, align 1, !dbg !15624
  %317 = load i8*, i8** %5, align 8, !dbg !15625
  %318 = getelementptr inbounds i8, i8* %317, i32 1, !dbg !15625
  store i8* %318, i8** %5, align 8, !dbg !15625
  store i8 0, i8* %317, align 1, !dbg !15626
  %319 = load i16*, i16** %4, align 8, !dbg !15627
  %320 = getelementptr inbounds i16, i16* %319, i32 1, !dbg !15627
  store i16* %320, i16** %4, align 8, !dbg !15627
  %321 = load i16, i16* %319, align 2, !dbg !15628
  store i16 %321, i16* %7, align 2, !dbg !15629
  %322 = load i16, i16* %7, align 2, !dbg !15630
  %323 = zext i16 %322 to i32, !dbg !15630
  %324 = ashr i32 %323, 7, !dbg !15631
  %325 = and i32 %324, 248, !dbg !15632
  %326 = load i16, i16* %7, align 2, !dbg !15633
  %327 = zext i16 %326 to i32, !dbg !15633
  %328 = ashr i32 %327, 12, !dbg !15634
  %329 = and i32 %328, 7, !dbg !15635
  %330 = or i32 %325, %329, !dbg !15636
  %331 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15637
  store i32 %330, i32* %331, align 4, !dbg !15638
  %332 = load i16, i16* %7, align 2, !dbg !15639
  %333 = zext i16 %332 to i32, !dbg !15639
  %334 = ashr i32 %333, 2, !dbg !15640
  %335 = and i32 %334, 248, !dbg !15641
  %336 = load i16, i16* %7, align 2, !dbg !15642
  %337 = zext i16 %336 to i32, !dbg !15642
  %338 = ashr i32 %337, 8, !dbg !15643
  %339 = and i32 %338, 7, !dbg !15644
  %340 = or i32 %335, %339, !dbg !15645
  %341 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15646
  store i32 %340, i32* %341, align 4, !dbg !15647
  %342 = load i16, i16* %7, align 2, !dbg !15648
  %343 = zext i16 %342 to i32, !dbg !15648
  %344 = shl i32 %343, 3, !dbg !15649
  %345 = and i32 %344, 248, !dbg !15650
  %346 = load i16, i16* %7, align 2, !dbg !15651
  %347 = zext i16 %346 to i32, !dbg !15651
  %348 = ashr i32 %347, 2, !dbg !15652
  %349 = and i32 %348, 7, !dbg !15653
  %350 = or i32 %345, %349, !dbg !15654
  %351 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15655
  store i32 %350, i32* %351, align 4, !dbg !15656
  %352 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15657
  %353 = load i32, i32* %352, align 4, !dbg !15657
  %354 = trunc i32 %353 to i8, !dbg !15658
  %355 = load i8*, i8** %5, align 8, !dbg !15659
  %356 = getelementptr inbounds i8, i8* %355, i32 1, !dbg !15659
  store i8* %356, i8** %5, align 8, !dbg !15659
  store i8 %354, i8* %355, align 1, !dbg !15660
  %357 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15661
  %358 = load i32, i32* %357, align 4, !dbg !15661
  %359 = trunc i32 %358 to i8, !dbg !15662
  %360 = load i8*, i8** %5, align 8, !dbg !15663
  %361 = getelementptr inbounds i8, i8* %360, i32 1, !dbg !15663
  store i8* %361, i8** %5, align 8, !dbg !15663
  store i8 %359, i8* %360, align 1, !dbg !15664
  %362 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15665
  %363 = load i32, i32* %362, align 4, !dbg !15665
  %364 = trunc i32 %363 to i8, !dbg !15666
  %365 = load i8*, i8** %5, align 8, !dbg !15667
  %366 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !15667
  store i8* %366, i8** %5, align 8, !dbg !15667
  store i8 %364, i8* %365, align 1, !dbg !15668
  %367 = load i8*, i8** %5, align 8, !dbg !15669
  %368 = getelementptr inbounds i8, i8* %367, i32 1, !dbg !15669
  store i8* %368, i8** %5, align 8, !dbg !15669
  store i8 0, i8* %367, align 1, !dbg !15670
  %369 = load i16*, i16** %4, align 8, !dbg !15671
  %370 = getelementptr inbounds i16, i16* %369, i32 1, !dbg !15671
  store i16* %370, i16** %4, align 8, !dbg !15671
  %371 = load i16, i16* %369, align 2, !dbg !15672
  store i16 %371, i16* %7, align 2, !dbg !15673
  %372 = load i16, i16* %7, align 2, !dbg !15674
  %373 = zext i16 %372 to i32, !dbg !15674
  %374 = ashr i32 %373, 7, !dbg !15675
  %375 = and i32 %374, 248, !dbg !15676
  %376 = load i16, i16* %7, align 2, !dbg !15677
  %377 = zext i16 %376 to i32, !dbg !15677
  %378 = ashr i32 %377, 12, !dbg !15678
  %379 = and i32 %378, 7, !dbg !15679
  %380 = or i32 %375, %379, !dbg !15680
  %381 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15681
  store i32 %380, i32* %381, align 4, !dbg !15682
  %382 = load i16, i16* %7, align 2, !dbg !15683
  %383 = zext i16 %382 to i32, !dbg !15683
  %384 = ashr i32 %383, 2, !dbg !15684
  %385 = and i32 %384, 248, !dbg !15685
  %386 = load i16, i16* %7, align 2, !dbg !15686
  %387 = zext i16 %386 to i32, !dbg !15686
  %388 = ashr i32 %387, 8, !dbg !15687
  %389 = and i32 %388, 7, !dbg !15688
  %390 = or i32 %385, %389, !dbg !15689
  %391 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15690
  store i32 %390, i32* %391, align 4, !dbg !15691
  %392 = load i16, i16* %7, align 2, !dbg !15692
  %393 = zext i16 %392 to i32, !dbg !15692
  %394 = shl i32 %393, 3, !dbg !15693
  %395 = and i32 %394, 248, !dbg !15694
  %396 = load i16, i16* %7, align 2, !dbg !15695
  %397 = zext i16 %396 to i32, !dbg !15695
  %398 = ashr i32 %397, 2, !dbg !15696
  %399 = and i32 %398, 7, !dbg !15697
  %400 = or i32 %395, %399, !dbg !15698
  %401 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15699
  store i32 %400, i32* %401, align 4, !dbg !15700
  %402 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15701
  %403 = load i32, i32* %402, align 4, !dbg !15701
  %404 = trunc i32 %403 to i8, !dbg !15702
  %405 = load i8*, i8** %5, align 8, !dbg !15703
  %406 = getelementptr inbounds i8, i8* %405, i32 1, !dbg !15703
  store i8* %406, i8** %5, align 8, !dbg !15703
  store i8 %404, i8* %405, align 1, !dbg !15704
  %407 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15705
  %408 = load i32, i32* %407, align 4, !dbg !15705
  %409 = trunc i32 %408 to i8, !dbg !15706
  %410 = load i8*, i8** %5, align 8, !dbg !15707
  %411 = getelementptr inbounds i8, i8* %410, i32 1, !dbg !15707
  store i8* %411, i8** %5, align 8, !dbg !15707
  store i8 %409, i8* %410, align 1, !dbg !15708
  %412 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15709
  %413 = load i32, i32* %412, align 4, !dbg !15709
  %414 = trunc i32 %413 to i8, !dbg !15710
  %415 = load i8*, i8** %5, align 8, !dbg !15711
  %416 = getelementptr inbounds i8, i8* %415, i32 1, !dbg !15711
  store i8* %416, i8** %5, align 8, !dbg !15711
  store i8 %414, i8* %415, align 1, !dbg !15712
  %417 = load i8*, i8** %5, align 8, !dbg !15713
  %418 = getelementptr inbounds i8, i8* %417, i32 1, !dbg !15713
  store i8* %418, i8** %5, align 8, !dbg !15713
  store i8 0, i8* %417, align 1, !dbg !15714
  br label %13, !dbg !15715, !llvm.loop !15716

; <label>:419:                                    ; preds = %13
  br label %420, !dbg !15717

; <label>:420:                                    ; preds = %424, %419
  %421 = load i8*, i8** %5, align 8, !dbg !15719
  %422 = load i8*, i8** %6, align 8, !dbg !15721
  %423 = icmp ult i8* %421, %422, !dbg !15722
  br i1 %423, label %424, label %475, !dbg !15723

; <label>:424:                                    ; preds = %420
  %425 = load i16*, i16** %4, align 8, !dbg !15724
  %426 = getelementptr inbounds i16, i16* %425, i32 1, !dbg !15724
  store i16* %426, i16** %4, align 8, !dbg !15724
  %427 = load i16, i16* %425, align 2, !dbg !15727
  store i16 %427, i16* %7, align 2, !dbg !15728
  %428 = load i16, i16* %7, align 2, !dbg !15729
  %429 = zext i16 %428 to i32, !dbg !15729
  %430 = ashr i32 %429, 7, !dbg !15730
  %431 = and i32 %430, 248, !dbg !15731
  %432 = load i16, i16* %7, align 2, !dbg !15732
  %433 = zext i16 %432 to i32, !dbg !15732
  %434 = ashr i32 %433, 12, !dbg !15733
  %435 = and i32 %434, 7, !dbg !15734
  %436 = or i32 %431, %435, !dbg !15735
  %437 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15736
  store i32 %436, i32* %437, align 4, !dbg !15737
  %438 = load i16, i16* %7, align 2, !dbg !15738
  %439 = zext i16 %438 to i32, !dbg !15738
  %440 = ashr i32 %439, 2, !dbg !15739
  %441 = and i32 %440, 248, !dbg !15740
  %442 = load i16, i16* %7, align 2, !dbg !15741
  %443 = zext i16 %442 to i32, !dbg !15741
  %444 = ashr i32 %443, 8, !dbg !15742
  %445 = and i32 %444, 7, !dbg !15743
  %446 = or i32 %441, %445, !dbg !15744
  %447 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15745
  store i32 %446, i32* %447, align 4, !dbg !15746
  %448 = load i16, i16* %7, align 2, !dbg !15747
  %449 = zext i16 %448 to i32, !dbg !15747
  %450 = shl i32 %449, 3, !dbg !15748
  %451 = and i32 %450, 248, !dbg !15749
  %452 = load i16, i16* %7, align 2, !dbg !15750
  %453 = zext i16 %452 to i32, !dbg !15750
  %454 = ashr i32 %453, 2, !dbg !15751
  %455 = and i32 %454, 7, !dbg !15752
  %456 = or i32 %451, %455, !dbg !15753
  %457 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15754
  store i32 %456, i32* %457, align 4, !dbg !15755
  %458 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15756
  %459 = load i32, i32* %458, align 4, !dbg !15756
  %460 = trunc i32 %459 to i8, !dbg !15757
  %461 = load i8*, i8** %5, align 8, !dbg !15758
  %462 = getelementptr inbounds i8, i8* %461, i32 1, !dbg !15758
  store i8* %462, i8** %5, align 8, !dbg !15758
  store i8 %460, i8* %461, align 1, !dbg !15759
  %463 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15760
  %464 = load i32, i32* %463, align 4, !dbg !15760
  %465 = trunc i32 %464 to i8, !dbg !15761
  %466 = load i8*, i8** %5, align 8, !dbg !15762
  %467 = getelementptr inbounds i8, i8* %466, i32 1, !dbg !15762
  store i8* %467, i8** %5, align 8, !dbg !15762
  store i8 %465, i8* %466, align 1, !dbg !15763
  %468 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15764
  %469 = load i32, i32* %468, align 4, !dbg !15764
  %470 = trunc i32 %469 to i8, !dbg !15765
  %471 = load i8*, i8** %5, align 8, !dbg !15766
  %472 = getelementptr inbounds i8, i8* %471, i32 1, !dbg !15766
  store i8* %472, i8** %5, align 8, !dbg !15766
  store i8 %470, i8* %471, align 1, !dbg !15767
  %473 = load i8*, i8** %5, align 8, !dbg !15768
  %474 = getelementptr inbounds i8, i8* %473, i32 1, !dbg !15768
  store i8* %474, i8** %5, align 8, !dbg !15768
  store i8 0, i8* %473, align 1, !dbg !15769
  br label %420, !dbg !15770, !llvm.loop !15771

; <label>:475:                                    ; preds = %420
  br label %664, !dbg !15773

; <label>:476:                                    ; preds = %3
  %477 = load i32, i32* @g_xserver_be, align 4, !dbg !15774
  %478 = icmp ne i32 %477, 0, !dbg !15774
  br i1 %478, label %479, label %571, !dbg !15776

; <label>:479:                                    ; preds = %476
  br label %480, !dbg !15777

; <label>:480:                                    ; preds = %500, %479
  %481 = load i8*, i8** %5, align 8, !dbg !15779
  %482 = load i8*, i8** %6, align 8, !dbg !15781
  %483 = icmp ult i8* %481, %482, !dbg !15782
  br i1 %483, label %484, label %570, !dbg !15783

; <label>:484:                                    ; preds = %480
  %485 = load i16*, i16** %4, align 8, !dbg !15784
  %486 = getelementptr inbounds i16, i16* %485, i32 1, !dbg !15784
  store i16* %486, i16** %4, align 8, !dbg !15784
  %487 = load i16, i16* %485, align 2, !dbg !15786
  store i16 %487, i16* %7, align 2, !dbg !15787
  %488 = load i32, i32* @g_host_be, align 4, !dbg !15788
  %489 = icmp ne i32 %488, 0, !dbg !15788
  br i1 %489, label %490, label %500, !dbg !15790

; <label>:490:                                    ; preds = %484
  %491 = load i16, i16* %7, align 2, !dbg !15791
  %492 = zext i16 %491 to i32, !dbg !15791
  %493 = and i32 %492, 255, !dbg !15794
  %494 = shl i32 %493, 8, !dbg !15795
  %495 = load i16, i16* %7, align 2, !dbg !15796
  %496 = zext i16 %495 to i32, !dbg !15796
  %497 = ashr i32 %496, 8, !dbg !15797
  %498 = or i32 %494, %497, !dbg !15798
  %499 = trunc i32 %498 to i16, !dbg !15799
  store i16 %499, i16* %7, align 2, !dbg !15800
  br label %500, !dbg !15801

; <label>:500:                                    ; preds = %490, %484
  %501 = load i16, i16* %7, align 2, !dbg !15802
  %502 = zext i16 %501 to i32, !dbg !15802
  %503 = ashr i32 %502, 7, !dbg !15804
  %504 = and i32 %503, 248, !dbg !15805
  %505 = load i16, i16* %7, align 2, !dbg !15806
  %506 = zext i16 %505 to i32, !dbg !15806
  %507 = ashr i32 %506, 12, !dbg !15807
  %508 = and i32 %507, 7, !dbg !15808
  %509 = or i32 %504, %508, !dbg !15809
  %510 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15810
  store i32 %509, i32* %510, align 4, !dbg !15811
  %511 = load i16, i16* %7, align 2, !dbg !15812
  %512 = zext i16 %511 to i32, !dbg !15812
  %513 = ashr i32 %512, 2, !dbg !15813
  %514 = and i32 %513, 248, !dbg !15814
  %515 = load i16, i16* %7, align 2, !dbg !15815
  %516 = zext i16 %515 to i32, !dbg !15815
  %517 = ashr i32 %516, 8, !dbg !15816
  %518 = and i32 %517, 7, !dbg !15817
  %519 = or i32 %514, %518, !dbg !15818
  %520 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15819
  store i32 %519, i32* %520, align 4, !dbg !15820
  %521 = load i16, i16* %7, align 2, !dbg !15821
  %522 = zext i16 %521 to i32, !dbg !15821
  %523 = shl i32 %522, 3, !dbg !15822
  %524 = and i32 %523, 248, !dbg !15823
  %525 = load i16, i16* %7, align 2, !dbg !15824
  %526 = zext i16 %525 to i32, !dbg !15824
  %527 = ashr i32 %526, 2, !dbg !15825
  %528 = and i32 %527, 7, !dbg !15826
  %529 = or i32 %524, %528, !dbg !15827
  %530 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15828
  store i32 %529, i32* %530, align 4, !dbg !15829
  %531 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15830
  %532 = load i32, i32* %531, align 4, !dbg !15830
  %533 = load i32, i32* @g_red_shift_r, align 4, !dbg !15831
  %534 = lshr i32 %532, %533, !dbg !15832
  %535 = load i32, i32* @g_red_shift_l, align 4, !dbg !15833
  %536 = shl i32 %534, %535, !dbg !15834
  %537 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15835
  %538 = load i32, i32* %537, align 4, !dbg !15835
  %539 = load i32, i32* @g_green_shift_r, align 4, !dbg !15836
  %540 = lshr i32 %538, %539, !dbg !15837
  %541 = load i32, i32* @g_green_shift_l, align 4, !dbg !15838
  %542 = shl i32 %540, %541, !dbg !15839
  %543 = or i32 %536, %542, !dbg !15840
  %544 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15841
  %545 = load i32, i32* %544, align 4, !dbg !15841
  %546 = load i32, i32* @g_blue_shift_r, align 4, !dbg !15842
  %547 = lshr i32 %545, %546, !dbg !15843
  %548 = load i32, i32* @g_blue_shift_l, align 4, !dbg !15844
  %549 = shl i32 %547, %548, !dbg !15845
  %550 = or i32 %543, %549, !dbg !15846
  store i32 %550, i32* %8, align 4, !dbg !15847
  %551 = load i32, i32* %8, align 4, !dbg !15848
  %552 = lshr i32 %551, 24, !dbg !15850
  %553 = trunc i32 %552 to i8, !dbg !15848
  %554 = load i8*, i8** %5, align 8, !dbg !15851
  %555 = getelementptr inbounds i8, i8* %554, i32 1, !dbg !15851
  store i8* %555, i8** %5, align 8, !dbg !15851
  store i8 %553, i8* %554, align 1, !dbg !15852
  %556 = load i32, i32* %8, align 4, !dbg !15853
  %557 = lshr i32 %556, 16, !dbg !15854
  %558 = trunc i32 %557 to i8, !dbg !15853
  %559 = load i8*, i8** %5, align 8, !dbg !15855
  %560 = getelementptr inbounds i8, i8* %559, i32 1, !dbg !15855
  store i8* %560, i8** %5, align 8, !dbg !15855
  store i8 %558, i8* %559, align 1, !dbg !15856
  %561 = load i32, i32* %8, align 4, !dbg !15857
  %562 = lshr i32 %561, 8, !dbg !15858
  %563 = trunc i32 %562 to i8, !dbg !15857
  %564 = load i8*, i8** %5, align 8, !dbg !15859
  %565 = getelementptr inbounds i8, i8* %564, i32 1, !dbg !15859
  store i8* %565, i8** %5, align 8, !dbg !15859
  store i8 %563, i8* %564, align 1, !dbg !15860
  %566 = load i32, i32* %8, align 4, !dbg !15861
  %567 = trunc i32 %566 to i8, !dbg !15861
  %568 = load i8*, i8** %5, align 8, !dbg !15862
  %569 = getelementptr inbounds i8, i8* %568, i32 1, !dbg !15862
  store i8* %569, i8** %5, align 8, !dbg !15862
  store i8 %567, i8* %568, align 1, !dbg !15863
  br label %480, !dbg !15864, !llvm.loop !15866

; <label>:570:                                    ; preds = %480
  br label %663, !dbg !15867

; <label>:571:                                    ; preds = %476
  br label %572, !dbg !15868

; <label>:572:                                    ; preds = %592, %571
  %573 = load i8*, i8** %5, align 8, !dbg !15870
  %574 = load i8*, i8** %6, align 8, !dbg !15872
  %575 = icmp ult i8* %573, %574, !dbg !15873
  br i1 %575, label %576, label %662, !dbg !15874

; <label>:576:                                    ; preds = %572
  %577 = load i16*, i16** %4, align 8, !dbg !15875
  %578 = getelementptr inbounds i16, i16* %577, i32 1, !dbg !15875
  store i16* %578, i16** %4, align 8, !dbg !15875
  %579 = load i16, i16* %577, align 2, !dbg !15877
  store i16 %579, i16* %7, align 2, !dbg !15878
  %580 = load i32, i32* @g_host_be, align 4, !dbg !15879
  %581 = icmp ne i32 %580, 0, !dbg !15879
  br i1 %581, label %582, label %592, !dbg !15881

; <label>:582:                                    ; preds = %576
  %583 = load i16, i16* %7, align 2, !dbg !15882
  %584 = zext i16 %583 to i32, !dbg !15882
  %585 = and i32 %584, 255, !dbg !15885
  %586 = shl i32 %585, 8, !dbg !15886
  %587 = load i16, i16* %7, align 2, !dbg !15887
  %588 = zext i16 %587 to i32, !dbg !15887
  %589 = ashr i32 %588, 8, !dbg !15888
  %590 = or i32 %586, %589, !dbg !15889
  %591 = trunc i32 %590 to i16, !dbg !15890
  store i16 %591, i16* %7, align 2, !dbg !15891
  br label %592, !dbg !15892

; <label>:592:                                    ; preds = %582, %576
  %593 = load i16, i16* %7, align 2, !dbg !15893
  %594 = zext i16 %593 to i32, !dbg !15893
  %595 = ashr i32 %594, 7, !dbg !15895
  %596 = and i32 %595, 248, !dbg !15896
  %597 = load i16, i16* %7, align 2, !dbg !15897
  %598 = zext i16 %597 to i32, !dbg !15897
  %599 = ashr i32 %598, 12, !dbg !15898
  %600 = and i32 %599, 7, !dbg !15899
  %601 = or i32 %596, %600, !dbg !15900
  %602 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15901
  store i32 %601, i32* %602, align 4, !dbg !15902
  %603 = load i16, i16* %7, align 2, !dbg !15903
  %604 = zext i16 %603 to i32, !dbg !15903
  %605 = ashr i32 %604, 2, !dbg !15904
  %606 = and i32 %605, 248, !dbg !15905
  %607 = load i16, i16* %7, align 2, !dbg !15906
  %608 = zext i16 %607 to i32, !dbg !15906
  %609 = ashr i32 %608, 8, !dbg !15907
  %610 = and i32 %609, 7, !dbg !15908
  %611 = or i32 %606, %610, !dbg !15909
  %612 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15910
  store i32 %611, i32* %612, align 4, !dbg !15911
  %613 = load i16, i16* %7, align 2, !dbg !15912
  %614 = zext i16 %613 to i32, !dbg !15912
  %615 = shl i32 %614, 3, !dbg !15913
  %616 = and i32 %615, 248, !dbg !15914
  %617 = load i16, i16* %7, align 2, !dbg !15915
  %618 = zext i16 %617 to i32, !dbg !15915
  %619 = ashr i32 %618, 2, !dbg !15916
  %620 = and i32 %619, 7, !dbg !15917
  %621 = or i32 %616, %620, !dbg !15918
  %622 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15919
  store i32 %621, i32* %622, align 4, !dbg !15920
  %623 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15921
  %624 = load i32, i32* %623, align 4, !dbg !15921
  %625 = load i32, i32* @g_red_shift_r, align 4, !dbg !15922
  %626 = lshr i32 %624, %625, !dbg !15923
  %627 = load i32, i32* @g_red_shift_l, align 4, !dbg !15924
  %628 = shl i32 %626, %627, !dbg !15925
  %629 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !15926
  %630 = load i32, i32* %629, align 4, !dbg !15926
  %631 = load i32, i32* @g_green_shift_r, align 4, !dbg !15927
  %632 = lshr i32 %630, %631, !dbg !15928
  %633 = load i32, i32* @g_green_shift_l, align 4, !dbg !15929
  %634 = shl i32 %632, %633, !dbg !15930
  %635 = or i32 %628, %634, !dbg !15931
  %636 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !15932
  %637 = load i32, i32* %636, align 4, !dbg !15932
  %638 = load i32, i32* @g_blue_shift_r, align 4, !dbg !15933
  %639 = lshr i32 %637, %638, !dbg !15934
  %640 = load i32, i32* @g_blue_shift_l, align 4, !dbg !15935
  %641 = shl i32 %639, %640, !dbg !15936
  %642 = or i32 %635, %641, !dbg !15937
  store i32 %642, i32* %8, align 4, !dbg !15938
  %643 = load i32, i32* %8, align 4, !dbg !15939
  %644 = trunc i32 %643 to i8, !dbg !15939
  %645 = load i8*, i8** %5, align 8, !dbg !15941
  %646 = getelementptr inbounds i8, i8* %645, i32 1, !dbg !15941
  store i8* %646, i8** %5, align 8, !dbg !15941
  store i8 %644, i8* %645, align 1, !dbg !15942
  %647 = load i32, i32* %8, align 4, !dbg !15943
  %648 = lshr i32 %647, 8, !dbg !15944
  %649 = trunc i32 %648 to i8, !dbg !15943
  %650 = load i8*, i8** %5, align 8, !dbg !15945
  %651 = getelementptr inbounds i8, i8* %650, i32 1, !dbg !15945
  store i8* %651, i8** %5, align 8, !dbg !15945
  store i8 %649, i8* %650, align 1, !dbg !15946
  %652 = load i32, i32* %8, align 4, !dbg !15947
  %653 = lshr i32 %652, 16, !dbg !15948
  %654 = trunc i32 %653 to i8, !dbg !15947
  %655 = load i8*, i8** %5, align 8, !dbg !15949
  %656 = getelementptr inbounds i8, i8* %655, i32 1, !dbg !15949
  store i8* %656, i8** %5, align 8, !dbg !15949
  store i8 %654, i8* %655, align 1, !dbg !15950
  %657 = load i32, i32* %8, align 4, !dbg !15951
  %658 = lshr i32 %657, 24, !dbg !15952
  %659 = trunc i32 %658 to i8, !dbg !15951
  %660 = load i8*, i8** %5, align 8, !dbg !15953
  %661 = getelementptr inbounds i8, i8* %660, i32 1, !dbg !15953
  store i8* %661, i8** %5, align 8, !dbg !15953
  store i8 %659, i8* %660, align 1, !dbg !15954
  br label %572, !dbg !15955, !llvm.loop !15957

; <label>:662:                                    ; preds = %572
  br label %663

; <label>:663:                                    ; preds = %662, %570
  br label %664

; <label>:664:                                    ; preds = %663, %475
  ret void, !dbg !15958
}

; Function Attrs: nounwind uwtable
define internal void @translate15to24(i16*, i8*, i8*) #0 !dbg !15959 {
  %4 = alloca i16*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca %struct.PixelColour, align 4
  store i16* %0, i16** %4, align 8
  call void @llvm.dbg.declare(metadata i16** %4, metadata !15960, metadata !416), !dbg !15961
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !15962, metadata !416), !dbg !15963
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !15964, metadata !416), !dbg !15965
  call void @llvm.dbg.declare(metadata i32* %7, metadata !15966, metadata !416), !dbg !15967
  call void @llvm.dbg.declare(metadata i16* %8, metadata !15968, metadata !416), !dbg !15969
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %9, metadata !15970, metadata !416), !dbg !15971
  %10 = load i32, i32* @g_compatible_arch, align 4, !dbg !15972
  %11 = icmp ne i32 %10, 0, !dbg !15972
  br i1 %11, label %12, label %458, !dbg !15974

; <label>:12:                                     ; preds = %3
  br label %13, !dbg !15975

; <label>:13:                                     ; preds = %18, %12
  %14 = load i8*, i8** %5, align 8, !dbg !15978
  %15 = load i8*, i8** %6, align 8, !dbg !15980
  %16 = getelementptr inbounds i8, i8* %15, i64 -24, !dbg !15981
  %17 = icmp ule i8* %14, %16, !dbg !15982
  br i1 %17, label %18, label %403, !dbg !15983

; <label>:18:                                     ; preds = %13
  %19 = load i16*, i16** %4, align 8, !dbg !15984
  %20 = getelementptr inbounds i16, i16* %19, i32 1, !dbg !15984
  store i16* %20, i16** %4, align 8, !dbg !15984
  %21 = load i16, i16* %19, align 2, !dbg !15987
  store i16 %21, i16* %8, align 2, !dbg !15988
  %22 = load i16, i16* %8, align 2, !dbg !15989
  %23 = zext i16 %22 to i32, !dbg !15989
  %24 = ashr i32 %23, 7, !dbg !15990
  %25 = and i32 %24, 248, !dbg !15991
  %26 = load i16, i16* %8, align 2, !dbg !15992
  %27 = zext i16 %26 to i32, !dbg !15992
  %28 = ashr i32 %27, 12, !dbg !15993
  %29 = and i32 %28, 7, !dbg !15994
  %30 = or i32 %25, %29, !dbg !15995
  %31 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !15996
  store i32 %30, i32* %31, align 4, !dbg !15997
  %32 = load i16, i16* %8, align 2, !dbg !15998
  %33 = zext i16 %32 to i32, !dbg !15998
  %34 = ashr i32 %33, 2, !dbg !15999
  %35 = and i32 %34, 248, !dbg !16000
  %36 = load i16, i16* %8, align 2, !dbg !16001
  %37 = zext i16 %36 to i32, !dbg !16001
  %38 = ashr i32 %37, 8, !dbg !16002
  %39 = and i32 %38, 7, !dbg !16003
  %40 = or i32 %35, %39, !dbg !16004
  %41 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16005
  store i32 %40, i32* %41, align 4, !dbg !16006
  %42 = load i16, i16* %8, align 2, !dbg !16007
  %43 = zext i16 %42 to i32, !dbg !16007
  %44 = shl i32 %43, 3, !dbg !16008
  %45 = and i32 %44, 248, !dbg !16009
  %46 = load i16, i16* %8, align 2, !dbg !16010
  %47 = zext i16 %46 to i32, !dbg !16010
  %48 = ashr i32 %47, 2, !dbg !16011
  %49 = and i32 %48, 7, !dbg !16012
  %50 = or i32 %45, %49, !dbg !16013
  %51 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16014
  store i32 %50, i32* %51, align 4, !dbg !16015
  %52 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16016
  %53 = load i32, i32* %52, align 4, !dbg !16016
  %54 = trunc i32 %53 to i8, !dbg !16017
  %55 = load i8*, i8** %5, align 8, !dbg !16018
  %56 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !16018
  store i8* %56, i8** %5, align 8, !dbg !16018
  store i8 %54, i8* %55, align 1, !dbg !16019
  %57 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16020
  %58 = load i32, i32* %57, align 4, !dbg !16020
  %59 = trunc i32 %58 to i8, !dbg !16021
  %60 = load i8*, i8** %5, align 8, !dbg !16022
  %61 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !16022
  store i8* %61, i8** %5, align 8, !dbg !16022
  store i8 %59, i8* %60, align 1, !dbg !16023
  %62 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16024
  %63 = load i32, i32* %62, align 4, !dbg !16024
  %64 = trunc i32 %63 to i8, !dbg !16025
  %65 = load i8*, i8** %5, align 8, !dbg !16026
  %66 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !16026
  store i8* %66, i8** %5, align 8, !dbg !16026
  store i8 %64, i8* %65, align 1, !dbg !16027
  %67 = load i16*, i16** %4, align 8, !dbg !16028
  %68 = getelementptr inbounds i16, i16* %67, i32 1, !dbg !16028
  store i16* %68, i16** %4, align 8, !dbg !16028
  %69 = load i16, i16* %67, align 2, !dbg !16029
  store i16 %69, i16* %8, align 2, !dbg !16030
  %70 = load i16, i16* %8, align 2, !dbg !16031
  %71 = zext i16 %70 to i32, !dbg !16031
  %72 = ashr i32 %71, 7, !dbg !16032
  %73 = and i32 %72, 248, !dbg !16033
  %74 = load i16, i16* %8, align 2, !dbg !16034
  %75 = zext i16 %74 to i32, !dbg !16034
  %76 = ashr i32 %75, 12, !dbg !16035
  %77 = and i32 %76, 7, !dbg !16036
  %78 = or i32 %73, %77, !dbg !16037
  %79 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16038
  store i32 %78, i32* %79, align 4, !dbg !16039
  %80 = load i16, i16* %8, align 2, !dbg !16040
  %81 = zext i16 %80 to i32, !dbg !16040
  %82 = ashr i32 %81, 2, !dbg !16041
  %83 = and i32 %82, 248, !dbg !16042
  %84 = load i16, i16* %8, align 2, !dbg !16043
  %85 = zext i16 %84 to i32, !dbg !16043
  %86 = ashr i32 %85, 8, !dbg !16044
  %87 = and i32 %86, 7, !dbg !16045
  %88 = or i32 %83, %87, !dbg !16046
  %89 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16047
  store i32 %88, i32* %89, align 4, !dbg !16048
  %90 = load i16, i16* %8, align 2, !dbg !16049
  %91 = zext i16 %90 to i32, !dbg !16049
  %92 = shl i32 %91, 3, !dbg !16050
  %93 = and i32 %92, 248, !dbg !16051
  %94 = load i16, i16* %8, align 2, !dbg !16052
  %95 = zext i16 %94 to i32, !dbg !16052
  %96 = ashr i32 %95, 2, !dbg !16053
  %97 = and i32 %96, 7, !dbg !16054
  %98 = or i32 %93, %97, !dbg !16055
  %99 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16056
  store i32 %98, i32* %99, align 4, !dbg !16057
  %100 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16058
  %101 = load i32, i32* %100, align 4, !dbg !16058
  %102 = trunc i32 %101 to i8, !dbg !16059
  %103 = load i8*, i8** %5, align 8, !dbg !16060
  %104 = getelementptr inbounds i8, i8* %103, i32 1, !dbg !16060
  store i8* %104, i8** %5, align 8, !dbg !16060
  store i8 %102, i8* %103, align 1, !dbg !16061
  %105 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16062
  %106 = load i32, i32* %105, align 4, !dbg !16062
  %107 = trunc i32 %106 to i8, !dbg !16063
  %108 = load i8*, i8** %5, align 8, !dbg !16064
  %109 = getelementptr inbounds i8, i8* %108, i32 1, !dbg !16064
  store i8* %109, i8** %5, align 8, !dbg !16064
  store i8 %107, i8* %108, align 1, !dbg !16065
  %110 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16066
  %111 = load i32, i32* %110, align 4, !dbg !16066
  %112 = trunc i32 %111 to i8, !dbg !16067
  %113 = load i8*, i8** %5, align 8, !dbg !16068
  %114 = getelementptr inbounds i8, i8* %113, i32 1, !dbg !16068
  store i8* %114, i8** %5, align 8, !dbg !16068
  store i8 %112, i8* %113, align 1, !dbg !16069
  %115 = load i16*, i16** %4, align 8, !dbg !16070
  %116 = getelementptr inbounds i16, i16* %115, i32 1, !dbg !16070
  store i16* %116, i16** %4, align 8, !dbg !16070
  %117 = load i16, i16* %115, align 2, !dbg !16071
  store i16 %117, i16* %8, align 2, !dbg !16072
  %118 = load i16, i16* %8, align 2, !dbg !16073
  %119 = zext i16 %118 to i32, !dbg !16073
  %120 = ashr i32 %119, 7, !dbg !16074
  %121 = and i32 %120, 248, !dbg !16075
  %122 = load i16, i16* %8, align 2, !dbg !16076
  %123 = zext i16 %122 to i32, !dbg !16076
  %124 = ashr i32 %123, 12, !dbg !16077
  %125 = and i32 %124, 7, !dbg !16078
  %126 = or i32 %121, %125, !dbg !16079
  %127 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16080
  store i32 %126, i32* %127, align 4, !dbg !16081
  %128 = load i16, i16* %8, align 2, !dbg !16082
  %129 = zext i16 %128 to i32, !dbg !16082
  %130 = ashr i32 %129, 2, !dbg !16083
  %131 = and i32 %130, 248, !dbg !16084
  %132 = load i16, i16* %8, align 2, !dbg !16085
  %133 = zext i16 %132 to i32, !dbg !16085
  %134 = ashr i32 %133, 8, !dbg !16086
  %135 = and i32 %134, 7, !dbg !16087
  %136 = or i32 %131, %135, !dbg !16088
  %137 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16089
  store i32 %136, i32* %137, align 4, !dbg !16090
  %138 = load i16, i16* %8, align 2, !dbg !16091
  %139 = zext i16 %138 to i32, !dbg !16091
  %140 = shl i32 %139, 3, !dbg !16092
  %141 = and i32 %140, 248, !dbg !16093
  %142 = load i16, i16* %8, align 2, !dbg !16094
  %143 = zext i16 %142 to i32, !dbg !16094
  %144 = ashr i32 %143, 2, !dbg !16095
  %145 = and i32 %144, 7, !dbg !16096
  %146 = or i32 %141, %145, !dbg !16097
  %147 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16098
  store i32 %146, i32* %147, align 4, !dbg !16099
  %148 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16100
  %149 = load i32, i32* %148, align 4, !dbg !16100
  %150 = trunc i32 %149 to i8, !dbg !16101
  %151 = load i8*, i8** %5, align 8, !dbg !16102
  %152 = getelementptr inbounds i8, i8* %151, i32 1, !dbg !16102
  store i8* %152, i8** %5, align 8, !dbg !16102
  store i8 %150, i8* %151, align 1, !dbg !16103
  %153 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16104
  %154 = load i32, i32* %153, align 4, !dbg !16104
  %155 = trunc i32 %154 to i8, !dbg !16105
  %156 = load i8*, i8** %5, align 8, !dbg !16106
  %157 = getelementptr inbounds i8, i8* %156, i32 1, !dbg !16106
  store i8* %157, i8** %5, align 8, !dbg !16106
  store i8 %155, i8* %156, align 1, !dbg !16107
  %158 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16108
  %159 = load i32, i32* %158, align 4, !dbg !16108
  %160 = trunc i32 %159 to i8, !dbg !16109
  %161 = load i8*, i8** %5, align 8, !dbg !16110
  %162 = getelementptr inbounds i8, i8* %161, i32 1, !dbg !16110
  store i8* %162, i8** %5, align 8, !dbg !16110
  store i8 %160, i8* %161, align 1, !dbg !16111
  %163 = load i16*, i16** %4, align 8, !dbg !16112
  %164 = getelementptr inbounds i16, i16* %163, i32 1, !dbg !16112
  store i16* %164, i16** %4, align 8, !dbg !16112
  %165 = load i16, i16* %163, align 2, !dbg !16113
  store i16 %165, i16* %8, align 2, !dbg !16114
  %166 = load i16, i16* %8, align 2, !dbg !16115
  %167 = zext i16 %166 to i32, !dbg !16115
  %168 = ashr i32 %167, 7, !dbg !16116
  %169 = and i32 %168, 248, !dbg !16117
  %170 = load i16, i16* %8, align 2, !dbg !16118
  %171 = zext i16 %170 to i32, !dbg !16118
  %172 = ashr i32 %171, 12, !dbg !16119
  %173 = and i32 %172, 7, !dbg !16120
  %174 = or i32 %169, %173, !dbg !16121
  %175 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16122
  store i32 %174, i32* %175, align 4, !dbg !16123
  %176 = load i16, i16* %8, align 2, !dbg !16124
  %177 = zext i16 %176 to i32, !dbg !16124
  %178 = ashr i32 %177, 2, !dbg !16125
  %179 = and i32 %178, 248, !dbg !16126
  %180 = load i16, i16* %8, align 2, !dbg !16127
  %181 = zext i16 %180 to i32, !dbg !16127
  %182 = ashr i32 %181, 8, !dbg !16128
  %183 = and i32 %182, 7, !dbg !16129
  %184 = or i32 %179, %183, !dbg !16130
  %185 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16131
  store i32 %184, i32* %185, align 4, !dbg !16132
  %186 = load i16, i16* %8, align 2, !dbg !16133
  %187 = zext i16 %186 to i32, !dbg !16133
  %188 = shl i32 %187, 3, !dbg !16134
  %189 = and i32 %188, 248, !dbg !16135
  %190 = load i16, i16* %8, align 2, !dbg !16136
  %191 = zext i16 %190 to i32, !dbg !16136
  %192 = ashr i32 %191, 2, !dbg !16137
  %193 = and i32 %192, 7, !dbg !16138
  %194 = or i32 %189, %193, !dbg !16139
  %195 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16140
  store i32 %194, i32* %195, align 4, !dbg !16141
  %196 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16142
  %197 = load i32, i32* %196, align 4, !dbg !16142
  %198 = trunc i32 %197 to i8, !dbg !16143
  %199 = load i8*, i8** %5, align 8, !dbg !16144
  %200 = getelementptr inbounds i8, i8* %199, i32 1, !dbg !16144
  store i8* %200, i8** %5, align 8, !dbg !16144
  store i8 %198, i8* %199, align 1, !dbg !16145
  %201 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16146
  %202 = load i32, i32* %201, align 4, !dbg !16146
  %203 = trunc i32 %202 to i8, !dbg !16147
  %204 = load i8*, i8** %5, align 8, !dbg !16148
  %205 = getelementptr inbounds i8, i8* %204, i32 1, !dbg !16148
  store i8* %205, i8** %5, align 8, !dbg !16148
  store i8 %203, i8* %204, align 1, !dbg !16149
  %206 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16150
  %207 = load i32, i32* %206, align 4, !dbg !16150
  %208 = trunc i32 %207 to i8, !dbg !16151
  %209 = load i8*, i8** %5, align 8, !dbg !16152
  %210 = getelementptr inbounds i8, i8* %209, i32 1, !dbg !16152
  store i8* %210, i8** %5, align 8, !dbg !16152
  store i8 %208, i8* %209, align 1, !dbg !16153
  %211 = load i16*, i16** %4, align 8, !dbg !16154
  %212 = getelementptr inbounds i16, i16* %211, i32 1, !dbg !16154
  store i16* %212, i16** %4, align 8, !dbg !16154
  %213 = load i16, i16* %211, align 2, !dbg !16155
  store i16 %213, i16* %8, align 2, !dbg !16156
  %214 = load i16, i16* %8, align 2, !dbg !16157
  %215 = zext i16 %214 to i32, !dbg !16157
  %216 = ashr i32 %215, 7, !dbg !16158
  %217 = and i32 %216, 248, !dbg !16159
  %218 = load i16, i16* %8, align 2, !dbg !16160
  %219 = zext i16 %218 to i32, !dbg !16160
  %220 = ashr i32 %219, 12, !dbg !16161
  %221 = and i32 %220, 7, !dbg !16162
  %222 = or i32 %217, %221, !dbg !16163
  %223 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16164
  store i32 %222, i32* %223, align 4, !dbg !16165
  %224 = load i16, i16* %8, align 2, !dbg !16166
  %225 = zext i16 %224 to i32, !dbg !16166
  %226 = ashr i32 %225, 2, !dbg !16167
  %227 = and i32 %226, 248, !dbg !16168
  %228 = load i16, i16* %8, align 2, !dbg !16169
  %229 = zext i16 %228 to i32, !dbg !16169
  %230 = ashr i32 %229, 8, !dbg !16170
  %231 = and i32 %230, 7, !dbg !16171
  %232 = or i32 %227, %231, !dbg !16172
  %233 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16173
  store i32 %232, i32* %233, align 4, !dbg !16174
  %234 = load i16, i16* %8, align 2, !dbg !16175
  %235 = zext i16 %234 to i32, !dbg !16175
  %236 = shl i32 %235, 3, !dbg !16176
  %237 = and i32 %236, 248, !dbg !16177
  %238 = load i16, i16* %8, align 2, !dbg !16178
  %239 = zext i16 %238 to i32, !dbg !16178
  %240 = ashr i32 %239, 2, !dbg !16179
  %241 = and i32 %240, 7, !dbg !16180
  %242 = or i32 %237, %241, !dbg !16181
  %243 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16182
  store i32 %242, i32* %243, align 4, !dbg !16183
  %244 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16184
  %245 = load i32, i32* %244, align 4, !dbg !16184
  %246 = trunc i32 %245 to i8, !dbg !16185
  %247 = load i8*, i8** %5, align 8, !dbg !16186
  %248 = getelementptr inbounds i8, i8* %247, i32 1, !dbg !16186
  store i8* %248, i8** %5, align 8, !dbg !16186
  store i8 %246, i8* %247, align 1, !dbg !16187
  %249 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16188
  %250 = load i32, i32* %249, align 4, !dbg !16188
  %251 = trunc i32 %250 to i8, !dbg !16189
  %252 = load i8*, i8** %5, align 8, !dbg !16190
  %253 = getelementptr inbounds i8, i8* %252, i32 1, !dbg !16190
  store i8* %253, i8** %5, align 8, !dbg !16190
  store i8 %251, i8* %252, align 1, !dbg !16191
  %254 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16192
  %255 = load i32, i32* %254, align 4, !dbg !16192
  %256 = trunc i32 %255 to i8, !dbg !16193
  %257 = load i8*, i8** %5, align 8, !dbg !16194
  %258 = getelementptr inbounds i8, i8* %257, i32 1, !dbg !16194
  store i8* %258, i8** %5, align 8, !dbg !16194
  store i8 %256, i8* %257, align 1, !dbg !16195
  %259 = load i16*, i16** %4, align 8, !dbg !16196
  %260 = getelementptr inbounds i16, i16* %259, i32 1, !dbg !16196
  store i16* %260, i16** %4, align 8, !dbg !16196
  %261 = load i16, i16* %259, align 2, !dbg !16197
  store i16 %261, i16* %8, align 2, !dbg !16198
  %262 = load i16, i16* %8, align 2, !dbg !16199
  %263 = zext i16 %262 to i32, !dbg !16199
  %264 = ashr i32 %263, 7, !dbg !16200
  %265 = and i32 %264, 248, !dbg !16201
  %266 = load i16, i16* %8, align 2, !dbg !16202
  %267 = zext i16 %266 to i32, !dbg !16202
  %268 = ashr i32 %267, 12, !dbg !16203
  %269 = and i32 %268, 7, !dbg !16204
  %270 = or i32 %265, %269, !dbg !16205
  %271 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16206
  store i32 %270, i32* %271, align 4, !dbg !16207
  %272 = load i16, i16* %8, align 2, !dbg !16208
  %273 = zext i16 %272 to i32, !dbg !16208
  %274 = ashr i32 %273, 2, !dbg !16209
  %275 = and i32 %274, 248, !dbg !16210
  %276 = load i16, i16* %8, align 2, !dbg !16211
  %277 = zext i16 %276 to i32, !dbg !16211
  %278 = ashr i32 %277, 8, !dbg !16212
  %279 = and i32 %278, 7, !dbg !16213
  %280 = or i32 %275, %279, !dbg !16214
  %281 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16215
  store i32 %280, i32* %281, align 4, !dbg !16216
  %282 = load i16, i16* %8, align 2, !dbg !16217
  %283 = zext i16 %282 to i32, !dbg !16217
  %284 = shl i32 %283, 3, !dbg !16218
  %285 = and i32 %284, 248, !dbg !16219
  %286 = load i16, i16* %8, align 2, !dbg !16220
  %287 = zext i16 %286 to i32, !dbg !16220
  %288 = ashr i32 %287, 2, !dbg !16221
  %289 = and i32 %288, 7, !dbg !16222
  %290 = or i32 %285, %289, !dbg !16223
  %291 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16224
  store i32 %290, i32* %291, align 4, !dbg !16225
  %292 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16226
  %293 = load i32, i32* %292, align 4, !dbg !16226
  %294 = trunc i32 %293 to i8, !dbg !16227
  %295 = load i8*, i8** %5, align 8, !dbg !16228
  %296 = getelementptr inbounds i8, i8* %295, i32 1, !dbg !16228
  store i8* %296, i8** %5, align 8, !dbg !16228
  store i8 %294, i8* %295, align 1, !dbg !16229
  %297 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16230
  %298 = load i32, i32* %297, align 4, !dbg !16230
  %299 = trunc i32 %298 to i8, !dbg !16231
  %300 = load i8*, i8** %5, align 8, !dbg !16232
  %301 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !16232
  store i8* %301, i8** %5, align 8, !dbg !16232
  store i8 %299, i8* %300, align 1, !dbg !16233
  %302 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16234
  %303 = load i32, i32* %302, align 4, !dbg !16234
  %304 = trunc i32 %303 to i8, !dbg !16235
  %305 = load i8*, i8** %5, align 8, !dbg !16236
  %306 = getelementptr inbounds i8, i8* %305, i32 1, !dbg !16236
  store i8* %306, i8** %5, align 8, !dbg !16236
  store i8 %304, i8* %305, align 1, !dbg !16237
  %307 = load i16*, i16** %4, align 8, !dbg !16238
  %308 = getelementptr inbounds i16, i16* %307, i32 1, !dbg !16238
  store i16* %308, i16** %4, align 8, !dbg !16238
  %309 = load i16, i16* %307, align 2, !dbg !16239
  store i16 %309, i16* %8, align 2, !dbg !16240
  %310 = load i16, i16* %8, align 2, !dbg !16241
  %311 = zext i16 %310 to i32, !dbg !16241
  %312 = ashr i32 %311, 7, !dbg !16242
  %313 = and i32 %312, 248, !dbg !16243
  %314 = load i16, i16* %8, align 2, !dbg !16244
  %315 = zext i16 %314 to i32, !dbg !16244
  %316 = ashr i32 %315, 12, !dbg !16245
  %317 = and i32 %316, 7, !dbg !16246
  %318 = or i32 %313, %317, !dbg !16247
  %319 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16248
  store i32 %318, i32* %319, align 4, !dbg !16249
  %320 = load i16, i16* %8, align 2, !dbg !16250
  %321 = zext i16 %320 to i32, !dbg !16250
  %322 = ashr i32 %321, 2, !dbg !16251
  %323 = and i32 %322, 248, !dbg !16252
  %324 = load i16, i16* %8, align 2, !dbg !16253
  %325 = zext i16 %324 to i32, !dbg !16253
  %326 = ashr i32 %325, 8, !dbg !16254
  %327 = and i32 %326, 7, !dbg !16255
  %328 = or i32 %323, %327, !dbg !16256
  %329 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16257
  store i32 %328, i32* %329, align 4, !dbg !16258
  %330 = load i16, i16* %8, align 2, !dbg !16259
  %331 = zext i16 %330 to i32, !dbg !16259
  %332 = shl i32 %331, 3, !dbg !16260
  %333 = and i32 %332, 248, !dbg !16261
  %334 = load i16, i16* %8, align 2, !dbg !16262
  %335 = zext i16 %334 to i32, !dbg !16262
  %336 = ashr i32 %335, 2, !dbg !16263
  %337 = and i32 %336, 7, !dbg !16264
  %338 = or i32 %333, %337, !dbg !16265
  %339 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16266
  store i32 %338, i32* %339, align 4, !dbg !16267
  %340 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16268
  %341 = load i32, i32* %340, align 4, !dbg !16268
  %342 = trunc i32 %341 to i8, !dbg !16269
  %343 = load i8*, i8** %5, align 8, !dbg !16270
  %344 = getelementptr inbounds i8, i8* %343, i32 1, !dbg !16270
  store i8* %344, i8** %5, align 8, !dbg !16270
  store i8 %342, i8* %343, align 1, !dbg !16271
  %345 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16272
  %346 = load i32, i32* %345, align 4, !dbg !16272
  %347 = trunc i32 %346 to i8, !dbg !16273
  %348 = load i8*, i8** %5, align 8, !dbg !16274
  %349 = getelementptr inbounds i8, i8* %348, i32 1, !dbg !16274
  store i8* %349, i8** %5, align 8, !dbg !16274
  store i8 %347, i8* %348, align 1, !dbg !16275
  %350 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16276
  %351 = load i32, i32* %350, align 4, !dbg !16276
  %352 = trunc i32 %351 to i8, !dbg !16277
  %353 = load i8*, i8** %5, align 8, !dbg !16278
  %354 = getelementptr inbounds i8, i8* %353, i32 1, !dbg !16278
  store i8* %354, i8** %5, align 8, !dbg !16278
  store i8 %352, i8* %353, align 1, !dbg !16279
  %355 = load i16*, i16** %4, align 8, !dbg !16280
  %356 = getelementptr inbounds i16, i16* %355, i32 1, !dbg !16280
  store i16* %356, i16** %4, align 8, !dbg !16280
  %357 = load i16, i16* %355, align 2, !dbg !16281
  store i16 %357, i16* %8, align 2, !dbg !16282
  %358 = load i16, i16* %8, align 2, !dbg !16283
  %359 = zext i16 %358 to i32, !dbg !16283
  %360 = ashr i32 %359, 7, !dbg !16284
  %361 = and i32 %360, 248, !dbg !16285
  %362 = load i16, i16* %8, align 2, !dbg !16286
  %363 = zext i16 %362 to i32, !dbg !16286
  %364 = ashr i32 %363, 12, !dbg !16287
  %365 = and i32 %364, 7, !dbg !16288
  %366 = or i32 %361, %365, !dbg !16289
  %367 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16290
  store i32 %366, i32* %367, align 4, !dbg !16291
  %368 = load i16, i16* %8, align 2, !dbg !16292
  %369 = zext i16 %368 to i32, !dbg !16292
  %370 = ashr i32 %369, 2, !dbg !16293
  %371 = and i32 %370, 248, !dbg !16294
  %372 = load i16, i16* %8, align 2, !dbg !16295
  %373 = zext i16 %372 to i32, !dbg !16295
  %374 = ashr i32 %373, 8, !dbg !16296
  %375 = and i32 %374, 7, !dbg !16297
  %376 = or i32 %371, %375, !dbg !16298
  %377 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16299
  store i32 %376, i32* %377, align 4, !dbg !16300
  %378 = load i16, i16* %8, align 2, !dbg !16301
  %379 = zext i16 %378 to i32, !dbg !16301
  %380 = shl i32 %379, 3, !dbg !16302
  %381 = and i32 %380, 248, !dbg !16303
  %382 = load i16, i16* %8, align 2, !dbg !16304
  %383 = zext i16 %382 to i32, !dbg !16304
  %384 = ashr i32 %383, 2, !dbg !16305
  %385 = and i32 %384, 7, !dbg !16306
  %386 = or i32 %381, %385, !dbg !16307
  %387 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16308
  store i32 %386, i32* %387, align 4, !dbg !16309
  %388 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16310
  %389 = load i32, i32* %388, align 4, !dbg !16310
  %390 = trunc i32 %389 to i8, !dbg !16311
  %391 = load i8*, i8** %5, align 8, !dbg !16312
  %392 = getelementptr inbounds i8, i8* %391, i32 1, !dbg !16312
  store i8* %392, i8** %5, align 8, !dbg !16312
  store i8 %390, i8* %391, align 1, !dbg !16313
  %393 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16314
  %394 = load i32, i32* %393, align 4, !dbg !16314
  %395 = trunc i32 %394 to i8, !dbg !16315
  %396 = load i8*, i8** %5, align 8, !dbg !16316
  %397 = getelementptr inbounds i8, i8* %396, i32 1, !dbg !16316
  store i8* %397, i8** %5, align 8, !dbg !16316
  store i8 %395, i8* %396, align 1, !dbg !16317
  %398 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16318
  %399 = load i32, i32* %398, align 4, !dbg !16318
  %400 = trunc i32 %399 to i8, !dbg !16319
  %401 = load i8*, i8** %5, align 8, !dbg !16320
  %402 = getelementptr inbounds i8, i8* %401, i32 1, !dbg !16320
  store i8* %402, i8** %5, align 8, !dbg !16320
  store i8 %400, i8* %401, align 1, !dbg !16321
  br label %13, !dbg !16322, !llvm.loop !16323

; <label>:403:                                    ; preds = %13
  br label %404, !dbg !16324

; <label>:404:                                    ; preds = %408, %403
  %405 = load i8*, i8** %5, align 8, !dbg !16326
  %406 = load i8*, i8** %6, align 8, !dbg !16328
  %407 = icmp ult i8* %405, %406, !dbg !16329
  br i1 %407, label %408, label %457, !dbg !16330

; <label>:408:                                    ; preds = %404
  %409 = load i16*, i16** %4, align 8, !dbg !16331
  %410 = getelementptr inbounds i16, i16* %409, i32 1, !dbg !16331
  store i16* %410, i16** %4, align 8, !dbg !16331
  %411 = load i16, i16* %409, align 2, !dbg !16334
  store i16 %411, i16* %8, align 2, !dbg !16335
  %412 = load i16, i16* %8, align 2, !dbg !16336
  %413 = zext i16 %412 to i32, !dbg !16336
  %414 = ashr i32 %413, 7, !dbg !16337
  %415 = and i32 %414, 248, !dbg !16338
  %416 = load i16, i16* %8, align 2, !dbg !16339
  %417 = zext i16 %416 to i32, !dbg !16339
  %418 = ashr i32 %417, 12, !dbg !16340
  %419 = and i32 %418, 7, !dbg !16341
  %420 = or i32 %415, %419, !dbg !16342
  %421 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16343
  store i32 %420, i32* %421, align 4, !dbg !16344
  %422 = load i16, i16* %8, align 2, !dbg !16345
  %423 = zext i16 %422 to i32, !dbg !16345
  %424 = ashr i32 %423, 2, !dbg !16346
  %425 = and i32 %424, 248, !dbg !16347
  %426 = load i16, i16* %8, align 2, !dbg !16348
  %427 = zext i16 %426 to i32, !dbg !16348
  %428 = ashr i32 %427, 8, !dbg !16349
  %429 = and i32 %428, 7, !dbg !16350
  %430 = or i32 %425, %429, !dbg !16351
  %431 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16352
  store i32 %430, i32* %431, align 4, !dbg !16353
  %432 = load i16, i16* %8, align 2, !dbg !16354
  %433 = zext i16 %432 to i32, !dbg !16354
  %434 = shl i32 %433, 3, !dbg !16355
  %435 = and i32 %434, 248, !dbg !16356
  %436 = load i16, i16* %8, align 2, !dbg !16357
  %437 = zext i16 %436 to i32, !dbg !16357
  %438 = ashr i32 %437, 2, !dbg !16358
  %439 = and i32 %438, 7, !dbg !16359
  %440 = or i32 %435, %439, !dbg !16360
  %441 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16361
  store i32 %440, i32* %441, align 4, !dbg !16362
  %442 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16363
  %443 = load i32, i32* %442, align 4, !dbg !16363
  %444 = trunc i32 %443 to i8, !dbg !16364
  %445 = load i8*, i8** %5, align 8, !dbg !16365
  %446 = getelementptr inbounds i8, i8* %445, i32 1, !dbg !16365
  store i8* %446, i8** %5, align 8, !dbg !16365
  store i8 %444, i8* %445, align 1, !dbg !16366
  %447 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16367
  %448 = load i32, i32* %447, align 4, !dbg !16367
  %449 = trunc i32 %448 to i8, !dbg !16368
  %450 = load i8*, i8** %5, align 8, !dbg !16369
  %451 = getelementptr inbounds i8, i8* %450, i32 1, !dbg !16369
  store i8* %451, i8** %5, align 8, !dbg !16369
  store i8 %449, i8* %450, align 1, !dbg !16370
  %452 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16371
  %453 = load i32, i32* %452, align 4, !dbg !16371
  %454 = trunc i32 %453 to i8, !dbg !16372
  %455 = load i8*, i8** %5, align 8, !dbg !16373
  %456 = getelementptr inbounds i8, i8* %455, i32 1, !dbg !16373
  store i8* %456, i8** %5, align 8, !dbg !16373
  store i8 %454, i8* %455, align 1, !dbg !16374
  br label %404, !dbg !16375, !llvm.loop !16376

; <label>:457:                                    ; preds = %404
  br label %636, !dbg !16378

; <label>:458:                                    ; preds = %3
  %459 = load i32, i32* @g_xserver_be, align 4, !dbg !16379
  %460 = icmp ne i32 %459, 0, !dbg !16379
  br i1 %460, label %461, label %548, !dbg !16381

; <label>:461:                                    ; preds = %458
  br label %462, !dbg !16382

; <label>:462:                                    ; preds = %482, %461
  %463 = load i8*, i8** %5, align 8, !dbg !16384
  %464 = load i8*, i8** %6, align 8, !dbg !16386
  %465 = icmp ult i8* %463, %464, !dbg !16387
  br i1 %465, label %466, label %547, !dbg !16388

; <label>:466:                                    ; preds = %462
  %467 = load i16*, i16** %4, align 8, !dbg !16389
  %468 = getelementptr inbounds i16, i16* %467, i32 1, !dbg !16389
  store i16* %468, i16** %4, align 8, !dbg !16389
  %469 = load i16, i16* %467, align 2, !dbg !16391
  store i16 %469, i16* %8, align 2, !dbg !16392
  %470 = load i32, i32* @g_host_be, align 4, !dbg !16393
  %471 = icmp ne i32 %470, 0, !dbg !16393
  br i1 %471, label %472, label %482, !dbg !16395

; <label>:472:                                    ; preds = %466
  %473 = load i16, i16* %8, align 2, !dbg !16396
  %474 = zext i16 %473 to i32, !dbg !16396
  %475 = and i32 %474, 255, !dbg !16399
  %476 = shl i32 %475, 8, !dbg !16400
  %477 = load i16, i16* %8, align 2, !dbg !16401
  %478 = zext i16 %477 to i32, !dbg !16401
  %479 = ashr i32 %478, 8, !dbg !16402
  %480 = or i32 %476, %479, !dbg !16403
  %481 = trunc i32 %480 to i16, !dbg !16404
  store i16 %481, i16* %8, align 2, !dbg !16405
  br label %482, !dbg !16406

; <label>:482:                                    ; preds = %472, %466
  %483 = load i16, i16* %8, align 2, !dbg !16407
  %484 = zext i16 %483 to i32, !dbg !16407
  %485 = ashr i32 %484, 7, !dbg !16409
  %486 = and i32 %485, 248, !dbg !16410
  %487 = load i16, i16* %8, align 2, !dbg !16411
  %488 = zext i16 %487 to i32, !dbg !16411
  %489 = ashr i32 %488, 12, !dbg !16412
  %490 = and i32 %489, 7, !dbg !16413
  %491 = or i32 %486, %490, !dbg !16414
  %492 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16415
  store i32 %491, i32* %492, align 4, !dbg !16416
  %493 = load i16, i16* %8, align 2, !dbg !16417
  %494 = zext i16 %493 to i32, !dbg !16417
  %495 = ashr i32 %494, 2, !dbg !16418
  %496 = and i32 %495, 248, !dbg !16419
  %497 = load i16, i16* %8, align 2, !dbg !16420
  %498 = zext i16 %497 to i32, !dbg !16420
  %499 = ashr i32 %498, 8, !dbg !16421
  %500 = and i32 %499, 7, !dbg !16422
  %501 = or i32 %496, %500, !dbg !16423
  %502 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16424
  store i32 %501, i32* %502, align 4, !dbg !16425
  %503 = load i16, i16* %8, align 2, !dbg !16426
  %504 = zext i16 %503 to i32, !dbg !16426
  %505 = shl i32 %504, 3, !dbg !16427
  %506 = and i32 %505, 248, !dbg !16428
  %507 = load i16, i16* %8, align 2, !dbg !16429
  %508 = zext i16 %507 to i32, !dbg !16429
  %509 = ashr i32 %508, 2, !dbg !16430
  %510 = and i32 %509, 7, !dbg !16431
  %511 = or i32 %506, %510, !dbg !16432
  %512 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16433
  store i32 %511, i32* %512, align 4, !dbg !16434
  %513 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16435
  %514 = load i32, i32* %513, align 4, !dbg !16435
  %515 = load i32, i32* @g_red_shift_r, align 4, !dbg !16436
  %516 = lshr i32 %514, %515, !dbg !16437
  %517 = load i32, i32* @g_red_shift_l, align 4, !dbg !16438
  %518 = shl i32 %516, %517, !dbg !16439
  %519 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16440
  %520 = load i32, i32* %519, align 4, !dbg !16440
  %521 = load i32, i32* @g_green_shift_r, align 4, !dbg !16441
  %522 = lshr i32 %520, %521, !dbg !16442
  %523 = load i32, i32* @g_green_shift_l, align 4, !dbg !16443
  %524 = shl i32 %522, %523, !dbg !16444
  %525 = or i32 %518, %524, !dbg !16445
  %526 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16446
  %527 = load i32, i32* %526, align 4, !dbg !16446
  %528 = load i32, i32* @g_blue_shift_r, align 4, !dbg !16447
  %529 = lshr i32 %527, %528, !dbg !16448
  %530 = load i32, i32* @g_blue_shift_l, align 4, !dbg !16449
  %531 = shl i32 %529, %530, !dbg !16450
  %532 = or i32 %525, %531, !dbg !16451
  store i32 %532, i32* %7, align 4, !dbg !16452
  %533 = load i32, i32* %7, align 4, !dbg !16453
  %534 = lshr i32 %533, 16, !dbg !16455
  %535 = trunc i32 %534 to i8, !dbg !16453
  %536 = load i8*, i8** %5, align 8, !dbg !16456
  %537 = getelementptr inbounds i8, i8* %536, i32 1, !dbg !16456
  store i8* %537, i8** %5, align 8, !dbg !16456
  store i8 %535, i8* %536, align 1, !dbg !16457
  %538 = load i32, i32* %7, align 4, !dbg !16458
  %539 = lshr i32 %538, 8, !dbg !16459
  %540 = trunc i32 %539 to i8, !dbg !16458
  %541 = load i8*, i8** %5, align 8, !dbg !16460
  %542 = getelementptr inbounds i8, i8* %541, i32 1, !dbg !16460
  store i8* %542, i8** %5, align 8, !dbg !16460
  store i8 %540, i8* %541, align 1, !dbg !16461
  %543 = load i32, i32* %7, align 4, !dbg !16462
  %544 = trunc i32 %543 to i8, !dbg !16462
  %545 = load i8*, i8** %5, align 8, !dbg !16463
  %546 = getelementptr inbounds i8, i8* %545, i32 1, !dbg !16463
  store i8* %546, i8** %5, align 8, !dbg !16463
  store i8 %544, i8* %545, align 1, !dbg !16464
  br label %462, !dbg !16465, !llvm.loop !16467

; <label>:547:                                    ; preds = %462
  br label %635, !dbg !16468

; <label>:548:                                    ; preds = %458
  br label %549, !dbg !16469

; <label>:549:                                    ; preds = %569, %548
  %550 = load i8*, i8** %5, align 8, !dbg !16471
  %551 = load i8*, i8** %6, align 8, !dbg !16473
  %552 = icmp ult i8* %550, %551, !dbg !16474
  br i1 %552, label %553, label %634, !dbg !16475

; <label>:553:                                    ; preds = %549
  %554 = load i16*, i16** %4, align 8, !dbg !16476
  %555 = getelementptr inbounds i16, i16* %554, i32 1, !dbg !16476
  store i16* %555, i16** %4, align 8, !dbg !16476
  %556 = load i16, i16* %554, align 2, !dbg !16478
  store i16 %556, i16* %8, align 2, !dbg !16479
  %557 = load i32, i32* @g_host_be, align 4, !dbg !16480
  %558 = icmp ne i32 %557, 0, !dbg !16480
  br i1 %558, label %559, label %569, !dbg !16482

; <label>:559:                                    ; preds = %553
  %560 = load i16, i16* %8, align 2, !dbg !16483
  %561 = zext i16 %560 to i32, !dbg !16483
  %562 = and i32 %561, 255, !dbg !16486
  %563 = shl i32 %562, 8, !dbg !16487
  %564 = load i16, i16* %8, align 2, !dbg !16488
  %565 = zext i16 %564 to i32, !dbg !16488
  %566 = ashr i32 %565, 8, !dbg !16489
  %567 = or i32 %563, %566, !dbg !16490
  %568 = trunc i32 %567 to i16, !dbg !16491
  store i16 %568, i16* %8, align 2, !dbg !16492
  br label %569, !dbg !16493

; <label>:569:                                    ; preds = %559, %553
  %570 = load i16, i16* %8, align 2, !dbg !16494
  %571 = zext i16 %570 to i32, !dbg !16494
  %572 = ashr i32 %571, 7, !dbg !16496
  %573 = and i32 %572, 248, !dbg !16497
  %574 = load i16, i16* %8, align 2, !dbg !16498
  %575 = zext i16 %574 to i32, !dbg !16498
  %576 = ashr i32 %575, 12, !dbg !16499
  %577 = and i32 %576, 7, !dbg !16500
  %578 = or i32 %573, %577, !dbg !16501
  %579 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16502
  store i32 %578, i32* %579, align 4, !dbg !16503
  %580 = load i16, i16* %8, align 2, !dbg !16504
  %581 = zext i16 %580 to i32, !dbg !16504
  %582 = ashr i32 %581, 2, !dbg !16505
  %583 = and i32 %582, 248, !dbg !16506
  %584 = load i16, i16* %8, align 2, !dbg !16507
  %585 = zext i16 %584 to i32, !dbg !16507
  %586 = ashr i32 %585, 8, !dbg !16508
  %587 = and i32 %586, 7, !dbg !16509
  %588 = or i32 %583, %587, !dbg !16510
  %589 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16511
  store i32 %588, i32* %589, align 4, !dbg !16512
  %590 = load i16, i16* %8, align 2, !dbg !16513
  %591 = zext i16 %590 to i32, !dbg !16513
  %592 = shl i32 %591, 3, !dbg !16514
  %593 = and i32 %592, 248, !dbg !16515
  %594 = load i16, i16* %8, align 2, !dbg !16516
  %595 = zext i16 %594 to i32, !dbg !16516
  %596 = ashr i32 %595, 2, !dbg !16517
  %597 = and i32 %596, 7, !dbg !16518
  %598 = or i32 %593, %597, !dbg !16519
  %599 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16520
  store i32 %598, i32* %599, align 4, !dbg !16521
  %600 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16522
  %601 = load i32, i32* %600, align 4, !dbg !16522
  %602 = load i32, i32* @g_red_shift_r, align 4, !dbg !16523
  %603 = lshr i32 %601, %602, !dbg !16524
  %604 = load i32, i32* @g_red_shift_l, align 4, !dbg !16525
  %605 = shl i32 %603, %604, !dbg !16526
  %606 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16527
  %607 = load i32, i32* %606, align 4, !dbg !16527
  %608 = load i32, i32* @g_green_shift_r, align 4, !dbg !16528
  %609 = lshr i32 %607, %608, !dbg !16529
  %610 = load i32, i32* @g_green_shift_l, align 4, !dbg !16530
  %611 = shl i32 %609, %610, !dbg !16531
  %612 = or i32 %605, %611, !dbg !16532
  %613 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16533
  %614 = load i32, i32* %613, align 4, !dbg !16533
  %615 = load i32, i32* @g_blue_shift_r, align 4, !dbg !16534
  %616 = lshr i32 %614, %615, !dbg !16535
  %617 = load i32, i32* @g_blue_shift_l, align 4, !dbg !16536
  %618 = shl i32 %616, %617, !dbg !16537
  %619 = or i32 %612, %618, !dbg !16538
  store i32 %619, i32* %7, align 4, !dbg !16539
  %620 = load i32, i32* %7, align 4, !dbg !16540
  %621 = trunc i32 %620 to i8, !dbg !16540
  %622 = load i8*, i8** %5, align 8, !dbg !16542
  %623 = getelementptr inbounds i8, i8* %622, i32 1, !dbg !16542
  store i8* %623, i8** %5, align 8, !dbg !16542
  store i8 %621, i8* %622, align 1, !dbg !16543
  %624 = load i32, i32* %7, align 4, !dbg !16544
  %625 = lshr i32 %624, 8, !dbg !16545
  %626 = trunc i32 %625 to i8, !dbg !16544
  %627 = load i8*, i8** %5, align 8, !dbg !16546
  %628 = getelementptr inbounds i8, i8* %627, i32 1, !dbg !16546
  store i8* %628, i8** %5, align 8, !dbg !16546
  store i8 %626, i8* %627, align 1, !dbg !16547
  %629 = load i32, i32* %7, align 4, !dbg !16548
  %630 = lshr i32 %629, 16, !dbg !16549
  %631 = trunc i32 %630 to i8, !dbg !16548
  %632 = load i8*, i8** %5, align 8, !dbg !16550
  %633 = getelementptr inbounds i8, i8* %632, i32 1, !dbg !16550
  store i8* %633, i8** %5, align 8, !dbg !16550
  store i8 %631, i8* %632, align 1, !dbg !16551
  br label %549, !dbg !16552, !llvm.loop !16554

; <label>:634:                                    ; preds = %549
  br label %635

; <label>:635:                                    ; preds = %634, %547
  br label %636

; <label>:636:                                    ; preds = %635, %457
  ret void, !dbg !16555
}

; Function Attrs: nounwind uwtable
define internal void @translate15to16(i16*, i8*, i8*) #0 !dbg !16556 {
  %4 = alloca i16*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca %struct.PixelColour, align 4
  store i16* %0, i16** %4, align 8
  call void @llvm.dbg.declare(metadata i16** %4, metadata !16557, metadata !416), !dbg !16558
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16559, metadata !416), !dbg !16560
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !16561, metadata !416), !dbg !16562
  call void @llvm.dbg.declare(metadata i16* %7, metadata !16563, metadata !416), !dbg !16564
  call void @llvm.dbg.declare(metadata i16* %8, metadata !16565, metadata !416), !dbg !16566
  call void @llvm.dbg.declare(metadata %struct.PixelColour* %9, metadata !16567, metadata !416), !dbg !16568
  %10 = load i32, i32* @g_xserver_be, align 4, !dbg !16569
  %11 = icmp ne i32 %10, 0, !dbg !16569
  br i1 %11, label %12, label %96, !dbg !16571

; <label>:12:                                     ; preds = %3
  br label %13, !dbg !16572

; <label>:13:                                     ; preds = %33, %12
  %14 = load i8*, i8** %5, align 8, !dbg !16574
  %15 = load i8*, i8** %6, align 8, !dbg !16576
  %16 = icmp ult i8* %14, %15, !dbg !16577
  br i1 %16, label %17, label %95, !dbg !16578

; <label>:17:                                     ; preds = %13
  %18 = load i16*, i16** %4, align 8, !dbg !16579
  %19 = getelementptr inbounds i16, i16* %18, i32 1, !dbg !16579
  store i16* %19, i16** %4, align 8, !dbg !16579
  %20 = load i16, i16* %18, align 2, !dbg !16581
  store i16 %20, i16* %7, align 2, !dbg !16582
  %21 = load i32, i32* @g_host_be, align 4, !dbg !16583
  %22 = icmp ne i32 %21, 0, !dbg !16583
  br i1 %22, label %23, label %33, !dbg !16585

; <label>:23:                                     ; preds = %17
  %24 = load i16, i16* %7, align 2, !dbg !16586
  %25 = zext i16 %24 to i32, !dbg !16586
  %26 = and i32 %25, 255, !dbg !16589
  %27 = shl i32 %26, 8, !dbg !16590
  %28 = load i16, i16* %7, align 2, !dbg !16591
  %29 = zext i16 %28 to i32, !dbg !16591
  %30 = ashr i32 %29, 8, !dbg !16592
  %31 = or i32 %27, %30, !dbg !16593
  %32 = trunc i32 %31 to i16, !dbg !16594
  store i16 %32, i16* %7, align 2, !dbg !16595
  br label %33, !dbg !16596

; <label>:33:                                     ; preds = %23, %17
  %34 = load i16, i16* %7, align 2, !dbg !16597
  %35 = zext i16 %34 to i32, !dbg !16597
  %36 = ashr i32 %35, 7, !dbg !16599
  %37 = and i32 %36, 248, !dbg !16600
  %38 = load i16, i16* %7, align 2, !dbg !16601
  %39 = zext i16 %38 to i32, !dbg !16601
  %40 = ashr i32 %39, 12, !dbg !16602
  %41 = and i32 %40, 7, !dbg !16603
  %42 = or i32 %37, %41, !dbg !16604
  %43 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16605
  store i32 %42, i32* %43, align 4, !dbg !16606
  %44 = load i16, i16* %7, align 2, !dbg !16607
  %45 = zext i16 %44 to i32, !dbg !16607
  %46 = ashr i32 %45, 2, !dbg !16608
  %47 = and i32 %46, 248, !dbg !16609
  %48 = load i16, i16* %7, align 2, !dbg !16610
  %49 = zext i16 %48 to i32, !dbg !16610
  %50 = ashr i32 %49, 8, !dbg !16611
  %51 = and i32 %50, 7, !dbg !16612
  %52 = or i32 %47, %51, !dbg !16613
  %53 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16614
  store i32 %52, i32* %53, align 4, !dbg !16615
  %54 = load i16, i16* %7, align 2, !dbg !16616
  %55 = zext i16 %54 to i32, !dbg !16616
  %56 = shl i32 %55, 3, !dbg !16617
  %57 = and i32 %56, 248, !dbg !16618
  %58 = load i16, i16* %7, align 2, !dbg !16619
  %59 = zext i16 %58 to i32, !dbg !16619
  %60 = ashr i32 %59, 2, !dbg !16620
  %61 = and i32 %60, 7, !dbg !16621
  %62 = or i32 %57, %61, !dbg !16622
  %63 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16623
  store i32 %62, i32* %63, align 4, !dbg !16624
  %64 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16625
  %65 = load i32, i32* %64, align 4, !dbg !16625
  %66 = load i32, i32* @g_red_shift_r, align 4, !dbg !16626
  %67 = lshr i32 %65, %66, !dbg !16627
  %68 = load i32, i32* @g_red_shift_l, align 4, !dbg !16628
  %69 = shl i32 %67, %68, !dbg !16629
  %70 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16630
  %71 = load i32, i32* %70, align 4, !dbg !16630
  %72 = load i32, i32* @g_green_shift_r, align 4, !dbg !16631
  %73 = lshr i32 %71, %72, !dbg !16632
  %74 = load i32, i32* @g_green_shift_l, align 4, !dbg !16633
  %75 = shl i32 %73, %74, !dbg !16634
  %76 = or i32 %69, %75, !dbg !16635
  %77 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16636
  %78 = load i32, i32* %77, align 4, !dbg !16636
  %79 = load i32, i32* @g_blue_shift_r, align 4, !dbg !16637
  %80 = lshr i32 %78, %79, !dbg !16638
  %81 = load i32, i32* @g_blue_shift_l, align 4, !dbg !16639
  %82 = shl i32 %80, %81, !dbg !16640
  %83 = or i32 %76, %82, !dbg !16641
  %84 = trunc i32 %83 to i16, !dbg !16642
  store i16 %84, i16* %8, align 2, !dbg !16643
  %85 = load i16, i16* %8, align 2, !dbg !16644
  %86 = zext i16 %85 to i32, !dbg !16644
  %87 = ashr i32 %86, 8, !dbg !16646
  %88 = trunc i32 %87 to i8, !dbg !16644
  %89 = load i8*, i8** %5, align 8, !dbg !16647
  %90 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !16647
  store i8* %90, i8** %5, align 8, !dbg !16647
  store i8 %88, i8* %89, align 1, !dbg !16648
  %91 = load i16, i16* %8, align 2, !dbg !16649
  %92 = trunc i16 %91 to i8, !dbg !16649
  %93 = load i8*, i8** %5, align 8, !dbg !16650
  %94 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !16650
  store i8* %94, i8** %5, align 8, !dbg !16650
  store i8 %92, i8* %93, align 1, !dbg !16651
  br label %13, !dbg !16652, !llvm.loop !16654

; <label>:95:                                     ; preds = %13
  br label %180, !dbg !16655

; <label>:96:                                     ; preds = %3
  br label %97, !dbg !16656

; <label>:97:                                     ; preds = %117, %96
  %98 = load i8*, i8** %5, align 8, !dbg !16658
  %99 = load i8*, i8** %6, align 8, !dbg !16660
  %100 = icmp ult i8* %98, %99, !dbg !16661
  br i1 %100, label %101, label %179, !dbg !16662

; <label>:101:                                    ; preds = %97
  %102 = load i16*, i16** %4, align 8, !dbg !16663
  %103 = getelementptr inbounds i16, i16* %102, i32 1, !dbg !16663
  store i16* %103, i16** %4, align 8, !dbg !16663
  %104 = load i16, i16* %102, align 2, !dbg !16665
  store i16 %104, i16* %7, align 2, !dbg !16666
  %105 = load i32, i32* @g_host_be, align 4, !dbg !16667
  %106 = icmp ne i32 %105, 0, !dbg !16667
  br i1 %106, label %107, label %117, !dbg !16669

; <label>:107:                                    ; preds = %101
  %108 = load i16, i16* %7, align 2, !dbg !16670
  %109 = zext i16 %108 to i32, !dbg !16670
  %110 = and i32 %109, 255, !dbg !16673
  %111 = shl i32 %110, 8, !dbg !16674
  %112 = load i16, i16* %7, align 2, !dbg !16675
  %113 = zext i16 %112 to i32, !dbg !16675
  %114 = ashr i32 %113, 8, !dbg !16676
  %115 = or i32 %111, %114, !dbg !16677
  %116 = trunc i32 %115 to i16, !dbg !16678
  store i16 %116, i16* %7, align 2, !dbg !16679
  br label %117, !dbg !16680

; <label>:117:                                    ; preds = %107, %101
  %118 = load i16, i16* %7, align 2, !dbg !16681
  %119 = zext i16 %118 to i32, !dbg !16681
  %120 = ashr i32 %119, 7, !dbg !16683
  %121 = and i32 %120, 248, !dbg !16684
  %122 = load i16, i16* %7, align 2, !dbg !16685
  %123 = zext i16 %122 to i32, !dbg !16685
  %124 = ashr i32 %123, 12, !dbg !16686
  %125 = and i32 %124, 7, !dbg !16687
  %126 = or i32 %121, %125, !dbg !16688
  %127 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16689
  store i32 %126, i32* %127, align 4, !dbg !16690
  %128 = load i16, i16* %7, align 2, !dbg !16691
  %129 = zext i16 %128 to i32, !dbg !16691
  %130 = ashr i32 %129, 2, !dbg !16692
  %131 = and i32 %130, 248, !dbg !16693
  %132 = load i16, i16* %7, align 2, !dbg !16694
  %133 = zext i16 %132 to i32, !dbg !16694
  %134 = ashr i32 %133, 8, !dbg !16695
  %135 = and i32 %134, 7, !dbg !16696
  %136 = or i32 %131, %135, !dbg !16697
  %137 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16698
  store i32 %136, i32* %137, align 4, !dbg !16699
  %138 = load i16, i16* %7, align 2, !dbg !16700
  %139 = zext i16 %138 to i32, !dbg !16700
  %140 = shl i32 %139, 3, !dbg !16701
  %141 = and i32 %140, 248, !dbg !16702
  %142 = load i16, i16* %7, align 2, !dbg !16703
  %143 = zext i16 %142 to i32, !dbg !16703
  %144 = ashr i32 %143, 2, !dbg !16704
  %145 = and i32 %144, 7, !dbg !16705
  %146 = or i32 %141, %145, !dbg !16706
  %147 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16707
  store i32 %146, i32* %147, align 4, !dbg !16708
  %148 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 0, !dbg !16709
  %149 = load i32, i32* %148, align 4, !dbg !16709
  %150 = load i32, i32* @g_red_shift_r, align 4, !dbg !16710
  %151 = lshr i32 %149, %150, !dbg !16711
  %152 = load i32, i32* @g_red_shift_l, align 4, !dbg !16712
  %153 = shl i32 %151, %152, !dbg !16713
  %154 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 1, !dbg !16714
  %155 = load i32, i32* %154, align 4, !dbg !16714
  %156 = load i32, i32* @g_green_shift_r, align 4, !dbg !16715
  %157 = lshr i32 %155, %156, !dbg !16716
  %158 = load i32, i32* @g_green_shift_l, align 4, !dbg !16717
  %159 = shl i32 %157, %158, !dbg !16718
  %160 = or i32 %153, %159, !dbg !16719
  %161 = getelementptr inbounds %struct.PixelColour, %struct.PixelColour* %9, i32 0, i32 2, !dbg !16720
  %162 = load i32, i32* %161, align 4, !dbg !16720
  %163 = load i32, i32* @g_blue_shift_r, align 4, !dbg !16721
  %164 = lshr i32 %162, %163, !dbg !16722
  %165 = load i32, i32* @g_blue_shift_l, align 4, !dbg !16723
  %166 = shl i32 %164, %165, !dbg !16724
  %167 = or i32 %160, %166, !dbg !16725
  %168 = trunc i32 %167 to i16, !dbg !16726
  store i16 %168, i16* %8, align 2, !dbg !16727
  %169 = load i16, i16* %8, align 2, !dbg !16728
  %170 = trunc i16 %169 to i8, !dbg !16728
  %171 = load i8*, i8** %5, align 8, !dbg !16730
  %172 = getelementptr inbounds i8, i8* %171, i32 1, !dbg !16730
  store i8* %172, i8** %5, align 8, !dbg !16730
  store i8 %170, i8* %171, align 1, !dbg !16731
  %173 = load i16, i16* %8, align 2, !dbg !16732
  %174 = zext i16 %173 to i32, !dbg !16732
  %175 = ashr i32 %174, 8, !dbg !16733
  %176 = trunc i32 %175 to i8, !dbg !16732
  %177 = load i8*, i8** %5, align 8, !dbg !16734
  %178 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !16734
  store i8* %178, i8** %5, align 8, !dbg !16734
  store i8 %176, i8* %177, align 1, !dbg !16735
  br label %97, !dbg !16736, !llvm.loop !16738

; <label>:179:                                    ; preds = %97
  br label %180

; <label>:180:                                    ; preds = %179, %95
  ret void, !dbg !16739
}

; Function Attrs: nounwind uwtable
define internal void @translate8to8(i8*, i8*, i8*) #0 !dbg !16740 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !16741, metadata !416), !dbg !16742
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16743, metadata !416), !dbg !16744
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !16745, metadata !416), !dbg !16746
  br label %7, !dbg !16747

; <label>:7:                                      ; preds = %11, %3
  %8 = load i8*, i8** %5, align 8, !dbg !16748
  %9 = load i8*, i8** %6, align 8, !dbg !16750
  %10 = icmp ult i8* %8, %9, !dbg !16751
  br i1 %10, label %11, label %22, !dbg !16752

; <label>:11:                                     ; preds = %7
  %12 = load i8*, i8** %4, align 8, !dbg !16753
  %13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !16753
  store i8* %13, i8** %4, align 8, !dbg !16753
  %14 = load i8, i8* %12, align 1, !dbg !16754
  %15 = zext i8 %14 to i64, !dbg !16755
  %16 = load i32*, i32** @g_colmap, align 8, !dbg !16755
  %17 = getelementptr inbounds i32, i32* %16, i64 %15, !dbg !16755
  %18 = load i32, i32* %17, align 4, !dbg !16755
  %19 = trunc i32 %18 to i8, !dbg !16756
  %20 = load i8*, i8** %5, align 8, !dbg !16757
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !16757
  store i8* %21, i8** %5, align 8, !dbg !16757
  store i8 %19, i8* %20, align 1, !dbg !16758
  br label %7, !dbg !16759, !llvm.loop !16761

; <label>:22:                                     ; preds = %7
  ret void, !dbg !16762
}

; Function Attrs: nounwind uwtable
define internal void @translate8to16(i8*, i8*, i8*) #0 !dbg !16763 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !16764, metadata !416), !dbg !16765
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16766, metadata !416), !dbg !16767
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !16768, metadata !416), !dbg !16769
  call void @llvm.dbg.declare(metadata i16* %7, metadata !16770, metadata !416), !dbg !16771
  %8 = load i32, i32* @g_compatible_arch, align 4, !dbg !16772
  %9 = icmp ne i32 %8, 0, !dbg !16772
  br i1 %9, label %10, label %132, !dbg !16774

; <label>:10:                                     ; preds = %3
  br label %11, !dbg !16775

; <label>:11:                                     ; preds = %16, %10
  %12 = load i8*, i8** %5, align 8, !dbg !16778
  %13 = load i8*, i8** %6, align 8, !dbg !16780
  %14 = getelementptr inbounds i8, i8* %13, i64 -16, !dbg !16781
  %15 = icmp ule i8* %12, %14, !dbg !16782
  br i1 %15, label %16, label %113, !dbg !16783

; <label>:16:                                     ; preds = %11
  %17 = load i8*, i8** %4, align 8, !dbg !16784
  %18 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !16784
  store i8* %18, i8** %4, align 8, !dbg !16784
  %19 = load i8, i8* %17, align 1, !dbg !16787
  %20 = zext i8 %19 to i64, !dbg !16788
  %21 = load i32*, i32** @g_colmap, align 8, !dbg !16788
  %22 = getelementptr inbounds i32, i32* %21, i64 %20, !dbg !16788
  %23 = load i32, i32* %22, align 4, !dbg !16788
  %24 = trunc i32 %23 to i16, !dbg !16788
  %25 = load i8*, i8** %5, align 8, !dbg !16789
  %26 = bitcast i8* %25 to i16*, !dbg !16790
  store i16 %24, i16* %26, align 2, !dbg !16791
  %27 = load i8*, i8** %5, align 8, !dbg !16792
  %28 = getelementptr inbounds i8, i8* %27, i64 2, !dbg !16792
  store i8* %28, i8** %5, align 8, !dbg !16792
  %29 = load i8*, i8** %4, align 8, !dbg !16793
  %30 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !16793
  store i8* %30, i8** %4, align 8, !dbg !16793
  %31 = load i8, i8* %29, align 1, !dbg !16794
  %32 = zext i8 %31 to i64, !dbg !16795
  %33 = load i32*, i32** @g_colmap, align 8, !dbg !16795
  %34 = getelementptr inbounds i32, i32* %33, i64 %32, !dbg !16795
  %35 = load i32, i32* %34, align 4, !dbg !16795
  %36 = trunc i32 %35 to i16, !dbg !16795
  %37 = load i8*, i8** %5, align 8, !dbg !16796
  %38 = bitcast i8* %37 to i16*, !dbg !16797
  store i16 %36, i16* %38, align 2, !dbg !16798
  %39 = load i8*, i8** %5, align 8, !dbg !16799
  %40 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !16799
  store i8* %40, i8** %5, align 8, !dbg !16799
  %41 = load i8*, i8** %4, align 8, !dbg !16800
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !16800
  store i8* %42, i8** %4, align 8, !dbg !16800
  %43 = load i8, i8* %41, align 1, !dbg !16801
  %44 = zext i8 %43 to i64, !dbg !16802
  %45 = load i32*, i32** @g_colmap, align 8, !dbg !16802
  %46 = getelementptr inbounds i32, i32* %45, i64 %44, !dbg !16802
  %47 = load i32, i32* %46, align 4, !dbg !16802
  %48 = trunc i32 %47 to i16, !dbg !16802
  %49 = load i8*, i8** %5, align 8, !dbg !16803
  %50 = bitcast i8* %49 to i16*, !dbg !16804
  store i16 %48, i16* %50, align 2, !dbg !16805
  %51 = load i8*, i8** %5, align 8, !dbg !16806
  %52 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !16806
  store i8* %52, i8** %5, align 8, !dbg !16806
  %53 = load i8*, i8** %4, align 8, !dbg !16807
  %54 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !16807
  store i8* %54, i8** %4, align 8, !dbg !16807
  %55 = load i8, i8* %53, align 1, !dbg !16808
  %56 = zext i8 %55 to i64, !dbg !16809
  %57 = load i32*, i32** @g_colmap, align 8, !dbg !16809
  %58 = getelementptr inbounds i32, i32* %57, i64 %56, !dbg !16809
  %59 = load i32, i32* %58, align 4, !dbg !16809
  %60 = trunc i32 %59 to i16, !dbg !16809
  %61 = load i8*, i8** %5, align 8, !dbg !16810
  %62 = bitcast i8* %61 to i16*, !dbg !16811
  store i16 %60, i16* %62, align 2, !dbg !16812
  %63 = load i8*, i8** %5, align 8, !dbg !16813
  %64 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !16813
  store i8* %64, i8** %5, align 8, !dbg !16813
  %65 = load i8*, i8** %4, align 8, !dbg !16814
  %66 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !16814
  store i8* %66, i8** %4, align 8, !dbg !16814
  %67 = load i8, i8* %65, align 1, !dbg !16815
  %68 = zext i8 %67 to i64, !dbg !16816
  %69 = load i32*, i32** @g_colmap, align 8, !dbg !16816
  %70 = getelementptr inbounds i32, i32* %69, i64 %68, !dbg !16816
  %71 = load i32, i32* %70, align 4, !dbg !16816
  %72 = trunc i32 %71 to i16, !dbg !16816
  %73 = load i8*, i8** %5, align 8, !dbg !16817
  %74 = bitcast i8* %73 to i16*, !dbg !16818
  store i16 %72, i16* %74, align 2, !dbg !16819
  %75 = load i8*, i8** %5, align 8, !dbg !16820
  %76 = getelementptr inbounds i8, i8* %75, i64 2, !dbg !16820
  store i8* %76, i8** %5, align 8, !dbg !16820
  %77 = load i8*, i8** %4, align 8, !dbg !16821
  %78 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !16821
  store i8* %78, i8** %4, align 8, !dbg !16821
  %79 = load i8, i8* %77, align 1, !dbg !16822
  %80 = zext i8 %79 to i64, !dbg !16823
  %81 = load i32*, i32** @g_colmap, align 8, !dbg !16823
  %82 = getelementptr inbounds i32, i32* %81, i64 %80, !dbg !16823
  %83 = load i32, i32* %82, align 4, !dbg !16823
  %84 = trunc i32 %83 to i16, !dbg !16823
  %85 = load i8*, i8** %5, align 8, !dbg !16824
  %86 = bitcast i8* %85 to i16*, !dbg !16825
  store i16 %84, i16* %86, align 2, !dbg !16826
  %87 = load i8*, i8** %5, align 8, !dbg !16827
  %88 = getelementptr inbounds i8, i8* %87, i64 2, !dbg !16827
  store i8* %88, i8** %5, align 8, !dbg !16827
  %89 = load i8*, i8** %4, align 8, !dbg !16828
  %90 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !16828
  store i8* %90, i8** %4, align 8, !dbg !16828
  %91 = load i8, i8* %89, align 1, !dbg !16829
  %92 = zext i8 %91 to i64, !dbg !16830
  %93 = load i32*, i32** @g_colmap, align 8, !dbg !16830
  %94 = getelementptr inbounds i32, i32* %93, i64 %92, !dbg !16830
  %95 = load i32, i32* %94, align 4, !dbg !16830
  %96 = trunc i32 %95 to i16, !dbg !16830
  %97 = load i8*, i8** %5, align 8, !dbg !16831
  %98 = bitcast i8* %97 to i16*, !dbg !16832
  store i16 %96, i16* %98, align 2, !dbg !16833
  %99 = load i8*, i8** %5, align 8, !dbg !16834
  %100 = getelementptr inbounds i8, i8* %99, i64 2, !dbg !16834
  store i8* %100, i8** %5, align 8, !dbg !16834
  %101 = load i8*, i8** %4, align 8, !dbg !16835
  %102 = getelementptr inbounds i8, i8* %101, i32 1, !dbg !16835
  store i8* %102, i8** %4, align 8, !dbg !16835
  %103 = load i8, i8* %101, align 1, !dbg !16836
  %104 = zext i8 %103 to i64, !dbg !16837
  %105 = load i32*, i32** @g_colmap, align 8, !dbg !16837
  %106 = getelementptr inbounds i32, i32* %105, i64 %104, !dbg !16837
  %107 = load i32, i32* %106, align 4, !dbg !16837
  %108 = trunc i32 %107 to i16, !dbg !16837
  %109 = load i8*, i8** %5, align 8, !dbg !16838
  %110 = bitcast i8* %109 to i16*, !dbg !16839
  store i16 %108, i16* %110, align 2, !dbg !16840
  %111 = load i8*, i8** %5, align 8, !dbg !16841
  %112 = getelementptr inbounds i8, i8* %111, i64 2, !dbg !16841
  store i8* %112, i8** %5, align 8, !dbg !16841
  br label %11, !dbg !16842, !llvm.loop !16843

; <label>:113:                                    ; preds = %11
  br label %114, !dbg !16844

; <label>:114:                                    ; preds = %118, %113
  %115 = load i8*, i8** %5, align 8, !dbg !16846
  %116 = load i8*, i8** %6, align 8, !dbg !16848
  %117 = icmp ult i8* %115, %116, !dbg !16849
  br i1 %117, label %118, label %131, !dbg !16850

; <label>:118:                                    ; preds = %114
  %119 = load i8*, i8** %4, align 8, !dbg !16851
  %120 = getelementptr inbounds i8, i8* %119, i32 1, !dbg !16851
  store i8* %120, i8** %4, align 8, !dbg !16851
  %121 = load i8, i8* %119, align 1, !dbg !16854
  %122 = zext i8 %121 to i64, !dbg !16855
  %123 = load i32*, i32** @g_colmap, align 8, !dbg !16855
  %124 = getelementptr inbounds i32, i32* %123, i64 %122, !dbg !16855
  %125 = load i32, i32* %124, align 4, !dbg !16855
  %126 = trunc i32 %125 to i16, !dbg !16855
  %127 = load i8*, i8** %5, align 8, !dbg !16856
  %128 = bitcast i8* %127 to i16*, !dbg !16857
  store i16 %126, i16* %128, align 2, !dbg !16858
  %129 = load i8*, i8** %5, align 8, !dbg !16859
  %130 = getelementptr inbounds i8, i8* %129, i64 2, !dbg !16859
  store i8* %130, i8** %5, align 8, !dbg !16859
  br label %114, !dbg !16860, !llvm.loop !16861

; <label>:131:                                    ; preds = %114
  br label %186, !dbg !16863

; <label>:132:                                    ; preds = %3
  %133 = load i32, i32* @g_xserver_be, align 4, !dbg !16864
  %134 = icmp ne i32 %133, 0, !dbg !16864
  br i1 %134, label %135, label %160, !dbg !16866

; <label>:135:                                    ; preds = %132
  br label %136, !dbg !16867

; <label>:136:                                    ; preds = %140, %135
  %137 = load i8*, i8** %5, align 8, !dbg !16869
  %138 = load i8*, i8** %6, align 8, !dbg !16871
  %139 = icmp ult i8* %137, %138, !dbg !16872
  br i1 %139, label %140, label %159, !dbg !16873

; <label>:140:                                    ; preds = %136
  %141 = load i8*, i8** %4, align 8, !dbg !16874
  %142 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !16874
  store i8* %142, i8** %4, align 8, !dbg !16874
  %143 = load i8, i8* %141, align 1, !dbg !16876
  %144 = zext i8 %143 to i64, !dbg !16877
  %145 = load i32*, i32** @g_colmap, align 8, !dbg !16877
  %146 = getelementptr inbounds i32, i32* %145, i64 %144, !dbg !16877
  %147 = load i32, i32* %146, align 4, !dbg !16877
  %148 = trunc i32 %147 to i16, !dbg !16878
  store i16 %148, i16* %7, align 2, !dbg !16879
  %149 = load i16, i16* %7, align 2, !dbg !16880
  %150 = zext i16 %149 to i32, !dbg !16880
  %151 = ashr i32 %150, 8, !dbg !16882
  %152 = trunc i32 %151 to i8, !dbg !16880
  %153 = load i8*, i8** %5, align 8, !dbg !16883
  %154 = getelementptr inbounds i8, i8* %153, i32 1, !dbg !16883
  store i8* %154, i8** %5, align 8, !dbg !16883
  store i8 %152, i8* %153, align 1, !dbg !16884
  %155 = load i16, i16* %7, align 2, !dbg !16885
  %156 = trunc i16 %155 to i8, !dbg !16885
  %157 = load i8*, i8** %5, align 8, !dbg !16886
  %158 = getelementptr inbounds i8, i8* %157, i32 1, !dbg !16886
  store i8* %158, i8** %5, align 8, !dbg !16886
  store i8 %156, i8* %157, align 1, !dbg !16887
  br label %136, !dbg !16888, !llvm.loop !16890

; <label>:159:                                    ; preds = %136
  br label %185, !dbg !16891

; <label>:160:                                    ; preds = %132
  br label %161, !dbg !16892

; <label>:161:                                    ; preds = %165, %160
  %162 = load i8*, i8** %5, align 8, !dbg !16894
  %163 = load i8*, i8** %6, align 8, !dbg !16896
  %164 = icmp ult i8* %162, %163, !dbg !16897
  br i1 %164, label %165, label %184, !dbg !16898

; <label>:165:                                    ; preds = %161
  %166 = load i8*, i8** %4, align 8, !dbg !16899
  %167 = getelementptr inbounds i8, i8* %166, i32 1, !dbg !16899
  store i8* %167, i8** %4, align 8, !dbg !16899
  %168 = load i8, i8* %166, align 1, !dbg !16901
  %169 = zext i8 %168 to i64, !dbg !16902
  %170 = load i32*, i32** @g_colmap, align 8, !dbg !16902
  %171 = getelementptr inbounds i32, i32* %170, i64 %169, !dbg !16902
  %172 = load i32, i32* %171, align 4, !dbg !16902
  %173 = trunc i32 %172 to i16, !dbg !16903
  store i16 %173, i16* %7, align 2, !dbg !16904
  %174 = load i16, i16* %7, align 2, !dbg !16905
  %175 = trunc i16 %174 to i8, !dbg !16905
  %176 = load i8*, i8** %5, align 8, !dbg !16907
  %177 = getelementptr inbounds i8, i8* %176, i32 1, !dbg !16907
  store i8* %177, i8** %5, align 8, !dbg !16907
  store i8 %175, i8* %176, align 1, !dbg !16908
  %178 = load i16, i16* %7, align 2, !dbg !16909
  %179 = zext i16 %178 to i32, !dbg !16909
  %180 = ashr i32 %179, 8, !dbg !16910
  %181 = trunc i32 %180 to i8, !dbg !16909
  %182 = load i8*, i8** %5, align 8, !dbg !16911
  %183 = getelementptr inbounds i8, i8* %182, i32 1, !dbg !16911
  store i8* %183, i8** %5, align 8, !dbg !16911
  store i8 %181, i8* %182, align 1, !dbg !16912
  br label %161, !dbg !16913, !llvm.loop !16915

; <label>:184:                                    ; preds = %161
  br label %185

; <label>:185:                                    ; preds = %184, %159
  br label %186

; <label>:186:                                    ; preds = %185, %131
  ret void, !dbg !16916
}

; Function Attrs: nounwind uwtable
define internal void @translate8to24(i8*, i8*, i8*) #0 !dbg !16917 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !16918, metadata !416), !dbg !16919
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16920, metadata !416), !dbg !16921
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !16922, metadata !416), !dbg !16923
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16924, metadata !416), !dbg !16925
  %8 = load i32, i32* @g_compatible_arch, align 4, !dbg !16926
  %9 = icmp ne i32 %8, 0, !dbg !16926
  br i1 %9, label %10, label %38, !dbg !16928

; <label>:10:                                     ; preds = %3
  br label %11, !dbg !16929

; <label>:11:                                     ; preds = %15, %10
  %12 = load i8*, i8** %5, align 8, !dbg !16931
  %13 = load i8*, i8** %6, align 8, !dbg !16933
  %14 = icmp ult i8* %12, %13, !dbg !16934
  br i1 %14, label %15, label %37, !dbg !16935

; <label>:15:                                     ; preds = %11
  %16 = load i8*, i8** %4, align 8, !dbg !16936
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !16936
  store i8* %17, i8** %4, align 8, !dbg !16936
  %18 = load i8, i8* %16, align 1, !dbg !16938
  %19 = zext i8 %18 to i64, !dbg !16939
  %20 = load i32*, i32** @g_colmap, align 8, !dbg !16939
  %21 = getelementptr inbounds i32, i32* %20, i64 %19, !dbg !16939
  %22 = load i32, i32* %21, align 4, !dbg !16939
  store i32 %22, i32* %7, align 4, !dbg !16940
  %23 = load i32, i32* %7, align 4, !dbg !16941
  %24 = lshr i32 %23, 16, !dbg !16943
  %25 = trunc i32 %24 to i8, !dbg !16941
  %26 = load i8*, i8** %5, align 8, !dbg !16944
  %27 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !16944
  store i8* %27, i8** %5, align 8, !dbg !16944
  store i8 %25, i8* %26, align 1, !dbg !16945
  %28 = load i32, i32* %7, align 4, !dbg !16946
  %29 = lshr i32 %28, 8, !dbg !16947
  %30 = trunc i32 %29 to i8, !dbg !16946
  %31 = load i8*, i8** %5, align 8, !dbg !16948
  %32 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !16948
  store i8* %32, i8** %5, align 8, !dbg !16948
  store i8 %30, i8* %31, align 1, !dbg !16949
  %33 = load i32, i32* %7, align 4, !dbg !16950
  %34 = trunc i32 %33 to i8, !dbg !16950
  %35 = load i8*, i8** %5, align 8, !dbg !16951
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !16951
  store i8* %36, i8** %5, align 8, !dbg !16951
  store i8 %34, i8* %35, align 1, !dbg !16952
  br label %11, !dbg !16953, !llvm.loop !16955

; <label>:37:                                     ; preds = %11
  br label %66, !dbg !16956

; <label>:38:                                     ; preds = %3
  br label %39, !dbg !16957

; <label>:39:                                     ; preds = %43, %38
  %40 = load i8*, i8** %5, align 8, !dbg !16959
  %41 = load i8*, i8** %6, align 8, !dbg !16961
  %42 = icmp ult i8* %40, %41, !dbg !16962
  br i1 %42, label %43, label %65, !dbg !16963

; <label>:43:                                     ; preds = %39
  %44 = load i8*, i8** %4, align 8, !dbg !16964
  %45 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !16964
  store i8* %45, i8** %4, align 8, !dbg !16964
  %46 = load i8, i8* %44, align 1, !dbg !16966
  %47 = zext i8 %46 to i64, !dbg !16967
  %48 = load i32*, i32** @g_colmap, align 8, !dbg !16967
  %49 = getelementptr inbounds i32, i32* %48, i64 %47, !dbg !16967
  %50 = load i32, i32* %49, align 4, !dbg !16967
  store i32 %50, i32* %7, align 4, !dbg !16968
  %51 = load i32, i32* %7, align 4, !dbg !16969
  %52 = trunc i32 %51 to i8, !dbg !16969
  %53 = load i8*, i8** %5, align 8, !dbg !16971
  %54 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !16971
  store i8* %54, i8** %5, align 8, !dbg !16971
  store i8 %52, i8* %53, align 1, !dbg !16972
  %55 = load i32, i32* %7, align 4, !dbg !16973
  %56 = lshr i32 %55, 8, !dbg !16974
  %57 = trunc i32 %56 to i8, !dbg !16973
  %58 = load i8*, i8** %5, align 8, !dbg !16975
  %59 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !16975
  store i8* %59, i8** %5, align 8, !dbg !16975
  store i8 %57, i8* %58, align 1, !dbg !16976
  %60 = load i32, i32* %7, align 4, !dbg !16977
  %61 = lshr i32 %60, 16, !dbg !16978
  %62 = trunc i32 %61 to i8, !dbg !16977
  %63 = load i8*, i8** %5, align 8, !dbg !16979
  %64 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !16979
  store i8* %64, i8** %5, align 8, !dbg !16979
  store i8 %62, i8* %63, align 1, !dbg !16980
  br label %39, !dbg !16981, !llvm.loop !16983

; <label>:65:                                     ; preds = %39
  br label %66

; <label>:66:                                     ; preds = %65, %37
  ret void, !dbg !16984
}

; Function Attrs: nounwind uwtable
define internal void @translate8to32(i8*, i8*, i8*) #0 !dbg !16985 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !16986, metadata !416), !dbg !16987
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !16988, metadata !416), !dbg !16989
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !16990, metadata !416), !dbg !16991
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16992, metadata !416), !dbg !16993
  %8 = load i32, i32* @g_compatible_arch, align 4, !dbg !16994
  %9 = icmp ne i32 %8, 0, !dbg !16994
  br i1 %9, label %10, label %123, !dbg !16996

; <label>:10:                                     ; preds = %3
  br label %11, !dbg !16997

; <label>:11:                                     ; preds = %16, %10
  %12 = load i8*, i8** %5, align 8, !dbg !17000
  %13 = load i8*, i8** %6, align 8, !dbg !17002
  %14 = getelementptr inbounds i8, i8* %13, i64 -32, !dbg !17003
  %15 = icmp ule i8* %12, %14, !dbg !17004
  br i1 %15, label %16, label %105, !dbg !17005

; <label>:16:                                     ; preds = %11
  %17 = load i8*, i8** %4, align 8, !dbg !17006
  %18 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !17006
  store i8* %18, i8** %4, align 8, !dbg !17006
  %19 = load i8, i8* %17, align 1, !dbg !17009
  %20 = zext i8 %19 to i64, !dbg !17010
  %21 = load i32*, i32** @g_colmap, align 8, !dbg !17010
  %22 = getelementptr inbounds i32, i32* %21, i64 %20, !dbg !17010
  %23 = load i32, i32* %22, align 4, !dbg !17010
  %24 = load i8*, i8** %5, align 8, !dbg !17011
  %25 = bitcast i8* %24 to i32*, !dbg !17012
  store i32 %23, i32* %25, align 4, !dbg !17013
  %26 = load i8*, i8** %5, align 8, !dbg !17014
  %27 = getelementptr inbounds i8, i8* %26, i64 4, !dbg !17014
  store i8* %27, i8** %5, align 8, !dbg !17014
  %28 = load i8*, i8** %4, align 8, !dbg !17015
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !17015
  store i8* %29, i8** %4, align 8, !dbg !17015
  %30 = load i8, i8* %28, align 1, !dbg !17016
  %31 = zext i8 %30 to i64, !dbg !17017
  %32 = load i32*, i32** @g_colmap, align 8, !dbg !17017
  %33 = getelementptr inbounds i32, i32* %32, i64 %31, !dbg !17017
  %34 = load i32, i32* %33, align 4, !dbg !17017
  %35 = load i8*, i8** %5, align 8, !dbg !17018
  %36 = bitcast i8* %35 to i32*, !dbg !17019
  store i32 %34, i32* %36, align 4, !dbg !17020
  %37 = load i8*, i8** %5, align 8, !dbg !17021
  %38 = getelementptr inbounds i8, i8* %37, i64 4, !dbg !17021
  store i8* %38, i8** %5, align 8, !dbg !17021
  %39 = load i8*, i8** %4, align 8, !dbg !17022
  %40 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !17022
  store i8* %40, i8** %4, align 8, !dbg !17022
  %41 = load i8, i8* %39, align 1, !dbg !17023
  %42 = zext i8 %41 to i64, !dbg !17024
  %43 = load i32*, i32** @g_colmap, align 8, !dbg !17024
  %44 = getelementptr inbounds i32, i32* %43, i64 %42, !dbg !17024
  %45 = load i32, i32* %44, align 4, !dbg !17024
  %46 = load i8*, i8** %5, align 8, !dbg !17025
  %47 = bitcast i8* %46 to i32*, !dbg !17026
  store i32 %45, i32* %47, align 4, !dbg !17027
  %48 = load i8*, i8** %5, align 8, !dbg !17028
  %49 = getelementptr inbounds i8, i8* %48, i64 4, !dbg !17028
  store i8* %49, i8** %5, align 8, !dbg !17028
  %50 = load i8*, i8** %4, align 8, !dbg !17029
  %51 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !17029
  store i8* %51, i8** %4, align 8, !dbg !17029
  %52 = load i8, i8* %50, align 1, !dbg !17030
  %53 = zext i8 %52 to i64, !dbg !17031
  %54 = load i32*, i32** @g_colmap, align 8, !dbg !17031
  %55 = getelementptr inbounds i32, i32* %54, i64 %53, !dbg !17031
  %56 = load i32, i32* %55, align 4, !dbg !17031
  %57 = load i8*, i8** %5, align 8, !dbg !17032
  %58 = bitcast i8* %57 to i32*, !dbg !17033
  store i32 %56, i32* %58, align 4, !dbg !17034
  %59 = load i8*, i8** %5, align 8, !dbg !17035
  %60 = getelementptr inbounds i8, i8* %59, i64 4, !dbg !17035
  store i8* %60, i8** %5, align 8, !dbg !17035
  %61 = load i8*, i8** %4, align 8, !dbg !17036
  %62 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !17036
  store i8* %62, i8** %4, align 8, !dbg !17036
  %63 = load i8, i8* %61, align 1, !dbg !17037
  %64 = zext i8 %63 to i64, !dbg !17038
  %65 = load i32*, i32** @g_colmap, align 8, !dbg !17038
  %66 = getelementptr inbounds i32, i32* %65, i64 %64, !dbg !17038
  %67 = load i32, i32* %66, align 4, !dbg !17038
  %68 = load i8*, i8** %5, align 8, !dbg !17039
  %69 = bitcast i8* %68 to i32*, !dbg !17040
  store i32 %67, i32* %69, align 4, !dbg !17041
  %70 = load i8*, i8** %5, align 8, !dbg !17042
  %71 = getelementptr inbounds i8, i8* %70, i64 4, !dbg !17042
  store i8* %71, i8** %5, align 8, !dbg !17042
  %72 = load i8*, i8** %4, align 8, !dbg !17043
  %73 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !17043
  store i8* %73, i8** %4, align 8, !dbg !17043
  %74 = load i8, i8* %72, align 1, !dbg !17044
  %75 = zext i8 %74 to i64, !dbg !17045
  %76 = load i32*, i32** @g_colmap, align 8, !dbg !17045
  %77 = getelementptr inbounds i32, i32* %76, i64 %75, !dbg !17045
  %78 = load i32, i32* %77, align 4, !dbg !17045
  %79 = load i8*, i8** %5, align 8, !dbg !17046
  %80 = bitcast i8* %79 to i32*, !dbg !17047
  store i32 %78, i32* %80, align 4, !dbg !17048
  %81 = load i8*, i8** %5, align 8, !dbg !17049
  %82 = getelementptr inbounds i8, i8* %81, i64 4, !dbg !17049
  store i8* %82, i8** %5, align 8, !dbg !17049
  %83 = load i8*, i8** %4, align 8, !dbg !17050
  %84 = getelementptr inbounds i8, i8* %83, i32 1, !dbg !17050
  store i8* %84, i8** %4, align 8, !dbg !17050
  %85 = load i8, i8* %83, align 1, !dbg !17051
  %86 = zext i8 %85 to i64, !dbg !17052
  %87 = load i32*, i32** @g_colmap, align 8, !dbg !17052
  %88 = getelementptr inbounds i32, i32* %87, i64 %86, !dbg !17052
  %89 = load i32, i32* %88, align 4, !dbg !17052
  %90 = load i8*, i8** %5, align 8, !dbg !17053
  %91 = bitcast i8* %90 to i32*, !dbg !17054
  store i32 %89, i32* %91, align 4, !dbg !17055
  %92 = load i8*, i8** %5, align 8, !dbg !17056
  %93 = getelementptr inbounds i8, i8* %92, i64 4, !dbg !17056
  store i8* %93, i8** %5, align 8, !dbg !17056
  %94 = load i8*, i8** %4, align 8, !dbg !17057
  %95 = getelementptr inbounds i8, i8* %94, i32 1, !dbg !17057
  store i8* %95, i8** %4, align 8, !dbg !17057
  %96 = load i8, i8* %94, align 1, !dbg !17058
  %97 = zext i8 %96 to i64, !dbg !17059
  %98 = load i32*, i32** @g_colmap, align 8, !dbg !17059
  %99 = getelementptr inbounds i32, i32* %98, i64 %97, !dbg !17059
  %100 = load i32, i32* %99, align 4, !dbg !17059
  %101 = load i8*, i8** %5, align 8, !dbg !17060
  %102 = bitcast i8* %101 to i32*, !dbg !17061
  store i32 %100, i32* %102, align 4, !dbg !17062
  %103 = load i8*, i8** %5, align 8, !dbg !17063
  %104 = getelementptr inbounds i8, i8* %103, i64 4, !dbg !17063
  store i8* %104, i8** %5, align 8, !dbg !17063
  br label %11, !dbg !17064, !llvm.loop !17065

; <label>:105:                                    ; preds = %11
  br label %106, !dbg !17066

; <label>:106:                                    ; preds = %110, %105
  %107 = load i8*, i8** %5, align 8, !dbg !17068
  %108 = load i8*, i8** %6, align 8, !dbg !17070
  %109 = icmp ult i8* %107, %108, !dbg !17071
  br i1 %109, label %110, label %122, !dbg !17072

; <label>:110:                                    ; preds = %106
  %111 = load i8*, i8** %4, align 8, !dbg !17073
  %112 = getelementptr inbounds i8, i8* %111, i32 1, !dbg !17073
  store i8* %112, i8** %4, align 8, !dbg !17073
  %113 = load i8, i8* %111, align 1, !dbg !17076
  %114 = zext i8 %113 to i64, !dbg !17077
  %115 = load i32*, i32** @g_colmap, align 8, !dbg !17077
  %116 = getelementptr inbounds i32, i32* %115, i64 %114, !dbg !17077
  %117 = load i32, i32* %116, align 4, !dbg !17077
  %118 = load i8*, i8** %5, align 8, !dbg !17078
  %119 = bitcast i8* %118 to i32*, !dbg !17079
  store i32 %117, i32* %119, align 4, !dbg !17080
  %120 = load i8*, i8** %5, align 8, !dbg !17081
  %121 = getelementptr inbounds i8, i8* %120, i64 4, !dbg !17081
  store i8* %121, i8** %5, align 8, !dbg !17081
  br label %106, !dbg !17082, !llvm.loop !17083

; <label>:122:                                    ; preds = %106
  br label %193, !dbg !17085

; <label>:123:                                    ; preds = %3
  %124 = load i32, i32* @g_xserver_be, align 4, !dbg !17086
  %125 = icmp ne i32 %124, 0, !dbg !17086
  br i1 %125, label %126, label %159, !dbg !17088

; <label>:126:                                    ; preds = %123
  br label %127, !dbg !17089

; <label>:127:                                    ; preds = %131, %126
  %128 = load i8*, i8** %5, align 8, !dbg !17091
  %129 = load i8*, i8** %6, align 8, !dbg !17093
  %130 = icmp ult i8* %128, %129, !dbg !17094
  br i1 %130, label %131, label %158, !dbg !17095

; <label>:131:                                    ; preds = %127
  %132 = load i8*, i8** %4, align 8, !dbg !17096
  %133 = getelementptr inbounds i8, i8* %132, i32 1, !dbg !17096
  store i8* %133, i8** %4, align 8, !dbg !17096
  %134 = load i8, i8* %132, align 1, !dbg !17098
  %135 = zext i8 %134 to i64, !dbg !17099
  %136 = load i32*, i32** @g_colmap, align 8, !dbg !17099
  %137 = getelementptr inbounds i32, i32* %136, i64 %135, !dbg !17099
  %138 = load i32, i32* %137, align 4, !dbg !17099
  store i32 %138, i32* %7, align 4, !dbg !17100
  %139 = load i32, i32* %7, align 4, !dbg !17101
  %140 = lshr i32 %139, 24, !dbg !17103
  %141 = trunc i32 %140 to i8, !dbg !17101
  %142 = load i8*, i8** %5, align 8, !dbg !17104
  %143 = getelementptr inbounds i8, i8* %142, i32 1, !dbg !17104
  store i8* %143, i8** %5, align 8, !dbg !17104
  store i8 %141, i8* %142, align 1, !dbg !17105
  %144 = load i32, i32* %7, align 4, !dbg !17106
  %145 = lshr i32 %144, 16, !dbg !17107
  %146 = trunc i32 %145 to i8, !dbg !17106
  %147 = load i8*, i8** %5, align 8, !dbg !17108
  %148 = getelementptr inbounds i8, i8* %147, i32 1, !dbg !17108
  store i8* %148, i8** %5, align 8, !dbg !17108
  store i8 %146, i8* %147, align 1, !dbg !17109
  %149 = load i32, i32* %7, align 4, !dbg !17110
  %150 = lshr i32 %149, 8, !dbg !17111
  %151 = trunc i32 %150 to i8, !dbg !17110
  %152 = load i8*, i8** %5, align 8, !dbg !17112
  %153 = getelementptr inbounds i8, i8* %152, i32 1, !dbg !17112
  store i8* %153, i8** %5, align 8, !dbg !17112
  store i8 %151, i8* %152, align 1, !dbg !17113
  %154 = load i32, i32* %7, align 4, !dbg !17114
  %155 = trunc i32 %154 to i8, !dbg !17114
  %156 = load i8*, i8** %5, align 8, !dbg !17115
  %157 = getelementptr inbounds i8, i8* %156, i32 1, !dbg !17115
  store i8* %157, i8** %5, align 8, !dbg !17115
  store i8 %155, i8* %156, align 1, !dbg !17116
  br label %127, !dbg !17117, !llvm.loop !17119

; <label>:158:                                    ; preds = %127
  br label %192, !dbg !17120

; <label>:159:                                    ; preds = %123
  br label %160, !dbg !17121

; <label>:160:                                    ; preds = %164, %159
  %161 = load i8*, i8** %5, align 8, !dbg !17123
  %162 = load i8*, i8** %6, align 8, !dbg !17125
  %163 = icmp ult i8* %161, %162, !dbg !17126
  br i1 %163, label %164, label %191, !dbg !17127

; <label>:164:                                    ; preds = %160
  %165 = load i8*, i8** %4, align 8, !dbg !17128
  %166 = getelementptr inbounds i8, i8* %165, i32 1, !dbg !17128
  store i8* %166, i8** %4, align 8, !dbg !17128
  %167 = load i8, i8* %165, align 1, !dbg !17130
  %168 = zext i8 %167 to i64, !dbg !17131
  %169 = load i32*, i32** @g_colmap, align 8, !dbg !17131
  %170 = getelementptr inbounds i32, i32* %169, i64 %168, !dbg !17131
  %171 = load i32, i32* %170, align 4, !dbg !17131
  store i32 %171, i32* %7, align 4, !dbg !17132
  %172 = load i32, i32* %7, align 4, !dbg !17133
  %173 = trunc i32 %172 to i8, !dbg !17133
  %174 = load i8*, i8** %5, align 8, !dbg !17135
  %175 = getelementptr inbounds i8, i8* %174, i32 1, !dbg !17135
  store i8* %175, i8** %5, align 8, !dbg !17135
  store i8 %173, i8* %174, align 1, !dbg !17136
  %176 = load i32, i32* %7, align 4, !dbg !17137
  %177 = lshr i32 %176, 8, !dbg !17138
  %178 = trunc i32 %177 to i8, !dbg !17137
  %179 = load i8*, i8** %5, align 8, !dbg !17139
  %180 = getelementptr inbounds i8, i8* %179, i32 1, !dbg !17139
  store i8* %180, i8** %5, align 8, !dbg !17139
  store i8 %178, i8* %179, align 1, !dbg !17140
  %181 = load i32, i32* %7, align 4, !dbg !17141
  %182 = lshr i32 %181, 16, !dbg !17142
  %183 = trunc i32 %182 to i8, !dbg !17141
  %184 = load i8*, i8** %5, align 8, !dbg !17143
  %185 = getelementptr inbounds i8, i8* %184, i32 1, !dbg !17143
  store i8* %185, i8** %5, align 8, !dbg !17143
  store i8 %183, i8* %184, align 1, !dbg !17144
  %186 = load i32, i32* %7, align 4, !dbg !17145
  %187 = lshr i32 %186, 24, !dbg !17146
  %188 = trunc i32 %187 to i8, !dbg !17145
  %189 = load i8*, i8** %5, align 8, !dbg !17147
  %190 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !17147
  store i8* %190, i8** %5, align 8, !dbg !17147
  store i8 %188, i8* %189, align 1, !dbg !17148
  br label %160, !dbg !17149, !llvm.loop !17151

; <label>:191:                                    ; preds = %160
  br label %192

; <label>:192:                                    ; preds = %191, %158
  br label %193

; <label>:193:                                    ; preds = %192, %122
  ret void, !dbg !17152
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #8

declare i32 @seamless_send_position(i64, i32, i32, i32, i32, i64) #2

declare i32 @XCheckIfEvent(%struct._XDisplay*, %union._XEvent*, i32 (%struct._XDisplay*, %union._XEvent*, i8*)*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @sw_configurenotify_p(%struct._XDisplay*, %union._XEvent*, i8*) #0 !dbg !17153 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._XDisplay*, align 8
  %6 = alloca %union._XEvent*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct._sw_configurenotify_context*, align 8
  store %struct._XDisplay* %0, %struct._XDisplay** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._XDisplay** %5, metadata !17157, metadata !416), !dbg !17158
  store %union._XEvent* %1, %union._XEvent** %6, align 8
  call void @llvm.dbg.declare(metadata %union._XEvent** %6, metadata !17159, metadata !416), !dbg !17160
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !17161, metadata !416), !dbg !17162
  %9 = load %struct._XDisplay*, %struct._XDisplay** %5, align 8, !dbg !17163
  call void @llvm.dbg.declare(metadata %struct._sw_configurenotify_context** %8, metadata !17164, metadata !416), !dbg !17165
  %10 = load i8*, i8** %7, align 8, !dbg !17166
  %11 = bitcast i8* %10 to %struct._sw_configurenotify_context*, !dbg !17167
  store %struct._sw_configurenotify_context* %11, %struct._sw_configurenotify_context** %8, align 8, !dbg !17165
  %12 = load %union._XEvent*, %union._XEvent** %6, align 8, !dbg !17168
  %13 = bitcast %union._XEvent* %12 to %struct.XAnyEvent*, !dbg !17170
  %14 = getelementptr inbounds %struct.XAnyEvent, %struct.XAnyEvent* %13, i32 0, i32 0, !dbg !17171
  %15 = load i32, i32* %14, align 8, !dbg !17171
  %16 = icmp eq i32 %15, 22, !dbg !17172
  br i1 %16, label %17, label %36, !dbg !17173

; <label>:17:                                     ; preds = %3
  %18 = load %union._XEvent*, %union._XEvent** %6, align 8, !dbg !17174
  %19 = bitcast %union._XEvent* %18 to %struct.XConfigureEvent*, !dbg !17176
  %20 = getelementptr inbounds %struct.XConfigureEvent, %struct.XConfigureEvent* %19, i32 0, i32 5, !dbg !17177
  %21 = load i64, i64* %20, align 8, !dbg !17177
  %22 = load %struct._sw_configurenotify_context*, %struct._sw_configurenotify_context** %8, align 8, !dbg !17178
  %23 = getelementptr inbounds %struct._sw_configurenotify_context, %struct._sw_configurenotify_context* %22, i32 0, i32 0, !dbg !17179
  %24 = load i64, i64* %23, align 8, !dbg !17179
  %25 = icmp eq i64 %21, %24, !dbg !17180
  br i1 %25, label %26, label %36, !dbg !17181

; <label>:26:                                     ; preds = %17
  %27 = load %union._XEvent*, %union._XEvent** %6, align 8, !dbg !17182
  %28 = bitcast %union._XEvent* %27 to %struct.XAnyEvent*, !dbg !17183
  %29 = getelementptr inbounds %struct.XAnyEvent, %struct.XAnyEvent* %28, i32 0, i32 1, !dbg !17184
  %30 = load i64, i64* %29, align 8, !dbg !17184
  %31 = load %struct._sw_configurenotify_context*, %struct._sw_configurenotify_context** %8, align 8, !dbg !17185
  %32 = getelementptr inbounds %struct._sw_configurenotify_context, %struct._sw_configurenotify_context* %31, i32 0, i32 1, !dbg !17186
  %33 = load i64, i64* %32, align 8, !dbg !17186
  %34 = icmp uge i64 %30, %33, !dbg !17187
  br i1 %34, label %35, label %36, !dbg !17188

; <label>:35:                                     ; preds = %26
  store i32 1, i32* %4, align 4, !dbg !17190
  br label %37, !dbg !17190

; <label>:36:                                     ; preds = %26, %17, %3
  store i32 0, i32* %4, align 4, !dbg !17191
  br label %37, !dbg !17191

; <label>:37:                                     ; preds = %36, %35
  %38 = load i32, i32* %4, align 4, !dbg !17192
  ret i32 %38, !dbg !17192
}

declare i32 @usleep(i32) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!409, !410}
!llvm.ident = !{!411}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.1-4ubuntu3~16.04.2 (tags/RELEASE_391/rc2)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !42, globals: !248)
!1 = !DIFile(filename: "[inter]xwin.o.i", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!2 = !{!3, !15, !22, !31, !35}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "log_subject_t", file: !4, line: 46, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "utils.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14}
!6 = !DIEnumerator(name: "GUI", value: 0)
!7 = !DIEnumerator(name: "Keyboard", value: 1)
!8 = !DIEnumerator(name: "Clipboard", value: 2)
!9 = !DIEnumerator(name: "Sound", value: 3)
!10 = !DIEnumerator(name: "Protocol", value: 4)
!11 = !DIEnumerator(name: "Graphics", value: 5)
!12 = !DIEnumerator(name: "Core", value: 6)
!13 = !DIEnumerator(name: "SmartCard", value: 7)
!14 = !DIEnumerator(name: "Disk", value: 8)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "log_level_t", file: !4, line: 37, size: 32, align: 32, elements: !16)
!16 = !{!17, !18, !19, !20, !21}
!17 = !DIEnumerator(name: "Debug", value: 0)
!18 = !DIEnumerator(name: "Verbose", value: 1)
!19 = !DIEnumerator(name: "Warning", value: 2)
!20 = !DIEnumerator(name: "Error", value: 3)
!21 = !DIEnumerator(name: "Notice", value: 4)
!22 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RDP_INPUT_DEVICE", file: !23, line: 278, size: 32, align: 32, elements: !24)
!23 = !DIFile(filename: "constants.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!24 = !{!25, !26, !27, !28, !29, !30}
!25 = !DIEnumerator(name: "RDP_INPUT_SYNCHRONIZE", value: 0)
!26 = !DIEnumerator(name: "RDP_INPUT_CODEPOINT", value: 1)
!27 = !DIEnumerator(name: "RDP_INPUT_VIRTKEY", value: 2)
!28 = !DIEnumerator(name: "RDP_INPUT_SCANCODE", value: 4)
!29 = !DIEnumerator(name: "RDP_INPUT_MOUSE", value: 32769)
!30 = !DIEnumerator(name: "RDP_INPUT_MOUSEX", value: 32770)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RDP_SUPPRESS_STATUS", file: !23, line: 811, size: 32, align: 32, elements: !32)
!32 = !{!33, !34}
!33 = !DIEnumerator(name: "SUPPRESS_DISPLAY_UPDATES", value: 0)
!34 = !DIEnumerator(name: "ALLOW_DISPLAY_UPDATES", value: 1)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !36, line: 311, size: 32, align: 32, elements: !37)
!36 = !DIFile(filename: "types.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!37 = !{!38, !39, !40, !41}
!38 = !DIEnumerator(name: "Fixed", value: 0)
!39 = !DIEnumerator(name: "PercentageOfScreen", value: 1)
!40 = !DIEnumerator(name: "Workarea", value: 2)
!41 = !DIEnumerator(name: "Fullscreen", value: 3)
!42 = !{!43, !44, !46, !49, !187, !136, !45, !68, !188, !189, !190, !191, !192, !178, !194, !205, !170, !206, !81, !117, !213, !214, !215, !237, !239, !47, !240, !67, !241}
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "RD_BOOL", file: !36, line: 28, baseType: !45)
!45 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64, align: 64)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8", file: !36, line: 39, baseType: !48)
!48 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!49 = !DIDerivedType(tag: DW_TAG_typedef, name: "_XPrivDisplay", file: !50, line: 550, baseType: !51)
!50 = !DIFile(filename: "/usr/include/X11/Xlib.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!52 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 493, size: 2368, align: 64, elements: !53)
!53 = !{!54, !70, !73, !74, !75, !76, !77, !78, !82, !83, !84, !85, !91, !92, !93, !94, !95, !96, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !118, !121, !125, !126, !127, !128, !179, !180, !181, !182, !183, !184, !185, !186}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "ext_data", scope: !52, file: !50, line: 498, baseType: !55, size: 64, align: 64)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64, align: 64)
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "XExtData", file: !50, line: 155, baseType: !57)
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_XExtData", file: !50, line: 148, size: 256, align: 64, elements: !58)
!58 = !{!59, !60, !62, !66}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !57, file: !50, line: 149, baseType: !45, size: 32, align: 32)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !57, file: !50, line: 150, baseType: !61, size: 64, align: 64, offset: 64)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64, align: 64)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "free_private", scope: !57, file: !50, line: 151, baseType: !63, size: 64, align: 64, offset: 128)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64, align: 64)
!64 = !DISubroutineType(types: !65)
!65 = !{!45, !61}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !57, file: !50, line: 154, baseType: !67, size: 64, align: 64, offset: 192)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPointer", file: !50, line: 80, baseType: !68)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64, align: 64)
!69 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "private1", scope: !52, file: !50, line: 499, baseType: !71, size: 64, align: 64, offset: 64)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64, align: 64)
!72 = !DICompositeType(tag: DW_TAG_structure_type, name: "_XPrivate", file: !50, line: 490, flags: DIFlagFwdDecl)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !52, file: !50, line: 500, baseType: !45, size: 32, align: 32, offset: 128)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "private2", scope: !52, file: !50, line: 501, baseType: !45, size: 32, align: 32, offset: 160)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "proto_major_version", scope: !52, file: !50, line: 502, baseType: !45, size: 32, align: 32, offset: 192)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "proto_minor_version", scope: !52, file: !50, line: 503, baseType: !45, size: 32, align: 32, offset: 224)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !52, file: !50, line: 504, baseType: !68, size: 64, align: 64, offset: 256)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "private3", scope: !52, file: !50, line: 505, baseType: !79, size: 64, align: 64, offset: 320)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "XID", file: !80, line: 66, baseType: !81)
!80 = !DIFile(filename: "/usr/include/X11/X.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!81 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "private4", scope: !52, file: !50, line: 506, baseType: !79, size: 64, align: 64, offset: 384)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "private5", scope: !52, file: !50, line: 507, baseType: !79, size: 64, align: 64, offset: 448)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "private6", scope: !52, file: !50, line: 508, baseType: !45, size: 32, align: 32, offset: 512)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "resource_alloc", scope: !52, file: !50, line: 509, baseType: !86, size: 64, align: 64, offset: 576)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64, align: 64)
!87 = !DISubroutineType(types: !88)
!88 = !{!79, !89}
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64, align: 64)
!90 = !DICompositeType(tag: DW_TAG_structure_type, name: "_XDisplay", file: !50, line: 255, flags: DIFlagFwdDecl)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "byte_order", scope: !52, file: !50, line: 512, baseType: !45, size: 32, align: 32, offset: 640)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap_unit", scope: !52, file: !50, line: 513, baseType: !45, size: 32, align: 32, offset: 672)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap_pad", scope: !52, file: !50, line: 514, baseType: !45, size: 32, align: 32, offset: 704)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap_bit_order", scope: !52, file: !50, line: 515, baseType: !45, size: 32, align: 32, offset: 736)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "nformats", scope: !52, file: !50, line: 516, baseType: !45, size: 32, align: 32, offset: 768)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "pixmap_format", scope: !52, file: !50, line: 517, baseType: !97, size: 64, align: 64, offset: 832)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64, align: 64)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScreenFormat", file: !50, line: 285, baseType: !99)
!99 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 280, size: 192, align: 64, elements: !100)
!100 = !{!101, !102, !103, !104}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "ext_data", scope: !99, file: !50, line: 281, baseType: !55, size: 64, align: 64)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !99, file: !50, line: 282, baseType: !45, size: 32, align: 32, offset: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_pixel", scope: !99, file: !50, line: 283, baseType: !45, size: 32, align: 32, offset: 96)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "scanline_pad", scope: !99, file: !50, line: 284, baseType: !45, size: 32, align: 32, offset: 128)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "private8", scope: !52, file: !50, line: 518, baseType: !45, size: 32, align: 32, offset: 896)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !52, file: !50, line: 519, baseType: !45, size: 32, align: 32, offset: 928)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "private9", scope: !52, file: !50, line: 520, baseType: !71, size: 64, align: 64, offset: 960)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "private10", scope: !52, file: !50, line: 520, baseType: !71, size: 64, align: 64, offset: 1024)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !52, file: !50, line: 521, baseType: !45, size: 32, align: 32, offset: 1088)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "last_request_read", scope: !52, file: !50, line: 522, baseType: !81, size: 64, align: 64, offset: 1152)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !52, file: !50, line: 523, baseType: !81, size: 64, align: 64, offset: 1216)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "private11", scope: !52, file: !50, line: 524, baseType: !67, size: 64, align: 64, offset: 1280)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "private12", scope: !52, file: !50, line: 525, baseType: !67, size: 64, align: 64, offset: 1344)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "private13", scope: !52, file: !50, line: 526, baseType: !67, size: 64, align: 64, offset: 1408)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "private14", scope: !52, file: !50, line: 527, baseType: !67, size: 64, align: 64, offset: 1472)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "max_request_size", scope: !52, file: !50, line: 528, baseType: !117, size: 32, align: 32, offset: 1536)
!117 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !52, file: !50, line: 529, baseType: !119, size: 64, align: 64, offset: 1600)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DICompositeType(tag: DW_TAG_structure_type, name: "_XrmHashBucketRec", file: !50, line: 491, flags: DIFlagFwdDecl)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "private15", scope: !52, file: !50, line: 530, baseType: !122, size: 64, align: 64, offset: 1664)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64)
!123 = !DISubroutineType(types: !124)
!124 = !{!45, !89}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "display_name", scope: !52, file: !50, line: 533, baseType: !68, size: 64, align: 64, offset: 1728)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "default_screen", scope: !52, file: !50, line: 534, baseType: !45, size: 32, align: 32, offset: 1792)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "nscreens", scope: !52, file: !50, line: 535, baseType: !45, size: 32, align: 32, offset: 1824)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "screens", scope: !52, file: !50, line: 536, baseType: !129, size: 64, align: 64, offset: 1856)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64, align: 64)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "Screen", file: !50, line: 275, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 257, size: 1024, align: 64, elements: !132)
!132 = !{!133, !134, !135, !137, !138, !139, !140, !141, !142, !163, !164, !165, !169, !171, !172, !173, !174, !175, !176, !177}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "ext_data", scope: !131, file: !50, line: 258, baseType: !55, size: 64, align: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !131, file: !50, line: 259, baseType: !89, size: 64, align: 64, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !131, file: !50, line: 260, baseType: !136, size: 64, align: 64, offset: 128)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "Window", file: !80, line: 96, baseType: !79)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !131, file: !50, line: 261, baseType: !45, size: 32, align: 32, offset: 192)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !131, file: !50, line: 261, baseType: !45, size: 32, align: 32, offset: 224)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "mwidth", scope: !131, file: !50, line: 262, baseType: !45, size: 32, align: 32, offset: 256)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "mheight", scope: !131, file: !50, line: 262, baseType: !45, size: 32, align: 32, offset: 288)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "ndepths", scope: !131, file: !50, line: 263, baseType: !45, size: 32, align: 32, offset: 320)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !131, file: !50, line: 264, baseType: !143, size: 64, align: 64, offset: 384)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64, align: 64)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "Depth", file: !50, line: 247, baseType: !145)
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 243, size: 128, align: 64, elements: !146)
!146 = !{!147, !148, !149}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !145, file: !50, line: 244, baseType: !45, size: 32, align: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nvisuals", scope: !145, file: !50, line: 245, baseType: !45, size: 32, align: 32, offset: 32)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "visuals", scope: !145, file: !50, line: 246, baseType: !150, size: 64, align: 64, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64, align: 64)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "Visual", file: !50, line: 238, baseType: !152)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 227, size: 448, align: 64, elements: !153)
!153 = !{!154, !155, !157, !158, !159, !160, !161, !162}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "ext_data", scope: !152, file: !50, line: 228, baseType: !55, size: 64, align: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "visualid", scope: !152, file: !50, line: 229, baseType: !156, size: 64, align: 64, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "VisualID", file: !80, line: 76, baseType: !81)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !152, file: !50, line: 233, baseType: !45, size: 32, align: 32, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "red_mask", scope: !152, file: !50, line: 235, baseType: !81, size: 64, align: 64, offset: 192)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "green_mask", scope: !152, file: !50, line: 235, baseType: !81, size: 64, align: 64, offset: 256)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "blue_mask", scope: !152, file: !50, line: 235, baseType: !81, size: 64, align: 64, offset: 320)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_rgb", scope: !152, file: !50, line: 236, baseType: !45, size: 32, align: 32, offset: 384)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "map_entries", scope: !152, file: !50, line: 237, baseType: !45, size: 32, align: 32, offset: 416)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "root_depth", scope: !131, file: !50, line: 265, baseType: !45, size: 32, align: 32, offset: 448)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "root_visual", scope: !131, file: !50, line: 266, baseType: !150, size: 64, align: 64, offset: 512)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "default_gc", scope: !131, file: !50, line: 267, baseType: !166, size: 64, align: 64, offset: 576)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "GC", file: !50, line: 222, baseType: !167)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64, align: 64)
!168 = !DICompositeType(tag: DW_TAG_structure_type, name: "_XGC", file: !50, line: 214, flags: DIFlagFwdDecl)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "cmap", scope: !131, file: !50, line: 268, baseType: !170, size: 64, align: 64, offset: 640)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "Colormap", file: !80, line: 104, baseType: !79)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "white_pixel", scope: !131, file: !50, line: 269, baseType: !81, size: 64, align: 64, offset: 704)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "black_pixel", scope: !131, file: !50, line: 270, baseType: !81, size: 64, align: 64, offset: 768)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "max_maps", scope: !131, file: !50, line: 271, baseType: !45, size: 32, align: 32, offset: 832)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "min_maps", scope: !131, file: !50, line: 271, baseType: !45, size: 32, align: 32, offset: 864)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "backing_store", scope: !131, file: !50, line: 272, baseType: !45, size: 32, align: 32, offset: 896)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "save_unders", scope: !131, file: !50, line: 273, baseType: !45, size: 32, align: 32, offset: 928)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "root_input_mask", scope: !131, file: !50, line: 274, baseType: !178, size: 64, align: 64, offset: 960)
!178 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "motion_buffer", scope: !52, file: !50, line: 537, baseType: !81, size: 64, align: 64, offset: 1920)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "private16", scope: !52, file: !50, line: 538, baseType: !81, size: 64, align: 64, offset: 1984)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "min_keycode", scope: !52, file: !50, line: 539, baseType: !45, size: 32, align: 32, offset: 2048)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "max_keycode", scope: !52, file: !50, line: 540, baseType: !45, size: 32, align: 32, offset: 2080)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "private17", scope: !52, file: !50, line: 541, baseType: !67, size: 64, align: 64, offset: 2112)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "private18", scope: !52, file: !50, line: 542, baseType: !67, size: 64, align: 64, offset: 2176)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "private19", scope: !52, file: !50, line: 543, baseType: !45, size: 32, align: 32, offset: 2240)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "xdefaults", scope: !52, file: !50, line: 544, baseType: !68, size: 64, align: 64, offset: 2304)
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "Cursor", file: !80, line: 103, baseType: !79)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "RD_HBITMAP", file: !36, line: 46, baseType: !43)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pixmap", file: !80, line: 102, baseType: !79)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "RD_HGLYPH", file: !36, line: 47, baseType: !43)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "RD_HCURSOR", file: !36, line: 49, baseType: !43)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64, align: 64)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32", file: !36, line: 43, baseType: !117)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64, align: 64)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "XColor", file: !50, line: 415, baseType: !196)
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 410, size: 128, align: 64, elements: !197)
!197 = !{!198, !199, !201, !202, !203, !204}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "pixel", scope: !196, file: !50, line: 411, baseType: !81, size: 64, align: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !196, file: !50, line: 412, baseType: !200, size: 16, align: 16, offset: 64)
!200 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !196, file: !50, line: 412, baseType: !200, size: 16, align: 16, offset: 80)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !196, file: !50, line: 412, baseType: !200, size: 16, align: 16, offset: 96)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !196, file: !50, line: 413, baseType: !69, size: 8, align: 8, offset: 112)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !196, file: !50, line: 414, baseType: !69, size: 8, align: 8, offset: 120)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "RD_HCOLOURMAP", file: !36, line: 48, baseType: !43)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64, align: 64)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPoint", file: !50, line: 428, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 426, size: 32, align: 16, elements: !209)
!209 = !{!210, !212}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !208, file: !50, line: 427, baseType: !211, size: 16, align: 16)
!211 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !208, file: !50, line: 427, baseType: !211, size: 16, align: 16, offset: 16)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64, align: 64)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atom", file: !80, line: 74, baseType: !81)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "XKeyEvent", file: !50, line: 571, baseType: !217)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 557, size: 768, align: 64, elements: !218)
!218 = !{!219, !220, !221, !222, !225, !226, !227, !228, !230, !231, !232, !233, !234, !235, !236}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !217, file: !50, line: 558, baseType: !45, size: 32, align: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !217, file: !50, line: 559, baseType: !81, size: 64, align: 64, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !217, file: !50, line: 560, baseType: !45, size: 32, align: 32, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !217, file: !50, line: 561, baseType: !223, size: 64, align: 64, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64, align: 64)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "Display", file: !50, line: 487, baseType: !90)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !217, file: !50, line: 562, baseType: !136, size: 64, align: 64, offset: 256)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !217, file: !50, line: 563, baseType: !136, size: 64, align: 64, offset: 320)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "subwindow", scope: !217, file: !50, line: 564, baseType: !136, size: 64, align: 64, offset: 384)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !217, file: !50, line: 565, baseType: !229, size: 64, align: 64, offset: 448)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "Time", file: !80, line: 77, baseType: !81)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !217, file: !50, line: 566, baseType: !45, size: 32, align: 32, offset: 512)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !217, file: !50, line: 566, baseType: !45, size: 32, align: 32, offset: 544)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "x_root", scope: !217, file: !50, line: 567, baseType: !45, size: 32, align: 32, offset: 576)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "y_root", scope: !217, file: !50, line: 567, baseType: !45, size: 32, align: 32, offset: 608)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !217, file: !50, line: 568, baseType: !117, size: 32, align: 32, offset: 640)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !217, file: !50, line: 569, baseType: !117, size: 32, align: 32, offset: 672)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "same_screen", scope: !217, file: !50, line: 570, baseType: !45, size: 32, align: 32, offset: 704)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !238, line: 54, baseType: !178)
!238 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16", file: !36, line: 41, baseType: !200)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64, align: 64)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sw_configurenotify_context", file: !243, line: 574, baseType: !244)
!243 = !DIFile(filename: "xwin.c", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sw_configurenotify_context", file: !243, line: 570, size: 128, align: 64, elements: !245)
!245 = !{!246, !247}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !244, file: !243, line: 572, baseType: !136, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !244, file: !243, line: 573, baseType: !81, size: 64, align: 64, offset: 64)
!248 = !{!249, !250, !251, !252, !257, !258, !259, !260, !265, !266, !267, !268, !269, !270, !271, !272, !273, !281, !282, !283, !284, !288, !292, !301, !302, !303, !304, !305, !306, !307, !308, !309, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !338, !339, !340, !341, !342, !343, !344, !348, !349, !350, !351, !352, !359, !397, !398, !399, !403, !407, !408}
!249 = distinct !DIGlobalVariable(name: "g_dynamic_session_resize", scope: !0, file: !243, line: 80, type: !44, isLocal: false, isDefinition: true, variable: i32* @g_dynamic_session_resize)
!250 = distinct !DIGlobalVariable(name: "g_seamless_active", scope: !0, file: !243, line: 119, type: !44, isLocal: false, isDefinition: true, variable: i32* @g_seamless_active)
!251 = distinct !DIGlobalVariable(name: "g_enable_compose", scope: !0, file: !243, line: 126, type: !44, isLocal: false, isDefinition: true, variable: i32* @g_enable_compose)
!252 = distinct !DIGlobalVariable(name: "windowed_x", scope: !253, file: !243, line: 2311, type: !193, isLocal: true, isDefinition: true, variable: i32* @xwin_toggle_fullscreen.windowed_x)
!253 = distinct !DISubprogram(name: "xwin_toggle_fullscreen", scope: !243, file: !243, line: 2304, type: !254, isLocal: false, isDefinition: true, scopeLine: 2305, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!254 = !DISubroutineType(types: !255)
!255 = !{null}
!256 = !{}
!257 = distinct !DIGlobalVariable(name: "windowed_y", scope: !253, file: !243, line: 2312, type: !193, isLocal: true, isDefinition: true, variable: i32* @xwin_toggle_fullscreen.windowed_y)
!258 = distinct !DIGlobalVariable(name: "windowed_height", scope: !253, file: !243, line: 2313, type: !193, isLocal: true, isDefinition: true, variable: i32* @xwin_toggle_fullscreen.windowed_height)
!259 = distinct !DIGlobalVariable(name: "windowed_width", scope: !253, file: !243, line: 2314, type: !193, isLocal: true, isDefinition: true, variable: i32* @xwin_toggle_fullscreen.windowed_width)
!260 = distinct !DIGlobalVariable(name: "g_wait_for_deactivate_ts", scope: !0, file: !243, line: 2958, type: !261, isLocal: false, isDefinition: true, variable: i64* @g_wait_for_deactivate_ts)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !262, line: 75, baseType: !263)
!262 = !DIFile(filename: "/usr/include/time.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !264, line: 139, baseType: !178)
!264 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!265 = distinct !DIGlobalVariable(name: "g_display", scope: !0, file: !243, line: 74, type: !223, isLocal: false, isDefinition: true, variable: %struct._XDisplay** @g_display)
!266 = distinct !DIGlobalVariable(name: "g_last_gesturetime", scope: !0, file: !243, line: 75, type: !229, isLocal: false, isDefinition: true, variable: i64* @g_last_gesturetime)
!267 = distinct !DIGlobalVariable(name: "g_x_socket", scope: !0, file: !243, line: 76, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_x_socket)
!268 = distinct !DIGlobalVariable(name: "g_screen", scope: !0, file: !243, line: 77, type: !129, isLocal: true, isDefinition: true, variable: %struct.Screen** @g_screen)
!269 = distinct !DIGlobalVariable(name: "g_wnd", scope: !0, file: !243, line: 78, type: !136, isLocal: false, isDefinition: true, variable: i64* @g_wnd)
!270 = distinct !DIGlobalVariable(name: "g_window_width", scope: !0, file: !243, line: 83, type: !193, isLocal: true, isDefinition: true, variable: i32* @g_window_width)
!271 = distinct !DIGlobalVariable(name: "g_window_height", scope: !0, file: !243, line: 84, type: !193, isLocal: true, isDefinition: true, variable: i32* @g_window_height)
!272 = distinct !DIGlobalVariable(name: "g_Unobscured", scope: !0, file: !243, line: 127, type: !44, isLocal: false, isDefinition: true, variable: i32* @g_Unobscured)
!273 = distinct !DIGlobalVariable(name: "g_clip_rectangle", scope: !0, file: !243, line: 131, type: !274, isLocal: true, isDefinition: true, variable: %struct.XRectangle* @g_clip_rectangle)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "XRectangle", file: !50, line: 433, baseType: !275)
!275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 430, size: 64, align: 16, elements: !276)
!276 = !{!277, !278, !279, !280}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !275, file: !50, line: 431, baseType: !211, size: 16, align: 16)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !275, file: !50, line: 431, baseType: !211, size: 16, align: 16, offset: 16)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !275, file: !50, line: 432, baseType: !200, size: 16, align: 16, offset: 32)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !275, file: !50, line: 432, baseType: !200, size: 16, align: 16, offset: 48)
!281 = distinct !DIGlobalVariable(name: "g_visual", scope: !0, file: !243, line: 132, type: !150, isLocal: true, isDefinition: true, variable: %struct.Visual** @g_visual)
!282 = distinct !DIGlobalVariable(name: "g_depth", scope: !0, file: !243, line: 136, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_depth)
!283 = distinct !DIGlobalVariable(name: "g_bpp", scope: !0, file: !243, line: 140, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_bpp)
!284 = distinct !DIGlobalVariable(name: "g_IM", scope: !0, file: !243, line: 141, type: !285, isLocal: true, isDefinition: true, variable: %struct._XIM** @g_IM)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "XIM", file: !50, line: 1145, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64, align: 64)
!287 = !DICompositeType(tag: DW_TAG_structure_type, name: "_XIM", file: !50, line: 1145, flags: DIFlagFwdDecl)
!288 = distinct !DIGlobalVariable(name: "g_IC", scope: !0, file: !243, line: 142, type: !289, isLocal: true, isDefinition: true, variable: %struct._XIC** @g_IC)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "XIC", file: !50, line: 1146, baseType: !290)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!291 = !DICompositeType(tag: DW_TAG_structure_type, name: "_XIC", file: !50, line: 1146, flags: DIFlagFwdDecl)
!292 = distinct !DIGlobalVariable(name: "g_mod_map", scope: !0, file: !243, line: 143, type: !293, isLocal: true, isDefinition: true, variable: %struct.XModifierKeymap** @g_mod_map)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64, align: 64)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "XModifierKeymap", file: !50, line: 478, baseType: !295)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 475, size: 128, align: 64, elements: !296)
!296 = !{!297, !298}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "max_keypermod", scope: !295, file: !50, line: 476, baseType: !45, size: 32, align: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "modifiermap", scope: !295, file: !50, line: 477, baseType: !299, size: 64, align: 64, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64, align: 64)
!300 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyCode", file: !80, line: 108, baseType: !48)
!301 = distinct !DIGlobalVariable(name: "g_current_cursor", scope: !0, file: !243, line: 147, type: !187, isLocal: true, isDefinition: true, variable: i64* @g_current_cursor)
!302 = distinct !DIGlobalVariable(name: "g_protocol_atom", scope: !0, file: !243, line: 149, type: !214, isLocal: true, isDefinition: true, variable: i64* @g_protocol_atom)
!303 = distinct !DIGlobalVariable(name: "g_kill_atom", scope: !0, file: !243, line: 149, type: !214, isLocal: true, isDefinition: true, variable: i64* @g_kill_atom)
!304 = distinct !DIGlobalVariable(name: "g_focused", scope: !0, file: !243, line: 154, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_focused)
!305 = distinct !DIGlobalVariable(name: "g_mouse_in_wnd", scope: !0, file: !243, line: 155, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_mouse_in_wnd)
!306 = distinct !DIGlobalVariable(name: "g_host_be", scope: !0, file: !243, line: 176, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_host_be)
!307 = distinct !DIGlobalVariable(name: "g_xserver_be", scope: !0, file: !243, line: 177, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_xserver_be)
!308 = distinct !DIGlobalVariable(name: "g_xcolmap", scope: !0, file: !243, line: 294, type: !170, isLocal: true, isDefinition: true, variable: i64* @g_xcolmap)
!309 = distinct !DIGlobalVariable(name: "g_old_error_handler", scope: !0, file: !243, line: 1836, type: !310, isLocal: true, isDefinition: true, variable: i32 (%struct._XDisplay*, %struct.XErrorEvent*)** @g_old_error_handler)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "XErrorHandler", file: !50, line: 1843, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64, align: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!45, !223, !314}
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64, align: 64)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "XErrorEvent", file: !50, line: 932, baseType: !316)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 924, size: 320, align: 64, elements: !317)
!317 = !{!318, !319, !320, !321, !322, !323, !324}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !316, file: !50, line: 925, baseType: !45, size: 32, align: 32)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !316, file: !50, line: 926, baseType: !223, size: 64, align: 64, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "resourceid", scope: !316, file: !50, line: 927, baseType: !79, size: 64, align: 64, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !316, file: !50, line: 928, baseType: !81, size: 64, align: 64, offset: 192)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !316, file: !50, line: 929, baseType: !48, size: 8, align: 8, offset: 256)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "request_code", scope: !316, file: !50, line: 930, baseType: !48, size: 8, align: 8, offset: 264)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "minor_code", scope: !316, file: !50, line: 931, baseType: !48, size: 8, align: 8, offset: 272)
!325 = distinct !DIGlobalVariable(name: "g_error_expected", scope: !0, file: !243, line: 1837, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_error_expected)
!326 = distinct !DIGlobalVariable(name: "g_compatible_arch", scope: !0, file: !243, line: 162, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_compatible_arch)
!327 = distinct !DIGlobalVariable(name: "g_red_shift_r", scope: !0, file: !243, line: 178, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_red_shift_r)
!328 = distinct !DIGlobalVariable(name: "g_red_shift_l", scope: !0, file: !243, line: 179, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_red_shift_l)
!329 = distinct !DIGlobalVariable(name: "g_green_shift_r", scope: !0, file: !243, line: 178, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_green_shift_r)
!330 = distinct !DIGlobalVariable(name: "g_green_shift_l", scope: !0, file: !243, line: 179, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_green_shift_l)
!331 = distinct !DIGlobalVariable(name: "g_blue_shift_r", scope: !0, file: !243, line: 178, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_blue_shift_r)
!332 = distinct !DIGlobalVariable(name: "g_blue_shift_l", scope: !0, file: !243, line: 179, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_blue_shift_l)
!333 = distinct !DIGlobalVariable(name: "g_no_translate_image", scope: !0, file: !243, line: 173, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_no_translate_image)
!334 = distinct !DIGlobalVariable(name: "g_pointer_log_to_phys_map", scope: !0, file: !243, line: 146, type: !335, isLocal: true, isDefinition: true, variable: [32 x i8]* @g_pointer_log_to_phys_map)
!335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 256, align: 8, elements: !336)
!336 = !{!337}
!337 = !DISubrange(count: 32)
!338 = distinct !DIGlobalVariable(name: "g_using_full_workarea", scope: !0, file: !243, line: 189, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_using_full_workarea)
!339 = distinct !DIGlobalVariable(name: "g_null_cursor", scope: !0, file: !243, line: 148, type: !191, isLocal: true, isDefinition: true, variable: i8** @g_null_cursor)
!340 = distinct !DIGlobalVariable(name: "g_gc", scope: !0, file: !243, line: 128, type: !166, isLocal: true, isDefinition: true, variable: %struct._XGC** @g_gc)
!341 = distinct !DIGlobalVariable(name: "g_create_bitmap_gc", scope: !0, file: !243, line: 129, type: !166, isLocal: true, isDefinition: true, variable: %struct._XGC** @g_create_bitmap_gc)
!342 = distinct !DIGlobalVariable(name: "g_backstore", scope: !0, file: !243, line: 183, type: !189, isLocal: true, isDefinition: true, variable: i64* @g_backstore)
!343 = distinct !DIGlobalVariable(name: "g_seamless_broken_restack", scope: !0, file: !243, line: 121, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_seamless_broken_restack)
!344 = distinct !DIGlobalVariable(name: "is_g_wnd_mapped", scope: !345, file: !243, line: 2524, type: !44, isLocal: true, isDefinition: true, variable: i32* @xwin_process_events.is_g_wnd_mapped)
!345 = distinct !DISubprogram(name: "xwin_process_events", scope: !243, file: !243, line: 2515, type: !346, isLocal: true, isDefinition: true, scopeLine: 2516, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!346 = !DISubroutineType(types: !347)
!347 = !{!45}
!348 = distinct !DIGlobalVariable(name: "g_moving_wnd", scope: !0, file: !243, line: 186, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_moving_wnd)
!349 = distinct !DIGlobalVariable(name: "g_move_x_offset", scope: !0, file: !243, line: 187, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_move_x_offset)
!350 = distinct !DIGlobalVariable(name: "g_move_y_offset", scope: !0, file: !243, line: 188, type: !45, isLocal: true, isDefinition: true, variable: i32* @g_move_y_offset)
!351 = distinct !DIGlobalVariable(name: "g_seamless_focused", scope: !0, file: !243, line: 117, type: !81, isLocal: true, isDefinition: true, variable: i64* @g_seamless_focused)
!352 = distinct !DIGlobalVariable(name: "g_resize_timer", scope: !0, file: !243, line: 72, type: !353, isLocal: true, isDefinition: true, variable: %struct.timeval* @g_resize_timer)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !354, line: 30, size: 128, align: 64, elements: !355)
!354 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!355 = !{!356, !357}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !353, file: !354, line: 32, baseType: !263, size: 64, align: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !353, file: !354, line: 33, baseType: !358, size: 64, align: 64, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !264, line: 141, baseType: !178)
!359 = distinct !DIGlobalVariable(name: "g_seamless_windows", scope: !0, file: !243, line: 116, type: !360, isLocal: true, isDefinition: true, variable: %struct._seamless_window** @g_seamless_windows)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64, align: 64)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "seamless_window", file: !243, line: 115, baseType: !362)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_seamless_window", file: !243, line: 93, size: 33600, align: 64, elements: !363)
!363 = !{!364, !365, !366, !367, !375, !376, !377, !378, !379, !380, !381, !383, !384, !385, !386, !387, !388, !389, !390, !391, !395}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "wnd", scope: !362, file: !243, line: 95, baseType: !136, size: 64, align: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !362, file: !243, line: 96, baseType: !81, size: 64, align: 64, offset: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "behind", scope: !362, file: !243, line: 97, baseType: !81, size: 64, align: 64, offset: 128)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !362, file: !243, line: 98, baseType: !368, size: 64, align: 64, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64, align: 64)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "seamless_group", file: !243, line: 92, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_seamless_group", file: !243, line: 87, size: 192, align: 64, elements: !371)
!371 = !{!372, !373, !374}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "wnd", scope: !370, file: !243, line: 89, baseType: !136, size: 64, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !370, file: !243, line: 90, baseType: !81, size: 64, align: 64, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !370, file: !243, line: 91, baseType: !117, size: 32, align: 32, offset: 128)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "xoffset", scope: !362, file: !243, line: 99, baseType: !45, size: 32, align: 32, offset: 256)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "yoffset", scope: !362, file: !243, line: 99, baseType: !45, size: 32, align: 32, offset: 288)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !362, file: !243, line: 100, baseType: !45, size: 32, align: 32, offset: 320)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !362, file: !243, line: 100, baseType: !45, size: 32, align: 32, offset: 352)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !362, file: !243, line: 101, baseType: !45, size: 32, align: 32, offset: 384)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "desktop", scope: !362, file: !243, line: 102, baseType: !117, size: 32, align: 32, offset: 416)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "position_timer", scope: !362, file: !243, line: 103, baseType: !382, size: 64, align: 64, offset: 448)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64, align: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "outstanding_position", scope: !362, file: !243, line: 105, baseType: !44, size: 32, align: 32, offset: 512)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "outpos_serial", scope: !362, file: !243, line: 106, baseType: !117, size: 32, align: 32, offset: 544)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "outpos_xoffset", scope: !362, file: !243, line: 107, baseType: !45, size: 32, align: 32, offset: 576)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "outpos_yoffset", scope: !362, file: !243, line: 107, baseType: !45, size: 32, align: 32, offset: 608)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "outpos_width", scope: !362, file: !243, line: 108, baseType: !45, size: 32, align: 32, offset: 640)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "outpos_height", scope: !362, file: !243, line: 108, baseType: !45, size: 32, align: 32, offset: 672)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "icon_size", scope: !362, file: !243, line: 110, baseType: !117, size: 32, align: 32, offset: 704)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "icon_offset", scope: !362, file: !243, line: 111, baseType: !117, size: 32, align: 32, offset: 736)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "icon_buffer", scope: !362, file: !243, line: 112, baseType: !392, size: 32768, align: 8, offset: 768)
!392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 32768, align: 8, elements: !393)
!393 = !{!394}
!394 = !DISubrange(count: 4096)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !362, file: !243, line: 114, baseType: !396, size: 64, align: 64, offset: 33536)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64, align: 64)
!397 = distinct !DIGlobalVariable(name: "g_create_glyph_gc", scope: !0, file: !243, line: 130, type: !166, isLocal: true, isDefinition: true, variable: %struct._XGC** @g_create_glyph_gc)
!398 = distinct !DIGlobalVariable(name: "g_colmap", scope: !0, file: !243, line: 295, type: !192, isLocal: true, isDefinition: true, variable: i32** @g_colmap)
!399 = distinct !DIGlobalVariable(name: "rop2_map", scope: !0, file: !243, line: 301, type: !400, isLocal: true, isDefinition: true, variable: [16 x i32]* @rop2_map)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 512, align: 32, elements: !401)
!401 = !{!402}
!402 = !DISubrange(count: 16)
!403 = distinct !DIGlobalVariable(name: "hatch_patterns", scope: !0, file: !243, line: 3698, type: !404, isLocal: true, isDefinition: true, variable: [48 x i8]* @hatch_patterns)
!404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 384, align: 8, elements: !405)
!405 = !{!406}
!406 = !DISubrange(count: 48)
!407 = distinct !DIGlobalVariable(name: "g_seamless_started", scope: !0, file: !243, line: 118, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_seamless_started)
!408 = distinct !DIGlobalVariable(name: "g_seamless_hidden", scope: !0, file: !243, line: 120, type: !44, isLocal: true, isDefinition: true, variable: i32* @g_seamless_hidden)
!409 = !{i32 2, !"Dwarf Version", i32 4}
!410 = !{i32 2, !"Debug Info Version", i32 3}
!411 = !{!"clang version 3.9.1-4ubuntu3~16.04.2 (tags/RELEASE_391/rc2)"}
!412 = distinct !DISubprogram(name: "get_key_state", scope: !243, file: !243, line: 1593, type: !413, isLocal: false, isDefinition: true, scopeLine: 1594, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!413 = !DISubroutineType(types: !414)
!414 = !{!44, !117, !193}
!415 = !DILocalVariable(name: "state", arg: 1, scope: !412, file: !243, line: 1593, type: !117)
!416 = !DIExpression()
!417 = !DILocation(line: 1593, column: 28, scope: !412)
!418 = !DILocalVariable(name: "keysym", arg: 2, scope: !412, file: !243, line: 1593, type: !193)
!419 = !DILocation(line: 1593, column: 42, scope: !412)
!420 = !DILocalVariable(name: "modifierpos", scope: !412, file: !243, line: 1595, type: !45)
!421 = !DILocation(line: 1595, column: 6, scope: !412)
!422 = !DILocalVariable(name: "key", scope: !412, file: !243, line: 1595, type: !45)
!423 = !DILocation(line: 1595, column: 19, scope: !412)
!424 = !DILocalVariable(name: "keysymMask", scope: !412, file: !243, line: 1595, type: !45)
!425 = !DILocation(line: 1595, column: 24, scope: !412)
!426 = !DILocalVariable(name: "offset", scope: !412, file: !243, line: 1596, type: !45)
!427 = !DILocation(line: 1596, column: 6, scope: !412)
!428 = !DILocalVariable(name: "keycode", scope: !412, file: !243, line: 1598, type: !300)
!429 = !DILocation(line: 1598, column: 10, scope: !412)
!430 = !DILocation(line: 1598, column: 37, scope: !412)
!431 = !DILocation(line: 1598, column: 48, scope: !412)
!432 = !DILocation(line: 1598, column: 20, scope: !412)
!433 = !DILocation(line: 1600, column: 6, scope: !434)
!434 = distinct !DILexicalBlock(scope: !412, file: !243, line: 1600, column: 6)
!435 = !DILocation(line: 1600, column: 14, scope: !434)
!436 = !DILocation(line: 1600, column: 6, scope: !412)
!437 = !DILocation(line: 1601, column: 3, scope: !434)
!438 = !DILocation(line: 1603, column: 19, scope: !439)
!439 = distinct !DILexicalBlock(scope: !412, file: !243, line: 1603, column: 2)
!440 = !DILocation(line: 1603, column: 7, scope: !439)
!441 = !DILocation(line: 1603, column: 24, scope: !442)
!442 = !DILexicalBlockFile(scope: !443, file: !243, discriminator: 1)
!443 = distinct !DILexicalBlock(scope: !439, file: !243, line: 1603, column: 2)
!444 = !DILocation(line: 1603, column: 36, scope: !442)
!445 = !DILocation(line: 1603, column: 2, scope: !442)
!446 = !DILocation(line: 1605, column: 12, scope: !447)
!447 = distinct !DILexicalBlock(scope: !443, file: !243, line: 1604, column: 2)
!448 = !DILocation(line: 1605, column: 23, scope: !447)
!449 = !DILocation(line: 1605, column: 39, scope: !447)
!450 = !DILocation(line: 1605, column: 37, scope: !447)
!451 = !DILocation(line: 1605, column: 10, scope: !447)
!452 = !DILocation(line: 1607, column: 12, scope: !453)
!453 = distinct !DILexicalBlock(scope: !447, file: !243, line: 1607, column: 3)
!454 = !DILocation(line: 1607, column: 8, scope: !453)
!455 = !DILocation(line: 1607, column: 17, scope: !456)
!456 = !DILexicalBlockFile(scope: !457, file: !243, discriminator: 1)
!457 = distinct !DILexicalBlock(scope: !453, file: !243, line: 1607, column: 3)
!458 = !DILocation(line: 1607, column: 23, scope: !456)
!459 = !DILocation(line: 1607, column: 34, scope: !456)
!460 = !DILocation(line: 1607, column: 21, scope: !456)
!461 = !DILocation(line: 1607, column: 3, scope: !456)
!462 = !DILocation(line: 1609, column: 31, scope: !463)
!463 = distinct !DILexicalBlock(scope: !464, file: !243, line: 1609, column: 8)
!464 = distinct !DILexicalBlock(scope: !457, file: !243, line: 1608, column: 3)
!465 = !DILocation(line: 1609, column: 40, scope: !463)
!466 = !DILocation(line: 1609, column: 38, scope: !463)
!467 = !DILocation(line: 1609, column: 8, scope: !463)
!468 = !DILocation(line: 1609, column: 19, scope: !463)
!469 = !DILocation(line: 1609, column: 48, scope: !463)
!470 = !DILocation(line: 1609, column: 45, scope: !463)
!471 = !DILocation(line: 1609, column: 8, scope: !464)
!472 = !DILocation(line: 1610, column: 24, scope: !463)
!473 = !DILocation(line: 1610, column: 21, scope: !463)
!474 = !DILocation(line: 1610, column: 16, scope: !463)
!475 = !DILocation(line: 1610, column: 5, scope: !463)
!476 = !DILocation(line: 1611, column: 3, scope: !464)
!477 = !DILocation(line: 1607, column: 52, scope: !478)
!478 = !DILexicalBlockFile(scope: !457, file: !243, discriminator: 2)
!479 = !DILocation(line: 1607, column: 3, scope: !478)
!480 = distinct !{!480, !481}
!481 = !DILocation(line: 1607, column: 3, scope: !447)
!482 = !DILocation(line: 1612, column: 2, scope: !447)
!483 = !DILocation(line: 1603, column: 52, scope: !484)
!484 = !DILexicalBlockFile(scope: !443, file: !243, discriminator: 2)
!485 = !DILocation(line: 1603, column: 2, scope: !484)
!486 = distinct !{!486, !487}
!487 = !DILocation(line: 1603, column: 2, scope: !412)
!488 = !DILocation(line: 1614, column: 10, scope: !412)
!489 = !DILocation(line: 1614, column: 18, scope: !412)
!490 = !DILocation(line: 1614, column: 16, scope: !412)
!491 = !DILocation(line: 1614, column: 9, scope: !412)
!492 = !DILocation(line: 1614, column: 2, scope: !412)
!493 = !DILocation(line: 1615, column: 1, scope: !412)
!494 = distinct !DISubprogram(name: "sw_window_exists", scope: !243, file: !243, line: 1842, type: !495, isLocal: false, isDefinition: true, scopeLine: 1843, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!495 = !DISubroutineType(types: !496)
!496 = !{!44, !81}
!497 = !DILocalVariable(name: "id", arg: 1, scope: !494, file: !243, line: 1842, type: !81)
!498 = !DILocation(line: 1842, column: 32, scope: !494)
!499 = !DILocalVariable(name: "sw", scope: !494, file: !243, line: 1844, type: !360)
!500 = !DILocation(line: 1844, column: 19, scope: !494)
!501 = !DILocalVariable(name: "name", scope: !494, file: !243, line: 1845, type: !68)
!502 = !DILocation(line: 1845, column: 8, scope: !494)
!503 = !DILocalVariable(name: "sts", scope: !494, file: !243, line: 1846, type: !45)
!504 = !DILocation(line: 1846, column: 8, scope: !494)
!505 = !DILocation(line: 1848, column: 27, scope: !494)
!506 = !DILocation(line: 1848, column: 7, scope: !494)
!507 = !DILocation(line: 1848, column: 5, scope: !494)
!508 = !DILocation(line: 1849, column: 7, scope: !509)
!509 = distinct !DILexicalBlock(scope: !494, file: !243, line: 1849, column: 6)
!510 = !DILocation(line: 1849, column: 6, scope: !494)
!511 = !DILocation(line: 1850, column: 3, scope: !509)
!512 = !DILocation(line: 1852, column: 19, scope: !494)
!513 = !DILocation(line: 1853, column: 19, scope: !494)
!514 = !DILocation(line: 1853, column: 30, scope: !494)
!515 = !DILocation(line: 1853, column: 34, scope: !494)
!516 = !DILocation(line: 1853, column: 8, scope: !494)
!517 = !DILocation(line: 1853, column: 6, scope: !494)
!518 = !DILocation(line: 1854, column: 19, scope: !494)
!519 = !DILocation(line: 1855, column: 6, scope: !520)
!520 = distinct !DILexicalBlock(scope: !494, file: !243, line: 1855, column: 6)
!521 = !DILocation(line: 1855, column: 6, scope: !494)
!522 = !DILocation(line: 1857, column: 9, scope: !523)
!523 = distinct !DILexicalBlock(scope: !520, file: !243, line: 1856, column: 2)
!524 = !DILocation(line: 1857, column: 3, scope: !523)
!525 = !DILocation(line: 1858, column: 2, scope: !523)
!526 = !DILocation(line: 1860, column: 9, scope: !494)
!527 = !DILocation(line: 1860, column: 2, scope: !494)
!528 = !DILocation(line: 1861, column: 1, scope: !494)
!529 = distinct !DISubprogram(name: "sw_get_window_by_id", scope: !243, file: !243, line: 324, type: !530, isLocal: true, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!530 = !DISubroutineType(types: !531)
!531 = !{!360, !81}
!532 = !DILocalVariable(name: "id", arg: 1, scope: !529, file: !243, line: 324, type: !81)
!533 = !DILocation(line: 324, column: 35, scope: !529)
!534 = !DILocalVariable(name: "sw", scope: !529, file: !243, line: 326, type: !360)
!535 = !DILocation(line: 326, column: 19, scope: !529)
!536 = !DILocation(line: 327, column: 12, scope: !537)
!537 = distinct !DILexicalBlock(scope: !529, file: !243, line: 327, column: 2)
!538 = !DILocation(line: 327, column: 10, scope: !537)
!539 = !DILocation(line: 327, column: 7, scope: !537)
!540 = !DILocation(line: 327, column: 32, scope: !541)
!541 = !DILexicalBlockFile(scope: !542, file: !243, discriminator: 1)
!542 = distinct !DILexicalBlock(scope: !537, file: !243, line: 327, column: 2)
!543 = !DILocation(line: 327, column: 2, scope: !541)
!544 = !DILocation(line: 329, column: 7, scope: !545)
!545 = distinct !DILexicalBlock(scope: !546, file: !243, line: 329, column: 7)
!546 = distinct !DILexicalBlock(scope: !542, file: !243, line: 328, column: 2)
!547 = !DILocation(line: 329, column: 11, scope: !545)
!548 = !DILocation(line: 329, column: 17, scope: !545)
!549 = !DILocation(line: 329, column: 14, scope: !545)
!550 = !DILocation(line: 329, column: 7, scope: !546)
!551 = !DILocation(line: 330, column: 11, scope: !545)
!552 = !DILocation(line: 330, column: 4, scope: !545)
!553 = !DILocation(line: 331, column: 2, scope: !546)
!554 = !DILocation(line: 327, column: 41, scope: !555)
!555 = !DILexicalBlockFile(scope: !542, file: !243, discriminator: 2)
!556 = !DILocation(line: 327, column: 45, scope: !555)
!557 = !DILocation(line: 327, column: 39, scope: !555)
!558 = !DILocation(line: 327, column: 2, scope: !555)
!559 = distinct !{!559, !560}
!560 = !DILocation(line: 327, column: 2, scope: !529)
!561 = !DILocation(line: 332, column: 2, scope: !529)
!562 = !DILocation(line: 333, column: 1, scope: !529)
!563 = distinct !DISubprogram(name: "ui_init", scope: !243, file: !243, line: 1891, type: !564, isLocal: false, isDefinition: true, scopeLine: 1892, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!564 = !DISubroutineType(types: !565)
!565 = !{!44}
!566 = !DILocalVariable(name: "screen_num", scope: !563, file: !243, line: 1893, type: !45)
!567 = !DILocation(line: 1893, column: 6, scope: !563)
!568 = !DILocation(line: 1895, column: 14, scope: !563)
!569 = !DILocation(line: 1895, column: 12, scope: !563)
!570 = !DILocation(line: 1896, column: 6, scope: !571)
!571 = distinct !DILexicalBlock(scope: !563, file: !243, line: 1896, column: 6)
!572 = !DILocation(line: 1896, column: 16, scope: !571)
!573 = !DILocation(line: 1896, column: 6, scope: !563)
!574 = !DILocation(line: 1898, column: 67, scope: !575)
!575 = distinct !DILexicalBlock(scope: !571, file: !243, line: 1897, column: 2)
!576 = !DILocation(line: 1898, column: 3, scope: !577)
!577 = !DILexicalBlockFile(scope: !575, file: !243, discriminator: 1)
!578 = !DILocation(line: 1899, column: 3, scope: !575)
!579 = !DILocalVariable(name: "endianness_test", scope: !580, file: !243, line: 1903, type: !240)
!580 = distinct !DILexicalBlock(scope: !563, file: !243, line: 1902, column: 2)
!581 = !DILocation(line: 1903, column: 10, scope: !580)
!582 = !DILocation(line: 1904, column: 27, scope: !580)
!583 = !DILocation(line: 1904, column: 16, scope: !580)
!584 = !DILocation(line: 1904, column: 15, scope: !580)
!585 = !DILocation(line: 1904, column: 13, scope: !580)
!586 = !DILocation(line: 1907, column: 24, scope: !563)
!587 = !DILocation(line: 1907, column: 22, scope: !563)
!588 = !DILocation(line: 1908, column: 17, scope: !563)
!589 = !DILocation(line: 1908, column: 20, scope: !563)
!590 = !DILocation(line: 1908, column: 43, scope: !563)
!591 = !DILocation(line: 1908, column: 15, scope: !563)
!592 = !DILocation(line: 1909, column: 14, scope: !563)
!593 = !DILocation(line: 1909, column: 17, scope: !563)
!594 = !DILocation(line: 1909, column: 13, scope: !563)
!595 = !DILocation(line: 1910, column: 14, scope: !563)
!596 = !DILocation(line: 1910, column: 17, scope: !563)
!597 = !DILocation(line: 1910, column: 13, scope: !563)
!598 = !DILocation(line: 1911, column: 12, scope: !563)
!599 = !DILocation(line: 1911, column: 14, scope: !563)
!600 = !DILocation(line: 1911, column: 15, scope: !563)
!601 = !DILocation(line: 1911, column: 11, scope: !563)
!602 = !DILocation(line: 1912, column: 11, scope: !563)
!603 = !DILocation(line: 1912, column: 14, scope: !563)
!604 = !DILocation(line: 1912, column: 10, scope: !563)
!605 = !DILocation(line: 1914, column: 21, scope: !606)
!606 = distinct !DILexicalBlock(scope: !563, file: !243, line: 1914, column: 6)
!607 = !DILocation(line: 1914, column: 7, scope: !606)
!608 = !DILocation(line: 1914, column: 6, scope: !563)
!609 = !DILocation(line: 1915, column: 3, scope: !606)
!610 = !DILocation(line: 1917, column: 6, scope: !611)
!611 = distinct !DILexicalBlock(scope: !563, file: !243, line: 1917, column: 6)
!612 = !DILocation(line: 1917, column: 6, scope: !563)
!613 = !DILocation(line: 1919, column: 3, scope: !614)
!614 = distinct !DILexicalBlock(scope: !611, file: !243, line: 1918, column: 2)
!615 = !DILocation(line: 1921, column: 2, scope: !614)
!616 = !DILocation(line: 1923, column: 6, scope: !617)
!617 = distinct !DILexicalBlock(scope: !563, file: !243, line: 1923, column: 6)
!618 = !DILocation(line: 1923, column: 23, scope: !617)
!619 = !DILocation(line: 1923, column: 21, scope: !617)
!620 = !DILocation(line: 1923, column: 6, scope: !563)
!621 = !DILocation(line: 1927, column: 10, scope: !622)
!622 = distinct !DILexicalBlock(scope: !617, file: !243, line: 1924, column: 2)
!623 = !DILocation(line: 1927, column: 26, scope: !622)
!624 = !DILocation(line: 1925, column: 3, scope: !622)
!625 = !DILocation(line: 1928, column: 2, scope: !622)
!626 = !DILocation(line: 1932, column: 9, scope: !563)
!627 = !DILocation(line: 1932, column: 25, scope: !563)
!628 = !DILocation(line: 1932, column: 34, scope: !563)
!629 = !DILocation(line: 1932, column: 41, scope: !563)
!630 = !DILocation(line: 1932, column: 55, scope: !563)
!631 = !DILocation(line: 1930, column: 2, scope: !563)
!632 = !DILocation(line: 1934, column: 7, scope: !633)
!633 = distinct !DILexicalBlock(scope: !563, file: !243, line: 1934, column: 6)
!634 = !DILocation(line: 1934, column: 6, scope: !563)
!635 = !DILocation(line: 1937, column: 20, scope: !636)
!636 = distinct !DILexicalBlock(scope: !633, file: !243, line: 1935, column: 2)
!637 = !DILocation(line: 1937, column: 30, scope: !636)
!638 = !DILocation(line: 1937, column: 33, scope: !636)
!639 = !DILocation(line: 1937, column: 60, scope: !636)
!640 = !DILocation(line: 1937, column: 4, scope: !636)
!641 = !DILocation(line: 1936, column: 13, scope: !636)
!642 = !DILocation(line: 1939, column: 7, scope: !643)
!643 = distinct !DILexicalBlock(scope: !636, file: !243, line: 1939, column: 7)
!644 = !DILocation(line: 1939, column: 15, scope: !643)
!645 = !DILocation(line: 1939, column: 7, scope: !636)
!646 = !DILocation(line: 1942, column: 11, scope: !643)
!647 = !DILocation(line: 1940, column: 4, scope: !643)
!648 = !DILocation(line: 1943, column: 2, scope: !636)
!649 = !DILocation(line: 1945, column: 8, scope: !650)
!650 = distinct !DILexicalBlock(scope: !563, file: !243, line: 1945, column: 6)
!651 = !DILocation(line: 1945, column: 24, scope: !650)
!652 = !DILocation(line: 1945, column: 27, scope: !653)
!653 = !DILexicalBlockFile(scope: !650, file: !243, discriminator: 1)
!654 = !DILocation(line: 1945, column: 30, scope: !653)
!655 = !DILocation(line: 1945, column: 54, scope: !653)
!656 = !DILocation(line: 1945, column: 6, scope: !653)
!657 = !DILocation(line: 1947, column: 3, scope: !658)
!658 = distinct !DILexicalBlock(scope: !650, file: !243, line: 1946, column: 2)
!659 = !DILocation(line: 1948, column: 18, scope: !658)
!660 = !DILocation(line: 1949, column: 2, scope: !658)
!661 = !DILocation(line: 1951, column: 34, scope: !563)
!662 = !DILocation(line: 1951, column: 14, scope: !563)
!663 = !DILocation(line: 1951, column: 12, scope: !563)
!664 = !DILocation(line: 1952, column: 2, scope: !563)
!665 = !DILocation(line: 1954, column: 2, scope: !563)
!666 = !DILocation(line: 1956, column: 6, scope: !667)
!667 = distinct !DILexicalBlock(scope: !563, file: !243, line: 1956, column: 6)
!668 = !DILocation(line: 1956, column: 6, scope: !563)
!669 = !DILocation(line: 1957, column: 18, scope: !667)
!670 = !DILocation(line: 1957, column: 10, scope: !667)
!671 = !DILocation(line: 1957, column: 8, scope: !667)
!672 = !DILocation(line: 1957, column: 3, scope: !667)
!673 = !DILocation(line: 1959, column: 2, scope: !563)
!674 = !DILocation(line: 1960, column: 2, scope: !563)
!675 = !DILocation(line: 1961, column: 6, scope: !676)
!676 = distinct !DILexicalBlock(scope: !563, file: !243, line: 1961, column: 6)
!677 = !DILocation(line: 1961, column: 6, scope: !563)
!678 = !DILocation(line: 1963, column: 3, scope: !679)
!679 = distinct !DILexicalBlock(scope: !676, file: !243, line: 1962, column: 2)
!680 = !DILocation(line: 1964, column: 2, scope: !679)
!681 = !DILocation(line: 1966, column: 2, scope: !563)
!682 = !DILocation(line: 1967, column: 1, scope: !563)
!683 = distinct !DISubprogram(name: "error_handler", scope: !243, file: !243, line: 1864, type: !312, isLocal: true, isDefinition: true, scopeLine: 1865, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!684 = !DILocalVariable(name: "dpy", arg: 1, scope: !683, file: !243, line: 1864, type: !223)
!685 = !DILocation(line: 1864, column: 25, scope: !683)
!686 = !DILocalVariable(name: "eev", arg: 2, scope: !683, file: !243, line: 1864, type: !314)
!687 = !DILocation(line: 1864, column: 44, scope: !683)
!688 = !DILocation(line: 1866, column: 6, scope: !689)
!689 = distinct !DILexicalBlock(scope: !683, file: !243, line: 1866, column: 6)
!690 = !DILocation(line: 1866, column: 6, scope: !683)
!691 = !DILocation(line: 1867, column: 3, scope: !689)
!692 = !DILocation(line: 1869, column: 9, scope: !683)
!693 = !DILocation(line: 1869, column: 29, scope: !683)
!694 = !DILocation(line: 1869, column: 34, scope: !683)
!695 = !DILocation(line: 1869, column: 2, scope: !683)
!696 = !DILocation(line: 1870, column: 1, scope: !683)
!697 = distinct !DISubprogram(name: "select_visual", scope: !243, file: !243, line: 1641, type: !698, isLocal: true, isDefinition: true, scopeLine: 1642, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!698 = !DISubroutineType(types: !699)
!699 = !{!44, !45}
!700 = !DILocalVariable(name: "screen_num", arg: 1, scope: !697, file: !243, line: 1641, type: !45)
!701 = !DILocation(line: 1641, column: 19, scope: !697)
!702 = !DILocalVariable(name: "pfm", scope: !697, file: !243, line: 1643, type: !703)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64, align: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPixmapFormatValues", file: !50, line: 175, baseType: !705)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 171, size: 96, align: 32, elements: !706)
!706 = !{!707, !708, !709}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !705, file: !50, line: 172, baseType: !45, size: 32, align: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_pixel", scope: !705, file: !50, line: 173, baseType: !45, size: 32, align: 32, offset: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "scanline_pad", scope: !705, file: !50, line: 174, baseType: !45, size: 32, align: 32, offset: 64)
!710 = !DILocation(line: 1643, column: 23, scope: !697)
!711 = !DILocalVariable(name: "pixmap_formats_count", scope: !697, file: !243, line: 1644, type: !45)
!712 = !DILocation(line: 1644, column: 6, scope: !697)
!713 = !DILocalVariable(name: "visuals_count", scope: !697, file: !243, line: 1644, type: !45)
!714 = !DILocation(line: 1644, column: 28, scope: !697)
!715 = !DILocalVariable(name: "vmatches", scope: !697, file: !243, line: 1645, type: !716)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64, align: 64)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "XVisualInfo", file: !718, line: 302, baseType: !719)
!718 = !DIFile(filename: "/usr/include/X11/Xutil.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !718, line: 287, size: 512, align: 64, elements: !720)
!720 = !{!721, !722, !723, !724, !725, !726, !727, !728, !729, !730}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "visual", scope: !719, file: !718, line: 288, baseType: !150, size: 64, align: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "visualid", scope: !719, file: !718, line: 289, baseType: !156, size: 64, align: 64, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !719, file: !718, line: 290, baseType: !45, size: 32, align: 32, offset: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !719, file: !718, line: 291, baseType: !45, size: 32, align: 32, offset: 160)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !719, file: !718, line: 295, baseType: !45, size: 32, align: 32, offset: 192)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "red_mask", scope: !719, file: !718, line: 297, baseType: !81, size: 64, align: 64, offset: 256)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "green_mask", scope: !719, file: !718, line: 298, baseType: !81, size: 64, align: 64, offset: 320)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "blue_mask", scope: !719, file: !718, line: 299, baseType: !81, size: 64, align: 64, offset: 384)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "colormap_size", scope: !719, file: !718, line: 300, baseType: !45, size: 32, align: 32, offset: 448)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_rgb", scope: !719, file: !718, line: 301, baseType: !45, size: 32, align: 32, offset: 480)
!731 = !DILocation(line: 1645, column: 15, scope: !697)
!732 = !DILocalVariable(name: "template", scope: !697, file: !243, line: 1646, type: !717)
!733 = !DILocation(line: 1646, column: 14, scope: !697)
!734 = !DILocalVariable(name: "i", scope: !697, file: !243, line: 1647, type: !45)
!735 = !DILocation(line: 1647, column: 6, scope: !697)
!736 = !DILocalVariable(name: "red_weight", scope: !697, file: !243, line: 1648, type: !117)
!737 = !DILocation(line: 1648, column: 11, scope: !697)
!738 = !DILocalVariable(name: "blue_weight", scope: !697, file: !243, line: 1648, type: !117)
!739 = !DILocation(line: 1648, column: 23, scope: !697)
!740 = !DILocalVariable(name: "green_weight", scope: !697, file: !243, line: 1648, type: !117)
!741 = !DILocation(line: 1648, column: 36, scope: !697)
!742 = !DILocation(line: 1650, column: 42, scope: !697)
!743 = !DILocation(line: 1650, column: 27, scope: !697)
!744 = !DILocation(line: 1650, column: 13, scope: !697)
!745 = !DILocation(line: 1652, column: 6, scope: !746)
!746 = distinct !DILexicalBlock(scope: !697, file: !243, line: 1652, column: 6)
!747 = !DILocation(line: 1652, column: 21, scope: !746)
!748 = !DILocation(line: 1652, column: 6, scope: !697)
!749 = !DILocation(line: 1654, column: 19, scope: !750)
!750 = distinct !DILexicalBlock(scope: !746, file: !243, line: 1653, column: 2)
!751 = !DILocation(line: 1654, column: 22, scope: !750)
!752 = !DILocation(line: 1654, column: 41, scope: !750)
!753 = !DILocation(line: 1654, column: 18, scope: !750)
!754 = !DILocation(line: 1655, column: 2, scope: !750)
!755 = !DILocation(line: 1657, column: 27, scope: !697)
!756 = !DILocation(line: 1657, column: 8, scope: !697)
!757 = !DILocation(line: 1657, column: 6, scope: !697)
!758 = !DILocation(line: 1658, column: 6, scope: !759)
!759 = distinct !DILexicalBlock(scope: !697, file: !243, line: 1658, column: 6)
!760 = !DILocation(line: 1658, column: 10, scope: !759)
!761 = !DILocation(line: 1658, column: 6, scope: !697)
!762 = !DILocation(line: 1660, column: 3, scope: !763)
!763 = distinct !DILexicalBlock(scope: !759, file: !243, line: 1659, column: 2)
!764 = !DILocation(line: 1661, column: 17, scope: !763)
!765 = !DILocation(line: 1661, column: 3, scope: !763)
!766 = !DILocation(line: 1662, column: 3, scope: !763)
!767 = !DILocation(line: 1666, column: 11, scope: !697)
!768 = !DILocation(line: 1666, column: 17, scope: !697)
!769 = !DILocation(line: 1667, column: 20, scope: !697)
!770 = !DILocation(line: 1667, column: 11, scope: !697)
!771 = !DILocation(line: 1667, column: 18, scope: !697)
!772 = !DILocation(line: 1669, column: 18, scope: !697)
!773 = !DILocation(line: 1669, column: 3, scope: !697)
!774 = !DILocation(line: 1668, column: 11, scope: !697)
!775 = !DILocation(line: 1671, column: 11, scope: !697)
!776 = !DILocation(line: 1672, column: 23, scope: !697)
!777 = !DILocation(line: 1673, column: 20, scope: !697)
!778 = !DILocation(line: 1674, column: 6, scope: !779)
!779 = distinct !DILexicalBlock(scope: !697, file: !243, line: 1674, column: 6)
!780 = !DILocation(line: 1674, column: 15, scope: !779)
!781 = !DILocation(line: 1674, column: 6, scope: !697)
!782 = !DILocation(line: 1676, column: 10, scope: !783)
!783 = distinct !DILexicalBlock(scope: !784, file: !243, line: 1676, column: 3)
!784 = distinct !DILexicalBlock(scope: !779, file: !243, line: 1675, column: 2)
!785 = !DILocation(line: 1676, column: 8, scope: !783)
!786 = !DILocation(line: 1676, column: 15, scope: !787)
!787 = !DILexicalBlockFile(scope: !788, file: !243, discriminator: 1)
!788 = distinct !DILexicalBlock(scope: !783, file: !243, line: 1676, column: 3)
!789 = !DILocation(line: 1676, column: 19, scope: !787)
!790 = !DILocation(line: 1676, column: 17, scope: !787)
!791 = !DILocation(line: 1676, column: 3, scope: !787)
!792 = !DILocalVariable(name: "visual_info", scope: !793, file: !243, line: 1678, type: !716)
!793 = distinct !DILexicalBlock(scope: !788, file: !243, line: 1677, column: 3)
!794 = !DILocation(line: 1678, column: 17, scope: !793)
!795 = !DILocation(line: 1678, column: 41, scope: !793)
!796 = !DILocation(line: 1678, column: 32, scope: !793)
!797 = !DILocalVariable(name: "can_translate_to_bpp", scope: !793, file: !243, line: 1679, type: !44)
!798 = !DILocation(line: 1679, column: 12, scope: !793)
!799 = !DILocalVariable(name: "j", scope: !793, file: !243, line: 1680, type: !45)
!800 = !DILocation(line: 1680, column: 8, scope: !793)
!801 = !DILocation(line: 1684, column: 9, scope: !802)
!802 = distinct !DILexicalBlock(scope: !793, file: !243, line: 1684, column: 8)
!803 = !DILocation(line: 1684, column: 22, scope: !802)
!804 = !DILocation(line: 1684, column: 28, scope: !805)
!805 = !DILexicalBlockFile(scope: !802, file: !243, discriminator: 1)
!806 = !DILocation(line: 1684, column: 41, scope: !805)
!807 = !DILocation(line: 1684, column: 47, scope: !805)
!808 = !DILocation(line: 1684, column: 54, scope: !805)
!809 = !DILocation(line: 1686, column: 14, scope: !802)
!810 = !DILocation(line: 1686, column: 27, scope: !802)
!811 = !DILocation(line: 1686, column: 36, scope: !802)
!812 = !DILocation(line: 1686, column: 47, scope: !802)
!813 = !DILocation(line: 1687, column: 14, scope: !802)
!814 = !DILocation(line: 1687, column: 27, scope: !802)
!815 = !DILocation(line: 1687, column: 38, scope: !802)
!816 = !DILocation(line: 1687, column: 48, scope: !802)
!817 = !DILocation(line: 1688, column: 14, scope: !802)
!818 = !DILocation(line: 1688, column: 27, scope: !802)
!819 = !DILocation(line: 1688, column: 37, scope: !802)
!820 = !DILocation(line: 1688, column: 47, scope: !802)
!821 = !DILocation(line: 1689, column: 14, scope: !802)
!822 = !DILocation(line: 1689, column: 27, scope: !802)
!823 = !DILocation(line: 1689, column: 33, scope: !802)
!824 = !DILocation(line: 1689, column: 40, scope: !802)
!825 = !DILocation(line: 1691, column: 14, scope: !802)
!826 = !DILocation(line: 1691, column: 27, scope: !802)
!827 = !DILocation(line: 1691, column: 36, scope: !802)
!828 = !DILocation(line: 1691, column: 47, scope: !802)
!829 = !DILocation(line: 1692, column: 14, scope: !802)
!830 = !DILocation(line: 1692, column: 27, scope: !802)
!831 = !DILocation(line: 1692, column: 38, scope: !802)
!832 = !DILocation(line: 1692, column: 48, scope: !802)
!833 = !DILocation(line: 1693, column: 14, scope: !802)
!834 = !DILocation(line: 1693, column: 27, scope: !802)
!835 = !DILocation(line: 1693, column: 37, scope: !802)
!836 = !DILocation(line: 1693, column: 47, scope: !802)
!837 = !DILocation(line: 1694, column: 14, scope: !802)
!838 = !DILocation(line: 1694, column: 27, scope: !802)
!839 = !DILocation(line: 1694, column: 33, scope: !802)
!840 = !DILocation(line: 1694, column: 40, scope: !802)
!841 = !DILocation(line: 1696, column: 14, scope: !802)
!842 = !DILocation(line: 1696, column: 27, scope: !802)
!843 = !DILocation(line: 1696, column: 36, scope: !802)
!844 = !DILocation(line: 1696, column: 49, scope: !802)
!845 = !DILocation(line: 1697, column: 14, scope: !802)
!846 = !DILocation(line: 1697, column: 27, scope: !802)
!847 = !DILocation(line: 1697, column: 38, scope: !802)
!848 = !DILocation(line: 1697, column: 49, scope: !802)
!849 = !DILocation(line: 1698, column: 14, scope: !802)
!850 = !DILocation(line: 1698, column: 27, scope: !802)
!851 = !DILocation(line: 1698, column: 37, scope: !802)
!852 = !DILocation(line: 1684, column: 8, scope: !853)
!853 = !DILexicalBlockFile(scope: !793, file: !243, discriminator: 2)
!854 = !DILocation(line: 1700, column: 16, scope: !855)
!855 = distinct !DILexicalBlock(scope: !802, file: !243, line: 1699, column: 4)
!856 = !DILocation(line: 1700, column: 29, scope: !855)
!857 = !DILocation(line: 1700, column: 14, scope: !855)
!858 = !DILocation(line: 1701, column: 15, scope: !855)
!859 = !DILocation(line: 1701, column: 28, scope: !855)
!860 = !DILocation(line: 1701, column: 13, scope: !855)
!861 = !DILocation(line: 1702, column: 26, scope: !855)
!862 = !DILocation(line: 1702, column: 25, scope: !855)
!863 = !DILocation(line: 1702, column: 23, scope: !855)
!864 = !DILocation(line: 1703, column: 29, scope: !855)
!865 = !DILocation(line: 1703, column: 42, scope: !855)
!866 = !DILocation(line: 1703, column: 51, scope: !855)
!867 = !DILocation(line: 1703, column: 48, scope: !855)
!868 = !DILocation(line: 1703, column: 26, scope: !855)
!869 = !DILocation(line: 1704, column: 9, scope: !870)
!870 = distinct !DILexicalBlock(scope: !855, file: !243, line: 1704, column: 9)
!871 = !DILocation(line: 1704, column: 9, scope: !855)
!872 = !DILocation(line: 1706, column: 6, scope: !870)
!873 = !DILocation(line: 1707, column: 4, scope: !855)
!874 = !DILocation(line: 1710, column: 23, scope: !875)
!875 = distinct !DILexicalBlock(scope: !802, file: !243, line: 1709, column: 4)
!876 = !DILocation(line: 1713, column: 8, scope: !877)
!877 = distinct !DILexicalBlock(scope: !793, file: !243, line: 1713, column: 8)
!878 = !DILocation(line: 1713, column: 21, scope: !877)
!879 = !DILocation(line: 1713, column: 27, scope: !877)
!880 = !DILocation(line: 1713, column: 8, scope: !793)
!881 = !DILocation(line: 1719, column: 5, scope: !882)
!882 = distinct !DILexicalBlock(scope: !877, file: !243, line: 1714, column: 4)
!883 = !DILocation(line: 1724, column: 11, scope: !884)
!884 = distinct !DILexicalBlock(scope: !793, file: !243, line: 1724, column: 4)
!885 = !DILocation(line: 1724, column: 9, scope: !884)
!886 = !DILocation(line: 1724, column: 16, scope: !887)
!887 = !DILexicalBlockFile(scope: !888, file: !243, discriminator: 1)
!888 = distinct !DILexicalBlock(scope: !884, file: !243, line: 1724, column: 4)
!889 = !DILocation(line: 1724, column: 20, scope: !887)
!890 = !DILocation(line: 1724, column: 18, scope: !887)
!891 = !DILocation(line: 1724, column: 4, scope: !887)
!892 = !DILocation(line: 1726, column: 13, scope: !893)
!893 = distinct !DILexicalBlock(scope: !894, file: !243, line: 1726, column: 9)
!894 = distinct !DILexicalBlock(scope: !888, file: !243, line: 1725, column: 4)
!895 = !DILocation(line: 1726, column: 9, scope: !893)
!896 = !DILocation(line: 1726, column: 16, scope: !893)
!897 = !DILocation(line: 1726, column: 25, scope: !893)
!898 = !DILocation(line: 1726, column: 38, scope: !893)
!899 = !DILocation(line: 1726, column: 22, scope: !893)
!900 = !DILocation(line: 1726, column: 9, scope: !894)
!901 = !DILocation(line: 1728, column: 15, scope: !902)
!902 = distinct !DILexicalBlock(scope: !903, file: !243, line: 1728, column: 10)
!903 = distinct !DILexicalBlock(scope: !893, file: !243, line: 1727, column: 5)
!904 = !DILocation(line: 1728, column: 11, scope: !902)
!905 = !DILocation(line: 1728, column: 18, scope: !902)
!906 = !DILocation(line: 1728, column: 33, scope: !902)
!907 = !DILocation(line: 1728, column: 40, scope: !902)
!908 = !DILocation(line: 1729, column: 15, scope: !902)
!909 = !DILocation(line: 1729, column: 11, scope: !902)
!910 = !DILocation(line: 1729, column: 18, scope: !902)
!911 = !DILocation(line: 1729, column: 33, scope: !902)
!912 = !DILocation(line: 1729, column: 40, scope: !902)
!913 = !DILocation(line: 1730, column: 15, scope: !902)
!914 = !DILocation(line: 1730, column: 11, scope: !902)
!915 = !DILocation(line: 1730, column: 18, scope: !902)
!916 = !DILocation(line: 1730, column: 33, scope: !902)
!917 = !DILocation(line: 1728, column: 10, scope: !918)
!918 = !DILexicalBlockFile(scope: !903, file: !243, discriminator: 1)
!919 = !DILocation(line: 1732, column: 28, scope: !920)
!920 = distinct !DILexicalBlock(scope: !902, file: !243, line: 1731, column: 6)
!921 = !DILocation(line: 1733, column: 6, scope: !920)
!922 = !DILocation(line: 1734, column: 6, scope: !903)
!923 = !DILocation(line: 1736, column: 4, scope: !894)
!924 = !DILocation(line: 1724, column: 42, scope: !925)
!925 = !DILexicalBlockFile(scope: !888, file: !243, discriminator: 2)
!926 = !DILocation(line: 1724, column: 4, scope: !925)
!927 = distinct !{!927, !928}
!928 = !DILocation(line: 1724, column: 4, scope: !793)
!929 = !DILocation(line: 1741, column: 8, scope: !930)
!930 = distinct !DILexicalBlock(scope: !793, file: !243, line: 1741, column: 8)
!931 = !DILocation(line: 1741, column: 8, scope: !793)
!932 = !DILocalVariable(name: "vis_red_weight", scope: !933, file: !243, line: 1743, type: !117)
!933 = distinct !DILexicalBlock(scope: !930, file: !243, line: 1742, column: 4)
!934 = !DILocation(line: 1743, column: 14, scope: !933)
!935 = !DILocation(line: 1744, column: 28, scope: !933)
!936 = !DILocation(line: 1744, column: 41, scope: !933)
!937 = !DILocation(line: 1744, column: 6, scope: !933)
!938 = !DILocalVariable(name: "vis_green_weight", scope: !933, file: !243, line: 1745, type: !117)
!939 = !DILocation(line: 1745, column: 14, scope: !933)
!940 = !DILocation(line: 1746, column: 28, scope: !933)
!941 = !DILocation(line: 1746, column: 41, scope: !933)
!942 = !DILocation(line: 1746, column: 6, scope: !933)
!943 = !DILocalVariable(name: "vis_blue_weight", scope: !933, file: !243, line: 1747, type: !117)
!944 = !DILocation(line: 1747, column: 14, scope: !933)
!945 = !DILocation(line: 1748, column: 28, scope: !933)
!946 = !DILocation(line: 1748, column: 41, scope: !933)
!947 = !DILocation(line: 1748, column: 6, scope: !933)
!948 = !DILocation(line: 1749, column: 10, scope: !949)
!949 = distinct !DILexicalBlock(scope: !933, file: !243, line: 1749, column: 9)
!950 = !DILocation(line: 1749, column: 28, scope: !949)
!951 = !DILocation(line: 1749, column: 25, scope: !949)
!952 = !DILocation(line: 1750, column: 9, scope: !949)
!953 = !DILocation(line: 1750, column: 13, scope: !954)
!954 = !DILexicalBlockFile(scope: !949, file: !243, discriminator: 1)
!955 = !DILocation(line: 1750, column: 33, scope: !954)
!956 = !DILocation(line: 1750, column: 30, scope: !954)
!957 = !DILocation(line: 1751, column: 9, scope: !949)
!958 = !DILocation(line: 1751, column: 13, scope: !954)
!959 = !DILocation(line: 1751, column: 32, scope: !954)
!960 = !DILocation(line: 1751, column: 29, scope: !954)
!961 = !DILocation(line: 1749, column: 9, scope: !962)
!962 = !DILexicalBlockFile(scope: !933, file: !243, discriminator: 1)
!963 = !DILocation(line: 1753, column: 19, scope: !964)
!964 = distinct !DILexicalBlock(scope: !949, file: !243, line: 1752, column: 5)
!965 = !DILocation(line: 1753, column: 17, scope: !964)
!966 = !DILocation(line: 1754, column: 21, scope: !964)
!967 = !DILocation(line: 1754, column: 19, scope: !964)
!968 = !DILocation(line: 1755, column: 20, scope: !964)
!969 = !DILocation(line: 1755, column: 18, scope: !964)
!970 = !DILocation(line: 1756, column: 17, scope: !964)
!971 = !DILocation(line: 1756, column: 30, scope: !964)
!972 = !DILocation(line: 1756, column: 15, scope: !964)
!973 = !DILocation(line: 1757, column: 16, scope: !964)
!974 = !DILocation(line: 1757, column: 29, scope: !964)
!975 = !DILocation(line: 1757, column: 14, scope: !964)
!976 = !DILocation(line: 1758, column: 5, scope: !964)
!977 = !DILocation(line: 1759, column: 4, scope: !933)
!978 = !DILocation(line: 1760, column: 3, scope: !793)
!979 = !DILocation(line: 1676, column: 34, scope: !980)
!980 = !DILexicalBlockFile(scope: !788, file: !243, discriminator: 2)
!981 = !DILocation(line: 1676, column: 3, scope: !980)
!982 = distinct !{!982, !983}
!983 = !DILocation(line: 1676, column: 3, scope: !784)
!984 = !DILocation(line: 1761, column: 9, scope: !784)
!985 = !DILocation(line: 1761, column: 3, scope: !784)
!986 = !DILocation(line: 1762, column: 2, scope: !784)
!987 = !DILocation(line: 1764, column: 6, scope: !988)
!988 = distinct !DILexicalBlock(scope: !697, file: !243, line: 1764, column: 6)
!989 = !DILocation(line: 1764, column: 15, scope: !988)
!990 = !DILocation(line: 1764, column: 6, scope: !697)
!991 = !DILocation(line: 1766, column: 15, scope: !992)
!992 = distinct !DILexicalBlock(scope: !988, file: !243, line: 1765, column: 2)
!993 = !DILocation(line: 1767, column: 20, scope: !992)
!994 = !DILocation(line: 1767, column: 30, scope: !992)
!995 = !DILocation(line: 1767, column: 3, scope: !992)
!996 = !DILocation(line: 1768, column: 20, scope: !992)
!997 = !DILocation(line: 1768, column: 30, scope: !992)
!998 = !DILocation(line: 1768, column: 3, scope: !992)
!999 = !DILocation(line: 1769, column: 20, scope: !992)
!1000 = !DILocation(line: 1769, column: 30, scope: !992)
!1001 = !DILocation(line: 1769, column: 3, scope: !992)
!1002 = !DILocation(line: 1770, column: 2, scope: !992)
!1003 = !DILocation(line: 1773, column: 12, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !988, file: !243, line: 1772, column: 2)
!1005 = !DILocation(line: 1773, column: 18, scope: !1004)
!1006 = !DILocation(line: 1774, column: 12, scope: !1004)
!1007 = !DILocation(line: 1774, column: 18, scope: !1004)
!1008 = !DILocation(line: 1775, column: 12, scope: !1004)
!1009 = !DILocation(line: 1775, column: 26, scope: !1004)
!1010 = !DILocation(line: 1777, column: 19, scope: !1004)
!1011 = !DILocation(line: 1777, column: 4, scope: !1004)
!1012 = !DILocation(line: 1776, column: 12, scope: !1004)
!1013 = !DILocation(line: 1780, column: 7, scope: !1014)
!1014 = distinct !DILexicalBlock(scope: !1004, file: !243, line: 1780, column: 7)
!1015 = !DILocation(line: 1780, column: 16, scope: !1014)
!1016 = !DILocation(line: 1780, column: 7, scope: !1004)
!1017 = !DILocation(line: 1782, column: 4, scope: !1018)
!1018 = distinct !DILexicalBlock(scope: !1014, file: !243, line: 1781, column: 3)
!1019 = !DILocation(line: 1784, column: 18, scope: !1018)
!1020 = !DILocation(line: 1784, column: 4, scope: !1018)
!1021 = !DILocation(line: 1785, column: 10, scope: !1018)
!1022 = !DILocation(line: 1785, column: 4, scope: !1018)
!1023 = !DILocation(line: 1786, column: 4, scope: !1018)
!1024 = !DILocation(line: 1790, column: 15, scope: !1004)
!1025 = !DILocation(line: 1791, column: 14, scope: !1004)
!1026 = !DILocation(line: 1791, column: 26, scope: !1004)
!1027 = !DILocation(line: 1791, column: 12, scope: !1004)
!1028 = !DILocation(line: 1792, column: 13, scope: !1004)
!1029 = !DILocation(line: 1792, column: 25, scope: !1004)
!1030 = !DILocation(line: 1792, column: 11, scope: !1004)
!1031 = !DILocation(line: 1795, column: 8, scope: !697)
!1032 = !DILocation(line: 1796, column: 9, scope: !1033)
!1033 = distinct !DILexicalBlock(scope: !697, file: !243, line: 1796, column: 2)
!1034 = !DILocation(line: 1796, column: 7, scope: !1033)
!1035 = !DILocation(line: 1796, column: 14, scope: !1036)
!1036 = !DILexicalBlockFile(scope: !1037, file: !243, discriminator: 1)
!1037 = distinct !DILexicalBlock(scope: !1033, file: !243, line: 1796, column: 2)
!1038 = !DILocation(line: 1796, column: 18, scope: !1036)
!1039 = !DILocation(line: 1796, column: 16, scope: !1036)
!1040 = !DILocation(line: 1796, column: 2, scope: !1036)
!1041 = !DILocalVariable(name: "pf", scope: !1042, file: !243, line: 1798, type: !703)
!1042 = distinct !DILexicalBlock(scope: !1037, file: !243, line: 1797, column: 2)
!1043 = !DILocation(line: 1798, column: 24, scope: !1042)
!1044 = !DILocation(line: 1798, column: 34, scope: !1042)
!1045 = !DILocation(line: 1798, column: 30, scope: !1042)
!1046 = !DILocation(line: 1799, column: 7, scope: !1047)
!1047 = distinct !DILexicalBlock(scope: !1042, file: !243, line: 1799, column: 7)
!1048 = !DILocation(line: 1799, column: 11, scope: !1047)
!1049 = !DILocation(line: 1799, column: 20, scope: !1047)
!1050 = !DILocation(line: 1799, column: 17, scope: !1047)
!1051 = !DILocation(line: 1799, column: 7, scope: !1042)
!1052 = !DILocation(line: 1801, column: 12, scope: !1053)
!1053 = distinct !DILexicalBlock(scope: !1047, file: !243, line: 1800, column: 3)
!1054 = !DILocation(line: 1801, column: 16, scope: !1053)
!1055 = !DILocation(line: 1801, column: 10, scope: !1053)
!1056 = !DILocation(line: 1803, column: 8, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1053, file: !243, line: 1803, column: 8)
!1058 = !DILocation(line: 1803, column: 8, scope: !1053)
!1059 = !DILocation(line: 1805, column: 13, scope: !1060)
!1060 = distinct !DILexicalBlock(scope: !1057, file: !243, line: 1804, column: 4)
!1061 = !DILocation(line: 1805, column: 5, scope: !1060)
!1062 = !DILocation(line: 1809, column: 11, scope: !1063)
!1063 = distinct !DILexicalBlock(scope: !1064, file: !243, line: 1809, column: 11)
!1064 = distinct !DILexicalBlock(scope: !1060, file: !243, line: 1806, column: 5)
!1065 = !DILocation(line: 1809, column: 17, scope: !1063)
!1066 = !DILocation(line: 1809, column: 11, scope: !1064)
!1067 = !DILocation(line: 1810, column: 29, scope: !1063)
!1068 = !DILocation(line: 1810, column: 8, scope: !1063)
!1069 = !DILocation(line: 1811, column: 7, scope: !1064)
!1070 = !DILocation(line: 1816, column: 11, scope: !1071)
!1071 = distinct !DILexicalBlock(scope: !1064, file: !243, line: 1816, column: 11)
!1072 = !DILocation(line: 1816, column: 17, scope: !1071)
!1073 = !DILocation(line: 1816, column: 11, scope: !1064)
!1074 = !DILocation(line: 1817, column: 29, scope: !1071)
!1075 = !DILocation(line: 1817, column: 8, scope: !1071)
!1076 = !DILocation(line: 1818, column: 7, scope: !1064)
!1077 = !DILocation(line: 1820, column: 28, scope: !1064)
!1078 = !DILocation(line: 1821, column: 7, scope: !1064)
!1079 = !DILocation(line: 1823, column: 4, scope: !1060)
!1080 = !DILocation(line: 1828, column: 4, scope: !1053)
!1081 = !DILocation(line: 1830, column: 2, scope: !1042)
!1082 = !DILocation(line: 1796, column: 40, scope: !1083)
!1083 = !DILexicalBlockFile(scope: !1037, file: !243, discriminator: 2)
!1084 = !DILocation(line: 1796, column: 2, scope: !1083)
!1085 = distinct !{!1085, !1086}
!1086 = !DILocation(line: 1796, column: 2, scope: !697)
!1087 = !DILocation(line: 1831, column: 8, scope: !697)
!1088 = !DILocation(line: 1831, column: 2, scope: !697)
!1089 = !DILocation(line: 1832, column: 6, scope: !697)
!1090 = !DILocation(line: 1833, column: 2, scope: !697)
!1091 = !DILocation(line: 1834, column: 1, scope: !697)
!1092 = distinct !DISubprogram(name: "xwin_refresh_pointer_map", scope: !243, file: !243, line: 1570, type: !254, isLocal: true, isDefinition: true, scopeLine: 1571, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!1093 = !DILocalVariable(name: "phys_to_log_map", scope: !1092, file: !243, line: 1572, type: !335)
!1094 = !DILocation(line: 1572, column: 16, scope: !1092)
!1095 = !DILocalVariable(name: "i", scope: !1092, file: !243, line: 1573, type: !45)
!1096 = !DILocation(line: 1573, column: 6, scope: !1092)
!1097 = !DILocalVariable(name: "pointer_buttons", scope: !1092, file: !243, line: 1574, type: !117)
!1098 = !DILocation(line: 1574, column: 15, scope: !1092)
!1099 = !DILocation(line: 1576, column: 53, scope: !1092)
!1100 = !DILocation(line: 1576, column: 64, scope: !1092)
!1101 = !DILocation(line: 1576, column: 34, scope: !1092)
!1102 = !DILocation(line: 1576, column: 18, scope: !1092)
!1103 = !DILocation(line: 1577, column: 6, scope: !1104)
!1104 = distinct !DILexicalBlock(scope: !1092, file: !243, line: 1577, column: 6)
!1105 = !DILocation(line: 1577, column: 22, scope: !1104)
!1106 = !DILocation(line: 1577, column: 6, scope: !1092)
!1107 = !DILocation(line: 1578, column: 19, scope: !1104)
!1108 = !DILocation(line: 1578, column: 3, scope: !1104)
!1109 = !DILocation(line: 1582, column: 11, scope: !1110)
!1110 = distinct !DILexicalBlock(scope: !1092, file: !243, line: 1582, column: 2)
!1111 = !DILocation(line: 1582, column: 27, scope: !1110)
!1112 = !DILocation(line: 1582, column: 9, scope: !1110)
!1113 = !DILocation(line: 1582, column: 7, scope: !1110)
!1114 = !DILocation(line: 1582, column: 32, scope: !1115)
!1115 = !DILexicalBlockFile(scope: !1116, file: !243, discriminator: 1)
!1116 = distinct !DILexicalBlock(scope: !1110, file: !243, line: 1582, column: 2)
!1117 = !DILocation(line: 1582, column: 34, scope: !1115)
!1118 = !DILocation(line: 1582, column: 2, scope: !1115)
!1119 = !DILocation(line: 1586, column: 23, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !1121, file: !243, line: 1586, column: 7)
!1121 = distinct !DILexicalBlock(scope: !1116, file: !243, line: 1583, column: 2)
!1122 = !DILocation(line: 1586, column: 7, scope: !1120)
!1123 = !DILocation(line: 1586, column: 26, scope: !1120)
!1124 = !DILocation(line: 1586, column: 7, scope: !1121)
!1125 = !DILocation(line: 1587, column: 4, scope: !1120)
!1126 = !DILocation(line: 1588, column: 55, scope: !1121)
!1127 = !DILocation(line: 1588, column: 57, scope: !1121)
!1128 = !DILocation(line: 1588, column: 45, scope: !1121)
!1129 = !DILocation(line: 1588, column: 29, scope: !1121)
!1130 = !DILocation(line: 1588, column: 48, scope: !1121)
!1131 = !DILocation(line: 1588, column: 3, scope: !1121)
!1132 = !DILocation(line: 1588, column: 53, scope: !1121)
!1133 = !DILocation(line: 1589, column: 2, scope: !1121)
!1134 = !DILocation(line: 1582, column: 41, scope: !1135)
!1135 = !DILexicalBlockFile(scope: !1116, file: !243, discriminator: 2)
!1136 = !DILocation(line: 1582, column: 2, scope: !1135)
!1137 = distinct !{!1137, !1138}
!1138 = !DILocation(line: 1582, column: 2, scope: !1092)
!1139 = !DILocation(line: 1590, column: 1, scope: !1092)
!1140 = distinct !DISubprogram(name: "ui_get_screen_size", scope: !243, file: !243, line: 1970, type: !1141, isLocal: false, isDefinition: true, scopeLine: 1971, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{null, !192, !192}
!1143 = !DILocalVariable(name: "width", arg: 1, scope: !1140, file: !243, line: 1970, type: !192)
!1144 = !DILocation(line: 1970, column: 28, scope: !1140)
!1145 = !DILocalVariable(name: "height", arg: 2, scope: !1140, file: !243, line: 1970, type: !192)
!1146 = !DILocation(line: 1970, column: 43, scope: !1140)
!1147 = !DILocation(line: 1972, column: 11, scope: !1140)
!1148 = !DILocation(line: 1972, column: 14, scope: !1140)
!1149 = !DILocation(line: 1972, column: 3, scope: !1140)
!1150 = !DILocation(line: 1972, column: 9, scope: !1140)
!1151 = !DILocation(line: 1973, column: 12, scope: !1140)
!1152 = !DILocation(line: 1973, column: 15, scope: !1140)
!1153 = !DILocation(line: 1973, column: 3, scope: !1140)
!1154 = !DILocation(line: 1973, column: 10, scope: !1140)
!1155 = !DILocation(line: 1974, column: 1, scope: !1140)
!1156 = distinct !DISubprogram(name: "ui_get_screen_size_from_percentage", scope: !243, file: !243, line: 1977, type: !1157, isLocal: false, isDefinition: true, scopeLine: 1978, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{null, !193, !193, !192, !192}
!1159 = !DILocalVariable(name: "pw", arg: 1, scope: !1156, file: !243, line: 1977, type: !193)
!1160 = !DILocation(line: 1977, column: 43, scope: !1156)
!1161 = !DILocalVariable(name: "ph", arg: 2, scope: !1156, file: !243, line: 1977, type: !193)
!1162 = !DILocation(line: 1977, column: 54, scope: !1156)
!1163 = !DILocalVariable(name: "width", arg: 3, scope: !1156, file: !243, line: 1977, type: !192)
!1164 = !DILocation(line: 1977, column: 66, scope: !1156)
!1165 = !DILocalVariable(name: "height", arg: 4, scope: !1156, file: !243, line: 1977, type: !192)
!1166 = !DILocation(line: 1977, column: 81, scope: !1156)
!1167 = !DILocalVariable(name: "sw", scope: !1156, file: !243, line: 1979, type: !193)
!1168 = !DILocation(line: 1979, column: 9, scope: !1156)
!1169 = !DILocalVariable(name: "sh", scope: !1156, file: !243, line: 1979, type: !193)
!1170 = !DILocation(line: 1979, column: 12, scope: !1156)
!1171 = !DILocation(line: 1980, column: 2, scope: !1156)
!1172 = !DILocation(line: 1981, column: 11, scope: !1156)
!1173 = !DILocation(line: 1981, column: 16, scope: !1156)
!1174 = !DILocation(line: 1981, column: 14, scope: !1156)
!1175 = !DILocation(line: 1981, column: 19, scope: !1156)
!1176 = !DILocation(line: 1981, column: 3, scope: !1156)
!1177 = !DILocation(line: 1981, column: 9, scope: !1156)
!1178 = !DILocation(line: 1982, column: 12, scope: !1156)
!1179 = !DILocation(line: 1982, column: 17, scope: !1156)
!1180 = !DILocation(line: 1982, column: 15, scope: !1156)
!1181 = !DILocation(line: 1982, column: 20, scope: !1156)
!1182 = !DILocation(line: 1982, column: 3, scope: !1156)
!1183 = !DILocation(line: 1982, column: 10, scope: !1156)
!1184 = !DILocation(line: 1983, column: 1, scope: !1156)
!1185 = distinct !DISubprogram(name: "ui_get_workarea_size", scope: !243, file: !243, line: 1986, type: !1141, isLocal: false, isDefinition: true, scopeLine: 1987, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!1186 = !DILocalVariable(name: "width", arg: 1, scope: !1185, file: !243, line: 1986, type: !192)
!1187 = !DILocation(line: 1986, column: 30, scope: !1185)
!1188 = !DILocalVariable(name: "height", arg: 2, scope: !1185, file: !243, line: 1986, type: !192)
!1189 = !DILocation(line: 1986, column: 45, scope: !1185)
!1190 = !DILocalVariable(name: "x", scope: !1185, file: !243, line: 1988, type: !193)
!1191 = !DILocation(line: 1988, column: 9, scope: !1185)
!1192 = !DILocalVariable(name: "y", scope: !1185, file: !243, line: 1988, type: !193)
!1193 = !DILocation(line: 1988, column: 12, scope: !1185)
!1194 = !DILocalVariable(name: "w", scope: !1185, file: !243, line: 1988, type: !193)
!1195 = !DILocation(line: 1988, column: 15, scope: !1185)
!1196 = !DILocalVariable(name: "h", scope: !1185, file: !243, line: 1988, type: !193)
!1197 = !DILocation(line: 1988, column: 18, scope: !1185)
!1198 = !DILocation(line: 1989, column: 6, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !1185, file: !243, line: 1989, column: 6)
!1200 = !DILocation(line: 1989, column: 43, scope: !1199)
!1201 = !DILocation(line: 1989, column: 6, scope: !1185)
!1202 = !DILocation(line: 1991, column: 12, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1199, file: !243, line: 1990, column: 2)
!1204 = !DILocation(line: 1991, column: 4, scope: !1203)
!1205 = !DILocation(line: 1991, column: 10, scope: !1203)
!1206 = !DILocation(line: 1992, column: 13, scope: !1203)
!1207 = !DILocation(line: 1992, column: 4, scope: !1203)
!1208 = !DILocation(line: 1992, column: 11, scope: !1203)
!1209 = !DILocation(line: 1993, column: 25, scope: !1203)
!1210 = !DILocation(line: 1994, column: 2, scope: !1203)
!1211 = !DILocation(line: 1997, column: 3, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1199, file: !243, line: 1996, column: 2)
!1213 = !DILocation(line: 1999, column: 22, scope: !1212)
!1214 = !DILocation(line: 1999, column: 29, scope: !1212)
!1215 = !DILocation(line: 1999, column: 3, scope: !1212)
!1216 = !DILocation(line: 2001, column: 1, scope: !1185)
!1217 = distinct !DISubprogram(name: "ui_deinit", scope: !243, file: !243, line: 2005, type: !254, isLocal: false, isDefinition: true, scopeLine: 2006, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!1218 = !DILocation(line: 2007, column: 2, scope: !1217)
!1219 = !DILocation(line: 2009, column: 6, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1217, file: !243, line: 2009, column: 6)
!1221 = !DILocation(line: 2009, column: 11, scope: !1220)
!1222 = !DILocation(line: 2009, column: 6, scope: !1217)
!1223 = !DILocation(line: 2010, column: 12, scope: !1220)
!1224 = !DILocation(line: 2010, column: 3, scope: !1220)
!1225 = !DILocation(line: 2012, column: 6, scope: !1226)
!1226 = distinct !DILexicalBlock(scope: !1217, file: !243, line: 2012, column: 6)
!1227 = !DILocation(line: 2012, column: 20, scope: !1226)
!1228 = !DILocation(line: 2012, column: 6, scope: !1217)
!1229 = !DILocation(line: 2013, column: 15, scope: !1226)
!1230 = !DILocation(line: 2013, column: 34, scope: !1226)
!1231 = !DILocation(line: 2013, column: 26, scope: !1226)
!1232 = !DILocation(line: 2013, column: 3, scope: !1226)
!1233 = !DILocation(line: 2015, column: 19, scope: !1217)
!1234 = !DILocation(line: 2015, column: 2, scope: !1217)
!1235 = !DILocation(line: 2017, column: 10, scope: !1217)
!1236 = !DILocation(line: 2017, column: 21, scope: !1217)
!1237 = !DILocation(line: 2017, column: 2, scope: !1217)
!1238 = !DILocation(line: 2018, column: 16, scope: !1217)
!1239 = !DILocation(line: 2018, column: 2, scope: !1217)
!1240 = !DILocation(line: 2019, column: 12, scope: !1217)
!1241 = !DILocation(line: 2020, column: 1, scope: !1217)
!1242 = distinct !DISubprogram(name: "ui_update_window_sizehints", scope: !243, file: !243, line: 2092, type: !1243, isLocal: false, isDefinition: true, scopeLine: 2093, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{null, !193, !193}
!1245 = !DILocalVariable(name: "width", arg: 1, scope: !1242, file: !243, line: 2092, type: !193)
!1246 = !DILocation(line: 2092, column: 35, scope: !1242)
!1247 = !DILocalVariable(name: "height", arg: 2, scope: !1242, file: !243, line: 2092, type: !193)
!1248 = !DILocation(line: 2092, column: 49, scope: !1242)
!1249 = !DILocalVariable(name: "sizehints", scope: !1242, file: !243, line: 2094, type: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64, align: 64)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "XSizeHints", file: !718, line: 94, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !718, line: 81, size: 640, align: 64, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1270, !1271, !1272, !1273}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1252, file: !718, line: 82, baseType: !178, size: 64, align: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1252, file: !718, line: 83, baseType: !45, size: 32, align: 32, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1252, file: !718, line: 83, baseType: !45, size: 32, align: 32, offset: 96)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1252, file: !718, line: 84, baseType: !45, size: 32, align: 32, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1252, file: !718, line: 84, baseType: !45, size: 32, align: 32, offset: 160)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "min_width", scope: !1252, file: !718, line: 85, baseType: !45, size: 32, align: 32, offset: 192)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "min_height", scope: !1252, file: !718, line: 85, baseType: !45, size: 32, align: 32, offset: 224)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "max_width", scope: !1252, file: !718, line: 86, baseType: !45, size: 32, align: 32, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "max_height", scope: !1252, file: !718, line: 86, baseType: !45, size: 32, align: 32, offset: 288)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "width_inc", scope: !1252, file: !718, line: 87, baseType: !45, size: 32, align: 32, offset: 320)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "height_inc", scope: !1252, file: !718, line: 87, baseType: !45, size: 32, align: 32, offset: 352)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "min_aspect", scope: !1252, file: !718, line: 91, baseType: !1266, size: 64, align: 32, offset: 384)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1252, file: !718, line: 88, size: 64, align: 32, elements: !1267)
!1267 = !{!1268, !1269}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1266, file: !718, line: 89, baseType: !45, size: 32, align: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1266, file: !718, line: 90, baseType: !45, size: 32, align: 32, offset: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "max_aspect", scope: !1252, file: !718, line: 91, baseType: !1266, size: 64, align: 32, offset: 448)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "base_width", scope: !1252, file: !718, line: 92, baseType: !45, size: 32, align: 32, offset: 512)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "base_height", scope: !1252, file: !718, line: 92, baseType: !45, size: 32, align: 32, offset: 544)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "win_gravity", scope: !1252, file: !718, line: 93, baseType: !45, size: 32, align: 32, offset: 576)
!1274 = !DILocation(line: 2094, column: 14, scope: !1242)
!1275 = !DILocation(line: 2095, column: 14, scope: !1242)
!1276 = !DILocation(line: 2095, column: 12, scope: !1242)
!1277 = !DILocation(line: 2096, column: 6, scope: !1278)
!1278 = distinct !DILexicalBlock(scope: !1242, file: !243, line: 2096, column: 6)
!1279 = !DILocation(line: 2096, column: 6, scope: !1242)
!1280 = !DILocation(line: 2098, column: 17, scope: !1281)
!1281 = distinct !DILexicalBlock(scope: !1278, file: !243, line: 2097, column: 2)
!1282 = !DILocation(line: 2098, column: 28, scope: !1281)
!1283 = !DILocation(line: 2098, column: 35, scope: !1281)
!1284 = !DILocation(line: 2098, column: 3, scope: !1281)
!1285 = !DILocation(line: 2099, column: 21, scope: !1281)
!1286 = !DILocation(line: 2099, column: 32, scope: !1281)
!1287 = !DILocation(line: 2099, column: 39, scope: !1281)
!1288 = !DILocation(line: 2099, column: 3, scope: !1281)
!1289 = !DILocation(line: 2100, column: 9, scope: !1281)
!1290 = !DILocation(line: 2100, column: 3, scope: !1281)
!1291 = !DILocation(line: 2101, column: 2, scope: !1281)
!1292 = !DILocation(line: 2102, column: 1, scope: !1242)
!1293 = distinct !DISubprogram(name: "get_sizehints", scope: !243, file: !243, line: 2062, type: !1294, isLocal: true, isDefinition: true, scopeLine: 2063, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{null, !1250, !193, !193}
!1296 = !DILocalVariable(name: "sizehints", arg: 1, scope: !1293, file: !243, line: 2062, type: !1250)
!1297 = !DILocation(line: 2062, column: 27, scope: !1293)
!1298 = !DILocalVariable(name: "width", arg: 2, scope: !1293, file: !243, line: 2062, type: !193)
!1299 = !DILocation(line: 2062, column: 45, scope: !1293)
!1300 = !DILocalVariable(name: "height", arg: 3, scope: !1293, file: !243, line: 2062, type: !193)
!1301 = !DILocation(line: 2062, column: 59, scope: !1293)
!1302 = !DILocation(line: 2064, column: 6, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !1293, file: !243, line: 2064, column: 6)
!1304 = !DILocation(line: 2064, column: 16, scope: !1303)
!1305 = !DILocation(line: 2064, column: 6, scope: !1293)
!1306 = !DILocation(line: 2065, column: 3, scope: !1303)
!1307 = !DILocation(line: 2069, column: 2, scope: !1293)
!1308 = !DILocation(line: 2069, column: 13, scope: !1293)
!1309 = !DILocation(line: 2069, column: 19, scope: !1293)
!1310 = !DILocation(line: 2072, column: 2, scope: !1293)
!1311 = !DILocation(line: 2072, column: 13, scope: !1293)
!1312 = !DILocation(line: 2072, column: 19, scope: !1293)
!1313 = !DILocation(line: 2073, column: 2, scope: !1293)
!1314 = !DILocation(line: 2073, column: 13, scope: !1293)
!1315 = !DILocation(line: 2073, column: 23, scope: !1293)
!1316 = !DILocation(line: 2074, column: 2, scope: !1293)
!1317 = !DILocation(line: 2074, column: 13, scope: !1293)
!1318 = !DILocation(line: 2074, column: 24, scope: !1293)
!1319 = !DILocation(line: 2077, column: 2, scope: !1293)
!1320 = !DILocation(line: 2077, column: 13, scope: !1293)
!1321 = !DILocation(line: 2077, column: 19, scope: !1293)
!1322 = !DILocation(line: 2078, column: 2, scope: !1293)
!1323 = !DILocation(line: 2078, column: 13, scope: !1293)
!1324 = !DILocation(line: 2078, column: 23, scope: !1293)
!1325 = !DILocation(line: 2079, column: 2, scope: !1293)
!1326 = !DILocation(line: 2079, column: 13, scope: !1293)
!1327 = !DILocation(line: 2079, column: 24, scope: !1293)
!1328 = !DILocation(line: 2081, column: 6, scope: !1329)
!1329 = distinct !DILexicalBlock(scope: !1293, file: !243, line: 2081, column: 6)
!1330 = !DILocation(line: 2081, column: 21, scope: !1329)
!1331 = !DILocation(line: 2081, column: 25, scope: !1332)
!1332 = !DILexicalBlockFile(scope: !1329, file: !243, discriminator: 1)
!1333 = !DILocation(line: 2081, column: 6, scope: !1332)
!1334 = !DILocation(line: 2085, column: 3, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1329, file: !243, line: 2082, column: 2)
!1336 = !DILocation(line: 2085, column: 14, scope: !1335)
!1337 = !DILocation(line: 2085, column: 20, scope: !1335)
!1338 = !DILocation(line: 2086, column: 49, scope: !1335)
!1339 = !DILocation(line: 2086, column: 26, scope: !1335)
!1340 = !DILocation(line: 2086, column: 37, scope: !1335)
!1341 = !DILocation(line: 2086, column: 47, scope: !1335)
!1342 = !DILocation(line: 2086, column: 3, scope: !1335)
!1343 = !DILocation(line: 2086, column: 14, scope: !1335)
!1344 = !DILocation(line: 2086, column: 24, scope: !1335)
!1345 = !DILocation(line: 2087, column: 51, scope: !1335)
!1346 = !DILocation(line: 2087, column: 27, scope: !1335)
!1347 = !DILocation(line: 2087, column: 38, scope: !1335)
!1348 = !DILocation(line: 2087, column: 49, scope: !1335)
!1349 = !DILocation(line: 2087, column: 3, scope: !1335)
!1350 = !DILocation(line: 2087, column: 14, scope: !1335)
!1351 = !DILocation(line: 2087, column: 25, scope: !1335)
!1352 = !DILocation(line: 2088, column: 2, scope: !1335)
!1353 = !DILocation(line: 2089, column: 1, scope: !1293)
!1354 = distinct !DISubprogram(name: "ui_create_window", scope: !243, file: !243, line: 2105, type: !1355, isLocal: false, isDefinition: true, scopeLine: 2106, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!44, !193, !193}
!1357 = !DILocalVariable(name: "width", arg: 1, scope: !1354, file: !243, line: 2105, type: !193)
!1358 = !DILocation(line: 2105, column: 25, scope: !1354)
!1359 = !DILocalVariable(name: "height", arg: 2, scope: !1354, file: !243, line: 2105, type: !193)
!1360 = !DILocation(line: 2105, column: 39, scope: !1354)
!1361 = !DILocalVariable(name: "null_pointer_mask", scope: !1354, file: !243, line: 2107, type: !1362)
!1362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 8, align: 8, elements: !1363)
!1363 = !{!1364}
!1364 = !DISubrange(count: 1)
!1365 = !DILocation(line: 2107, column: 8, scope: !1354)
!1366 = !DILocalVariable(name: "null_pointer_data", scope: !1354, file: !243, line: 2108, type: !1367)
!1367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 192, align: 8, elements: !1368)
!1368 = !{!1369}
!1369 = !DISubrange(count: 24)
!1370 = !DILocation(line: 2108, column: 8, scope: !1354)
!1371 = !DILocalVariable(name: "attribs", scope: !1354, file: !243, line: 2110, type: !1372)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "XSetWindowAttributes", file: !50, line: 306, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 290, size: 896, align: 64, elements: !1374)
!1374 = !{!1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "background_pixmap", scope: !1373, file: !50, line: 291, baseType: !189, size: 64, align: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "background_pixel", scope: !1373, file: !50, line: 292, baseType: !81, size: 64, align: 64, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "border_pixmap", scope: !1373, file: !50, line: 293, baseType: !189, size: 64, align: 64, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "border_pixel", scope: !1373, file: !50, line: 294, baseType: !81, size: 64, align: 64, offset: 192)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "bit_gravity", scope: !1373, file: !50, line: 295, baseType: !45, size: 32, align: 32, offset: 256)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "win_gravity", scope: !1373, file: !50, line: 296, baseType: !45, size: 32, align: 32, offset: 288)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "backing_store", scope: !1373, file: !50, line: 297, baseType: !45, size: 32, align: 32, offset: 320)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "backing_planes", scope: !1373, file: !50, line: 298, baseType: !81, size: 64, align: 64, offset: 384)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "backing_pixel", scope: !1373, file: !50, line: 299, baseType: !81, size: 64, align: 64, offset: 448)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "save_under", scope: !1373, file: !50, line: 300, baseType: !45, size: 32, align: 32, offset: 512)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "event_mask", scope: !1373, file: !50, line: 301, baseType: !178, size: 64, align: 64, offset: 576)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "do_not_propagate_mask", scope: !1373, file: !50, line: 302, baseType: !178, size: 64, align: 64, offset: 640)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "override_redirect", scope: !1373, file: !50, line: 303, baseType: !45, size: 32, align: 32, offset: 704)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !1373, file: !50, line: 304, baseType: !170, size: 64, align: 64, offset: 768)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1373, file: !50, line: 305, baseType: !187, size: 64, align: 64, offset: 832)
!1390 = !DILocation(line: 2110, column: 23, scope: !1354)
!1391 = !DILocalVariable(name: "classhints", scope: !1354, file: !243, line: 2111, type: !1392)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64, align: 64)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "XClassHint", file: !718, line: 192, baseType: !1394)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !718, line: 189, size: 128, align: 64, elements: !1395)
!1395 = !{!1396, !1397}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "res_name", scope: !1394, file: !718, line: 190, baseType: !68, size: 64, align: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "res_class", scope: !1394, file: !718, line: 191, baseType: !68, size: 64, align: 64, offset: 64)
!1398 = !DILocation(line: 2111, column: 14, scope: !1354)
!1399 = !DILocalVariable(name: "sizehints", scope: !1354, file: !243, line: 2112, type: !1250)
!1400 = !DILocation(line: 2112, column: 14, scope: !1354)
!1401 = !DILocalVariable(name: "value_mask", scope: !1354, file: !243, line: 2113, type: !81)
!1402 = !DILocation(line: 2113, column: 16, scope: !1354)
!1403 = !DILocalVariable(name: "input_mask", scope: !1354, file: !243, line: 2114, type: !178)
!1404 = !DILocation(line: 2114, column: 7, scope: !1354)
!1405 = !DILocalVariable(name: "ic_input_mask", scope: !1354, file: !243, line: 2114, type: !178)
!1406 = !DILocation(line: 2114, column: 19, scope: !1354)
!1407 = !DILocalVariable(name: "xevent", scope: !1354, file: !243, line: 2115, type: !1408)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "XEvent", file: !50, line: 1009, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "_XEvent", file: !50, line: 973, size: 1536, align: 64, elements: !1410)
!1410 = !{!1411, !1412, !1421, !1422, !1441, !1460, !1481, !1492, !1506, !1523, !1534, !1544, !1560, !1570, !1581, !1592, !1602, !1616, !1633, !1645, !1656, !1674, !1685, !1696, !1708, !1719, !1733, !1746, !1758, !1784, !1796, !1797, !1808, !1818, !1830}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1409, file: !50, line: 974, baseType: !45, size: 32, align: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "xany", scope: !1409, file: !50, line: 975, baseType: !1413, size: 320, align: 64)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "XAnyEvent", file: !50, line: 940, baseType: !1414)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 934, size: 320, align: 64, elements: !1415)
!1415 = !{!1416, !1417, !1418, !1419, !1420}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1414, file: !50, line: 935, baseType: !45, size: 32, align: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1414, file: !50, line: 936, baseType: !81, size: 64, align: 64, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1414, file: !50, line: 937, baseType: !45, size: 32, align: 32, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1414, file: !50, line: 938, baseType: !223, size: 64, align: 64, offset: 192)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1414, file: !50, line: 939, baseType: !136, size: 64, align: 64, offset: 256)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "xkey", scope: !1409, file: !50, line: 976, baseType: !216, size: 768, align: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "xbutton", scope: !1409, file: !50, line: 977, baseType: !1423, size: 768, align: 64)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "XButtonEvent", file: !50, line: 589, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 575, size: 768, align: 64, elements: !1425)
!1425 = !{!1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1424, file: !50, line: 576, baseType: !45, size: 32, align: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1424, file: !50, line: 577, baseType: !81, size: 64, align: 64, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1424, file: !50, line: 578, baseType: !45, size: 32, align: 32, offset: 128)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1424, file: !50, line: 579, baseType: !223, size: 64, align: 64, offset: 192)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1424, file: !50, line: 580, baseType: !136, size: 64, align: 64, offset: 256)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1424, file: !50, line: 581, baseType: !136, size: 64, align: 64, offset: 320)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "subwindow", scope: !1424, file: !50, line: 582, baseType: !136, size: 64, align: 64, offset: 384)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1424, file: !50, line: 583, baseType: !229, size: 64, align: 64, offset: 448)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1424, file: !50, line: 584, baseType: !45, size: 32, align: 32, offset: 512)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1424, file: !50, line: 584, baseType: !45, size: 32, align: 32, offset: 544)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "x_root", scope: !1424, file: !50, line: 585, baseType: !45, size: 32, align: 32, offset: 576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "y_root", scope: !1424, file: !50, line: 585, baseType: !45, size: 32, align: 32, offset: 608)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1424, file: !50, line: 586, baseType: !117, size: 32, align: 32, offset: 640)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !1424, file: !50, line: 587, baseType: !117, size: 32, align: 32, offset: 672)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "same_screen", scope: !1424, file: !50, line: 588, baseType: !45, size: 32, align: 32, offset: 704)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "xmotion", scope: !1409, file: !50, line: 978, baseType: !1442, size: 768, align: 64)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMotionEvent", file: !50, line: 607, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 593, size: 768, align: 64, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1443, file: !50, line: 594, baseType: !45, size: 32, align: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1443, file: !50, line: 595, baseType: !81, size: 64, align: 64, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1443, file: !50, line: 596, baseType: !45, size: 32, align: 32, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1443, file: !50, line: 597, baseType: !223, size: 64, align: 64, offset: 192)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1443, file: !50, line: 598, baseType: !136, size: 64, align: 64, offset: 256)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1443, file: !50, line: 599, baseType: !136, size: 64, align: 64, offset: 320)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "subwindow", scope: !1443, file: !50, line: 600, baseType: !136, size: 64, align: 64, offset: 384)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1443, file: !50, line: 601, baseType: !229, size: 64, align: 64, offset: 448)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1443, file: !50, line: 602, baseType: !45, size: 32, align: 32, offset: 512)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1443, file: !50, line: 602, baseType: !45, size: 32, align: 32, offset: 544)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "x_root", scope: !1443, file: !50, line: 603, baseType: !45, size: 32, align: 32, offset: 576)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "y_root", scope: !1443, file: !50, line: 603, baseType: !45, size: 32, align: 32, offset: 608)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1443, file: !50, line: 604, baseType: !117, size: 32, align: 32, offset: 640)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "is_hint", scope: !1443, file: !50, line: 605, baseType: !69, size: 8, align: 8, offset: 672)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "same_screen", scope: !1443, file: !50, line: 606, baseType: !45, size: 32, align: 32, offset: 704)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "xcrossing", scope: !1409, file: !50, line: 979, baseType: !1461, size: 832, align: 64)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "XCrossingEvent", file: !50, line: 630, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 610, size: 832, align: 64, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1462, file: !50, line: 611, baseType: !45, size: 32, align: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1462, file: !50, line: 612, baseType: !81, size: 64, align: 64, offset: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1462, file: !50, line: 613, baseType: !45, size: 32, align: 32, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1462, file: !50, line: 614, baseType: !223, size: 64, align: 64, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1462, file: !50, line: 615, baseType: !136, size: 64, align: 64, offset: 256)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1462, file: !50, line: 616, baseType: !136, size: 64, align: 64, offset: 320)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "subwindow", scope: !1462, file: !50, line: 617, baseType: !136, size: 64, align: 64, offset: 384)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1462, file: !50, line: 618, baseType: !229, size: 64, align: 64, offset: 448)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1462, file: !50, line: 619, baseType: !45, size: 32, align: 32, offset: 512)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1462, file: !50, line: 619, baseType: !45, size: 32, align: 32, offset: 544)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "x_root", scope: !1462, file: !50, line: 620, baseType: !45, size: 32, align: 32, offset: 576)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "y_root", scope: !1462, file: !50, line: 620, baseType: !45, size: 32, align: 32, offset: 608)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1462, file: !50, line: 621, baseType: !45, size: 32, align: 32, offset: 640)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "detail", scope: !1462, file: !50, line: 622, baseType: !45, size: 32, align: 32, offset: 672)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "same_screen", scope: !1462, file: !50, line: 627, baseType: !45, size: 32, align: 32, offset: 704)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "focus", scope: !1462, file: !50, line: 628, baseType: !45, size: 32, align: 32, offset: 736)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1462, file: !50, line: 629, baseType: !117, size: 32, align: 32, offset: 768)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "xfocus", scope: !1409, file: !50, line: 980, baseType: !1482, size: 384, align: 64)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "XFocusChangeEvent", file: !50, line: 648, baseType: !1483)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 634, size: 384, align: 64, elements: !1484)
!1484 = !{!1485, !1486, !1487, !1488, !1489, !1490, !1491}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1483, file: !50, line: 635, baseType: !45, size: 32, align: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1483, file: !50, line: 636, baseType: !81, size: 64, align: 64, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1483, file: !50, line: 637, baseType: !45, size: 32, align: 32, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1483, file: !50, line: 638, baseType: !223, size: 64, align: 64, offset: 192)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1483, file: !50, line: 639, baseType: !136, size: 64, align: 64, offset: 256)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1483, file: !50, line: 640, baseType: !45, size: 32, align: 32, offset: 320)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "detail", scope: !1483, file: !50, line: 642, baseType: !45, size: 32, align: 32, offset: 352)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "xexpose", scope: !1409, file: !50, line: 981, baseType: !1493, size: 512, align: 64)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "XExposeEvent", file: !50, line: 671, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 662, size: 512, align: 64, elements: !1495)
!1495 = !{!1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1494, file: !50, line: 663, baseType: !45, size: 32, align: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1494, file: !50, line: 664, baseType: !81, size: 64, align: 64, offset: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1494, file: !50, line: 665, baseType: !45, size: 32, align: 32, offset: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1494, file: !50, line: 666, baseType: !223, size: 64, align: 64, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1494, file: !50, line: 667, baseType: !136, size: 64, align: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1494, file: !50, line: 668, baseType: !45, size: 32, align: 32, offset: 320)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1494, file: !50, line: 668, baseType: !45, size: 32, align: 32, offset: 352)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1494, file: !50, line: 669, baseType: !45, size: 32, align: 32, offset: 384)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1494, file: !50, line: 669, baseType: !45, size: 32, align: 32, offset: 416)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1494, file: !50, line: 670, baseType: !45, size: 32, align: 32, offset: 448)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "xgraphicsexpose", scope: !1409, file: !50, line: 982, baseType: !1507, size: 576, align: 64)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "XGraphicsExposeEvent", file: !50, line: 684, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 673, size: 576, align: 64, elements: !1509)
!1509 = !{!1510, !1511, !1512, !1513, !1514, !1516, !1517, !1518, !1519, !1520, !1521, !1522}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1508, file: !50, line: 674, baseType: !45, size: 32, align: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1508, file: !50, line: 675, baseType: !81, size: 64, align: 64, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1508, file: !50, line: 676, baseType: !45, size: 32, align: 32, offset: 128)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1508, file: !50, line: 677, baseType: !223, size: 64, align: 64, offset: 192)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "drawable", scope: !1508, file: !50, line: 678, baseType: !1515, size: 64, align: 64, offset: 256)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "Drawable", file: !80, line: 97, baseType: !79)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1508, file: !50, line: 679, baseType: !45, size: 32, align: 32, offset: 320)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1508, file: !50, line: 679, baseType: !45, size: 32, align: 32, offset: 352)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1508, file: !50, line: 680, baseType: !45, size: 32, align: 32, offset: 384)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1508, file: !50, line: 680, baseType: !45, size: 32, align: 32, offset: 416)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1508, file: !50, line: 681, baseType: !45, size: 32, align: 32, offset: 448)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "major_code", scope: !1508, file: !50, line: 682, baseType: !45, size: 32, align: 32, offset: 480)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "minor_code", scope: !1508, file: !50, line: 683, baseType: !45, size: 32, align: 32, offset: 512)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "xnoexpose", scope: !1409, file: !50, line: 983, baseType: !1524, size: 384, align: 64)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "XNoExposeEvent", file: !50, line: 694, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 686, size: 384, align: 64, elements: !1526)
!1526 = !{!1527, !1528, !1529, !1530, !1531, !1532, !1533}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1525, file: !50, line: 687, baseType: !45, size: 32, align: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1525, file: !50, line: 688, baseType: !81, size: 64, align: 64, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1525, file: !50, line: 689, baseType: !45, size: 32, align: 32, offset: 128)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1525, file: !50, line: 690, baseType: !223, size: 64, align: 64, offset: 192)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "drawable", scope: !1525, file: !50, line: 691, baseType: !1515, size: 64, align: 64, offset: 256)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "major_code", scope: !1525, file: !50, line: 692, baseType: !45, size: 32, align: 32, offset: 320)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "minor_code", scope: !1525, file: !50, line: 693, baseType: !45, size: 32, align: 32, offset: 352)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "xvisibility", scope: !1409, file: !50, line: 984, baseType: !1535, size: 384, align: 64)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "XVisibilityEvent", file: !50, line: 703, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 696, size: 384, align: 64, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1536, file: !50, line: 697, baseType: !45, size: 32, align: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1536, file: !50, line: 698, baseType: !81, size: 64, align: 64, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1536, file: !50, line: 699, baseType: !45, size: 32, align: 32, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1536, file: !50, line: 700, baseType: !223, size: 64, align: 64, offset: 192)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1536, file: !50, line: 701, baseType: !136, size: 64, align: 64, offset: 256)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1536, file: !50, line: 702, baseType: !45, size: 32, align: 32, offset: 320)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "xcreatewindow", scope: !1409, file: !50, line: 985, baseType: !1545, size: 576, align: 64)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "XCreateWindowEvent", file: !50, line: 716, baseType: !1546)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 705, size: 576, align: 64, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1546, file: !50, line: 706, baseType: !45, size: 32, align: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1546, file: !50, line: 707, baseType: !81, size: 64, align: 64, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1546, file: !50, line: 708, baseType: !45, size: 32, align: 32, offset: 128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1546, file: !50, line: 709, baseType: !223, size: 64, align: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1546, file: !50, line: 710, baseType: !136, size: 64, align: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1546, file: !50, line: 711, baseType: !136, size: 64, align: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1546, file: !50, line: 712, baseType: !45, size: 32, align: 32, offset: 384)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1546, file: !50, line: 712, baseType: !45, size: 32, align: 32, offset: 416)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1546, file: !50, line: 713, baseType: !45, size: 32, align: 32, offset: 448)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1546, file: !50, line: 713, baseType: !45, size: 32, align: 32, offset: 480)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "border_width", scope: !1546, file: !50, line: 714, baseType: !45, size: 32, align: 32, offset: 512)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "override_redirect", scope: !1546, file: !50, line: 715, baseType: !45, size: 32, align: 32, offset: 544)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "xdestroywindow", scope: !1409, file: !50, line: 986, baseType: !1561, size: 384, align: 64)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "XDestroyWindowEvent", file: !50, line: 725, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 718, size: 384, align: 64, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1562, file: !50, line: 719, baseType: !45, size: 32, align: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1562, file: !50, line: 720, baseType: !81, size: 64, align: 64, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1562, file: !50, line: 721, baseType: !45, size: 32, align: 32, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1562, file: !50, line: 722, baseType: !223, size: 64, align: 64, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1562, file: !50, line: 723, baseType: !136, size: 64, align: 64, offset: 256)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1562, file: !50, line: 724, baseType: !136, size: 64, align: 64, offset: 320)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "xunmap", scope: !1409, file: !50, line: 987, baseType: !1571, size: 448, align: 64)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "XUnmapEvent", file: !50, line: 735, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 727, size: 448, align: 64, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1580}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1572, file: !50, line: 728, baseType: !45, size: 32, align: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1572, file: !50, line: 729, baseType: !81, size: 64, align: 64, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1572, file: !50, line: 730, baseType: !45, size: 32, align: 32, offset: 128)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1572, file: !50, line: 731, baseType: !223, size: 64, align: 64, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1572, file: !50, line: 732, baseType: !136, size: 64, align: 64, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1572, file: !50, line: 733, baseType: !136, size: 64, align: 64, offset: 320)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "from_configure", scope: !1572, file: !50, line: 734, baseType: !45, size: 32, align: 32, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "xmap", scope: !1409, file: !50, line: 988, baseType: !1582, size: 448, align: 64)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMapEvent", file: !50, line: 745, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 737, size: 448, align: 64, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588, !1589, !1590, !1591}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1583, file: !50, line: 738, baseType: !45, size: 32, align: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1583, file: !50, line: 739, baseType: !81, size: 64, align: 64, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1583, file: !50, line: 740, baseType: !45, size: 32, align: 32, offset: 128)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1583, file: !50, line: 741, baseType: !223, size: 64, align: 64, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1583, file: !50, line: 742, baseType: !136, size: 64, align: 64, offset: 256)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1583, file: !50, line: 743, baseType: !136, size: 64, align: 64, offset: 320)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "override_redirect", scope: !1583, file: !50, line: 744, baseType: !45, size: 32, align: 32, offset: 384)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "xmaprequest", scope: !1409, file: !50, line: 989, baseType: !1593, size: 384, align: 64)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMapRequestEvent", file: !50, line: 754, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 747, size: 384, align: 64, elements: !1595)
!1595 = !{!1596, !1597, !1598, !1599, !1600, !1601}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1594, file: !50, line: 748, baseType: !45, size: 32, align: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1594, file: !50, line: 749, baseType: !81, size: 64, align: 64, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1594, file: !50, line: 750, baseType: !45, size: 32, align: 32, offset: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1594, file: !50, line: 751, baseType: !223, size: 64, align: 64, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1594, file: !50, line: 752, baseType: !136, size: 64, align: 64, offset: 256)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1594, file: !50, line: 753, baseType: !136, size: 64, align: 64, offset: 320)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "xreparent", scope: !1409, file: !50, line: 990, baseType: !1603, size: 576, align: 64)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "XReparentEvent", file: !50, line: 766, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 756, size: 576, align: 64, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1604, file: !50, line: 757, baseType: !45, size: 32, align: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1604, file: !50, line: 758, baseType: !81, size: 64, align: 64, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1604, file: !50, line: 759, baseType: !45, size: 32, align: 32, offset: 128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1604, file: !50, line: 760, baseType: !223, size: 64, align: 64, offset: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1604, file: !50, line: 761, baseType: !136, size: 64, align: 64, offset: 256)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1604, file: !50, line: 762, baseType: !136, size: 64, align: 64, offset: 320)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1604, file: !50, line: 763, baseType: !136, size: 64, align: 64, offset: 384)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1604, file: !50, line: 764, baseType: !45, size: 32, align: 32, offset: 448)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1604, file: !50, line: 764, baseType: !45, size: 32, align: 32, offset: 480)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "override_redirect", scope: !1604, file: !50, line: 765, baseType: !45, size: 32, align: 32, offset: 512)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "xconfigure", scope: !1409, file: !50, line: 991, baseType: !1617, size: 704, align: 64)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "XConfigureEvent", file: !50, line: 780, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 768, size: 704, align: 64, elements: !1619)
!1619 = !{!1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1618, file: !50, line: 769, baseType: !45, size: 32, align: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1618, file: !50, line: 770, baseType: !81, size: 64, align: 64, offset: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1618, file: !50, line: 771, baseType: !45, size: 32, align: 32, offset: 128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1618, file: !50, line: 772, baseType: !223, size: 64, align: 64, offset: 192)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1618, file: !50, line: 773, baseType: !136, size: 64, align: 64, offset: 256)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1618, file: !50, line: 774, baseType: !136, size: 64, align: 64, offset: 320)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1618, file: !50, line: 775, baseType: !45, size: 32, align: 32, offset: 384)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1618, file: !50, line: 775, baseType: !45, size: 32, align: 32, offset: 416)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1618, file: !50, line: 776, baseType: !45, size: 32, align: 32, offset: 448)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1618, file: !50, line: 776, baseType: !45, size: 32, align: 32, offset: 480)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "border_width", scope: !1618, file: !50, line: 777, baseType: !45, size: 32, align: 32, offset: 512)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "above", scope: !1618, file: !50, line: 778, baseType: !136, size: 64, align: 64, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "override_redirect", scope: !1618, file: !50, line: 779, baseType: !45, size: 32, align: 32, offset: 640)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "xgravity", scope: !1409, file: !50, line: 992, baseType: !1634, size: 448, align: 64)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "XGravityEvent", file: !50, line: 790, baseType: !1635)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 782, size: 448, align: 64, elements: !1636)
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1635, file: !50, line: 783, baseType: !45, size: 32, align: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1635, file: !50, line: 784, baseType: !81, size: 64, align: 64, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1635, file: !50, line: 785, baseType: !45, size: 32, align: 32, offset: 128)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1635, file: !50, line: 786, baseType: !223, size: 64, align: 64, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1635, file: !50, line: 787, baseType: !136, size: 64, align: 64, offset: 256)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1635, file: !50, line: 788, baseType: !136, size: 64, align: 64, offset: 320)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1635, file: !50, line: 789, baseType: !45, size: 32, align: 32, offset: 384)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1635, file: !50, line: 789, baseType: !45, size: 32, align: 32, offset: 416)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "xresizerequest", scope: !1409, file: !50, line: 993, baseType: !1646, size: 384, align: 64)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "XResizeRequestEvent", file: !50, line: 799, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 792, size: 384, align: 64, elements: !1648)
!1648 = !{!1649, !1650, !1651, !1652, !1653, !1654, !1655}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1647, file: !50, line: 793, baseType: !45, size: 32, align: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1647, file: !50, line: 794, baseType: !81, size: 64, align: 64, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1647, file: !50, line: 795, baseType: !45, size: 32, align: 32, offset: 128)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1647, file: !50, line: 796, baseType: !223, size: 64, align: 64, offset: 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1647, file: !50, line: 797, baseType: !136, size: 64, align: 64, offset: 256)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1647, file: !50, line: 798, baseType: !45, size: 32, align: 32, offset: 320)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1647, file: !50, line: 798, baseType: !45, size: 32, align: 32, offset: 352)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "xconfigurerequest", scope: !1409, file: !50, line: 994, baseType: !1657, size: 768, align: 64)
!1657 = !DIDerivedType(tag: DW_TAG_typedef, name: "XConfigureRequestEvent", file: !50, line: 814, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 801, size: 768, align: 64, elements: !1659)
!1659 = !{!1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1658, file: !50, line: 802, baseType: !45, size: 32, align: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1658, file: !50, line: 803, baseType: !81, size: 64, align: 64, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1658, file: !50, line: 804, baseType: !45, size: 32, align: 32, offset: 128)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1658, file: !50, line: 805, baseType: !223, size: 64, align: 64, offset: 192)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1658, file: !50, line: 806, baseType: !136, size: 64, align: 64, offset: 256)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1658, file: !50, line: 807, baseType: !136, size: 64, align: 64, offset: 320)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1658, file: !50, line: 808, baseType: !45, size: 32, align: 32, offset: 384)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1658, file: !50, line: 808, baseType: !45, size: 32, align: 32, offset: 416)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1658, file: !50, line: 809, baseType: !45, size: 32, align: 32, offset: 448)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1658, file: !50, line: 809, baseType: !45, size: 32, align: 32, offset: 480)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "border_width", scope: !1658, file: !50, line: 810, baseType: !45, size: 32, align: 32, offset: 512)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "above", scope: !1658, file: !50, line: 811, baseType: !136, size: 64, align: 64, offset: 576)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "detail", scope: !1658, file: !50, line: 812, baseType: !45, size: 32, align: 32, offset: 640)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "value_mask", scope: !1658, file: !50, line: 813, baseType: !81, size: 64, align: 64, offset: 704)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "xcirculate", scope: !1409, file: !50, line: 995, baseType: !1675, size: 448, align: 64)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "XCirculateEvent", file: !50, line: 824, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 816, size: 448, align: 64, elements: !1677)
!1677 = !{!1678, !1679, !1680, !1681, !1682, !1683, !1684}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1676, file: !50, line: 817, baseType: !45, size: 32, align: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1676, file: !50, line: 818, baseType: !81, size: 64, align: 64, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1676, file: !50, line: 819, baseType: !45, size: 32, align: 32, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1676, file: !50, line: 820, baseType: !223, size: 64, align: 64, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1676, file: !50, line: 821, baseType: !136, size: 64, align: 64, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1676, file: !50, line: 822, baseType: !136, size: 64, align: 64, offset: 320)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "place", scope: !1676, file: !50, line: 823, baseType: !45, size: 32, align: 32, offset: 384)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "xcirculaterequest", scope: !1409, file: !50, line: 996, baseType: !1686, size: 448, align: 64)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "XCirculateRequestEvent", file: !50, line: 834, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 826, size: 448, align: 64, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1692, !1693, !1694, !1695}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1687, file: !50, line: 827, baseType: !45, size: 32, align: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1687, file: !50, line: 828, baseType: !81, size: 64, align: 64, offset: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1687, file: !50, line: 829, baseType: !45, size: 32, align: 32, offset: 128)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1687, file: !50, line: 830, baseType: !223, size: 64, align: 64, offset: 192)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1687, file: !50, line: 831, baseType: !136, size: 64, align: 64, offset: 256)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1687, file: !50, line: 832, baseType: !136, size: 64, align: 64, offset: 320)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "place", scope: !1687, file: !50, line: 833, baseType: !45, size: 32, align: 32, offset: 384)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "xproperty", scope: !1409, file: !50, line: 997, baseType: !1697, size: 512, align: 64)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPropertyEvent", file: !50, line: 845, baseType: !1698)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 836, size: 512, align: 64, elements: !1699)
!1699 = !{!1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1698, file: !50, line: 837, baseType: !45, size: 32, align: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1698, file: !50, line: 838, baseType: !81, size: 64, align: 64, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1698, file: !50, line: 839, baseType: !45, size: 32, align: 32, offset: 128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1698, file: !50, line: 840, baseType: !223, size: 64, align: 64, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1698, file: !50, line: 841, baseType: !136, size: 64, align: 64, offset: 256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "atom", scope: !1698, file: !50, line: 842, baseType: !214, size: 64, align: 64, offset: 320)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1698, file: !50, line: 843, baseType: !229, size: 64, align: 64, offset: 384)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1698, file: !50, line: 844, baseType: !45, size: 32, align: 32, offset: 448)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "xselectionclear", scope: !1409, file: !50, line: 998, baseType: !1709, size: 448, align: 64)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "XSelectionClearEvent", file: !50, line: 855, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 847, size: 448, align: 64, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1716, !1717, !1718}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1710, file: !50, line: 848, baseType: !45, size: 32, align: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1710, file: !50, line: 849, baseType: !81, size: 64, align: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1710, file: !50, line: 850, baseType: !45, size: 32, align: 32, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1710, file: !50, line: 851, baseType: !223, size: 64, align: 64, offset: 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1710, file: !50, line: 852, baseType: !136, size: 64, align: 64, offset: 256)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "selection", scope: !1710, file: !50, line: 853, baseType: !214, size: 64, align: 64, offset: 320)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1710, file: !50, line: 854, baseType: !229, size: 64, align: 64, offset: 384)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "xselectionrequest", scope: !1409, file: !50, line: 999, baseType: !1720, size: 640, align: 64)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "XSelectionRequestEvent", file: !50, line: 868, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 857, size: 640, align: 64, elements: !1722)
!1722 = !{!1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1721, file: !50, line: 858, baseType: !45, size: 32, align: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1721, file: !50, line: 859, baseType: !81, size: 64, align: 64, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1721, file: !50, line: 860, baseType: !45, size: 32, align: 32, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1721, file: !50, line: 861, baseType: !223, size: 64, align: 64, offset: 192)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1721, file: !50, line: 862, baseType: !136, size: 64, align: 64, offset: 256)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "requestor", scope: !1721, file: !50, line: 863, baseType: !136, size: 64, align: 64, offset: 320)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "selection", scope: !1721, file: !50, line: 864, baseType: !214, size: 64, align: 64, offset: 384)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !1721, file: !50, line: 865, baseType: !214, size: 64, align: 64, offset: 448)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !1721, file: !50, line: 866, baseType: !214, size: 64, align: 64, offset: 512)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1721, file: !50, line: 867, baseType: !229, size: 64, align: 64, offset: 576)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "xselection", scope: !1409, file: !50, line: 1000, baseType: !1734, size: 576, align: 64)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "XSelectionEvent", file: !50, line: 880, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 870, size: 576, align: 64, elements: !1736)
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1735, file: !50, line: 871, baseType: !45, size: 32, align: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1735, file: !50, line: 872, baseType: !81, size: 64, align: 64, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1735, file: !50, line: 873, baseType: !45, size: 32, align: 32, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1735, file: !50, line: 874, baseType: !223, size: 64, align: 64, offset: 192)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "requestor", scope: !1735, file: !50, line: 875, baseType: !136, size: 64, align: 64, offset: 256)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "selection", scope: !1735, file: !50, line: 876, baseType: !214, size: 64, align: 64, offset: 320)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !1735, file: !50, line: 877, baseType: !214, size: 64, align: 64, offset: 384)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !1735, file: !50, line: 878, baseType: !214, size: 64, align: 64, offset: 448)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1735, file: !50, line: 879, baseType: !229, size: 64, align: 64, offset: 512)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "xcolormap", scope: !1409, file: !50, line: 1001, baseType: !1747, size: 448, align: 64)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "XColormapEvent", file: !50, line: 895, baseType: !1748)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 882, size: 448, align: 64, elements: !1749)
!1749 = !{!1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1748, file: !50, line: 883, baseType: !45, size: 32, align: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1748, file: !50, line: 884, baseType: !81, size: 64, align: 64, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1748, file: !50, line: 885, baseType: !45, size: 32, align: 32, offset: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1748, file: !50, line: 886, baseType: !223, size: 64, align: 64, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1748, file: !50, line: 887, baseType: !136, size: 64, align: 64, offset: 256)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !1748, file: !50, line: 888, baseType: !170, size: 64, align: 64, offset: 320)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !1748, file: !50, line: 892, baseType: !45, size: 32, align: 32, offset: 384)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1748, file: !50, line: 894, baseType: !45, size: 32, align: 32, offset: 416)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "xclient", scope: !1409, file: !50, line: 1002, baseType: !1759, size: 768, align: 64)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "XClientMessageEvent", file: !50, line: 910, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 897, size: 768, align: 64, elements: !1761)
!1761 = !{!1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1760, file: !50, line: 898, baseType: !45, size: 32, align: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1760, file: !50, line: 899, baseType: !81, size: 64, align: 64, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1760, file: !50, line: 900, baseType: !45, size: 32, align: 32, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1760, file: !50, line: 901, baseType: !223, size: 64, align: 64, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1760, file: !50, line: 902, baseType: !136, size: 64, align: 64, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "message_type", scope: !1760, file: !50, line: 903, baseType: !214, size: 64, align: 64, offset: 320)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1760, file: !50, line: 904, baseType: !45, size: 32, align: 32, offset: 384)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1760, file: !50, line: 909, baseType: !1770, size: 320, align: 64, offset: 448)
!1770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1760, file: !50, line: 905, size: 320, align: 64, elements: !1771)
!1771 = !{!1772, !1776, !1780}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1770, file: !50, line: 906, baseType: !1773, size: 160, align: 8)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 160, align: 8, elements: !1774)
!1774 = !{!1775}
!1775 = !DISubrange(count: 20)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1770, file: !50, line: 907, baseType: !1777, size: 160, align: 16)
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 160, align: 16, elements: !1778)
!1778 = !{!1779}
!1779 = !DISubrange(count: 10)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1770, file: !50, line: 908, baseType: !1781, size: 320, align: 64)
!1781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 320, align: 64, elements: !1782)
!1782 = !{!1783}
!1783 = !DISubrange(count: 5)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "xmapping", scope: !1409, file: !50, line: 1003, baseType: !1785, size: 448, align: 64)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMappingEvent", file: !50, line: 922, baseType: !1786)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 912, size: 448, align: 64, elements: !1787)
!1787 = !{!1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1786, file: !50, line: 913, baseType: !45, size: 32, align: 32)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1786, file: !50, line: 914, baseType: !81, size: 64, align: 64, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1786, file: !50, line: 915, baseType: !45, size: 32, align: 32, offset: 128)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1786, file: !50, line: 916, baseType: !223, size: 64, align: 64, offset: 192)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1786, file: !50, line: 917, baseType: !136, size: 64, align: 64, offset: 256)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1786, file: !50, line: 918, baseType: !45, size: 32, align: 32, offset: 320)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "first_keycode", scope: !1786, file: !50, line: 920, baseType: !45, size: 32, align: 32, offset: 352)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1786, file: !50, line: 921, baseType: !45, size: 32, align: 32, offset: 384)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "xerror", scope: !1409, file: !50, line: 1004, baseType: !315, size: 320, align: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "xkeymap", scope: !1409, file: !50, line: 1005, baseType: !1798, size: 576, align: 64)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "XKeymapEvent", file: !50, line: 660, baseType: !1799)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 653, size: 576, align: 64, elements: !1800)
!1800 = !{!1801, !1802, !1803, !1804, !1805, !1806}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1799, file: !50, line: 654, baseType: !45, size: 32, align: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1799, file: !50, line: 655, baseType: !81, size: 64, align: 64, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1799, file: !50, line: 656, baseType: !45, size: 32, align: 32, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1799, file: !50, line: 657, baseType: !223, size: 64, align: 64, offset: 192)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1799, file: !50, line: 658, baseType: !136, size: 64, align: 64, offset: 256)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "key_vector", scope: !1799, file: !50, line: 659, baseType: !1807, size: 256, align: 8, offset: 320)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 256, align: 8, elements: !336)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "xgeneric", scope: !1409, file: !50, line: 1006, baseType: !1809, size: 320, align: 64)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "XGenericEvent", file: !50, line: 956, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 948, size: 320, align: 64, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1815, !1816, !1817}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1810, file: !50, line: 950, baseType: !45, size: 32, align: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1810, file: !50, line: 951, baseType: !81, size: 64, align: 64, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1810, file: !50, line: 952, baseType: !45, size: 32, align: 32, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1810, file: !50, line: 953, baseType: !223, size: 64, align: 64, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "extension", scope: !1810, file: !50, line: 954, baseType: !45, size: 32, align: 32, offset: 256)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "evtype", scope: !1810, file: !50, line: 955, baseType: !45, size: 32, align: 32, offset: 288)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "xcookie", scope: !1409, file: !50, line: 1007, baseType: !1819, size: 448, align: 64)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "XGenericEventCookie", file: !50, line: 967, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 958, size: 448, align: 64, elements: !1821)
!1821 = !{!1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1820, file: !50, line: 959, baseType: !45, size: 32, align: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1820, file: !50, line: 960, baseType: !81, size: 64, align: 64, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "send_event", scope: !1820, file: !50, line: 961, baseType: !45, size: 32, align: 32, offset: 128)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !1820, file: !50, line: 962, baseType: !223, size: 64, align: 64, offset: 192)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "extension", scope: !1820, file: !50, line: 963, baseType: !45, size: 32, align: 32, offset: 256)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "evtype", scope: !1820, file: !50, line: 964, baseType: !45, size: 32, align: 32, offset: 288)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !1820, file: !50, line: 965, baseType: !117, size: 32, align: 32, offset: 320)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1820, file: !50, line: 966, baseType: !43, size: 64, align: 64, offset: 384)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1409, file: !50, line: 1008, baseType: !1831, size: 1536, align: 64)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 1536, align: 64, elements: !1368)
!1832 = !DILocation(line: 2115, column: 9, scope: !1354)
!1833 = !DILocation(line: 2118, column: 17, scope: !1354)
!1834 = !DILocation(line: 2119, column: 18, scope: !1354)
!1835 = !DILocation(line: 2121, column: 67, scope: !1354)
!1836 = !DILocation(line: 2121, column: 74, scope: !1354)
!1837 = !DILocation(line: 2121, column: 2, scope: !1354)
!1838 = !DILocation(line: 2124, column: 6, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2124, column: 6)
!1840 = !DILocation(line: 2124, column: 13, scope: !1839)
!1841 = !DILocation(line: 2124, column: 17, scope: !1839)
!1842 = !DILocation(line: 2124, column: 21, scope: !1843)
!1843 = !DILexicalBlockFile(scope: !1839, file: !243, discriminator: 1)
!1844 = !DILocation(line: 2124, column: 28, scope: !1843)
!1845 = !DILocation(line: 2124, column: 33, scope: !1843)
!1846 = !DILocation(line: 2124, column: 37, scope: !1847)
!1847 = !DILexicalBlockFile(scope: !1839, file: !243, discriminator: 2)
!1848 = !DILocation(line: 2124, column: 43, scope: !1847)
!1849 = !DILocation(line: 2124, column: 6, scope: !1847)
!1850 = !DILocation(line: 2125, column: 11, scope: !1839)
!1851 = !DILocation(line: 2125, column: 14, scope: !1839)
!1852 = !DILocation(line: 2125, column: 37, scope: !1839)
!1853 = !DILocation(line: 2125, column: 35, scope: !1839)
!1854 = !DILocation(line: 2125, column: 46, scope: !1839)
!1855 = !DILocation(line: 2125, column: 44, scope: !1839)
!1856 = !DILocation(line: 2125, column: 10, scope: !1839)
!1857 = !DILocation(line: 2125, column: 3, scope: !1839)
!1858 = !DILocation(line: 2126, column: 6, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2126, column: 6)
!1860 = !DILocation(line: 2126, column: 13, scope: !1859)
!1861 = !DILocation(line: 2126, column: 17, scope: !1859)
!1862 = !DILocation(line: 2126, column: 21, scope: !1863)
!1863 = !DILexicalBlockFile(scope: !1859, file: !243, discriminator: 1)
!1864 = !DILocation(line: 2126, column: 28, scope: !1863)
!1865 = !DILocation(line: 2126, column: 33, scope: !1863)
!1866 = !DILocation(line: 2126, column: 37, scope: !1867)
!1867 = !DILexicalBlockFile(scope: !1859, file: !243, discriminator: 2)
!1868 = !DILocation(line: 2126, column: 43, scope: !1867)
!1869 = !DILocation(line: 2126, column: 6, scope: !1867)
!1870 = !DILocation(line: 2127, column: 11, scope: !1859)
!1871 = !DILocation(line: 2127, column: 14, scope: !1859)
!1872 = !DILocation(line: 2127, column: 38, scope: !1859)
!1873 = !DILocation(line: 2127, column: 36, scope: !1859)
!1874 = !DILocation(line: 2127, column: 47, scope: !1859)
!1875 = !DILocation(line: 2127, column: 45, scope: !1859)
!1876 = !DILocation(line: 2127, column: 10, scope: !1859)
!1877 = !DILocation(line: 2127, column: 3, scope: !1859)
!1878 = !DILocation(line: 2129, column: 15, scope: !1354)
!1879 = !DILocation(line: 2129, column: 13, scope: !1354)
!1880 = !DILocation(line: 2131, column: 24, scope: !1354)
!1881 = !DILocation(line: 2131, column: 34, scope: !1354)
!1882 = !DILocation(line: 2131, column: 37, scope: !1354)
!1883 = !DILocation(line: 2131, column: 64, scope: !1354)
!1884 = !DILocation(line: 2131, column: 72, scope: !1354)
!1885 = !DILocation(line: 2131, column: 80, scope: !1354)
!1886 = !DILocation(line: 2132, column: 10, scope: !1354)
!1887 = !DILocation(line: 2132, column: 21, scope: !1354)
!1888 = !DILocation(line: 2132, column: 42, scope: !1354)
!1889 = !DILocation(line: 2132, column: 52, scope: !1354)
!1890 = !DILocation(line: 2131, column: 10, scope: !1354)
!1891 = !DILocation(line: 2131, column: 8, scope: !1354)
!1892 = !DILocation(line: 2134, column: 18, scope: !1354)
!1893 = !DILocation(line: 2134, column: 25, scope: !1354)
!1894 = !DILocation(line: 2134, column: 2, scope: !1895)
!1895 = !DILexicalBlockFile(scope: !1354, file: !243, discriminator: 1)
!1896 = !DILocation(line: 2135, column: 24, scope: !1354)
!1897 = !DILocation(line: 2135, column: 35, scope: !1354)
!1898 = !DILocation(line: 2135, column: 2, scope: !1354)
!1899 = !DILocation(line: 2137, column: 6, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2137, column: 6)
!1901 = !DILocation(line: 2137, column: 11, scope: !1900)
!1902 = !DILocation(line: 2137, column: 6, scope: !1354)
!1903 = !DILocation(line: 2139, column: 20, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1900, file: !243, line: 2138, column: 2)
!1905 = !DILocation(line: 2139, column: 31, scope: !1904)
!1906 = !DILocation(line: 2139, column: 10, scope: !1904)
!1907 = !DILocation(line: 2139, column: 8, scope: !1904)
!1908 = !DILocation(line: 2140, column: 3, scope: !1904)
!1909 = !DILocation(line: 2141, column: 2, scope: !1904)
!1910 = !DILocation(line: 2143, column: 6, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2143, column: 6)
!1912 = !DILocation(line: 2143, column: 25, scope: !1911)
!1913 = !DILocation(line: 2143, column: 6, scope: !1354)
!1914 = !DILocation(line: 2144, column: 34, scope: !1911)
!1915 = !DILocation(line: 2144, column: 45, scope: !1911)
!1916 = !DILocation(line: 2144, column: 24, scope: !1911)
!1917 = !DILocation(line: 2144, column: 22, scope: !1911)
!1918 = !DILocation(line: 2144, column: 3, scope: !1911)
!1919 = !DILocation(line: 2146, column: 7, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2146, column: 6)
!1921 = !DILocation(line: 2146, column: 6, scope: !1920)
!1922 = !DILocation(line: 2146, column: 23, scope: !1920)
!1923 = !DILocation(line: 2146, column: 27, scope: !1924)
!1924 = !DILexicalBlockFile(scope: !1920, file: !243, discriminator: 1)
!1925 = !DILocation(line: 2146, column: 39, scope: !1924)
!1926 = !DILocation(line: 2146, column: 6, scope: !1924)
!1927 = !DILocation(line: 2148, column: 31, scope: !1928)
!1928 = distinct !DILexicalBlock(scope: !1920, file: !243, line: 2147, column: 2)
!1929 = !DILocation(line: 2148, column: 42, scope: !1928)
!1930 = !DILocation(line: 2148, column: 49, scope: !1928)
!1931 = !DILocation(line: 2148, column: 56, scope: !1928)
!1932 = !DILocation(line: 2148, column: 64, scope: !1928)
!1933 = !DILocation(line: 2148, column: 17, scope: !1928)
!1934 = !DILocation(line: 2148, column: 15, scope: !1928)
!1935 = !DILocation(line: 2151, column: 18, scope: !1928)
!1936 = !DILocation(line: 2151, column: 29, scope: !1928)
!1937 = !DILocation(line: 2151, column: 34, scope: !1928)
!1938 = !DILocation(line: 2151, column: 37, scope: !1928)
!1939 = !DILocation(line: 2151, column: 3, scope: !1928)
!1940 = !DILocation(line: 2152, column: 18, scope: !1928)
!1941 = !DILocation(line: 2152, column: 29, scope: !1928)
!1942 = !DILocation(line: 2152, column: 42, scope: !1928)
!1943 = !DILocation(line: 2152, column: 54, scope: !1928)
!1944 = !DILocation(line: 2152, column: 61, scope: !1928)
!1945 = !DILocation(line: 2152, column: 3, scope: !1928)
!1946 = !DILocation(line: 2153, column: 2, scope: !1928)
!1947 = !DILocation(line: 2155, column: 13, scope: !1354)
!1948 = !DILocation(line: 2155, column: 24, scope: !1354)
!1949 = !DILocation(line: 2155, column: 2, scope: !1354)
!1950 = !DILocation(line: 2156, column: 19, scope: !1354)
!1951 = !DILocation(line: 2156, column: 2, scope: !1354)
!1952 = !DILocation(line: 2158, column: 6, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2158, column: 6)
!1954 = !DILocation(line: 2158, column: 6, scope: !1354)
!1955 = !DILocation(line: 2159, column: 24, scope: !1953)
!1956 = !DILocation(line: 2159, column: 3, scope: !1953)
!1957 = !DILocation(line: 2161, column: 15, scope: !1354)
!1958 = !DILocation(line: 2161, column: 13, scope: !1354)
!1959 = !DILocation(line: 2162, column: 6, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2162, column: 6)
!1961 = !DILocation(line: 2162, column: 17, scope: !1960)
!1962 = !DILocation(line: 2162, column: 6, scope: !1354)
!1963 = !DILocation(line: 2164, column: 26, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1960, file: !243, line: 2163, column: 2)
!1965 = !DILocation(line: 2164, column: 38, scope: !1964)
!1966 = !DILocation(line: 2164, column: 48, scope: !1964)
!1967 = !DILocation(line: 2164, column: 3, scope: !1964)
!1968 = !DILocation(line: 2164, column: 15, scope: !1964)
!1969 = !DILocation(line: 2164, column: 24, scope: !1964)
!1970 = !DILocation(line: 2165, column: 17, scope: !1964)
!1971 = !DILocation(line: 2165, column: 28, scope: !1964)
!1972 = !DILocation(line: 2165, column: 35, scope: !1964)
!1973 = !DILocation(line: 2165, column: 3, scope: !1964)
!1974 = !DILocation(line: 2166, column: 9, scope: !1964)
!1975 = !DILocation(line: 2166, column: 3, scope: !1964)
!1976 = !DILocation(line: 2167, column: 2, scope: !1964)
!1977 = !DILocation(line: 2169, column: 14, scope: !1354)
!1978 = !DILocation(line: 2169, column: 12, scope: !1354)
!1979 = !DILocation(line: 2170, column: 6, scope: !1980)
!1980 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2170, column: 6)
!1981 = !DILocation(line: 2170, column: 6, scope: !1354)
!1982 = !DILocation(line: 2172, column: 17, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1980, file: !243, line: 2171, column: 2)
!1984 = !DILocation(line: 2172, column: 28, scope: !1983)
!1985 = !DILocation(line: 2172, column: 35, scope: !1983)
!1986 = !DILocation(line: 2172, column: 3, scope: !1983)
!1987 = !DILocation(line: 2173, column: 21, scope: !1983)
!1988 = !DILocation(line: 2173, column: 32, scope: !1983)
!1989 = !DILocation(line: 2173, column: 39, scope: !1983)
!1990 = !DILocation(line: 2173, column: 3, scope: !1983)
!1991 = !DILocation(line: 2174, column: 9, scope: !1983)
!1992 = !DILocation(line: 2174, column: 3, scope: !1983)
!1993 = !DILocation(line: 2175, column: 2, scope: !1983)
!1994 = !DILocation(line: 2177, column: 6, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2177, column: 6)
!1996 = !DILocation(line: 2177, column: 6, scope: !1354)
!1997 = !DILocation(line: 2179, column: 19, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1995, file: !243, line: 2178, column: 2)
!1999 = !DILocation(line: 2179, column: 30, scope: !1998)
!2000 = !DILocation(line: 2179, column: 46, scope: !1998)
!2001 = !DILocation(line: 2179, column: 37, scope: !1998)
!2002 = !DILocation(line: 2179, column: 3, scope: !1998)
!2003 = !DILocation(line: 2180, column: 2, scope: !1998)
!2004 = !DILocation(line: 2182, column: 2, scope: !1354)
!2005 = !DILocation(line: 2184, column: 6, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2184, column: 6)
!2007 = !DILocation(line: 2184, column: 11, scope: !2006)
!2008 = !DILocation(line: 2184, column: 6, scope: !1354)
!2009 = !DILocation(line: 2186, column: 20, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !2006, file: !243, line: 2185, column: 2)
!2011 = !DILocation(line: 2187, column: 21, scope: !2010)
!2012 = !DILocation(line: 2187, column: 43, scope: !2010)
!2013 = !DILocation(line: 2186, column: 10, scope: !2010)
!2014 = !DILocation(line: 2186, column: 8, scope: !2010)
!2015 = !DILocation(line: 2189, column: 8, scope: !2016)
!2016 = distinct !DILexicalBlock(scope: !2010, file: !243, line: 2189, column: 7)
!2017 = !DILocation(line: 2189, column: 13, scope: !2016)
!2018 = !DILocation(line: 2190, column: 7, scope: !2016)
!2019 = !DILocation(line: 2190, column: 24, scope: !2020)
!2020 = !DILexicalBlockFile(scope: !2016, file: !243, discriminator: 1)
!2021 = !DILocation(line: 2190, column: 11, scope: !2020)
!2022 = !DILocation(line: 2190, column: 67, scope: !2020)
!2023 = !DILocation(line: 2189, column: 7, scope: !2024)
!2024 = !DILexicalBlockFile(scope: !2010, file: !243, discriminator: 1)
!2025 = !DILocation(line: 2191, column: 18, scope: !2016)
!2026 = !DILocation(line: 2191, column: 15, scope: !2016)
!2027 = !DILocation(line: 2191, column: 4, scope: !2016)
!2028 = !DILocation(line: 2192, column: 2, scope: !2010)
!2029 = !DILocation(line: 2194, column: 15, scope: !1354)
!2030 = !DILocation(line: 2194, column: 26, scope: !1354)
!2031 = !DILocation(line: 2194, column: 33, scope: !1354)
!2032 = !DILocation(line: 2194, column: 2, scope: !1354)
!2033 = !DILocation(line: 2196, column: 15, scope: !1354)
!2034 = !DILocation(line: 2196, column: 25, scope: !1354)
!2035 = !DILocation(line: 2196, column: 28, scope: !1354)
!2036 = !DILocation(line: 2196, column: 2, scope: !1354)
!2037 = !DILocation(line: 2198, column: 13, scope: !1354)
!2038 = !DILocation(line: 2198, column: 24, scope: !1354)
!2039 = !DILocation(line: 2198, column: 2, scope: !1354)
!2040 = !DILocation(line: 2201, column: 2, scope: !1354)
!2041 = distinct !{!2041, !2040}
!2042 = !DILocation(line: 2203, column: 14, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2202, column: 2)
!2044 = !DILocation(line: 2203, column: 3, scope: !2043)
!2045 = !DILocation(line: 2204, column: 2, scope: !2043)
!2046 = !DILocation(line: 2205, column: 16, scope: !1354)
!2047 = !DILocation(line: 2205, column: 21, scope: !1354)
!2048 = !DILocation(line: 2204, column: 2, scope: !2049)
!2049 = !DILexicalBlockFile(scope: !2043, file: !243, discriminator: 1)
!2050 = !DILocation(line: 2206, column: 24, scope: !1354)
!2051 = !DILocation(line: 2206, column: 36, scope: !1354)
!2052 = !DILocation(line: 2206, column: 42, scope: !1354)
!2053 = !DILocation(line: 2206, column: 15, scope: !1354)
!2054 = !DILocation(line: 2208, column: 12, scope: !1354)
!2055 = !DILocation(line: 2209, column: 17, scope: !1354)
!2056 = !DILocation(line: 2212, column: 32, scope: !1354)
!2057 = !DILocation(line: 2212, column: 20, scope: !1354)
!2058 = !DILocation(line: 2212, column: 18, scope: !1354)
!2059 = !DILocation(line: 2213, column: 28, scope: !1354)
!2060 = !DILocation(line: 2213, column: 16, scope: !1354)
!2061 = !DILocation(line: 2213, column: 14, scope: !1354)
!2062 = !DILocalVariable(name: "supported", scope: !1354, file: !243, line: 2215, type: !2063)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 128, align: 64, elements: !2064)
!2064 = !{!2065}
!2065 = !DISubrange(count: 2)
!2066 = !DILocation(line: 2215, column: 7, scope: !1354)
!2067 = !DILocation(line: 2215, column: 21, scope: !1354)
!2068 = !DILocation(line: 2216, column: 3, scope: !1354)
!2069 = !DILocation(line: 2217, column: 3, scope: !1354)
!2070 = !DILocation(line: 2220, column: 18, scope: !1354)
!2071 = !DILocation(line: 2220, column: 29, scope: !1354)
!2072 = !DILocation(line: 2220, column: 36, scope: !1354)
!2073 = !DILocation(line: 2220, column: 2, scope: !1354)
!2074 = !DILocation(line: 2223, column: 6, scope: !2075)
!2075 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2223, column: 6)
!2076 = !DILocation(line: 2223, column: 20, scope: !2075)
!2077 = !DILocation(line: 2223, column: 6, scope: !1354)
!2078 = !DILocation(line: 2225, column: 33, scope: !2075)
!2079 = !DILocation(line: 2225, column: 52, scope: !2075)
!2080 = !DILocation(line: 2225, column: 4, scope: !2075)
!2081 = !DILocation(line: 2224, column: 17, scope: !2075)
!2082 = !DILocation(line: 2224, column: 3, scope: !2075)
!2083 = !DILocation(line: 2227, column: 6, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !1354, file: !243, line: 2227, column: 6)
!2085 = !DILocation(line: 2227, column: 6, scope: !1354)
!2086 = !DILocation(line: 2229, column: 3, scope: !2087)
!2087 = distinct !DILexicalBlock(scope: !2084, file: !243, line: 2228, column: 2)
!2088 = !DILocation(line: 2230, column: 3, scope: !2087)
!2089 = !DILocation(line: 2231, column: 2, scope: !2087)
!2090 = !DILocation(line: 2233, column: 2, scope: !1354)
!2091 = distinct !DISubprogram(name: "get_window_attribs", scope: !243, file: !243, line: 2024, type: !2092, isLocal: true, isDefinition: true, scopeLine: 2025, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!81, !2094}
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64, align: 64)
!2095 = !DILocalVariable(name: "attribs", arg: 1, scope: !2091, file: !243, line: 2024, type: !2094)
!2096 = !DILocation(line: 2024, column: 43, scope: !2091)
!2097 = !DILocalVariable(name: "vmask", scope: !2091, file: !243, line: 2026, type: !81)
!2098 = !DILocation(line: 2026, column: 16, scope: !2091)
!2099 = !DILocation(line: 2028, column: 8, scope: !2091)
!2100 = !DILocation(line: 2030, column: 29, scope: !2091)
!2101 = !DILocation(line: 2030, column: 32, scope: !2091)
!2102 = !DILocation(line: 2030, column: 2, scope: !2091)
!2103 = !DILocation(line: 2030, column: 11, scope: !2091)
!2104 = !DILocation(line: 2030, column: 28, scope: !2091)
!2105 = !DILocation(line: 2031, column: 25, scope: !2091)
!2106 = !DILocation(line: 2031, column: 28, scope: !2091)
!2107 = !DILocation(line: 2031, column: 2, scope: !2091)
!2108 = !DILocation(line: 2031, column: 11, scope: !2091)
!2109 = !DILocation(line: 2031, column: 24, scope: !2091)
!2110 = !DILocation(line: 2032, column: 27, scope: !2091)
!2111 = !DILocation(line: 2032, column: 2, scope: !2091)
!2112 = !DILocation(line: 2032, column: 11, scope: !2091)
!2113 = !DILocation(line: 2032, column: 25, scope: !2091)
!2114 = !DILocation(line: 2033, column: 31, scope: !2091)
!2115 = !DILocation(line: 2033, column: 2, scope: !2091)
!2116 = !DILocation(line: 2033, column: 11, scope: !2091)
!2117 = !DILocation(line: 2033, column: 29, scope: !2091)
!2118 = !DILocation(line: 2034, column: 22, scope: !2091)
!2119 = !DILocation(line: 2034, column: 2, scope: !2091)
!2120 = !DILocation(line: 2034, column: 11, scope: !2091)
!2121 = !DILocation(line: 2034, column: 20, scope: !2091)
!2122 = !DILocation(line: 2036, column: 9, scope: !2091)
!2123 = !DILocation(line: 2036, column: 2, scope: !2091)
!2124 = distinct !DISubprogram(name: "set_wm_client_machine", scope: !243, file: !243, line: 1873, type: !2125, isLocal: true, isDefinition: true, scopeLine: 1874, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2125 = !DISubroutineType(types: !2126)
!2126 = !{null, !223, !136}
!2127 = !DILocalVariable(name: "dpy", arg: 1, scope: !2124, file: !243, line: 1873, type: !223)
!2128 = !DILocation(line: 1873, column: 33, scope: !2124)
!2129 = !DILocalVariable(name: "win", arg: 2, scope: !2124, file: !243, line: 1873, type: !136)
!2130 = !DILocation(line: 1873, column: 45, scope: !2124)
!2131 = !DILocalVariable(name: "tp", scope: !2124, file: !243, line: 1875, type: !2132)
!2132 = !DIDerivedType(tag: DW_TAG_typedef, name: "XTextProperty", file: !718, line: 168, baseType: !2133)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !718, line: 163, size: 256, align: 64, elements: !2134)
!2134 = !{!2135, !2136, !2137, !2138}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2133, file: !718, line: 164, baseType: !213, size: 64, align: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !2133, file: !718, line: 165, baseType: !214, size: 64, align: 64, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2133, file: !718, line: 166, baseType: !45, size: 32, align: 32, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "nitems", scope: !2133, file: !718, line: 167, baseType: !81, size: 64, align: 64, offset: 192)
!2139 = !DILocation(line: 1875, column: 16, scope: !2124)
!2140 = !DILocalVariable(name: "hostname", scope: !2124, file: !243, line: 1876, type: !2141)
!2141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 512, align: 8, elements: !2142)
!2142 = !{!2143}
!2143 = !DISubrange(count: 64)
!2144 = !DILocation(line: 1876, column: 7, scope: !2124)
!2145 = !DILocation(line: 1878, column: 18, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !2124, file: !243, line: 1878, column: 6)
!2147 = !DILocation(line: 1878, column: 6, scope: !2146)
!2148 = !DILocation(line: 1878, column: 46, scope: !2146)
!2149 = !DILocation(line: 1878, column: 6, scope: !2124)
!2150 = !DILocation(line: 1879, column: 3, scope: !2146)
!2151 = !DILocation(line: 1881, column: 30, scope: !2124)
!2152 = !DILocation(line: 1881, column: 5, scope: !2124)
!2153 = !DILocation(line: 1881, column: 11, scope: !2124)
!2154 = !DILocation(line: 1882, column: 21, scope: !2124)
!2155 = !DILocation(line: 1882, column: 14, scope: !2124)
!2156 = !DILocation(line: 1882, column: 5, scope: !2124)
!2157 = !DILocation(line: 1882, column: 12, scope: !2124)
!2158 = !DILocation(line: 1883, column: 5, scope: !2124)
!2159 = !DILocation(line: 1883, column: 14, scope: !2124)
!2160 = !DILocation(line: 1884, column: 5, scope: !2124)
!2161 = !DILocation(line: 1884, column: 12, scope: !2124)
!2162 = !DILocation(line: 1886, column: 22, scope: !2124)
!2163 = !DILocation(line: 1886, column: 27, scope: !2124)
!2164 = !DILocation(line: 1886, column: 2, scope: !2124)
!2165 = !DILocation(line: 1887, column: 1, scope: !2124)
!2166 = !DILocation(line: 1887, column: 1, scope: !2167)
!2167 = !DILexicalBlockFile(scope: !2124, file: !243, discriminator: 1)
!2168 = distinct !DISubprogram(name: "ui_reset_clip", scope: !243, file: !243, line: 3676, type: !254, isLocal: false, isDefinition: true, scopeLine: 3677, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2169 = !DILocalVariable(name: "attr", scope: !2168, file: !243, line: 3678, type: !2170)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "XWindowAttributes", file: !50, line: 334, baseType: !2171)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 308, size: 1088, align: 64, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2171, file: !50, line: 309, baseType: !45, size: 32, align: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2171, file: !50, line: 309, baseType: !45, size: 32, align: 32, offset: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2171, file: !50, line: 310, baseType: !45, size: 32, align: 32, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2171, file: !50, line: 310, baseType: !45, size: 32, align: 32, offset: 96)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "border_width", scope: !2171, file: !50, line: 311, baseType: !45, size: 32, align: 32, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2171, file: !50, line: 312, baseType: !45, size: 32, align: 32, offset: 160)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "visual", scope: !2171, file: !50, line: 313, baseType: !150, size: 64, align: 64, offset: 192)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2171, file: !50, line: 314, baseType: !136, size: 64, align: 64, offset: 256)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2171, file: !50, line: 318, baseType: !45, size: 32, align: 32, offset: 320)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "bit_gravity", scope: !2171, file: !50, line: 320, baseType: !45, size: 32, align: 32, offset: 352)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "win_gravity", scope: !2171, file: !50, line: 321, baseType: !45, size: 32, align: 32, offset: 384)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "backing_store", scope: !2171, file: !50, line: 322, baseType: !45, size: 32, align: 32, offset: 416)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "backing_planes", scope: !2171, file: !50, line: 323, baseType: !81, size: 64, align: 64, offset: 448)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "backing_pixel", scope: !2171, file: !50, line: 324, baseType: !81, size: 64, align: 64, offset: 512)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "save_under", scope: !2171, file: !50, line: 325, baseType: !45, size: 32, align: 32, offset: 576)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !2171, file: !50, line: 326, baseType: !170, size: 64, align: 64, offset: 640)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "map_installed", scope: !2171, file: !50, line: 327, baseType: !45, size: 32, align: 32, offset: 704)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "map_state", scope: !2171, file: !50, line: 328, baseType: !45, size: 32, align: 32, offset: 736)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "all_event_masks", scope: !2171, file: !50, line: 329, baseType: !178, size: 64, align: 64, offset: 768)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "your_event_mask", scope: !2171, file: !50, line: 330, baseType: !178, size: 64, align: 64, offset: 832)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "do_not_propagate_mask", scope: !2171, file: !50, line: 331, baseType: !178, size: 64, align: 64, offset: 896)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "override_redirect", scope: !2171, file: !50, line: 332, baseType: !45, size: 32, align: 32, offset: 960)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2171, file: !50, line: 333, baseType: !129, size: 64, align: 64, offset: 1024)
!2196 = !DILocation(line: 3678, column: 20, scope: !2168)
!2197 = !DILocation(line: 3679, column: 23, scope: !2168)
!2198 = !DILocation(line: 3679, column: 34, scope: !2168)
!2199 = !DILocation(line: 3679, column: 2, scope: !2168)
!2200 = !DILocation(line: 3680, column: 25, scope: !2168)
!2201 = !DILocation(line: 3680, column: 37, scope: !2168)
!2202 = !DILocation(line: 3680, column: 2, scope: !2168)
!2203 = !DILocation(line: 3681, column: 1, scope: !2168)
!2204 = distinct !DISubprogram(name: "mwm_hide_decorations", scope: !243, file: !243, line: 547, type: !2205, isLocal: true, isDefinition: true, scopeLine: 548, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{null, !136}
!2207 = !DILocalVariable(name: "wnd", arg: 1, scope: !2204, file: !243, line: 547, type: !136)
!2208 = !DILocation(line: 547, column: 29, scope: !2204)
!2209 = !DILocalVariable(name: "motif_hints", scope: !2204, file: !243, line: 549, type: !2210)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropMotifWmHints", file: !243, line: 206, baseType: !2211)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !243, line: 198, size: 320, align: 64, elements: !2212)
!2212 = !{!2213, !2214, !2215, !2216, !2217}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2211, file: !243, line: 200, baseType: !81, size: 64, align: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "functions", scope: !2211, file: !243, line: 201, baseType: !81, size: 64, align: 64, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "decorations", scope: !2211, file: !243, line: 202, baseType: !81, size: 64, align: 64, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "inputMode", scope: !2211, file: !243, line: 203, baseType: !178, size: 64, align: 64, offset: 192)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2211, file: !243, line: 204, baseType: !81, size: 64, align: 64, offset: 256)
!2218 = !DILocation(line: 549, column: 19, scope: !2204)
!2219 = !DILocalVariable(name: "hintsatom", scope: !2204, file: !243, line: 550, type: !214)
!2220 = !DILocation(line: 550, column: 7, scope: !2204)
!2221 = !DILocation(line: 553, column: 14, scope: !2204)
!2222 = !DILocation(line: 553, column: 20, scope: !2204)
!2223 = !DILocation(line: 554, column: 14, scope: !2204)
!2224 = !DILocation(line: 554, column: 26, scope: !2204)
!2225 = !DILocation(line: 557, column: 26, scope: !2204)
!2226 = !DILocation(line: 557, column: 14, scope: !2204)
!2227 = !DILocation(line: 557, column: 12, scope: !2204)
!2228 = !DILocation(line: 558, column: 7, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2204, file: !243, line: 558, column: 6)
!2230 = !DILocation(line: 558, column: 6, scope: !2204)
!2231 = !DILocation(line: 560, column: 3, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2229, file: !243, line: 559, column: 2)
!2233 = !DILocation(line: 562, column: 3, scope: !2232)
!2234 = !DILocation(line: 565, column: 18, scope: !2204)
!2235 = !DILocation(line: 565, column: 29, scope: !2204)
!2236 = !DILocation(line: 565, column: 34, scope: !2204)
!2237 = !DILocation(line: 565, column: 45, scope: !2204)
!2238 = !DILocation(line: 566, column: 4, scope: !2204)
!2239 = !DILocation(line: 565, column: 2, scope: !2204)
!2240 = !DILocation(line: 568, column: 1, scope: !2204)
!2241 = !DILocation(line: 568, column: 1, scope: !2242)
!2242 = !DILexicalBlockFile(scope: !2204, file: !243, discriminator: 1)
!2243 = distinct !DISubprogram(name: "get_input_mask", scope: !243, file: !243, line: 2046, type: !2244, isLocal: true, isDefinition: true, scopeLine: 2047, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{null, !2246}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64, align: 64)
!2247 = !DILocalVariable(name: "input_mask", arg: 1, scope: !2243, file: !243, line: 2046, type: !2246)
!2248 = !DILocation(line: 2046, column: 22, scope: !2243)
!2249 = !DILocation(line: 2048, column: 3, scope: !2243)
!2250 = !DILocation(line: 2048, column: 14, scope: !2243)
!2251 = !DILocation(line: 2051, column: 6, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2243, file: !243, line: 2051, column: 6)
!2253 = !DILocation(line: 2051, column: 6, scope: !2243)
!2254 = !DILocation(line: 2052, column: 4, scope: !2252)
!2255 = !DILocation(line: 2052, column: 15, scope: !2252)
!2256 = !DILocation(line: 2052, column: 3, scope: !2252)
!2257 = !DILocation(line: 2053, column: 6, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2243, file: !243, line: 2053, column: 6)
!2259 = !DILocation(line: 2053, column: 6, scope: !2243)
!2260 = !DILocation(line: 2054, column: 4, scope: !2258)
!2261 = !DILocation(line: 2054, column: 15, scope: !2258)
!2262 = !DILocation(line: 2054, column: 3, scope: !2258)
!2263 = !DILocation(line: 2055, column: 6, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2243, file: !243, line: 2055, column: 6)
!2265 = !DILocation(line: 2055, column: 19, scope: !2264)
!2266 = !DILocation(line: 2055, column: 22, scope: !2267)
!2267 = !DILexicalBlockFile(scope: !2264, file: !243, discriminator: 1)
!2268 = !DILocation(line: 2055, column: 6, scope: !2267)
!2269 = !DILocation(line: 2056, column: 4, scope: !2264)
!2270 = !DILocation(line: 2056, column: 15, scope: !2264)
!2271 = !DILocation(line: 2056, column: 3, scope: !2264)
!2272 = !DILocation(line: 2057, column: 6, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2243, file: !243, line: 2057, column: 6)
!2274 = !DILocation(line: 2057, column: 6, scope: !2243)
!2275 = !DILocation(line: 2058, column: 4, scope: !2273)
!2276 = !DILocation(line: 2058, column: 15, scope: !2273)
!2277 = !DILocation(line: 2058, column: 3, scope: !2273)
!2278 = !DILocation(line: 2059, column: 1, scope: !2243)
!2279 = distinct !DISubprogram(name: "ui_create_cursor", scope: !243, file: !243, line: 3418, type: !2280, isLocal: false, isDefinition: true, scopeLine: 3420, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{!191, !117, !117, !193, !193, !46, !46, !45}
!2282 = !DILocalVariable(name: "xhot", arg: 1, scope: !2279, file: !243, line: 3418, type: !117)
!2283 = !DILocation(line: 3418, column: 31, scope: !2279)
!2284 = !DILocalVariable(name: "yhot", arg: 2, scope: !2279, file: !243, line: 3418, type: !117)
!2285 = !DILocation(line: 3418, column: 50, scope: !2279)
!2286 = !DILocalVariable(name: "width", arg: 3, scope: !2279, file: !243, line: 3418, type: !193)
!2287 = !DILocation(line: 3418, column: 63, scope: !2279)
!2288 = !DILocalVariable(name: "height", arg: 4, scope: !2279, file: !243, line: 3419, type: !193)
!2289 = !DILocation(line: 3419, column: 11, scope: !2279)
!2290 = !DILocalVariable(name: "andmask", arg: 5, scope: !2279, file: !243, line: 3419, type: !46)
!2291 = !DILocation(line: 3419, column: 27, scope: !2279)
!2292 = !DILocalVariable(name: "xormask", arg: 6, scope: !2279, file: !243, line: 3419, type: !46)
!2293 = !DILocation(line: 3419, column: 44, scope: !2279)
!2294 = !DILocalVariable(name: "bpp", arg: 7, scope: !2279, file: !243, line: 3419, type: !45)
!2295 = !DILocation(line: 3419, column: 57, scope: !2279)
!2296 = !DILocalVariable(name: "cursor", scope: !2279, file: !243, line: 3421, type: !187)
!2297 = !DILocation(line: 3421, column: 9, scope: !2279)
!2298 = !DILocalVariable(name: "out", scope: !2279, file: !243, line: 3422, type: !2299)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64, align: 64)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "XcursorPixel", file: !2301, line: 34, baseType: !2302)
!2301 = !DIFile(filename: "/usr/include/X11/Xcursor/Xcursor.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "XcursorUInt", file: !2301, line: 31, baseType: !117)
!2303 = !DILocation(line: 3422, column: 16, scope: !2279)
!2304 = !DILocalVariable(name: "cimg", scope: !2279, file: !243, line: 3423, type: !2305)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64, align: 64)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "XcursorImage", file: !2301, line: 191, baseType: !2307)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_XcursorImage", file: !2301, line: 182, size: 320, align: 64, elements: !2308)
!2308 = !{!2309, !2310, !2312, !2313, !2314, !2315, !2316, !2317}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2307, file: !2301, line: 183, baseType: !2302, size: 32, align: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2307, file: !2301, line: 184, baseType: !2311, size: 32, align: 32, offset: 32)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "XcursorDim", file: !2301, line: 33, baseType: !2302)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2307, file: !2301, line: 185, baseType: !2311, size: 32, align: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2307, file: !2301, line: 186, baseType: !2311, size: 32, align: 32, offset: 96)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "xhot", scope: !2307, file: !2301, line: 187, baseType: !2311, size: 32, align: 32, offset: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "yhot", scope: !2307, file: !2301, line: 188, baseType: !2311, size: 32, align: 32, offset: 160)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !2307, file: !2301, line: 189, baseType: !2302, size: 32, align: 32, offset: 192)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !2307, file: !2301, line: 190, baseType: !2299, size: 64, align: 64, offset: 256)
!2318 = !DILocation(line: 3423, column: 16, scope: !2279)
!2319 = !DILocalVariable(name: "tmp", scope: !2279, file: !243, line: 3423, type: !2305)
!2320 = !DILocation(line: 3423, column: 23, scope: !2279)
!2321 = !DILocalVariable(name: "x", scope: !2279, file: !243, line: 3424, type: !193)
!2322 = !DILocation(line: 3424, column: 9, scope: !2279)
!2323 = !DILocalVariable(name: "y", scope: !2279, file: !243, line: 3424, type: !193)
!2324 = !DILocation(line: 3424, column: 12, scope: !2279)
!2325 = !DILocalVariable(name: "oidx", scope: !2279, file: !243, line: 3424, type: !193)
!2326 = !DILocation(line: 3424, column: 15, scope: !2279)
!2327 = !DILocalVariable(name: "idx", scope: !2279, file: !243, line: 3424, type: !193)
!2328 = !DILocation(line: 3424, column: 21, scope: !2279)
!2329 = !DILocalVariable(name: "argb", scope: !2279, file: !243, line: 3424, type: !193)
!2330 = !DILocation(line: 3424, column: 26, scope: !2279)
!2331 = !DILocalVariable(name: "outline", scope: !2279, file: !243, line: 3425, type: !47)
!2332 = !DILocation(line: 3425, column: 8, scope: !2279)
!2333 = !DILocalVariable(name: "xor", scope: !2279, file: !243, line: 3425, type: !47)
!2334 = !DILocation(line: 3425, column: 17, scope: !2279)
!2335 = !DILocation(line: 3428, column: 9, scope: !2279)
!2336 = !DILocation(line: 3428, column: 15, scope: !2279)
!2337 = !DILocation(line: 3428, column: 21, scope: !2279)
!2338 = !DILocation(line: 3428, column: 28, scope: !2279)
!2339 = !DILocation(line: 3428, column: 36, scope: !2279)
!2340 = !DILocation(line: 3427, column: 2, scope: !2279)
!2341 = !DILocation(line: 3430, column: 6, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !2279, file: !243, line: 3430, column: 6)
!2343 = !DILocation(line: 3430, column: 10, scope: !2342)
!2344 = !DILocation(line: 3430, column: 15, scope: !2342)
!2345 = !DILocation(line: 3430, column: 18, scope: !2346)
!2346 = !DILexicalBlockFile(scope: !2342, file: !243, discriminator: 1)
!2347 = !DILocation(line: 3430, column: 22, scope: !2346)
!2348 = !DILocation(line: 3430, column: 28, scope: !2346)
!2349 = !DILocation(line: 3430, column: 31, scope: !2350)
!2350 = !DILexicalBlockFile(scope: !2342, file: !243, discriminator: 2)
!2351 = !DILocation(line: 3430, column: 35, scope: !2350)
!2352 = !DILocation(line: 3430, column: 41, scope: !2350)
!2353 = !DILocation(line: 3430, column: 44, scope: !2354)
!2354 = !DILexicalBlockFile(scope: !2342, file: !243, discriminator: 3)
!2355 = !DILocation(line: 3430, column: 48, scope: !2354)
!2356 = !DILocation(line: 3430, column: 6, scope: !2354)
!2357 = !DILocation(line: 3433, column: 10, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !2342, file: !243, line: 3431, column: 2)
!2359 = !DILocation(line: 3432, column: 3, scope: !2358)
!2360 = !DILocation(line: 3434, column: 10, scope: !2358)
!2361 = !DILocation(line: 3434, column: 3, scope: !2358)
!2362 = !DILocation(line: 3437, column: 28, scope: !2279)
!2363 = !DILocation(line: 3437, column: 35, scope: !2279)
!2364 = !DILocation(line: 3437, column: 9, scope: !2279)
!2365 = !DILocation(line: 3437, column: 7, scope: !2279)
!2366 = !DILocation(line: 3438, column: 7, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2279, file: !243, line: 3438, column: 6)
!2368 = !DILocation(line: 3438, column: 6, scope: !2279)
!2369 = !DILocation(line: 3440, column: 3, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2367, file: !243, line: 3439, column: 2)
!2371 = !DILocation(line: 3441, column: 10, scope: !2370)
!2372 = !DILocation(line: 3441, column: 3, scope: !2370)
!2373 = !DILocation(line: 3444, column: 15, scope: !2279)
!2374 = !DILocation(line: 3444, column: 2, scope: !2279)
!2375 = !DILocation(line: 3444, column: 8, scope: !2279)
!2376 = !DILocation(line: 3444, column: 13, scope: !2279)
!2377 = !DILocation(line: 3445, column: 15, scope: !2279)
!2378 = !DILocation(line: 3445, column: 2, scope: !2279)
!2379 = !DILocation(line: 3445, column: 8, scope: !2279)
!2380 = !DILocation(line: 3445, column: 13, scope: !2279)
!2381 = !DILocation(line: 3447, column: 8, scope: !2279)
!2382 = !DILocation(line: 3447, column: 14, scope: !2279)
!2383 = !DILocation(line: 3447, column: 6, scope: !2279)
!2384 = !DILocation(line: 3448, column: 6, scope: !2279)
!2385 = !DILocation(line: 3449, column: 10, scope: !2279)
!2386 = !DILocation(line: 3450, column: 9, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2279, file: !243, line: 3450, column: 2)
!2388 = !DILocation(line: 3450, column: 7, scope: !2387)
!2389 = !DILocation(line: 3450, column: 14, scope: !2390)
!2390 = !DILexicalBlockFile(scope: !2391, file: !243, discriminator: 1)
!2391 = distinct !DILexicalBlock(scope: !2387, file: !243, line: 3450, column: 2)
!2392 = !DILocation(line: 3450, column: 18, scope: !2390)
!2393 = !DILocation(line: 3450, column: 16, scope: !2390)
!2394 = !DILocation(line: 3450, column: 2, scope: !2390)
!2395 = !DILocation(line: 3452, column: 10, scope: !2396)
!2396 = distinct !DILexicalBlock(scope: !2397, file: !243, line: 3452, column: 3)
!2397 = distinct !DILexicalBlock(scope: !2391, file: !243, line: 3451, column: 2)
!2398 = !DILocation(line: 3452, column: 8, scope: !2396)
!2399 = !DILocation(line: 3452, column: 15, scope: !2400)
!2400 = !DILexicalBlockFile(scope: !2401, file: !243, discriminator: 1)
!2401 = distinct !DILexicalBlock(scope: !2396, file: !243, line: 3452, column: 3)
!2402 = !DILocation(line: 3452, column: 19, scope: !2400)
!2403 = !DILocation(line: 3452, column: 17, scope: !2400)
!2404 = !DILocation(line: 3452, column: 3, scope: !2400)
!2405 = !DILocation(line: 3454, column: 11, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2401, file: !243, line: 3453, column: 3)
!2407 = !DILocation(line: 3454, column: 15, scope: !2406)
!2408 = !DILocation(line: 3454, column: 13, scope: !2406)
!2409 = !DILocation(line: 3454, column: 23, scope: !2406)
!2410 = !DILocation(line: 3454, column: 21, scope: !2406)
!2411 = !DILocation(line: 3454, column: 9, scope: !2406)
!2412 = !DILocation(line: 3457, column: 8, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2406, file: !243, line: 3457, column: 8)
!2414 = !DILocation(line: 3457, column: 12, scope: !2413)
!2415 = !DILocation(line: 3457, column: 8, scope: !2406)
!2416 = !DILocation(line: 3459, column: 13, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2413, file: !243, line: 3458, column: 4)
!2418 = !DILocation(line: 3459, column: 20, scope: !2417)
!2419 = !DILocation(line: 3459, column: 26, scope: !2417)
!2420 = !DILocation(line: 3459, column: 24, scope: !2417)
!2421 = !DILocation(line: 3459, column: 31, scope: !2417)
!2422 = !DILocation(line: 3459, column: 29, scope: !2417)
!2423 = !DILocation(line: 3459, column: 39, scope: !2417)
!2424 = !DILocation(line: 3459, column: 37, scope: !2417)
!2425 = !DILocation(line: 3459, column: 10, scope: !2417)
!2426 = !DILocation(line: 3460, column: 4, scope: !2417)
!2427 = !DILocation(line: 3462, column: 10, scope: !2406)
!2428 = !DILocation(line: 3462, column: 14, scope: !2406)
!2429 = !DILocation(line: 3462, column: 12, scope: !2406)
!2430 = !DILocation(line: 3462, column: 22, scope: !2406)
!2431 = !DILocation(line: 3462, column: 20, scope: !2406)
!2432 = !DILocation(line: 3462, column: 8, scope: !2406)
!2433 = !DILocation(line: 3463, column: 21, scope: !2406)
!2434 = !DILocation(line: 3463, column: 26, scope: !2406)
!2435 = !DILocation(line: 3463, column: 35, scope: !2406)
!2436 = !DILocation(line: 3463, column: 44, scope: !2406)
!2437 = !DILocation(line: 3463, column: 11, scope: !2406)
!2438 = !DILocation(line: 3463, column: 9, scope: !2406)
!2439 = !DILocation(line: 3464, column: 16, scope: !2406)
!2440 = !DILocation(line: 3464, column: 8, scope: !2406)
!2441 = !DILocation(line: 3464, column: 4, scope: !2406)
!2442 = !DILocation(line: 3464, column: 14, scope: !2406)
!2443 = !DILocation(line: 3465, column: 8, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2406, file: !243, line: 3465, column: 8)
!2445 = !DILocation(line: 3465, column: 8, scope: !2406)
!2446 = !DILocation(line: 3466, column: 13, scope: !2444)
!2447 = !DILocation(line: 3466, column: 5, scope: !2444)
!2448 = !DILocation(line: 3467, column: 3, scope: !2406)
!2449 = !DILocation(line: 3452, column: 27, scope: !2450)
!2450 = !DILexicalBlockFile(scope: !2401, file: !243, discriminator: 2)
!2451 = !DILocation(line: 3452, column: 3, scope: !2450)
!2452 = distinct !{!2452, !2453}
!2453 = !DILocation(line: 3452, column: 3, scope: !2397)
!2454 = !DILocation(line: 3468, column: 2, scope: !2397)
!2455 = !DILocation(line: 3450, column: 27, scope: !2456)
!2456 = !DILexicalBlockFile(scope: !2391, file: !243, discriminator: 2)
!2457 = !DILocation(line: 3450, column: 2, scope: !2456)
!2458 = distinct !{!2458, !2459}
!2459 = !DILocation(line: 3450, column: 2, scope: !2279)
!2460 = !DILocation(line: 3473, column: 6, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2279, file: !243, line: 3473, column: 6)
!2462 = !DILocation(line: 3473, column: 6, scope: !2279)
!2463 = !DILocation(line: 3475, column: 28, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2461, file: !243, line: 3474, column: 2)
!2465 = !DILocation(line: 3475, column: 35, scope: !2464)
!2466 = !DILocation(line: 3475, column: 9, scope: !2464)
!2467 = !DILocation(line: 3475, column: 7, scope: !2464)
!2468 = !DILocation(line: 3476, column: 10, scope: !2464)
!2469 = !DILocation(line: 3476, column: 15, scope: !2464)
!2470 = !DILocation(line: 3476, column: 3, scope: !2464)
!2471 = !DILocation(line: 3476, column: 26, scope: !2464)
!2472 = !DILocation(line: 3476, column: 31, scope: !2464)
!2473 = !DILocation(line: 3476, column: 39, scope: !2464)
!2474 = !DILocation(line: 3476, column: 44, scope: !2464)
!2475 = !DILocation(line: 3476, column: 37, scope: !2464)
!2476 = !DILocation(line: 3476, column: 51, scope: !2464)
!2477 = !DILocation(line: 3477, column: 19, scope: !2464)
!2478 = !DILocation(line: 3477, column: 25, scope: !2464)
!2479 = !DILocation(line: 3477, column: 3, scope: !2464)
!2480 = !DILocation(line: 3478, column: 19, scope: !2464)
!2481 = !DILocation(line: 3478, column: 25, scope: !2464)
!2482 = !DILocation(line: 3478, column: 3, scope: !2464)
!2483 = !DILocation(line: 3479, column: 19, scope: !2464)
!2484 = !DILocation(line: 3479, column: 25, scope: !2464)
!2485 = !DILocation(line: 3479, column: 3, scope: !2464)
!2486 = !DILocation(line: 3480, column: 19, scope: !2464)
!2487 = !DILocation(line: 3480, column: 25, scope: !2464)
!2488 = !DILocation(line: 3480, column: 3, scope: !2464)
!2489 = !DILocation(line: 3481, column: 17, scope: !2464)
!2490 = !DILocation(line: 3481, column: 23, scope: !2464)
!2491 = !DILocation(line: 3481, column: 3, scope: !2464)
!2492 = !DILocation(line: 3482, column: 17, scope: !2464)
!2493 = !DILocation(line: 3482, column: 22, scope: !2464)
!2494 = !DILocation(line: 3482, column: 3, scope: !2464)
!2495 = !DILocation(line: 3483, column: 23, scope: !2464)
!2496 = !DILocation(line: 3483, column: 3, scope: !2464)
!2497 = !DILocation(line: 3484, column: 2, scope: !2464)
!2498 = !DILocation(line: 3486, column: 34, scope: !2279)
!2499 = !DILocation(line: 3486, column: 45, scope: !2279)
!2500 = !DILocation(line: 3486, column: 11, scope: !2279)
!2501 = !DILocation(line: 3486, column: 9, scope: !2279)
!2502 = !DILocation(line: 3487, column: 22, scope: !2279)
!2503 = !DILocation(line: 3487, column: 2, scope: !2279)
!2504 = !DILocation(line: 3488, column: 7, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2279, file: !243, line: 3488, column: 6)
!2506 = !DILocation(line: 3488, column: 6, scope: !2279)
!2507 = !DILocation(line: 3490, column: 3, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2505, file: !243, line: 3489, column: 2)
!2509 = !DILocation(line: 3491, column: 10, scope: !2508)
!2510 = !DILocation(line: 3491, column: 3, scope: !2508)
!2511 = !DILocation(line: 3494, column: 22, scope: !2279)
!2512 = !DILocation(line: 3494, column: 9, scope: !2279)
!2513 = !DILocation(line: 3494, column: 2, scope: !2279)
!2514 = !DILocation(line: 3495, column: 1, scope: !2279)
!2515 = distinct !DISubprogram(name: "ui_resize_window", scope: !243, file: !243, line: 2237, type: !1243, isLocal: false, isDefinition: true, scopeLine: 2238, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2516 = !DILocalVariable(name: "width", arg: 1, scope: !2515, file: !243, line: 2237, type: !193)
!2517 = !DILocation(line: 2237, column: 25, scope: !2515)
!2518 = !DILocalVariable(name: "height", arg: 2, scope: !2515, file: !243, line: 2237, type: !193)
!2519 = !DILocation(line: 2237, column: 39, scope: !2515)
!2520 = !DILocalVariable(name: "attr", scope: !2515, file: !243, line: 2239, type: !2170)
!2521 = !DILocation(line: 2239, column: 20, scope: !2515)
!2522 = !DILocalVariable(name: "sizehints", scope: !2515, file: !243, line: 2240, type: !1250)
!2523 = !DILocation(line: 2240, column: 14, scope: !2515)
!2524 = !DILocalVariable(name: "bs", scope: !2515, file: !243, line: 2241, type: !189)
!2525 = !DILocation(line: 2241, column: 9, scope: !2515)
!2526 = !DILocation(line: 2243, column: 23, scope: !2515)
!2527 = !DILocation(line: 2243, column: 34, scope: !2515)
!2528 = !DILocation(line: 2243, column: 2, scope: !2515)
!2529 = !DILocation(line: 2245, column: 12, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2515, file: !243, line: 2245, column: 6)
!2531 = !DILocation(line: 2245, column: 26, scope: !2530)
!2532 = !DILocation(line: 2245, column: 18, scope: !2530)
!2533 = !DILocation(line: 2245, column: 32, scope: !2530)
!2534 = !DILocation(line: 2245, column: 40, scope: !2535)
!2535 = !DILexicalBlockFile(scope: !2530, file: !243, discriminator: 1)
!2536 = !DILocation(line: 2245, column: 55, scope: !2535)
!2537 = !DILocation(line: 2245, column: 47, scope: !2535)
!2538 = !DILocation(line: 2245, column: 6, scope: !2535)
!2539 = !DILocation(line: 2248, column: 3, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2530, file: !243, line: 2246, column: 2)
!2541 = !DILocation(line: 2252, column: 14, scope: !2515)
!2542 = !DILocation(line: 2252, column: 26, scope: !2515)
!2543 = !DILocation(line: 2252, column: 34, scope: !2515)
!2544 = !DILocation(line: 2252, column: 41, scope: !2515)
!2545 = !DILocation(line: 2251, column: 2, scope: !2515)
!2546 = !DILocation(line: 2254, column: 14, scope: !2515)
!2547 = !DILocation(line: 2254, column: 12, scope: !2515)
!2548 = !DILocation(line: 2255, column: 6, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2515, file: !243, line: 2255, column: 6)
!2550 = !DILocation(line: 2255, column: 6, scope: !2515)
!2551 = !DILocation(line: 2257, column: 17, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2549, file: !243, line: 2256, column: 2)
!2553 = !DILocation(line: 2257, column: 28, scope: !2552)
!2554 = !DILocation(line: 2257, column: 35, scope: !2552)
!2555 = !DILocation(line: 2257, column: 3, scope: !2552)
!2556 = !DILocation(line: 2258, column: 21, scope: !2552)
!2557 = !DILocation(line: 2258, column: 32, scope: !2552)
!2558 = !DILocation(line: 2258, column: 39, scope: !2552)
!2559 = !DILocation(line: 2258, column: 3, scope: !2552)
!2560 = !DILocation(line: 2259, column: 9, scope: !2552)
!2561 = !DILocation(line: 2259, column: 3, scope: !2552)
!2562 = !DILocation(line: 2260, column: 2, scope: !2552)
!2563 = !DILocation(line: 2262, column: 7, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2515, file: !243, line: 2262, column: 6)
!2565 = !DILocation(line: 2262, column: 6, scope: !2515)
!2566 = !DILocation(line: 2264, column: 17, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2564, file: !243, line: 2263, column: 2)
!2568 = !DILocation(line: 2264, column: 28, scope: !2567)
!2569 = !DILocation(line: 2264, column: 35, scope: !2567)
!2570 = !DILocation(line: 2264, column: 42, scope: !2567)
!2571 = !DILocation(line: 2264, column: 3, scope: !2567)
!2572 = !DILocation(line: 2265, column: 2, scope: !2567)
!2573 = !DILocation(line: 2268, column: 6, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2515, file: !243, line: 2268, column: 6)
!2575 = !DILocation(line: 2268, column: 18, scope: !2574)
!2576 = !DILocation(line: 2268, column: 6, scope: !2515)
!2577 = !DILocation(line: 2270, column: 22, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2574, file: !243, line: 2269, column: 2)
!2579 = !DILocation(line: 2270, column: 33, scope: !2578)
!2580 = !DILocation(line: 2270, column: 40, scope: !2578)
!2581 = !DILocation(line: 2270, column: 47, scope: !2578)
!2582 = !DILocation(line: 2270, column: 55, scope: !2578)
!2583 = !DILocation(line: 2270, column: 8, scope: !2578)
!2584 = !DILocation(line: 2270, column: 6, scope: !2578)
!2585 = !DILocation(line: 2271, column: 18, scope: !2578)
!2586 = !DILocation(line: 2271, column: 29, scope: !2578)
!2587 = !DILocation(line: 2271, column: 34, scope: !2578)
!2588 = !DILocation(line: 2271, column: 37, scope: !2578)
!2589 = !DILocation(line: 2271, column: 3, scope: !2578)
!2590 = !DILocation(line: 2272, column: 18, scope: !2578)
!2591 = !DILocation(line: 2272, column: 29, scope: !2578)
!2592 = !DILocation(line: 2272, column: 33, scope: !2578)
!2593 = !DILocation(line: 2272, column: 45, scope: !2578)
!2594 = !DILocation(line: 2272, column: 52, scope: !2578)
!2595 = !DILocation(line: 2272, column: 3, scope: !2578)
!2596 = !DILocation(line: 2273, column: 13, scope: !2578)
!2597 = !DILocation(line: 2273, column: 24, scope: !2578)
!2598 = !DILocation(line: 2273, column: 37, scope: !2578)
!2599 = !DILocation(line: 2273, column: 41, scope: !2578)
!2600 = !DILocation(line: 2273, column: 53, scope: !2578)
!2601 = !DILocation(line: 2273, column: 60, scope: !2578)
!2602 = !DILocation(line: 2273, column: 3, scope: !2578)
!2603 = !DILocation(line: 2274, column: 15, scope: !2578)
!2604 = !DILocation(line: 2274, column: 26, scope: !2578)
!2605 = !DILocation(line: 2274, column: 3, scope: !2578)
!2606 = !DILocation(line: 2275, column: 17, scope: !2578)
!2607 = !DILocation(line: 2275, column: 15, scope: !2578)
!2608 = !DILocation(line: 2276, column: 2, scope: !2578)
!2609 = !DILocation(line: 2278, column: 20, scope: !2515)
!2610 = !DILocation(line: 2278, column: 27, scope: !2515)
!2611 = !DILocation(line: 2278, column: 2, scope: !2515)
!2612 = !DILocation(line: 2279, column: 1, scope: !2515)
!2613 = !DILocation(line: 2279, column: 1, scope: !2614)
!2614 = !DILexicalBlockFile(scope: !2515, file: !243, discriminator: 1)
!2615 = distinct !DISubprogram(name: "ui_set_clip", scope: !243, file: !243, line: 3666, type: !2616, isLocal: false, isDefinition: true, scopeLine: 3667, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{null, !45, !45, !45, !45}
!2618 = !DILocalVariable(name: "x", arg: 1, scope: !2615, file: !243, line: 3666, type: !45)
!2619 = !DILocation(line: 3666, column: 17, scope: !2615)
!2620 = !DILocalVariable(name: "y", arg: 2, scope: !2615, file: !243, line: 3666, type: !45)
!2621 = !DILocation(line: 3666, column: 24, scope: !2615)
!2622 = !DILocalVariable(name: "cx", arg: 3, scope: !2615, file: !243, line: 3666, type: !45)
!2623 = !DILocation(line: 3666, column: 31, scope: !2615)
!2624 = !DILocalVariable(name: "cy", arg: 4, scope: !2615, file: !243, line: 3666, type: !45)
!2625 = !DILocation(line: 3666, column: 39, scope: !2615)
!2626 = !DILocation(line: 3668, column: 23, scope: !2615)
!2627 = !DILocation(line: 3668, column: 21, scope: !2615)
!2628 = !DILocation(line: 3669, column: 23, scope: !2615)
!2629 = !DILocation(line: 3669, column: 21, scope: !2615)
!2630 = !DILocation(line: 3670, column: 27, scope: !2615)
!2631 = !DILocation(line: 3670, column: 25, scope: !2615)
!2632 = !DILocation(line: 3671, column: 28, scope: !2615)
!2633 = !DILocation(line: 3671, column: 26, scope: !2615)
!2634 = !DILocation(line: 3672, column: 21, scope: !2615)
!2635 = !DILocation(line: 3672, column: 32, scope: !2615)
!2636 = !DILocation(line: 3672, column: 2, scope: !2615)
!2637 = !DILocation(line: 3673, column: 1, scope: !2615)
!2638 = distinct !DISubprogram(name: "ui_have_window", scope: !243, file: !243, line: 2282, type: !564, isLocal: false, isDefinition: true, scopeLine: 2283, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2639 = !DILocation(line: 2284, column: 9, scope: !2638)
!2640 = !DILocation(line: 2284, column: 2, scope: !2638)
!2641 = distinct !DISubprogram(name: "ui_destroy_window", scope: !243, file: !243, line: 2288, type: !254, isLocal: false, isDefinition: true, scopeLine: 2289, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2642 = !DILocation(line: 2290, column: 6, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2641, file: !243, line: 2290, column: 6)
!2644 = !DILocation(line: 2290, column: 11, scope: !2643)
!2645 = !DILocation(line: 2290, column: 6, scope: !2641)
!2646 = !DILocation(line: 2291, column: 14, scope: !2643)
!2647 = !DILocation(line: 2291, column: 3, scope: !2643)
!2648 = !DILocation(line: 2293, column: 17, scope: !2641)
!2649 = !DILocation(line: 2293, column: 28, scope: !2641)
!2650 = !DILocation(line: 2293, column: 2, scope: !2641)
!2651 = !DILocation(line: 2294, column: 8, scope: !2641)
!2652 = !DILocation(line: 2296, column: 6, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2641, file: !243, line: 2296, column: 6)
!2654 = !DILocation(line: 2296, column: 6, scope: !2641)
!2655 = !DILocation(line: 2298, column: 15, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2653, file: !243, line: 2297, column: 2)
!2657 = !DILocation(line: 2298, column: 26, scope: !2656)
!2658 = !DILocation(line: 2298, column: 3, scope: !2656)
!2659 = !DILocation(line: 2299, column: 15, scope: !2656)
!2660 = !DILocation(line: 2300, column: 2, scope: !2656)
!2661 = !DILocation(line: 2301, column: 1, scope: !2641)
!2662 = !DILocalVariable(name: "x", scope: !253, file: !243, line: 2306, type: !193)
!2663 = !DILocation(line: 2306, column: 9, scope: !253)
!2664 = !DILocalVariable(name: "y", scope: !253, file: !243, line: 2306, type: !193)
!2665 = !DILocation(line: 2306, column: 12, scope: !253)
!2666 = !DILocalVariable(name: "width", scope: !253, file: !243, line: 2306, type: !193)
!2667 = !DILocation(line: 2306, column: 15, scope: !253)
!2668 = !DILocalVariable(name: "height", scope: !253, file: !243, line: 2306, type: !193)
!2669 = !DILocation(line: 2306, column: 22, scope: !253)
!2670 = !DILocalVariable(name: "attr", scope: !253, file: !243, line: 2307, type: !2170)
!2671 = !DILocation(line: 2307, column: 20, scope: !253)
!2672 = !DILocalVariable(name: "contents", scope: !253, file: !243, line: 2308, type: !189)
!2673 = !DILocation(line: 2308, column: 9, scope: !253)
!2674 = !DILocalVariable(name: "unused", scope: !253, file: !243, line: 2309, type: !136)
!2675 = !DILocation(line: 2309, column: 9, scope: !253)
!2676 = !DILocalVariable(name: "dest_x", scope: !253, file: !243, line: 2310, type: !45)
!2677 = !DILocation(line: 2310, column: 6, scope: !253)
!2678 = !DILocalVariable(name: "dest_y", scope: !253, file: !243, line: 2310, type: !45)
!2679 = !DILocation(line: 2310, column: 14, scope: !253)
!2680 = !DILocation(line: 2317, column: 6, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !253, file: !243, line: 2317, column: 6)
!2682 = !DILocation(line: 2317, column: 6, scope: !253)
!2683 = !DILocation(line: 2318, column: 3, scope: !2681)
!2684 = !DILocation(line: 2323, column: 23, scope: !253)
!2685 = !DILocation(line: 2323, column: 34, scope: !253)
!2686 = !DILocation(line: 2323, column: 2, scope: !253)
!2687 = !DILocation(line: 2325, column: 7, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !253, file: !243, line: 2325, column: 6)
!2689 = !DILocation(line: 2325, column: 20, scope: !2688)
!2690 = !DILocation(line: 2325, column: 24, scope: !2691)
!2691 = !DILexicalBlockFile(scope: !2688, file: !243, discriminator: 1)
!2692 = !DILocation(line: 2325, column: 39, scope: !2691)
!2693 = !DILocation(line: 2325, column: 44, scope: !2691)
!2694 = !DILocation(line: 2325, column: 47, scope: !2695)
!2695 = !DILexicalBlockFile(scope: !2688, file: !243, discriminator: 2)
!2696 = !DILocation(line: 2325, column: 63, scope: !2695)
!2697 = !DILocation(line: 2325, column: 6, scope: !2695)
!2698 = !DILocation(line: 2331, column: 25, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2688, file: !243, line: 2326, column: 2)
!2700 = !DILocation(line: 2331, column: 36, scope: !2699)
!2701 = !DILocation(line: 2332, column: 10, scope: !2699)
!2702 = !DILocation(line: 2332, column: 13, scope: !2699)
!2703 = !DILocation(line: 2332, column: 32, scope: !2699)
!2704 = !DILocation(line: 2331, column: 3, scope: !2699)
!2705 = !DILocation(line: 2335, column: 16, scope: !2699)
!2706 = !DILocation(line: 2335, column: 14, scope: !2699)
!2707 = !DILocation(line: 2336, column: 16, scope: !2699)
!2708 = !DILocation(line: 2336, column: 14, scope: !2699)
!2709 = !DILocation(line: 2337, column: 25, scope: !2699)
!2710 = !DILocation(line: 2337, column: 18, scope: !2699)
!2711 = !DILocation(line: 2338, column: 26, scope: !2699)
!2712 = !DILocation(line: 2338, column: 19, scope: !2699)
!2713 = !DILocation(line: 2339, column: 2, scope: !2699)
!2714 = !DILocation(line: 2341, column: 7, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !253, file: !243, line: 2341, column: 6)
!2716 = !DILocation(line: 2341, column: 6, scope: !253)
!2717 = !DILocation(line: 2344, column: 28, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2715, file: !243, line: 2342, column: 2)
!2719 = !DILocation(line: 2344, column: 39, scope: !2718)
!2720 = !DILocation(line: 2344, column: 51, scope: !2718)
!2721 = !DILocation(line: 2344, column: 63, scope: !2718)
!2722 = !DILocation(line: 2344, column: 71, scope: !2718)
!2723 = !DILocation(line: 2344, column: 14, scope: !2718)
!2724 = !DILocation(line: 2344, column: 12, scope: !2718)
!2725 = !DILocation(line: 2345, column: 13, scope: !2718)
!2726 = !DILocation(line: 2345, column: 24, scope: !2718)
!2727 = !DILocation(line: 2345, column: 31, scope: !2718)
!2728 = !DILocation(line: 2345, column: 41, scope: !2718)
!2729 = !DILocation(line: 2345, column: 58, scope: !2718)
!2730 = !DILocation(line: 2345, column: 70, scope: !2718)
!2731 = !DILocation(line: 2345, column: 3, scope: !2718)
!2732 = !DILocation(line: 2346, column: 2, scope: !2718)
!2733 = !DILocation(line: 2348, column: 18, scope: !253)
!2734 = !DILocation(line: 2348, column: 17, scope: !253)
!2735 = !DILocation(line: 2348, column: 15, scope: !253)
!2736 = !DILocation(line: 2352, column: 6, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !253, file: !243, line: 2352, column: 6)
!2738 = !DILocation(line: 2352, column: 6, scope: !253)
!2739 = !DILocation(line: 2355, column: 5, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2737, file: !243, line: 2353, column: 2)
!2741 = !DILocation(line: 2356, column: 5, scope: !2740)
!2742 = !DILocation(line: 2357, column: 10, scope: !2740)
!2743 = !DILocation(line: 2357, column: 13, scope: !2740)
!2744 = !DILocation(line: 2357, column: 9, scope: !2740)
!2745 = !DILocation(line: 2358, column: 11, scope: !2740)
!2746 = !DILocation(line: 2358, column: 14, scope: !2740)
!2747 = !DILocation(line: 2358, column: 10, scope: !2740)
!2748 = !DILocation(line: 2359, column: 2, scope: !2740)
!2749 = !DILocation(line: 2363, column: 7, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2737, file: !243, line: 2361, column: 2)
!2751 = !DILocation(line: 2363, column: 5, scope: !2750)
!2752 = !DILocation(line: 2364, column: 7, scope: !2750)
!2753 = !DILocation(line: 2364, column: 5, scope: !2750)
!2754 = !DILocation(line: 2366, column: 7, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2750, file: !243, line: 2366, column: 7)
!2756 = !DILocation(line: 2366, column: 7, scope: !2750)
!2757 = !DILocation(line: 2369, column: 12, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2755, file: !243, line: 2367, column: 3)
!2759 = !DILocation(line: 2369, column: 10, scope: !2758)
!2760 = !DILocation(line: 2370, column: 13, scope: !2758)
!2761 = !DILocation(line: 2370, column: 11, scope: !2758)
!2762 = !DILocation(line: 2371, column: 3, scope: !2758)
!2763 = !DILocation(line: 2375, column: 12, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2755, file: !243, line: 2373, column: 3)
!2765 = !DILocation(line: 2375, column: 10, scope: !2764)
!2766 = !DILocation(line: 2376, column: 13, scope: !2764)
!2767 = !DILocation(line: 2376, column: 11, scope: !2764)
!2768 = !DILocation(line: 2381, column: 9, scope: !253)
!2769 = !DILocation(line: 2381, column: 16, scope: !253)
!2770 = !DILocation(line: 2381, column: 24, scope: !253)
!2771 = !DILocation(line: 2381, column: 27, scope: !253)
!2772 = !DILocation(line: 2381, column: 30, scope: !253)
!2773 = !DILocation(line: 2381, column: 46, scope: !253)
!2774 = !DILocation(line: 2380, column: 2, scope: !253)
!2775 = !DILocation(line: 2385, column: 11, scope: !253)
!2776 = !DILocation(line: 2385, column: 9, scope: !253)
!2777 = !DILocation(line: 2386, column: 11, scope: !253)
!2778 = !DILocation(line: 2386, column: 9, scope: !253)
!2779 = !DILocation(line: 2387, column: 2, scope: !253)
!2780 = !DILocation(line: 2388, column: 19, scope: !253)
!2781 = !DILocation(line: 2388, column: 26, scope: !253)
!2782 = !DILocation(line: 2388, column: 2, scope: !253)
!2783 = !DILocation(line: 2396, column: 6, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !253, file: !243, line: 2396, column: 6)
!2785 = !DILocation(line: 2396, column: 6, scope: !253)
!2786 = !DILocation(line: 2398, column: 20, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2784, file: !243, line: 2397, column: 2)
!2788 = !DILocation(line: 2399, column: 20, scope: !2787)
!2789 = !DILocation(line: 2399, column: 18, scope: !2787)
!2790 = !DILocation(line: 2400, column: 21, scope: !2787)
!2791 = !DILocation(line: 2400, column: 19, scope: !2787)
!2792 = !DILocation(line: 2401, column: 2, scope: !2787)
!2793 = !DILocation(line: 2403, column: 16, scope: !253)
!2794 = !DILocation(line: 2403, column: 27, scope: !253)
!2795 = !DILocation(line: 2403, column: 34, scope: !253)
!2796 = !DILocation(line: 2403, column: 2, scope: !253)
!2797 = !DILocation(line: 2405, column: 7, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !253, file: !243, line: 2405, column: 6)
!2799 = !DILocation(line: 2405, column: 6, scope: !253)
!2800 = !DILocation(line: 2408, column: 13, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2798, file: !243, line: 2406, column: 2)
!2802 = !DILocation(line: 2408, column: 24, scope: !2801)
!2803 = !DILocation(line: 2408, column: 34, scope: !2801)
!2804 = !DILocation(line: 2408, column: 41, scope: !2801)
!2805 = !DILocation(line: 2408, column: 58, scope: !2801)
!2806 = !DILocation(line: 2408, column: 70, scope: !2801)
!2807 = !DILocation(line: 2408, column: 3, scope: !2801)
!2808 = !DILocation(line: 2409, column: 15, scope: !2801)
!2809 = !DILocation(line: 2409, column: 26, scope: !2801)
!2810 = !DILocation(line: 2409, column: 3, scope: !2801)
!2811 = !DILocation(line: 2410, column: 2, scope: !2801)
!2812 = !DILocation(line: 2411, column: 1, scope: !253)
!2813 = distinct !DISubprogram(name: "ui_select", scope: !243, file: !243, line: 3142, type: !2814, isLocal: false, isDefinition: true, scopeLine: 3143, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{null, !45}
!2816 = !DILocalVariable(name: "rdp_socket", arg: 1, scope: !2813, file: !243, line: 3142, type: !45)
!2817 = !DILocation(line: 3142, column: 15, scope: !2813)
!2818 = !DILocalVariable(name: "timeout", scope: !2813, file: !243, line: 3144, type: !45)
!2819 = !DILocation(line: 3144, column: 6, scope: !2813)
!2820 = !DILocalVariable(name: "rdp_socket_has_data", scope: !2813, file: !243, line: 3145, type: !44)
!2821 = !DILocation(line: 3145, column: 10, scope: !2813)
!2822 = !DILocation(line: 3147, column: 2, scope: !2813)
!2823 = !DILocation(line: 3147, column: 9, scope: !2824)
!2824 = !DILexicalBlockFile(scope: !2813, file: !243, discriminator: 1)
!2825 = !DILocation(line: 3147, column: 25, scope: !2824)
!2826 = !DILocation(line: 3147, column: 33, scope: !2824)
!2827 = !DILocation(line: 3147, column: 36, scope: !2828)
!2828 = !DILexicalBlockFile(scope: !2813, file: !243, discriminator: 2)
!2829 = !DILocation(line: 3147, column: 56, scope: !2828)
!2830 = !DILocation(line: 3147, column: 2, scope: !2831)
!2831 = !DILexicalBlockFile(scope: !2813, file: !243, discriminator: 3)
!2832 = !DILocation(line: 3150, column: 8, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2834, file: !243, line: 3150, column: 7)
!2834 = distinct !DILexicalBlock(scope: !2813, file: !243, line: 3148, column: 2)
!2835 = !DILocation(line: 3150, column: 7, scope: !2834)
!2836 = !DILocation(line: 3153, column: 16, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2833, file: !243, line: 3151, column: 3)
!2838 = !DILocation(line: 3154, column: 20, scope: !2837)
!2839 = !DILocation(line: 3155, column: 21, scope: !2837)
!2840 = !DILocation(line: 3156, column: 4, scope: !2837)
!2841 = distinct !{!2841, !2822}
!2842 = !DILocation(line: 3159, column: 7, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2834, file: !243, line: 3159, column: 7)
!2844 = !DILocation(line: 3159, column: 24, scope: !2843)
!2845 = !DILocation(line: 3159, column: 31, scope: !2843)
!2846 = !DILocation(line: 3159, column: 34, scope: !2847)
!2847 = !DILexicalBlockFile(scope: !2843, file: !243, discriminator: 1)
!2848 = !DILocation(line: 3159, column: 7, scope: !2847)
!2849 = !DILocation(line: 3162, column: 8, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2851, file: !243, line: 3162, column: 8)
!2851 = distinct !DILexicalBlock(scope: !2843, file: !243, line: 3160, column: 3)
!2852 = !DILocation(line: 3162, column: 33, scope: !2850)
!2853 = !DILocation(line: 3162, column: 8, scope: !2851)
!2854 = !DILocation(line: 3164, column: 21, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2850, file: !243, line: 3163, column: 4)
!2856 = !DILocation(line: 3165, column: 5, scope: !2855)
!2857 = !DILocation(line: 3167, column: 3, scope: !2851)
!2858 = !DILocation(line: 3169, column: 7, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2834, file: !243, line: 3169, column: 7)
!2860 = !DILocation(line: 3169, column: 7, scope: !2834)
!2861 = !DILocation(line: 3170, column: 4, scope: !2859)
!2862 = !DILocation(line: 3187, column: 11, scope: !2834)
!2863 = !DILocation(line: 3189, column: 16, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2834, file: !243, line: 3189, column: 7)
!2865 = !DILocation(line: 3189, column: 7, scope: !2864)
!2866 = !DILocation(line: 3189, column: 27, scope: !2864)
!2867 = !DILocation(line: 3189, column: 7, scope: !2834)
!2868 = !DILocation(line: 3190, column: 12, scope: !2864)
!2869 = !DILocation(line: 3190, column: 4, scope: !2864)
!2870 = !DILocation(line: 3191, column: 12, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2864, file: !243, line: 3191, column: 12)
!2872 = !DILocation(line: 3191, column: 29, scope: !2871)
!2873 = !DILocation(line: 3191, column: 12, scope: !2864)
!2874 = !DILocation(line: 3192, column: 12, scope: !2871)
!2875 = !DILocation(line: 3192, column: 4, scope: !2871)
!2876 = !DILocation(line: 3194, column: 37, scope: !2834)
!2877 = !DILocation(line: 3194, column: 49, scope: !2834)
!2878 = !DILocation(line: 3194, column: 25, scope: !2834)
!2879 = !DILocation(line: 3194, column: 23, scope: !2834)
!2880 = !DILocation(line: 3147, column: 2, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !2813, file: !243, discriminator: 4)
!2882 = !DILocation(line: 3196, column: 1, scope: !2813)
!2883 = !DILocalVariable(name: "xevent", scope: !345, file: !243, line: 2517, type: !1408)
!2884 = !DILocation(line: 2517, column: 9, scope: !345)
!2885 = !DILocalVariable(name: "keysym", scope: !345, file: !243, line: 2518, type: !2886)
!2886 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeySym", file: !80, line: 106, baseType: !79)
!2887 = !DILocation(line: 2518, column: 9, scope: !345)
!2888 = !DILocalVariable(name: "ev_time", scope: !345, file: !243, line: 2519, type: !193)
!2889 = !DILocation(line: 2519, column: 9, scope: !345)
!2890 = !DILocalVariable(name: "str", scope: !345, file: !243, line: 2520, type: !2891)
!2891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 2048, align: 8, elements: !2892)
!2892 = !{!2893}
!2893 = !DISubrange(count: 256)
!2894 = !DILocation(line: 2520, column: 7, scope: !345)
!2895 = !DILocalVariable(name: "status", scope: !345, file: !243, line: 2521, type: !45)
!2896 = !DILocation(line: 2521, column: 8, scope: !345)
!2897 = !DILocalVariable(name: "events", scope: !345, file: !243, line: 2522, type: !45)
!2898 = !DILocation(line: 2522, column: 6, scope: !345)
!2899 = !DILocalVariable(name: "sw", scope: !345, file: !243, line: 2523, type: !360)
!2900 = !DILocation(line: 2523, column: 19, scope: !345)
!2901 = !DILocation(line: 2526, column: 2, scope: !345)
!2902 = !DILocation(line: 2526, column: 19, scope: !2903)
!2903 = !DILexicalBlockFile(scope: !345, file: !243, discriminator: 1)
!2904 = !DILocation(line: 2526, column: 10, scope: !2903)
!2905 = !DILocation(line: 2526, column: 30, scope: !2903)
!2906 = !DILocation(line: 2526, column: 35, scope: !2903)
!2907 = !DILocation(line: 2526, column: 44, scope: !2908)
!2908 = !DILexicalBlockFile(scope: !345, file: !243, discriminator: 2)
!2909 = !DILocation(line: 2526, column: 47, scope: !2908)
!2910 = !DILocation(line: 2526, column: 2, scope: !2911)
!2911 = !DILexicalBlockFile(scope: !345, file: !243, discriminator: 3)
!2912 = !DILocation(line: 2528, column: 14, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !345, file: !243, line: 2527, column: 2)
!2914 = !DILocation(line: 2528, column: 3, scope: !2913)
!2915 = !DILocation(line: 2530, column: 8, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2913, file: !243, line: 2530, column: 7)
!2917 = !DILocation(line: 2530, column: 7, scope: !2913)
!2918 = !DILocation(line: 2532, column: 4, scope: !2916)
!2919 = distinct !{!2919, !2901}
!2920 = !DILocation(line: 2535, column: 14, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2913, file: !243, line: 2535, column: 7)
!2922 = !DILocation(line: 2535, column: 19, scope: !2921)
!2923 = !DILocation(line: 2536, column: 6, scope: !2921)
!2924 = !DILocation(line: 2536, column: 16, scope: !2925)
!2925 = !DILexicalBlockFile(scope: !2921, file: !243, discriminator: 1)
!2926 = !DILocation(line: 2536, column: 21, scope: !2925)
!2927 = !DILocation(line: 2536, column: 31, scope: !2925)
!2928 = !DILocation(line: 2536, column: 34, scope: !2925)
!2929 = !DILocation(line: 2536, column: 53, scope: !2925)
!2930 = !DILocation(line: 2536, column: 28, scope: !2925)
!2931 = !DILocation(line: 2535, column: 7, scope: !2932)
!2932 = !DILexicalBlockFile(scope: !2913, file: !243, discriminator: 1)
!2933 = !DILocation(line: 2537, column: 4, scope: !2921)
!2934 = !DILocation(line: 2539, column: 8, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2913, file: !243, line: 2539, column: 7)
!2936 = !DILocation(line: 2539, column: 13, scope: !2935)
!2937 = !DILocation(line: 2539, column: 21, scope: !2935)
!2938 = !DILocation(line: 2539, column: 25, scope: !2939)
!2939 = !DILexicalBlockFile(scope: !2935, file: !243, discriminator: 1)
!2940 = !DILocation(line: 2539, column: 53, scope: !2939)
!2941 = !DILocation(line: 2539, column: 7, scope: !2939)
!2942 = !DILocation(line: 2541, column: 4, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2935, file: !243, line: 2540, column: 3)
!2944 = !DILocation(line: 2542, column: 4, scope: !2943)
!2945 = !DILocation(line: 2545, column: 18, scope: !2913)
!2946 = !DILocation(line: 2545, column: 3, scope: !2913)
!2947 = !DILocation(line: 2548, column: 16, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2548, column: 9)
!2949 = distinct !DILexicalBlock(scope: !2913, file: !243, line: 2546, column: 3)
!2950 = !DILocation(line: 2548, column: 28, scope: !2948)
!2951 = !DILocation(line: 2548, column: 38, scope: !2948)
!2952 = !DILocation(line: 2548, column: 35, scope: !2948)
!2953 = !DILocation(line: 2548, column: 9, scope: !2949)
!2954 = !DILocation(line: 2550, column: 14, scope: !2948)
!2955 = !DILocation(line: 2550, column: 26, scope: !2948)
!2956 = !DILocation(line: 2550, column: 32, scope: !2948)
!2957 = !DILocation(line: 2549, column: 19, scope: !2948)
!2958 = !DILocation(line: 2549, column: 6, scope: !2948)
!2959 = !DILocation(line: 2552, column: 5, scope: !2949)
!2960 = !DILocation(line: 2554, column: 16, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2554, column: 9)
!2962 = !DILocation(line: 2554, column: 24, scope: !2961)
!2963 = !DILocation(line: 2554, column: 40, scope: !2961)
!2964 = !DILocation(line: 2554, column: 37, scope: !2961)
!2965 = !DILocation(line: 2554, column: 9, scope: !2949)
!2966 = !DILocation(line: 2556, column: 17, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2968, file: !243, line: 2556, column: 10)
!2968 = distinct !DILexicalBlock(scope: !2961, file: !243, line: 2555, column: 5)
!2969 = !DILocation(line: 2556, column: 25, scope: !2967)
!2970 = !DILocation(line: 2556, column: 30, scope: !2967)
!2971 = !DILocation(line: 2556, column: 10, scope: !2967)
!2972 = !DILocation(line: 2556, column: 44, scope: !2967)
!2973 = !DILocation(line: 2556, column: 35, scope: !2967)
!2974 = !DILocation(line: 2556, column: 10, scope: !2968)
!2975 = !DILocation(line: 2562, column: 40, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2967, file: !243, line: 2557, column: 6)
!2977 = !DILocation(line: 2562, column: 48, scope: !2976)
!2978 = !DILocation(line: 2562, column: 12, scope: !2976)
!2979 = !DILocation(line: 2562, column: 10, scope: !2976)
!2980 = !DILocation(line: 2563, column: 12, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2976, file: !243, line: 2563, column: 11)
!2982 = !DILocation(line: 2563, column: 11, scope: !2976)
!2983 = !DILocation(line: 2565, column: 8, scope: !2981)
!2984 = !DILocation(line: 2567, column: 29, scope: !2976)
!2985 = !DILocation(line: 2567, column: 33, scope: !2976)
!2986 = !DILocation(line: 2567, column: 7, scope: !2976)
!2987 = !DILocation(line: 2568, column: 6, scope: !2976)
!2988 = !DILocation(line: 2569, column: 22, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2967, file: !243, line: 2569, column: 15)
!2990 = !DILocation(line: 2569, column: 30, scope: !2989)
!2991 = !DILocation(line: 2569, column: 35, scope: !2989)
!2992 = !DILocation(line: 2569, column: 15, scope: !2989)
!2993 = !DILocation(line: 2569, column: 49, scope: !2989)
!2994 = !DILocation(line: 2569, column: 40, scope: !2989)
!2995 = !DILocation(line: 2569, column: 15, scope: !2967)
!2996 = !DILocation(line: 2573, column: 7, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2989, file: !243, line: 2570, column: 6)
!2998 = !DILocation(line: 2573, column: 10, scope: !2997)
!2999 = !DILocation(line: 2572, column: 14, scope: !2997)
!3000 = !DILocation(line: 2572, column: 22, scope: !2997)
!3001 = !DILocation(line: 2572, column: 29, scope: !2997)
!3002 = !DILocation(line: 2574, column: 18, scope: !2997)
!3003 = !DILocation(line: 2574, column: 36, scope: !2997)
!3004 = !DILocation(line: 2574, column: 44, scope: !2997)
!3005 = !DILocation(line: 2574, column: 7, scope: !2997)
!3006 = !DILocation(line: 2577, column: 7, scope: !2997)
!3007 = !DILocation(line: 2579, column: 5, scope: !2968)
!3008 = !DILocation(line: 2580, column: 5, scope: !2949)
!3009 = !DILocation(line: 2583, column: 33, scope: !2949)
!3010 = !DILocation(line: 2583, column: 38, scope: !2949)
!3011 = !DILocation(line: 2583, column: 24, scope: !2949)
!3012 = !DILocation(line: 2584, column: 9, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2584, column: 9)
!3014 = !DILocation(line: 2584, column: 14, scope: !3013)
!3015 = !DILocation(line: 2584, column: 9, scope: !2949)
!3016 = !DILocation(line: 2587, column: 22, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3013, file: !243, line: 2586, column: 5)
!3018 = !DILocation(line: 2588, column: 16, scope: !3017)
!3019 = !DILocation(line: 2588, column: 22, scope: !3017)
!3020 = !DILocation(line: 2587, column: 6, scope: !3017)
!3021 = !DILocation(line: 2590, column: 13, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3017, file: !243, line: 2590, column: 10)
!3023 = !DILocation(line: 2590, column: 20, scope: !3022)
!3024 = !DILocation(line: 2590, column: 37, scope: !3022)
!3025 = !DILocation(line: 2590, column: 41, scope: !3026)
!3026 = !DILexicalBlockFile(scope: !3022, file: !243, discriminator: 1)
!3027 = !DILocation(line: 2590, column: 48, scope: !3026)
!3028 = !DILocation(line: 2590, column: 10, scope: !3026)
!3029 = !DILocation(line: 2594, column: 14, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3022, file: !243, line: 2591, column: 6)
!3031 = !DILocation(line: 2592, column: 7, scope: !3030)
!3032 = !DILocation(line: 2595, column: 7, scope: !3030)
!3033 = !DILocation(line: 2597, column: 5, scope: !3017)
!3034 = !DILocation(line: 2601, column: 6, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3013, file: !243, line: 2599, column: 5)
!3036 = !DILocation(line: 2603, column: 20, scope: !3035)
!3037 = !DILocation(line: 2603, column: 44, scope: !3035)
!3038 = !DILocation(line: 2603, column: 6, scope: !3035)
!3039 = !DILocation(line: 2607, column: 64, scope: !2949)
!3040 = !DILocation(line: 2608, column: 23, scope: !2949)
!3041 = !DILocation(line: 2608, column: 12, scope: !2949)
!3042 = !DILocation(line: 2607, column: 5, scope: !2949)
!3043 = !DILocation(line: 2610, column: 32, scope: !2949)
!3044 = !DILocation(line: 2610, column: 37, scope: !2949)
!3045 = !DILocation(line: 2610, column: 46, scope: !2949)
!3046 = !DILocation(line: 2610, column: 5, scope: !2949)
!3047 = !DILocation(line: 2611, column: 15, scope: !2949)
!3048 = !DILocation(line: 2611, column: 13, scope: !2949)
!3049 = !DILocation(line: 2612, column: 29, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2612, column: 9)
!3051 = !DILocation(line: 2612, column: 44, scope: !3050)
!3052 = !DILocation(line: 2612, column: 49, scope: !3050)
!3053 = !DILocation(line: 2612, column: 56, scope: !3050)
!3054 = !DILocation(line: 2612, column: 9, scope: !3050)
!3055 = !DILocation(line: 2612, column: 9, scope: !2949)
!3056 = !DILocation(line: 2613, column: 6, scope: !3050)
!3057 = !DILocation(line: 2615, column: 23, scope: !2949)
!3058 = !DILocation(line: 2615, column: 38, scope: !2949)
!3059 = !DILocation(line: 2615, column: 43, scope: !2949)
!3060 = !DILocation(line: 2615, column: 59, scope: !2949)
!3061 = !DILocation(line: 2615, column: 64, scope: !2949)
!3062 = !DILocation(line: 2616, column: 9, scope: !2949)
!3063 = !DILocation(line: 2615, column: 5, scope: !2949)
!3064 = !DILocation(line: 2617, column: 5, scope: !2949)
!3065 = !DILocation(line: 2620, column: 33, scope: !2949)
!3066 = !DILocation(line: 2620, column: 38, scope: !2949)
!3067 = !DILocation(line: 2620, column: 24, scope: !2949)
!3068 = !DILocation(line: 2621, column: 19, scope: !2949)
!3069 = !DILocation(line: 2621, column: 43, scope: !2949)
!3070 = !DILocation(line: 2621, column: 5, scope: !2949)
!3071 = !DILocation(line: 2624, column: 66, scope: !2949)
!3072 = !DILocation(line: 2625, column: 23, scope: !2949)
!3073 = !DILocation(line: 2625, column: 12, scope: !2949)
!3074 = !DILocation(line: 2624, column: 5, scope: !2949)
!3075 = !DILocation(line: 2627, column: 43, scope: !2949)
!3076 = !DILocation(line: 2627, column: 48, scope: !2949)
!3077 = !DILocation(line: 2627, column: 57, scope: !2949)
!3078 = !DILocation(line: 2627, column: 14, scope: !2949)
!3079 = !DILocation(line: 2627, column: 12, scope: !2949)
!3080 = !DILocation(line: 2628, column: 15, scope: !2949)
!3081 = !DILocation(line: 2628, column: 13, scope: !2949)
!3082 = !DILocation(line: 2629, column: 29, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2629, column: 9)
!3084 = !DILocation(line: 2629, column: 44, scope: !3083)
!3085 = !DILocation(line: 2629, column: 49, scope: !3083)
!3086 = !DILocation(line: 2629, column: 56, scope: !3083)
!3087 = !DILocation(line: 2629, column: 9, scope: !3083)
!3088 = !DILocation(line: 2629, column: 9, scope: !2949)
!3089 = !DILocation(line: 2630, column: 6, scope: !3083)
!3090 = !DILocation(line: 2632, column: 23, scope: !2949)
!3091 = !DILocation(line: 2632, column: 38, scope: !2949)
!3092 = !DILocation(line: 2632, column: 43, scope: !2949)
!3093 = !DILocation(line: 2632, column: 59, scope: !2949)
!3094 = !DILocation(line: 2632, column: 64, scope: !2949)
!3095 = !DILocation(line: 2633, column: 9, scope: !2949)
!3096 = !DILocation(line: 2632, column: 5, scope: !2949)
!3097 = !DILocation(line: 2634, column: 5, scope: !2949)
!3098 = !DILocation(line: 2637, column: 5, scope: !2949)
!3099 = !DILocation(line: 2638, column: 5, scope: !2949)
!3100 = !DILocation(line: 2641, column: 5, scope: !2949)
!3101 = !DILocation(line: 2642, column: 5, scope: !2949)
!3102 = !DILocation(line: 2645, column: 9, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2645, column: 9)
!3104 = !DILocation(line: 2645, column: 9, scope: !2949)
!3105 = !DILocation(line: 2647, column: 18, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3103, file: !243, line: 2646, column: 5)
!3107 = !DILocation(line: 2647, column: 29, scope: !3106)
!3108 = !DILocation(line: 2648, column: 18, scope: !3106)
!3109 = !DILocation(line: 2648, column: 26, scope: !3106)
!3110 = !DILocation(line: 2648, column: 35, scope: !3106)
!3111 = !DILocation(line: 2648, column: 33, scope: !3106)
!3112 = !DILocation(line: 2649, column: 18, scope: !3106)
!3113 = !DILocation(line: 2649, column: 26, scope: !3106)
!3114 = !DILocation(line: 2649, column: 35, scope: !3106)
!3115 = !DILocation(line: 2649, column: 33, scope: !3106)
!3116 = !DILocation(line: 2647, column: 6, scope: !3106)
!3117 = !DILocation(line: 2650, column: 6, scope: !3106)
!3118 = !DILocation(line: 2653, column: 9, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2653, column: 9)
!3120 = !DILocation(line: 2653, column: 22, scope: !3119)
!3121 = !DILocation(line: 2653, column: 26, scope: !3122)
!3122 = !DILexicalBlockFile(scope: !3119, file: !243, discriminator: 1)
!3123 = !DILocation(line: 2653, column: 9, scope: !3122)
!3124 = !DILocation(line: 2654, column: 21, scope: !3119)
!3125 = !DILocation(line: 2654, column: 32, scope: !3119)
!3126 = !DILocation(line: 2654, column: 6, scope: !3119)
!3127 = !DILocation(line: 2657, column: 16, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2657, column: 9)
!3129 = !DILocation(line: 2657, column: 24, scope: !3128)
!3130 = !DILocation(line: 2657, column: 34, scope: !3128)
!3131 = !DILocation(line: 2657, column: 31, scope: !3128)
!3132 = !DILocation(line: 2657, column: 9, scope: !2949)
!3133 = !DILocation(line: 2659, column: 21, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3128, file: !243, line: 2658, column: 5)
!3135 = !DILocation(line: 2660, column: 21, scope: !3134)
!3136 = !DILocation(line: 2660, column: 29, scope: !3134)
!3137 = !DILocation(line: 2660, column: 14, scope: !3134)
!3138 = !DILocation(line: 2660, column: 39, scope: !3134)
!3139 = !DILocation(line: 2660, column: 47, scope: !3134)
!3140 = !DILocation(line: 2660, column: 32, scope: !3134)
!3141 = !DILocation(line: 2659, column: 6, scope: !3142)
!3142 = !DILexicalBlockFile(scope: !3134, file: !243, discriminator: 1)
!3143 = !DILocation(line: 2661, column: 5, scope: !3134)
!3144 = !DILocation(line: 2665, column: 21, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3128, file: !243, line: 2663, column: 5)
!3146 = !DILocation(line: 2666, column: 21, scope: !3145)
!3147 = !DILocation(line: 2666, column: 29, scope: !3145)
!3148 = !DILocation(line: 2666, column: 14, scope: !3145)
!3149 = !DILocation(line: 2667, column: 21, scope: !3145)
!3150 = !DILocation(line: 2667, column: 29, scope: !3145)
!3151 = !DILocation(line: 2667, column: 14, scope: !3145)
!3152 = !DILocation(line: 2665, column: 6, scope: !3153)
!3153 = !DILexicalBlockFile(scope: !3145, file: !243, discriminator: 1)
!3154 = !DILocation(line: 2669, column: 5, scope: !2949)
!3155 = !DILocation(line: 2672, column: 16, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2672, column: 9)
!3157 = !DILocation(line: 2672, column: 23, scope: !3156)
!3158 = !DILocation(line: 2672, column: 28, scope: !3156)
!3159 = !DILocation(line: 2672, column: 9, scope: !2949)
!3160 = !DILocation(line: 2673, column: 6, scope: !3156)
!3161 = !DILocation(line: 2674, column: 15, scope: !2949)
!3162 = !DILocation(line: 2675, column: 5, scope: !2949)
!3163 = !DILocation(line: 2676, column: 9, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2676, column: 9)
!3165 = !DILocation(line: 2676, column: 25, scope: !3164)
!3166 = !DILocation(line: 2676, column: 28, scope: !3167)
!3167 = !DILexicalBlockFile(scope: !3164, file: !243, discriminator: 1)
!3168 = !DILocation(line: 2676, column: 9, scope: !3167)
!3169 = !DILocation(line: 2677, column: 20, scope: !3164)
!3170 = !DILocation(line: 2677, column: 31, scope: !3164)
!3171 = !DILocation(line: 2677, column: 6, scope: !3164)
!3172 = !DILocation(line: 2680, column: 38, scope: !2949)
!3173 = !DILocation(line: 2680, column: 45, scope: !2949)
!3174 = !DILocation(line: 2680, column: 10, scope: !2949)
!3175 = !DILocation(line: 2680, column: 8, scope: !2949)
!3176 = !DILocation(line: 2681, column: 10, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2681, column: 9)
!3178 = !DILocation(line: 2681, column: 9, scope: !2949)
!3179 = !DILocation(line: 2682, column: 6, scope: !3177)
!3180 = !DILocation(line: 2697, column: 9, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2697, column: 9)
!3182 = !DILocation(line: 2697, column: 13, scope: !3181)
!3183 = !DILocation(line: 2697, column: 19, scope: !3181)
!3184 = !DILocation(line: 2697, column: 16, scope: !3181)
!3185 = !DILocation(line: 2697, column: 9, scope: !2949)
!3186 = !DILocation(line: 2700, column: 27, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3188, file: !243, line: 2700, column: 10)
!3188 = distinct !DILexicalBlock(scope: !3181, file: !243, line: 2698, column: 5)
!3189 = !DILocation(line: 2700, column: 10, scope: !3187)
!3190 = !DILocation(line: 2700, column: 10, scope: !3188)
!3191 = !DILocation(line: 2701, column: 27, scope: !3187)
!3192 = !DILocation(line: 2701, column: 31, scope: !3187)
!3193 = !DILocation(line: 2701, column: 7, scope: !3187)
!3194 = !DILocation(line: 2702, column: 27, scope: !3188)
!3195 = !DILocation(line: 2702, column: 31, scope: !3188)
!3196 = !DILocation(line: 2702, column: 25, scope: !3188)
!3197 = !DILocation(line: 2703, column: 5, scope: !3188)
!3198 = !DILocation(line: 2704, column: 5, scope: !2949)
!3199 = !DILocation(line: 2707, column: 16, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2707, column: 9)
!3201 = !DILocation(line: 2707, column: 23, scope: !3200)
!3202 = !DILocation(line: 2707, column: 28, scope: !3200)
!3203 = !DILocation(line: 2707, column: 9, scope: !2949)
!3204 = !DILocation(line: 2708, column: 6, scope: !3200)
!3205 = !DILocation(line: 2709, column: 15, scope: !2949)
!3206 = !DILocation(line: 2710, column: 16, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2710, column: 9)
!3208 = !DILocation(line: 2710, column: 23, scope: !3207)
!3209 = !DILocation(line: 2710, column: 28, scope: !3207)
!3210 = !DILocation(line: 2710, column: 9, scope: !2949)
!3211 = !DILocation(line: 2711, column: 22, scope: !3207)
!3212 = !DILocation(line: 2711, column: 6, scope: !3207)
!3213 = !DILocation(line: 2712, column: 5, scope: !2949)
!3214 = !DILocation(line: 2717, column: 20, scope: !2949)
!3215 = !DILocation(line: 2718, column: 9, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2718, column: 9)
!3217 = !DILocation(line: 2718, column: 9, scope: !2949)
!3218 = !DILocation(line: 2720, column: 21, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3216, file: !243, line: 2719, column: 5)
!3220 = !DILocation(line: 2720, column: 32, scope: !3219)
!3221 = !DILocation(line: 2720, column: 6, scope: !3219)
!3222 = !DILocation(line: 2722, column: 6, scope: !3219)
!3223 = !DILocation(line: 2724, column: 9, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2724, column: 9)
!3225 = !DILocation(line: 2724, column: 9, scope: !2949)
!3226 = !DILocation(line: 2725, column: 20, scope: !3224)
!3227 = !DILocation(line: 2725, column: 31, scope: !3224)
!3228 = !DILocation(line: 2725, column: 6, scope: !3224)
!3229 = !DILocation(line: 2727, column: 5, scope: !2949)
!3230 = !DILocation(line: 2731, column: 20, scope: !2949)
!3231 = !DILocation(line: 2732, column: 21, scope: !2949)
!3232 = !DILocation(line: 2732, column: 5, scope: !2949)
!3233 = !DILocation(line: 2733, column: 5, scope: !2949)
!3234 = !DILocation(line: 2736, column: 16, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2736, column: 9)
!3236 = !DILocation(line: 2736, column: 24, scope: !3235)
!3237 = !DILocation(line: 2736, column: 34, scope: !3235)
!3238 = !DILocation(line: 2736, column: 31, scope: !3235)
!3239 = !DILocation(line: 2736, column: 9, scope: !2949)
!3240 = !DILocation(line: 2738, column: 16, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3235, file: !243, line: 2737, column: 5)
!3242 = !DILocation(line: 2738, column: 27, scope: !3241)
!3243 = !DILocation(line: 2738, column: 47, scope: !3241)
!3244 = !DILocation(line: 2738, column: 55, scope: !3241)
!3245 = !DILocation(line: 2739, column: 9, scope: !3241)
!3246 = !DILocation(line: 2740, column: 16, scope: !3241)
!3247 = !DILocation(line: 2740, column: 24, scope: !3241)
!3248 = !DILocation(line: 2740, column: 34, scope: !3241)
!3249 = !DILocation(line: 2740, column: 42, scope: !3241)
!3250 = !DILocation(line: 2741, column: 16, scope: !3241)
!3251 = !DILocation(line: 2741, column: 24, scope: !3241)
!3252 = !DILocation(line: 2741, column: 38, scope: !3241)
!3253 = !DILocation(line: 2741, column: 46, scope: !3241)
!3254 = !DILocation(line: 2742, column: 16, scope: !3241)
!3255 = !DILocation(line: 2742, column: 24, scope: !3241)
!3256 = !DILocation(line: 2742, column: 34, scope: !3241)
!3257 = !DILocation(line: 2742, column: 42, scope: !3241)
!3258 = !DILocation(line: 2738, column: 6, scope: !3241)
!3259 = !DILocation(line: 2743, column: 5, scope: !3241)
!3260 = !DILocation(line: 2746, column: 39, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3235, file: !243, line: 2745, column: 5)
!3262 = !DILocation(line: 2746, column: 47, scope: !3261)
!3263 = !DILocation(line: 2746, column: 11, scope: !3261)
!3264 = !DILocation(line: 2746, column: 9, scope: !3261)
!3265 = !DILocation(line: 2747, column: 11, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3261, file: !243, line: 2747, column: 10)
!3267 = !DILocation(line: 2747, column: 10, scope: !3261)
!3268 = !DILocation(line: 2748, column: 7, scope: !3266)
!3269 = !DILocation(line: 2749, column: 16, scope: !3261)
!3270 = !DILocation(line: 2749, column: 27, scope: !3261)
!3271 = !DILocation(line: 2750, column: 16, scope: !3261)
!3272 = !DILocation(line: 2750, column: 24, scope: !3261)
!3273 = !DILocation(line: 2750, column: 32, scope: !3261)
!3274 = !DILocation(line: 2751, column: 16, scope: !3261)
!3275 = !DILocation(line: 2751, column: 24, scope: !3261)
!3276 = !DILocation(line: 2751, column: 28, scope: !3261)
!3277 = !DILocation(line: 2751, column: 32, scope: !3261)
!3278 = !DILocation(line: 2751, column: 26, scope: !3261)
!3279 = !DILocation(line: 2752, column: 16, scope: !3261)
!3280 = !DILocation(line: 2752, column: 24, scope: !3261)
!3281 = !DILocation(line: 2752, column: 28, scope: !3261)
!3282 = !DILocation(line: 2752, column: 32, scope: !3261)
!3283 = !DILocation(line: 2752, column: 26, scope: !3261)
!3284 = !DILocation(line: 2753, column: 16, scope: !3261)
!3285 = !DILocation(line: 2753, column: 24, scope: !3261)
!3286 = !DILocation(line: 2754, column: 16, scope: !3261)
!3287 = !DILocation(line: 2754, column: 24, scope: !3261)
!3288 = !DILocation(line: 2754, column: 39, scope: !3261)
!3289 = !DILocation(line: 2754, column: 47, scope: !3261)
!3290 = !DILocation(line: 2755, column: 16, scope: !3261)
!3291 = !DILocation(line: 2755, column: 24, scope: !3261)
!3292 = !DILocation(line: 2749, column: 6, scope: !3261)
!3293 = !DILocation(line: 2758, column: 5, scope: !2949)
!3294 = !DILocation(line: 2763, column: 16, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2763, column: 9)
!3296 = !DILocation(line: 2763, column: 25, scope: !3295)
!3297 = !DILocation(line: 2763, column: 33, scope: !3295)
!3298 = !DILocation(line: 2764, column: 8, scope: !3295)
!3299 = !DILocation(line: 2764, column: 18, scope: !3300)
!3300 = !DILexicalBlockFile(scope: !3295, file: !243, discriminator: 1)
!3301 = !DILocation(line: 2764, column: 27, scope: !3300)
!3302 = !DILocation(line: 2764, column: 35, scope: !3300)
!3303 = !DILocation(line: 2763, column: 9, scope: !3304)
!3304 = !DILexicalBlockFile(scope: !2949, file: !243, discriminator: 1)
!3305 = !DILocation(line: 2765, column: 38, scope: !3295)
!3306 = !DILocation(line: 2765, column: 6, scope: !3295)
!3307 = !DILocation(line: 2767, column: 16, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2767, column: 9)
!3309 = !DILocation(line: 2767, column: 25, scope: !3308)
!3310 = !DILocation(line: 2767, column: 33, scope: !3308)
!3311 = !DILocation(line: 2767, column: 9, scope: !2949)
!3312 = !DILocation(line: 2769, column: 23, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3308, file: !243, line: 2768, column: 5)
!3314 = !DILocation(line: 2769, column: 6, scope: !3313)
!3315 = !DILocation(line: 2770, column: 38, scope: !3313)
!3316 = !DILocation(line: 2770, column: 18, scope: !3313)
!3317 = !DILocation(line: 2770, column: 16, scope: !3313)
!3318 = !DILocation(line: 2771, column: 5, scope: !3313)
!3319 = !DILocation(line: 2773, column: 16, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2773, column: 9)
!3321 = !DILocation(line: 2773, column: 25, scope: !3320)
!3322 = !DILocation(line: 2773, column: 33, scope: !3320)
!3323 = !DILocation(line: 2773, column: 9, scope: !2949)
!3324 = !DILocation(line: 2775, column: 6, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3320, file: !243, line: 2774, column: 5)
!3326 = !DILocation(line: 2776, column: 5, scope: !3325)
!3327 = !DILocation(line: 2778, column: 5, scope: !2949)
!3328 = !DILocation(line: 2782, column: 42, scope: !2949)
!3329 = !DILocation(line: 2782, column: 5, scope: !2949)
!3330 = !DILocation(line: 2783, column: 5, scope: !2949)
!3331 = !DILocation(line: 2785, column: 43, scope: !2949)
!3332 = !DILocation(line: 2785, column: 5, scope: !2949)
!3333 = !DILocation(line: 2786, column: 5, scope: !2949)
!3334 = !DILocation(line: 2788, column: 5, scope: !2949)
!3335 = !DILocation(line: 2789, column: 5, scope: !2949)
!3336 = !DILocation(line: 2791, column: 41, scope: !2949)
!3337 = !DILocation(line: 2791, column: 5, scope: !2949)
!3338 = !DILocation(line: 2792, column: 16, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2792, column: 9)
!3340 = !DILocation(line: 2792, column: 26, scope: !3339)
!3341 = !DILocation(line: 2792, column: 36, scope: !3339)
!3342 = !DILocation(line: 2792, column: 33, scope: !3339)
!3343 = !DILocation(line: 2792, column: 9, scope: !2949)
!3344 = !DILocation(line: 2793, column: 6, scope: !3339)
!3345 = !DILocation(line: 2794, column: 16, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2794, column: 9)
!3347 = !DILocation(line: 2794, column: 26, scope: !3346)
!3348 = !DILocation(line: 2794, column: 35, scope: !3346)
!3349 = !DILocation(line: 2794, column: 38, scope: !3346)
!3350 = !DILocation(line: 2794, column: 57, scope: !3346)
!3351 = !DILocation(line: 2794, column: 33, scope: !3346)
!3352 = !DILocation(line: 2794, column: 9, scope: !2949)
!3353 = !DILocation(line: 2795, column: 6, scope: !3346)
!3354 = !DILocation(line: 2798, column: 38, scope: !2949)
!3355 = !DILocation(line: 2798, column: 48, scope: !2949)
!3356 = !DILocation(line: 2798, column: 10, scope: !2949)
!3357 = !DILocation(line: 2798, column: 8, scope: !2949)
!3358 = !DILocation(line: 2799, column: 10, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2799, column: 9)
!3360 = !DILocation(line: 2799, column: 9, scope: !2949)
!3361 = !DILocation(line: 2800, column: 6, scope: !3359)
!3362 = !DILocation(line: 2802, column: 17, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2802, column: 9)
!3364 = !DILocation(line: 2802, column: 27, scope: !3363)
!3365 = !DILocation(line: 2802, column: 35, scope: !3363)
!3366 = !DILocation(line: 2802, column: 32, scope: !3363)
!3367 = !DILocation(line: 2803, column: 9, scope: !3363)
!3368 = !DILocation(line: 2803, column: 20, scope: !3369)
!3369 = !DILexicalBlockFile(scope: !3363, file: !243, discriminator: 1)
!3370 = !DILocation(line: 2803, column: 30, scope: !3369)
!3371 = !DILocation(line: 2803, column: 36, scope: !3369)
!3372 = !DILocation(line: 2802, column: 9, scope: !3304)
!3373 = !DILocation(line: 2805, column: 40, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3363, file: !243, line: 2804, column: 5)
!3375 = !DILocation(line: 2805, column: 44, scope: !3374)
!3376 = !DILocation(line: 2805, column: 18, scope: !3374)
!3377 = !DILocation(line: 2805, column: 6, scope: !3374)
!3378 = !DILocation(line: 2805, column: 10, scope: !3374)
!3379 = !DILocation(line: 2805, column: 16, scope: !3374)
!3380 = !DILocation(line: 2806, column: 26, scope: !3374)
!3381 = !DILocation(line: 2806, column: 30, scope: !3374)
!3382 = !DILocation(line: 2806, column: 34, scope: !3374)
!3383 = !DILocation(line: 2806, column: 38, scope: !3374)
!3384 = !DILocation(line: 2806, column: 6, scope: !3374)
!3385 = !DILocation(line: 2807, column: 5, scope: !3374)
!3386 = !DILocation(line: 2809, column: 17, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2809, column: 9)
!3388 = !DILocation(line: 2809, column: 27, scope: !3387)
!3389 = !DILocation(line: 2809, column: 35, scope: !3387)
!3390 = !DILocation(line: 2809, column: 32, scope: !3387)
!3391 = !DILocation(line: 2810, column: 9, scope: !3387)
!3392 = !DILocation(line: 2810, column: 20, scope: !3393)
!3393 = !DILexicalBlockFile(scope: !3387, file: !243, discriminator: 1)
!3394 = !DILocation(line: 2810, column: 30, scope: !3393)
!3395 = !DILocation(line: 2810, column: 36, scope: !3393)
!3396 = !DILocation(line: 2809, column: 9, scope: !3304)
!3397 = !DILocation(line: 2812, column: 44, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3387, file: !243, line: 2811, column: 5)
!3399 = !DILocation(line: 2812, column: 48, scope: !3398)
!3400 = !DILocation(line: 2812, column: 20, scope: !3398)
!3401 = !DILocation(line: 2812, column: 6, scope: !3398)
!3402 = !DILocation(line: 2812, column: 10, scope: !3398)
!3403 = !DILocation(line: 2812, column: 18, scope: !3398)
!3404 = !DILocation(line: 2813, column: 24, scope: !3398)
!3405 = !DILocation(line: 2813, column: 28, scope: !3398)
!3406 = !DILocation(line: 2813, column: 33, scope: !3398)
!3407 = !DILocation(line: 2813, column: 37, scope: !3398)
!3408 = !DILocation(line: 2813, column: 6, scope: !3398)
!3409 = !DILocation(line: 2814, column: 5, scope: !3398)
!3410 = !DILocation(line: 2816, column: 5, scope: !2949)
!3411 = !DILocation(line: 2818, column: 16, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2818, column: 9)
!3413 = !DILocation(line: 2818, column: 27, scope: !3412)
!3414 = !DILocation(line: 2818, column: 37, scope: !3412)
!3415 = !DILocation(line: 2818, column: 34, scope: !3412)
!3416 = !DILocation(line: 2818, column: 9, scope: !2949)
!3417 = !DILocalVariable(name: "attr", scope: !3418, file: !243, line: 2820, type: !2170)
!3418 = distinct !DILexicalBlock(scope: !3412, file: !243, line: 2819, column: 5)
!3419 = !DILocation(line: 2820, column: 24, scope: !3418)
!3420 = !DILocation(line: 2821, column: 27, scope: !3418)
!3421 = !DILocation(line: 2821, column: 38, scope: !3418)
!3422 = !DILocation(line: 2821, column: 6, scope: !3418)
!3423 = !DILocation(line: 2822, column: 28, scope: !3418)
!3424 = !DILocation(line: 2822, column: 21, scope: !3418)
!3425 = !DILocation(line: 2823, column: 29, scope: !3418)
!3426 = !DILocation(line: 2823, column: 22, scope: !3418)
!3427 = !DILocation(line: 2826, column: 13, scope: !3418)
!3428 = !DILocation(line: 2826, column: 29, scope: !3418)
!3429 = !DILocation(line: 2825, column: 6, scope: !3418)
!3430 = !DILocation(line: 2828, column: 22, scope: !3418)
!3431 = !DILocation(line: 2829, column: 5, scope: !3418)
!3432 = !DILocation(line: 2831, column: 10, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2831, column: 9)
!3434 = !DILocation(line: 2831, column: 9, scope: !2949)
!3435 = !DILocation(line: 2833, column: 6, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3433, file: !243, line: 2832, column: 5)
!3437 = !DILocation(line: 2834, column: 5, scope: !3436)
!3438 = !DILocation(line: 2835, column: 5, scope: !2949)
!3439 = !DILocation(line: 2837, column: 16, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2837, column: 9)
!3441 = !DILocation(line: 2837, column: 27, scope: !3440)
!3442 = !DILocation(line: 2837, column: 37, scope: !3440)
!3443 = !DILocation(line: 2837, column: 34, scope: !3440)
!3444 = !DILocation(line: 2837, column: 9, scope: !2949)
!3445 = !DILocation(line: 2839, column: 22, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3440, file: !243, line: 2838, column: 5)
!3447 = !DILocation(line: 2840, column: 5, scope: !3446)
!3448 = !DILocation(line: 2842, column: 10, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2842, column: 9)
!3450 = !DILocation(line: 2842, column: 9, scope: !2949)
!3451 = !DILocation(line: 2844, column: 6, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3449, file: !243, line: 2843, column: 5)
!3453 = !DILocation(line: 2845, column: 5, scope: !3452)
!3454 = !DILocation(line: 2846, column: 5, scope: !2949)
!3455 = !DILocation(line: 2850, column: 16, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2850, column: 9)
!3457 = !DILocation(line: 2850, column: 27, scope: !3456)
!3458 = !DILocation(line: 2850, column: 36, scope: !3456)
!3459 = !DILocation(line: 2850, column: 39, scope: !3456)
!3460 = !DILocation(line: 2850, column: 58, scope: !3456)
!3461 = !DILocation(line: 2850, column: 34, scope: !3456)
!3462 = !DILocation(line: 2850, column: 9, scope: !2949)
!3463 = !DILocation(line: 2853, column: 10, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !243, line: 2853, column: 10)
!3465 = distinct !DILexicalBlock(scope: !3456, file: !243, line: 2851, column: 5)
!3466 = !DILocation(line: 2853, column: 29, scope: !3464)
!3467 = !DILocation(line: 2854, column: 10, scope: !3464)
!3468 = !DILocation(line: 2854, column: 13, scope: !3469)
!3469 = !DILexicalBlockFile(scope: !3464, file: !243, discriminator: 1)
!3470 = !DILocation(line: 2854, column: 32, scope: !3469)
!3471 = !DILocation(line: 2855, column: 10, scope: !3464)
!3472 = !DILocation(line: 2855, column: 13, scope: !3469)
!3473 = !DILocation(line: 2853, column: 10, scope: !3474)
!3474 = !DILexicalBlockFile(scope: !3465, file: !243, discriminator: 1)
!3475 = !DILocation(line: 2857, column: 18, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3477, file: !243, line: 2857, column: 11)
!3477 = distinct !DILexicalBlock(scope: !3464, file: !243, line: 2856, column: 6)
!3478 = !DILocation(line: 2857, column: 29, scope: !3476)
!3479 = !DILocation(line: 2857, column: 37, scope: !3476)
!3480 = !DILocation(line: 2857, column: 40, scope: !3476)
!3481 = !DILocation(line: 2857, column: 35, scope: !3476)
!3482 = !DILocation(line: 2858, column: 10, scope: !3476)
!3483 = !DILocation(line: 2858, column: 20, scope: !3484)
!3484 = !DILexicalBlockFile(scope: !3476, file: !243, discriminator: 1)
!3485 = !DILocation(line: 2858, column: 31, scope: !3484)
!3486 = !DILocation(line: 2858, column: 41, scope: !3484)
!3487 = !DILocation(line: 2858, column: 44, scope: !3484)
!3488 = !DILocation(line: 2858, column: 38, scope: !3484)
!3489 = !DILocation(line: 2857, column: 11, scope: !3490)
!3490 = !DILexicalBlockFile(scope: !3477, file: !243, discriminator: 1)
!3491 = !DILocation(line: 2863, column: 22, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3476, file: !243, line: 2859, column: 7)
!3493 = !DILocation(line: 2863, column: 33, scope: !3492)
!3494 = !DILocation(line: 2864, column: 22, scope: !3492)
!3495 = !DILocation(line: 2864, column: 33, scope: !3492)
!3496 = !DILocation(line: 2861, column: 8, scope: !3492)
!3497 = !DILocation(line: 2866, column: 8, scope: !3492)
!3498 = !DILocation(line: 2870, column: 12, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3492, file: !243, line: 2870, column: 12)
!3500 = !DILocation(line: 2870, column: 12, scope: !3492)
!3501 = !DILocation(line: 2871, column: 33, scope: !3499)
!3502 = !DILocation(line: 2871, column: 44, scope: !3499)
!3503 = !DILocation(line: 2871, column: 58, scope: !3499)
!3504 = !DILocation(line: 2871, column: 69, scope: !3499)
!3505 = !DILocation(line: 2871, column: 9, scope: !3499)
!3506 = !DILocation(line: 2872, column: 25, scope: !3492)
!3507 = !DILocation(line: 2873, column: 7, scope: !3492)
!3508 = !DILocation(line: 2874, column: 6, scope: !3477)
!3509 = !DILocation(line: 2876, column: 6, scope: !3465)
!3510 = !DILocation(line: 2877, column: 12, scope: !3465)
!3511 = !DILocation(line: 2877, column: 6, scope: !3465)
!3512 = !DILocation(line: 2879, column: 5, scope: !3465)
!3513 = !DILocation(line: 2881, column: 16, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3456, file: !243, line: 2881, column: 9)
!3515 = !DILocation(line: 2881, column: 27, scope: !3514)
!3516 = !DILocation(line: 2881, column: 37, scope: !3514)
!3517 = !DILocation(line: 2881, column: 34, scope: !3514)
!3518 = !DILocation(line: 2881, column: 43, scope: !3514)
!3519 = !DILocation(line: 2881, column: 47, scope: !3520)
!3520 = !DILexicalBlockFile(scope: !3514, file: !243, discriminator: 1)
!3521 = !DILocation(line: 2881, column: 62, scope: !3520)
!3522 = !DILocation(line: 2881, column: 65, scope: !3523)
!3523 = !DILexicalBlockFile(scope: !3514, file: !243, discriminator: 2)
!3524 = !DILocation(line: 2881, column: 9, scope: !3523)
!3525 = !DILocation(line: 2885, column: 30, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3514, file: !243, line: 2882, column: 5)
!3527 = !DILocation(line: 2885, column: 41, scope: !3526)
!3528 = !DILocation(line: 2885, column: 21, scope: !3526)
!3529 = !DILocation(line: 2886, column: 31, scope: !3526)
!3530 = !DILocation(line: 2886, column: 42, scope: !3526)
!3531 = !DILocation(line: 2886, column: 22, scope: !3526)
!3532 = !DILocalVariable(name: "w", scope: !3526, file: !243, line: 2888, type: !193)
!3533 = !DILocation(line: 2888, column: 13, scope: !3526)
!3534 = !DILocalVariable(name: "h", scope: !3526, file: !243, line: 2888, type: !193)
!3535 = !DILocation(line: 2888, column: 16, scope: !3526)
!3536 = !DILocation(line: 2889, column: 10, scope: !3526)
!3537 = !DILocation(line: 2889, column: 8, scope: !3526)
!3538 = !DILocation(line: 2890, column: 10, scope: !3526)
!3539 = !DILocation(line: 2890, column: 8, scope: !3526)
!3540 = !DILocation(line: 2892, column: 6, scope: !3526)
!3541 = !DILocation(line: 2895, column: 13, scope: !3526)
!3542 = !DILocation(line: 2896, column: 13, scope: !3526)
!3543 = !DILocation(line: 2897, column: 13, scope: !3526)
!3544 = !DILocation(line: 2898, column: 13, scope: !3526)
!3545 = !DILocation(line: 2899, column: 13, scope: !3526)
!3546 = !DILocation(line: 2899, column: 16, scope: !3526)
!3547 = !DILocation(line: 2894, column: 6, scope: !3526)
!3548 = !DILocation(line: 2901, column: 10, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3526, file: !243, line: 2901, column: 10)
!3550 = !DILocation(line: 2901, column: 29, scope: !3549)
!3551 = !DILocation(line: 2901, column: 26, scope: !3549)
!3552 = !DILocation(line: 2902, column: 10, scope: !3549)
!3553 = !DILocation(line: 2902, column: 13, scope: !3554)
!3554 = !DILexicalBlockFile(scope: !3549, file: !243, discriminator: 1)
!3555 = !DILocation(line: 2902, column: 33, scope: !3554)
!3556 = !DILocation(line: 2902, column: 30, scope: !3554)
!3557 = !DILocation(line: 2901, column: 10, scope: !3558)
!3558 = !DILexicalBlockFile(scope: !3526, file: !243, discriminator: 1)
!3559 = !DILocation(line: 2905, column: 14, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3549, file: !243, line: 2903, column: 6)
!3561 = !DILocation(line: 2906, column: 14, scope: !3560)
!3562 = !DILocation(line: 2907, column: 14, scope: !3560)
!3563 = !DILocation(line: 2908, column: 14, scope: !3560)
!3564 = !DILocation(line: 2904, column: 7, scope: !3560)
!3565 = !DILocation(line: 2911, column: 7, scope: !3560)
!3566 = !DILocation(line: 2912, column: 24, scope: !3560)
!3567 = !DILocation(line: 2913, column: 6, scope: !3560)
!3568 = !DILocation(line: 2916, column: 24, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3549, file: !243, line: 2915, column: 6)
!3570 = !DILocation(line: 2918, column: 5, scope: !3526)
!3571 = !DILocation(line: 2920, column: 10, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2920, column: 9)
!3573 = !DILocation(line: 2920, column: 9, scope: !2949)
!3574 = !DILocation(line: 2921, column: 6, scope: !3572)
!3575 = !DILocation(line: 2923, column: 38, scope: !2949)
!3576 = !DILocation(line: 2923, column: 49, scope: !2949)
!3577 = !DILocation(line: 2923, column: 10, scope: !2949)
!3578 = !DILocation(line: 2923, column: 8, scope: !2949)
!3579 = !DILocation(line: 2924, column: 10, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2924, column: 9)
!3581 = !DILocation(line: 2924, column: 9, scope: !2949)
!3582 = !DILocation(line: 2925, column: 6, scope: !3580)
!3583 = !DILocation(line: 2927, column: 18, scope: !2949)
!3584 = !DILocation(line: 2927, column: 22, scope: !2949)
!3585 = !DILocation(line: 2927, column: 5, scope: !2949)
!3586 = !DILocation(line: 2928, column: 9, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !2949, file: !243, line: 2928, column: 9)
!3588 = !DILocation(line: 2928, column: 13, scope: !3587)
!3589 = !DILocation(line: 2928, column: 29, scope: !3587)
!3590 = !DILocation(line: 2928, column: 37, scope: !3587)
!3591 = !DILocation(line: 2928, column: 46, scope: !3587)
!3592 = !DILocation(line: 2928, column: 9, scope: !2949)
!3593 = !DILocation(line: 2931, column: 6, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3587, file: !243, line: 2930, column: 5)
!3595 = !DILocation(line: 2931, column: 10, scope: !3594)
!3596 = !DILocation(line: 2931, column: 26, scope: !3594)
!3597 = !DILocation(line: 2931, column: 34, scope: !3594)
!3598 = !DILocation(line: 2933, column: 6, scope: !3594)
!3599 = !DILocation(line: 2933, column: 10, scope: !3594)
!3600 = !DILocation(line: 2933, column: 26, scope: !3594)
!3601 = !DILocation(line: 2933, column: 33, scope: !3594)
!3602 = !DILocation(line: 2934, column: 5, scope: !3594)
!3603 = !DILocation(line: 2937, column: 6, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3587, file: !243, line: 2936, column: 5)
!3605 = !DILocation(line: 2937, column: 10, scope: !3604)
!3606 = !DILocation(line: 2937, column: 26, scope: !3604)
!3607 = !DILocation(line: 2937, column: 34, scope: !3604)
!3608 = !DILocation(line: 2940, column: 23, scope: !2949)
!3609 = !DILocation(line: 2940, column: 5, scope: !2949)
!3610 = !DILocation(line: 2941, column: 5, scope: !2949)
!3611 = !DILocation(line: 2526, column: 2, scope: !3612)
!3612 = !DILexicalBlockFile(scope: !345, file: !243, discriminator: 4)
!3613 = !DILocation(line: 2945, column: 2, scope: !345)
!3614 = !DILocation(line: 2946, column: 1, scope: !345)
!3615 = distinct !DISubprogram(name: "process_fds", scope: !243, file: !243, line: 2961, type: !3616, isLocal: true, isDefinition: true, scopeLine: 2962, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!44, !45, !45}
!3618 = !DILocalVariable(name: "rdp_socket", arg: 1, scope: !3615, file: !243, line: 2961, type: !45)
!3619 = !DILocation(line: 2961, column: 17, scope: !3615)
!3620 = !DILocalVariable(name: "ms", arg: 2, scope: !3615, file: !243, line: 2961, type: !45)
!3621 = !DILocation(line: 2961, column: 33, scope: !3615)
!3622 = !DILocalVariable(name: "n", scope: !3615, file: !243, line: 2963, type: !45)
!3623 = !DILocation(line: 2963, column: 6, scope: !3615)
!3624 = !DILocalVariable(name: "ret", scope: !3615, file: !243, line: 2963, type: !45)
!3625 = !DILocation(line: 2963, column: 9, scope: !3615)
!3626 = !DILocalVariable(name: "rfds", scope: !3615, file: !243, line: 2964, type: !3627)
!3627 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !238, line: 75, baseType: !3628)
!3628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !238, line: 64, size: 1024, align: 64, elements: !3629)
!3629 = !{!3630}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "__fds_bits", scope: !3628, file: !238, line: 72, baseType: !3631, size: 1024, align: 64)
!3631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 1024, align: 64, elements: !401)
!3632 = !DILocation(line: 2964, column: 9, scope: !3615)
!3633 = !DILocalVariable(name: "wfds", scope: !3615, file: !243, line: 2964, type: !3627)
!3634 = !DILocation(line: 2964, column: 15, scope: !3615)
!3635 = !DILocalVariable(name: "tv", scope: !3615, file: !243, line: 2965, type: !353)
!3636 = !DILocation(line: 2965, column: 17, scope: !3615)
!3637 = !DILocalVariable(name: "s_timeout", scope: !3615, file: !243, line: 2966, type: !44)
!3638 = !DILocation(line: 2966, column: 10, scope: !3615)
!3639 = !DILocation(line: 2968, column: 7, scope: !3615)
!3640 = !DILocation(line: 2968, column: 20, scope: !3615)
!3641 = !DILocation(line: 2968, column: 18, scope: !3615)
!3642 = !DILocation(line: 2968, column: 6, scope: !3615)
!3643 = !DILocation(line: 2968, column: 34, scope: !3644)
!3644 = !DILexicalBlockFile(scope: !3615, file: !243, discriminator: 1)
!3645 = !DILocation(line: 2968, column: 6, scope: !3644)
!3646 = !DILocation(line: 2968, column: 47, scope: !3647)
!3647 = !DILexicalBlockFile(scope: !3615, file: !243, discriminator: 2)
!3648 = !DILocation(line: 2968, column: 6, scope: !3647)
!3649 = !DILocation(line: 2968, column: 6, scope: !3650)
!3650 = !DILexicalBlockFile(scope: !3615, file: !243, discriminator: 3)
!3651 = !DILocation(line: 2968, column: 4, scope: !3650)
!3652 = !DILocation(line: 2970, column: 1, scope: !3615)
!3653 = distinct !{!3653, !3652}
!3654 = !DILocalVariable(name: "__d0", scope: !3655, file: !243, line: 2970, type: !45)
!3655 = distinct !DILexicalBlock(scope: !3615, file: !243, line: 2970, column: 4)
!3656 = !DILocation(line: 2970, column: 10, scope: !3655)
!3657 = !DILocalVariable(name: "__d1", scope: !3655, file: !243, line: 2970, type: !45)
!3658 = !DILocation(line: 2970, column: 16, scope: !3655)
!3659 = !DILocation(line: 2970, column: 4, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !3655, file: !243, discriminator: 1)
!3661 = !DILocation(line: 2970, column: 153, scope: !3660)
!3662 = !DILocation(line: 2970, column: 22, scope: !3660)
!3663 = !{i32 341068}
!3664 = !DILocation(line: 2970, column: 33, scope: !3660)
!3665 = !DILocation(line: 2971, column: 1, scope: !3615)
!3666 = distinct !{!3666, !3665}
!3667 = !DILocalVariable(name: "__d0", scope: !3668, file: !243, line: 2971, type: !45)
!3668 = distinct !DILexicalBlock(scope: !3615, file: !243, line: 2971, column: 4)
!3669 = !DILocation(line: 2971, column: 10, scope: !3668)
!3670 = !DILocalVariable(name: "__d1", scope: !3668, file: !243, line: 2971, type: !45)
!3671 = !DILocation(line: 2971, column: 16, scope: !3668)
!3672 = !DILocation(line: 2971, column: 4, scope: !3673)
!3673 = !DILexicalBlockFile(scope: !3668, file: !243, discriminator: 1)
!3674 = !DILocation(line: 2971, column: 153, scope: !3673)
!3675 = !DILocation(line: 2971, column: 22, scope: !3673)
!3676 = !{i32 341363}
!3677 = !DILocation(line: 2971, column: 33, scope: !3673)
!3678 = !DILocation(line: 2972, column: 1, scope: !3615)
!3679 = !DILocation(line: 2972, column: 3, scope: !3615)
!3680 = !DILocation(line: 2972, column: 59, scope: !3615)
!3681 = !DILocation(line: 2972, column: 10, scope: !3615)
!3682 = !DILocation(line: 2972, column: 4, scope: !3615)
!3683 = !DILocation(line: 2972, column: 38, scope: !3615)
!3684 = !DILocation(line: 2973, column: 1, scope: !3615)
!3685 = !DILocation(line: 2973, column: 3, scope: !3615)
!3686 = !DILocation(line: 2973, column: 59, scope: !3615)
!3687 = !DILocation(line: 2973, column: 10, scope: !3615)
!3688 = !DILocation(line: 2973, column: 4, scope: !3615)
!3689 = !DILocation(line: 2973, column: 38, scope: !3615)
!3690 = !DILocation(line: 2976, column: 14, scope: !3615)
!3691 = !DILocation(line: 2976, column: 17, scope: !3615)
!3692 = !DILocation(line: 2976, column: 5, scope: !3615)
!3693 = !DILocation(line: 2976, column: 12, scope: !3615)
!3694 = !DILocation(line: 2977, column: 16, scope: !3615)
!3695 = !DILocation(line: 2977, column: 25, scope: !3615)
!3696 = !DILocation(line: 2977, column: 32, scope: !3615)
!3697 = !DILocation(line: 2977, column: 19, scope: !3615)
!3698 = !DILocation(line: 2977, column: 41, scope: !3615)
!3699 = !DILocation(line: 2977, column: 5, scope: !3615)
!3700 = !DILocation(line: 2977, column: 13, scope: !3615)
!3701 = !DILocation(line: 2980, column: 2, scope: !3615)
!3702 = !DILocation(line: 2984, column: 2, scope: !3615)
!3703 = !DILocation(line: 2985, column: 2, scope: !3615)
!3704 = !DILocation(line: 2988, column: 2, scope: !3615)
!3705 = !DILocation(line: 2990, column: 3, scope: !3615)
!3706 = !DILocation(line: 2992, column: 15, scope: !3615)
!3707 = !DILocation(line: 2992, column: 8, scope: !3615)
!3708 = !DILocation(line: 2992, column: 6, scope: !3615)
!3709 = !DILocation(line: 2993, column: 6, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3615, file: !243, line: 2993, column: 6)
!3711 = !DILocation(line: 2993, column: 10, scope: !3710)
!3712 = !DILocation(line: 2993, column: 6, scope: !3615)
!3713 = !DILocation(line: 2995, column: 7, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3715, file: !243, line: 2995, column: 7)
!3715 = distinct !DILexicalBlock(scope: !3710, file: !243, line: 2994, column: 2)
!3716 = !DILocation(line: 2995, column: 11, scope: !3714)
!3717 = !DILocation(line: 2995, column: 7, scope: !3715)
!3718 = !DILocation(line: 2998, column: 21, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3714, file: !243, line: 2996, column: 3)
!3720 = !DILocation(line: 2998, column: 20, scope: !3719)
!3721 = !DILocation(line: 2998, column: 11, scope: !3722)
!3722 = !DILexicalBlockFile(scope: !3719, file: !243, discriminator: 1)
!3723 = !DILocation(line: 2997, column: 4, scope: !3719)
!3724 = !DILocation(line: 2999, column: 3, scope: !3719)
!3725 = !DILocation(line: 3001, column: 3, scope: !3715)
!3726 = !DILocation(line: 3005, column: 7, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3715, file: !243, line: 3005, column: 7)
!3728 = !DILocation(line: 3005, column: 7, scope: !3715)
!3729 = !DILocation(line: 3006, column: 4, scope: !3727)
!3730 = !DILocation(line: 3007, column: 3, scope: !3715)
!3731 = !DILocation(line: 3011, column: 2, scope: !3615)
!3732 = !DILocation(line: 3014, column: 2, scope: !3615)
!3733 = !DILocation(line: 3016, column: 2, scope: !3615)
!3734 = !DILocation(line: 3018, column: 5, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3615, file: !243, line: 3018, column: 5)
!3736 = !DILocation(line: 3018, column: 7, scope: !3735)
!3737 = !DILocation(line: 3018, column: 8, scope: !3735)
!3738 = !DILocation(line: 3018, column: 62, scope: !3735)
!3739 = !DILocation(line: 3018, column: 42, scope: !3735)
!3740 = !DILocation(line: 3018, column: 44, scope: !3735)
!3741 = !DILocation(line: 3018, column: 5, scope: !3615)
!3742 = !DILocation(line: 3019, column: 3, scope: !3735)
!3743 = !DILocation(line: 3021, column: 2, scope: !3615)
!3744 = !DILocation(line: 3022, column: 1, scope: !3615)
!3745 = distinct !DISubprogram(name: "ui_move_pointer", scope: !243, file: !243, line: 3199, type: !3746, isLocal: false, isDefinition: true, scopeLine: 3200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{null, !45, !45}
!3748 = !DILocalVariable(name: "x", arg: 1, scope: !3745, file: !243, line: 3199, type: !45)
!3749 = !DILocation(line: 3199, column: 21, scope: !3745)
!3750 = !DILocalVariable(name: "y", arg: 2, scope: !3745, file: !243, line: 3199, type: !45)
!3751 = !DILocation(line: 3199, column: 28, scope: !3745)
!3752 = !DILocation(line: 3201, column: 15, scope: !3745)
!3753 = !DILocation(line: 3201, column: 26, scope: !3745)
!3754 = !DILocation(line: 3201, column: 33, scope: !3745)
!3755 = !DILocation(line: 3201, column: 52, scope: !3745)
!3756 = !DILocation(line: 3201, column: 55, scope: !3745)
!3757 = !DILocation(line: 3201, column: 2, scope: !3745)
!3758 = !DILocation(line: 3202, column: 1, scope: !3745)
!3759 = distinct !DISubprogram(name: "ui_create_bitmap", scope: !243, file: !243, line: 3205, type: !3760, isLocal: false, isDefinition: true, scopeLine: 3206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!188, !45, !45, !46}
!3762 = !DILocalVariable(name: "width", arg: 1, scope: !3759, file: !243, line: 3205, type: !45)
!3763 = !DILocation(line: 3205, column: 22, scope: !3759)
!3764 = !DILocalVariable(name: "height", arg: 2, scope: !3759, file: !243, line: 3205, type: !45)
!3765 = !DILocation(line: 3205, column: 33, scope: !3759)
!3766 = !DILocalVariable(name: "data", arg: 3, scope: !3759, file: !243, line: 3205, type: !46)
!3767 = !DILocation(line: 3205, column: 49, scope: !3759)
!3768 = !DILocalVariable(name: "image", scope: !3759, file: !243, line: 3207, type: !3769)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64, align: 64)
!3770 = !DIDerivedType(tag: DW_TAG_typedef, name: "XImage", file: !50, line: 394, baseType: !3771)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_XImage", file: !50, line: 360, size: 1088, align: 64, elements: !3772)
!3772 = !{!3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3771, file: !50, line: 361, baseType: !45, size: 32, align: 32)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3771, file: !50, line: 361, baseType: !45, size: 32, align: 32, offset: 32)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "xoffset", scope: !3771, file: !50, line: 362, baseType: !45, size: 32, align: 32, offset: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !3771, file: !50, line: 363, baseType: !45, size: 32, align: 32, offset: 96)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3771, file: !50, line: 364, baseType: !68, size: 64, align: 64, offset: 128)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "byte_order", scope: !3771, file: !50, line: 365, baseType: !45, size: 32, align: 32, offset: 192)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap_unit", scope: !3771, file: !50, line: 366, baseType: !45, size: 32, align: 32, offset: 224)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap_bit_order", scope: !3771, file: !50, line: 367, baseType: !45, size: 32, align: 32, offset: 256)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "bitmap_pad", scope: !3771, file: !50, line: 368, baseType: !45, size: 32, align: 32, offset: 288)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3771, file: !50, line: 369, baseType: !45, size: 32, align: 32, offset: 320)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_per_line", scope: !3771, file: !50, line: 370, baseType: !45, size: 32, align: 32, offset: 352)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_pixel", scope: !3771, file: !50, line: 371, baseType: !45, size: 32, align: 32, offset: 384)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "red_mask", scope: !3771, file: !50, line: 372, baseType: !81, size: 64, align: 64, offset: 448)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "green_mask", scope: !3771, file: !50, line: 373, baseType: !81, size: 64, align: 64, offset: 512)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "blue_mask", scope: !3771, file: !50, line: 374, baseType: !81, size: 64, align: 64, offset: 576)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "obdata", scope: !3771, file: !50, line: 375, baseType: !67, size: 64, align: 64, offset: 640)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3771, file: !50, line: 393, baseType: !3790, size: 384, align: 64, offset: 704)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "funcs", file: !50, line: 376, size: 384, align: 64, elements: !3791)
!3791 = !{!3792, !3797, !3801, !3805, !3809, !3813}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "create_image", scope: !3790, file: !50, line: 377, baseType: !3793, size: 64, align: 64)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64, align: 64)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!3796, !89, !150, !117, !45, !45, !68, !117, !117, !45, !45}
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64, align: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_image", scope: !3790, file: !50, line: 388, baseType: !3798, size: 64, align: 64, offset: 64)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64, align: 64)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{!45, !3796}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "get_pixel", scope: !3790, file: !50, line: 389, baseType: !3802, size: 64, align: 64, offset: 128)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64, align: 64)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{!81, !3796, !45, !45}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixel", scope: !3790, file: !50, line: 390, baseType: !3806, size: 64, align: 64, offset: 192)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64, align: 64)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{!45, !3796, !45, !45, !81}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "sub_image", scope: !3790, file: !50, line: 391, baseType: !3810, size: 64, align: 64, offset: 256)
!3810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3811, size: 64, align: 64)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!3796, !3796, !45, !45, !117, !117}
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "add_pixel", scope: !3790, file: !50, line: 392, baseType: !3814, size: 64, align: 64, offset: 320)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64, align: 64)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!45, !3796, !178}
!3817 = !DILocation(line: 3207, column: 10, scope: !3759)
!3818 = !DILocalVariable(name: "bitmap", scope: !3759, file: !243, line: 3208, type: !189)
!3819 = !DILocation(line: 3208, column: 9, scope: !3759)
!3820 = !DILocalVariable(name: "tdata", scope: !3759, file: !243, line: 3209, type: !46)
!3821 = !DILocation(line: 3209, column: 9, scope: !3759)
!3822 = !DILocalVariable(name: "bitmap_pad", scope: !3759, file: !243, line: 3210, type: !45)
!3823 = !DILocation(line: 3210, column: 6, scope: !3759)
!3824 = !DILocation(line: 3212, column: 6, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3759, file: !243, line: 3212, column: 6)
!3826 = !DILocation(line: 3212, column: 21, scope: !3825)
!3827 = !DILocation(line: 3212, column: 6, scope: !3759)
!3828 = !DILocation(line: 3214, column: 14, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3825, file: !243, line: 3213, column: 2)
!3830 = !DILocation(line: 3215, column: 2, scope: !3829)
!3831 = !DILocation(line: 3218, column: 16, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3825, file: !243, line: 3217, column: 2)
!3833 = !DILocation(line: 3218, column: 14, scope: !3832)
!3834 = !DILocation(line: 3220, column: 7, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3832, file: !243, line: 3220, column: 7)
!3836 = !DILocation(line: 3220, column: 13, scope: !3835)
!3837 = !DILocation(line: 3220, column: 7, scope: !3832)
!3838 = !DILocation(line: 3221, column: 15, scope: !3835)
!3839 = !DILocation(line: 3221, column: 4, scope: !3835)
!3840 = !DILocation(line: 3224, column: 11, scope: !3759)
!3841 = !DILocation(line: 3224, column: 25, scope: !3842)
!3842 = !DILexicalBlockFile(scope: !3759, file: !243, discriminator: 1)
!3843 = !DILocation(line: 3224, column: 11, scope: !3842)
!3844 = !DILocation(line: 3224, column: 48, scope: !3845)
!3845 = !DILexicalBlockFile(scope: !3759, file: !243, discriminator: 2)
!3846 = !DILocation(line: 3224, column: 55, scope: !3845)
!3847 = !DILocation(line: 3224, column: 63, scope: !3845)
!3848 = !DILocation(line: 3224, column: 32, scope: !3845)
!3849 = !DILocation(line: 3224, column: 11, scope: !3845)
!3850 = !DILocation(line: 3224, column: 11, scope: !3851)
!3851 = !DILexicalBlockFile(scope: !3759, file: !243, discriminator: 3)
!3852 = !DILocation(line: 3224, column: 8, scope: !3851)
!3853 = !DILocation(line: 3225, column: 25, scope: !3759)
!3854 = !DILocation(line: 3225, column: 36, scope: !3759)
!3855 = !DILocation(line: 3225, column: 43, scope: !3759)
!3856 = !DILocation(line: 3225, column: 50, scope: !3759)
!3857 = !DILocation(line: 3225, column: 58, scope: !3759)
!3858 = !DILocation(line: 3225, column: 11, scope: !3759)
!3859 = !DILocation(line: 3225, column: 9, scope: !3759)
!3860 = !DILocation(line: 3226, column: 23, scope: !3759)
!3861 = !DILocation(line: 3226, column: 34, scope: !3759)
!3862 = !DILocation(line: 3226, column: 44, scope: !3759)
!3863 = !DILocation(line: 3227, column: 18, scope: !3759)
!3864 = !DILocation(line: 3227, column: 25, scope: !3759)
!3865 = !DILocation(line: 3227, column: 32, scope: !3759)
!3866 = !DILocation(line: 3227, column: 40, scope: !3759)
!3867 = !DILocation(line: 3226, column: 10, scope: !3759)
!3868 = !DILocation(line: 3226, column: 8, scope: !3759)
!3869 = !DILocation(line: 3229, column: 12, scope: !3759)
!3870 = !DILocation(line: 3229, column: 23, scope: !3759)
!3871 = !DILocation(line: 3229, column: 31, scope: !3759)
!3872 = !DILocation(line: 3229, column: 51, scope: !3759)
!3873 = !DILocation(line: 3229, column: 70, scope: !3759)
!3874 = !DILocation(line: 3229, column: 77, scope: !3759)
!3875 = !DILocation(line: 3229, column: 2, scope: !3759)
!3876 = !DILocation(line: 3231, column: 8, scope: !3759)
!3877 = !DILocation(line: 3231, column: 2, scope: !3759)
!3878 = !DILocation(line: 3232, column: 6, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3759, file: !243, line: 3232, column: 6)
!3880 = !DILocation(line: 3232, column: 15, scope: !3879)
!3881 = !DILocation(line: 3232, column: 12, scope: !3879)
!3882 = !DILocation(line: 3232, column: 6, scope: !3759)
!3883 = !DILocation(line: 3233, column: 9, scope: !3879)
!3884 = !DILocation(line: 3233, column: 3, scope: !3879)
!3885 = !DILocation(line: 3234, column: 22, scope: !3759)
!3886 = !DILocation(line: 3234, column: 9, scope: !3759)
!3887 = !DILocation(line: 3234, column: 2, scope: !3759)
!3888 = distinct !DISubprogram(name: "translate_image", scope: !243, file: !243, line: 1471, type: !3889, isLocal: true, isDefinition: true, scopeLine: 1472, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{!46, !45, !45, !46}
!3891 = !DILocalVariable(name: "width", arg: 1, scope: !3888, file: !243, line: 1471, type: !45)
!3892 = !DILocation(line: 1471, column: 21, scope: !3888)
!3893 = !DILocalVariable(name: "height", arg: 2, scope: !3888, file: !243, line: 1471, type: !45)
!3894 = !DILocation(line: 1471, column: 32, scope: !3888)
!3895 = !DILocalVariable(name: "data", arg: 3, scope: !3888, file: !243, line: 1471, type: !46)
!3896 = !DILocation(line: 1471, column: 48, scope: !3888)
!3897 = !DILocalVariable(name: "size", scope: !3888, file: !243, line: 1473, type: !45)
!3898 = !DILocation(line: 1473, column: 6, scope: !3888)
!3899 = !DILocalVariable(name: "out", scope: !3888, file: !243, line: 1474, type: !46)
!3900 = !DILocation(line: 1474, column: 9, scope: !3888)
!3901 = !DILocalVariable(name: "end", scope: !3888, file: !243, line: 1475, type: !46)
!3902 = !DILocation(line: 1475, column: 9, scope: !3888)
!3903 = !DILocation(line: 1487, column: 6, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3888, file: !243, line: 1487, column: 6)
!3905 = !DILocation(line: 1487, column: 21, scope: !3904)
!3906 = !DILocation(line: 1487, column: 27, scope: !3904)
!3907 = !DILocation(line: 1487, column: 30, scope: !3908)
!3908 = !DILexicalBlockFile(scope: !3904, file: !243, discriminator: 1)
!3909 = !DILocation(line: 1487, column: 38, scope: !3908)
!3910 = !DILocation(line: 1487, column: 6, scope: !3908)
!3911 = !DILocation(line: 1489, column: 10, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3904, file: !243, line: 1488, column: 2)
!3913 = !DILocation(line: 1489, column: 3, scope: !3912)
!3914 = !DILocation(line: 1492, column: 6, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3888, file: !243, line: 1492, column: 6)
!3916 = !DILocation(line: 1492, column: 6, scope: !3888)
!3917 = !DILocation(line: 1494, column: 8, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !243, line: 1494, column: 7)
!3919 = distinct !DILexicalBlock(scope: !3915, file: !243, line: 1493, column: 2)
!3920 = !DILocation(line: 1494, column: 16, scope: !3918)
!3921 = !DILocation(line: 1494, column: 22, scope: !3918)
!3922 = !DILocation(line: 1494, column: 25, scope: !3923)
!3923 = !DILexicalBlockFile(scope: !3918, file: !243, discriminator: 1)
!3924 = !DILocation(line: 1494, column: 40, scope: !3923)
!3925 = !DILocation(line: 1494, column: 47, scope: !3923)
!3926 = !DILocation(line: 1495, column: 8, scope: !3918)
!3927 = !DILocation(line: 1495, column: 16, scope: !3918)
!3928 = !DILocation(line: 1495, column: 22, scope: !3918)
!3929 = !DILocation(line: 1495, column: 25, scope: !3923)
!3930 = !DILocation(line: 1495, column: 40, scope: !3923)
!3931 = !DILocation(line: 1495, column: 47, scope: !3923)
!3932 = !DILocation(line: 1496, column: 8, scope: !3918)
!3933 = !DILocation(line: 1496, column: 16, scope: !3918)
!3934 = !DILocation(line: 1496, column: 22, scope: !3918)
!3935 = !DILocation(line: 1496, column: 25, scope: !3923)
!3936 = !DILocation(line: 1496, column: 40, scope: !3923)
!3937 = !DILocation(line: 1494, column: 7, scope: !3938)
!3938 = !DILexicalBlockFile(scope: !3919, file: !243, discriminator: 2)
!3939 = !DILocation(line: 1497, column: 11, scope: !3918)
!3940 = !DILocation(line: 1497, column: 4, scope: !3918)
!3941 = !DILocation(line: 1498, column: 2, scope: !3919)
!3942 = !DILocation(line: 1500, column: 9, scope: !3888)
!3943 = !DILocation(line: 1500, column: 17, scope: !3888)
!3944 = !DILocation(line: 1500, column: 15, scope: !3888)
!3945 = !DILocation(line: 1500, column: 27, scope: !3888)
!3946 = !DILocation(line: 1500, column: 33, scope: !3888)
!3947 = !DILocation(line: 1500, column: 24, scope: !3888)
!3948 = !DILocation(line: 1500, column: 7, scope: !3888)
!3949 = !DILocation(line: 1501, column: 26, scope: !3888)
!3950 = !DILocation(line: 1501, column: 18, scope: !3888)
!3951 = !DILocation(line: 1501, column: 6, scope: !3888)
!3952 = !DILocation(line: 1502, column: 8, scope: !3888)
!3953 = !DILocation(line: 1502, column: 14, scope: !3888)
!3954 = !DILocation(line: 1502, column: 12, scope: !3888)
!3955 = !DILocation(line: 1502, column: 6, scope: !3888)
!3956 = !DILocation(line: 1504, column: 10, scope: !3888)
!3957 = !DILocation(line: 1504, column: 2, scope: !3888)
!3958 = !DILocation(line: 1507, column: 12, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3888, file: !243, line: 1505, column: 2)
!3960 = !DILocation(line: 1507, column: 4, scope: !3959)
!3961 = !DILocation(line: 1510, column: 22, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3959, file: !243, line: 1508, column: 4)
!3963 = !DILocation(line: 1510, column: 28, scope: !3962)
!3964 = !DILocation(line: 1510, column: 33, scope: !3962)
!3965 = !DILocation(line: 1510, column: 6, scope: !3962)
!3966 = !DILocation(line: 1511, column: 6, scope: !3962)
!3967 = !DILocation(line: 1513, column: 22, scope: !3962)
!3968 = !DILocation(line: 1513, column: 28, scope: !3962)
!3969 = !DILocation(line: 1513, column: 33, scope: !3962)
!3970 = !DILocation(line: 1513, column: 6, scope: !3962)
!3971 = !DILocation(line: 1514, column: 6, scope: !3962)
!3972 = !DILocation(line: 1516, column: 22, scope: !3962)
!3973 = !DILocation(line: 1516, column: 28, scope: !3962)
!3974 = !DILocation(line: 1516, column: 33, scope: !3962)
!3975 = !DILocation(line: 1516, column: 6, scope: !3962)
!3976 = !DILocation(line: 1517, column: 6, scope: !3962)
!3977 = !DILocation(line: 1519, column: 4, scope: !3959)
!3978 = !DILocation(line: 1521, column: 12, scope: !3959)
!3979 = !DILocation(line: 1521, column: 4, scope: !3959)
!3980 = !DILocation(line: 1524, column: 33, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3959, file: !243, line: 1522, column: 4)
!3982 = !DILocation(line: 1524, column: 22, scope: !3981)
!3983 = !DILocation(line: 1524, column: 39, scope: !3981)
!3984 = !DILocation(line: 1524, column: 44, scope: !3981)
!3985 = !DILocation(line: 1524, column: 6, scope: !3981)
!3986 = !DILocation(line: 1525, column: 6, scope: !3981)
!3987 = !DILocation(line: 1527, column: 33, scope: !3981)
!3988 = !DILocation(line: 1527, column: 22, scope: !3981)
!3989 = !DILocation(line: 1527, column: 39, scope: !3981)
!3990 = !DILocation(line: 1527, column: 44, scope: !3981)
!3991 = !DILocation(line: 1527, column: 6, scope: !3981)
!3992 = !DILocation(line: 1528, column: 6, scope: !3981)
!3993 = !DILocation(line: 1530, column: 33, scope: !3981)
!3994 = !DILocation(line: 1530, column: 22, scope: !3981)
!3995 = !DILocation(line: 1530, column: 39, scope: !3981)
!3996 = !DILocation(line: 1530, column: 44, scope: !3981)
!3997 = !DILocation(line: 1530, column: 6, scope: !3981)
!3998 = !DILocation(line: 1531, column: 6, scope: !3981)
!3999 = !DILocation(line: 1533, column: 4, scope: !3959)
!4000 = !DILocation(line: 1535, column: 12, scope: !3959)
!4001 = !DILocation(line: 1535, column: 4, scope: !3959)
!4002 = !DILocation(line: 1538, column: 33, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3959, file: !243, line: 1536, column: 4)
!4004 = !DILocation(line: 1538, column: 22, scope: !4003)
!4005 = !DILocation(line: 1538, column: 39, scope: !4003)
!4006 = !DILocation(line: 1538, column: 44, scope: !4003)
!4007 = !DILocation(line: 1538, column: 6, scope: !4003)
!4008 = !DILocation(line: 1539, column: 6, scope: !4003)
!4009 = !DILocation(line: 1541, column: 33, scope: !4003)
!4010 = !DILocation(line: 1541, column: 22, scope: !4003)
!4011 = !DILocation(line: 1541, column: 39, scope: !4003)
!4012 = !DILocation(line: 1541, column: 44, scope: !4003)
!4013 = !DILocation(line: 1541, column: 6, scope: !4003)
!4014 = !DILocation(line: 1542, column: 6, scope: !4003)
!4015 = !DILocation(line: 1544, column: 33, scope: !4003)
!4016 = !DILocation(line: 1544, column: 22, scope: !4003)
!4017 = !DILocation(line: 1544, column: 39, scope: !4003)
!4018 = !DILocation(line: 1544, column: 44, scope: !4003)
!4019 = !DILocation(line: 1544, column: 6, scope: !4003)
!4020 = !DILocation(line: 1545, column: 6, scope: !4003)
!4021 = !DILocation(line: 1547, column: 4, scope: !3959)
!4022 = !DILocation(line: 1549, column: 12, scope: !3959)
!4023 = !DILocation(line: 1549, column: 4, scope: !3959)
!4024 = !DILocation(line: 1552, column: 20, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3959, file: !243, line: 1550, column: 4)
!4026 = !DILocation(line: 1552, column: 26, scope: !4025)
!4027 = !DILocation(line: 1552, column: 31, scope: !4025)
!4028 = !DILocation(line: 1552, column: 6, scope: !4025)
!4029 = !DILocation(line: 1553, column: 6, scope: !4025)
!4030 = !DILocation(line: 1555, column: 21, scope: !4025)
!4031 = !DILocation(line: 1555, column: 27, scope: !4025)
!4032 = !DILocation(line: 1555, column: 32, scope: !4025)
!4033 = !DILocation(line: 1555, column: 6, scope: !4025)
!4034 = !DILocation(line: 1556, column: 6, scope: !4025)
!4035 = !DILocation(line: 1558, column: 21, scope: !4025)
!4036 = !DILocation(line: 1558, column: 27, scope: !4025)
!4037 = !DILocation(line: 1558, column: 32, scope: !4025)
!4038 = !DILocation(line: 1558, column: 6, scope: !4025)
!4039 = !DILocation(line: 1559, column: 6, scope: !4025)
!4040 = !DILocation(line: 1561, column: 21, scope: !4025)
!4041 = !DILocation(line: 1561, column: 27, scope: !4025)
!4042 = !DILocation(line: 1561, column: 32, scope: !4025)
!4043 = !DILocation(line: 1561, column: 6, scope: !4025)
!4044 = !DILocation(line: 1562, column: 6, scope: !4025)
!4045 = !DILocation(line: 1564, column: 4, scope: !3959)
!4046 = !DILocation(line: 1566, column: 9, scope: !3888)
!4047 = !DILocation(line: 1566, column: 2, scope: !3888)
!4048 = !DILocation(line: 1567, column: 1, scope: !3888)
!4049 = distinct !DISubprogram(name: "ui_paint_bitmap", scope: !243, file: !243, line: 3238, type: !4050, isLocal: false, isDefinition: true, scopeLine: 3239, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4050 = !DISubroutineType(types: !4051)
!4051 = !{null, !45, !45, !45, !45, !45, !45, !46}
!4052 = !DILocalVariable(name: "x", arg: 1, scope: !4049, file: !243, line: 3238, type: !45)
!4053 = !DILocation(line: 3238, column: 21, scope: !4049)
!4054 = !DILocalVariable(name: "y", arg: 2, scope: !4049, file: !243, line: 3238, type: !45)
!4055 = !DILocation(line: 3238, column: 28, scope: !4049)
!4056 = !DILocalVariable(name: "cx", arg: 3, scope: !4049, file: !243, line: 3238, type: !45)
!4057 = !DILocation(line: 3238, column: 35, scope: !4049)
!4058 = !DILocalVariable(name: "cy", arg: 4, scope: !4049, file: !243, line: 3238, type: !45)
!4059 = !DILocation(line: 3238, column: 43, scope: !4049)
!4060 = !DILocalVariable(name: "width", arg: 5, scope: !4049, file: !243, line: 3238, type: !45)
!4061 = !DILocation(line: 3238, column: 51, scope: !4049)
!4062 = !DILocalVariable(name: "height", arg: 6, scope: !4049, file: !243, line: 3238, type: !45)
!4063 = !DILocation(line: 3238, column: 62, scope: !4049)
!4064 = !DILocalVariable(name: "data", arg: 7, scope: !4049, file: !243, line: 3238, type: !46)
!4065 = !DILocation(line: 3238, column: 78, scope: !4049)
!4066 = !DILocalVariable(name: "image", scope: !4049, file: !243, line: 3240, type: !3769)
!4067 = !DILocation(line: 3240, column: 10, scope: !4049)
!4068 = !DILocalVariable(name: "tdata", scope: !4049, file: !243, line: 3241, type: !46)
!4069 = !DILocation(line: 3241, column: 9, scope: !4049)
!4070 = !DILocalVariable(name: "bitmap_pad", scope: !4049, file: !243, line: 3242, type: !45)
!4071 = !DILocation(line: 3242, column: 6, scope: !4049)
!4072 = !DILocation(line: 3244, column: 6, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4049, file: !243, line: 3244, column: 6)
!4074 = !DILocation(line: 3244, column: 21, scope: !4073)
!4075 = !DILocation(line: 3244, column: 6, scope: !4049)
!4076 = !DILocation(line: 3246, column: 14, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4073, file: !243, line: 3245, column: 2)
!4078 = !DILocation(line: 3247, column: 2, scope: !4077)
!4079 = !DILocation(line: 3250, column: 16, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4073, file: !243, line: 3249, column: 2)
!4081 = !DILocation(line: 3250, column: 14, scope: !4080)
!4082 = !DILocation(line: 3252, column: 7, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4080, file: !243, line: 3252, column: 7)
!4084 = !DILocation(line: 3252, column: 13, scope: !4083)
!4085 = !DILocation(line: 3252, column: 7, scope: !4080)
!4086 = !DILocation(line: 3253, column: 15, scope: !4083)
!4087 = !DILocation(line: 3253, column: 4, scope: !4083)
!4088 = !DILocation(line: 3256, column: 11, scope: !4049)
!4089 = !DILocation(line: 3256, column: 25, scope: !4090)
!4090 = !DILexicalBlockFile(scope: !4049, file: !243, discriminator: 1)
!4091 = !DILocation(line: 3256, column: 11, scope: !4090)
!4092 = !DILocation(line: 3256, column: 48, scope: !4093)
!4093 = !DILexicalBlockFile(scope: !4049, file: !243, discriminator: 2)
!4094 = !DILocation(line: 3256, column: 55, scope: !4093)
!4095 = !DILocation(line: 3256, column: 63, scope: !4093)
!4096 = !DILocation(line: 3256, column: 32, scope: !4093)
!4097 = !DILocation(line: 3256, column: 11, scope: !4093)
!4098 = !DILocation(line: 3256, column: 11, scope: !4099)
!4099 = !DILexicalBlockFile(scope: !4049, file: !243, discriminator: 3)
!4100 = !DILocation(line: 3256, column: 8, scope: !4099)
!4101 = !DILocation(line: 3257, column: 23, scope: !4049)
!4102 = !DILocation(line: 3257, column: 34, scope: !4049)
!4103 = !DILocation(line: 3257, column: 44, scope: !4049)
!4104 = !DILocation(line: 3258, column: 18, scope: !4049)
!4105 = !DILocation(line: 3258, column: 25, scope: !4049)
!4106 = !DILocation(line: 3258, column: 32, scope: !4049)
!4107 = !DILocation(line: 3258, column: 40, scope: !4049)
!4108 = !DILocation(line: 3257, column: 10, scope: !4049)
!4109 = !DILocation(line: 3257, column: 8, scope: !4049)
!4110 = !DILocation(line: 3260, column: 6, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4049, file: !243, line: 3260, column: 6)
!4112 = !DILocation(line: 3260, column: 6, scope: !4049)
!4113 = !DILocation(line: 3262, column: 13, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4111, file: !243, line: 3261, column: 2)
!4115 = !DILocation(line: 3262, column: 24, scope: !4114)
!4116 = !DILocation(line: 3262, column: 37, scope: !4114)
!4117 = !DILocation(line: 3262, column: 43, scope: !4114)
!4118 = !DILocation(line: 3262, column: 56, scope: !4114)
!4119 = !DILocation(line: 3262, column: 59, scope: !4114)
!4120 = !DILocation(line: 3262, column: 62, scope: !4114)
!4121 = !DILocation(line: 3262, column: 66, scope: !4114)
!4122 = !DILocation(line: 3262, column: 3, scope: !4114)
!4123 = !DILocation(line: 3263, column: 13, scope: !4114)
!4124 = !DILocation(line: 3263, column: 24, scope: !4114)
!4125 = !DILocation(line: 3263, column: 37, scope: !4114)
!4126 = !DILocation(line: 3263, column: 44, scope: !4114)
!4127 = !DILocation(line: 3263, column: 50, scope: !4114)
!4128 = !DILocation(line: 3263, column: 53, scope: !4114)
!4129 = !DILocation(line: 3263, column: 56, scope: !4114)
!4130 = !DILocation(line: 3263, column: 60, scope: !4114)
!4131 = !DILocation(line: 3263, column: 64, scope: !4114)
!4132 = !DILocation(line: 3263, column: 67, scope: !4114)
!4133 = !DILocation(line: 3263, column: 3, scope: !4114)
!4134 = !DILocation(line: 3264, column: 3, scope: !4114)
!4135 = distinct !{!4135, !4134}
!4136 = !DILocalVariable(name: "sw", scope: !4137, file: !243, line: 3264, type: !360)
!4137 = distinct !DILexicalBlock(scope: !4114, file: !243, line: 3264, column: 6)
!4138 = !DILocation(line: 3264, column: 25, scope: !4137)
!4139 = !DILocalVariable(name: "rect", scope: !4137, file: !243, line: 3264, type: !274)
!4140 = !DILocation(line: 3264, column: 40, scope: !4137)
!4141 = !DILocation(line: 3264, column: 51, scope: !4142)
!4142 = !DILexicalBlockFile(scope: !4143, file: !243, discriminator: 1)
!4143 = distinct !DILexicalBlock(scope: !4137, file: !243, line: 3264, column: 50)
!4144 = !DILocation(line: 3264, column: 50, scope: !4142)
!4145 = !DILocation(line: 3264, column: 71, scope: !4146)
!4146 = !DILexicalBlockFile(scope: !4143, file: !243, discriminator: 2)
!4147 = !DILocation(line: 3264, column: 88, scope: !4148)
!4148 = !DILexicalBlockFile(scope: !4149, file: !243, discriminator: 3)
!4149 = distinct !DILexicalBlock(scope: !4137, file: !243, line: 3264, column: 78)
!4150 = !DILocation(line: 3264, column: 86, scope: !4148)
!4151 = !DILocation(line: 3264, column: 83, scope: !4148)
!4152 = !DILocation(line: 3264, column: 108, scope: !4153)
!4153 = !DILexicalBlockFile(scope: !4154, file: !243, discriminator: 4)
!4154 = distinct !DILexicalBlock(scope: !4149, file: !243, line: 3264, column: 78)
!4155 = !DILocation(line: 3264, column: 78, scope: !4153)
!4156 = !DILocation(line: 3264, column: 155, scope: !4157)
!4157 = !DILexicalBlockFile(scope: !4158, file: !243, discriminator: 5)
!4158 = distinct !DILexicalBlock(scope: !4154, file: !243, line: 3264, column: 127)
!4159 = !DILocation(line: 3264, column: 138, scope: !4157)
!4160 = !DILocation(line: 3264, column: 159, scope: !4157)
!4161 = !DILocation(line: 3264, column: 163, scope: !4157)
!4162 = !DILocation(line: 3264, column: 157, scope: !4157)
!4163 = !DILocation(line: 3264, column: 134, scope: !4157)
!4164 = !DILocation(line: 3264, column: 136, scope: !4157)
!4165 = !DILocation(line: 3264, column: 198, scope: !4157)
!4166 = !DILocation(line: 3264, column: 181, scope: !4157)
!4167 = !DILocation(line: 3264, column: 202, scope: !4157)
!4168 = !DILocation(line: 3264, column: 206, scope: !4157)
!4169 = !DILocation(line: 3264, column: 200, scope: !4157)
!4170 = !DILocation(line: 3264, column: 177, scope: !4157)
!4171 = !DILocation(line: 3264, column: 179, scope: !4157)
!4172 = !DILocation(line: 3264, column: 245, scope: !4157)
!4173 = !DILocation(line: 3264, column: 220, scope: !4157)
!4174 = !DILocation(line: 3264, column: 226, scope: !4157)
!4175 = !DILocation(line: 3264, column: 283, scope: !4157)
!4176 = !DILocation(line: 3264, column: 257, scope: !4157)
!4177 = !DILocation(line: 3264, column: 264, scope: !4157)
!4178 = !DILocation(line: 3264, column: 310, scope: !4157)
!4179 = !DILocation(line: 3264, column: 321, scope: !4157)
!4180 = !DILocation(line: 3264, column: 291, scope: !4157)
!4181 = !DILocation(line: 3264, column: 16, scope: !4157)
!4182 = !DILocation(line: 3264, column: 27, scope: !4157)
!4183 = !DILocation(line: 3264, column: 40, scope: !4157)
!4184 = !DILocation(line: 3264, column: 44, scope: !4157)
!4185 = !DILocation(line: 3264, column: 49, scope: !4157)
!4186 = !DILocation(line: 3264, column: 55, scope: !4157)
!4187 = !DILocation(line: 3264, column: 58, scope: !4157)
!4188 = !DILocation(line: 3264, column: 61, scope: !4157)
!4189 = !DILocation(line: 3264, column: 65, scope: !4157)
!4190 = !DILocation(line: 3264, column: 69, scope: !4157)
!4191 = !DILocation(line: 3264, column: 73, scope: !4157)
!4192 = !DILocation(line: 3264, column: 77, scope: !4157)
!4193 = !DILocation(line: 3264, column: 71, scope: !4157)
!4194 = !DILocation(line: 3264, column: 86, scope: !4157)
!4195 = !DILocation(line: 3264, column: 90, scope: !4157)
!4196 = !DILocation(line: 3264, column: 94, scope: !4157)
!4197 = !DILocation(line: 3264, column: 88, scope: !4157)
!4198 = !DILocation(line: 3264, column: 5, scope: !4199)
!4199 = !DILexicalBlockFile(scope: !4157, file: !243, discriminator: 8)
!4200 = !DILocation(line: 3264, column: 104, scope: !4157)
!4201 = !DILocation(line: 3264, column: 117, scope: !4202)
!4202 = !DILexicalBlockFile(scope: !4154, file: !243, discriminator: 6)
!4203 = !DILocation(line: 3264, column: 121, scope: !4202)
!4204 = !DILocation(line: 3264, column: 115, scope: !4202)
!4205 = !DILocation(line: 3264, column: 78, scope: !4202)
!4206 = distinct !{!4206, !4207}
!4207 = !DILocation(line: 3264, column: 78, scope: !4137)
!4208 = !DILocation(line: 3264, column: 125, scope: !4209)
!4209 = !DILexicalBlockFile(scope: !4137, file: !243, discriminator: 7)
!4210 = !DILocation(line: 3264, column: 136, scope: !4209)
!4211 = !DILocation(line: 3264, column: 106, scope: !4209)
!4212 = !DILocation(line: 3264, column: 5, scope: !4209)
!4213 = !DILocation(line: 3267, column: 2, scope: !4114)
!4214 = !DILocation(line: 3270, column: 13, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4111, file: !243, line: 3269, column: 2)
!4216 = !DILocation(line: 3270, column: 24, scope: !4215)
!4217 = !DILocation(line: 3270, column: 31, scope: !4215)
!4218 = !DILocation(line: 3270, column: 37, scope: !4215)
!4219 = !DILocation(line: 3270, column: 50, scope: !4215)
!4220 = !DILocation(line: 3270, column: 53, scope: !4215)
!4221 = !DILocation(line: 3270, column: 56, scope: !4215)
!4222 = !DILocation(line: 3270, column: 60, scope: !4215)
!4223 = !DILocation(line: 3270, column: 3, scope: !4215)
!4224 = !DILocation(line: 3271, column: 3, scope: !4215)
!4225 = distinct !{!4225, !4224}
!4226 = !DILocalVariable(name: "sw", scope: !4227, file: !243, line: 3271, type: !360)
!4227 = distinct !DILexicalBlock(scope: !4215, file: !243, line: 3271, column: 6)
!4228 = !DILocation(line: 3271, column: 25, scope: !4227)
!4229 = !DILocalVariable(name: "rect", scope: !4227, file: !243, line: 3271, type: !274)
!4230 = !DILocation(line: 3271, column: 40, scope: !4227)
!4231 = !DILocation(line: 3271, column: 51, scope: !4232)
!4232 = !DILexicalBlockFile(scope: !4233, file: !243, discriminator: 1)
!4233 = distinct !DILexicalBlock(scope: !4227, file: !243, line: 3271, column: 50)
!4234 = !DILocation(line: 3271, column: 50, scope: !4232)
!4235 = !DILocation(line: 3271, column: 71, scope: !4236)
!4236 = !DILexicalBlockFile(scope: !4233, file: !243, discriminator: 2)
!4237 = !DILocation(line: 3271, column: 88, scope: !4238)
!4238 = !DILexicalBlockFile(scope: !4239, file: !243, discriminator: 3)
!4239 = distinct !DILexicalBlock(scope: !4227, file: !243, line: 3271, column: 78)
!4240 = !DILocation(line: 3271, column: 86, scope: !4238)
!4241 = !DILocation(line: 3271, column: 83, scope: !4238)
!4242 = !DILocation(line: 3271, column: 108, scope: !4243)
!4243 = !DILexicalBlockFile(scope: !4244, file: !243, discriminator: 4)
!4244 = distinct !DILexicalBlock(scope: !4239, file: !243, line: 3271, column: 78)
!4245 = !DILocation(line: 3271, column: 78, scope: !4243)
!4246 = !DILocation(line: 3271, column: 155, scope: !4247)
!4247 = !DILexicalBlockFile(scope: !4248, file: !243, discriminator: 5)
!4248 = distinct !DILexicalBlock(scope: !4244, file: !243, line: 3271, column: 127)
!4249 = !DILocation(line: 3271, column: 138, scope: !4247)
!4250 = !DILocation(line: 3271, column: 159, scope: !4247)
!4251 = !DILocation(line: 3271, column: 163, scope: !4247)
!4252 = !DILocation(line: 3271, column: 157, scope: !4247)
!4253 = !DILocation(line: 3271, column: 134, scope: !4247)
!4254 = !DILocation(line: 3271, column: 136, scope: !4247)
!4255 = !DILocation(line: 3271, column: 198, scope: !4247)
!4256 = !DILocation(line: 3271, column: 181, scope: !4247)
!4257 = !DILocation(line: 3271, column: 202, scope: !4247)
!4258 = !DILocation(line: 3271, column: 206, scope: !4247)
!4259 = !DILocation(line: 3271, column: 200, scope: !4247)
!4260 = !DILocation(line: 3271, column: 177, scope: !4247)
!4261 = !DILocation(line: 3271, column: 179, scope: !4247)
!4262 = !DILocation(line: 3271, column: 245, scope: !4247)
!4263 = !DILocation(line: 3271, column: 220, scope: !4247)
!4264 = !DILocation(line: 3271, column: 226, scope: !4247)
!4265 = !DILocation(line: 3271, column: 283, scope: !4247)
!4266 = !DILocation(line: 3271, column: 257, scope: !4247)
!4267 = !DILocation(line: 3271, column: 264, scope: !4247)
!4268 = !DILocation(line: 3271, column: 310, scope: !4247)
!4269 = !DILocation(line: 3271, column: 321, scope: !4247)
!4270 = !DILocation(line: 3271, column: 291, scope: !4247)
!4271 = !DILocation(line: 3271, column: 16, scope: !4247)
!4272 = !DILocation(line: 3271, column: 27, scope: !4247)
!4273 = !DILocation(line: 3271, column: 34, scope: !4247)
!4274 = !DILocation(line: 3271, column: 38, scope: !4247)
!4275 = !DILocation(line: 3271, column: 43, scope: !4247)
!4276 = !DILocation(line: 3271, column: 49, scope: !4247)
!4277 = !DILocation(line: 3271, column: 52, scope: !4247)
!4278 = !DILocation(line: 3271, column: 55, scope: !4247)
!4279 = !DILocation(line: 3271, column: 59, scope: !4247)
!4280 = !DILocation(line: 3271, column: 63, scope: !4247)
!4281 = !DILocation(line: 3271, column: 67, scope: !4247)
!4282 = !DILocation(line: 3271, column: 71, scope: !4247)
!4283 = !DILocation(line: 3271, column: 65, scope: !4247)
!4284 = !DILocation(line: 3271, column: 80, scope: !4247)
!4285 = !DILocation(line: 3271, column: 84, scope: !4247)
!4286 = !DILocation(line: 3271, column: 88, scope: !4247)
!4287 = !DILocation(line: 3271, column: 82, scope: !4247)
!4288 = !DILocation(line: 3271, column: 5, scope: !4289)
!4289 = !DILexicalBlockFile(scope: !4247, file: !243, discriminator: 8)
!4290 = !DILocation(line: 3271, column: 98, scope: !4247)
!4291 = !DILocation(line: 3271, column: 117, scope: !4292)
!4292 = !DILexicalBlockFile(scope: !4244, file: !243, discriminator: 6)
!4293 = !DILocation(line: 3271, column: 121, scope: !4292)
!4294 = !DILocation(line: 3271, column: 115, scope: !4292)
!4295 = !DILocation(line: 3271, column: 78, scope: !4292)
!4296 = distinct !{!4296, !4297}
!4297 = !DILocation(line: 3271, column: 78, scope: !4227)
!4298 = !DILocation(line: 3271, column: 119, scope: !4299)
!4299 = !DILexicalBlockFile(scope: !4227, file: !243, discriminator: 7)
!4300 = !DILocation(line: 3271, column: 130, scope: !4299)
!4301 = !DILocation(line: 3271, column: 100, scope: !4299)
!4302 = !DILocation(line: 3271, column: 5, scope: !4299)
!4303 = !DILocation(line: 3276, column: 8, scope: !4049)
!4304 = !DILocation(line: 3276, column: 2, scope: !4049)
!4305 = !DILocation(line: 3277, column: 6, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4049, file: !243, line: 3277, column: 6)
!4307 = !DILocation(line: 3277, column: 15, scope: !4306)
!4308 = !DILocation(line: 3277, column: 12, scope: !4306)
!4309 = !DILocation(line: 3277, column: 6, scope: !4049)
!4310 = !DILocation(line: 3278, column: 9, scope: !4306)
!4311 = !DILocation(line: 3278, column: 3, scope: !4306)
!4312 = !DILocation(line: 3279, column: 1, scope: !4049)
!4313 = distinct !DISubprogram(name: "ui_destroy_bitmap", scope: !243, file: !243, line: 3282, type: !4314, isLocal: false, isDefinition: true, scopeLine: 3283, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{null, !188}
!4316 = !DILocalVariable(name: "bmp", arg: 1, scope: !4313, file: !243, line: 3282, type: !188)
!4317 = !DILocation(line: 3282, column: 30, scope: !4313)
!4318 = !DILocation(line: 3284, column: 14, scope: !4313)
!4319 = !DILocation(line: 3284, column: 34, scope: !4313)
!4320 = !DILocation(line: 3284, column: 25, scope: !4313)
!4321 = !DILocation(line: 3284, column: 2, scope: !4313)
!4322 = !DILocation(line: 3285, column: 1, scope: !4313)
!4323 = distinct !DISubprogram(name: "ui_create_glyph", scope: !243, file: !243, line: 3288, type: !4324, isLocal: false, isDefinition: true, scopeLine: 3289, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{!190, !45, !45, !46}
!4326 = !DILocalVariable(name: "width", arg: 1, scope: !4323, file: !243, line: 3288, type: !45)
!4327 = !DILocation(line: 3288, column: 21, scope: !4323)
!4328 = !DILocalVariable(name: "height", arg: 2, scope: !4323, file: !243, line: 3288, type: !45)
!4329 = !DILocation(line: 3288, column: 32, scope: !4323)
!4330 = !DILocalVariable(name: "data", arg: 3, scope: !4323, file: !243, line: 3288, type: !46)
!4331 = !DILocation(line: 3288, column: 48, scope: !4323)
!4332 = !DILocalVariable(name: "image", scope: !4323, file: !243, line: 3290, type: !3769)
!4333 = !DILocation(line: 3290, column: 10, scope: !4323)
!4334 = !DILocalVariable(name: "bitmap", scope: !4323, file: !243, line: 3291, type: !189)
!4335 = !DILocation(line: 3291, column: 9, scope: !4323)
!4336 = !DILocalVariable(name: "scanline", scope: !4323, file: !243, line: 3292, type: !45)
!4337 = !DILocation(line: 3292, column: 6, scope: !4323)
!4338 = !DILocation(line: 3294, column: 14, scope: !4323)
!4339 = !DILocation(line: 3294, column: 20, scope: !4323)
!4340 = !DILocation(line: 3294, column: 25, scope: !4323)
!4341 = !DILocation(line: 3294, column: 11, scope: !4323)
!4342 = !DILocation(line: 3296, column: 25, scope: !4323)
!4343 = !DILocation(line: 3296, column: 36, scope: !4323)
!4344 = !DILocation(line: 3296, column: 43, scope: !4323)
!4345 = !DILocation(line: 3296, column: 50, scope: !4323)
!4346 = !DILocation(line: 3296, column: 11, scope: !4323)
!4347 = !DILocation(line: 3296, column: 9, scope: !4323)
!4348 = !DILocation(line: 3297, column: 6, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4323, file: !243, line: 3297, column: 6)
!4350 = !DILocation(line: 3297, column: 24, scope: !4349)
!4351 = !DILocation(line: 3297, column: 6, scope: !4323)
!4352 = !DILocation(line: 3298, column: 33, scope: !4349)
!4353 = !DILocation(line: 3298, column: 44, scope: !4349)
!4354 = !DILocation(line: 3298, column: 23, scope: !4349)
!4355 = !DILocation(line: 3298, column: 21, scope: !4349)
!4356 = !DILocation(line: 3298, column: 3, scope: !4349)
!4357 = !DILocation(line: 3300, column: 23, scope: !4323)
!4358 = !DILocation(line: 3300, column: 34, scope: !4323)
!4359 = !DILocation(line: 3300, column: 67, scope: !4323)
!4360 = !DILocation(line: 3301, column: 9, scope: !4323)
!4361 = !DILocation(line: 3301, column: 16, scope: !4323)
!4362 = !DILocation(line: 3301, column: 27, scope: !4323)
!4363 = !DILocation(line: 3300, column: 10, scope: !4323)
!4364 = !DILocation(line: 3300, column: 8, scope: !4323)
!4365 = !DILocation(line: 3302, column: 2, scope: !4323)
!4366 = !DILocation(line: 3302, column: 9, scope: !4323)
!4367 = !DILocation(line: 3302, column: 20, scope: !4323)
!4368 = !DILocation(line: 3303, column: 2, scope: !4323)
!4369 = !DILocation(line: 3303, column: 9, scope: !4323)
!4370 = !DILocation(line: 3303, column: 26, scope: !4323)
!4371 = !DILocation(line: 3304, column: 13, scope: !4323)
!4372 = !DILocation(line: 3304, column: 2, scope: !4323)
!4373 = !DILocation(line: 3306, column: 12, scope: !4323)
!4374 = !DILocation(line: 3306, column: 23, scope: !4323)
!4375 = !DILocation(line: 3306, column: 31, scope: !4323)
!4376 = !DILocation(line: 3306, column: 50, scope: !4323)
!4377 = !DILocation(line: 3306, column: 69, scope: !4323)
!4378 = !DILocation(line: 3306, column: 76, scope: !4323)
!4379 = !DILocation(line: 3306, column: 2, scope: !4323)
!4380 = !DILocation(line: 3308, column: 8, scope: !4323)
!4381 = !DILocation(line: 3308, column: 2, scope: !4323)
!4382 = !DILocation(line: 3309, column: 21, scope: !4323)
!4383 = !DILocation(line: 3309, column: 9, scope: !4323)
!4384 = !DILocation(line: 3309, column: 2, scope: !4323)
!4385 = distinct !DISubprogram(name: "ui_destroy_glyph", scope: !243, file: !243, line: 3313, type: !4386, isLocal: false, isDefinition: true, scopeLine: 3314, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4386 = !DISubroutineType(types: !4387)
!4387 = !{null, !190}
!4388 = !DILocalVariable(name: "glyph", arg: 1, scope: !4385, file: !243, line: 3313, type: !190)
!4389 = !DILocation(line: 3313, column: 28, scope: !4385)
!4390 = !DILocation(line: 3315, column: 14, scope: !4385)
!4391 = !DILocation(line: 3315, column: 34, scope: !4385)
!4392 = !DILocation(line: 3315, column: 25, scope: !4385)
!4393 = !DILocation(line: 3315, column: 2, scope: !4385)
!4394 = !DILocation(line: 3316, column: 1, scope: !4385)
!4395 = distinct !DISubprogram(name: "get_pixel", scope: !243, file: !243, line: 3321, type: !4396, isLocal: true, isDefinition: true, scopeLine: 3322, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!193, !193, !46, !46, !45, !46}
!4398 = !DILocalVariable(name: "idx", arg: 1, scope: !4395, file: !243, line: 3321, type: !193)
!4399 = !DILocation(line: 3321, column: 18, scope: !4395)
!4400 = !DILocalVariable(name: "andmask", arg: 2, scope: !4395, file: !243, line: 3321, type: !46)
!4401 = !DILocation(line: 3321, column: 31, scope: !4395)
!4402 = !DILocalVariable(name: "xormask", arg: 3, scope: !4395, file: !243, line: 3321, type: !46)
!4403 = !DILocation(line: 3321, column: 48, scope: !4395)
!4404 = !DILocalVariable(name: "bpp", arg: 4, scope: !4395, file: !243, line: 3321, type: !45)
!4405 = !DILocation(line: 3321, column: 61, scope: !4395)
!4406 = !DILocalVariable(name: "xor_flag", arg: 5, scope: !4395, file: !243, line: 3321, type: !46)
!4407 = !DILocation(line: 3321, column: 74, scope: !4395)
!4408 = !DILocalVariable(name: "offs", scope: !4395, file: !243, line: 3323, type: !193)
!4409 = !DILocation(line: 3323, column: 9, scope: !4395)
!4410 = !DILocalVariable(name: "argb", scope: !4395, file: !243, line: 3324, type: !193)
!4411 = !DILocation(line: 3324, column: 9, scope: !4395)
!4412 = !DILocalVariable(name: "alpha", scope: !4395, file: !243, line: 3325, type: !47)
!4413 = !DILocation(line: 3325, column: 8, scope: !4395)
!4414 = !DILocalVariable(name: "pxor", scope: !4395, file: !243, line: 3326, type: !46)
!4415 = !DILocation(line: 3326, column: 9, scope: !4395)
!4416 = !DILocalVariable(name: "pc", scope: !4395, file: !243, line: 3327, type: !4417)
!4417 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelColour", file: !243, line: 214, baseType: !4418)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !243, line: 208, size: 96, align: 32, elements: !4419)
!4419 = !{!4420, !4421, !4422}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !4418, file: !243, line: 210, baseType: !193, size: 32, align: 32)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !4418, file: !243, line: 211, baseType: !193, size: 32, align: 32, offset: 32)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !4418, file: !243, line: 212, baseType: !193, size: 32, align: 32, offset: 64)
!4423 = !DILocation(line: 3327, column: 14, scope: !4395)
!4424 = !DILocation(line: 3329, column: 3, scope: !4395)
!4425 = !DILocation(line: 3329, column: 12, scope: !4395)
!4426 = !DILocation(line: 3332, column: 7, scope: !4395)
!4427 = !DILocation(line: 3333, column: 10, scope: !4395)
!4428 = !DILocation(line: 3333, column: 2, scope: !4395)
!4429 = !DILocation(line: 3336, column: 11, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4395, file: !243, line: 3334, column: 2)
!4431 = !DILocation(line: 3336, column: 9, scope: !4430)
!4432 = !DILocation(line: 3337, column: 14, scope: !4430)
!4433 = !DILocation(line: 3337, column: 24, scope: !4430)
!4434 = !DILocation(line: 3337, column: 28, scope: !4430)
!4435 = !DILocation(line: 3337, column: 22, scope: !4430)
!4436 = !DILocation(line: 3337, column: 12, scope: !4430)
!4437 = !DILocation(line: 3337, column: 47, scope: !4430)
!4438 = !DILocation(line: 3337, column: 51, scope: !4430)
!4439 = !DILocation(line: 3337, column: 44, scope: !4430)
!4440 = !DILocation(line: 3337, column: 38, scope: !4430)
!4441 = !DILocation(line: 3337, column: 33, scope: !4430)
!4442 = !DILocation(line: 3337, column: 9, scope: !4430)
!4443 = !DILocation(line: 3338, column: 15, scope: !4430)
!4444 = !DILocation(line: 3338, column: 25, scope: !4430)
!4445 = !DILocation(line: 3338, column: 29, scope: !4430)
!4446 = !DILocation(line: 3338, column: 23, scope: !4430)
!4447 = !DILocation(line: 3338, column: 13, scope: !4430)
!4448 = !DILocation(line: 3338, column: 48, scope: !4430)
!4449 = !DILocation(line: 3338, column: 52, scope: !4430)
!4450 = !DILocation(line: 3338, column: 45, scope: !4430)
!4451 = !DILocation(line: 3338, column: 39, scope: !4430)
!4452 = !DILocation(line: 3338, column: 34, scope: !4430)
!4453 = !DILocation(line: 3338, column: 12, scope: !4430)
!4454 = !DILocation(line: 3338, column: 10, scope: !4430)
!4455 = !DILocation(line: 3339, column: 12, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4430, file: !243, line: 3339, column: 8)
!4457 = !DILocation(line: 3339, column: 22, scope: !4456)
!4458 = !DILocation(line: 3339, column: 26, scope: !4456)
!4459 = !DILocation(line: 3339, column: 20, scope: !4456)
!4460 = !DILocation(line: 3339, column: 10, scope: !4456)
!4461 = !DILocation(line: 3339, column: 45, scope: !4456)
!4462 = !DILocation(line: 3339, column: 49, scope: !4456)
!4463 = !DILocation(line: 3339, column: 42, scope: !4456)
!4464 = !DILocation(line: 3339, column: 36, scope: !4456)
!4465 = !DILocation(line: 3339, column: 31, scope: !4456)
!4466 = !DILocation(line: 3339, column: 8, scope: !4456)
!4467 = !DILocation(line: 3339, column: 57, scope: !4456)
!4468 = !DILocation(line: 3339, column: 65, scope: !4456)
!4469 = !DILocation(line: 3339, column: 68, scope: !4470)
!4470 = !DILexicalBlockFile(scope: !4456, file: !243, discriminator: 1)
!4471 = !DILocation(line: 3339, column: 8, scope: !4470)
!4472 = !DILocation(line: 3345, column: 10, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4456, file: !243, line: 3340, column: 4)
!4474 = !DILocation(line: 3346, column: 6, scope: !4473)
!4475 = !DILocation(line: 3346, column: 15, scope: !4473)
!4476 = !DILocation(line: 3347, column: 4, scope: !4473)
!4477 = !DILocation(line: 3349, column: 13, scope: !4456)
!4478 = !DILocation(line: 3349, column: 19, scope: !4456)
!4479 = !DILocation(line: 3349, column: 29, scope: !4456)
!4480 = !DILocation(line: 3349, column: 26, scope: !4456)
!4481 = !DILocation(line: 3349, column: 10, scope: !4456)
!4482 = !DILocation(line: 3350, column: 4, scope: !4430)
!4483 = !DILocation(line: 3353, column: 11, scope: !4430)
!4484 = !DILocation(line: 3353, column: 15, scope: !4430)
!4485 = !DILocation(line: 3353, column: 9, scope: !4430)
!4486 = !DILocation(line: 3354, column: 11, scope: !4430)
!4487 = !DILocation(line: 3354, column: 21, scope: !4430)
!4488 = !DILocation(line: 3354, column: 19, scope: !4430)
!4489 = !DILocation(line: 3354, column: 9, scope: !4430)
!4490 = !DILocation(line: 3355, column: 28, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4430, file: !243, line: 3355, column: 4)
!4492 = !DILocation(line: 3355, column: 17, scope: !4491)
!4493 = !DILocation(line: 3355, column: 34, scope: !4491)
!4494 = !DILocation(line: 3355, column: 40, scope: !4491)
!4495 = !DILocation(line: 3355, column: 63, scope: !4491)
!4496 = !DILocation(line: 3355, column: 52, scope: !4491)
!4497 = !DILocation(line: 3355, column: 69, scope: !4491)
!4498 = !DILocation(line: 3355, column: 76, scope: !4491)
!4499 = !DILocation(line: 3355, column: 48, scope: !4491)
!4500 = !DILocation(line: 3355, column: 9, scope: !4491)
!4501 = !DILocation(line: 3355, column: 13, scope: !4491)
!4502 = !DILocation(line: 3355, column: 108, scope: !4491)
!4503 = !DILocation(line: 3355, column: 97, scope: !4491)
!4504 = !DILocation(line: 3355, column: 114, scope: !4491)
!4505 = !DILocation(line: 3355, column: 120, scope: !4491)
!4506 = !DILocation(line: 3355, column: 143, scope: !4491)
!4507 = !DILocation(line: 3355, column: 132, scope: !4491)
!4508 = !DILocation(line: 3355, column: 149, scope: !4491)
!4509 = !DILocation(line: 3355, column: 155, scope: !4491)
!4510 = !DILocation(line: 3355, column: 128, scope: !4491)
!4511 = !DILocation(line: 3355, column: 87, scope: !4491)
!4512 = !DILocation(line: 3355, column: 93, scope: !4491)
!4513 = !DILocation(line: 3355, column: 186, scope: !4491)
!4514 = !DILocation(line: 3355, column: 175, scope: !4491)
!4515 = !DILocation(line: 3355, column: 192, scope: !4491)
!4516 = !DILocation(line: 3355, column: 198, scope: !4491)
!4517 = !DILocation(line: 3355, column: 221, scope: !4491)
!4518 = !DILocation(line: 3355, column: 210, scope: !4491)
!4519 = !DILocation(line: 3355, column: 227, scope: !4491)
!4520 = !DILocation(line: 3355, column: 233, scope: !4491)
!4521 = !DILocation(line: 3355, column: 206, scope: !4491)
!4522 = !DILocation(line: 3355, column: 166, scope: !4491)
!4523 = !DILocation(line: 3355, column: 171, scope: !4491)
!4524 = !DILocation(line: 3356, column: 15, scope: !4430)
!4525 = !DILocation(line: 3356, column: 25, scope: !4430)
!4526 = !DILocation(line: 3356, column: 29, scope: !4430)
!4527 = !DILocation(line: 3356, column: 23, scope: !4430)
!4528 = !DILocation(line: 3356, column: 13, scope: !4430)
!4529 = !DILocation(line: 3356, column: 48, scope: !4430)
!4530 = !DILocation(line: 3356, column: 52, scope: !4430)
!4531 = !DILocation(line: 3356, column: 45, scope: !4430)
!4532 = !DILocation(line: 3356, column: 39, scope: !4430)
!4533 = !DILocation(line: 3356, column: 34, scope: !4430)
!4534 = !DILocation(line: 3356, column: 12, scope: !4430)
!4535 = !DILocation(line: 3356, column: 10, scope: !4430)
!4536 = !DILocation(line: 3357, column: 12, scope: !4430)
!4537 = !DILocation(line: 3357, column: 18, scope: !4430)
!4538 = !DILocation(line: 3357, column: 31, scope: !4430)
!4539 = !DILocation(line: 3357, column: 35, scope: !4430)
!4540 = !DILocation(line: 3357, column: 25, scope: !4430)
!4541 = !DILocation(line: 3357, column: 48, scope: !4430)
!4542 = !DILocation(line: 3357, column: 54, scope: !4430)
!4543 = !DILocation(line: 3357, column: 42, scope: !4430)
!4544 = !DILocation(line: 3357, column: 65, scope: !4430)
!4545 = !DILocation(line: 3357, column: 60, scope: !4430)
!4546 = !DILocation(line: 3357, column: 9, scope: !4430)
!4547 = !DILocation(line: 3358, column: 4, scope: !4430)
!4548 = !DILocation(line: 3361, column: 11, scope: !4430)
!4549 = !DILocation(line: 3361, column: 15, scope: !4430)
!4550 = !DILocation(line: 3361, column: 9, scope: !4430)
!4551 = !DILocation(line: 3362, column: 11, scope: !4430)
!4552 = !DILocation(line: 3362, column: 21, scope: !4430)
!4553 = !DILocation(line: 3362, column: 19, scope: !4430)
!4554 = !DILocation(line: 3362, column: 9, scope: !4430)
!4555 = !DILocation(line: 3363, column: 15, scope: !4430)
!4556 = !DILocation(line: 3363, column: 25, scope: !4430)
!4557 = !DILocation(line: 3363, column: 29, scope: !4430)
!4558 = !DILocation(line: 3363, column: 23, scope: !4430)
!4559 = !DILocation(line: 3363, column: 13, scope: !4430)
!4560 = !DILocation(line: 3363, column: 48, scope: !4430)
!4561 = !DILocation(line: 3363, column: 52, scope: !4430)
!4562 = !DILocation(line: 3363, column: 45, scope: !4430)
!4563 = !DILocation(line: 3363, column: 39, scope: !4430)
!4564 = !DILocation(line: 3363, column: 34, scope: !4430)
!4565 = !DILocation(line: 3363, column: 12, scope: !4430)
!4566 = !DILocation(line: 3363, column: 10, scope: !4430)
!4567 = !DILocation(line: 3364, column: 12, scope: !4430)
!4568 = !DILocation(line: 3364, column: 18, scope: !4430)
!4569 = !DILocation(line: 3364, column: 28, scope: !4430)
!4570 = !DILocation(line: 3364, column: 36, scope: !4430)
!4571 = !DILocation(line: 3364, column: 25, scope: !4430)
!4572 = !DILocation(line: 3364, column: 46, scope: !4430)
!4573 = !DILocation(line: 3364, column: 54, scope: !4430)
!4574 = !DILocation(line: 3364, column: 43, scope: !4430)
!4575 = !DILocation(line: 3364, column: 62, scope: !4430)
!4576 = !DILocation(line: 3364, column: 60, scope: !4430)
!4577 = !DILocation(line: 3364, column: 9, scope: !4430)
!4578 = !DILocation(line: 3365, column: 4, scope: !4430)
!4579 = !DILocation(line: 3368, column: 11, scope: !4430)
!4580 = !DILocation(line: 3368, column: 15, scope: !4430)
!4581 = !DILocation(line: 3368, column: 9, scope: !4430)
!4582 = !DILocation(line: 3369, column: 11, scope: !4430)
!4583 = !DILocation(line: 3369, column: 21, scope: !4430)
!4584 = !DILocation(line: 3369, column: 19, scope: !4430)
!4585 = !DILocation(line: 3369, column: 9, scope: !4430)
!4586 = !DILocation(line: 3370, column: 12, scope: !4430)
!4587 = !DILocation(line: 3370, column: 20, scope: !4430)
!4588 = !DILocation(line: 3370, column: 30, scope: !4430)
!4589 = !DILocation(line: 3370, column: 38, scope: !4430)
!4590 = !DILocation(line: 3370, column: 27, scope: !4430)
!4591 = !DILocation(line: 3370, column: 48, scope: !4430)
!4592 = !DILocation(line: 3370, column: 56, scope: !4430)
!4593 = !DILocation(line: 3370, column: 45, scope: !4430)
!4594 = !DILocation(line: 3370, column: 64, scope: !4430)
!4595 = !DILocation(line: 3370, column: 62, scope: !4430)
!4596 = !DILocation(line: 3370, column: 9, scope: !4430)
!4597 = !DILocation(line: 3371, column: 4, scope: !4430)
!4598 = !DILocation(line: 3374, column: 9, scope: !4395)
!4599 = !DILocation(line: 3374, column: 2, scope: !4395)
!4600 = distinct !DISubprogram(name: "xcursor_stencil", scope: !243, file: !243, line: 3379, type: !4601, isLocal: true, isDefinition: true, scopeLine: 3380, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4601 = !DISubroutineType(types: !4602)
!4602 = !{null, !2305, !2305, !45, !45, !193}
!4603 = !DILocalVariable(name: "src", arg: 1, scope: !4600, file: !243, line: 3379, type: !2305)
!4604 = !DILocation(line: 3379, column: 32, scope: !4600)
!4605 = !DILocalVariable(name: "dst", arg: 2, scope: !4600, file: !243, line: 3379, type: !2305)
!4606 = !DILocation(line: 3379, column: 52, scope: !4600)
!4607 = !DILocalVariable(name: "dx", arg: 3, scope: !4600, file: !243, line: 3379, type: !45)
!4608 = !DILocation(line: 3379, column: 61, scope: !4600)
!4609 = !DILocalVariable(name: "dy", arg: 4, scope: !4600, file: !243, line: 3379, type: !45)
!4610 = !DILocation(line: 3379, column: 69, scope: !4600)
!4611 = !DILocalVariable(name: "argb", arg: 5, scope: !4600, file: !243, line: 3379, type: !193)
!4612 = !DILocation(line: 3379, column: 80, scope: !4600)
!4613 = !DILocalVariable(name: "x", scope: !4600, file: !243, line: 3381, type: !45)
!4614 = !DILocation(line: 3381, column: 6, scope: !4600)
!4615 = !DILocalVariable(name: "y", scope: !4600, file: !243, line: 3381, type: !45)
!4616 = !DILocation(line: 3381, column: 9, scope: !4600)
!4617 = !DILocalVariable(name: "si", scope: !4600, file: !243, line: 3381, type: !45)
!4618 = !DILocation(line: 3381, column: 12, scope: !4600)
!4619 = !DILocalVariable(name: "di", scope: !4600, file: !243, line: 3381, type: !45)
!4620 = !DILocation(line: 3381, column: 16, scope: !4600)
!4621 = !DILocation(line: 3382, column: 1, scope: !4600)
!4622 = !DILocation(line: 3382, column: 6, scope: !4600)
!4623 = !DILocation(line: 3382, column: 15, scope: !4600)
!4624 = !DILocation(line: 3382, column: 20, scope: !4600)
!4625 = !DILocation(line: 3382, column: 12, scope: !4600)
!4626 = !DILocation(line: 3382, column: 2, scope: !4600)
!4627 = !DILocation(line: 3382, column: 2, scope: !4628)
!4628 = !DILexicalBlockFile(scope: !4600, file: !243, discriminator: 1)
!4629 = !DILocation(line: 3382, column: 18, scope: !4630)
!4630 = !DILexicalBlockFile(scope: !4600, file: !243, discriminator: 2)
!4631 = !DILocation(line: 3382, column: 2, scope: !4632)
!4632 = !DILexicalBlockFile(scope: !4600, file: !243, discriminator: 3)
!4633 = !DILocation(line: 3383, column: 1, scope: !4600)
!4634 = !DILocation(line: 3383, column: 6, scope: !4600)
!4635 = !DILocation(line: 3383, column: 16, scope: !4600)
!4636 = !DILocation(line: 3383, column: 21, scope: !4600)
!4637 = !DILocation(line: 3383, column: 13, scope: !4600)
!4638 = !DILocation(line: 3383, column: 2, scope: !4600)
!4639 = !DILocation(line: 3383, column: 2, scope: !4628)
!4640 = !DILocation(line: 3383, column: 18, scope: !4630)
!4641 = !DILocation(line: 3383, column: 2, scope: !4632)
!4642 = !DILocation(line: 3385, column: 9, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4600, file: !243, line: 3385, column: 2)
!4644 = !DILocation(line: 3385, column: 7, scope: !4643)
!4645 = !DILocation(line: 3385, column: 14, scope: !4646)
!4646 = !DILexicalBlockFile(scope: !4647, file: !243, discriminator: 1)
!4647 = distinct !DILexicalBlock(scope: !4643, file: !243, line: 3385, column: 2)
!4648 = !DILocation(line: 3385, column: 23, scope: !4646)
!4649 = !DILocation(line: 3385, column: 28, scope: !4646)
!4650 = !DILocation(line: 3385, column: 16, scope: !4646)
!4651 = !DILocation(line: 3385, column: 2, scope: !4646)
!4652 = !DILocation(line: 3387, column: 10, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !243, line: 3387, column: 3)
!4654 = distinct !DILexicalBlock(scope: !4647, file: !243, line: 3386, column: 2)
!4655 = !DILocation(line: 3387, column: 8, scope: !4653)
!4656 = !DILocation(line: 3387, column: 15, scope: !4657)
!4657 = !DILexicalBlockFile(scope: !4658, file: !243, discriminator: 1)
!4658 = distinct !DILexicalBlock(scope: !4653, file: !243, line: 3387, column: 3)
!4659 = !DILocation(line: 3387, column: 24, scope: !4657)
!4660 = !DILocation(line: 3387, column: 29, scope: !4657)
!4661 = !DILocation(line: 3387, column: 17, scope: !4657)
!4662 = !DILocation(line: 3387, column: 3, scope: !4657)
!4663 = !DILocation(line: 3389, column: 9, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4658, file: !243, line: 3388, column: 3)
!4665 = !DILocation(line: 3389, column: 13, scope: !4664)
!4666 = !DILocation(line: 3389, column: 18, scope: !4664)
!4667 = !DILocation(line: 3389, column: 11, scope: !4664)
!4668 = !DILocation(line: 3389, column: 26, scope: !4664)
!4669 = !DILocation(line: 3389, column: 24, scope: !4664)
!4670 = !DILocation(line: 3389, column: 7, scope: !4664)
!4671 = !DILocation(line: 3390, column: 21, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4664, file: !243, line: 3390, column: 8)
!4673 = !DILocation(line: 3390, column: 9, scope: !4672)
!4674 = !DILocation(line: 3390, column: 14, scope: !4672)
!4675 = !DILocation(line: 3390, column: 8, scope: !4664)
!4676 = !DILocation(line: 3391, column: 5, scope: !4672)
!4677 = !DILocation(line: 3393, column: 9, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4664, file: !243, line: 3393, column: 8)
!4679 = !DILocation(line: 3393, column: 13, scope: !4678)
!4680 = !DILocation(line: 3393, column: 11, scope: !4678)
!4681 = !DILocation(line: 3393, column: 17, scope: !4678)
!4682 = !DILocation(line: 3393, column: 21, scope: !4678)
!4683 = !DILocation(line: 3393, column: 25, scope: !4684)
!4684 = !DILexicalBlockFile(scope: !4678, file: !243, discriminator: 1)
!4685 = !DILocation(line: 3393, column: 29, scope: !4684)
!4686 = !DILocation(line: 3393, column: 27, scope: !4684)
!4687 = !DILocation(line: 3393, column: 41, scope: !4684)
!4688 = !DILocation(line: 3393, column: 46, scope: !4684)
!4689 = !DILocation(line: 3393, column: 33, scope: !4684)
!4690 = !DILocation(line: 3393, column: 8, scope: !4684)
!4691 = !DILocation(line: 3394, column: 5, scope: !4678)
!4692 = !DILocation(line: 3395, column: 9, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4664, file: !243, line: 3395, column: 8)
!4694 = !DILocation(line: 3395, column: 13, scope: !4693)
!4695 = !DILocation(line: 3395, column: 11, scope: !4693)
!4696 = !DILocation(line: 3395, column: 17, scope: !4693)
!4697 = !DILocation(line: 3395, column: 21, scope: !4693)
!4698 = !DILocation(line: 3395, column: 25, scope: !4699)
!4699 = !DILexicalBlockFile(scope: !4693, file: !243, discriminator: 1)
!4700 = !DILocation(line: 3395, column: 29, scope: !4699)
!4701 = !DILocation(line: 3395, column: 27, scope: !4699)
!4702 = !DILocation(line: 3395, column: 41, scope: !4699)
!4703 = !DILocation(line: 3395, column: 46, scope: !4699)
!4704 = !DILocation(line: 3395, column: 33, scope: !4699)
!4705 = !DILocation(line: 3395, column: 8, scope: !4699)
!4706 = !DILocation(line: 3396, column: 5, scope: !4693)
!4707 = !DILocation(line: 3397, column: 10, scope: !4664)
!4708 = !DILocation(line: 3397, column: 14, scope: !4664)
!4709 = !DILocation(line: 3397, column: 12, scope: !4664)
!4710 = !DILocation(line: 3397, column: 20, scope: !4664)
!4711 = !DILocation(line: 3397, column: 25, scope: !4664)
!4712 = !DILocation(line: 3397, column: 18, scope: !4664)
!4713 = !DILocation(line: 3397, column: 34, scope: !4664)
!4714 = !DILocation(line: 3397, column: 38, scope: !4664)
!4715 = !DILocation(line: 3397, column: 36, scope: !4664)
!4716 = !DILocation(line: 3397, column: 31, scope: !4664)
!4717 = !DILocation(line: 3397, column: 7, scope: !4664)
!4718 = !DILocation(line: 3398, column: 22, scope: !4664)
!4719 = !DILocation(line: 3398, column: 16, scope: !4664)
!4720 = !DILocation(line: 3398, column: 4, scope: !4664)
!4721 = !DILocation(line: 3398, column: 9, scope: !4664)
!4722 = !DILocation(line: 3398, column: 20, scope: !4664)
!4723 = !DILocation(line: 3399, column: 3, scope: !4664)
!4724 = !DILocation(line: 3387, column: 37, scope: !4725)
!4725 = !DILexicalBlockFile(scope: !4658, file: !243, discriminator: 2)
!4726 = !DILocation(line: 3387, column: 3, scope: !4725)
!4727 = distinct !{!4727, !4728}
!4728 = !DILocation(line: 3387, column: 3, scope: !4654)
!4729 = !DILocation(line: 3400, column: 2, scope: !4654)
!4730 = !DILocation(line: 3385, column: 37, scope: !4731)
!4731 = !DILexicalBlockFile(scope: !4647, file: !243, discriminator: 2)
!4732 = !DILocation(line: 3385, column: 2, scope: !4731)
!4733 = distinct !{!4733, !4734}
!4734 = !DILocation(line: 3385, column: 2, scope: !4600)
!4735 = !DILocation(line: 3401, column: 1, scope: !4600)
!4736 = distinct !DISubprogram(name: "xcursor_merge", scope: !243, file: !243, line: 3404, type: !4737, isLocal: true, isDefinition: true, scopeLine: 3405, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4737 = !DISubroutineType(types: !4738)
!4738 = !{null, !2305, !2305}
!4739 = !DILocalVariable(name: "src", arg: 1, scope: !4736, file: !243, line: 3404, type: !2305)
!4740 = !DILocation(line: 3404, column: 30, scope: !4736)
!4741 = !DILocalVariable(name: "dst", arg: 2, scope: !4736, file: !243, line: 3404, type: !2305)
!4742 = !DILocation(line: 3404, column: 50, scope: !4736)
!4743 = !DILocalVariable(name: "i", scope: !4736, file: !243, line: 3406, type: !193)
!4744 = !DILocation(line: 3406, column: 9, scope: !4736)
!4745 = !DILocation(line: 3407, column: 1, scope: !4736)
!4746 = !DILocation(line: 3407, column: 6, scope: !4736)
!4747 = !DILocation(line: 3407, column: 15, scope: !4736)
!4748 = !DILocation(line: 3407, column: 20, scope: !4736)
!4749 = !DILocation(line: 3407, column: 12, scope: !4736)
!4750 = !DILocation(line: 3407, column: 2, scope: !4736)
!4751 = !DILocation(line: 3407, column: 2, scope: !4752)
!4752 = !DILexicalBlockFile(scope: !4736, file: !243, discriminator: 1)
!4753 = !DILocation(line: 3407, column: 18, scope: !4754)
!4754 = !DILexicalBlockFile(scope: !4736, file: !243, discriminator: 2)
!4755 = !DILocation(line: 3407, column: 2, scope: !4756)
!4756 = !DILexicalBlockFile(scope: !4736, file: !243, discriminator: 3)
!4757 = !DILocation(line: 3408, column: 1, scope: !4736)
!4758 = !DILocation(line: 3408, column: 6, scope: !4736)
!4759 = !DILocation(line: 3408, column: 16, scope: !4736)
!4760 = !DILocation(line: 3408, column: 21, scope: !4736)
!4761 = !DILocation(line: 3408, column: 13, scope: !4736)
!4762 = !DILocation(line: 3408, column: 2, scope: !4736)
!4763 = !DILocation(line: 3408, column: 2, scope: !4752)
!4764 = !DILocation(line: 3408, column: 18, scope: !4754)
!4765 = !DILocation(line: 3408, column: 2, scope: !4756)
!4766 = !DILocation(line: 3409, column: 9, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4736, file: !243, line: 3409, column: 2)
!4768 = !DILocation(line: 3409, column: 7, scope: !4767)
!4769 = !DILocation(line: 3409, column: 14, scope: !4770)
!4770 = !DILexicalBlockFile(scope: !4771, file: !243, discriminator: 1)
!4771 = distinct !DILexicalBlock(scope: !4767, file: !243, line: 3409, column: 2)
!4772 = !DILocation(line: 3409, column: 18, scope: !4770)
!4773 = !DILocation(line: 3409, column: 23, scope: !4770)
!4774 = !DILocation(line: 3409, column: 31, scope: !4770)
!4775 = !DILocation(line: 3409, column: 36, scope: !4770)
!4776 = !DILocation(line: 3409, column: 29, scope: !4770)
!4777 = !DILocation(line: 3409, column: 16, scope: !4770)
!4778 = !DILocation(line: 3409, column: 2, scope: !4770)
!4779 = !DILocation(line: 3411, column: 20, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !243, line: 3411, column: 7)
!4781 = distinct !DILexicalBlock(scope: !4771, file: !243, line: 3410, column: 2)
!4782 = !DILocation(line: 3411, column: 8, scope: !4780)
!4783 = !DILocation(line: 3411, column: 13, scope: !4780)
!4784 = !DILocation(line: 3411, column: 7, scope: !4781)
!4785 = !DILocation(line: 3412, column: 4, scope: !4780)
!4786 = !DILocation(line: 3413, column: 32, scope: !4781)
!4787 = !DILocation(line: 3413, column: 20, scope: !4781)
!4788 = !DILocation(line: 3413, column: 25, scope: !4781)
!4789 = !DILocation(line: 3413, column: 15, scope: !4781)
!4790 = !DILocation(line: 3413, column: 3, scope: !4781)
!4791 = !DILocation(line: 3413, column: 8, scope: !4781)
!4792 = !DILocation(line: 3413, column: 18, scope: !4781)
!4793 = !DILocation(line: 3414, column: 2, scope: !4781)
!4794 = !DILocation(line: 3409, column: 45, scope: !4795)
!4795 = !DILexicalBlockFile(scope: !4771, file: !243, discriminator: 2)
!4796 = !DILocation(line: 3409, column: 2, scope: !4795)
!4797 = distinct !{!4797, !4798}
!4798 = !DILocation(line: 3409, column: 2, scope: !4736)
!4799 = !DILocation(line: 3415, column: 1, scope: !4736)
!4800 = distinct !DISubprogram(name: "ui_set_cursor", scope: !243, file: !243, line: 3498, type: !4801, isLocal: false, isDefinition: true, scopeLine: 3499, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4801 = !DISubroutineType(types: !4802)
!4802 = !{null, !191}
!4803 = !DILocalVariable(name: "cursor", arg: 1, scope: !4800, file: !243, line: 3498, type: !191)
!4804 = !DILocation(line: 3498, column: 26, scope: !4800)
!4805 = !DILocation(line: 3501, column: 6, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4800, file: !243, line: 3501, column: 6)
!4807 = !DILocation(line: 3501, column: 6, scope: !4800)
!4808 = !DILocation(line: 3501, column: 22, scope: !4809)
!4809 = !DILexicalBlockFile(scope: !4806, file: !243, discriminator: 1)
!4810 = !DILocation(line: 3503, column: 9, scope: !4800)
!4811 = !DILocation(line: 3503, column: 27, scope: !4800)
!4812 = !DILocation(line: 3502, column: 2, scope: !4800)
!4813 = !DILocation(line: 3505, column: 30, scope: !4800)
!4814 = !DILocation(line: 3505, column: 21, scope: !4800)
!4815 = !DILocation(line: 3505, column: 19, scope: !4800)
!4816 = !DILocation(line: 3506, column: 16, scope: !4800)
!4817 = !DILocation(line: 3506, column: 27, scope: !4800)
!4818 = !DILocation(line: 3506, column: 34, scope: !4800)
!4819 = !DILocation(line: 3506, column: 2, scope: !4800)
!4820 = !DILocation(line: 3507, column: 2, scope: !4800)
!4821 = distinct !{!4821, !4820}
!4822 = !DILocalVariable(name: "sw", scope: !4823, file: !243, line: 3507, type: !360)
!4823 = distinct !DILexicalBlock(scope: !4800, file: !243, line: 3507, column: 5)
!4824 = !DILocation(line: 3507, column: 24, scope: !4823)
!4825 = !DILocalVariable(name: "rect", scope: !4823, file: !243, line: 3507, type: !274)
!4826 = !DILocation(line: 3507, column: 39, scope: !4823)
!4827 = !DILocation(line: 3507, column: 50, scope: !4828)
!4828 = !DILexicalBlockFile(scope: !4829, file: !243, discriminator: 1)
!4829 = distinct !DILexicalBlock(scope: !4823, file: !243, line: 3507, column: 49)
!4830 = !DILocation(line: 3507, column: 49, scope: !4828)
!4831 = !DILocation(line: 3507, column: 70, scope: !4832)
!4832 = !DILexicalBlockFile(scope: !4829, file: !243, discriminator: 2)
!4833 = !DILocation(line: 3507, column: 87, scope: !4834)
!4834 = !DILexicalBlockFile(scope: !4835, file: !243, discriminator: 3)
!4835 = distinct !DILexicalBlock(scope: !4823, file: !243, line: 3507, column: 77)
!4836 = !DILocation(line: 3507, column: 85, scope: !4834)
!4837 = !DILocation(line: 3507, column: 82, scope: !4834)
!4838 = !DILocation(line: 3507, column: 107, scope: !4839)
!4839 = !DILexicalBlockFile(scope: !4840, file: !243, discriminator: 4)
!4840 = distinct !DILexicalBlock(scope: !4835, file: !243, line: 3507, column: 77)
!4841 = !DILocation(line: 3507, column: 77, scope: !4839)
!4842 = !DILocation(line: 3507, column: 154, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !4844, file: !243, discriminator: 5)
!4844 = distinct !DILexicalBlock(scope: !4840, file: !243, line: 3507, column: 126)
!4845 = !DILocation(line: 3507, column: 137, scope: !4843)
!4846 = !DILocation(line: 3507, column: 158, scope: !4843)
!4847 = !DILocation(line: 3507, column: 162, scope: !4843)
!4848 = !DILocation(line: 3507, column: 156, scope: !4843)
!4849 = !DILocation(line: 3507, column: 133, scope: !4843)
!4850 = !DILocation(line: 3507, column: 135, scope: !4843)
!4851 = !DILocation(line: 3507, column: 197, scope: !4843)
!4852 = !DILocation(line: 3507, column: 180, scope: !4843)
!4853 = !DILocation(line: 3507, column: 201, scope: !4843)
!4854 = !DILocation(line: 3507, column: 205, scope: !4843)
!4855 = !DILocation(line: 3507, column: 199, scope: !4843)
!4856 = !DILocation(line: 3507, column: 176, scope: !4843)
!4857 = !DILocation(line: 3507, column: 178, scope: !4843)
!4858 = !DILocation(line: 3507, column: 244, scope: !4843)
!4859 = !DILocation(line: 3507, column: 219, scope: !4843)
!4860 = !DILocation(line: 3507, column: 225, scope: !4843)
!4861 = !DILocation(line: 3507, column: 282, scope: !4843)
!4862 = !DILocation(line: 3507, column: 256, scope: !4843)
!4863 = !DILocation(line: 3507, column: 263, scope: !4843)
!4864 = !DILocation(line: 3507, column: 309, scope: !4843)
!4865 = !DILocation(line: 3507, column: 320, scope: !4843)
!4866 = !DILocation(line: 3507, column: 290, scope: !4843)
!4867 = !DILocation(line: 3507, column: 19, scope: !4843)
!4868 = !DILocation(line: 3507, column: 30, scope: !4843)
!4869 = !DILocation(line: 3507, column: 34, scope: !4843)
!4870 = !DILocation(line: 3507, column: 39, scope: !4843)
!4871 = !DILocation(line: 3507, column: 4, scope: !4872)
!4872 = !DILexicalBlockFile(scope: !4843, file: !243, discriminator: 8)
!4873 = !DILocation(line: 3507, column: 58, scope: !4843)
!4874 = !DILocation(line: 3507, column: 116, scope: !4875)
!4875 = !DILexicalBlockFile(scope: !4840, file: !243, discriminator: 6)
!4876 = !DILocation(line: 3507, column: 120, scope: !4875)
!4877 = !DILocation(line: 3507, column: 114, scope: !4875)
!4878 = !DILocation(line: 3507, column: 77, scope: !4875)
!4879 = distinct !{!4879, !4880}
!4880 = !DILocation(line: 3507, column: 77, scope: !4823)
!4881 = !DILocation(line: 3507, column: 79, scope: !4882)
!4882 = !DILexicalBlockFile(scope: !4823, file: !243, discriminator: 7)
!4883 = !DILocation(line: 3507, column: 90, scope: !4882)
!4884 = !DILocation(line: 3507, column: 60, scope: !4882)
!4885 = !DILocation(line: 3507, column: 4, scope: !4882)
!4886 = !DILocation(line: 3508, column: 1, scope: !4800)
!4887 = distinct !DISubprogram(name: "ui_destroy_cursor", scope: !243, file: !243, line: 3511, type: !4801, isLocal: false, isDefinition: true, scopeLine: 3512, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4888 = !DILocalVariable(name: "cursor", arg: 1, scope: !4887, file: !243, line: 3511, type: !191)
!4889 = !DILocation(line: 3511, column: 30, scope: !4887)
!4890 = !DILocation(line: 3514, column: 6, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4887, file: !243, line: 3514, column: 6)
!4892 = !DILocation(line: 3514, column: 16, scope: !4891)
!4893 = !DILocation(line: 3514, column: 13, scope: !4891)
!4894 = !DILocation(line: 3514, column: 6, scope: !4887)
!4895 = !DILocation(line: 3515, column: 3, scope: !4891)
!4896 = !DILocation(line: 3517, column: 14, scope: !4887)
!4897 = !DILocation(line: 3517, column: 34, scope: !4887)
!4898 = !DILocation(line: 3517, column: 25, scope: !4887)
!4899 = !DILocation(line: 3517, column: 2, scope: !4887)
!4900 = !DILocation(line: 3518, column: 1, scope: !4887)
!4901 = !DILocation(line: 3518, column: 1, scope: !4902)
!4902 = !DILexicalBlockFile(scope: !4887, file: !243, discriminator: 1)
!4903 = distinct !DISubprogram(name: "ui_set_null_cursor", scope: !243, file: !243, line: 3521, type: !254, isLocal: false, isDefinition: true, scopeLine: 3522, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4904 = !DILocation(line: 3523, column: 16, scope: !4903)
!4905 = !DILocation(line: 3523, column: 2, scope: !4903)
!4906 = !DILocation(line: 3524, column: 1, scope: !4903)
!4907 = distinct !DISubprogram(name: "ui_set_standard_cursor", scope: !243, file: !243, line: 3527, type: !254, isLocal: false, isDefinition: true, scopeLine: 3528, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4908 = !DILocation(line: 3529, column: 18, scope: !4907)
!4909 = !DILocation(line: 3529, column: 29, scope: !4907)
!4910 = !DILocation(line: 3529, column: 2, scope: !4907)
!4911 = !DILocation(line: 3530, column: 1, scope: !4907)
!4912 = distinct !DISubprogram(name: "ui_create_colourmap", scope: !243, file: !243, line: 3540, type: !4913, isLocal: false, isDefinition: true, scopeLine: 3541, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!4913 = !DISubroutineType(types: !4914)
!4914 = !{!205, !4915}
!4915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4916, size: 64, align: 64)
!4916 = !DIDerivedType(tag: DW_TAG_typedef, name: "COLOURMAP", file: !36, line: 81, baseType: !4917)
!4917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_COLOURMAP", file: !36, line: 75, size: 128, align: 64, elements: !4918)
!4918 = !{!4919, !4920}
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "ncolours", scope: !4917, file: !36, line: 77, baseType: !240, size: 16, align: 16)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "colours", scope: !4917, file: !36, line: 78, baseType: !4921, size: 64, align: 64, offset: 64)
!4921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4922, size: 64, align: 64)
!4922 = !DIDerivedType(tag: DW_TAG_typedef, name: "COLOURENTRY", file: !36, line: 73, baseType: !4923)
!4923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_COLOURENTRY", file: !36, line: 66, size: 24, align: 8, elements: !4924)
!4924 = !{!4925, !4926, !4927}
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !4923, file: !36, line: 68, baseType: !47, size: 8, align: 8)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !4923, file: !36, line: 69, baseType: !47, size: 8, align: 8, offset: 8)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !4923, file: !36, line: 70, baseType: !47, size: 8, align: 8, offset: 16)
!4928 = !DILocalVariable(name: "colours", arg: 1, scope: !4912, file: !243, line: 3540, type: !4915)
!4929 = !DILocation(line: 3540, column: 33, scope: !4912)
!4930 = !DILocalVariable(name: "entry", scope: !4912, file: !243, line: 3542, type: !4921)
!4931 = !DILocation(line: 3542, column: 15, scope: !4912)
!4932 = !DILocalVariable(name: "i", scope: !4912, file: !243, line: 3543, type: !45)
!4933 = !DILocation(line: 3543, column: 6, scope: !4912)
!4934 = !DILocalVariable(name: "ncolours", scope: !4912, file: !243, line: 3543, type: !45)
!4935 = !DILocation(line: 3543, column: 9, scope: !4912)
!4936 = !DILocation(line: 3543, column: 20, scope: !4912)
!4937 = !DILocation(line: 3543, column: 29, scope: !4912)
!4938 = !DILocation(line: 3544, column: 7, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4912, file: !243, line: 3544, column: 6)
!4940 = !DILocation(line: 3544, column: 6, scope: !4912)
!4941 = !DILocalVariable(name: "map", scope: !4942, file: !243, line: 3546, type: !192)
!4942 = distinct !DILexicalBlock(scope: !4939, file: !243, line: 3545, column: 2)
!4943 = !DILocation(line: 3546, column: 11, scope: !4942)
!4944 = !DILocation(line: 3546, column: 56, scope: !4942)
!4945 = !DILocation(line: 3546, column: 54, scope: !4942)
!4946 = !DILocation(line: 3546, column: 36, scope: !4942)
!4947 = !DILocation(line: 3546, column: 28, scope: !4942)
!4948 = !DILocation(line: 3546, column: 17, scope: !4942)
!4949 = !DILocalVariable(name: "xentry", scope: !4942, file: !243, line: 3547, type: !195)
!4950 = !DILocation(line: 3547, column: 10, scope: !4942)
!4951 = !DILocalVariable(name: "xc_cache", scope: !4942, file: !243, line: 3548, type: !4952)
!4952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 32768, align: 64, elements: !2892)
!4953 = !DILocation(line: 3548, column: 10, scope: !4942)
!4954 = !DILocalVariable(name: "colour", scope: !4942, file: !243, line: 3549, type: !193)
!4955 = !DILocation(line: 3549, column: 10, scope: !4942)
!4956 = !DILocalVariable(name: "colLookup", scope: !4942, file: !243, line: 3550, type: !45)
!4957 = !DILocation(line: 3550, column: 7, scope: !4942)
!4958 = !DILocation(line: 3551, column: 10, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4942, file: !243, line: 3551, column: 3)
!4960 = !DILocation(line: 3551, column: 8, scope: !4959)
!4961 = !DILocation(line: 3551, column: 15, scope: !4962)
!4962 = !DILexicalBlockFile(scope: !4963, file: !243, discriminator: 1)
!4963 = distinct !DILexicalBlock(scope: !4959, file: !243, line: 3551, column: 3)
!4964 = !DILocation(line: 3551, column: 19, scope: !4962)
!4965 = !DILocation(line: 3551, column: 17, scope: !4962)
!4966 = !DILocation(line: 3551, column: 3, scope: !4962)
!4967 = !DILocation(line: 3553, column: 30, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4963, file: !243, line: 3552, column: 3)
!4969 = !DILocation(line: 3553, column: 13, scope: !4968)
!4970 = !DILocation(line: 3553, column: 22, scope: !4968)
!4971 = !DILocation(line: 3553, column: 10, scope: !4968)
!4972 = !DILocation(line: 3554, column: 23, scope: !4968)
!4973 = !DILocation(line: 3554, column: 31, scope: !4968)
!4974 = !DILocation(line: 3554, column: 22, scope: !4968)
!4975 = !DILocation(line: 3554, column: 35, scope: !4968)
!4976 = !DILocation(line: 3554, column: 44, scope: !4968)
!4977 = !DILocation(line: 3554, column: 52, scope: !4968)
!4978 = !DILocation(line: 3554, column: 43, scope: !4968)
!4979 = !DILocation(line: 3554, column: 41, scope: !4968)
!4980 = !DILocation(line: 3554, column: 21, scope: !4968)
!4981 = !DILocation(line: 3554, column: 15, scope: !4968)
!4982 = !DILocation(line: 3554, column: 19, scope: !4968)
!4983 = !DILocation(line: 3554, column: 78, scope: !4968)
!4984 = !DILocation(line: 3554, column: 86, scope: !4968)
!4985 = !DILocation(line: 3554, column: 77, scope: !4968)
!4986 = !DILocation(line: 3554, column: 92, scope: !4968)
!4987 = !DILocation(line: 3554, column: 101, scope: !4968)
!4988 = !DILocation(line: 3554, column: 109, scope: !4968)
!4989 = !DILocation(line: 3554, column: 100, scope: !4968)
!4990 = !DILocation(line: 3554, column: 98, scope: !4968)
!4991 = !DILocation(line: 3554, column: 76, scope: !4968)
!4992 = !DILocation(line: 3554, column: 68, scope: !4968)
!4993 = !DILocation(line: 3554, column: 74, scope: !4968)
!4994 = !DILocation(line: 3554, column: 136, scope: !4968)
!4995 = !DILocation(line: 3554, column: 144, scope: !4968)
!4996 = !DILocation(line: 3554, column: 135, scope: !4968)
!4997 = !DILocation(line: 3554, column: 149, scope: !4968)
!4998 = !DILocation(line: 3554, column: 158, scope: !4968)
!4999 = !DILocation(line: 3554, column: 166, scope: !4968)
!5000 = !DILocation(line: 3554, column: 157, scope: !4968)
!5001 = !DILocation(line: 3554, column: 155, scope: !4968)
!5002 = !DILocation(line: 3554, column: 134, scope: !4968)
!5003 = !DILocation(line: 3554, column: 127, scope: !4968)
!5004 = !DILocation(line: 3554, column: 132, scope: !4968)
!5005 = !DILocation(line: 3554, column: 183, scope: !4968)
!5006 = !DILocation(line: 3554, column: 189, scope: !4968)
!5007 = !DILocation(line: 3556, column: 20, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4968, file: !243, line: 3556, column: 8)
!5009 = !DILocation(line: 3556, column: 31, scope: !5008)
!5010 = !DILocation(line: 3556, column: 8, scope: !5008)
!5011 = !DILocation(line: 3556, column: 51, scope: !5008)
!5012 = !DILocation(line: 3556, column: 8, scope: !4968)
!5013 = !DILocalVariable(name: "j", scope: !5014, file: !243, line: 3559, type: !45)
!5014 = distinct !DILexicalBlock(scope: !5008, file: !243, line: 3557, column: 4)
!5015 = !DILocation(line: 3559, column: 9, scope: !5014)
!5016 = !DILocalVariable(name: "nMinDist", scope: !5014, file: !243, line: 3560, type: !45)
!5017 = !DILocation(line: 3560, column: 9, scope: !5014)
!5018 = !DILocalVariable(name: "nDist", scope: !5014, file: !243, line: 3561, type: !178)
!5019 = !DILocation(line: 3561, column: 10, scope: !5014)
!5020 = !DILocation(line: 3561, column: 18, scope: !5014)
!5021 = !DILocation(line: 3564, column: 5, scope: !5014)
!5022 = !DILocation(line: 3564, column: 21, scope: !5023)
!5023 = !DILexicalBlockFile(scope: !5014, file: !243, discriminator: 1)
!5024 = !DILocation(line: 3564, column: 5, scope: !5023)
!5025 = !DILocation(line: 3566, column: 34, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5014, file: !243, line: 3565, column: 5)
!5027 = !DILocation(line: 3566, column: 15, scope: !5026)
!5028 = !DILocation(line: 3566, column: 6, scope: !5026)
!5029 = !DILocation(line: 3566, column: 26, scope: !5026)
!5030 = !DILocation(line: 3566, column: 32, scope: !5026)
!5031 = !DILocation(line: 3568, column: 16, scope: !5026)
!5032 = !DILocation(line: 3568, column: 7, scope: !5026)
!5033 = !DILocation(line: 3568, column: 27, scope: !5026)
!5034 = !DILocation(line: 3568, column: 32, scope: !5026)
!5035 = !DILocation(line: 3567, column: 41, scope: !5026)
!5036 = !DILocation(line: 3567, column: 32, scope: !5026)
!5037 = !DILocation(line: 3567, column: 52, scope: !5026)
!5038 = !DILocation(line: 3567, column: 58, scope: !5026)
!5039 = !DILocation(line: 3567, column: 15, scope: !5026)
!5040 = !DILocation(line: 3567, column: 6, scope: !5026)
!5041 = !DILocation(line: 3567, column: 26, scope: !5026)
!5042 = !DILocation(line: 3567, column: 30, scope: !5026)
!5043 = !DILocation(line: 3569, column: 15, scope: !5026)
!5044 = !DILocation(line: 3569, column: 6, scope: !5026)
!5045 = !DILocation(line: 3569, column: 26, scope: !5026)
!5046 = !DILocation(line: 3569, column: 32, scope: !5026)
!5047 = !DILocation(line: 3570, column: 18, scope: !5026)
!5048 = !DILocation(line: 3571, column: 10, scope: !5026)
!5049 = !DILocation(line: 3571, column: 13, scope: !5026)
!5050 = !DILocation(line: 3571, column: 32, scope: !5026)
!5051 = !DILocation(line: 3573, column: 21, scope: !5026)
!5052 = !DILocation(line: 3573, column: 12, scope: !5026)
!5053 = !DILocation(line: 3570, column: 6, scope: !5026)
!5054 = !DILocation(line: 3564, column: 5, scope: !5055)
!5055 = !DILexicalBlockFile(scope: !5014, file: !243, discriminator: 2)
!5056 = distinct !{!5056, !5021}
!5057 = !DILocation(line: 3575, column: 15, scope: !5014)
!5058 = !DILocation(line: 3578, column: 5, scope: !5014)
!5059 = !DILocation(line: 3578, column: 13, scope: !5023)
!5060 = !DILocation(line: 3578, column: 5, scope: !5023)
!5061 = !DILocation(line: 3580, column: 19, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !243, line: 3580, column: 10)
!5063 = distinct !DILexicalBlock(scope: !5014, file: !243, line: 3579, column: 5)
!5064 = !DILocation(line: 3580, column: 10, scope: !5062)
!5065 = !DILocation(line: 3580, column: 22, scope: !5062)
!5066 = !DILocation(line: 3580, column: 10, scope: !5063)
!5067 = !DILocation(line: 3582, column: 33, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5062, file: !243, line: 3581, column: 6)
!5069 = !DILocation(line: 3582, column: 24, scope: !5068)
!5070 = !DILocation(line: 3582, column: 36, scope: !5068)
!5071 = !DILocation(line: 3582, column: 40, scope: !5068)
!5072 = !DILocation(line: 3582, column: 16, scope: !5068)
!5073 = !DILocation(line: 3583, column: 24, scope: !5068)
!5074 = !DILocation(line: 3583, column: 17, scope: !5068)
!5075 = !DILocation(line: 3583, column: 28, scope: !5068)
!5076 = !DILocation(line: 3583, column: 9, scope: !5068)
!5077 = !DILocation(line: 3582, column: 46, scope: !5068)
!5078 = !DILocation(line: 3584, column: 26, scope: !5068)
!5079 = !DILocation(line: 3584, column: 17, scope: !5068)
!5080 = !DILocation(line: 3584, column: 29, scope: !5068)
!5081 = !DILocation(line: 3584, column: 33, scope: !5068)
!5082 = !DILocation(line: 3584, column: 9, scope: !5068)
!5083 = !DILocation(line: 3585, column: 24, scope: !5068)
!5084 = !DILocation(line: 3585, column: 17, scope: !5068)
!5085 = !DILocation(line: 3585, column: 28, scope: !5068)
!5086 = !DILocation(line: 3585, column: 9, scope: !5068)
!5087 = !DILocation(line: 3584, column: 39, scope: !5068)
!5088 = !DILocation(line: 3583, column: 35, scope: !5068)
!5089 = !DILocation(line: 3586, column: 26, scope: !5068)
!5090 = !DILocation(line: 3586, column: 17, scope: !5068)
!5091 = !DILocation(line: 3586, column: 29, scope: !5068)
!5092 = !DILocation(line: 3586, column: 35, scope: !5068)
!5093 = !DILocation(line: 3586, column: 9, scope: !5068)
!5094 = !DILocation(line: 3587, column: 24, scope: !5068)
!5095 = !DILocation(line: 3587, column: 17, scope: !5068)
!5096 = !DILocation(line: 3587, column: 30, scope: !5068)
!5097 = !DILocation(line: 3587, column: 9, scope: !5068)
!5098 = !DILocation(line: 3586, column: 41, scope: !5068)
!5099 = !DILocation(line: 3588, column: 26, scope: !5068)
!5100 = !DILocation(line: 3588, column: 17, scope: !5068)
!5101 = !DILocation(line: 3588, column: 29, scope: !5068)
!5102 = !DILocation(line: 3588, column: 35, scope: !5068)
!5103 = !DILocation(line: 3588, column: 9, scope: !5068)
!5104 = !DILocation(line: 3589, column: 24, scope: !5068)
!5105 = !DILocation(line: 3589, column: 17, scope: !5068)
!5106 = !DILocation(line: 3589, column: 30, scope: !5068)
!5107 = !DILocation(line: 3589, column: 9, scope: !5068)
!5108 = !DILocation(line: 3588, column: 41, scope: !5068)
!5109 = !DILocation(line: 3587, column: 37, scope: !5068)
!5110 = !DILocation(line: 3585, column: 35, scope: !5068)
!5111 = !DILocation(line: 3590, column: 26, scope: !5068)
!5112 = !DILocation(line: 3590, column: 17, scope: !5068)
!5113 = !DILocation(line: 3590, column: 29, scope: !5068)
!5114 = !DILocation(line: 3590, column: 34, scope: !5068)
!5115 = !DILocation(line: 3590, column: 9, scope: !5068)
!5116 = !DILocation(line: 3591, column: 24, scope: !5068)
!5117 = !DILocation(line: 3591, column: 17, scope: !5068)
!5118 = !DILocation(line: 3591, column: 29, scope: !5068)
!5119 = !DILocation(line: 3591, column: 9, scope: !5068)
!5120 = !DILocation(line: 3590, column: 40, scope: !5068)
!5121 = !DILocation(line: 3592, column: 26, scope: !5068)
!5122 = !DILocation(line: 3592, column: 17, scope: !5068)
!5123 = !DILocation(line: 3592, column: 29, scope: !5068)
!5124 = !DILocation(line: 3592, column: 34, scope: !5068)
!5125 = !DILocation(line: 3592, column: 9, scope: !5068)
!5126 = !DILocation(line: 3593, column: 24, scope: !5068)
!5127 = !DILocation(line: 3593, column: 17, scope: !5068)
!5128 = !DILocation(line: 3593, column: 29, scope: !5068)
!5129 = !DILocation(line: 3593, column: 9, scope: !5068)
!5130 = !DILocation(line: 3592, column: 40, scope: !5068)
!5131 = !DILocation(line: 3591, column: 36, scope: !5068)
!5132 = !DILocation(line: 3589, column: 37, scope: !5068)
!5133 = !DILocation(line: 3582, column: 13, scope: !5068)
!5134 = !DILocation(line: 3594, column: 6, scope: !5068)
!5135 = !DILocation(line: 3595, column: 10, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5063, file: !243, line: 3595, column: 10)
!5137 = !DILocation(line: 3595, column: 18, scope: !5136)
!5138 = !DILocation(line: 3595, column: 16, scope: !5136)
!5139 = !DILocation(line: 3595, column: 10, scope: !5063)
!5140 = !DILocation(line: 3597, column: 18, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5136, file: !243, line: 3596, column: 6)
!5142 = !DILocation(line: 3597, column: 16, scope: !5141)
!5143 = !DILocation(line: 3598, column: 22, scope: !5141)
!5144 = !DILocation(line: 3598, column: 14, scope: !5141)
!5145 = !DILocation(line: 3598, column: 20, scope: !5141)
!5146 = !DILocation(line: 3599, column: 6, scope: !5141)
!5147 = !DILocation(line: 3578, column: 5, scope: !5055)
!5148 = distinct !{!5148, !5058}
!5149 = !DILocation(line: 3601, column: 4, scope: !5014)
!5150 = !DILocation(line: 3602, column: 20, scope: !4968)
!5151 = !DILocation(line: 3602, column: 13, scope: !4968)
!5152 = !DILocation(line: 3602, column: 11, scope: !4968)
!5153 = !DILocation(line: 3605, column: 15, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !4968, file: !243, line: 3605, column: 8)
!5155 = !DILocation(line: 3605, column: 21, scope: !5154)
!5156 = !DILocation(line: 3605, column: 8, scope: !4968)
!5157 = !DILocation(line: 3607, column: 41, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5154, file: !243, line: 3606, column: 4)
!5159 = !DILocation(line: 3607, column: 21, scope: !5158)
!5160 = !DILocation(line: 3607, column: 5, scope: !5158)
!5161 = !DILocation(line: 3607, column: 28, scope: !5158)
!5162 = !DILocation(line: 3607, column: 32, scope: !5158)
!5163 = !DILocation(line: 3608, column: 43, scope: !5158)
!5164 = !DILocation(line: 3608, column: 21, scope: !5158)
!5165 = !DILocation(line: 3608, column: 5, scope: !5158)
!5166 = !DILocation(line: 3608, column: 28, scope: !5158)
!5167 = !DILocation(line: 3608, column: 34, scope: !5158)
!5168 = !DILocation(line: 3609, column: 42, scope: !5158)
!5169 = !DILocation(line: 3609, column: 21, scope: !5158)
!5170 = !DILocation(line: 3609, column: 5, scope: !5158)
!5171 = !DILocation(line: 3609, column: 28, scope: !5158)
!5172 = !DILocation(line: 3609, column: 33, scope: !5158)
!5173 = !DILocation(line: 3611, column: 4, scope: !5158)
!5174 = !DILocation(line: 3613, column: 13, scope: !4968)
!5175 = !DILocation(line: 3613, column: 8, scope: !4968)
!5176 = !DILocation(line: 3613, column: 4, scope: !4968)
!5177 = !DILocation(line: 3613, column: 11, scope: !4968)
!5178 = !DILocation(line: 3614, column: 3, scope: !4968)
!5179 = !DILocation(line: 3551, column: 30, scope: !5180)
!5180 = !DILexicalBlockFile(scope: !4963, file: !243, discriminator: 2)
!5181 = !DILocation(line: 3551, column: 3, scope: !5180)
!5182 = distinct !{!5182, !5183}
!5183 = !DILocation(line: 3551, column: 3, scope: !4942)
!5184 = !DILocation(line: 3615, column: 10, scope: !4942)
!5185 = !DILocation(line: 3615, column: 3, scope: !4942)
!5186 = !DILocalVariable(name: "xcolours", scope: !5187, file: !243, line: 3619, type: !194)
!5187 = distinct !DILexicalBlock(scope: !4939, file: !243, line: 3618, column: 2)
!5188 = !DILocation(line: 3619, column: 11, scope: !5187)
!5189 = !DILocalVariable(name: "xentry", scope: !5187, file: !243, line: 3619, type: !194)
!5190 = !DILocation(line: 3619, column: 22, scope: !5187)
!5191 = !DILocalVariable(name: "map", scope: !5187, file: !243, line: 3620, type: !170)
!5192 = !DILocation(line: 3620, column: 12, scope: !5187)
!5193 = !DILocation(line: 3622, column: 50, scope: !5187)
!5194 = !DILocation(line: 3622, column: 48, scope: !5187)
!5195 = !DILocation(line: 3622, column: 33, scope: !5187)
!5196 = !DILocation(line: 3622, column: 25, scope: !5187)
!5197 = !DILocation(line: 3622, column: 14, scope: !5187)
!5198 = !DILocation(line: 3622, column: 12, scope: !5187)
!5199 = !DILocation(line: 3623, column: 10, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5187, file: !243, line: 3623, column: 3)
!5201 = !DILocation(line: 3623, column: 8, scope: !5200)
!5202 = !DILocation(line: 3623, column: 15, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !5204, file: !243, discriminator: 1)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !243, line: 3623, column: 3)
!5205 = !DILocation(line: 3623, column: 19, scope: !5203)
!5206 = !DILocation(line: 3623, column: 17, scope: !5203)
!5207 = !DILocation(line: 3623, column: 3, scope: !5203)
!5208 = !DILocation(line: 3625, column: 30, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5204, file: !243, line: 3624, column: 3)
!5210 = !DILocation(line: 3625, column: 13, scope: !5209)
!5211 = !DILocation(line: 3625, column: 22, scope: !5209)
!5212 = !DILocation(line: 3625, column: 10, scope: !5209)
!5213 = !DILocation(line: 3626, column: 23, scope: !5209)
!5214 = !DILocation(line: 3626, column: 14, scope: !5209)
!5215 = !DILocation(line: 3626, column: 11, scope: !5209)
!5216 = !DILocation(line: 3627, column: 20, scope: !5209)
!5217 = !DILocation(line: 3627, column: 4, scope: !5209)
!5218 = !DILocation(line: 3627, column: 12, scope: !5209)
!5219 = !DILocation(line: 3627, column: 18, scope: !5209)
!5220 = !DILocation(line: 3628, column: 22, scope: !5209)
!5221 = !DILocation(line: 3628, column: 30, scope: !5209)
!5222 = !DILocation(line: 3628, column: 21, scope: !5209)
!5223 = !DILocation(line: 3628, column: 34, scope: !5209)
!5224 = !DILocation(line: 3628, column: 43, scope: !5209)
!5225 = !DILocation(line: 3628, column: 51, scope: !5209)
!5226 = !DILocation(line: 3628, column: 42, scope: !5209)
!5227 = !DILocation(line: 3628, column: 40, scope: !5209)
!5228 = !DILocation(line: 3628, column: 20, scope: !5209)
!5229 = !DILocation(line: 3628, column: 5, scope: !5209)
!5230 = !DILocation(line: 3628, column: 14, scope: !5209)
!5231 = !DILocation(line: 3628, column: 18, scope: !5209)
!5232 = !DILocation(line: 3628, column: 76, scope: !5209)
!5233 = !DILocation(line: 3628, column: 84, scope: !5209)
!5234 = !DILocation(line: 3628, column: 75, scope: !5209)
!5235 = !DILocation(line: 3628, column: 90, scope: !5209)
!5236 = !DILocation(line: 3628, column: 99, scope: !5209)
!5237 = !DILocation(line: 3628, column: 107, scope: !5209)
!5238 = !DILocation(line: 3628, column: 98, scope: !5209)
!5239 = !DILocation(line: 3628, column: 96, scope: !5209)
!5240 = !DILocation(line: 3628, column: 74, scope: !5209)
!5241 = !DILocation(line: 3628, column: 57, scope: !5209)
!5242 = !DILocation(line: 3628, column: 66, scope: !5209)
!5243 = !DILocation(line: 3628, column: 72, scope: !5209)
!5244 = !DILocation(line: 3628, column: 133, scope: !5209)
!5245 = !DILocation(line: 3628, column: 141, scope: !5209)
!5246 = !DILocation(line: 3628, column: 132, scope: !5209)
!5247 = !DILocation(line: 3628, column: 146, scope: !5209)
!5248 = !DILocation(line: 3628, column: 155, scope: !5209)
!5249 = !DILocation(line: 3628, column: 163, scope: !5209)
!5250 = !DILocation(line: 3628, column: 154, scope: !5209)
!5251 = !DILocation(line: 3628, column: 152, scope: !5209)
!5252 = !DILocation(line: 3628, column: 131, scope: !5209)
!5253 = !DILocation(line: 3628, column: 115, scope: !5209)
!5254 = !DILocation(line: 3628, column: 124, scope: !5209)
!5255 = !DILocation(line: 3628, column: 129, scope: !5209)
!5256 = !DILocation(line: 3628, column: 170, scope: !5209)
!5257 = !DILocation(line: 3628, column: 179, scope: !5209)
!5258 = !DILocation(line: 3628, column: 185, scope: !5209)
!5259 = !DILocation(line: 3629, column: 3, scope: !5209)
!5260 = !DILocation(line: 3623, column: 30, scope: !5261)
!5261 = !DILexicalBlockFile(scope: !5204, file: !243, discriminator: 2)
!5262 = !DILocation(line: 3623, column: 3, scope: !5261)
!5263 = distinct !{!5263, !5264}
!5264 = !DILocation(line: 3623, column: 3, scope: !5187)
!5265 = !DILocation(line: 3631, column: 25, scope: !5187)
!5266 = !DILocation(line: 3631, column: 36, scope: !5187)
!5267 = !DILocation(line: 3631, column: 43, scope: !5187)
!5268 = !DILocation(line: 3631, column: 9, scope: !5187)
!5269 = !DILocation(line: 3631, column: 7, scope: !5187)
!5270 = !DILocation(line: 3632, column: 16, scope: !5187)
!5271 = !DILocation(line: 3632, column: 27, scope: !5187)
!5272 = !DILocation(line: 3632, column: 32, scope: !5187)
!5273 = !DILocation(line: 3632, column: 42, scope: !5187)
!5274 = !DILocation(line: 3632, column: 3, scope: !5187)
!5275 = !DILocation(line: 3634, column: 9, scope: !5187)
!5276 = !DILocation(line: 3634, column: 3, scope: !5187)
!5277 = !DILocation(line: 3635, column: 26, scope: !5187)
!5278 = !DILocation(line: 3635, column: 10, scope: !5187)
!5279 = !DILocation(line: 3635, column: 3, scope: !5187)
!5280 = !DILocation(line: 3637, column: 1, scope: !4912)
!5281 = distinct !DISubprogram(name: "ui_destroy_colourmap", scope: !243, file: !243, line: 3640, type: !5282, isLocal: false, isDefinition: true, scopeLine: 3641, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{null, !205}
!5284 = !DILocalVariable(name: "map", arg: 1, scope: !5281, file: !243, line: 3640, type: !205)
!5285 = !DILocation(line: 3640, column: 36, scope: !5281)
!5286 = !DILocation(line: 3642, column: 7, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5281, file: !243, line: 3642, column: 6)
!5288 = !DILocation(line: 3642, column: 6, scope: !5281)
!5289 = !DILocation(line: 3643, column: 9, scope: !5287)
!5290 = !DILocation(line: 3643, column: 3, scope: !5287)
!5291 = !DILocation(line: 3645, column: 17, scope: !5287)
!5292 = !DILocation(line: 3645, column: 39, scope: !5287)
!5293 = !DILocation(line: 3645, column: 28, scope: !5287)
!5294 = !DILocation(line: 3645, column: 3, scope: !5287)
!5295 = !DILocation(line: 3646, column: 1, scope: !5281)
!5296 = distinct !DISubprogram(name: "ui_set_colourmap", scope: !243, file: !243, line: 3649, type: !5282, isLocal: false, isDefinition: true, scopeLine: 3650, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!5297 = !DILocalVariable(name: "map", arg: 1, scope: !5296, file: !243, line: 3649, type: !205)
!5298 = !DILocation(line: 3649, column: 32, scope: !5296)
!5299 = !DILocation(line: 3651, column: 7, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5296, file: !243, line: 3651, column: 6)
!5301 = !DILocation(line: 3651, column: 6, scope: !5296)
!5302 = !DILocation(line: 3653, column: 7, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5304, file: !243, line: 3653, column: 7)
!5304 = distinct !DILexicalBlock(scope: !5300, file: !243, line: 3652, column: 2)
!5305 = !DILocation(line: 3653, column: 7, scope: !5304)
!5306 = !DILocation(line: 3654, column: 10, scope: !5303)
!5307 = !DILocation(line: 3654, column: 4, scope: !5303)
!5308 = !DILocation(line: 3656, column: 25, scope: !5304)
!5309 = !DILocation(line: 3656, column: 14, scope: !5304)
!5310 = !DILocation(line: 3656, column: 12, scope: !5304)
!5311 = !DILocation(line: 3657, column: 2, scope: !5304)
!5312 = !DILocation(line: 3660, column: 22, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5300, file: !243, line: 3659, column: 2)
!5314 = !DILocation(line: 3660, column: 33, scope: !5313)
!5315 = !DILocation(line: 3660, column: 51, scope: !5313)
!5316 = !DILocation(line: 3660, column: 40, scope: !5313)
!5317 = !DILocation(line: 3660, column: 3, scope: !5313)
!5318 = !DILocation(line: 3661, column: 3, scope: !5313)
!5319 = distinct !{!5319, !5318}
!5320 = !DILocalVariable(name: "sw", scope: !5321, file: !243, line: 3661, type: !360)
!5321 = distinct !DILexicalBlock(scope: !5313, file: !243, line: 3661, column: 6)
!5322 = !DILocation(line: 3661, column: 25, scope: !5321)
!5323 = !DILocalVariable(name: "rect", scope: !5321, file: !243, line: 3661, type: !274)
!5324 = !DILocation(line: 3661, column: 40, scope: !5321)
!5325 = !DILocation(line: 3661, column: 51, scope: !5326)
!5326 = !DILexicalBlockFile(scope: !5327, file: !243, discriminator: 1)
!5327 = distinct !DILexicalBlock(scope: !5321, file: !243, line: 3661, column: 50)
!5328 = !DILocation(line: 3661, column: 50, scope: !5326)
!5329 = !DILocation(line: 3661, column: 71, scope: !5330)
!5330 = !DILexicalBlockFile(scope: !5327, file: !243, discriminator: 2)
!5331 = !DILocation(line: 3661, column: 88, scope: !5332)
!5332 = !DILexicalBlockFile(scope: !5333, file: !243, discriminator: 3)
!5333 = distinct !DILexicalBlock(scope: !5321, file: !243, line: 3661, column: 78)
!5334 = !DILocation(line: 3661, column: 86, scope: !5332)
!5335 = !DILocation(line: 3661, column: 83, scope: !5332)
!5336 = !DILocation(line: 3661, column: 108, scope: !5337)
!5337 = !DILexicalBlockFile(scope: !5338, file: !243, discriminator: 4)
!5338 = distinct !DILexicalBlock(scope: !5333, file: !243, line: 3661, column: 78)
!5339 = !DILocation(line: 3661, column: 78, scope: !5337)
!5340 = !DILocation(line: 3661, column: 155, scope: !5341)
!5341 = !DILexicalBlockFile(scope: !5342, file: !243, discriminator: 5)
!5342 = distinct !DILexicalBlock(scope: !5338, file: !243, line: 3661, column: 127)
!5343 = !DILocation(line: 3661, column: 138, scope: !5341)
!5344 = !DILocation(line: 3661, column: 159, scope: !5341)
!5345 = !DILocation(line: 3661, column: 163, scope: !5341)
!5346 = !DILocation(line: 3661, column: 157, scope: !5341)
!5347 = !DILocation(line: 3661, column: 134, scope: !5341)
!5348 = !DILocation(line: 3661, column: 136, scope: !5341)
!5349 = !DILocation(line: 3661, column: 198, scope: !5341)
!5350 = !DILocation(line: 3661, column: 181, scope: !5341)
!5351 = !DILocation(line: 3661, column: 202, scope: !5341)
!5352 = !DILocation(line: 3661, column: 206, scope: !5341)
!5353 = !DILocation(line: 3661, column: 200, scope: !5341)
!5354 = !DILocation(line: 3661, column: 177, scope: !5341)
!5355 = !DILocation(line: 3661, column: 179, scope: !5341)
!5356 = !DILocation(line: 3661, column: 245, scope: !5341)
!5357 = !DILocation(line: 3661, column: 220, scope: !5341)
!5358 = !DILocation(line: 3661, column: 226, scope: !5341)
!5359 = !DILocation(line: 3661, column: 283, scope: !5341)
!5360 = !DILocation(line: 3661, column: 257, scope: !5341)
!5361 = !DILocation(line: 3661, column: 264, scope: !5341)
!5362 = !DILocation(line: 3661, column: 310, scope: !5341)
!5363 = !DILocation(line: 3661, column: 321, scope: !5341)
!5364 = !DILocation(line: 3661, column: 291, scope: !5341)
!5365 = !DILocation(line: 3661, column: 25, scope: !5341)
!5366 = !DILocation(line: 3661, column: 36, scope: !5341)
!5367 = !DILocation(line: 3661, column: 40, scope: !5341)
!5368 = !DILocation(line: 3661, column: 56, scope: !5341)
!5369 = !DILocation(line: 3661, column: 45, scope: !5341)
!5370 = !DILocation(line: 3661, column: 5, scope: !5371)
!5371 = !DILexicalBlockFile(scope: !5341, file: !243, discriminator: 8)
!5372 = !DILocation(line: 3661, column: 62, scope: !5341)
!5373 = !DILocation(line: 3661, column: 117, scope: !5374)
!5374 = !DILexicalBlockFile(scope: !5338, file: !243, discriminator: 6)
!5375 = !DILocation(line: 3661, column: 121, scope: !5374)
!5376 = !DILocation(line: 3661, column: 115, scope: !5374)
!5377 = !DILocation(line: 3661, column: 78, scope: !5374)
!5378 = distinct !{!5378, !5379}
!5379 = !DILocation(line: 3661, column: 78, scope: !5321)
!5380 = !DILocation(line: 3661, column: 83, scope: !5381)
!5381 = !DILexicalBlockFile(scope: !5321, file: !243, discriminator: 7)
!5382 = !DILocation(line: 3661, column: 94, scope: !5381)
!5383 = !DILocation(line: 3661, column: 64, scope: !5381)
!5384 = !DILocation(line: 3661, column: 5, scope: !5381)
!5385 = !DILocation(line: 3663, column: 1, scope: !5296)
!5386 = distinct !DISubprogram(name: "ui_bell", scope: !243, file: !243, line: 3684, type: !254, isLocal: false, isDefinition: true, scopeLine: 3685, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!5387 = !DILocation(line: 3686, column: 8, scope: !5386)
!5388 = !DILocation(line: 3686, column: 2, scope: !5386)
!5389 = !DILocation(line: 3687, column: 1, scope: !5386)
!5390 = distinct !DISubprogram(name: "ui_destblt", scope: !243, file: !243, line: 3690, type: !5391, isLocal: false, isDefinition: true, scopeLine: 3692, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!5391 = !DISubroutineType(types: !5392)
!5392 = !{null, !47, !45, !45, !45, !45}
!5393 = !DILocalVariable(name: "opcode", arg: 1, scope: !5390, file: !243, line: 3690, type: !47)
!5394 = !DILocation(line: 3690, column: 18, scope: !5390)
!5395 = !DILocalVariable(name: "x", arg: 2, scope: !5390, file: !243, line: 3691, type: !45)
!5396 = !DILocation(line: 3691, column: 20, scope: !5390)
!5397 = !DILocalVariable(name: "y", arg: 3, scope: !5390, file: !243, line: 3691, type: !45)
!5398 = !DILocation(line: 3691, column: 27, scope: !5390)
!5399 = !DILocalVariable(name: "cx", arg: 4, scope: !5390, file: !243, line: 3691, type: !45)
!5400 = !DILocation(line: 3691, column: 34, scope: !5390)
!5401 = !DILocalVariable(name: "cy", arg: 5, scope: !5390, file: !243, line: 3691, type: !45)
!5402 = !DILocation(line: 3691, column: 42, scope: !5390)
!5403 = !DILocation(line: 3693, column: 8, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5405, file: !243, line: 3693, column: 8)
!5405 = distinct !DILexicalBlock(scope: !5390, file: !243, line: 3693, column: 2)
!5406 = !DILocation(line: 3693, column: 15, scope: !5404)
!5407 = !DILocation(line: 3693, column: 8, scope: !5405)
!5408 = !DILocation(line: 3693, column: 36, scope: !5409)
!5409 = !DILexicalBlockFile(scope: !5404, file: !243, discriminator: 1)
!5410 = !DILocation(line: 3693, column: 47, scope: !5409)
!5411 = !DILocation(line: 3693, column: 62, scope: !5409)
!5412 = !DILocation(line: 3693, column: 53, scope: !5409)
!5413 = !DILocation(line: 3693, column: 23, scope: !5409)
!5414 = !DILocation(line: 3694, column: 19, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5390, file: !243, line: 3694, column: 2)
!5416 = !DILocation(line: 3694, column: 30, scope: !5415)
!5417 = !DILocation(line: 3694, column: 37, scope: !5415)
!5418 = !DILocation(line: 3694, column: 43, scope: !5415)
!5419 = !DILocation(line: 3694, column: 46, scope: !5415)
!5420 = !DILocation(line: 3694, column: 49, scope: !5415)
!5421 = !DILocation(line: 3694, column: 53, scope: !5415)
!5422 = !DILocation(line: 3694, column: 4, scope: !5415)
!5423 = !DILocation(line: 3694, column: 58, scope: !5415)
!5424 = distinct !{!5424, !5423}
!5425 = !DILocalVariable(name: "sw", scope: !5426, file: !243, line: 3694, type: !360)
!5426 = distinct !DILexicalBlock(scope: !5415, file: !243, line: 3694, column: 61)
!5427 = !DILocation(line: 3694, column: 80, scope: !5426)
!5428 = !DILocalVariable(name: "rect", scope: !5426, file: !243, line: 3694, type: !274)
!5429 = !DILocation(line: 3694, column: 95, scope: !5426)
!5430 = !DILocation(line: 3694, column: 106, scope: !5431)
!5431 = !DILexicalBlockFile(scope: !5432, file: !243, discriminator: 1)
!5432 = distinct !DILexicalBlock(scope: !5426, file: !243, line: 3694, column: 105)
!5433 = !DILocation(line: 3694, column: 105, scope: !5431)
!5434 = !DILocation(line: 3694, column: 126, scope: !5435)
!5435 = !DILexicalBlockFile(scope: !5432, file: !243, discriminator: 2)
!5436 = !DILocation(line: 3694, column: 143, scope: !5437)
!5437 = !DILexicalBlockFile(scope: !5438, file: !243, discriminator: 3)
!5438 = distinct !DILexicalBlock(scope: !5426, file: !243, line: 3694, column: 133)
!5439 = !DILocation(line: 3694, column: 141, scope: !5437)
!5440 = !DILocation(line: 3694, column: 138, scope: !5437)
!5441 = !DILocation(line: 3694, column: 163, scope: !5442)
!5442 = !DILexicalBlockFile(scope: !5443, file: !243, discriminator: 4)
!5443 = distinct !DILexicalBlock(scope: !5438, file: !243, line: 3694, column: 133)
!5444 = !DILocation(line: 3694, column: 133, scope: !5442)
!5445 = !DILocation(line: 3694, column: 210, scope: !5446)
!5446 = !DILexicalBlockFile(scope: !5447, file: !243, discriminator: 5)
!5447 = distinct !DILexicalBlock(scope: !5443, file: !243, line: 3694, column: 182)
!5448 = !DILocation(line: 3694, column: 193, scope: !5446)
!5449 = !DILocation(line: 3694, column: 214, scope: !5446)
!5450 = !DILocation(line: 3694, column: 218, scope: !5446)
!5451 = !DILocation(line: 3694, column: 212, scope: !5446)
!5452 = !DILocation(line: 3694, column: 189, scope: !5446)
!5453 = !DILocation(line: 3694, column: 191, scope: !5446)
!5454 = !DILocation(line: 3694, column: 253, scope: !5446)
!5455 = !DILocation(line: 3694, column: 236, scope: !5446)
!5456 = !DILocation(line: 3694, column: 257, scope: !5446)
!5457 = !DILocation(line: 3694, column: 261, scope: !5446)
!5458 = !DILocation(line: 3694, column: 255, scope: !5446)
!5459 = !DILocation(line: 3694, column: 232, scope: !5446)
!5460 = !DILocation(line: 3694, column: 234, scope: !5446)
!5461 = !DILocation(line: 3694, column: 300, scope: !5446)
!5462 = !DILocation(line: 3694, column: 275, scope: !5446)
!5463 = !DILocation(line: 3694, column: 281, scope: !5446)
!5464 = !DILocation(line: 3694, column: 338, scope: !5446)
!5465 = !DILocation(line: 3694, column: 312, scope: !5446)
!5466 = !DILocation(line: 3694, column: 319, scope: !5446)
!5467 = !DILocation(line: 3694, column: 365, scope: !5446)
!5468 = !DILocation(line: 3694, column: 376, scope: !5446)
!5469 = !DILocation(line: 3694, column: 346, scope: !5446)
!5470 = !DILocation(line: 3694, column: 20, scope: !5446)
!5471 = !DILocation(line: 3694, column: 31, scope: !5446)
!5472 = !DILocation(line: 3694, column: 35, scope: !5446)
!5473 = !DILocation(line: 3694, column: 40, scope: !5446)
!5474 = !DILocation(line: 3694, column: 46, scope: !5446)
!5475 = !DILocation(line: 3694, column: 48, scope: !5446)
!5476 = !DILocation(line: 3694, column: 52, scope: !5446)
!5477 = !DILocation(line: 3694, column: 47, scope: !5446)
!5478 = !DILocation(line: 3694, column: 61, scope: !5446)
!5479 = !DILocation(line: 3694, column: 63, scope: !5446)
!5480 = !DILocation(line: 3694, column: 67, scope: !5446)
!5481 = !DILocation(line: 3694, column: 62, scope: !5446)
!5482 = !DILocation(line: 3694, column: 76, scope: !5446)
!5483 = !DILocation(line: 3694, column: 80, scope: !5446)
!5484 = !DILocation(line: 3694, column: 4, scope: !5485)
!5485 = !DILexicalBlockFile(scope: !5446, file: !243, discriminator: 10)
!5486 = !DILocation(line: 3694, column: 85, scope: !5446)
!5487 = !DILocation(line: 3694, column: 172, scope: !5488)
!5488 = !DILexicalBlockFile(scope: !5443, file: !243, discriminator: 6)
!5489 = !DILocation(line: 3694, column: 176, scope: !5488)
!5490 = !DILocation(line: 3694, column: 170, scope: !5488)
!5491 = !DILocation(line: 3694, column: 133, scope: !5488)
!5492 = distinct !{!5492, !5493}
!5493 = !DILocation(line: 3694, column: 133, scope: !5426)
!5494 = !DILocation(line: 3694, column: 106, scope: !5495)
!5495 = !DILexicalBlockFile(scope: !5426, file: !243, discriminator: 7)
!5496 = !DILocation(line: 3694, column: 117, scope: !5495)
!5497 = !DILocation(line: 3694, column: 87, scope: !5495)
!5498 = !DILocation(line: 3694, column: 4, scope: !5495)
!5499 = !DILocation(line: 3694, column: 21, scope: !5500)
!5500 = !DILexicalBlockFile(scope: !5501, file: !243, discriminator: 8)
!5501 = distinct !DILexicalBlock(scope: !5415, file: !243, line: 3694, column: 21)
!5502 = !DILocation(line: 3694, column: 52, scope: !5503)
!5503 = !DILexicalBlockFile(scope: !5501, file: !243, discriminator: 9)
!5504 = !DILocation(line: 3694, column: 63, scope: !5503)
!5505 = !DILocation(line: 3694, column: 76, scope: !5503)
!5506 = !DILocation(line: 3694, column: 82, scope: !5503)
!5507 = !DILocation(line: 3694, column: 85, scope: !5503)
!5508 = !DILocation(line: 3694, column: 88, scope: !5503)
!5509 = !DILocation(line: 3694, column: 92, scope: !5503)
!5510 = !DILocation(line: 3694, column: 37, scope: !5503)
!5511 = !DILocation(line: 3695, column: 8, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5513, file: !243, line: 3695, column: 8)
!5513 = distinct !DILexicalBlock(scope: !5390, file: !243, line: 3695, column: 2)
!5514 = !DILocation(line: 3695, column: 15, scope: !5512)
!5515 = !DILocation(line: 3695, column: 8, scope: !5513)
!5516 = !DILocation(line: 3695, column: 36, scope: !5517)
!5517 = !DILexicalBlockFile(scope: !5512, file: !243, discriminator: 1)
!5518 = !DILocation(line: 3695, column: 47, scope: !5517)
!5519 = !DILocation(line: 3695, column: 23, scope: !5517)
!5520 = !DILocation(line: 3696, column: 1, scope: !5390)
!5521 = distinct !DISubprogram(name: "ui_patblt", scope: !243, file: !243, line: 3708, type: !5522, isLocal: false, isDefinition: true, scopeLine: 3711, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!5522 = !DISubroutineType(types: !5523)
!5523 = !{null, !47, !45, !45, !45, !45, !5524, !193, !193}
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5525, size: 64, align: 64)
!5525 = !DIDerivedType(tag: DW_TAG_typedef, name: "BRUSH", file: !36, line: 119, baseType: !5526)
!5526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_BRUSH", file: !36, line: 111, size: 192, align: 64, elements: !5527)
!5527 = !{!5528, !5529, !5530, !5531, !5535}
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "xorigin", scope: !5526, file: !36, line: 113, baseType: !47, size: 8, align: 8)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "yorigin", scope: !5526, file: !36, line: 114, baseType: !47, size: 8, align: 8, offset: 8)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !5526, file: !36, line: 115, baseType: !47, size: 8, align: 8, offset: 16)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !5526, file: !36, line: 116, baseType: !5532, size: 64, align: 8, offset: 24)
!5532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 64, align: 8, elements: !5533)
!5533 = !{!5534}
!5534 = !DISubrange(count: 8)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "bd", scope: !5526, file: !36, line: 117, baseType: !5536, size: 64, align: 64, offset: 128)
!5536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5537, size: 64, align: 64)
!5537 = !DIDerivedType(tag: DW_TAG_typedef, name: "BRUSHDATA", file: !36, line: 109, baseType: !5538)
!5538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_BRUSHDATA", file: !36, line: 103, size: 128, align: 64, elements: !5539)
!5539 = !{!5540, !5541, !5542}
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "colour_code", scope: !5538, file: !36, line: 105, baseType: !193, size: 32, align: 32)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5538, file: !36, line: 106, baseType: !193, size: 32, align: 32, offset: 32)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5538, file: !36, line: 107, baseType: !46, size: 64, align: 64, offset: 64)
!5543 = !DILocalVariable(name: "opcode", arg: 1, scope: !5521, file: !243, line: 3708, type: !47)
!5544 = !DILocation(line: 3708, column: 17, scope: !5521)
!5545 = !DILocalVariable(name: "x", arg: 2, scope: !5521, file: !243, line: 3709, type: !45)
!5546 = !DILocation(line: 3709, column: 19, scope: !5521)
!5547 = !DILocalVariable(name: "y", arg: 3, scope: !5521, file: !243, line: 3709, type: !45)
!5548 = !DILocation(line: 3709, column: 26, scope: !5521)
!5549 = !DILocalVariable(name: "cx", arg: 4, scope: !5521, file: !243, line: 3709, type: !45)
!5550 = !DILocation(line: 3709, column: 33, scope: !5521)
!5551 = !DILocalVariable(name: "cy", arg: 5, scope: !5521, file: !243, line: 3709, type: !45)
!5552 = !DILocation(line: 3709, column: 41, scope: !5521)
!5553 = !DILocalVariable(name: "brush", arg: 6, scope: !5521, file: !243, line: 3710, type: !5524)
!5554 = !DILocation(line: 3710, column: 24, scope: !5521)
!5555 = !DILocalVariable(name: "bgcolour", arg: 7, scope: !5521, file: !243, line: 3710, type: !193)
!5556 = !DILocation(line: 3710, column: 38, scope: !5521)
!5557 = !DILocalVariable(name: "fgcolour", arg: 8, scope: !5521, file: !243, line: 3710, type: !193)
!5558 = !DILocation(line: 3710, column: 55, scope: !5521)
!5559 = !DILocalVariable(name: "fill", scope: !5521, file: !243, line: 3712, type: !189)
!5560 = !DILocation(line: 3712, column: 9, scope: !5521)
!5561 = !DILocalVariable(name: "i", scope: !5521, file: !243, line: 3713, type: !47)
!5562 = !DILocation(line: 3713, column: 8, scope: !5521)
!5563 = !DILocalVariable(name: "ipattern", scope: !5521, file: !243, line: 3713, type: !5532)
!5564 = !DILocation(line: 3713, column: 11, scope: !5521)
!5565 = !DILocation(line: 3715, column: 8, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !243, line: 3715, column: 8)
!5567 = distinct !DILexicalBlock(scope: !5521, file: !243, line: 3715, column: 2)
!5568 = !DILocation(line: 3715, column: 15, scope: !5566)
!5569 = !DILocation(line: 3715, column: 8, scope: !5567)
!5570 = !DILocation(line: 3715, column: 36, scope: !5571)
!5571 = !DILexicalBlockFile(scope: !5566, file: !243, discriminator: 1)
!5572 = !DILocation(line: 3715, column: 47, scope: !5571)
!5573 = !DILocation(line: 3715, column: 62, scope: !5571)
!5574 = !DILocation(line: 3715, column: 53, scope: !5571)
!5575 = !DILocation(line: 3715, column: 23, scope: !5571)
!5576 = !DILocation(line: 3717, column: 10, scope: !5521)
!5577 = !DILocation(line: 3717, column: 17, scope: !5521)
!5578 = !DILocation(line: 3717, column: 2, scope: !5521)
!5579 = !DILocation(line: 3720, column: 19, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5521, file: !243, line: 3718, column: 2)
!5581 = !DILocation(line: 3720, column: 30, scope: !5580)
!5582 = !DILocation(line: 3720, column: 38, scope: !5580)
!5583 = !DILocation(line: 3720, column: 53, scope: !5580)
!5584 = !DILocation(line: 3720, column: 77, scope: !5585)
!5585 = !DILexicalBlockFile(scope: !5580, file: !243, discriminator: 1)
!5586 = !DILocation(line: 3720, column: 60, scope: !5585)
!5587 = !DILocation(line: 3720, column: 38, scope: !5585)
!5588 = !DILocation(line: 3720, column: 89, scope: !5589)
!5589 = !DILexicalBlockFile(scope: !5580, file: !243, discriminator: 2)
!5590 = !DILocation(line: 3720, column: 103, scope: !5591)
!5591 = !DILexicalBlockFile(scope: !5580, file: !243, discriminator: 3)
!5592 = !DILocation(line: 3720, column: 89, scope: !5591)
!5593 = !DILocation(line: 3720, column: 123, scope: !5594)
!5594 = !DILexicalBlockFile(scope: !5580, file: !243, discriminator: 4)
!5595 = !DILocation(line: 3720, column: 114, scope: !5594)
!5596 = !DILocation(line: 3720, column: 89, scope: !5594)
!5597 = !DILocation(line: 3720, column: 89, scope: !5598)
!5598 = !DILexicalBlockFile(scope: !5580, file: !243, discriminator: 5)
!5599 = !DILocation(line: 3720, column: 38, scope: !5598)
!5600 = !DILocation(line: 3720, column: 38, scope: !5601)
!5601 = !DILexicalBlockFile(scope: !5580, file: !243, discriminator: 6)
!5602 = !DILocation(line: 3720, column: 36, scope: !5601)
!5603 = !DILocation(line: 3720, column: 4, scope: !5601)
!5604 = !DILocation(line: 3721, column: 21, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5580, file: !243, line: 3721, column: 4)
!5606 = !DILocation(line: 3721, column: 32, scope: !5605)
!5607 = !DILocation(line: 3721, column: 49, scope: !5608)
!5608 = !DILexicalBlockFile(scope: !5605, file: !243, discriminator: 1)
!5609 = !DILocation(line: 3721, column: 32, scope: !5608)
!5610 = !DILocation(line: 3721, column: 63, scope: !5611)
!5611 = !DILexicalBlockFile(scope: !5605, file: !243, discriminator: 2)
!5612 = !DILocation(line: 3721, column: 32, scope: !5611)
!5613 = !DILocation(line: 3721, column: 32, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !5605, file: !243, discriminator: 3)
!5615 = !DILocation(line: 3721, column: 70, scope: !5614)
!5616 = !DILocation(line: 3721, column: 76, scope: !5614)
!5617 = !DILocation(line: 3721, column: 79, scope: !5614)
!5618 = !DILocation(line: 3721, column: 82, scope: !5614)
!5619 = !DILocation(line: 3721, column: 86, scope: !5614)
!5620 = !DILocation(line: 3721, column: 6, scope: !5614)
!5621 = !DILocation(line: 3722, column: 4, scope: !5580)
!5622 = !DILocation(line: 3726, column: 25, scope: !5580)
!5623 = !DILocation(line: 3726, column: 32, scope: !5580)
!5624 = !DILocation(line: 3726, column: 43, scope: !5580)
!5625 = !DILocation(line: 3726, column: 23, scope: !5580)
!5626 = !DILocation(line: 3725, column: 20, scope: !5580)
!5627 = !DILocation(line: 3725, column: 11, scope: !5580)
!5628 = !DILocation(line: 3725, column: 9, scope: !5580)
!5629 = !DILocation(line: 3727, column: 19, scope: !5580)
!5630 = !DILocation(line: 3727, column: 30, scope: !5580)
!5631 = !DILocation(line: 3727, column: 38, scope: !5580)
!5632 = !DILocation(line: 3727, column: 53, scope: !5580)
!5633 = !DILocation(line: 3727, column: 77, scope: !5585)
!5634 = !DILocation(line: 3727, column: 60, scope: !5585)
!5635 = !DILocation(line: 3727, column: 38, scope: !5585)
!5636 = !DILocation(line: 3727, column: 89, scope: !5589)
!5637 = !DILocation(line: 3727, column: 103, scope: !5591)
!5638 = !DILocation(line: 3727, column: 89, scope: !5591)
!5639 = !DILocation(line: 3727, column: 123, scope: !5594)
!5640 = !DILocation(line: 3727, column: 114, scope: !5594)
!5641 = !DILocation(line: 3727, column: 89, scope: !5594)
!5642 = !DILocation(line: 3727, column: 89, scope: !5598)
!5643 = !DILocation(line: 3727, column: 38, scope: !5598)
!5644 = !DILocation(line: 3727, column: 38, scope: !5601)
!5645 = !DILocation(line: 3727, column: 36, scope: !5601)
!5646 = !DILocation(line: 3727, column: 4, scope: !5601)
!5647 = !DILocation(line: 3728, column: 19, scope: !5580)
!5648 = !DILocation(line: 3728, column: 30, scope: !5580)
!5649 = !DILocation(line: 3728, column: 38, scope: !5580)
!5650 = !DILocation(line: 3728, column: 53, scope: !5580)
!5651 = !DILocation(line: 3728, column: 77, scope: !5585)
!5652 = !DILocation(line: 3728, column: 60, scope: !5585)
!5653 = !DILocation(line: 3728, column: 38, scope: !5585)
!5654 = !DILocation(line: 3728, column: 89, scope: !5589)
!5655 = !DILocation(line: 3728, column: 103, scope: !5591)
!5656 = !DILocation(line: 3728, column: 89, scope: !5591)
!5657 = !DILocation(line: 3728, column: 123, scope: !5594)
!5658 = !DILocation(line: 3728, column: 114, scope: !5594)
!5659 = !DILocation(line: 3728, column: 89, scope: !5594)
!5660 = !DILocation(line: 3728, column: 89, scope: !5598)
!5661 = !DILocation(line: 3728, column: 38, scope: !5598)
!5662 = !DILocation(line: 3728, column: 38, scope: !5601)
!5663 = !DILocation(line: 3728, column: 36, scope: !5601)
!5664 = !DILocation(line: 3728, column: 4, scope: !5601)
!5665 = !DILocation(line: 3729, column: 18, scope: !5580)
!5666 = !DILocation(line: 3729, column: 29, scope: !5580)
!5667 = !DILocation(line: 3729, column: 4, scope: !5580)
!5668 = !DILocation(line: 3730, column: 16, scope: !5580)
!5669 = !DILocation(line: 3730, column: 27, scope: !5580)
!5670 = !DILocation(line: 3730, column: 33, scope: !5580)
!5671 = !DILocation(line: 3730, column: 4, scope: !5580)
!5672 = !DILocation(line: 3731, column: 17, scope: !5580)
!5673 = !DILocation(line: 3731, column: 28, scope: !5580)
!5674 = !DILocation(line: 3731, column: 34, scope: !5580)
!5675 = !DILocation(line: 3731, column: 41, scope: !5580)
!5676 = !DILocation(line: 3731, column: 50, scope: !5580)
!5677 = !DILocation(line: 3731, column: 57, scope: !5580)
!5678 = !DILocation(line: 3731, column: 4, scope: !5580)
!5679 = !DILocation(line: 3732, column: 21, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5580, file: !243, line: 3732, column: 4)
!5681 = !DILocation(line: 3732, column: 32, scope: !5680)
!5682 = !DILocation(line: 3732, column: 49, scope: !5683)
!5683 = !DILexicalBlockFile(scope: !5680, file: !243, discriminator: 1)
!5684 = !DILocation(line: 3732, column: 32, scope: !5683)
!5685 = !DILocation(line: 3732, column: 63, scope: !5686)
!5686 = !DILexicalBlockFile(scope: !5680, file: !243, discriminator: 2)
!5687 = !DILocation(line: 3732, column: 32, scope: !5686)
!5688 = !DILocation(line: 3732, column: 32, scope: !5689)
!5689 = !DILexicalBlockFile(scope: !5680, file: !243, discriminator: 3)
!5690 = !DILocation(line: 3732, column: 70, scope: !5689)
!5691 = !DILocation(line: 3732, column: 76, scope: !5689)
!5692 = !DILocation(line: 3732, column: 79, scope: !5689)
!5693 = !DILocation(line: 3732, column: 82, scope: !5689)
!5694 = !DILocation(line: 3732, column: 86, scope: !5689)
!5695 = !DILocation(line: 3732, column: 6, scope: !5689)
!5696 = !DILocation(line: 3733, column: 18, scope: !5580)
!5697 = !DILocation(line: 3733, column: 29, scope: !5580)
!5698 = !DILocation(line: 3733, column: 4, scope: !5580)
!5699 = !DILocation(line: 3734, column: 17, scope: !5580)
!5700 = !DILocation(line: 3734, column: 28, scope: !5580)
!5701 = !DILocation(line: 3734, column: 4, scope: !5580)
!5702 = !DILocation(line: 3735, column: 33, scope: !5580)
!5703 = !DILocation(line: 3735, column: 21, scope: !5580)
!5704 = !DILocation(line: 3735, column: 4, scope: !5580)
!5705 = !DILocation(line: 3736, column: 4, scope: !5580)
!5706 = !DILocation(line: 3739, column: 8, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5580, file: !243, line: 3739, column: 8)
!5708 = !DILocation(line: 3739, column: 15, scope: !5707)
!5709 = !DILocation(line: 3739, column: 18, scope: !5707)
!5710 = !DILocation(line: 3739, column: 8, scope: !5580)
!5711 = !DILocation(line: 3741, column: 12, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5713, file: !243, line: 3741, column: 5)
!5713 = distinct !DILexicalBlock(scope: !5707, file: !243, line: 3740, column: 4)
!5714 = !DILocation(line: 3741, column: 10, scope: !5712)
!5715 = !DILocation(line: 3741, column: 17, scope: !5716)
!5716 = !DILexicalBlockFile(scope: !5717, file: !243, discriminator: 1)
!5717 = distinct !DILexicalBlock(scope: !5712, file: !243, line: 3741, column: 5)
!5718 = !DILocation(line: 3741, column: 19, scope: !5716)
!5719 = !DILocation(line: 3741, column: 5, scope: !5716)
!5720 = !DILocation(line: 3742, column: 39, scope: !5717)
!5721 = !DILocation(line: 3742, column: 24, scope: !5717)
!5722 = !DILocation(line: 3742, column: 31, scope: !5717)
!5723 = !DILocation(line: 3742, column: 19, scope: !5717)
!5724 = !DILocation(line: 3742, column: 17, scope: !5717)
!5725 = !DILocation(line: 3742, column: 6, scope: !5717)
!5726 = !DILocation(line: 3742, column: 22, scope: !5717)
!5727 = !DILocation(line: 3741, column: 26, scope: !5728)
!5728 = !DILexicalBlockFile(scope: !5717, file: !243, discriminator: 2)
!5729 = !DILocation(line: 3741, column: 5, scope: !5728)
!5730 = distinct !{!5730, !5731}
!5731 = !DILocation(line: 3741, column: 5, scope: !5713)
!5732 = !DILocation(line: 3743, column: 43, scope: !5713)
!5733 = !DILocation(line: 3743, column: 21, scope: !5713)
!5734 = !DILocation(line: 3743, column: 12, scope: !5713)
!5735 = !DILocation(line: 3743, column: 10, scope: !5713)
!5736 = !DILocation(line: 3744, column: 20, scope: !5713)
!5737 = !DILocation(line: 3744, column: 31, scope: !5713)
!5738 = !DILocation(line: 3744, column: 39, scope: !5713)
!5739 = !DILocation(line: 3744, column: 54, scope: !5713)
!5740 = !DILocation(line: 3744, column: 78, scope: !5741)
!5741 = !DILexicalBlockFile(scope: !5713, file: !243, discriminator: 1)
!5742 = !DILocation(line: 3744, column: 61, scope: !5741)
!5743 = !DILocation(line: 3744, column: 39, scope: !5741)
!5744 = !DILocation(line: 3744, column: 90, scope: !5745)
!5745 = !DILexicalBlockFile(scope: !5713, file: !243, discriminator: 2)
!5746 = !DILocation(line: 3744, column: 104, scope: !5747)
!5747 = !DILexicalBlockFile(scope: !5713, file: !243, discriminator: 3)
!5748 = !DILocation(line: 3744, column: 90, scope: !5747)
!5749 = !DILocation(line: 3744, column: 124, scope: !5750)
!5750 = !DILexicalBlockFile(scope: !5713, file: !243, discriminator: 4)
!5751 = !DILocation(line: 3744, column: 115, scope: !5750)
!5752 = !DILocation(line: 3744, column: 90, scope: !5750)
!5753 = !DILocation(line: 3744, column: 90, scope: !5754)
!5754 = !DILexicalBlockFile(scope: !5713, file: !243, discriminator: 5)
!5755 = !DILocation(line: 3744, column: 39, scope: !5754)
!5756 = !DILocation(line: 3744, column: 39, scope: !5757)
!5757 = !DILexicalBlockFile(scope: !5713, file: !243, discriminator: 6)
!5758 = !DILocation(line: 3744, column: 37, scope: !5757)
!5759 = !DILocation(line: 3744, column: 5, scope: !5757)
!5760 = !DILocation(line: 3745, column: 20, scope: !5713)
!5761 = !DILocation(line: 3745, column: 31, scope: !5713)
!5762 = !DILocation(line: 3745, column: 39, scope: !5713)
!5763 = !DILocation(line: 3745, column: 54, scope: !5713)
!5764 = !DILocation(line: 3745, column: 78, scope: !5741)
!5765 = !DILocation(line: 3745, column: 61, scope: !5741)
!5766 = !DILocation(line: 3745, column: 39, scope: !5741)
!5767 = !DILocation(line: 3745, column: 90, scope: !5745)
!5768 = !DILocation(line: 3745, column: 104, scope: !5747)
!5769 = !DILocation(line: 3745, column: 90, scope: !5747)
!5770 = !DILocation(line: 3745, column: 124, scope: !5750)
!5771 = !DILocation(line: 3745, column: 115, scope: !5750)
!5772 = !DILocation(line: 3745, column: 90, scope: !5750)
!5773 = !DILocation(line: 3745, column: 90, scope: !5754)
!5774 = !DILocation(line: 3745, column: 39, scope: !5754)
!5775 = !DILocation(line: 3745, column: 39, scope: !5757)
!5776 = !DILocation(line: 3745, column: 37, scope: !5757)
!5777 = !DILocation(line: 3745, column: 5, scope: !5757)
!5778 = !DILocation(line: 3746, column: 19, scope: !5713)
!5779 = !DILocation(line: 3746, column: 30, scope: !5713)
!5780 = !DILocation(line: 3746, column: 5, scope: !5713)
!5781 = !DILocation(line: 3747, column: 17, scope: !5713)
!5782 = !DILocation(line: 3747, column: 28, scope: !5713)
!5783 = !DILocation(line: 3747, column: 34, scope: !5713)
!5784 = !DILocation(line: 3747, column: 5, scope: !5713)
!5785 = !DILocation(line: 3748, column: 18, scope: !5713)
!5786 = !DILocation(line: 3748, column: 29, scope: !5713)
!5787 = !DILocation(line: 3748, column: 35, scope: !5713)
!5788 = !DILocation(line: 3748, column: 42, scope: !5713)
!5789 = !DILocation(line: 3748, column: 51, scope: !5713)
!5790 = !DILocation(line: 3748, column: 58, scope: !5713)
!5791 = !DILocation(line: 3748, column: 5, scope: !5713)
!5792 = !DILocation(line: 3749, column: 22, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5713, file: !243, line: 3749, column: 5)
!5794 = !DILocation(line: 3749, column: 33, scope: !5793)
!5795 = !DILocation(line: 3749, column: 50, scope: !5796)
!5796 = !DILexicalBlockFile(scope: !5793, file: !243, discriminator: 1)
!5797 = !DILocation(line: 3749, column: 33, scope: !5796)
!5798 = !DILocation(line: 3749, column: 64, scope: !5799)
!5799 = !DILexicalBlockFile(scope: !5793, file: !243, discriminator: 2)
!5800 = !DILocation(line: 3749, column: 33, scope: !5799)
!5801 = !DILocation(line: 3749, column: 33, scope: !5802)
!5802 = !DILexicalBlockFile(scope: !5793, file: !243, discriminator: 3)
!5803 = !DILocation(line: 3749, column: 71, scope: !5802)
!5804 = !DILocation(line: 3749, column: 77, scope: !5802)
!5805 = !DILocation(line: 3749, column: 80, scope: !5802)
!5806 = !DILocation(line: 3749, column: 83, scope: !5802)
!5807 = !DILocation(line: 3749, column: 87, scope: !5802)
!5808 = !DILocation(line: 3749, column: 7, scope: !5802)
!5809 = !DILocation(line: 3750, column: 19, scope: !5713)
!5810 = !DILocation(line: 3750, column: 30, scope: !5713)
!5811 = !DILocation(line: 3750, column: 5, scope: !5713)
!5812 = !DILocation(line: 3751, column: 18, scope: !5713)
!5813 = !DILocation(line: 3751, column: 29, scope: !5713)
!5814 = !DILocation(line: 3751, column: 5, scope: !5713)
!5815 = !DILocation(line: 3752, column: 34, scope: !5713)
!5816 = !DILocation(line: 3752, column: 22, scope: !5713)
!5817 = !DILocation(line: 3752, column: 5, scope: !5713)
!5818 = !DILocation(line: 3753, column: 4, scope: !5713)
!5819 = !DILocation(line: 3754, column: 13, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5707, file: !243, line: 3754, column: 13)
!5821 = !DILocation(line: 3754, column: 20, scope: !5820)
!5822 = !DILocation(line: 3754, column: 24, scope: !5820)
!5823 = !DILocation(line: 3754, column: 36, scope: !5820)
!5824 = !DILocation(line: 3754, column: 13, scope: !5707)
!5825 = !DILocation(line: 3756, column: 44, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5820, file: !243, line: 3755, column: 4)
!5827 = !DILocation(line: 3756, column: 51, scope: !5826)
!5828 = !DILocation(line: 3756, column: 55, scope: !5826)
!5829 = !DILocation(line: 3756, column: 21, scope: !5826)
!5830 = !DILocation(line: 3756, column: 12, scope: !5826)
!5831 = !DILocation(line: 3756, column: 10, scope: !5826)
!5832 = !DILocation(line: 3757, column: 19, scope: !5826)
!5833 = !DILocation(line: 3757, column: 30, scope: !5826)
!5834 = !DILocation(line: 3757, column: 5, scope: !5826)
!5835 = !DILocation(line: 3758, column: 14, scope: !5826)
!5836 = !DILocation(line: 3758, column: 25, scope: !5826)
!5837 = !DILocation(line: 3758, column: 31, scope: !5826)
!5838 = !DILocation(line: 3758, column: 5, scope: !5826)
!5839 = !DILocation(line: 3759, column: 18, scope: !5826)
!5840 = !DILocation(line: 3759, column: 29, scope: !5826)
!5841 = !DILocation(line: 3759, column: 35, scope: !5826)
!5842 = !DILocation(line: 3759, column: 42, scope: !5826)
!5843 = !DILocation(line: 3759, column: 51, scope: !5826)
!5844 = !DILocation(line: 3759, column: 58, scope: !5826)
!5845 = !DILocation(line: 3759, column: 5, scope: !5826)
!5846 = !DILocation(line: 3760, column: 22, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5826, file: !243, line: 3760, column: 5)
!5848 = !DILocation(line: 3760, column: 33, scope: !5847)
!5849 = !DILocation(line: 3760, column: 50, scope: !5850)
!5850 = !DILexicalBlockFile(scope: !5847, file: !243, discriminator: 1)
!5851 = !DILocation(line: 3760, column: 33, scope: !5850)
!5852 = !DILocation(line: 3760, column: 64, scope: !5853)
!5853 = !DILexicalBlockFile(scope: !5847, file: !243, discriminator: 2)
!5854 = !DILocation(line: 3760, column: 33, scope: !5853)
!5855 = !DILocation(line: 3760, column: 33, scope: !5856)
!5856 = !DILexicalBlockFile(scope: !5847, file: !243, discriminator: 3)
!5857 = !DILocation(line: 3760, column: 71, scope: !5856)
!5858 = !DILocation(line: 3760, column: 77, scope: !5856)
!5859 = !DILocation(line: 3760, column: 80, scope: !5856)
!5860 = !DILocation(line: 3760, column: 83, scope: !5856)
!5861 = !DILocation(line: 3760, column: 87, scope: !5856)
!5862 = !DILocation(line: 3760, column: 7, scope: !5856)
!5863 = !DILocation(line: 3761, column: 19, scope: !5826)
!5864 = !DILocation(line: 3761, column: 30, scope: !5826)
!5865 = !DILocation(line: 3761, column: 5, scope: !5826)
!5866 = !DILocation(line: 3762, column: 18, scope: !5826)
!5867 = !DILocation(line: 3762, column: 29, scope: !5826)
!5868 = !DILocation(line: 3762, column: 5, scope: !5826)
!5869 = !DILocation(line: 3763, column: 36, scope: !5826)
!5870 = !DILocation(line: 3763, column: 23, scope: !5826)
!5871 = !DILocation(line: 3763, column: 5, scope: !5826)
!5872 = !DILocation(line: 3764, column: 4, scope: !5826)
!5873 = !DILocation(line: 3767, column: 43, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5820, file: !243, line: 3766, column: 4)
!5875 = !DILocation(line: 3767, column: 50, scope: !5874)
!5876 = !DILocation(line: 3767, column: 54, scope: !5874)
!5877 = !DILocation(line: 3767, column: 21, scope: !5874)
!5878 = !DILocation(line: 3767, column: 12, scope: !5874)
!5879 = !DILocation(line: 3767, column: 10, scope: !5874)
!5880 = !DILocation(line: 3768, column: 20, scope: !5874)
!5881 = !DILocation(line: 3768, column: 31, scope: !5874)
!5882 = !DILocation(line: 3768, column: 39, scope: !5874)
!5883 = !DILocation(line: 3768, column: 54, scope: !5874)
!5884 = !DILocation(line: 3768, column: 78, scope: !5885)
!5885 = !DILexicalBlockFile(scope: !5874, file: !243, discriminator: 1)
!5886 = !DILocation(line: 3768, column: 61, scope: !5885)
!5887 = !DILocation(line: 3768, column: 39, scope: !5885)
!5888 = !DILocation(line: 3768, column: 90, scope: !5889)
!5889 = !DILexicalBlockFile(scope: !5874, file: !243, discriminator: 2)
!5890 = !DILocation(line: 3768, column: 104, scope: !5891)
!5891 = !DILexicalBlockFile(scope: !5874, file: !243, discriminator: 3)
!5892 = !DILocation(line: 3768, column: 90, scope: !5891)
!5893 = !DILocation(line: 3768, column: 124, scope: !5894)
!5894 = !DILexicalBlockFile(scope: !5874, file: !243, discriminator: 4)
!5895 = !DILocation(line: 3768, column: 115, scope: !5894)
!5896 = !DILocation(line: 3768, column: 90, scope: !5894)
!5897 = !DILocation(line: 3768, column: 90, scope: !5898)
!5898 = !DILexicalBlockFile(scope: !5874, file: !243, discriminator: 5)
!5899 = !DILocation(line: 3768, column: 39, scope: !5898)
!5900 = !DILocation(line: 3768, column: 39, scope: !5901)
!5901 = !DILexicalBlockFile(scope: !5874, file: !243, discriminator: 6)
!5902 = !DILocation(line: 3768, column: 37, scope: !5901)
!5903 = !DILocation(line: 3768, column: 5, scope: !5901)
!5904 = !DILocation(line: 3769, column: 20, scope: !5874)
!5905 = !DILocation(line: 3769, column: 31, scope: !5874)
!5906 = !DILocation(line: 3769, column: 39, scope: !5874)
!5907 = !DILocation(line: 3769, column: 54, scope: !5874)
!5908 = !DILocation(line: 3769, column: 78, scope: !5885)
!5909 = !DILocation(line: 3769, column: 61, scope: !5885)
!5910 = !DILocation(line: 3769, column: 39, scope: !5885)
!5911 = !DILocation(line: 3769, column: 90, scope: !5889)
!5912 = !DILocation(line: 3769, column: 104, scope: !5891)
!5913 = !DILocation(line: 3769, column: 90, scope: !5891)
!5914 = !DILocation(line: 3769, column: 124, scope: !5894)
!5915 = !DILocation(line: 3769, column: 115, scope: !5894)
!5916 = !DILocation(line: 3769, column: 90, scope: !5894)
!5917 = !DILocation(line: 3769, column: 90, scope: !5898)
!5918 = !DILocation(line: 3769, column: 39, scope: !5898)
!5919 = !DILocation(line: 3769, column: 39, scope: !5901)
!5920 = !DILocation(line: 3769, column: 37, scope: !5901)
!5921 = !DILocation(line: 3769, column: 5, scope: !5901)
!5922 = !DILocation(line: 3770, column: 19, scope: !5874)
!5923 = !DILocation(line: 3770, column: 30, scope: !5874)
!5924 = !DILocation(line: 3770, column: 5, scope: !5874)
!5925 = !DILocation(line: 3771, column: 17, scope: !5874)
!5926 = !DILocation(line: 3771, column: 28, scope: !5874)
!5927 = !DILocation(line: 3771, column: 34, scope: !5874)
!5928 = !DILocation(line: 3771, column: 5, scope: !5874)
!5929 = !DILocation(line: 3772, column: 18, scope: !5874)
!5930 = !DILocation(line: 3772, column: 29, scope: !5874)
!5931 = !DILocation(line: 3772, column: 35, scope: !5874)
!5932 = !DILocation(line: 3772, column: 42, scope: !5874)
!5933 = !DILocation(line: 3772, column: 51, scope: !5874)
!5934 = !DILocation(line: 3772, column: 58, scope: !5874)
!5935 = !DILocation(line: 3772, column: 5, scope: !5874)
!5936 = !DILocation(line: 3773, column: 22, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5874, file: !243, line: 3773, column: 5)
!5938 = !DILocation(line: 3773, column: 33, scope: !5937)
!5939 = !DILocation(line: 3773, column: 50, scope: !5940)
!5940 = !DILexicalBlockFile(scope: !5937, file: !243, discriminator: 1)
!5941 = !DILocation(line: 3773, column: 33, scope: !5940)
!5942 = !DILocation(line: 3773, column: 64, scope: !5943)
!5943 = !DILexicalBlockFile(scope: !5937, file: !243, discriminator: 2)
!5944 = !DILocation(line: 3773, column: 33, scope: !5943)
!5945 = !DILocation(line: 3773, column: 33, scope: !5946)
!5946 = !DILexicalBlockFile(scope: !5937, file: !243, discriminator: 3)
!5947 = !DILocation(line: 3773, column: 71, scope: !5946)
!5948 = !DILocation(line: 3773, column: 77, scope: !5946)
!5949 = !DILocation(line: 3773, column: 80, scope: !5946)
!5950 = !DILocation(line: 3773, column: 83, scope: !5946)
!5951 = !DILocation(line: 3773, column: 87, scope: !5946)
!5952 = !DILocation(line: 3773, column: 7, scope: !5946)
!5953 = !DILocation(line: 3774, column: 19, scope: !5874)
!5954 = !DILocation(line: 3774, column: 30, scope: !5874)
!5955 = !DILocation(line: 3774, column: 5, scope: !5874)
!5956 = !DILocation(line: 3775, column: 18, scope: !5874)
!5957 = !DILocation(line: 3775, column: 29, scope: !5874)
!5958 = !DILocation(line: 3775, column: 5, scope: !5874)
!5959 = !DILocation(line: 3776, column: 34, scope: !5874)
!5960 = !DILocation(line: 3776, column: 22, scope: !5874)
!5961 = !DILocation(line: 3776, column: 5, scope: !5874)
!5962 = !DILocation(line: 3778, column: 4, scope: !5580)
!5963 = !DILocation(line: 3782, column: 11, scope: !5580)
!5964 = !DILocation(line: 3782, column: 18, scope: !5580)
!5965 = !DILocation(line: 3781, column: 4, scope: !5580)
!5966 = !DILocation(line: 3783, column: 2, scope: !5580)
!5967 = !DILocation(line: 3785, column: 8, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5969, file: !243, line: 3785, column: 8)
!5969 = distinct !DILexicalBlock(scope: !5521, file: !243, line: 3785, column: 2)
!5970 = !DILocation(line: 3785, column: 15, scope: !5968)
!5971 = !DILocation(line: 3785, column: 8, scope: !5969)
!5972 = !DILocation(line: 3785, column: 36, scope: !5973)
!5973 = !DILexicalBlockFile(scope: !5968, file: !243, discriminator: 1)
!5974 = !DILocation(line: 3785, column: 47, scope: !5973)
!5975 = !DILocation(line: 3785, column: 23, scope: !5973)
!5976 = !DILocation(line: 3787, column: 6, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5521, file: !243, line: 3787, column: 6)
!5978 = !DILocation(line: 3787, column: 6, scope: !5521)
!5979 = !DILocation(line: 3788, column: 13, scope: !5977)
!5980 = !DILocation(line: 3788, column: 24, scope: !5977)
!5981 = !DILocation(line: 3788, column: 37, scope: !5977)
!5982 = !DILocation(line: 3788, column: 44, scope: !5977)
!5983 = !DILocation(line: 3788, column: 50, scope: !5977)
!5984 = !DILocation(line: 3788, column: 53, scope: !5977)
!5985 = !DILocation(line: 3788, column: 56, scope: !5977)
!5986 = !DILocation(line: 3788, column: 60, scope: !5977)
!5987 = !DILocation(line: 3788, column: 64, scope: !5977)
!5988 = !DILocation(line: 3788, column: 67, scope: !5977)
!5989 = !DILocation(line: 3788, column: 3, scope: !5977)
!5990 = !DILocation(line: 3789, column: 2, scope: !5521)
!5991 = distinct !{!5991, !5990}
!5992 = !DILocalVariable(name: "sw", scope: !5993, file: !243, line: 3789, type: !360)
!5993 = distinct !DILexicalBlock(scope: !5521, file: !243, line: 3789, column: 5)
!5994 = !DILocation(line: 3789, column: 24, scope: !5993)
!5995 = !DILocalVariable(name: "rect", scope: !5993, file: !243, line: 3789, type: !274)
!5996 = !DILocation(line: 3789, column: 39, scope: !5993)
!5997 = !DILocation(line: 3789, column: 50, scope: !5998)
!5998 = !DILexicalBlockFile(scope: !5999, file: !243, discriminator: 1)
!5999 = distinct !DILexicalBlock(scope: !5993, file: !243, line: 3789, column: 49)
!6000 = !DILocation(line: 3789, column: 49, scope: !5998)
!6001 = !DILocation(line: 3789, column: 70, scope: !6002)
!6002 = !DILexicalBlockFile(scope: !5999, file: !243, discriminator: 2)
!6003 = !DILocation(line: 3789, column: 87, scope: !6004)
!6004 = !DILexicalBlockFile(scope: !6005, file: !243, discriminator: 3)
!6005 = distinct !DILexicalBlock(scope: !5993, file: !243, line: 3789, column: 77)
!6006 = !DILocation(line: 3789, column: 85, scope: !6004)
!6007 = !DILocation(line: 3789, column: 82, scope: !6004)
!6008 = !DILocation(line: 3789, column: 107, scope: !6009)
!6009 = !DILexicalBlockFile(scope: !6010, file: !243, discriminator: 4)
!6010 = distinct !DILexicalBlock(scope: !6005, file: !243, line: 3789, column: 77)
!6011 = !DILocation(line: 3789, column: 77, scope: !6009)
!6012 = !DILocation(line: 3789, column: 154, scope: !6013)
!6013 = !DILexicalBlockFile(scope: !6014, file: !243, discriminator: 5)
!6014 = distinct !DILexicalBlock(scope: !6010, file: !243, line: 3789, column: 126)
!6015 = !DILocation(line: 3789, column: 137, scope: !6013)
!6016 = !DILocation(line: 3789, column: 158, scope: !6013)
!6017 = !DILocation(line: 3789, column: 162, scope: !6013)
!6018 = !DILocation(line: 3789, column: 156, scope: !6013)
!6019 = !DILocation(line: 3789, column: 133, scope: !6013)
!6020 = !DILocation(line: 3789, column: 135, scope: !6013)
!6021 = !DILocation(line: 3789, column: 197, scope: !6013)
!6022 = !DILocation(line: 3789, column: 180, scope: !6013)
!6023 = !DILocation(line: 3789, column: 201, scope: !6013)
!6024 = !DILocation(line: 3789, column: 205, scope: !6013)
!6025 = !DILocation(line: 3789, column: 199, scope: !6013)
!6026 = !DILocation(line: 3789, column: 176, scope: !6013)
!6027 = !DILocation(line: 3789, column: 178, scope: !6013)
!6028 = !DILocation(line: 3789, column: 244, scope: !6013)
!6029 = !DILocation(line: 3789, column: 219, scope: !6013)
!6030 = !DILocation(line: 3789, column: 225, scope: !6013)
!6031 = !DILocation(line: 3789, column: 282, scope: !6013)
!6032 = !DILocation(line: 3789, column: 256, scope: !6013)
!6033 = !DILocation(line: 3789, column: 263, scope: !6013)
!6034 = !DILocation(line: 3789, column: 309, scope: !6013)
!6035 = !DILocation(line: 3789, column: 320, scope: !6013)
!6036 = !DILocation(line: 3789, column: 290, scope: !6013)
!6037 = !DILocation(line: 3789, column: 15, scope: !6013)
!6038 = !DILocation(line: 3789, column: 26, scope: !6013)
!6039 = !DILocation(line: 3789, column: 43, scope: !6040)
!6040 = !DILexicalBlockFile(scope: !6014, file: !243, discriminator: 6)
!6041 = !DILocation(line: 3789, column: 26, scope: !6040)
!6042 = !DILocation(line: 3789, column: 57, scope: !6043)
!6043 = !DILexicalBlockFile(scope: !6014, file: !243, discriminator: 7)
!6044 = !DILocation(line: 3789, column: 26, scope: !6043)
!6045 = !DILocation(line: 3789, column: 26, scope: !6046)
!6046 = !DILexicalBlockFile(scope: !6014, file: !243, discriminator: 8)
!6047 = !DILocation(line: 3789, column: 64, scope: !6046)
!6048 = !DILocation(line: 3789, column: 68, scope: !6046)
!6049 = !DILocation(line: 3789, column: 73, scope: !6046)
!6050 = !DILocation(line: 3789, column: 79, scope: !6046)
!6051 = !DILocation(line: 3789, column: 82, scope: !6046)
!6052 = !DILocation(line: 3789, column: 85, scope: !6046)
!6053 = !DILocation(line: 3789, column: 89, scope: !6046)
!6054 = !DILocation(line: 3789, column: 93, scope: !6046)
!6055 = !DILocation(line: 3789, column: 97, scope: !6046)
!6056 = !DILocation(line: 3789, column: 101, scope: !6046)
!6057 = !DILocation(line: 3789, column: 95, scope: !6046)
!6058 = !DILocation(line: 3789, column: 110, scope: !6046)
!6059 = !DILocation(line: 3789, column: 114, scope: !6046)
!6060 = !DILocation(line: 3789, column: 118, scope: !6046)
!6061 = !DILocation(line: 3789, column: 112, scope: !6046)
!6062 = !DILocation(line: 3789, column: 4, scope: !6046)
!6063 = !DILocation(line: 3789, column: 128, scope: !6046)
!6064 = !DILocation(line: 3789, column: 116, scope: !6065)
!6065 = !DILexicalBlockFile(scope: !6010, file: !243, discriminator: 9)
!6066 = !DILocation(line: 3789, column: 120, scope: !6065)
!6067 = !DILocation(line: 3789, column: 114, scope: !6065)
!6068 = !DILocation(line: 3789, column: 77, scope: !6065)
!6069 = distinct !{!6069, !6070}
!6070 = !DILocation(line: 3789, column: 77, scope: !5993)
!6071 = !DILocation(line: 3789, column: 149, scope: !6072)
!6072 = !DILexicalBlockFile(scope: !5993, file: !243, discriminator: 10)
!6073 = !DILocation(line: 3789, column: 160, scope: !6072)
!6074 = !DILocation(line: 3789, column: 130, scope: !6072)
!6075 = !DILocation(line: 3789, column: 4, scope: !6072)
!6076 = !DILocation(line: 3792, column: 1, scope: !5521)
!6077 = distinct !DISubprogram(name: "translate_colour", scope: !243, file: !243, line: 864, type: !6078, isLocal: true, isDefinition: true, scopeLine: 865, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!6078 = !DISubroutineType(types: !6079)
!6079 = !{!193, !193}
!6080 = !DILocalVariable(name: "colour", arg: 1, scope: !6077, file: !243, line: 864, type: !193)
!6081 = !DILocation(line: 864, column: 25, scope: !6077)
!6082 = !DILocalVariable(name: "pc", scope: !6077, file: !243, line: 866, type: !4417)
!6083 = !DILocation(line: 866, column: 14, scope: !6077)
!6084 = !DILocation(line: 867, column: 10, scope: !6077)
!6085 = !DILocation(line: 867, column: 2, scope: !6077)
!6086 = !DILocation(line: 870, column: 17, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !243, line: 870, column: 4)
!6088 = distinct !DILexicalBlock(scope: !6077, file: !243, line: 868, column: 2)
!6089 = !DILocation(line: 870, column: 24, scope: !6087)
!6090 = !DILocation(line: 870, column: 30, scope: !6087)
!6091 = !DILocation(line: 870, column: 42, scope: !6087)
!6092 = !DILocation(line: 870, column: 49, scope: !6087)
!6093 = !DILocation(line: 870, column: 56, scope: !6087)
!6094 = !DILocation(line: 870, column: 38, scope: !6087)
!6095 = !DILocation(line: 870, column: 9, scope: !6087)
!6096 = !DILocation(line: 870, column: 13, scope: !6087)
!6097 = !DILocation(line: 870, column: 77, scope: !6087)
!6098 = !DILocation(line: 870, column: 84, scope: !6087)
!6099 = !DILocation(line: 870, column: 90, scope: !6087)
!6100 = !DILocation(line: 870, column: 102, scope: !6087)
!6101 = !DILocation(line: 870, column: 109, scope: !6087)
!6102 = !DILocation(line: 870, column: 115, scope: !6087)
!6103 = !DILocation(line: 870, column: 98, scope: !6087)
!6104 = !DILocation(line: 870, column: 67, scope: !6087)
!6105 = !DILocation(line: 870, column: 73, scope: !6087)
!6106 = !DILocation(line: 870, column: 135, scope: !6087)
!6107 = !DILocation(line: 870, column: 142, scope: !6087)
!6108 = !DILocation(line: 870, column: 148, scope: !6087)
!6109 = !DILocation(line: 870, column: 160, scope: !6087)
!6110 = !DILocation(line: 870, column: 167, scope: !6087)
!6111 = !DILocation(line: 870, column: 173, scope: !6087)
!6112 = !DILocation(line: 870, column: 156, scope: !6087)
!6113 = !DILocation(line: 870, column: 126, scope: !6087)
!6114 = !DILocation(line: 870, column: 131, scope: !6087)
!6115 = !DILocation(line: 871, column: 4, scope: !6088)
!6116 = !DILocation(line: 873, column: 17, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6088, file: !243, line: 873, column: 4)
!6118 = !DILocation(line: 873, column: 24, scope: !6117)
!6119 = !DILocation(line: 873, column: 30, scope: !6117)
!6120 = !DILocation(line: 873, column: 42, scope: !6117)
!6121 = !DILocation(line: 873, column: 49, scope: !6117)
!6122 = !DILocation(line: 873, column: 56, scope: !6117)
!6123 = !DILocation(line: 873, column: 38, scope: !6117)
!6124 = !DILocation(line: 873, column: 9, scope: !6117)
!6125 = !DILocation(line: 873, column: 13, scope: !6117)
!6126 = !DILocation(line: 873, column: 77, scope: !6117)
!6127 = !DILocation(line: 873, column: 84, scope: !6117)
!6128 = !DILocation(line: 873, column: 90, scope: !6117)
!6129 = !DILocation(line: 873, column: 102, scope: !6117)
!6130 = !DILocation(line: 873, column: 109, scope: !6117)
!6131 = !DILocation(line: 873, column: 115, scope: !6117)
!6132 = !DILocation(line: 873, column: 98, scope: !6117)
!6133 = !DILocation(line: 873, column: 67, scope: !6117)
!6134 = !DILocation(line: 873, column: 73, scope: !6117)
!6135 = !DILocation(line: 873, column: 135, scope: !6117)
!6136 = !DILocation(line: 873, column: 142, scope: !6117)
!6137 = !DILocation(line: 873, column: 148, scope: !6117)
!6138 = !DILocation(line: 873, column: 160, scope: !6117)
!6139 = !DILocation(line: 873, column: 167, scope: !6117)
!6140 = !DILocation(line: 873, column: 173, scope: !6117)
!6141 = !DILocation(line: 873, column: 156, scope: !6117)
!6142 = !DILocation(line: 873, column: 126, scope: !6117)
!6143 = !DILocation(line: 873, column: 131, scope: !6117)
!6144 = !DILocation(line: 874, column: 4, scope: !6088)
!6145 = !DILocation(line: 877, column: 17, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6088, file: !243, line: 877, column: 4)
!6147 = !DILocation(line: 877, column: 24, scope: !6146)
!6148 = !DILocation(line: 877, column: 36, scope: !6146)
!6149 = !DILocation(line: 877, column: 9, scope: !6146)
!6150 = !DILocation(line: 877, column: 14, scope: !6146)
!6151 = !DILocation(line: 877, column: 55, scope: !6146)
!6152 = !DILocation(line: 877, column: 62, scope: !6146)
!6153 = !DILocation(line: 877, column: 74, scope: !6146)
!6154 = !DILocation(line: 877, column: 46, scope: !6146)
!6155 = !DILocation(line: 877, column: 52, scope: !6146)
!6156 = !DILocation(line: 877, column: 90, scope: !6146)
!6157 = !DILocation(line: 877, column: 97, scope: !6146)
!6158 = !DILocation(line: 877, column: 83, scope: !6146)
!6159 = !DILocation(line: 877, column: 87, scope: !6146)
!6160 = !DILocation(line: 878, column: 4, scope: !6088)
!6161 = !DILocation(line: 881, column: 7, scope: !6088)
!6162 = !DILocation(line: 881, column: 11, scope: !6088)
!6163 = !DILocation(line: 882, column: 7, scope: !6088)
!6164 = !DILocation(line: 882, column: 13, scope: !6088)
!6165 = !DILocation(line: 883, column: 7, scope: !6088)
!6166 = !DILocation(line: 883, column: 12, scope: !6088)
!6167 = !DILocation(line: 884, column: 4, scope: !6088)
!6168 = !DILocation(line: 886, column: 14, scope: !6077)
!6169 = !DILocation(line: 886, column: 21, scope: !6077)
!6170 = !DILocation(line: 886, column: 18, scope: !6077)
!6171 = !DILocation(line: 886, column: 39, scope: !6077)
!6172 = !DILocation(line: 886, column: 36, scope: !6077)
!6173 = !DILocation(line: 886, column: 61, scope: !6077)
!6174 = !DILocation(line: 886, column: 70, scope: !6077)
!6175 = !DILocation(line: 886, column: 67, scope: !6077)
!6176 = !DILocation(line: 886, column: 90, scope: !6077)
!6177 = !DILocation(line: 886, column: 87, scope: !6077)
!6178 = !DILocation(line: 886, column: 54, scope: !6077)
!6179 = !DILocation(line: 886, column: 114, scope: !6077)
!6180 = !DILocation(line: 886, column: 122, scope: !6077)
!6181 = !DILocation(line: 886, column: 119, scope: !6077)
!6182 = !DILocation(line: 886, column: 141, scope: !6077)
!6183 = !DILocation(line: 886, column: 138, scope: !6077)
!6184 = !DILocation(line: 886, column: 107, scope: !6077)
!6185 = !DILocation(line: 886, column: 2, scope: !6077)
!6186 = distinct !DISubprogram(name: "ui_screenblt", scope: !243, file: !243, line: 3795, type: !6187, isLocal: false, isDefinition: true, scopeLine: 3798, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!6187 = !DISubroutineType(types: !6188)
!6188 = !{null, !47, !45, !45, !45, !45, !45, !45}
!6189 = !DILocalVariable(name: "opcode", arg: 1, scope: !6186, file: !243, line: 3795, type: !47)
!6190 = !DILocation(line: 3795, column: 20, scope: !6186)
!6191 = !DILocalVariable(name: "x", arg: 2, scope: !6186, file: !243, line: 3796, type: !45)
!6192 = !DILocation(line: 3796, column: 22, scope: !6186)
!6193 = !DILocalVariable(name: "y", arg: 3, scope: !6186, file: !243, line: 3796, type: !45)
!6194 = !DILocation(line: 3796, column: 29, scope: !6186)
!6195 = !DILocalVariable(name: "cx", arg: 4, scope: !6186, file: !243, line: 3796, type: !45)
!6196 = !DILocation(line: 3796, column: 36, scope: !6186)
!6197 = !DILocalVariable(name: "cy", arg: 5, scope: !6186, file: !243, line: 3796, type: !45)
!6198 = !DILocation(line: 3796, column: 44, scope: !6186)
!6199 = !DILocalVariable(name: "srcx", arg: 6, scope: !6186, file: !243, line: 3797, type: !45)
!6200 = !DILocation(line: 3797, column: 21, scope: !6186)
!6201 = !DILocalVariable(name: "srcy", arg: 7, scope: !6186, file: !243, line: 3797, type: !45)
!6202 = !DILocation(line: 3797, column: 31, scope: !6186)
!6203 = !DILocation(line: 3799, column: 8, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !243, line: 3799, column: 8)
!6205 = distinct !DILexicalBlock(scope: !6186, file: !243, line: 3799, column: 2)
!6206 = !DILocation(line: 3799, column: 15, scope: !6204)
!6207 = !DILocation(line: 3799, column: 8, scope: !6205)
!6208 = !DILocation(line: 3799, column: 36, scope: !6209)
!6209 = !DILexicalBlockFile(scope: !6204, file: !243, discriminator: 1)
!6210 = !DILocation(line: 3799, column: 47, scope: !6209)
!6211 = !DILocation(line: 3799, column: 62, scope: !6209)
!6212 = !DILocation(line: 3799, column: 53, scope: !6209)
!6213 = !DILocation(line: 3799, column: 23, scope: !6209)
!6214 = !DILocation(line: 3800, column: 6, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6186, file: !243, line: 3800, column: 6)
!6216 = !DILocation(line: 3800, column: 6, scope: !6186)
!6217 = !DILocation(line: 3802, column: 13, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6215, file: !243, line: 3801, column: 2)
!6219 = !DILocation(line: 3802, column: 24, scope: !6218)
!6220 = !DILocation(line: 3802, column: 39, scope: !6221)
!6221 = !DILexicalBlockFile(scope: !6218, file: !243, discriminator: 1)
!6222 = !DILocation(line: 3802, column: 24, scope: !6221)
!6223 = !DILocation(line: 3802, column: 47, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !6218, file: !243, discriminator: 2)
!6225 = !DILocation(line: 3802, column: 24, scope: !6224)
!6226 = !DILocation(line: 3802, column: 24, scope: !6227)
!6227 = !DILexicalBlockFile(scope: !6218, file: !243, discriminator: 3)
!6228 = !DILocation(line: 3803, column: 6, scope: !6218)
!6229 = !DILocation(line: 3803, column: 13, scope: !6218)
!6230 = !DILocation(line: 3803, column: 19, scope: !6218)
!6231 = !DILocation(line: 3803, column: 25, scope: !6218)
!6232 = !DILocation(line: 3803, column: 31, scope: !6218)
!6233 = !DILocation(line: 3803, column: 35, scope: !6218)
!6234 = !DILocation(line: 3803, column: 39, scope: !6218)
!6235 = !DILocation(line: 3803, column: 42, scope: !6218)
!6236 = !DILocation(line: 3802, column: 3, scope: !6227)
!6237 = !DILocation(line: 3804, column: 13, scope: !6218)
!6238 = !DILocation(line: 3804, column: 24, scope: !6218)
!6239 = !DILocation(line: 3804, column: 37, scope: !6218)
!6240 = !DILocation(line: 3804, column: 50, scope: !6218)
!6241 = !DILocation(line: 3804, column: 56, scope: !6218)
!6242 = !DILocation(line: 3804, column: 62, scope: !6218)
!6243 = !DILocation(line: 3804, column: 68, scope: !6218)
!6244 = !DILocation(line: 3804, column: 72, scope: !6218)
!6245 = !DILocation(line: 3804, column: 76, scope: !6218)
!6246 = !DILocation(line: 3804, column: 79, scope: !6218)
!6247 = !DILocation(line: 3804, column: 3, scope: !6218)
!6248 = !DILocation(line: 3805, column: 2, scope: !6218)
!6249 = !DILocation(line: 3808, column: 13, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6215, file: !243, line: 3807, column: 2)
!6251 = !DILocation(line: 3808, column: 24, scope: !6250)
!6252 = !DILocation(line: 3808, column: 31, scope: !6250)
!6253 = !DILocation(line: 3808, column: 38, scope: !6250)
!6254 = !DILocation(line: 3808, column: 44, scope: !6250)
!6255 = !DILocation(line: 3808, column: 50, scope: !6250)
!6256 = !DILocation(line: 3808, column: 56, scope: !6250)
!6257 = !DILocation(line: 3808, column: 60, scope: !6250)
!6258 = !DILocation(line: 3808, column: 64, scope: !6250)
!6259 = !DILocation(line: 3808, column: 67, scope: !6250)
!6260 = !DILocation(line: 3808, column: 3, scope: !6250)
!6261 = !DILocation(line: 3811, column: 2, scope: !6186)
!6262 = distinct !{!6262, !6261}
!6263 = !DILocalVariable(name: "sw", scope: !6264, file: !243, line: 3811, type: !360)
!6264 = distinct !DILexicalBlock(scope: !6186, file: !243, line: 3811, column: 5)
!6265 = !DILocation(line: 3811, column: 24, scope: !6264)
!6266 = !DILocalVariable(name: "rect", scope: !6264, file: !243, line: 3811, type: !274)
!6267 = !DILocation(line: 3811, column: 39, scope: !6264)
!6268 = !DILocation(line: 3811, column: 50, scope: !6269)
!6269 = !DILexicalBlockFile(scope: !6270, file: !243, discriminator: 1)
!6270 = distinct !DILexicalBlock(scope: !6264, file: !243, line: 3811, column: 49)
!6271 = !DILocation(line: 3811, column: 49, scope: !6269)
!6272 = !DILocation(line: 3811, column: 70, scope: !6273)
!6273 = !DILexicalBlockFile(scope: !6270, file: !243, discriminator: 2)
!6274 = !DILocation(line: 3811, column: 87, scope: !6275)
!6275 = !DILexicalBlockFile(scope: !6276, file: !243, discriminator: 3)
!6276 = distinct !DILexicalBlock(scope: !6264, file: !243, line: 3811, column: 77)
!6277 = !DILocation(line: 3811, column: 85, scope: !6275)
!6278 = !DILocation(line: 3811, column: 82, scope: !6275)
!6279 = !DILocation(line: 3811, column: 107, scope: !6280)
!6280 = !DILexicalBlockFile(scope: !6281, file: !243, discriminator: 4)
!6281 = distinct !DILexicalBlock(scope: !6276, file: !243, line: 3811, column: 77)
!6282 = !DILocation(line: 3811, column: 77, scope: !6280)
!6283 = !DILocation(line: 3811, column: 154, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !6285, file: !243, discriminator: 5)
!6285 = distinct !DILexicalBlock(scope: !6281, file: !243, line: 3811, column: 126)
!6286 = !DILocation(line: 3811, column: 137, scope: !6284)
!6287 = !DILocation(line: 3811, column: 158, scope: !6284)
!6288 = !DILocation(line: 3811, column: 162, scope: !6284)
!6289 = !DILocation(line: 3811, column: 156, scope: !6284)
!6290 = !DILocation(line: 3811, column: 133, scope: !6284)
!6291 = !DILocation(line: 3811, column: 135, scope: !6284)
!6292 = !DILocation(line: 3811, column: 197, scope: !6284)
!6293 = !DILocation(line: 3811, column: 180, scope: !6284)
!6294 = !DILocation(line: 3811, column: 201, scope: !6284)
!6295 = !DILocation(line: 3811, column: 205, scope: !6284)
!6296 = !DILocation(line: 3811, column: 199, scope: !6284)
!6297 = !DILocation(line: 3811, column: 176, scope: !6284)
!6298 = !DILocation(line: 3811, column: 178, scope: !6284)
!6299 = !DILocation(line: 3811, column: 244, scope: !6284)
!6300 = !DILocation(line: 3811, column: 219, scope: !6284)
!6301 = !DILocation(line: 3811, column: 225, scope: !6284)
!6302 = !DILocation(line: 3811, column: 282, scope: !6284)
!6303 = !DILocation(line: 3811, column: 256, scope: !6284)
!6304 = !DILocation(line: 3811, column: 263, scope: !6284)
!6305 = !DILocation(line: 3811, column: 309, scope: !6284)
!6306 = !DILocation(line: 3811, column: 320, scope: !6284)
!6307 = !DILocation(line: 3811, column: 290, scope: !6284)
!6308 = !DILocation(line: 3811, column: 15, scope: !6284)
!6309 = !DILocation(line: 3811, column: 26, scope: !6284)
!6310 = !DILocation(line: 3811, column: 43, scope: !6311)
!6311 = !DILexicalBlockFile(scope: !6285, file: !243, discriminator: 6)
!6312 = !DILocation(line: 3811, column: 26, scope: !6311)
!6313 = !DILocation(line: 3811, column: 57, scope: !6314)
!6314 = !DILexicalBlockFile(scope: !6285, file: !243, discriminator: 7)
!6315 = !DILocation(line: 3811, column: 26, scope: !6314)
!6316 = !DILocation(line: 3811, column: 26, scope: !6317)
!6317 = !DILexicalBlockFile(scope: !6285, file: !243, discriminator: 8)
!6318 = !DILocation(line: 3811, column: 64, scope: !6317)
!6319 = !DILocation(line: 3811, column: 68, scope: !6317)
!6320 = !DILocation(line: 3811, column: 73, scope: !6317)
!6321 = !DILocation(line: 3811, column: 79, scope: !6317)
!6322 = !DILocation(line: 3811, column: 82, scope: !6317)
!6323 = !DILocation(line: 3811, column: 85, scope: !6317)
!6324 = !DILocation(line: 3811, column: 89, scope: !6317)
!6325 = !DILocation(line: 3811, column: 93, scope: !6317)
!6326 = !DILocation(line: 3811, column: 97, scope: !6317)
!6327 = !DILocation(line: 3811, column: 101, scope: !6317)
!6328 = !DILocation(line: 3811, column: 95, scope: !6317)
!6329 = !DILocation(line: 3811, column: 110, scope: !6317)
!6330 = !DILocation(line: 3811, column: 114, scope: !6317)
!6331 = !DILocation(line: 3811, column: 118, scope: !6317)
!6332 = !DILocation(line: 3811, column: 112, scope: !6317)
!6333 = !DILocation(line: 3811, column: 4, scope: !6317)
!6334 = !DILocation(line: 3811, column: 128, scope: !6317)
!6335 = !DILocation(line: 3811, column: 116, scope: !6336)
!6336 = !DILexicalBlockFile(scope: !6281, file: !243, discriminator: 9)
!6337 = !DILocation(line: 3811, column: 120, scope: !6336)
!6338 = !DILocation(line: 3811, column: 114, scope: !6336)
!6339 = !DILocation(line: 3811, column: 77, scope: !6336)
!6340 = distinct !{!6340, !6341}
!6341 = !DILocation(line: 3811, column: 77, scope: !6264)
!6342 = !DILocation(line: 3811, column: 149, scope: !6343)
!6343 = !DILexicalBlockFile(scope: !6264, file: !243, discriminator: 10)
!6344 = !DILocation(line: 3811, column: 160, scope: !6343)
!6345 = !DILocation(line: 3811, column: 130, scope: !6343)
!6346 = !DILocation(line: 3811, column: 4, scope: !6343)
!6347 = !DILocation(line: 3815, column: 8, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6349, file: !243, line: 3815, column: 8)
!6349 = distinct !DILexicalBlock(scope: !6186, file: !243, line: 3815, column: 2)
!6350 = !DILocation(line: 3815, column: 15, scope: !6348)
!6351 = !DILocation(line: 3815, column: 8, scope: !6349)
!6352 = !DILocation(line: 3815, column: 36, scope: !6353)
!6353 = !DILexicalBlockFile(scope: !6348, file: !243, discriminator: 1)
!6354 = !DILocation(line: 3815, column: 47, scope: !6353)
!6355 = !DILocation(line: 3815, column: 23, scope: !6353)
!6356 = !DILocation(line: 3816, column: 1, scope: !6186)
!6357 = distinct !DISubprogram(name: "ui_memblt", scope: !243, file: !243, line: 3819, type: !6358, isLocal: false, isDefinition: true, scopeLine: 3822, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!6358 = !DISubroutineType(types: !6359)
!6359 = !{null, !47, !45, !45, !45, !45, !188, !45, !45}
!6360 = !DILocalVariable(name: "opcode", arg: 1, scope: !6357, file: !243, line: 3819, type: !47)
!6361 = !DILocation(line: 3819, column: 17, scope: !6357)
!6362 = !DILocalVariable(name: "x", arg: 2, scope: !6357, file: !243, line: 3820, type: !45)
!6363 = !DILocation(line: 3820, column: 19, scope: !6357)
!6364 = !DILocalVariable(name: "y", arg: 3, scope: !6357, file: !243, line: 3820, type: !45)
!6365 = !DILocation(line: 3820, column: 26, scope: !6357)
!6366 = !DILocalVariable(name: "cx", arg: 4, scope: !6357, file: !243, line: 3820, type: !45)
!6367 = !DILocation(line: 3820, column: 33, scope: !6357)
!6368 = !DILocalVariable(name: "cy", arg: 5, scope: !6357, file: !243, line: 3820, type: !45)
!6369 = !DILocation(line: 3820, column: 41, scope: !6357)
!6370 = !DILocalVariable(name: "src", arg: 6, scope: !6357, file: !243, line: 3821, type: !188)
!6371 = !DILocation(line: 3821, column: 25, scope: !6357)
!6372 = !DILocalVariable(name: "srcx", arg: 7, scope: !6357, file: !243, line: 3821, type: !45)
!6373 = !DILocation(line: 3821, column: 34, scope: !6357)
!6374 = !DILocalVariable(name: "srcy", arg: 8, scope: !6357, file: !243, line: 3821, type: !45)
!6375 = !DILocation(line: 3821, column: 44, scope: !6357)
!6376 = !DILocation(line: 3823, column: 8, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6378, file: !243, line: 3823, column: 8)
!6378 = distinct !DILexicalBlock(scope: !6357, file: !243, line: 3823, column: 2)
!6379 = !DILocation(line: 3823, column: 15, scope: !6377)
!6380 = !DILocation(line: 3823, column: 8, scope: !6378)
!6381 = !DILocation(line: 3823, column: 36, scope: !6382)
!6382 = !DILexicalBlockFile(scope: !6377, file: !243, discriminator: 1)
!6383 = !DILocation(line: 3823, column: 47, scope: !6382)
!6384 = !DILocation(line: 3823, column: 62, scope: !6382)
!6385 = !DILocation(line: 3823, column: 53, scope: !6382)
!6386 = !DILocation(line: 3823, column: 23, scope: !6382)
!6387 = !DILocation(line: 3824, column: 12, scope: !6357)
!6388 = !DILocation(line: 3824, column: 32, scope: !6357)
!6389 = !DILocation(line: 3824, column: 23, scope: !6357)
!6390 = !DILocation(line: 3824, column: 37, scope: !6357)
!6391 = !DILocation(line: 3824, column: 44, scope: !6357)
!6392 = !DILocation(line: 3824, column: 50, scope: !6357)
!6393 = !DILocation(line: 3824, column: 56, scope: !6357)
!6394 = !DILocation(line: 3824, column: 62, scope: !6357)
!6395 = !DILocation(line: 3824, column: 66, scope: !6357)
!6396 = !DILocation(line: 3824, column: 70, scope: !6357)
!6397 = !DILocation(line: 3824, column: 73, scope: !6357)
!6398 = !DILocation(line: 3824, column: 2, scope: !6357)
!6399 = !DILocation(line: 3825, column: 2, scope: !6357)
!6400 = distinct !{!6400, !6399}
!6401 = !DILocalVariable(name: "sw", scope: !6402, file: !243, line: 3825, type: !360)
!6402 = distinct !DILexicalBlock(scope: !6357, file: !243, line: 3825, column: 5)
!6403 = !DILocation(line: 3825, column: 24, scope: !6402)
!6404 = !DILocalVariable(name: "rect", scope: !6402, file: !243, line: 3825, type: !274)
!6405 = !DILocation(line: 3825, column: 39, scope: !6402)
!6406 = !DILocation(line: 3825, column: 50, scope: !6407)
!6407 = !DILexicalBlockFile(scope: !6408, file: !243, discriminator: 1)
!6408 = distinct !DILexicalBlock(scope: !6402, file: !243, line: 3825, column: 49)
!6409 = !DILocation(line: 3825, column: 49, scope: !6407)
!6410 = !DILocation(line: 3825, column: 70, scope: !6411)
!6411 = !DILexicalBlockFile(scope: !6408, file: !243, discriminator: 2)
!6412 = !DILocation(line: 3825, column: 87, scope: !6413)
!6413 = !DILexicalBlockFile(scope: !6414, file: !243, discriminator: 3)
!6414 = distinct !DILexicalBlock(scope: !6402, file: !243, line: 3825, column: 77)
!6415 = !DILocation(line: 3825, column: 85, scope: !6413)
!6416 = !DILocation(line: 3825, column: 82, scope: !6413)
!6417 = !DILocation(line: 3825, column: 107, scope: !6418)
!6418 = !DILexicalBlockFile(scope: !6419, file: !243, discriminator: 4)
!6419 = distinct !DILexicalBlock(scope: !6414, file: !243, line: 3825, column: 77)
!6420 = !DILocation(line: 3825, column: 77, scope: !6418)
!6421 = !DILocation(line: 3825, column: 154, scope: !6422)
!6422 = !DILexicalBlockFile(scope: !6423, file: !243, discriminator: 5)
!6423 = distinct !DILexicalBlock(scope: !6419, file: !243, line: 3825, column: 126)
!6424 = !DILocation(line: 3825, column: 137, scope: !6422)
!6425 = !DILocation(line: 3825, column: 158, scope: !6422)
!6426 = !DILocation(line: 3825, column: 162, scope: !6422)
!6427 = !DILocation(line: 3825, column: 156, scope: !6422)
!6428 = !DILocation(line: 3825, column: 133, scope: !6422)
!6429 = !DILocation(line: 3825, column: 135, scope: !6422)
!6430 = !DILocation(line: 3825, column: 197, scope: !6422)
!6431 = !DILocation(line: 3825, column: 180, scope: !6422)
!6432 = !DILocation(line: 3825, column: 201, scope: !6422)
!6433 = !DILocation(line: 3825, column: 205, scope: !6422)
!6434 = !DILocation(line: 3825, column: 199, scope: !6422)
!6435 = !DILocation(line: 3825, column: 176, scope: !6422)
!6436 = !DILocation(line: 3825, column: 178, scope: !6422)
!6437 = !DILocation(line: 3825, column: 244, scope: !6422)
!6438 = !DILocation(line: 3825, column: 219, scope: !6422)
!6439 = !DILocation(line: 3825, column: 225, scope: !6422)
!6440 = !DILocation(line: 3825, column: 282, scope: !6422)
!6441 = !DILocation(line: 3825, column: 256, scope: !6422)
!6442 = !DILocation(line: 3825, column: 263, scope: !6422)
!6443 = !DILocation(line: 3825, column: 309, scope: !6422)
!6444 = !DILocation(line: 3825, column: 320, scope: !6422)
!6445 = !DILocation(line: 3825, column: 290, scope: !6422)
!6446 = !DILocation(line: 3825, column: 15, scope: !6422)
!6447 = !DILocation(line: 3825, column: 35, scope: !6422)
!6448 = !DILocation(line: 3825, column: 26, scope: !6422)
!6449 = !DILocation(line: 3825, column: 40, scope: !6422)
!6450 = !DILocation(line: 3825, column: 44, scope: !6422)
!6451 = !DILocation(line: 3825, column: 49, scope: !6422)
!6452 = !DILocation(line: 3825, column: 55, scope: !6422)
!6453 = !DILocation(line: 3825, column: 61, scope: !6422)
!6454 = !DILocation(line: 3825, column: 67, scope: !6422)
!6455 = !DILocation(line: 3825, column: 71, scope: !6422)
!6456 = !DILocation(line: 3825, column: 75, scope: !6422)
!6457 = !DILocation(line: 3825, column: 79, scope: !6422)
!6458 = !DILocation(line: 3825, column: 83, scope: !6422)
!6459 = !DILocation(line: 3825, column: 77, scope: !6422)
!6460 = !DILocation(line: 3825, column: 92, scope: !6422)
!6461 = !DILocation(line: 3825, column: 96, scope: !6422)
!6462 = !DILocation(line: 3825, column: 100, scope: !6422)
!6463 = !DILocation(line: 3825, column: 94, scope: !6422)
!6464 = !DILocation(line: 3825, column: 4, scope: !6465)
!6465 = !DILexicalBlockFile(scope: !6422, file: !243, discriminator: 8)
!6466 = !DILocation(line: 3825, column: 110, scope: !6422)
!6467 = !DILocation(line: 3825, column: 116, scope: !6468)
!6468 = !DILexicalBlockFile(scope: !6419, file: !243, discriminator: 6)
!6469 = !DILocation(line: 3825, column: 120, scope: !6468)
!6470 = !DILocation(line: 3825, column: 114, scope: !6468)
!6471 = !DILocation(line: 3825, column: 77, scope: !6468)
!6472 = distinct !{!6472, !6473}
!6473 = !DILocation(line: 3825, column: 77, scope: !6402)
!6474 = !DILocation(line: 3825, column: 131, scope: !6475)
!6475 = !DILexicalBlockFile(scope: !6402, file: !243, discriminator: 7)
!6476 = !DILocation(line: 3825, column: 142, scope: !6475)
!6477 = !DILocation(line: 3825, column: 112, scope: !6475)
!6478 = !DILocation(line: 3825, column: 4, scope: !6475)
!6479 = !DILocation(line: 3828, column: 6, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6357, file: !243, line: 3828, column: 6)
!6481 = !DILocation(line: 3828, column: 6, scope: !6357)
!6482 = !DILocation(line: 3829, column: 13, scope: !6480)
!6483 = !DILocation(line: 3829, column: 33, scope: !6480)
!6484 = !DILocation(line: 3829, column: 24, scope: !6480)
!6485 = !DILocation(line: 3829, column: 38, scope: !6480)
!6486 = !DILocation(line: 3829, column: 51, scope: !6480)
!6487 = !DILocation(line: 3829, column: 57, scope: !6480)
!6488 = !DILocation(line: 3829, column: 63, scope: !6480)
!6489 = !DILocation(line: 3829, column: 69, scope: !6480)
!6490 = !DILocation(line: 3829, column: 73, scope: !6480)
!6491 = !DILocation(line: 3829, column: 77, scope: !6480)
!6492 = !DILocation(line: 3829, column: 80, scope: !6480)
!6493 = !DILocation(line: 3829, column: 3, scope: !6480)
!6494 = !DILocation(line: 3830, column: 8, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6496, file: !243, line: 3830, column: 8)
!6496 = distinct !DILexicalBlock(scope: !6357, file: !243, line: 3830, column: 2)
!6497 = !DILocation(line: 3830, column: 15, scope: !6495)
!6498 = !DILocation(line: 3830, column: 8, scope: !6496)
!6499 = !DILocation(line: 3830, column: 36, scope: !6500)
!6500 = !DILexicalBlockFile(scope: !6495, file: !243, discriminator: 1)
!6501 = !DILocation(line: 3830, column: 47, scope: !6500)
!6502 = !DILocation(line: 3830, column: 23, scope: !6500)
!6503 = !DILocation(line: 3831, column: 1, scope: !6357)
!6504 = distinct !DISubprogram(name: "ui_triblt", scope: !243, file: !243, line: 3834, type: !6505, isLocal: false, isDefinition: true, scopeLine: 3838, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!6505 = !DISubroutineType(types: !6506)
!6506 = !{null, !47, !45, !45, !45, !45, !188, !45, !45, !5524, !193, !193}
!6507 = !DILocalVariable(name: "opcode", arg: 1, scope: !6504, file: !243, line: 3834, type: !47)
!6508 = !DILocation(line: 3834, column: 17, scope: !6504)
!6509 = !DILocalVariable(name: "x", arg: 2, scope: !6504, file: !243, line: 3835, type: !45)
!6510 = !DILocation(line: 3835, column: 19, scope: !6504)
!6511 = !DILocalVariable(name: "y", arg: 3, scope: !6504, file: !243, line: 3835, type: !45)
!6512 = !DILocation(line: 3835, column: 26, scope: !6504)
!6513 = !DILocalVariable(name: "cx", arg: 4, scope: !6504, file: !243, line: 3835, type: !45)
!6514 = !DILocation(line: 3835, column: 33, scope: !6504)
!6515 = !DILocalVariable(name: "cy", arg: 5, scope: !6504, file: !243, line: 3835, type: !45)
!6516 = !DILocation(line: 3835, column: 41, scope: !6504)
!6517 = !DILocalVariable(name: "src", arg: 6, scope: !6504, file: !243, line: 3836, type: !188)
!6518 = !DILocation(line: 3836, column: 25, scope: !6504)
!6519 = !DILocalVariable(name: "srcx", arg: 7, scope: !6504, file: !243, line: 3836, type: !45)
!6520 = !DILocation(line: 3836, column: 34, scope: !6504)
!6521 = !DILocalVariable(name: "srcy", arg: 8, scope: !6504, file: !243, line: 3836, type: !45)
!6522 = !DILocation(line: 3836, column: 44, scope: !6504)
!6523 = !DILocalVariable(name: "brush", arg: 9, scope: !6504, file: !243, line: 3837, type: !5524)
!6524 = !DILocation(line: 3837, column: 24, scope: !6504)
!6525 = !DILocalVariable(name: "bgcolour", arg: 10, scope: !6504, file: !243, line: 3837, type: !193)
!6526 = !DILocation(line: 3837, column: 38, scope: !6504)
!6527 = !DILocalVariable(name: "fgcolour", arg: 11, scope: !6504, file: !243, line: 3837, type: !193)
!6528 = !DILocation(line: 3837, column: 55, scope: !6504)
!6529 = !DILocation(line: 3842, column: 10, scope: !6504)
!6530 = !DILocation(line: 3842, column: 2, scope: !6504)
!6531 = !DILocation(line: 3845, column: 19, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6504, file: !243, line: 3843, column: 2)
!6533 = !DILocation(line: 3845, column: 22, scope: !6532)
!6534 = !DILocation(line: 3845, column: 25, scope: !6532)
!6535 = !DILocation(line: 3845, column: 29, scope: !6532)
!6536 = !DILocation(line: 3845, column: 33, scope: !6532)
!6537 = !DILocation(line: 3845, column: 38, scope: !6532)
!6538 = !DILocation(line: 3845, column: 44, scope: !6532)
!6539 = !DILocation(line: 3845, column: 4, scope: !6532)
!6540 = !DILocation(line: 3846, column: 19, scope: !6532)
!6541 = !DILocation(line: 3846, column: 22, scope: !6532)
!6542 = !DILocation(line: 3846, column: 25, scope: !6532)
!6543 = !DILocation(line: 3846, column: 29, scope: !6532)
!6544 = !DILocation(line: 3846, column: 33, scope: !6532)
!6545 = !DILocation(line: 3846, column: 40, scope: !6532)
!6546 = !DILocation(line: 3846, column: 50, scope: !6532)
!6547 = !DILocation(line: 3846, column: 4, scope: !6532)
!6548 = !DILocation(line: 3847, column: 4, scope: !6532)
!6549 = !DILocation(line: 3850, column: 19, scope: !6532)
!6550 = !DILocation(line: 3850, column: 22, scope: !6532)
!6551 = !DILocation(line: 3850, column: 25, scope: !6532)
!6552 = !DILocation(line: 3850, column: 29, scope: !6532)
!6553 = !DILocation(line: 3850, column: 33, scope: !6532)
!6554 = !DILocation(line: 3850, column: 40, scope: !6532)
!6555 = !DILocation(line: 3850, column: 50, scope: !6532)
!6556 = !DILocation(line: 3850, column: 4, scope: !6532)
!6557 = !DILocation(line: 3851, column: 19, scope: !6532)
!6558 = !DILocation(line: 3851, column: 22, scope: !6532)
!6559 = !DILocation(line: 3851, column: 25, scope: !6532)
!6560 = !DILocation(line: 3851, column: 29, scope: !6532)
!6561 = !DILocation(line: 3851, column: 33, scope: !6532)
!6562 = !DILocation(line: 3851, column: 38, scope: !6532)
!6563 = !DILocation(line: 3851, column: 44, scope: !6532)
!6564 = !DILocation(line: 3851, column: 4, scope: !6532)
!6565 = !DILocation(line: 3852, column: 19, scope: !6532)
!6566 = !DILocation(line: 3852, column: 22, scope: !6532)
!6567 = !DILocation(line: 3852, column: 25, scope: !6532)
!6568 = !DILocation(line: 3852, column: 29, scope: !6532)
!6569 = !DILocation(line: 3852, column: 33, scope: !6532)
!6570 = !DILocation(line: 3852, column: 40, scope: !6532)
!6571 = !DILocation(line: 3852, column: 50, scope: !6532)
!6572 = !DILocation(line: 3852, column: 4, scope: !6532)
!6573 = !DILocation(line: 3853, column: 4, scope: !6532)
!6574 = !DILocation(line: 3856, column: 19, scope: !6532)
!6575 = !DILocation(line: 3856, column: 22, scope: !6532)
!6576 = !DILocation(line: 3856, column: 25, scope: !6532)
!6577 = !DILocation(line: 3856, column: 29, scope: !6532)
!6578 = !DILocation(line: 3856, column: 33, scope: !6532)
!6579 = !DILocation(line: 3856, column: 38, scope: !6532)
!6580 = !DILocation(line: 3856, column: 44, scope: !6532)
!6581 = !DILocation(line: 3856, column: 4, scope: !6532)
!6582 = !DILocation(line: 3857, column: 19, scope: !6532)
!6583 = !DILocation(line: 3857, column: 22, scope: !6532)
!6584 = !DILocation(line: 3857, column: 25, scope: !6532)
!6585 = !DILocation(line: 3857, column: 29, scope: !6532)
!6586 = !DILocation(line: 3857, column: 33, scope: !6532)
!6587 = !DILocation(line: 3857, column: 40, scope: !6532)
!6588 = !DILocation(line: 3857, column: 50, scope: !6532)
!6589 = !DILocation(line: 3857, column: 4, scope: !6532)
!6590 = !DILocation(line: 3858, column: 4, scope: !6532)
!6591 = !DILocation(line: 3861, column: 62, scope: !6532)
!6592 = !DILocation(line: 3861, column: 4, scope: !6532)
!6593 = !DILocation(line: 3862, column: 19, scope: !6532)
!6594 = !DILocation(line: 3862, column: 22, scope: !6532)
!6595 = !DILocation(line: 3862, column: 25, scope: !6532)
!6596 = !DILocation(line: 3862, column: 29, scope: !6532)
!6597 = !DILocation(line: 3862, column: 33, scope: !6532)
!6598 = !DILocation(line: 3862, column: 38, scope: !6532)
!6599 = !DILocation(line: 3862, column: 44, scope: !6532)
!6600 = !DILocation(line: 3862, column: 4, scope: !6532)
!6601 = !DILocation(line: 3863, column: 2, scope: !6532)
!6602 = !DILocation(line: 3864, column: 1, scope: !6504)
!6603 = distinct !DISubprogram(name: "ui_line", scope: !243, file: !243, line: 3867, type: !6604, isLocal: false, isDefinition: true, scopeLine: 3870, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{null, !47, !45, !45, !45, !45, !6606}
!6606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6607, size: 64, align: 64)
!6607 = !DIDerivedType(tag: DW_TAG_typedef, name: "PEN", file: !36, line: 100, baseType: !6608)
!6608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PEN", file: !36, line: 93, size: 64, align: 32, elements: !6609)
!6609 = !{!6610, !6611, !6612}
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !6608, file: !36, line: 95, baseType: !47, size: 8, align: 8)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !6608, file: !36, line: 96, baseType: !47, size: 8, align: 8, offset: 8)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "colour", scope: !6608, file: !36, line: 97, baseType: !193, size: 32, align: 32, offset: 32)
!6613 = !DILocalVariable(name: "opcode", arg: 1, scope: !6603, file: !243, line: 3867, type: !47)
!6614 = !DILocation(line: 3867, column: 15, scope: !6603)
!6615 = !DILocalVariable(name: "startx", arg: 2, scope: !6603, file: !243, line: 3868, type: !45)
!6616 = !DILocation(line: 3868, column: 17, scope: !6603)
!6617 = !DILocalVariable(name: "starty", arg: 3, scope: !6603, file: !243, line: 3868, type: !45)
!6618 = !DILocation(line: 3868, column: 29, scope: !6603)
!6619 = !DILocalVariable(name: "endx", arg: 4, scope: !6603, file: !243, line: 3868, type: !45)
!6620 = !DILocation(line: 3868, column: 41, scope: !6603)
!6621 = !DILocalVariable(name: "endy", arg: 5, scope: !6603, file: !243, line: 3868, type: !45)
!6622 = !DILocation(line: 3868, column: 51, scope: !6603)
!6623 = !DILocalVariable(name: "pen", arg: 6, scope: !6603, file: !243, line: 3869, type: !6606)
!6624 = !DILocation(line: 3869, column: 18, scope: !6603)
!6625 = !DILocation(line: 3871, column: 8, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !243, line: 3871, column: 8)
!6627 = distinct !DILexicalBlock(scope: !6603, file: !243, line: 3871, column: 2)
!6628 = !DILocation(line: 3871, column: 15, scope: !6626)
!6629 = !DILocation(line: 3871, column: 8, scope: !6627)
!6630 = !DILocation(line: 3871, column: 36, scope: !6631)
!6631 = !DILexicalBlockFile(scope: !6626, file: !243, discriminator: 1)
!6632 = !DILocation(line: 3871, column: 47, scope: !6631)
!6633 = !DILocation(line: 3871, column: 62, scope: !6631)
!6634 = !DILocation(line: 3871, column: 53, scope: !6631)
!6635 = !DILocation(line: 3871, column: 23, scope: !6631)
!6636 = !DILocation(line: 3872, column: 17, scope: !6603)
!6637 = !DILocation(line: 3872, column: 28, scope: !6603)
!6638 = !DILocation(line: 3872, column: 36, scope: !6603)
!6639 = !DILocation(line: 3872, column: 51, scope: !6603)
!6640 = !DILocation(line: 3872, column: 75, scope: !6641)
!6641 = !DILexicalBlockFile(scope: !6603, file: !243, discriminator: 1)
!6642 = !DILocation(line: 3872, column: 80, scope: !6641)
!6643 = !DILocation(line: 3872, column: 58, scope: !6641)
!6644 = !DILocation(line: 3872, column: 36, scope: !6641)
!6645 = !DILocation(line: 3872, column: 90, scope: !6646)
!6646 = !DILexicalBlockFile(scope: !6603, file: !243, discriminator: 2)
!6647 = !DILocation(line: 3872, column: 104, scope: !6648)
!6648 = !DILexicalBlockFile(scope: !6603, file: !243, discriminator: 3)
!6649 = !DILocation(line: 3872, column: 109, scope: !6648)
!6650 = !DILocation(line: 3872, column: 90, scope: !6648)
!6651 = !DILocation(line: 3872, column: 127, scope: !6652)
!6652 = !DILexicalBlockFile(scope: !6603, file: !243, discriminator: 4)
!6653 = !DILocation(line: 3872, column: 132, scope: !6652)
!6654 = !DILocation(line: 3872, column: 118, scope: !6652)
!6655 = !DILocation(line: 3872, column: 90, scope: !6652)
!6656 = !DILocation(line: 3872, column: 90, scope: !6657)
!6657 = !DILexicalBlockFile(scope: !6603, file: !243, discriminator: 5)
!6658 = !DILocation(line: 3872, column: 36, scope: !6657)
!6659 = !DILocation(line: 3872, column: 36, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !6603, file: !243, discriminator: 6)
!6661 = !DILocation(line: 3872, column: 34, scope: !6660)
!6662 = !DILocation(line: 3872, column: 2, scope: !6660)
!6663 = !DILocation(line: 3873, column: 12, scope: !6603)
!6664 = !DILocation(line: 3873, column: 23, scope: !6603)
!6665 = !DILocation(line: 3873, column: 30, scope: !6603)
!6666 = !DILocation(line: 3873, column: 36, scope: !6603)
!6667 = !DILocation(line: 3873, column: 44, scope: !6603)
!6668 = !DILocation(line: 3873, column: 52, scope: !6603)
!6669 = !DILocation(line: 3873, column: 58, scope: !6603)
!6670 = !DILocation(line: 3873, column: 2, scope: !6603)
!6671 = !DILocation(line: 3874, column: 2, scope: !6603)
!6672 = distinct !{!6672, !6671}
!6673 = !DILocalVariable(name: "sw", scope: !6674, file: !243, line: 3874, type: !360)
!6674 = distinct !DILexicalBlock(scope: !6603, file: !243, line: 3874, column: 5)
!6675 = !DILocation(line: 3874, column: 24, scope: !6674)
!6676 = !DILocalVariable(name: "rect", scope: !6674, file: !243, line: 3874, type: !274)
!6677 = !DILocation(line: 3874, column: 39, scope: !6674)
!6678 = !DILocation(line: 3874, column: 50, scope: !6679)
!6679 = !DILexicalBlockFile(scope: !6680, file: !243, discriminator: 1)
!6680 = distinct !DILexicalBlock(scope: !6674, file: !243, line: 3874, column: 49)
!6681 = !DILocation(line: 3874, column: 49, scope: !6679)
!6682 = !DILocation(line: 3874, column: 70, scope: !6683)
!6683 = !DILexicalBlockFile(scope: !6680, file: !243, discriminator: 2)
!6684 = !DILocation(line: 3874, column: 87, scope: !6685)
!6685 = !DILexicalBlockFile(scope: !6686, file: !243, discriminator: 3)
!6686 = distinct !DILexicalBlock(scope: !6674, file: !243, line: 3874, column: 77)
!6687 = !DILocation(line: 3874, column: 85, scope: !6685)
!6688 = !DILocation(line: 3874, column: 82, scope: !6685)
!6689 = !DILocation(line: 3874, column: 107, scope: !6690)
!6690 = !DILexicalBlockFile(scope: !6691, file: !243, discriminator: 4)
!6691 = distinct !DILexicalBlock(scope: !6686, file: !243, line: 3874, column: 77)
!6692 = !DILocation(line: 3874, column: 77, scope: !6690)
!6693 = !DILocation(line: 3874, column: 154, scope: !6694)
!6694 = !DILexicalBlockFile(scope: !6695, file: !243, discriminator: 5)
!6695 = distinct !DILexicalBlock(scope: !6691, file: !243, line: 3874, column: 126)
!6696 = !DILocation(line: 3874, column: 137, scope: !6694)
!6697 = !DILocation(line: 3874, column: 158, scope: !6694)
!6698 = !DILocation(line: 3874, column: 162, scope: !6694)
!6699 = !DILocation(line: 3874, column: 156, scope: !6694)
!6700 = !DILocation(line: 3874, column: 133, scope: !6694)
!6701 = !DILocation(line: 3874, column: 135, scope: !6694)
!6702 = !DILocation(line: 3874, column: 197, scope: !6694)
!6703 = !DILocation(line: 3874, column: 180, scope: !6694)
!6704 = !DILocation(line: 3874, column: 201, scope: !6694)
!6705 = !DILocation(line: 3874, column: 205, scope: !6694)
!6706 = !DILocation(line: 3874, column: 199, scope: !6694)
!6707 = !DILocation(line: 3874, column: 176, scope: !6694)
!6708 = !DILocation(line: 3874, column: 178, scope: !6694)
!6709 = !DILocation(line: 3874, column: 244, scope: !6694)
!6710 = !DILocation(line: 3874, column: 219, scope: !6694)
!6711 = !DILocation(line: 3874, column: 225, scope: !6694)
!6712 = !DILocation(line: 3874, column: 282, scope: !6694)
!6713 = !DILocation(line: 3874, column: 256, scope: !6694)
!6714 = !DILocation(line: 3874, column: 263, scope: !6694)
!6715 = !DILocation(line: 3874, column: 309, scope: !6694)
!6716 = !DILocation(line: 3874, column: 320, scope: !6694)
!6717 = !DILocation(line: 3874, column: 290, scope: !6694)
!6718 = !DILocation(line: 3874, column: 15, scope: !6694)
!6719 = !DILocation(line: 3874, column: 26, scope: !6694)
!6720 = !DILocation(line: 3874, column: 30, scope: !6694)
!6721 = !DILocation(line: 3874, column: 35, scope: !6694)
!6722 = !DILocation(line: 3874, column: 41, scope: !6694)
!6723 = !DILocation(line: 3874, column: 50, scope: !6694)
!6724 = !DILocation(line: 3874, column: 54, scope: !6694)
!6725 = !DILocation(line: 3874, column: 48, scope: !6694)
!6726 = !DILocation(line: 3874, column: 63, scope: !6694)
!6727 = !DILocation(line: 3874, column: 72, scope: !6694)
!6728 = !DILocation(line: 3874, column: 76, scope: !6694)
!6729 = !DILocation(line: 3874, column: 70, scope: !6694)
!6730 = !DILocation(line: 3874, column: 85, scope: !6694)
!6731 = !DILocation(line: 3874, column: 92, scope: !6694)
!6732 = !DILocation(line: 3874, column: 96, scope: !6694)
!6733 = !DILocation(line: 3874, column: 90, scope: !6694)
!6734 = !DILocation(line: 3874, column: 105, scope: !6694)
!6735 = !DILocation(line: 3874, column: 112, scope: !6694)
!6736 = !DILocation(line: 3874, column: 116, scope: !6694)
!6737 = !DILocation(line: 3874, column: 110, scope: !6694)
!6738 = !DILocation(line: 3874, column: 4, scope: !6739)
!6739 = !DILexicalBlockFile(scope: !6694, file: !243, discriminator: 8)
!6740 = !DILocation(line: 3874, column: 126, scope: !6694)
!6741 = !DILocation(line: 3874, column: 116, scope: !6742)
!6742 = !DILexicalBlockFile(scope: !6691, file: !243, discriminator: 6)
!6743 = !DILocation(line: 3874, column: 120, scope: !6742)
!6744 = !DILocation(line: 3874, column: 114, scope: !6742)
!6745 = !DILocation(line: 3874, column: 77, scope: !6742)
!6746 = distinct !{!6746, !6747}
!6747 = !DILocation(line: 3874, column: 77, scope: !6674)
!6748 = !DILocation(line: 3874, column: 147, scope: !6749)
!6749 = !DILexicalBlockFile(scope: !6674, file: !243, discriminator: 7)
!6750 = !DILocation(line: 3874, column: 158, scope: !6749)
!6751 = !DILocation(line: 3874, column: 128, scope: !6749)
!6752 = !DILocation(line: 3874, column: 4, scope: !6749)
!6753 = !DILocation(line: 3877, column: 6, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6603, file: !243, line: 3877, column: 6)
!6755 = !DILocation(line: 3877, column: 6, scope: !6603)
!6756 = !DILocation(line: 3878, column: 13, scope: !6754)
!6757 = !DILocation(line: 3878, column: 24, scope: !6754)
!6758 = !DILocation(line: 3878, column: 37, scope: !6754)
!6759 = !DILocation(line: 3878, column: 43, scope: !6754)
!6760 = !DILocation(line: 3878, column: 51, scope: !6754)
!6761 = !DILocation(line: 3878, column: 59, scope: !6754)
!6762 = !DILocation(line: 3878, column: 65, scope: !6754)
!6763 = !DILocation(line: 3878, column: 3, scope: !6754)
!6764 = !DILocation(line: 3879, column: 8, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !243, line: 3879, column: 8)
!6766 = distinct !DILexicalBlock(scope: !6603, file: !243, line: 3879, column: 2)
!6767 = !DILocation(line: 3879, column: 15, scope: !6765)
!6768 = !DILocation(line: 3879, column: 8, scope: !6766)
!6769 = !DILocation(line: 3879, column: 36, scope: !6770)
!6770 = !DILexicalBlockFile(scope: !6765, file: !243, discriminator: 1)
!6771 = !DILocation(line: 3879, column: 47, scope: !6770)
!6772 = !DILocation(line: 3879, column: 23, scope: !6770)
!6773 = !DILocation(line: 3880, column: 1, scope: !6603)
!6774 = distinct !DISubprogram(name: "ui_rect", scope: !243, file: !243, line: 3883, type: !6775, isLocal: false, isDefinition: true, scopeLine: 3886, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!6775 = !DISubroutineType(types: !6776)
!6776 = !{null, !45, !45, !45, !45, !193}
!6777 = !DILocalVariable(name: "x", arg: 1, scope: !6774, file: !243, line: 3884, type: !45)
!6778 = !DILocation(line: 3884, column: 24, scope: !6774)
!6779 = !DILocalVariable(name: "y", arg: 2, scope: !6774, file: !243, line: 3884, type: !45)
!6780 = !DILocation(line: 3884, column: 31, scope: !6774)
!6781 = !DILocalVariable(name: "cx", arg: 3, scope: !6774, file: !243, line: 3884, type: !45)
!6782 = !DILocation(line: 3884, column: 38, scope: !6774)
!6783 = !DILocalVariable(name: "cy", arg: 4, scope: !6774, file: !243, line: 3884, type: !45)
!6784 = !DILocation(line: 3884, column: 46, scope: !6774)
!6785 = !DILocalVariable(name: "colour", arg: 5, scope: !6774, file: !243, line: 3885, type: !193)
!6786 = !DILocation(line: 3885, column: 28, scope: !6774)
!6787 = !DILocation(line: 3887, column: 17, scope: !6774)
!6788 = !DILocation(line: 3887, column: 28, scope: !6774)
!6789 = !DILocation(line: 3887, column: 36, scope: !6774)
!6790 = !DILocation(line: 3887, column: 51, scope: !6774)
!6791 = !DILocation(line: 3887, column: 75, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !6774, file: !243, discriminator: 1)
!6793 = !DILocation(line: 3887, column: 58, scope: !6792)
!6794 = !DILocation(line: 3887, column: 36, scope: !6792)
!6795 = !DILocation(line: 3887, column: 85, scope: !6796)
!6796 = !DILexicalBlockFile(scope: !6774, file: !243, discriminator: 2)
!6797 = !DILocation(line: 3887, column: 99, scope: !6798)
!6798 = !DILexicalBlockFile(scope: !6774, file: !243, discriminator: 3)
!6799 = !DILocation(line: 3887, column: 85, scope: !6798)
!6800 = !DILocation(line: 3887, column: 117, scope: !6801)
!6801 = !DILexicalBlockFile(scope: !6774, file: !243, discriminator: 4)
!6802 = !DILocation(line: 3887, column: 108, scope: !6801)
!6803 = !DILocation(line: 3887, column: 85, scope: !6801)
!6804 = !DILocation(line: 3887, column: 85, scope: !6805)
!6805 = !DILexicalBlockFile(scope: !6774, file: !243, discriminator: 5)
!6806 = !DILocation(line: 3887, column: 36, scope: !6805)
!6807 = !DILocation(line: 3887, column: 36, scope: !6808)
!6808 = !DILexicalBlockFile(scope: !6774, file: !243, discriminator: 6)
!6809 = !DILocation(line: 3887, column: 34, scope: !6808)
!6810 = !DILocation(line: 3887, column: 2, scope: !6808)
!6811 = !DILocation(line: 3888, column: 19, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6774, file: !243, line: 3888, column: 2)
!6813 = !DILocation(line: 3888, column: 30, scope: !6812)
!6814 = !DILocation(line: 3888, column: 37, scope: !6812)
!6815 = !DILocation(line: 3888, column: 43, scope: !6812)
!6816 = !DILocation(line: 3888, column: 46, scope: !6812)
!6817 = !DILocation(line: 3888, column: 49, scope: !6812)
!6818 = !DILocation(line: 3888, column: 53, scope: !6812)
!6819 = !DILocation(line: 3888, column: 4, scope: !6812)
!6820 = !DILocation(line: 3888, column: 58, scope: !6812)
!6821 = distinct !{!6821, !6820}
!6822 = !DILocalVariable(name: "sw", scope: !6823, file: !243, line: 3888, type: !360)
!6823 = distinct !DILexicalBlock(scope: !6812, file: !243, line: 3888, column: 61)
!6824 = !DILocation(line: 3888, column: 80, scope: !6823)
!6825 = !DILocalVariable(name: "rect", scope: !6823, file: !243, line: 3888, type: !274)
!6826 = !DILocation(line: 3888, column: 95, scope: !6823)
!6827 = !DILocation(line: 3888, column: 106, scope: !6828)
!6828 = !DILexicalBlockFile(scope: !6829, file: !243, discriminator: 1)
!6829 = distinct !DILexicalBlock(scope: !6823, file: !243, line: 3888, column: 105)
!6830 = !DILocation(line: 3888, column: 105, scope: !6828)
!6831 = !DILocation(line: 3888, column: 126, scope: !6832)
!6832 = !DILexicalBlockFile(scope: !6829, file: !243, discriminator: 2)
!6833 = !DILocation(line: 3888, column: 143, scope: !6834)
!6834 = !DILexicalBlockFile(scope: !6835, file: !243, discriminator: 3)
!6835 = distinct !DILexicalBlock(scope: !6823, file: !243, line: 3888, column: 133)
!6836 = !DILocation(line: 3888, column: 141, scope: !6834)
!6837 = !DILocation(line: 3888, column: 138, scope: !6834)
!6838 = !DILocation(line: 3888, column: 163, scope: !6839)
!6839 = !DILexicalBlockFile(scope: !6840, file: !243, discriminator: 4)
!6840 = distinct !DILexicalBlock(scope: !6835, file: !243, line: 3888, column: 133)
!6841 = !DILocation(line: 3888, column: 133, scope: !6839)
!6842 = !DILocation(line: 3888, column: 210, scope: !6843)
!6843 = !DILexicalBlockFile(scope: !6844, file: !243, discriminator: 5)
!6844 = distinct !DILexicalBlock(scope: !6840, file: !243, line: 3888, column: 182)
!6845 = !DILocation(line: 3888, column: 193, scope: !6843)
!6846 = !DILocation(line: 3888, column: 214, scope: !6843)
!6847 = !DILocation(line: 3888, column: 218, scope: !6843)
!6848 = !DILocation(line: 3888, column: 212, scope: !6843)
!6849 = !DILocation(line: 3888, column: 189, scope: !6843)
!6850 = !DILocation(line: 3888, column: 191, scope: !6843)
!6851 = !DILocation(line: 3888, column: 253, scope: !6843)
!6852 = !DILocation(line: 3888, column: 236, scope: !6843)
!6853 = !DILocation(line: 3888, column: 257, scope: !6843)
!6854 = !DILocation(line: 3888, column: 261, scope: !6843)
!6855 = !DILocation(line: 3888, column: 255, scope: !6843)
!6856 = !DILocation(line: 3888, column: 232, scope: !6843)
!6857 = !DILocation(line: 3888, column: 234, scope: !6843)
!6858 = !DILocation(line: 3888, column: 300, scope: !6843)
!6859 = !DILocation(line: 3888, column: 275, scope: !6843)
!6860 = !DILocation(line: 3888, column: 281, scope: !6843)
!6861 = !DILocation(line: 3888, column: 338, scope: !6843)
!6862 = !DILocation(line: 3888, column: 312, scope: !6843)
!6863 = !DILocation(line: 3888, column: 319, scope: !6843)
!6864 = !DILocation(line: 3888, column: 365, scope: !6843)
!6865 = !DILocation(line: 3888, column: 376, scope: !6843)
!6866 = !DILocation(line: 3888, column: 346, scope: !6843)
!6867 = !DILocation(line: 3888, column: 20, scope: !6843)
!6868 = !DILocation(line: 3888, column: 31, scope: !6843)
!6869 = !DILocation(line: 3888, column: 35, scope: !6843)
!6870 = !DILocation(line: 3888, column: 40, scope: !6843)
!6871 = !DILocation(line: 3888, column: 46, scope: !6843)
!6872 = !DILocation(line: 3888, column: 48, scope: !6843)
!6873 = !DILocation(line: 3888, column: 52, scope: !6843)
!6874 = !DILocation(line: 3888, column: 47, scope: !6843)
!6875 = !DILocation(line: 3888, column: 61, scope: !6843)
!6876 = !DILocation(line: 3888, column: 63, scope: !6843)
!6877 = !DILocation(line: 3888, column: 67, scope: !6843)
!6878 = !DILocation(line: 3888, column: 62, scope: !6843)
!6879 = !DILocation(line: 3888, column: 76, scope: !6843)
!6880 = !DILocation(line: 3888, column: 80, scope: !6843)
!6881 = !DILocation(line: 3888, column: 4, scope: !6882)
!6882 = !DILexicalBlockFile(scope: !6843, file: !243, discriminator: 10)
!6883 = !DILocation(line: 3888, column: 85, scope: !6843)
!6884 = !DILocation(line: 3888, column: 172, scope: !6885)
!6885 = !DILexicalBlockFile(scope: !6840, file: !243, discriminator: 6)
!6886 = !DILocation(line: 3888, column: 176, scope: !6885)
!6887 = !DILocation(line: 3888, column: 170, scope: !6885)
!6888 = !DILocation(line: 3888, column: 133, scope: !6885)
!6889 = distinct !{!6889, !6890}
!6890 = !DILocation(line: 3888, column: 133, scope: !6823)
!6891 = !DILocation(line: 3888, column: 106, scope: !6892)
!6892 = !DILexicalBlockFile(scope: !6823, file: !243, discriminator: 7)
!6893 = !DILocation(line: 3888, column: 117, scope: !6892)
!6894 = !DILocation(line: 3888, column: 87, scope: !6892)
!6895 = !DILocation(line: 3888, column: 4, scope: !6892)
!6896 = !DILocation(line: 3888, column: 21, scope: !6897)
!6897 = !DILexicalBlockFile(scope: !6898, file: !243, discriminator: 8)
!6898 = distinct !DILexicalBlock(scope: !6812, file: !243, line: 3888, column: 21)
!6899 = !DILocation(line: 3888, column: 52, scope: !6900)
!6900 = !DILexicalBlockFile(scope: !6898, file: !243, discriminator: 9)
!6901 = !DILocation(line: 3888, column: 63, scope: !6900)
!6902 = !DILocation(line: 3888, column: 76, scope: !6900)
!6903 = !DILocation(line: 3888, column: 82, scope: !6900)
!6904 = !DILocation(line: 3888, column: 85, scope: !6900)
!6905 = !DILocation(line: 3888, column: 88, scope: !6900)
!6906 = !DILocation(line: 3888, column: 92, scope: !6900)
!6907 = !DILocation(line: 3888, column: 37, scope: !6900)
!6908 = !DILocation(line: 3889, column: 1, scope: !6774)
!6909 = distinct !DISubprogram(name: "ui_polygon", scope: !243, file: !243, line: 3892, type: !6910, isLocal: false, isDefinition: true, scopeLine: 3896, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!6910 = !DISubroutineType(types: !6911)
!6911 = !{null, !47, !47, !6912, !45, !5524, !193, !193}
!6912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6913, size: 64, align: 64)
!6913 = !DIDerivedType(tag: DW_TAG_typedef, name: "RD_POINT", file: !36, line: 64, baseType: !6914)
!6914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RD_POINT", file: !36, line: 60, size: 32, align: 16, elements: !6915)
!6915 = !{!6916, !6918}
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !6914, file: !36, line: 62, baseType: !6917, size: 16, align: 16)
!6917 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint16", file: !36, line: 42, baseType: !211)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !6914, file: !36, line: 62, baseType: !6917, size: 16, align: 16, offset: 16)
!6919 = !DILocalVariable(name: "opcode", arg: 1, scope: !6909, file: !243, line: 3892, type: !47)
!6920 = !DILocation(line: 3892, column: 18, scope: !6909)
!6921 = !DILocalVariable(name: "fillmode", arg: 2, scope: !6909, file: !243, line: 3893, type: !47)
!6922 = !DILocation(line: 3893, column: 22, scope: !6909)
!6923 = !DILocalVariable(name: "point", arg: 3, scope: !6909, file: !243, line: 3894, type: !6912)
!6924 = !DILocation(line: 3894, column: 27, scope: !6909)
!6925 = !DILocalVariable(name: "npoints", arg: 4, scope: !6909, file: !243, line: 3894, type: !45)
!6926 = !DILocation(line: 3894, column: 38, scope: !6909)
!6927 = !DILocalVariable(name: "brush", arg: 5, scope: !6909, file: !243, line: 3895, type: !5524)
!6928 = !DILocation(line: 3895, column: 25, scope: !6909)
!6929 = !DILocalVariable(name: "bgcolour", arg: 6, scope: !6909, file: !243, line: 3895, type: !193)
!6930 = !DILocation(line: 3895, column: 39, scope: !6909)
!6931 = !DILocalVariable(name: "fgcolour", arg: 7, scope: !6909, file: !243, line: 3895, type: !193)
!6932 = !DILocation(line: 3895, column: 56, scope: !6909)
!6933 = !DILocalVariable(name: "style", scope: !6909, file: !243, line: 3897, type: !47)
!6934 = !DILocation(line: 3897, column: 8, scope: !6909)
!6935 = !DILocalVariable(name: "i", scope: !6909, file: !243, line: 3897, type: !47)
!6936 = !DILocation(line: 3897, column: 15, scope: !6909)
!6937 = !DILocalVariable(name: "ipattern", scope: !6909, file: !243, line: 3897, type: !5532)
!6938 = !DILocation(line: 3897, column: 18, scope: !6909)
!6939 = !DILocalVariable(name: "fill", scope: !6909, file: !243, line: 3898, type: !189)
!6940 = !DILocation(line: 3898, column: 9, scope: !6909)
!6941 = !DILocation(line: 3900, column: 8, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !243, line: 3900, column: 8)
!6943 = distinct !DILexicalBlock(scope: !6909, file: !243, line: 3900, column: 2)
!6944 = !DILocation(line: 3900, column: 15, scope: !6942)
!6945 = !DILocation(line: 3900, column: 8, scope: !6943)
!6946 = !DILocation(line: 3900, column: 36, scope: !6947)
!6947 = !DILexicalBlockFile(scope: !6942, file: !243, discriminator: 1)
!6948 = !DILocation(line: 3900, column: 47, scope: !6947)
!6949 = !DILocation(line: 3900, column: 62, scope: !6947)
!6950 = !DILocation(line: 3900, column: 53, scope: !6947)
!6951 = !DILocation(line: 3900, column: 23, scope: !6947)
!6952 = !DILocation(line: 3902, column: 10, scope: !6909)
!6953 = !DILocation(line: 3902, column: 2, scope: !6909)
!6954 = !DILocation(line: 3905, column: 17, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6909, file: !243, line: 3903, column: 2)
!6956 = !DILocation(line: 3905, column: 28, scope: !6955)
!6957 = !DILocation(line: 3905, column: 4, scope: !6955)
!6958 = !DILocation(line: 3906, column: 4, scope: !6955)
!6959 = !DILocation(line: 3908, column: 17, scope: !6955)
!6960 = !DILocation(line: 3908, column: 28, scope: !6955)
!6961 = !DILocation(line: 3908, column: 4, scope: !6955)
!6962 = !DILocation(line: 3909, column: 4, scope: !6955)
!6963 = !DILocation(line: 3911, column: 55, scope: !6955)
!6964 = !DILocation(line: 3911, column: 4, scope: !6955)
!6965 = !DILocation(line: 3912, column: 2, scope: !6955)
!6966 = !DILocation(line: 3914, column: 6, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6909, file: !243, line: 3914, column: 6)
!6968 = !DILocation(line: 3914, column: 6, scope: !6909)
!6969 = !DILocation(line: 3915, column: 11, scope: !6967)
!6970 = !DILocation(line: 3915, column: 18, scope: !6967)
!6971 = !DILocation(line: 3915, column: 9, scope: !6967)
!6972 = !DILocation(line: 3915, column: 3, scope: !6967)
!6973 = !DILocation(line: 3917, column: 9, scope: !6967)
!6974 = !DILocation(line: 3919, column: 10, scope: !6909)
!6975 = !DILocation(line: 3919, column: 2, scope: !6909)
!6976 = !DILocation(line: 3922, column: 19, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6909, file: !243, line: 3920, column: 2)
!6978 = !DILocation(line: 3922, column: 30, scope: !6977)
!6979 = !DILocation(line: 3922, column: 38, scope: !6977)
!6980 = !DILocation(line: 3922, column: 53, scope: !6977)
!6981 = !DILocation(line: 3922, column: 77, scope: !6982)
!6982 = !DILexicalBlockFile(scope: !6977, file: !243, discriminator: 1)
!6983 = !DILocation(line: 3922, column: 60, scope: !6982)
!6984 = !DILocation(line: 3922, column: 38, scope: !6982)
!6985 = !DILocation(line: 3922, column: 89, scope: !6986)
!6986 = !DILexicalBlockFile(scope: !6977, file: !243, discriminator: 2)
!6987 = !DILocation(line: 3922, column: 103, scope: !6988)
!6988 = !DILexicalBlockFile(scope: !6977, file: !243, discriminator: 3)
!6989 = !DILocation(line: 3922, column: 89, scope: !6988)
!6990 = !DILocation(line: 3922, column: 123, scope: !6991)
!6991 = !DILexicalBlockFile(scope: !6977, file: !243, discriminator: 4)
!6992 = !DILocation(line: 3922, column: 114, scope: !6991)
!6993 = !DILocation(line: 3922, column: 89, scope: !6991)
!6994 = !DILocation(line: 3922, column: 89, scope: !6995)
!6995 = !DILexicalBlockFile(scope: !6977, file: !243, discriminator: 5)
!6996 = !DILocation(line: 3922, column: 38, scope: !6995)
!6997 = !DILocation(line: 3922, column: 38, scope: !6998)
!6998 = !DILexicalBlockFile(scope: !6977, file: !243, discriminator: 6)
!6999 = !DILocation(line: 3922, column: 36, scope: !6998)
!7000 = !DILocation(line: 3922, column: 4, scope: !6998)
!7001 = !DILocation(line: 3923, column: 19, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6977, file: !243, line: 3923, column: 4)
!7003 = !DILocation(line: 3923, column: 30, scope: !7002)
!7004 = !DILocation(line: 3923, column: 37, scope: !7002)
!7005 = !DILocation(line: 3923, column: 54, scope: !7002)
!7006 = !DILocation(line: 3923, column: 43, scope: !7002)
!7007 = !DILocation(line: 3923, column: 61, scope: !7002)
!7008 = !DILocation(line: 3923, column: 6, scope: !7002)
!7009 = !DILocation(line: 3923, column: 10, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7002, file: !243, line: 3923, column: 10)
!7011 = !DILocation(line: 3923, column: 10, scope: !7002)
!7012 = !DILocation(line: 3923, column: 39, scope: !7013)
!7013 = !DILexicalBlockFile(scope: !7010, file: !243, discriminator: 1)
!7014 = !DILocation(line: 3923, column: 50, scope: !7013)
!7015 = !DILocation(line: 3923, column: 63, scope: !7013)
!7016 = !DILocation(line: 3923, column: 80, scope: !7013)
!7017 = !DILocation(line: 3923, column: 69, scope: !7013)
!7018 = !DILocation(line: 3923, column: 87, scope: !7013)
!7019 = !DILocation(line: 3923, column: 26, scope: !7013)
!7020 = !DILocation(line: 3923, column: 6, scope: !7021)
!7021 = !DILexicalBlockFile(scope: !7002, file: !243, discriminator: 2)
!7022 = distinct !{!7022, !7008}
!7023 = !DILocalVariable(name: "sw", scope: !7024, file: !243, line: 3923, type: !360)
!7024 = distinct !DILexicalBlock(scope: !7002, file: !243, line: 3923, column: 9)
!7025 = !DILocation(line: 3923, column: 28, scope: !7024)
!7026 = !DILocalVariable(name: "rect", scope: !7024, file: !243, line: 3923, type: !274)
!7027 = !DILocation(line: 3923, column: 43, scope: !7024)
!7028 = !DILocation(line: 3923, column: 54, scope: !7029)
!7029 = !DILexicalBlockFile(scope: !7030, file: !243, discriminator: 3)
!7030 = distinct !DILexicalBlock(scope: !7024, file: !243, line: 3923, column: 53)
!7031 = !DILocation(line: 3923, column: 53, scope: !7029)
!7032 = !DILocation(line: 3923, column: 74, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !7030, file: !243, discriminator: 4)
!7034 = !DILocation(line: 3923, column: 91, scope: !7035)
!7035 = !DILexicalBlockFile(scope: !7036, file: !243, discriminator: 5)
!7036 = distinct !DILexicalBlock(scope: !7024, file: !243, line: 3923, column: 81)
!7037 = !DILocation(line: 3923, column: 89, scope: !7035)
!7038 = !DILocation(line: 3923, column: 86, scope: !7035)
!7039 = !DILocation(line: 3923, column: 111, scope: !7040)
!7040 = !DILexicalBlockFile(scope: !7041, file: !243, discriminator: 6)
!7041 = distinct !DILexicalBlock(scope: !7036, file: !243, line: 3923, column: 81)
!7042 = !DILocation(line: 3923, column: 81, scope: !7040)
!7043 = !DILocation(line: 3923, column: 158, scope: !7044)
!7044 = !DILexicalBlockFile(scope: !7045, file: !243, discriminator: 7)
!7045 = distinct !DILexicalBlock(scope: !7041, file: !243, line: 3923, column: 130)
!7046 = !DILocation(line: 3923, column: 141, scope: !7044)
!7047 = !DILocation(line: 3923, column: 162, scope: !7044)
!7048 = !DILocation(line: 3923, column: 166, scope: !7044)
!7049 = !DILocation(line: 3923, column: 160, scope: !7044)
!7050 = !DILocation(line: 3923, column: 137, scope: !7044)
!7051 = !DILocation(line: 3923, column: 139, scope: !7044)
!7052 = !DILocation(line: 3923, column: 201, scope: !7044)
!7053 = !DILocation(line: 3923, column: 184, scope: !7044)
!7054 = !DILocation(line: 3923, column: 205, scope: !7044)
!7055 = !DILocation(line: 3923, column: 209, scope: !7044)
!7056 = !DILocation(line: 3923, column: 203, scope: !7044)
!7057 = !DILocation(line: 3923, column: 180, scope: !7044)
!7058 = !DILocation(line: 3923, column: 182, scope: !7044)
!7059 = !DILocation(line: 3923, column: 248, scope: !7044)
!7060 = !DILocation(line: 3923, column: 223, scope: !7044)
!7061 = !DILocation(line: 3923, column: 229, scope: !7044)
!7062 = !DILocation(line: 3923, column: 286, scope: !7044)
!7063 = !DILocation(line: 3923, column: 260, scope: !7044)
!7064 = !DILocation(line: 3923, column: 267, scope: !7044)
!7065 = !DILocation(line: 3923, column: 313, scope: !7044)
!7066 = !DILocation(line: 3923, column: 324, scope: !7044)
!7067 = !DILocation(line: 3923, column: 294, scope: !7044)
!7068 = !DILocation(line: 3923, column: 29, scope: !7044)
!7069 = !DILocation(line: 3923, column: 33, scope: !7044)
!7070 = !DILocation(line: 3923, column: 49, scope: !7044)
!7071 = !DILocation(line: 3923, column: 38, scope: !7044)
!7072 = !DILocation(line: 3923, column: 56, scope: !7044)
!7073 = !DILocation(line: 3923, column: 65, scope: !7044)
!7074 = !DILocation(line: 3923, column: 69, scope: !7044)
!7075 = !DILocation(line: 3923, column: 78, scope: !7044)
!7076 = !DILocation(line: 3923, column: 82, scope: !7044)
!7077 = !DILocation(line: 3923, column: 6, scope: !7078)
!7078 = !DILexicalBlockFile(scope: !7044, file: !243, discriminator: 10)
!7079 = !DILocation(line: 3923, column: 92, scope: !7044)
!7080 = !DILocation(line: 3923, column: 120, scope: !7081)
!7081 = !DILexicalBlockFile(scope: !7041, file: !243, discriminator: 8)
!7082 = !DILocation(line: 3923, column: 124, scope: !7081)
!7083 = !DILocation(line: 3923, column: 118, scope: !7081)
!7084 = !DILocation(line: 3923, column: 81, scope: !7081)
!7085 = distinct !{!7085, !7086}
!7086 = !DILocation(line: 3923, column: 81, scope: !7024)
!7087 = !DILocation(line: 3923, column: 113, scope: !7088)
!7088 = !DILexicalBlockFile(scope: !7024, file: !243, discriminator: 9)
!7089 = !DILocation(line: 3923, column: 124, scope: !7088)
!7090 = !DILocation(line: 3923, column: 94, scope: !7088)
!7091 = !DILocation(line: 3923, column: 6, scope: !7088)
!7092 = !DILocation(line: 3924, column: 4, scope: !6977)
!7093 = !DILocation(line: 3928, column: 25, scope: !6977)
!7094 = !DILocation(line: 3928, column: 32, scope: !6977)
!7095 = !DILocation(line: 3928, column: 43, scope: !6977)
!7096 = !DILocation(line: 3928, column: 23, scope: !6977)
!7097 = !DILocation(line: 3927, column: 20, scope: !6977)
!7098 = !DILocation(line: 3927, column: 11, scope: !6977)
!7099 = !DILocation(line: 3927, column: 9, scope: !6977)
!7100 = !DILocation(line: 3929, column: 19, scope: !6977)
!7101 = !DILocation(line: 3929, column: 30, scope: !6977)
!7102 = !DILocation(line: 3929, column: 38, scope: !6977)
!7103 = !DILocation(line: 3929, column: 53, scope: !6977)
!7104 = !DILocation(line: 3929, column: 77, scope: !6982)
!7105 = !DILocation(line: 3929, column: 60, scope: !6982)
!7106 = !DILocation(line: 3929, column: 38, scope: !6982)
!7107 = !DILocation(line: 3929, column: 89, scope: !6986)
!7108 = !DILocation(line: 3929, column: 103, scope: !6988)
!7109 = !DILocation(line: 3929, column: 89, scope: !6988)
!7110 = !DILocation(line: 3929, column: 123, scope: !6991)
!7111 = !DILocation(line: 3929, column: 114, scope: !6991)
!7112 = !DILocation(line: 3929, column: 89, scope: !6991)
!7113 = !DILocation(line: 3929, column: 89, scope: !6995)
!7114 = !DILocation(line: 3929, column: 38, scope: !6995)
!7115 = !DILocation(line: 3929, column: 38, scope: !6998)
!7116 = !DILocation(line: 3929, column: 36, scope: !6998)
!7117 = !DILocation(line: 3929, column: 4, scope: !6998)
!7118 = !DILocation(line: 3930, column: 19, scope: !6977)
!7119 = !DILocation(line: 3930, column: 30, scope: !6977)
!7120 = !DILocation(line: 3930, column: 38, scope: !6977)
!7121 = !DILocation(line: 3930, column: 53, scope: !6977)
!7122 = !DILocation(line: 3930, column: 77, scope: !6982)
!7123 = !DILocation(line: 3930, column: 60, scope: !6982)
!7124 = !DILocation(line: 3930, column: 38, scope: !6982)
!7125 = !DILocation(line: 3930, column: 89, scope: !6986)
!7126 = !DILocation(line: 3930, column: 103, scope: !6988)
!7127 = !DILocation(line: 3930, column: 89, scope: !6988)
!7128 = !DILocation(line: 3930, column: 123, scope: !6991)
!7129 = !DILocation(line: 3930, column: 114, scope: !6991)
!7130 = !DILocation(line: 3930, column: 89, scope: !6991)
!7131 = !DILocation(line: 3930, column: 89, scope: !6995)
!7132 = !DILocation(line: 3930, column: 38, scope: !6995)
!7133 = !DILocation(line: 3930, column: 38, scope: !6998)
!7134 = !DILocation(line: 3930, column: 36, scope: !6998)
!7135 = !DILocation(line: 3930, column: 4, scope: !6998)
!7136 = !DILocation(line: 3931, column: 18, scope: !6977)
!7137 = !DILocation(line: 3931, column: 29, scope: !6977)
!7138 = !DILocation(line: 3931, column: 4, scope: !6977)
!7139 = !DILocation(line: 3932, column: 16, scope: !6977)
!7140 = !DILocation(line: 3932, column: 27, scope: !6977)
!7141 = !DILocation(line: 3932, column: 33, scope: !6977)
!7142 = !DILocation(line: 3932, column: 4, scope: !6977)
!7143 = !DILocation(line: 3933, column: 17, scope: !6977)
!7144 = !DILocation(line: 3933, column: 28, scope: !6977)
!7145 = !DILocation(line: 3933, column: 34, scope: !6977)
!7146 = !DILocation(line: 3933, column: 41, scope: !6977)
!7147 = !DILocation(line: 3933, column: 50, scope: !6977)
!7148 = !DILocation(line: 3933, column: 57, scope: !6977)
!7149 = !DILocation(line: 3933, column: 4, scope: !6977)
!7150 = !DILocation(line: 3934, column: 19, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !6977, file: !243, line: 3934, column: 4)
!7152 = !DILocation(line: 3934, column: 30, scope: !7151)
!7153 = !DILocation(line: 3934, column: 37, scope: !7151)
!7154 = !DILocation(line: 3934, column: 54, scope: !7151)
!7155 = !DILocation(line: 3934, column: 43, scope: !7151)
!7156 = !DILocation(line: 3934, column: 61, scope: !7151)
!7157 = !DILocation(line: 3934, column: 6, scope: !7151)
!7158 = !DILocation(line: 3934, column: 10, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7151, file: !243, line: 3934, column: 10)
!7160 = !DILocation(line: 3934, column: 10, scope: !7151)
!7161 = !DILocation(line: 3934, column: 39, scope: !7162)
!7162 = !DILexicalBlockFile(scope: !7159, file: !243, discriminator: 1)
!7163 = !DILocation(line: 3934, column: 50, scope: !7162)
!7164 = !DILocation(line: 3934, column: 63, scope: !7162)
!7165 = !DILocation(line: 3934, column: 80, scope: !7162)
!7166 = !DILocation(line: 3934, column: 69, scope: !7162)
!7167 = !DILocation(line: 3934, column: 87, scope: !7162)
!7168 = !DILocation(line: 3934, column: 26, scope: !7162)
!7169 = !DILocation(line: 3934, column: 6, scope: !7170)
!7170 = !DILexicalBlockFile(scope: !7151, file: !243, discriminator: 2)
!7171 = distinct !{!7171, !7157}
!7172 = !DILocalVariable(name: "sw", scope: !7173, file: !243, line: 3934, type: !360)
!7173 = distinct !DILexicalBlock(scope: !7151, file: !243, line: 3934, column: 9)
!7174 = !DILocation(line: 3934, column: 28, scope: !7173)
!7175 = !DILocalVariable(name: "rect", scope: !7173, file: !243, line: 3934, type: !274)
!7176 = !DILocation(line: 3934, column: 43, scope: !7173)
!7177 = !DILocation(line: 3934, column: 54, scope: !7178)
!7178 = !DILexicalBlockFile(scope: !7179, file: !243, discriminator: 3)
!7179 = distinct !DILexicalBlock(scope: !7173, file: !243, line: 3934, column: 53)
!7180 = !DILocation(line: 3934, column: 53, scope: !7178)
!7181 = !DILocation(line: 3934, column: 74, scope: !7182)
!7182 = !DILexicalBlockFile(scope: !7179, file: !243, discriminator: 4)
!7183 = !DILocation(line: 3934, column: 91, scope: !7184)
!7184 = !DILexicalBlockFile(scope: !7185, file: !243, discriminator: 5)
!7185 = distinct !DILexicalBlock(scope: !7173, file: !243, line: 3934, column: 81)
!7186 = !DILocation(line: 3934, column: 89, scope: !7184)
!7187 = !DILocation(line: 3934, column: 86, scope: !7184)
!7188 = !DILocation(line: 3934, column: 111, scope: !7189)
!7189 = !DILexicalBlockFile(scope: !7190, file: !243, discriminator: 6)
!7190 = distinct !DILexicalBlock(scope: !7185, file: !243, line: 3934, column: 81)
!7191 = !DILocation(line: 3934, column: 81, scope: !7189)
!7192 = !DILocation(line: 3934, column: 158, scope: !7193)
!7193 = !DILexicalBlockFile(scope: !7194, file: !243, discriminator: 7)
!7194 = distinct !DILexicalBlock(scope: !7190, file: !243, line: 3934, column: 130)
!7195 = !DILocation(line: 3934, column: 141, scope: !7193)
!7196 = !DILocation(line: 3934, column: 162, scope: !7193)
!7197 = !DILocation(line: 3934, column: 166, scope: !7193)
!7198 = !DILocation(line: 3934, column: 160, scope: !7193)
!7199 = !DILocation(line: 3934, column: 137, scope: !7193)
!7200 = !DILocation(line: 3934, column: 139, scope: !7193)
!7201 = !DILocation(line: 3934, column: 201, scope: !7193)
!7202 = !DILocation(line: 3934, column: 184, scope: !7193)
!7203 = !DILocation(line: 3934, column: 205, scope: !7193)
!7204 = !DILocation(line: 3934, column: 209, scope: !7193)
!7205 = !DILocation(line: 3934, column: 203, scope: !7193)
!7206 = !DILocation(line: 3934, column: 180, scope: !7193)
!7207 = !DILocation(line: 3934, column: 182, scope: !7193)
!7208 = !DILocation(line: 3934, column: 248, scope: !7193)
!7209 = !DILocation(line: 3934, column: 223, scope: !7193)
!7210 = !DILocation(line: 3934, column: 229, scope: !7193)
!7211 = !DILocation(line: 3934, column: 286, scope: !7193)
!7212 = !DILocation(line: 3934, column: 260, scope: !7193)
!7213 = !DILocation(line: 3934, column: 267, scope: !7193)
!7214 = !DILocation(line: 3934, column: 313, scope: !7193)
!7215 = !DILocation(line: 3934, column: 324, scope: !7193)
!7216 = !DILocation(line: 3934, column: 294, scope: !7193)
!7217 = !DILocation(line: 3934, column: 29, scope: !7193)
!7218 = !DILocation(line: 3934, column: 33, scope: !7193)
!7219 = !DILocation(line: 3934, column: 49, scope: !7193)
!7220 = !DILocation(line: 3934, column: 38, scope: !7193)
!7221 = !DILocation(line: 3934, column: 56, scope: !7193)
!7222 = !DILocation(line: 3934, column: 65, scope: !7193)
!7223 = !DILocation(line: 3934, column: 69, scope: !7193)
!7224 = !DILocation(line: 3934, column: 78, scope: !7193)
!7225 = !DILocation(line: 3934, column: 82, scope: !7193)
!7226 = !DILocation(line: 3934, column: 6, scope: !7227)
!7227 = !DILexicalBlockFile(scope: !7193, file: !243, discriminator: 10)
!7228 = !DILocation(line: 3934, column: 92, scope: !7193)
!7229 = !DILocation(line: 3934, column: 120, scope: !7230)
!7230 = !DILexicalBlockFile(scope: !7190, file: !243, discriminator: 8)
!7231 = !DILocation(line: 3934, column: 124, scope: !7230)
!7232 = !DILocation(line: 3934, column: 118, scope: !7230)
!7233 = !DILocation(line: 3934, column: 81, scope: !7230)
!7234 = distinct !{!7234, !7235}
!7235 = !DILocation(line: 3934, column: 81, scope: !7173)
!7236 = !DILocation(line: 3934, column: 113, scope: !7237)
!7237 = !DILexicalBlockFile(scope: !7173, file: !243, discriminator: 9)
!7238 = !DILocation(line: 3934, column: 124, scope: !7237)
!7239 = !DILocation(line: 3934, column: 94, scope: !7237)
!7240 = !DILocation(line: 3934, column: 6, scope: !7237)
!7241 = !DILocation(line: 3935, column: 18, scope: !6977)
!7242 = !DILocation(line: 3935, column: 29, scope: !6977)
!7243 = !DILocation(line: 3935, column: 4, scope: !6977)
!7244 = !DILocation(line: 3936, column: 17, scope: !6977)
!7245 = !DILocation(line: 3936, column: 28, scope: !6977)
!7246 = !DILocation(line: 3936, column: 4, scope: !6977)
!7247 = !DILocation(line: 3937, column: 33, scope: !6977)
!7248 = !DILocation(line: 3937, column: 21, scope: !6977)
!7249 = !DILocation(line: 3937, column: 4, scope: !6977)
!7250 = !DILocation(line: 3938, column: 4, scope: !6977)
!7251 = !DILocation(line: 3941, column: 8, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !6977, file: !243, line: 3941, column: 8)
!7253 = !DILocation(line: 3941, column: 15, scope: !7252)
!7254 = !DILocation(line: 3941, column: 18, scope: !7252)
!7255 = !DILocation(line: 3941, column: 8, scope: !6977)
!7256 = !DILocation(line: 3943, column: 12, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7258, file: !243, line: 3943, column: 5)
!7258 = distinct !DILexicalBlock(scope: !7252, file: !243, line: 3942, column: 4)
!7259 = !DILocation(line: 3943, column: 10, scope: !7257)
!7260 = !DILocation(line: 3943, column: 17, scope: !7261)
!7261 = !DILexicalBlockFile(scope: !7262, file: !243, discriminator: 1)
!7262 = distinct !DILexicalBlock(scope: !7257, file: !243, line: 3943, column: 5)
!7263 = !DILocation(line: 3943, column: 19, scope: !7261)
!7264 = !DILocation(line: 3943, column: 5, scope: !7261)
!7265 = !DILocation(line: 3944, column: 39, scope: !7262)
!7266 = !DILocation(line: 3944, column: 24, scope: !7262)
!7267 = !DILocation(line: 3944, column: 31, scope: !7262)
!7268 = !DILocation(line: 3944, column: 19, scope: !7262)
!7269 = !DILocation(line: 3944, column: 17, scope: !7262)
!7270 = !DILocation(line: 3944, column: 6, scope: !7262)
!7271 = !DILocation(line: 3944, column: 22, scope: !7262)
!7272 = !DILocation(line: 3943, column: 26, scope: !7273)
!7273 = !DILexicalBlockFile(scope: !7262, file: !243, discriminator: 2)
!7274 = !DILocation(line: 3943, column: 5, scope: !7273)
!7275 = distinct !{!7275, !7276}
!7276 = !DILocation(line: 3943, column: 5, scope: !7258)
!7277 = !DILocation(line: 3945, column: 43, scope: !7258)
!7278 = !DILocation(line: 3945, column: 21, scope: !7258)
!7279 = !DILocation(line: 3945, column: 12, scope: !7258)
!7280 = !DILocation(line: 3945, column: 10, scope: !7258)
!7281 = !DILocation(line: 3946, column: 20, scope: !7258)
!7282 = !DILocation(line: 3946, column: 31, scope: !7258)
!7283 = !DILocation(line: 3946, column: 39, scope: !7258)
!7284 = !DILocation(line: 3946, column: 54, scope: !7258)
!7285 = !DILocation(line: 3946, column: 78, scope: !7286)
!7286 = !DILexicalBlockFile(scope: !7258, file: !243, discriminator: 1)
!7287 = !DILocation(line: 3946, column: 61, scope: !7286)
!7288 = !DILocation(line: 3946, column: 39, scope: !7286)
!7289 = !DILocation(line: 3946, column: 90, scope: !7290)
!7290 = !DILexicalBlockFile(scope: !7258, file: !243, discriminator: 2)
!7291 = !DILocation(line: 3946, column: 104, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !7258, file: !243, discriminator: 3)
!7293 = !DILocation(line: 3946, column: 90, scope: !7292)
!7294 = !DILocation(line: 3946, column: 124, scope: !7295)
!7295 = !DILexicalBlockFile(scope: !7258, file: !243, discriminator: 4)
!7296 = !DILocation(line: 3946, column: 115, scope: !7295)
!7297 = !DILocation(line: 3946, column: 90, scope: !7295)
!7298 = !DILocation(line: 3946, column: 90, scope: !7299)
!7299 = !DILexicalBlockFile(scope: !7258, file: !243, discriminator: 5)
!7300 = !DILocation(line: 3946, column: 39, scope: !7299)
!7301 = !DILocation(line: 3946, column: 39, scope: !7302)
!7302 = !DILexicalBlockFile(scope: !7258, file: !243, discriminator: 6)
!7303 = !DILocation(line: 3946, column: 37, scope: !7302)
!7304 = !DILocation(line: 3946, column: 5, scope: !7302)
!7305 = !DILocation(line: 3947, column: 20, scope: !7258)
!7306 = !DILocation(line: 3947, column: 31, scope: !7258)
!7307 = !DILocation(line: 3947, column: 39, scope: !7258)
!7308 = !DILocation(line: 3947, column: 54, scope: !7258)
!7309 = !DILocation(line: 3947, column: 78, scope: !7286)
!7310 = !DILocation(line: 3947, column: 61, scope: !7286)
!7311 = !DILocation(line: 3947, column: 39, scope: !7286)
!7312 = !DILocation(line: 3947, column: 90, scope: !7290)
!7313 = !DILocation(line: 3947, column: 104, scope: !7292)
!7314 = !DILocation(line: 3947, column: 90, scope: !7292)
!7315 = !DILocation(line: 3947, column: 124, scope: !7295)
!7316 = !DILocation(line: 3947, column: 115, scope: !7295)
!7317 = !DILocation(line: 3947, column: 90, scope: !7295)
!7318 = !DILocation(line: 3947, column: 90, scope: !7299)
!7319 = !DILocation(line: 3947, column: 39, scope: !7299)
!7320 = !DILocation(line: 3947, column: 39, scope: !7302)
!7321 = !DILocation(line: 3947, column: 37, scope: !7302)
!7322 = !DILocation(line: 3947, column: 5, scope: !7302)
!7323 = !DILocation(line: 3948, column: 19, scope: !7258)
!7324 = !DILocation(line: 3948, column: 30, scope: !7258)
!7325 = !DILocation(line: 3948, column: 5, scope: !7258)
!7326 = !DILocation(line: 3949, column: 17, scope: !7258)
!7327 = !DILocation(line: 3949, column: 28, scope: !7258)
!7328 = !DILocation(line: 3949, column: 34, scope: !7258)
!7329 = !DILocation(line: 3949, column: 5, scope: !7258)
!7330 = !DILocation(line: 3950, column: 18, scope: !7258)
!7331 = !DILocation(line: 3950, column: 29, scope: !7258)
!7332 = !DILocation(line: 3950, column: 35, scope: !7258)
!7333 = !DILocation(line: 3950, column: 42, scope: !7258)
!7334 = !DILocation(line: 3950, column: 51, scope: !7258)
!7335 = !DILocation(line: 3950, column: 58, scope: !7258)
!7336 = !DILocation(line: 3950, column: 5, scope: !7258)
!7337 = !DILocation(line: 3951, column: 20, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7258, file: !243, line: 3951, column: 5)
!7339 = !DILocation(line: 3951, column: 31, scope: !7338)
!7340 = !DILocation(line: 3951, column: 38, scope: !7338)
!7341 = !DILocation(line: 3951, column: 55, scope: !7338)
!7342 = !DILocation(line: 3951, column: 44, scope: !7338)
!7343 = !DILocation(line: 3951, column: 62, scope: !7338)
!7344 = !DILocation(line: 3951, column: 7, scope: !7338)
!7345 = !DILocation(line: 3951, column: 11, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7338, file: !243, line: 3951, column: 11)
!7347 = !DILocation(line: 3951, column: 11, scope: !7338)
!7348 = !DILocation(line: 3951, column: 40, scope: !7349)
!7349 = !DILexicalBlockFile(scope: !7346, file: !243, discriminator: 1)
!7350 = !DILocation(line: 3951, column: 51, scope: !7349)
!7351 = !DILocation(line: 3951, column: 64, scope: !7349)
!7352 = !DILocation(line: 3951, column: 81, scope: !7349)
!7353 = !DILocation(line: 3951, column: 70, scope: !7349)
!7354 = !DILocation(line: 3951, column: 88, scope: !7349)
!7355 = !DILocation(line: 3951, column: 27, scope: !7349)
!7356 = !DILocation(line: 3951, column: 7, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !7338, file: !243, discriminator: 2)
!7358 = distinct !{!7358, !7344}
!7359 = !DILocalVariable(name: "sw", scope: !7360, file: !243, line: 3951, type: !360)
!7360 = distinct !DILexicalBlock(scope: !7338, file: !243, line: 3951, column: 10)
!7361 = !DILocation(line: 3951, column: 29, scope: !7360)
!7362 = !DILocalVariable(name: "rect", scope: !7360, file: !243, line: 3951, type: !274)
!7363 = !DILocation(line: 3951, column: 44, scope: !7360)
!7364 = !DILocation(line: 3951, column: 55, scope: !7365)
!7365 = !DILexicalBlockFile(scope: !7366, file: !243, discriminator: 3)
!7366 = distinct !DILexicalBlock(scope: !7360, file: !243, line: 3951, column: 54)
!7367 = !DILocation(line: 3951, column: 54, scope: !7365)
!7368 = !DILocation(line: 3951, column: 75, scope: !7369)
!7369 = !DILexicalBlockFile(scope: !7366, file: !243, discriminator: 4)
!7370 = !DILocation(line: 3951, column: 92, scope: !7371)
!7371 = !DILexicalBlockFile(scope: !7372, file: !243, discriminator: 5)
!7372 = distinct !DILexicalBlock(scope: !7360, file: !243, line: 3951, column: 82)
!7373 = !DILocation(line: 3951, column: 90, scope: !7371)
!7374 = !DILocation(line: 3951, column: 87, scope: !7371)
!7375 = !DILocation(line: 3951, column: 112, scope: !7376)
!7376 = !DILexicalBlockFile(scope: !7377, file: !243, discriminator: 6)
!7377 = distinct !DILexicalBlock(scope: !7372, file: !243, line: 3951, column: 82)
!7378 = !DILocation(line: 3951, column: 82, scope: !7376)
!7379 = !DILocation(line: 3951, column: 159, scope: !7380)
!7380 = !DILexicalBlockFile(scope: !7381, file: !243, discriminator: 7)
!7381 = distinct !DILexicalBlock(scope: !7377, file: !243, line: 3951, column: 131)
!7382 = !DILocation(line: 3951, column: 142, scope: !7380)
!7383 = !DILocation(line: 3951, column: 163, scope: !7380)
!7384 = !DILocation(line: 3951, column: 167, scope: !7380)
!7385 = !DILocation(line: 3951, column: 161, scope: !7380)
!7386 = !DILocation(line: 3951, column: 138, scope: !7380)
!7387 = !DILocation(line: 3951, column: 140, scope: !7380)
!7388 = !DILocation(line: 3951, column: 202, scope: !7380)
!7389 = !DILocation(line: 3951, column: 185, scope: !7380)
!7390 = !DILocation(line: 3951, column: 206, scope: !7380)
!7391 = !DILocation(line: 3951, column: 210, scope: !7380)
!7392 = !DILocation(line: 3951, column: 204, scope: !7380)
!7393 = !DILocation(line: 3951, column: 181, scope: !7380)
!7394 = !DILocation(line: 3951, column: 183, scope: !7380)
!7395 = !DILocation(line: 3951, column: 249, scope: !7380)
!7396 = !DILocation(line: 3951, column: 224, scope: !7380)
!7397 = !DILocation(line: 3951, column: 230, scope: !7380)
!7398 = !DILocation(line: 3951, column: 287, scope: !7380)
!7399 = !DILocation(line: 3951, column: 261, scope: !7380)
!7400 = !DILocation(line: 3951, column: 268, scope: !7380)
!7401 = !DILocation(line: 3951, column: 314, scope: !7380)
!7402 = !DILocation(line: 3951, column: 325, scope: !7380)
!7403 = !DILocation(line: 3951, column: 295, scope: !7380)
!7404 = !DILocation(line: 3951, column: 30, scope: !7380)
!7405 = !DILocation(line: 3951, column: 34, scope: !7380)
!7406 = !DILocation(line: 3951, column: 50, scope: !7380)
!7407 = !DILocation(line: 3951, column: 39, scope: !7380)
!7408 = !DILocation(line: 3951, column: 57, scope: !7380)
!7409 = !DILocation(line: 3951, column: 66, scope: !7380)
!7410 = !DILocation(line: 3951, column: 70, scope: !7380)
!7411 = !DILocation(line: 3951, column: 79, scope: !7380)
!7412 = !DILocation(line: 3951, column: 83, scope: !7380)
!7413 = !DILocation(line: 3951, column: 7, scope: !7414)
!7414 = !DILexicalBlockFile(scope: !7380, file: !243, discriminator: 10)
!7415 = !DILocation(line: 3951, column: 93, scope: !7380)
!7416 = !DILocation(line: 3951, column: 121, scope: !7417)
!7417 = !DILexicalBlockFile(scope: !7377, file: !243, discriminator: 8)
!7418 = !DILocation(line: 3951, column: 125, scope: !7417)
!7419 = !DILocation(line: 3951, column: 119, scope: !7417)
!7420 = !DILocation(line: 3951, column: 82, scope: !7417)
!7421 = distinct !{!7421, !7422}
!7422 = !DILocation(line: 3951, column: 82, scope: !7360)
!7423 = !DILocation(line: 3951, column: 114, scope: !7424)
!7424 = !DILexicalBlockFile(scope: !7360, file: !243, discriminator: 9)
!7425 = !DILocation(line: 3951, column: 125, scope: !7424)
!7426 = !DILocation(line: 3951, column: 95, scope: !7424)
!7427 = !DILocation(line: 3951, column: 7, scope: !7424)
!7428 = !DILocation(line: 3952, column: 19, scope: !7258)
!7429 = !DILocation(line: 3952, column: 30, scope: !7258)
!7430 = !DILocation(line: 3952, column: 5, scope: !7258)
!7431 = !DILocation(line: 3953, column: 18, scope: !7258)
!7432 = !DILocation(line: 3953, column: 29, scope: !7258)
!7433 = !DILocation(line: 3953, column: 5, scope: !7258)
!7434 = !DILocation(line: 3954, column: 34, scope: !7258)
!7435 = !DILocation(line: 3954, column: 22, scope: !7258)
!7436 = !DILocation(line: 3954, column: 5, scope: !7258)
!7437 = !DILocation(line: 3955, column: 4, scope: !7258)
!7438 = !DILocation(line: 3956, column: 13, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7252, file: !243, line: 3956, column: 13)
!7440 = !DILocation(line: 3956, column: 20, scope: !7439)
!7441 = !DILocation(line: 3956, column: 24, scope: !7439)
!7442 = !DILocation(line: 3956, column: 36, scope: !7439)
!7443 = !DILocation(line: 3956, column: 13, scope: !7252)
!7444 = !DILocation(line: 3958, column: 44, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7439, file: !243, line: 3957, column: 4)
!7446 = !DILocation(line: 3958, column: 51, scope: !7445)
!7447 = !DILocation(line: 3958, column: 55, scope: !7445)
!7448 = !DILocation(line: 3958, column: 21, scope: !7445)
!7449 = !DILocation(line: 3958, column: 12, scope: !7445)
!7450 = !DILocation(line: 3958, column: 10, scope: !7445)
!7451 = !DILocation(line: 3959, column: 19, scope: !7445)
!7452 = !DILocation(line: 3959, column: 30, scope: !7445)
!7453 = !DILocation(line: 3959, column: 5, scope: !7445)
!7454 = !DILocation(line: 3960, column: 14, scope: !7445)
!7455 = !DILocation(line: 3960, column: 25, scope: !7445)
!7456 = !DILocation(line: 3960, column: 31, scope: !7445)
!7457 = !DILocation(line: 3960, column: 5, scope: !7445)
!7458 = !DILocation(line: 3961, column: 18, scope: !7445)
!7459 = !DILocation(line: 3961, column: 29, scope: !7445)
!7460 = !DILocation(line: 3961, column: 35, scope: !7445)
!7461 = !DILocation(line: 3961, column: 42, scope: !7445)
!7462 = !DILocation(line: 3961, column: 51, scope: !7445)
!7463 = !DILocation(line: 3961, column: 58, scope: !7445)
!7464 = !DILocation(line: 3961, column: 5, scope: !7445)
!7465 = !DILocation(line: 3962, column: 20, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7445, file: !243, line: 3962, column: 5)
!7467 = !DILocation(line: 3962, column: 31, scope: !7466)
!7468 = !DILocation(line: 3962, column: 38, scope: !7466)
!7469 = !DILocation(line: 3962, column: 55, scope: !7466)
!7470 = !DILocation(line: 3962, column: 44, scope: !7466)
!7471 = !DILocation(line: 3962, column: 62, scope: !7466)
!7472 = !DILocation(line: 3962, column: 7, scope: !7466)
!7473 = !DILocation(line: 3962, column: 11, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7466, file: !243, line: 3962, column: 11)
!7475 = !DILocation(line: 3962, column: 11, scope: !7466)
!7476 = !DILocation(line: 3962, column: 40, scope: !7477)
!7477 = !DILexicalBlockFile(scope: !7474, file: !243, discriminator: 1)
!7478 = !DILocation(line: 3962, column: 51, scope: !7477)
!7479 = !DILocation(line: 3962, column: 64, scope: !7477)
!7480 = !DILocation(line: 3962, column: 81, scope: !7477)
!7481 = !DILocation(line: 3962, column: 70, scope: !7477)
!7482 = !DILocation(line: 3962, column: 88, scope: !7477)
!7483 = !DILocation(line: 3962, column: 27, scope: !7477)
!7484 = !DILocation(line: 3962, column: 7, scope: !7485)
!7485 = !DILexicalBlockFile(scope: !7466, file: !243, discriminator: 2)
!7486 = distinct !{!7486, !7472}
!7487 = !DILocalVariable(name: "sw", scope: !7488, file: !243, line: 3962, type: !360)
!7488 = distinct !DILexicalBlock(scope: !7466, file: !243, line: 3962, column: 10)
!7489 = !DILocation(line: 3962, column: 29, scope: !7488)
!7490 = !DILocalVariable(name: "rect", scope: !7488, file: !243, line: 3962, type: !274)
!7491 = !DILocation(line: 3962, column: 44, scope: !7488)
!7492 = !DILocation(line: 3962, column: 55, scope: !7493)
!7493 = !DILexicalBlockFile(scope: !7494, file: !243, discriminator: 3)
!7494 = distinct !DILexicalBlock(scope: !7488, file: !243, line: 3962, column: 54)
!7495 = !DILocation(line: 3962, column: 54, scope: !7493)
!7496 = !DILocation(line: 3962, column: 75, scope: !7497)
!7497 = !DILexicalBlockFile(scope: !7494, file: !243, discriminator: 4)
!7498 = !DILocation(line: 3962, column: 92, scope: !7499)
!7499 = !DILexicalBlockFile(scope: !7500, file: !243, discriminator: 5)
!7500 = distinct !DILexicalBlock(scope: !7488, file: !243, line: 3962, column: 82)
!7501 = !DILocation(line: 3962, column: 90, scope: !7499)
!7502 = !DILocation(line: 3962, column: 87, scope: !7499)
!7503 = !DILocation(line: 3962, column: 112, scope: !7504)
!7504 = !DILexicalBlockFile(scope: !7505, file: !243, discriminator: 6)
!7505 = distinct !DILexicalBlock(scope: !7500, file: !243, line: 3962, column: 82)
!7506 = !DILocation(line: 3962, column: 82, scope: !7504)
!7507 = !DILocation(line: 3962, column: 159, scope: !7508)
!7508 = !DILexicalBlockFile(scope: !7509, file: !243, discriminator: 7)
!7509 = distinct !DILexicalBlock(scope: !7505, file: !243, line: 3962, column: 131)
!7510 = !DILocation(line: 3962, column: 142, scope: !7508)
!7511 = !DILocation(line: 3962, column: 163, scope: !7508)
!7512 = !DILocation(line: 3962, column: 167, scope: !7508)
!7513 = !DILocation(line: 3962, column: 161, scope: !7508)
!7514 = !DILocation(line: 3962, column: 138, scope: !7508)
!7515 = !DILocation(line: 3962, column: 140, scope: !7508)
!7516 = !DILocation(line: 3962, column: 202, scope: !7508)
!7517 = !DILocation(line: 3962, column: 185, scope: !7508)
!7518 = !DILocation(line: 3962, column: 206, scope: !7508)
!7519 = !DILocation(line: 3962, column: 210, scope: !7508)
!7520 = !DILocation(line: 3962, column: 204, scope: !7508)
!7521 = !DILocation(line: 3962, column: 181, scope: !7508)
!7522 = !DILocation(line: 3962, column: 183, scope: !7508)
!7523 = !DILocation(line: 3962, column: 249, scope: !7508)
!7524 = !DILocation(line: 3962, column: 224, scope: !7508)
!7525 = !DILocation(line: 3962, column: 230, scope: !7508)
!7526 = !DILocation(line: 3962, column: 287, scope: !7508)
!7527 = !DILocation(line: 3962, column: 261, scope: !7508)
!7528 = !DILocation(line: 3962, column: 268, scope: !7508)
!7529 = !DILocation(line: 3962, column: 314, scope: !7508)
!7530 = !DILocation(line: 3962, column: 325, scope: !7508)
!7531 = !DILocation(line: 3962, column: 295, scope: !7508)
!7532 = !DILocation(line: 3962, column: 30, scope: !7508)
!7533 = !DILocation(line: 3962, column: 34, scope: !7508)
!7534 = !DILocation(line: 3962, column: 50, scope: !7508)
!7535 = !DILocation(line: 3962, column: 39, scope: !7508)
!7536 = !DILocation(line: 3962, column: 57, scope: !7508)
!7537 = !DILocation(line: 3962, column: 66, scope: !7508)
!7538 = !DILocation(line: 3962, column: 70, scope: !7508)
!7539 = !DILocation(line: 3962, column: 79, scope: !7508)
!7540 = !DILocation(line: 3962, column: 83, scope: !7508)
!7541 = !DILocation(line: 3962, column: 7, scope: !7542)
!7542 = !DILexicalBlockFile(scope: !7508, file: !243, discriminator: 10)
!7543 = !DILocation(line: 3962, column: 93, scope: !7508)
!7544 = !DILocation(line: 3962, column: 121, scope: !7545)
!7545 = !DILexicalBlockFile(scope: !7505, file: !243, discriminator: 8)
!7546 = !DILocation(line: 3962, column: 125, scope: !7545)
!7547 = !DILocation(line: 3962, column: 119, scope: !7545)
!7548 = !DILocation(line: 3962, column: 82, scope: !7545)
!7549 = distinct !{!7549, !7550}
!7550 = !DILocation(line: 3962, column: 82, scope: !7488)
!7551 = !DILocation(line: 3962, column: 114, scope: !7552)
!7552 = !DILexicalBlockFile(scope: !7488, file: !243, discriminator: 9)
!7553 = !DILocation(line: 3962, column: 125, scope: !7552)
!7554 = !DILocation(line: 3962, column: 95, scope: !7552)
!7555 = !DILocation(line: 3962, column: 7, scope: !7552)
!7556 = !DILocation(line: 3963, column: 19, scope: !7445)
!7557 = !DILocation(line: 3963, column: 30, scope: !7445)
!7558 = !DILocation(line: 3963, column: 5, scope: !7445)
!7559 = !DILocation(line: 3964, column: 18, scope: !7445)
!7560 = !DILocation(line: 3964, column: 29, scope: !7445)
!7561 = !DILocation(line: 3964, column: 5, scope: !7445)
!7562 = !DILocation(line: 3965, column: 36, scope: !7445)
!7563 = !DILocation(line: 3965, column: 23, scope: !7445)
!7564 = !DILocation(line: 3965, column: 5, scope: !7445)
!7565 = !DILocation(line: 3966, column: 4, scope: !7445)
!7566 = !DILocation(line: 3969, column: 43, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7439, file: !243, line: 3968, column: 4)
!7568 = !DILocation(line: 3969, column: 50, scope: !7567)
!7569 = !DILocation(line: 3969, column: 54, scope: !7567)
!7570 = !DILocation(line: 3969, column: 21, scope: !7567)
!7571 = !DILocation(line: 3969, column: 12, scope: !7567)
!7572 = !DILocation(line: 3969, column: 10, scope: !7567)
!7573 = !DILocation(line: 3970, column: 20, scope: !7567)
!7574 = !DILocation(line: 3970, column: 31, scope: !7567)
!7575 = !DILocation(line: 3970, column: 39, scope: !7567)
!7576 = !DILocation(line: 3970, column: 54, scope: !7567)
!7577 = !DILocation(line: 3970, column: 78, scope: !7578)
!7578 = !DILexicalBlockFile(scope: !7567, file: !243, discriminator: 1)
!7579 = !DILocation(line: 3970, column: 61, scope: !7578)
!7580 = !DILocation(line: 3970, column: 39, scope: !7578)
!7581 = !DILocation(line: 3970, column: 90, scope: !7582)
!7582 = !DILexicalBlockFile(scope: !7567, file: !243, discriminator: 2)
!7583 = !DILocation(line: 3970, column: 104, scope: !7584)
!7584 = !DILexicalBlockFile(scope: !7567, file: !243, discriminator: 3)
!7585 = !DILocation(line: 3970, column: 90, scope: !7584)
!7586 = !DILocation(line: 3970, column: 124, scope: !7587)
!7587 = !DILexicalBlockFile(scope: !7567, file: !243, discriminator: 4)
!7588 = !DILocation(line: 3970, column: 115, scope: !7587)
!7589 = !DILocation(line: 3970, column: 90, scope: !7587)
!7590 = !DILocation(line: 3970, column: 90, scope: !7591)
!7591 = !DILexicalBlockFile(scope: !7567, file: !243, discriminator: 5)
!7592 = !DILocation(line: 3970, column: 39, scope: !7591)
!7593 = !DILocation(line: 3970, column: 39, scope: !7594)
!7594 = !DILexicalBlockFile(scope: !7567, file: !243, discriminator: 6)
!7595 = !DILocation(line: 3970, column: 37, scope: !7594)
!7596 = !DILocation(line: 3970, column: 5, scope: !7594)
!7597 = !DILocation(line: 3971, column: 20, scope: !7567)
!7598 = !DILocation(line: 3971, column: 31, scope: !7567)
!7599 = !DILocation(line: 3971, column: 39, scope: !7567)
!7600 = !DILocation(line: 3971, column: 54, scope: !7567)
!7601 = !DILocation(line: 3971, column: 78, scope: !7578)
!7602 = !DILocation(line: 3971, column: 61, scope: !7578)
!7603 = !DILocation(line: 3971, column: 39, scope: !7578)
!7604 = !DILocation(line: 3971, column: 90, scope: !7582)
!7605 = !DILocation(line: 3971, column: 104, scope: !7584)
!7606 = !DILocation(line: 3971, column: 90, scope: !7584)
!7607 = !DILocation(line: 3971, column: 124, scope: !7587)
!7608 = !DILocation(line: 3971, column: 115, scope: !7587)
!7609 = !DILocation(line: 3971, column: 90, scope: !7587)
!7610 = !DILocation(line: 3971, column: 90, scope: !7591)
!7611 = !DILocation(line: 3971, column: 39, scope: !7591)
!7612 = !DILocation(line: 3971, column: 39, scope: !7594)
!7613 = !DILocation(line: 3971, column: 37, scope: !7594)
!7614 = !DILocation(line: 3971, column: 5, scope: !7594)
!7615 = !DILocation(line: 3972, column: 19, scope: !7567)
!7616 = !DILocation(line: 3972, column: 30, scope: !7567)
!7617 = !DILocation(line: 3972, column: 5, scope: !7567)
!7618 = !DILocation(line: 3973, column: 17, scope: !7567)
!7619 = !DILocation(line: 3973, column: 28, scope: !7567)
!7620 = !DILocation(line: 3973, column: 34, scope: !7567)
!7621 = !DILocation(line: 3973, column: 5, scope: !7567)
!7622 = !DILocation(line: 3974, column: 18, scope: !7567)
!7623 = !DILocation(line: 3974, column: 29, scope: !7567)
!7624 = !DILocation(line: 3974, column: 35, scope: !7567)
!7625 = !DILocation(line: 3974, column: 42, scope: !7567)
!7626 = !DILocation(line: 3974, column: 51, scope: !7567)
!7627 = !DILocation(line: 3974, column: 58, scope: !7567)
!7628 = !DILocation(line: 3974, column: 5, scope: !7567)
!7629 = !DILocation(line: 3975, column: 20, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7567, file: !243, line: 3975, column: 5)
!7631 = !DILocation(line: 3975, column: 31, scope: !7630)
!7632 = !DILocation(line: 3975, column: 38, scope: !7630)
!7633 = !DILocation(line: 3975, column: 55, scope: !7630)
!7634 = !DILocation(line: 3975, column: 44, scope: !7630)
!7635 = !DILocation(line: 3975, column: 62, scope: !7630)
!7636 = !DILocation(line: 3975, column: 7, scope: !7630)
!7637 = !DILocation(line: 3975, column: 11, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7630, file: !243, line: 3975, column: 11)
!7639 = !DILocation(line: 3975, column: 11, scope: !7630)
!7640 = !DILocation(line: 3975, column: 40, scope: !7641)
!7641 = !DILexicalBlockFile(scope: !7638, file: !243, discriminator: 1)
!7642 = !DILocation(line: 3975, column: 51, scope: !7641)
!7643 = !DILocation(line: 3975, column: 64, scope: !7641)
!7644 = !DILocation(line: 3975, column: 81, scope: !7641)
!7645 = !DILocation(line: 3975, column: 70, scope: !7641)
!7646 = !DILocation(line: 3975, column: 88, scope: !7641)
!7647 = !DILocation(line: 3975, column: 27, scope: !7641)
!7648 = !DILocation(line: 3975, column: 7, scope: !7649)
!7649 = !DILexicalBlockFile(scope: !7630, file: !243, discriminator: 2)
!7650 = distinct !{!7650, !7636}
!7651 = !DILocalVariable(name: "sw", scope: !7652, file: !243, line: 3975, type: !360)
!7652 = distinct !DILexicalBlock(scope: !7630, file: !243, line: 3975, column: 10)
!7653 = !DILocation(line: 3975, column: 29, scope: !7652)
!7654 = !DILocalVariable(name: "rect", scope: !7652, file: !243, line: 3975, type: !274)
!7655 = !DILocation(line: 3975, column: 44, scope: !7652)
!7656 = !DILocation(line: 3975, column: 55, scope: !7657)
!7657 = !DILexicalBlockFile(scope: !7658, file: !243, discriminator: 3)
!7658 = distinct !DILexicalBlock(scope: !7652, file: !243, line: 3975, column: 54)
!7659 = !DILocation(line: 3975, column: 54, scope: !7657)
!7660 = !DILocation(line: 3975, column: 75, scope: !7661)
!7661 = !DILexicalBlockFile(scope: !7658, file: !243, discriminator: 4)
!7662 = !DILocation(line: 3975, column: 92, scope: !7663)
!7663 = !DILexicalBlockFile(scope: !7664, file: !243, discriminator: 5)
!7664 = distinct !DILexicalBlock(scope: !7652, file: !243, line: 3975, column: 82)
!7665 = !DILocation(line: 3975, column: 90, scope: !7663)
!7666 = !DILocation(line: 3975, column: 87, scope: !7663)
!7667 = !DILocation(line: 3975, column: 112, scope: !7668)
!7668 = !DILexicalBlockFile(scope: !7669, file: !243, discriminator: 6)
!7669 = distinct !DILexicalBlock(scope: !7664, file: !243, line: 3975, column: 82)
!7670 = !DILocation(line: 3975, column: 82, scope: !7668)
!7671 = !DILocation(line: 3975, column: 159, scope: !7672)
!7672 = !DILexicalBlockFile(scope: !7673, file: !243, discriminator: 7)
!7673 = distinct !DILexicalBlock(scope: !7669, file: !243, line: 3975, column: 131)
!7674 = !DILocation(line: 3975, column: 142, scope: !7672)
!7675 = !DILocation(line: 3975, column: 163, scope: !7672)
!7676 = !DILocation(line: 3975, column: 167, scope: !7672)
!7677 = !DILocation(line: 3975, column: 161, scope: !7672)
!7678 = !DILocation(line: 3975, column: 138, scope: !7672)
!7679 = !DILocation(line: 3975, column: 140, scope: !7672)
!7680 = !DILocation(line: 3975, column: 202, scope: !7672)
!7681 = !DILocation(line: 3975, column: 185, scope: !7672)
!7682 = !DILocation(line: 3975, column: 206, scope: !7672)
!7683 = !DILocation(line: 3975, column: 210, scope: !7672)
!7684 = !DILocation(line: 3975, column: 204, scope: !7672)
!7685 = !DILocation(line: 3975, column: 181, scope: !7672)
!7686 = !DILocation(line: 3975, column: 183, scope: !7672)
!7687 = !DILocation(line: 3975, column: 249, scope: !7672)
!7688 = !DILocation(line: 3975, column: 224, scope: !7672)
!7689 = !DILocation(line: 3975, column: 230, scope: !7672)
!7690 = !DILocation(line: 3975, column: 287, scope: !7672)
!7691 = !DILocation(line: 3975, column: 261, scope: !7672)
!7692 = !DILocation(line: 3975, column: 268, scope: !7672)
!7693 = !DILocation(line: 3975, column: 314, scope: !7672)
!7694 = !DILocation(line: 3975, column: 325, scope: !7672)
!7695 = !DILocation(line: 3975, column: 295, scope: !7672)
!7696 = !DILocation(line: 3975, column: 30, scope: !7672)
!7697 = !DILocation(line: 3975, column: 34, scope: !7672)
!7698 = !DILocation(line: 3975, column: 50, scope: !7672)
!7699 = !DILocation(line: 3975, column: 39, scope: !7672)
!7700 = !DILocation(line: 3975, column: 57, scope: !7672)
!7701 = !DILocation(line: 3975, column: 66, scope: !7672)
!7702 = !DILocation(line: 3975, column: 70, scope: !7672)
!7703 = !DILocation(line: 3975, column: 79, scope: !7672)
!7704 = !DILocation(line: 3975, column: 83, scope: !7672)
!7705 = !DILocation(line: 3975, column: 7, scope: !7706)
!7706 = !DILexicalBlockFile(scope: !7672, file: !243, discriminator: 10)
!7707 = !DILocation(line: 3975, column: 93, scope: !7672)
!7708 = !DILocation(line: 3975, column: 121, scope: !7709)
!7709 = !DILexicalBlockFile(scope: !7669, file: !243, discriminator: 8)
!7710 = !DILocation(line: 3975, column: 125, scope: !7709)
!7711 = !DILocation(line: 3975, column: 119, scope: !7709)
!7712 = !DILocation(line: 3975, column: 82, scope: !7709)
!7713 = distinct !{!7713, !7714}
!7714 = !DILocation(line: 3975, column: 82, scope: !7652)
!7715 = !DILocation(line: 3975, column: 114, scope: !7716)
!7716 = !DILexicalBlockFile(scope: !7652, file: !243, discriminator: 9)
!7717 = !DILocation(line: 3975, column: 125, scope: !7716)
!7718 = !DILocation(line: 3975, column: 95, scope: !7716)
!7719 = !DILocation(line: 3975, column: 7, scope: !7716)
!7720 = !DILocation(line: 3976, column: 19, scope: !7567)
!7721 = !DILocation(line: 3976, column: 30, scope: !7567)
!7722 = !DILocation(line: 3976, column: 5, scope: !7567)
!7723 = !DILocation(line: 3977, column: 18, scope: !7567)
!7724 = !DILocation(line: 3977, column: 29, scope: !7567)
!7725 = !DILocation(line: 3977, column: 5, scope: !7567)
!7726 = !DILocation(line: 3978, column: 34, scope: !7567)
!7727 = !DILocation(line: 3978, column: 22, scope: !7567)
!7728 = !DILocation(line: 3978, column: 5, scope: !7567)
!7729 = !DILocation(line: 3980, column: 4, scope: !6977)
!7730 = !DILocation(line: 3983, column: 57, scope: !6977)
!7731 = !DILocation(line: 3983, column: 64, scope: !6977)
!7732 = !DILocation(line: 3983, column: 4, scope: !6977)
!7733 = !DILocation(line: 3984, column: 2, scope: !6977)
!7734 = !DILocation(line: 3986, column: 8, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !243, line: 3986, column: 8)
!7736 = distinct !DILexicalBlock(scope: !6909, file: !243, line: 3986, column: 2)
!7737 = !DILocation(line: 3986, column: 15, scope: !7735)
!7738 = !DILocation(line: 3986, column: 8, scope: !7736)
!7739 = !DILocation(line: 3986, column: 36, scope: !7740)
!7740 = !DILexicalBlockFile(scope: !7735, file: !243, discriminator: 1)
!7741 = !DILocation(line: 3986, column: 47, scope: !7740)
!7742 = !DILocation(line: 3986, column: 23, scope: !7740)
!7743 = !DILocation(line: 3987, column: 1, scope: !6909)
!7744 = distinct !DISubprogram(name: "seamless_XFillPolygon", scope: !243, file: !243, line: 233, type: !7745, isLocal: true, isDefinition: true, scopeLine: 234, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!7745 = !DISubroutineType(types: !7746)
!7746 = !{null, !1515, !206, !45, !45, !45}
!7747 = !DILocalVariable(name: "d", arg: 1, scope: !7744, file: !243, line: 233, type: !1515)
!7748 = !DILocation(line: 233, column: 32, scope: !7744)
!7749 = !DILocalVariable(name: "points", arg: 2, scope: !7744, file: !243, line: 233, type: !206)
!7750 = !DILocation(line: 233, column: 44, scope: !7744)
!7751 = !DILocalVariable(name: "npoints", arg: 3, scope: !7744, file: !243, line: 233, type: !45)
!7752 = !DILocation(line: 233, column: 56, scope: !7744)
!7753 = !DILocalVariable(name: "xoffset", arg: 4, scope: !7744, file: !243, line: 233, type: !45)
!7754 = !DILocation(line: 233, column: 69, scope: !7744)
!7755 = !DILocalVariable(name: "yoffset", arg: 5, scope: !7744, file: !243, line: 233, type: !45)
!7756 = !DILocation(line: 233, column: 82, scope: !7744)
!7757 = !DILocation(line: 235, column: 17, scope: !7744)
!7758 = !DILocation(line: 235, column: 2, scope: !7744)
!7759 = !DILocation(line: 235, column: 12, scope: !7744)
!7760 = !DILocation(line: 235, column: 14, scope: !7744)
!7761 = !DILocation(line: 236, column: 17, scope: !7744)
!7762 = !DILocation(line: 236, column: 2, scope: !7744)
!7763 = !DILocation(line: 236, column: 12, scope: !7744)
!7764 = !DILocation(line: 236, column: 14, scope: !7744)
!7765 = !DILocation(line: 237, column: 15, scope: !7744)
!7766 = !DILocation(line: 237, column: 26, scope: !7744)
!7767 = !DILocation(line: 237, column: 29, scope: !7744)
!7768 = !DILocation(line: 237, column: 35, scope: !7744)
!7769 = !DILocation(line: 237, column: 43, scope: !7744)
!7770 = !DILocation(line: 237, column: 2, scope: !7744)
!7771 = !DILocation(line: 238, column: 17, scope: !7744)
!7772 = !DILocation(line: 238, column: 2, scope: !7744)
!7773 = !DILocation(line: 238, column: 12, scope: !7744)
!7774 = !DILocation(line: 238, column: 14, scope: !7744)
!7775 = !DILocation(line: 239, column: 17, scope: !7744)
!7776 = !DILocation(line: 239, column: 2, scope: !7744)
!7777 = !DILocation(line: 239, column: 12, scope: !7744)
!7778 = !DILocation(line: 239, column: 14, scope: !7744)
!7779 = !DILocation(line: 240, column: 1, scope: !7744)
!7780 = distinct !DISubprogram(name: "ui_polyline", scope: !243, file: !243, line: 3990, type: !7781, isLocal: false, isDefinition: true, scopeLine: 3993, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!7781 = !DISubroutineType(types: !7782)
!7782 = !{null, !47, !6912, !45, !6606}
!7783 = !DILocalVariable(name: "opcode", arg: 1, scope: !7780, file: !243, line: 3990, type: !47)
!7784 = !DILocation(line: 3990, column: 19, scope: !7780)
!7785 = !DILocalVariable(name: "points", arg: 2, scope: !7780, file: !243, line: 3991, type: !6912)
!7786 = !DILocation(line: 3991, column: 28, scope: !7780)
!7787 = !DILocalVariable(name: "npoints", arg: 3, scope: !7780, file: !243, line: 3991, type: !45)
!7788 = !DILocation(line: 3991, column: 40, scope: !7780)
!7789 = !DILocalVariable(name: "pen", arg: 4, scope: !7780, file: !243, line: 3992, type: !6606)
!7790 = !DILocation(line: 3992, column: 22, scope: !7780)
!7791 = !DILocation(line: 3995, column: 8, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7793, file: !243, line: 3995, column: 8)
!7793 = distinct !DILexicalBlock(scope: !7780, file: !243, line: 3995, column: 2)
!7794 = !DILocation(line: 3995, column: 15, scope: !7792)
!7795 = !DILocation(line: 3995, column: 8, scope: !7793)
!7796 = !DILocation(line: 3995, column: 36, scope: !7797)
!7797 = !DILexicalBlockFile(scope: !7792, file: !243, discriminator: 1)
!7798 = !DILocation(line: 3995, column: 47, scope: !7797)
!7799 = !DILocation(line: 3995, column: 62, scope: !7797)
!7800 = !DILocation(line: 3995, column: 53, scope: !7797)
!7801 = !DILocation(line: 3995, column: 23, scope: !7797)
!7802 = !DILocation(line: 3996, column: 17, scope: !7780)
!7803 = !DILocation(line: 3996, column: 28, scope: !7780)
!7804 = !DILocation(line: 3996, column: 36, scope: !7780)
!7805 = !DILocation(line: 3996, column: 51, scope: !7780)
!7806 = !DILocation(line: 3996, column: 75, scope: !7807)
!7807 = !DILexicalBlockFile(scope: !7780, file: !243, discriminator: 1)
!7808 = !DILocation(line: 3996, column: 80, scope: !7807)
!7809 = !DILocation(line: 3996, column: 58, scope: !7807)
!7810 = !DILocation(line: 3996, column: 36, scope: !7807)
!7811 = !DILocation(line: 3996, column: 90, scope: !7812)
!7812 = !DILexicalBlockFile(scope: !7780, file: !243, discriminator: 2)
!7813 = !DILocation(line: 3996, column: 104, scope: !7814)
!7814 = !DILexicalBlockFile(scope: !7780, file: !243, discriminator: 3)
!7815 = !DILocation(line: 3996, column: 109, scope: !7814)
!7816 = !DILocation(line: 3996, column: 90, scope: !7814)
!7817 = !DILocation(line: 3996, column: 127, scope: !7818)
!7818 = !DILexicalBlockFile(scope: !7780, file: !243, discriminator: 4)
!7819 = !DILocation(line: 3996, column: 132, scope: !7818)
!7820 = !DILocation(line: 3996, column: 118, scope: !7818)
!7821 = !DILocation(line: 3996, column: 90, scope: !7818)
!7822 = !DILocation(line: 3996, column: 90, scope: !7823)
!7823 = !DILexicalBlockFile(scope: !7780, file: !243, discriminator: 5)
!7824 = !DILocation(line: 3996, column: 36, scope: !7823)
!7825 = !DILocation(line: 3996, column: 36, scope: !7826)
!7826 = !DILexicalBlockFile(scope: !7780, file: !243, discriminator: 6)
!7827 = !DILocation(line: 3996, column: 34, scope: !7826)
!7828 = !DILocation(line: 3996, column: 2, scope: !7826)
!7829 = !DILocation(line: 3997, column: 13, scope: !7780)
!7830 = !DILocation(line: 3997, column: 24, scope: !7780)
!7831 = !DILocation(line: 3997, column: 31, scope: !7780)
!7832 = !DILocation(line: 3997, column: 48, scope: !7780)
!7833 = !DILocation(line: 3997, column: 37, scope: !7780)
!7834 = !DILocation(line: 3997, column: 56, scope: !7780)
!7835 = !DILocation(line: 3997, column: 2, scope: !7780)
!7836 = !DILocation(line: 3998, column: 6, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7780, file: !243, line: 3998, column: 6)
!7838 = !DILocation(line: 3998, column: 6, scope: !7780)
!7839 = !DILocation(line: 3999, column: 14, scope: !7837)
!7840 = !DILocation(line: 3999, column: 25, scope: !7837)
!7841 = !DILocation(line: 3999, column: 38, scope: !7837)
!7842 = !DILocation(line: 3999, column: 55, scope: !7837)
!7843 = !DILocation(line: 3999, column: 44, scope: !7837)
!7844 = !DILocation(line: 3999, column: 63, scope: !7837)
!7845 = !DILocation(line: 3999, column: 3, scope: !7837)
!7846 = !DILocation(line: 4002, column: 2, scope: !7780)
!7847 = distinct !{!7847, !7846}
!7848 = !DILocalVariable(name: "sw", scope: !7849, file: !243, line: 4002, type: !360)
!7849 = distinct !DILexicalBlock(scope: !7780, file: !243, line: 4002, column: 5)
!7850 = !DILocation(line: 4002, column: 24, scope: !7849)
!7851 = !DILocalVariable(name: "rect", scope: !7849, file: !243, line: 4002, type: !274)
!7852 = !DILocation(line: 4002, column: 39, scope: !7849)
!7853 = !DILocation(line: 4002, column: 50, scope: !7854)
!7854 = !DILexicalBlockFile(scope: !7855, file: !243, discriminator: 1)
!7855 = distinct !DILexicalBlock(scope: !7849, file: !243, line: 4002, column: 49)
!7856 = !DILocation(line: 4002, column: 49, scope: !7854)
!7857 = !DILocation(line: 4002, column: 70, scope: !7858)
!7858 = !DILexicalBlockFile(scope: !7855, file: !243, discriminator: 2)
!7859 = !DILocation(line: 4002, column: 87, scope: !7860)
!7860 = !DILexicalBlockFile(scope: !7861, file: !243, discriminator: 3)
!7861 = distinct !DILexicalBlock(scope: !7849, file: !243, line: 4002, column: 77)
!7862 = !DILocation(line: 4002, column: 85, scope: !7860)
!7863 = !DILocation(line: 4002, column: 82, scope: !7860)
!7864 = !DILocation(line: 4002, column: 107, scope: !7865)
!7865 = !DILexicalBlockFile(scope: !7866, file: !243, discriminator: 4)
!7866 = distinct !DILexicalBlock(scope: !7861, file: !243, line: 4002, column: 77)
!7867 = !DILocation(line: 4002, column: 77, scope: !7865)
!7868 = !DILocation(line: 4002, column: 154, scope: !7869)
!7869 = !DILexicalBlockFile(scope: !7870, file: !243, discriminator: 5)
!7870 = distinct !DILexicalBlock(scope: !7866, file: !243, line: 4002, column: 126)
!7871 = !DILocation(line: 4002, column: 137, scope: !7869)
!7872 = !DILocation(line: 4002, column: 158, scope: !7869)
!7873 = !DILocation(line: 4002, column: 162, scope: !7869)
!7874 = !DILocation(line: 4002, column: 156, scope: !7869)
!7875 = !DILocation(line: 4002, column: 133, scope: !7869)
!7876 = !DILocation(line: 4002, column: 135, scope: !7869)
!7877 = !DILocation(line: 4002, column: 197, scope: !7869)
!7878 = !DILocation(line: 4002, column: 180, scope: !7869)
!7879 = !DILocation(line: 4002, column: 201, scope: !7869)
!7880 = !DILocation(line: 4002, column: 205, scope: !7869)
!7881 = !DILocation(line: 4002, column: 199, scope: !7869)
!7882 = !DILocation(line: 4002, column: 176, scope: !7869)
!7883 = !DILocation(line: 4002, column: 178, scope: !7869)
!7884 = !DILocation(line: 4002, column: 244, scope: !7869)
!7885 = !DILocation(line: 4002, column: 219, scope: !7869)
!7886 = !DILocation(line: 4002, column: 225, scope: !7869)
!7887 = !DILocation(line: 4002, column: 282, scope: !7869)
!7888 = !DILocation(line: 4002, column: 256, scope: !7869)
!7889 = !DILocation(line: 4002, column: 263, scope: !7869)
!7890 = !DILocation(line: 4002, column: 309, scope: !7869)
!7891 = !DILocation(line: 4002, column: 320, scope: !7869)
!7892 = !DILocation(line: 4002, column: 290, scope: !7869)
!7893 = !DILocation(line: 4002, column: 25, scope: !7869)
!7894 = !DILocation(line: 4002, column: 29, scope: !7869)
!7895 = !DILocation(line: 4002, column: 45, scope: !7869)
!7896 = !DILocation(line: 4002, column: 34, scope: !7869)
!7897 = !DILocation(line: 4002, column: 53, scope: !7869)
!7898 = !DILocation(line: 4002, column: 62, scope: !7869)
!7899 = !DILocation(line: 4002, column: 66, scope: !7869)
!7900 = !DILocation(line: 4002, column: 75, scope: !7869)
!7901 = !DILocation(line: 4002, column: 79, scope: !7869)
!7902 = !DILocation(line: 4002, column: 4, scope: !7903)
!7903 = !DILexicalBlockFile(scope: !7869, file: !243, discriminator: 8)
!7904 = !DILocation(line: 4002, column: 89, scope: !7869)
!7905 = !DILocation(line: 4002, column: 116, scope: !7906)
!7906 = !DILexicalBlockFile(scope: !7866, file: !243, discriminator: 6)
!7907 = !DILocation(line: 4002, column: 120, scope: !7906)
!7908 = !DILocation(line: 4002, column: 114, scope: !7906)
!7909 = !DILocation(line: 4002, column: 77, scope: !7906)
!7910 = distinct !{!7910, !7911}
!7911 = !DILocation(line: 4002, column: 77, scope: !7849)
!7912 = !DILocation(line: 4002, column: 110, scope: !7913)
!7913 = !DILexicalBlockFile(scope: !7849, file: !243, discriminator: 7)
!7914 = !DILocation(line: 4002, column: 121, scope: !7913)
!7915 = !DILocation(line: 4002, column: 91, scope: !7913)
!7916 = !DILocation(line: 4002, column: 4, scope: !7913)
!7917 = !DILocation(line: 4005, column: 8, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !243, line: 4005, column: 8)
!7919 = distinct !DILexicalBlock(scope: !7780, file: !243, line: 4005, column: 2)
!7920 = !DILocation(line: 4005, column: 15, scope: !7918)
!7921 = !DILocation(line: 4005, column: 8, scope: !7919)
!7922 = !DILocation(line: 4005, column: 36, scope: !7923)
!7923 = !DILexicalBlockFile(scope: !7918, file: !243, discriminator: 1)
!7924 = !DILocation(line: 4005, column: 47, scope: !7923)
!7925 = !DILocation(line: 4005, column: 23, scope: !7923)
!7926 = !DILocation(line: 4006, column: 1, scope: !7780)
!7927 = distinct !DISubprogram(name: "seamless_XDrawLines", scope: !243, file: !243, line: 243, type: !7745, isLocal: true, isDefinition: true, scopeLine: 244, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!7928 = !DILocalVariable(name: "d", arg: 1, scope: !7927, file: !243, line: 243, type: !1515)
!7929 = !DILocation(line: 243, column: 30, scope: !7927)
!7930 = !DILocalVariable(name: "points", arg: 2, scope: !7927, file: !243, line: 243, type: !206)
!7931 = !DILocation(line: 243, column: 42, scope: !7927)
!7932 = !DILocalVariable(name: "npoints", arg: 3, scope: !7927, file: !243, line: 243, type: !45)
!7933 = !DILocation(line: 243, column: 54, scope: !7927)
!7934 = !DILocalVariable(name: "xoffset", arg: 4, scope: !7927, file: !243, line: 243, type: !45)
!7935 = !DILocation(line: 243, column: 67, scope: !7927)
!7936 = !DILocalVariable(name: "yoffset", arg: 5, scope: !7927, file: !243, line: 243, type: !45)
!7937 = !DILocation(line: 243, column: 80, scope: !7927)
!7938 = !DILocation(line: 245, column: 17, scope: !7927)
!7939 = !DILocation(line: 245, column: 2, scope: !7927)
!7940 = !DILocation(line: 245, column: 12, scope: !7927)
!7941 = !DILocation(line: 245, column: 14, scope: !7927)
!7942 = !DILocation(line: 246, column: 17, scope: !7927)
!7943 = !DILocation(line: 246, column: 2, scope: !7927)
!7944 = !DILocation(line: 246, column: 12, scope: !7927)
!7945 = !DILocation(line: 246, column: 14, scope: !7927)
!7946 = !DILocation(line: 247, column: 13, scope: !7927)
!7947 = !DILocation(line: 247, column: 24, scope: !7927)
!7948 = !DILocation(line: 247, column: 27, scope: !7927)
!7949 = !DILocation(line: 247, column: 33, scope: !7927)
!7950 = !DILocation(line: 247, column: 41, scope: !7927)
!7951 = !DILocation(line: 247, column: 2, scope: !7927)
!7952 = !DILocation(line: 248, column: 17, scope: !7927)
!7953 = !DILocation(line: 248, column: 2, scope: !7927)
!7954 = !DILocation(line: 248, column: 12, scope: !7927)
!7955 = !DILocation(line: 248, column: 14, scope: !7927)
!7956 = !DILocation(line: 249, column: 17, scope: !7927)
!7957 = !DILocation(line: 249, column: 2, scope: !7927)
!7958 = !DILocation(line: 249, column: 12, scope: !7927)
!7959 = !DILocation(line: 249, column: 14, scope: !7927)
!7960 = !DILocation(line: 250, column: 1, scope: !7927)
!7961 = distinct !DISubprogram(name: "ui_ellipse", scope: !243, file: !243, line: 4009, type: !7962, isLocal: false, isDefinition: true, scopeLine: 4013, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!7962 = !DISubroutineType(types: !7963)
!7963 = !{null, !47, !47, !45, !45, !45, !45, !5524, !193, !193}
!7964 = !DILocalVariable(name: "opcode", arg: 1, scope: !7961, file: !243, line: 4009, type: !47)
!7965 = !DILocation(line: 4009, column: 18, scope: !7961)
!7966 = !DILocalVariable(name: "fillmode", arg: 2, scope: !7961, file: !243, line: 4010, type: !47)
!7967 = !DILocation(line: 4010, column: 22, scope: !7961)
!7968 = !DILocalVariable(name: "x", arg: 3, scope: !7961, file: !243, line: 4011, type: !45)
!7969 = !DILocation(line: 4011, column: 20, scope: !7961)
!7970 = !DILocalVariable(name: "y", arg: 4, scope: !7961, file: !243, line: 4011, type: !45)
!7971 = !DILocation(line: 4011, column: 27, scope: !7961)
!7972 = !DILocalVariable(name: "cx", arg: 5, scope: !7961, file: !243, line: 4011, type: !45)
!7973 = !DILocation(line: 4011, column: 34, scope: !7961)
!7974 = !DILocalVariable(name: "cy", arg: 6, scope: !7961, file: !243, line: 4011, type: !45)
!7975 = !DILocation(line: 4011, column: 42, scope: !7961)
!7976 = !DILocalVariable(name: "brush", arg: 7, scope: !7961, file: !243, line: 4012, type: !5524)
!7977 = !DILocation(line: 4012, column: 25, scope: !7961)
!7978 = !DILocalVariable(name: "bgcolour", arg: 8, scope: !7961, file: !243, line: 4012, type: !193)
!7979 = !DILocation(line: 4012, column: 39, scope: !7961)
!7980 = !DILocalVariable(name: "fgcolour", arg: 9, scope: !7961, file: !243, line: 4012, type: !193)
!7981 = !DILocation(line: 4012, column: 56, scope: !7961)
!7982 = !DILocalVariable(name: "style", scope: !7961, file: !243, line: 4014, type: !47)
!7983 = !DILocation(line: 4014, column: 8, scope: !7961)
!7984 = !DILocalVariable(name: "i", scope: !7961, file: !243, line: 4014, type: !47)
!7985 = !DILocation(line: 4014, column: 15, scope: !7961)
!7986 = !DILocalVariable(name: "ipattern", scope: !7961, file: !243, line: 4014, type: !5532)
!7987 = !DILocation(line: 4014, column: 18, scope: !7961)
!7988 = !DILocalVariable(name: "fill", scope: !7961, file: !243, line: 4015, type: !189)
!7989 = !DILocation(line: 4015, column: 9, scope: !7961)
!7990 = !DILocation(line: 4017, column: 8, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7992, file: !243, line: 4017, column: 8)
!7992 = distinct !DILexicalBlock(scope: !7961, file: !243, line: 4017, column: 2)
!7993 = !DILocation(line: 4017, column: 15, scope: !7991)
!7994 = !DILocation(line: 4017, column: 8, scope: !7992)
!7995 = !DILocation(line: 4017, column: 36, scope: !7996)
!7996 = !DILexicalBlockFile(scope: !7991, file: !243, discriminator: 1)
!7997 = !DILocation(line: 4017, column: 47, scope: !7996)
!7998 = !DILocation(line: 4017, column: 62, scope: !7996)
!7999 = !DILocation(line: 4017, column: 53, scope: !7996)
!8000 = !DILocation(line: 4017, column: 23, scope: !7996)
!8001 = !DILocation(line: 4019, column: 6, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7961, file: !243, line: 4019, column: 6)
!8003 = !DILocation(line: 4019, column: 6, scope: !7961)
!8004 = !DILocation(line: 4020, column: 11, scope: !8002)
!8005 = !DILocation(line: 4020, column: 18, scope: !8002)
!8006 = !DILocation(line: 4020, column: 9, scope: !8002)
!8007 = !DILocation(line: 4020, column: 3, scope: !8002)
!8008 = !DILocation(line: 4022, column: 9, scope: !8002)
!8009 = !DILocation(line: 4024, column: 10, scope: !7961)
!8010 = !DILocation(line: 4024, column: 2, scope: !7961)
!8011 = !DILocation(line: 4027, column: 19, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7961, file: !243, line: 4025, column: 2)
!8013 = !DILocation(line: 4027, column: 30, scope: !8012)
!8014 = !DILocation(line: 4027, column: 38, scope: !8012)
!8015 = !DILocation(line: 4027, column: 53, scope: !8012)
!8016 = !DILocation(line: 4027, column: 77, scope: !8017)
!8017 = !DILexicalBlockFile(scope: !8012, file: !243, discriminator: 1)
!8018 = !DILocation(line: 4027, column: 60, scope: !8017)
!8019 = !DILocation(line: 4027, column: 38, scope: !8017)
!8020 = !DILocation(line: 4027, column: 89, scope: !8021)
!8021 = !DILexicalBlockFile(scope: !8012, file: !243, discriminator: 2)
!8022 = !DILocation(line: 4027, column: 103, scope: !8023)
!8023 = !DILexicalBlockFile(scope: !8012, file: !243, discriminator: 3)
!8024 = !DILocation(line: 4027, column: 89, scope: !8023)
!8025 = !DILocation(line: 4027, column: 123, scope: !8026)
!8026 = !DILexicalBlockFile(scope: !8012, file: !243, discriminator: 4)
!8027 = !DILocation(line: 4027, column: 114, scope: !8026)
!8028 = !DILocation(line: 4027, column: 89, scope: !8026)
!8029 = !DILocation(line: 4027, column: 89, scope: !8030)
!8030 = !DILexicalBlockFile(scope: !8012, file: !243, discriminator: 5)
!8031 = !DILocation(line: 4027, column: 38, scope: !8030)
!8032 = !DILocation(line: 4027, column: 38, scope: !8033)
!8033 = !DILexicalBlockFile(scope: !8012, file: !243, discriminator: 6)
!8034 = !DILocation(line: 4027, column: 36, scope: !8033)
!8035 = !DILocation(line: 4027, column: 4, scope: !8033)
!8036 = !DILocation(line: 4028, column: 14, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8012, file: !243, line: 4028, column: 4)
!8038 = !DILocation(line: 4028, column: 6, scope: !8037)
!8039 = !DILocation(line: 4028, column: 43, scope: !8040)
!8040 = !DILexicalBlockFile(scope: !8041, file: !243, discriminator: 1)
!8041 = distinct !DILexicalBlock(scope: !8037, file: !243, line: 4028, column: 24)
!8042 = !DILocation(line: 4028, column: 54, scope: !8040)
!8043 = !DILocation(line: 4028, column: 61, scope: !8040)
!8044 = !DILocation(line: 4028, column: 67, scope: !8040)
!8045 = !DILocation(line: 4028, column: 70, scope: !8040)
!8046 = !DILocation(line: 4028, column: 73, scope: !8040)
!8047 = !DILocation(line: 4028, column: 77, scope: !8040)
!8048 = !DILocation(line: 4028, column: 34, scope: !8040)
!8049 = !DILocation(line: 4028, column: 93, scope: !8040)
!8050 = distinct !{!8050, !8051}
!8051 = !DILocation(line: 4028, column: 93, scope: !8041)
!8052 = !DILocalVariable(name: "sw", scope: !8053, file: !243, line: 4028, type: !360)
!8053 = distinct !DILexicalBlock(scope: !8041, file: !243, line: 4028, column: 96)
!8054 = !DILocation(line: 4028, column: 115, scope: !8053)
!8055 = !DILocalVariable(name: "rect", scope: !8053, file: !243, line: 4028, type: !274)
!8056 = !DILocation(line: 4028, column: 130, scope: !8053)
!8057 = !DILocation(line: 4028, column: 141, scope: !8058)
!8058 = !DILexicalBlockFile(scope: !8059, file: !243, discriminator: 2)
!8059 = distinct !DILexicalBlock(scope: !8053, file: !243, line: 4028, column: 140)
!8060 = !DILocation(line: 4028, column: 140, scope: !8058)
!8061 = !DILocation(line: 4028, column: 161, scope: !8062)
!8062 = !DILexicalBlockFile(scope: !8059, file: !243, discriminator: 3)
!8063 = !DILocation(line: 4028, column: 178, scope: !8064)
!8064 = !DILexicalBlockFile(scope: !8065, file: !243, discriminator: 4)
!8065 = distinct !DILexicalBlock(scope: !8053, file: !243, line: 4028, column: 168)
!8066 = !DILocation(line: 4028, column: 176, scope: !8064)
!8067 = !DILocation(line: 4028, column: 173, scope: !8064)
!8068 = !DILocation(line: 4028, column: 198, scope: !8069)
!8069 = !DILexicalBlockFile(scope: !8070, file: !243, discriminator: 5)
!8070 = distinct !DILexicalBlock(scope: !8065, file: !243, line: 4028, column: 168)
!8071 = !DILocation(line: 4028, column: 168, scope: !8069)
!8072 = !DILocation(line: 4028, column: 245, scope: !8073)
!8073 = !DILexicalBlockFile(scope: !8074, file: !243, discriminator: 6)
!8074 = distinct !DILexicalBlock(scope: !8070, file: !243, line: 4028, column: 217)
!8075 = !DILocation(line: 4028, column: 228, scope: !8073)
!8076 = !DILocation(line: 4028, column: 249, scope: !8073)
!8077 = !DILocation(line: 4028, column: 253, scope: !8073)
!8078 = !DILocation(line: 4028, column: 247, scope: !8073)
!8079 = !DILocation(line: 4028, column: 224, scope: !8073)
!8080 = !DILocation(line: 4028, column: 226, scope: !8073)
!8081 = !DILocation(line: 4028, column: 288, scope: !8073)
!8082 = !DILocation(line: 4028, column: 271, scope: !8073)
!8083 = !DILocation(line: 4028, column: 292, scope: !8073)
!8084 = !DILocation(line: 4028, column: 296, scope: !8073)
!8085 = !DILocation(line: 4028, column: 290, scope: !8073)
!8086 = !DILocation(line: 4028, column: 267, scope: !8073)
!8087 = !DILocation(line: 4028, column: 269, scope: !8073)
!8088 = !DILocation(line: 4028, column: 335, scope: !8073)
!8089 = !DILocation(line: 4028, column: 310, scope: !8073)
!8090 = !DILocation(line: 4028, column: 316, scope: !8073)
!8091 = !DILocation(line: 4028, column: 373, scope: !8073)
!8092 = !DILocation(line: 4028, column: 347, scope: !8073)
!8093 = !DILocation(line: 4028, column: 354, scope: !8073)
!8094 = !DILocation(line: 4028, column: 400, scope: !8073)
!8095 = !DILocation(line: 4028, column: 411, scope: !8073)
!8096 = !DILocation(line: 4028, column: 381, scope: !8073)
!8097 = !DILocation(line: 4028, column: 16, scope: !8073)
!8098 = !DILocation(line: 4028, column: 27, scope: !8073)
!8099 = !DILocation(line: 4028, column: 31, scope: !8073)
!8100 = !DILocation(line: 4028, column: 36, scope: !8073)
!8101 = !DILocation(line: 4028, column: 42, scope: !8073)
!8102 = !DILocation(line: 4028, column: 44, scope: !8073)
!8103 = !DILocation(line: 4028, column: 48, scope: !8073)
!8104 = !DILocation(line: 4028, column: 43, scope: !8073)
!8105 = !DILocation(line: 4028, column: 57, scope: !8073)
!8106 = !DILocation(line: 4028, column: 59, scope: !8073)
!8107 = !DILocation(line: 4028, column: 63, scope: !8073)
!8108 = !DILocation(line: 4028, column: 58, scope: !8073)
!8109 = !DILocation(line: 4028, column: 72, scope: !8073)
!8110 = !DILocation(line: 4028, column: 76, scope: !8073)
!8111 = !DILocation(line: 4028, column: 6, scope: !8112)
!8112 = !DILexicalBlockFile(scope: !8073, file: !243, discriminator: 23)
!8113 = !DILocation(line: 4028, column: 92, scope: !8073)
!8114 = !DILocation(line: 4028, column: 207, scope: !8115)
!8115 = !DILexicalBlockFile(scope: !8070, file: !243, discriminator: 7)
!8116 = !DILocation(line: 4028, column: 211, scope: !8115)
!8117 = !DILocation(line: 4028, column: 205, scope: !8115)
!8118 = !DILocation(line: 4028, column: 168, scope: !8115)
!8119 = distinct !{!8119, !8120}
!8120 = !DILocation(line: 4028, column: 168, scope: !8053)
!8121 = !DILocation(line: 4028, column: 113, scope: !8122)
!8122 = !DILexicalBlockFile(scope: !8053, file: !243, discriminator: 8)
!8123 = !DILocation(line: 4028, column: 124, scope: !8122)
!8124 = !DILocation(line: 4028, column: 94, scope: !8122)
!8125 = !DILocation(line: 4028, column: 6, scope: !8122)
!8126 = !DILocation(line: 4028, column: 23, scope: !8127)
!8127 = !DILexicalBlockFile(scope: !8128, file: !243, discriminator: 9)
!8128 = distinct !DILexicalBlock(scope: !8041, file: !243, line: 4028, column: 23)
!8129 = !DILocation(line: 4028, column: 48, scope: !8130)
!8130 = !DILexicalBlockFile(scope: !8128, file: !243, discriminator: 10)
!8131 = !DILocation(line: 4028, column: 59, scope: !8130)
!8132 = !DILocation(line: 4028, column: 72, scope: !8130)
!8133 = !DILocation(line: 4028, column: 78, scope: !8130)
!8134 = !DILocation(line: 4028, column: 81, scope: !8130)
!8135 = !DILocation(line: 4028, column: 84, scope: !8130)
!8136 = !DILocation(line: 4028, column: 88, scope: !8130)
!8137 = !DILocation(line: 4028, column: 39, scope: !8130)
!8138 = !DILocation(line: 4028, column: 104, scope: !8139)
!8139 = !DILexicalBlockFile(scope: !8041, file: !243, discriminator: 11)
!8140 = !DILocation(line: 4028, column: 128, scope: !8141)
!8141 = !DILexicalBlockFile(scope: !8041, file: !243, discriminator: 12)
!8142 = !DILocation(line: 4028, column: 139, scope: !8141)
!8143 = !DILocation(line: 4028, column: 146, scope: !8141)
!8144 = !DILocation(line: 4028, column: 152, scope: !8141)
!8145 = !DILocation(line: 4028, column: 155, scope: !8141)
!8146 = !DILocation(line: 4028, column: 158, scope: !8141)
!8147 = !DILocation(line: 4028, column: 162, scope: !8141)
!8148 = !DILocation(line: 4028, column: 119, scope: !8141)
!8149 = !DILocation(line: 4028, column: 178, scope: !8141)
!8150 = distinct !{!8150, !8151}
!8151 = !DILocation(line: 4028, column: 178, scope: !8041)
!8152 = !DILocalVariable(name: "sw", scope: !8153, file: !243, line: 4028, type: !360)
!8153 = distinct !DILexicalBlock(scope: !8041, file: !243, line: 4028, column: 181)
!8154 = !DILocation(line: 4028, column: 200, scope: !8153)
!8155 = !DILocalVariable(name: "rect", scope: !8153, file: !243, line: 4028, type: !274)
!8156 = !DILocation(line: 4028, column: 215, scope: !8153)
!8157 = !DILocation(line: 4028, column: 226, scope: !8158)
!8158 = !DILexicalBlockFile(scope: !8159, file: !243, discriminator: 13)
!8159 = distinct !DILexicalBlock(scope: !8153, file: !243, line: 4028, column: 225)
!8160 = !DILocation(line: 4028, column: 225, scope: !8158)
!8161 = !DILocation(line: 4028, column: 246, scope: !8162)
!8162 = !DILexicalBlockFile(scope: !8159, file: !243, discriminator: 14)
!8163 = !DILocation(line: 4028, column: 263, scope: !8164)
!8164 = !DILexicalBlockFile(scope: !8165, file: !243, discriminator: 15)
!8165 = distinct !DILexicalBlock(scope: !8153, file: !243, line: 4028, column: 253)
!8166 = !DILocation(line: 4028, column: 261, scope: !8164)
!8167 = !DILocation(line: 4028, column: 258, scope: !8164)
!8168 = !DILocation(line: 4028, column: 283, scope: !8169)
!8169 = !DILexicalBlockFile(scope: !8170, file: !243, discriminator: 16)
!8170 = distinct !DILexicalBlock(scope: !8165, file: !243, line: 4028, column: 253)
!8171 = !DILocation(line: 4028, column: 253, scope: !8169)
!8172 = !DILocation(line: 4028, column: 330, scope: !8173)
!8173 = !DILexicalBlockFile(scope: !8174, file: !243, discriminator: 17)
!8174 = distinct !DILexicalBlock(scope: !8170, file: !243, line: 4028, column: 302)
!8175 = !DILocation(line: 4028, column: 313, scope: !8173)
!8176 = !DILocation(line: 4028, column: 334, scope: !8173)
!8177 = !DILocation(line: 4028, column: 338, scope: !8173)
!8178 = !DILocation(line: 4028, column: 332, scope: !8173)
!8179 = !DILocation(line: 4028, column: 309, scope: !8173)
!8180 = !DILocation(line: 4028, column: 311, scope: !8173)
!8181 = !DILocation(line: 4028, column: 373, scope: !8173)
!8182 = !DILocation(line: 4028, column: 356, scope: !8173)
!8183 = !DILocation(line: 4028, column: 377, scope: !8173)
!8184 = !DILocation(line: 4028, column: 381, scope: !8173)
!8185 = !DILocation(line: 4028, column: 375, scope: !8173)
!8186 = !DILocation(line: 4028, column: 352, scope: !8173)
!8187 = !DILocation(line: 4028, column: 354, scope: !8173)
!8188 = !DILocation(line: 4028, column: 420, scope: !8173)
!8189 = !DILocation(line: 4028, column: 395, scope: !8173)
!8190 = !DILocation(line: 4028, column: 401, scope: !8173)
!8191 = !DILocation(line: 4028, column: 458, scope: !8173)
!8192 = !DILocation(line: 4028, column: 432, scope: !8173)
!8193 = !DILocation(line: 4028, column: 439, scope: !8173)
!8194 = !DILocation(line: 4028, column: 485, scope: !8173)
!8195 = !DILocation(line: 4028, column: 496, scope: !8173)
!8196 = !DILocation(line: 4028, column: 466, scope: !8173)
!8197 = !DILocation(line: 4028, column: 16, scope: !8173)
!8198 = !DILocation(line: 4028, column: 27, scope: !8173)
!8199 = !DILocation(line: 4028, column: 31, scope: !8173)
!8200 = !DILocation(line: 4028, column: 36, scope: !8173)
!8201 = !DILocation(line: 4028, column: 42, scope: !8173)
!8202 = !DILocation(line: 4028, column: 44, scope: !8173)
!8203 = !DILocation(line: 4028, column: 48, scope: !8173)
!8204 = !DILocation(line: 4028, column: 43, scope: !8173)
!8205 = !DILocation(line: 4028, column: 57, scope: !8173)
!8206 = !DILocation(line: 4028, column: 59, scope: !8173)
!8207 = !DILocation(line: 4028, column: 63, scope: !8173)
!8208 = !DILocation(line: 4028, column: 58, scope: !8173)
!8209 = !DILocation(line: 4028, column: 72, scope: !8173)
!8210 = !DILocation(line: 4028, column: 76, scope: !8173)
!8211 = !DILocation(line: 4028, column: 6, scope: !8212)
!8212 = !DILexicalBlockFile(scope: !8173, file: !243, discriminator: 24)
!8213 = !DILocation(line: 4028, column: 92, scope: !8173)
!8214 = !DILocation(line: 4028, column: 292, scope: !8215)
!8215 = !DILexicalBlockFile(scope: !8170, file: !243, discriminator: 18)
!8216 = !DILocation(line: 4028, column: 296, scope: !8215)
!8217 = !DILocation(line: 4028, column: 290, scope: !8215)
!8218 = !DILocation(line: 4028, column: 253, scope: !8215)
!8219 = distinct !{!8219, !8220}
!8220 = !DILocation(line: 4028, column: 253, scope: !8153)
!8221 = !DILocation(line: 4028, column: 113, scope: !8222)
!8222 = !DILexicalBlockFile(scope: !8153, file: !243, discriminator: 19)
!8223 = !DILocation(line: 4028, column: 124, scope: !8222)
!8224 = !DILocation(line: 4028, column: 94, scope: !8222)
!8225 = !DILocation(line: 4028, column: 6, scope: !8222)
!8226 = !DILocation(line: 4028, column: 23, scope: !8227)
!8227 = !DILexicalBlockFile(scope: !8228, file: !243, discriminator: 20)
!8228 = distinct !DILexicalBlock(scope: !8041, file: !243, line: 4028, column: 23)
!8229 = !DILocation(line: 4028, column: 48, scope: !8230)
!8230 = !DILexicalBlockFile(scope: !8228, file: !243, discriminator: 21)
!8231 = !DILocation(line: 4028, column: 59, scope: !8230)
!8232 = !DILocation(line: 4028, column: 72, scope: !8230)
!8233 = !DILocation(line: 4028, column: 78, scope: !8230)
!8234 = !DILocation(line: 4028, column: 81, scope: !8230)
!8235 = !DILocation(line: 4028, column: 84, scope: !8230)
!8236 = !DILocation(line: 4028, column: 88, scope: !8230)
!8237 = !DILocation(line: 4028, column: 39, scope: !8230)
!8238 = !DILocation(line: 4028, column: 104, scope: !8239)
!8239 = !DILexicalBlockFile(scope: !8041, file: !243, discriminator: 22)
!8240 = !DILocation(line: 4029, column: 4, scope: !8012)
!8241 = !DILocation(line: 4033, column: 25, scope: !8012)
!8242 = !DILocation(line: 4033, column: 32, scope: !8012)
!8243 = !DILocation(line: 4033, column: 43, scope: !8012)
!8244 = !DILocation(line: 4033, column: 23, scope: !8012)
!8245 = !DILocation(line: 4032, column: 20, scope: !8012)
!8246 = !DILocation(line: 4032, column: 11, scope: !8012)
!8247 = !DILocation(line: 4032, column: 9, scope: !8012)
!8248 = !DILocation(line: 4034, column: 19, scope: !8012)
!8249 = !DILocation(line: 4034, column: 30, scope: !8012)
!8250 = !DILocation(line: 4034, column: 38, scope: !8012)
!8251 = !DILocation(line: 4034, column: 53, scope: !8012)
!8252 = !DILocation(line: 4034, column: 77, scope: !8017)
!8253 = !DILocation(line: 4034, column: 60, scope: !8017)
!8254 = !DILocation(line: 4034, column: 38, scope: !8017)
!8255 = !DILocation(line: 4034, column: 89, scope: !8021)
!8256 = !DILocation(line: 4034, column: 103, scope: !8023)
!8257 = !DILocation(line: 4034, column: 89, scope: !8023)
!8258 = !DILocation(line: 4034, column: 123, scope: !8026)
!8259 = !DILocation(line: 4034, column: 114, scope: !8026)
!8260 = !DILocation(line: 4034, column: 89, scope: !8026)
!8261 = !DILocation(line: 4034, column: 89, scope: !8030)
!8262 = !DILocation(line: 4034, column: 38, scope: !8030)
!8263 = !DILocation(line: 4034, column: 38, scope: !8033)
!8264 = !DILocation(line: 4034, column: 36, scope: !8033)
!8265 = !DILocation(line: 4034, column: 4, scope: !8033)
!8266 = !DILocation(line: 4035, column: 19, scope: !8012)
!8267 = !DILocation(line: 4035, column: 30, scope: !8012)
!8268 = !DILocation(line: 4035, column: 38, scope: !8012)
!8269 = !DILocation(line: 4035, column: 53, scope: !8012)
!8270 = !DILocation(line: 4035, column: 77, scope: !8017)
!8271 = !DILocation(line: 4035, column: 60, scope: !8017)
!8272 = !DILocation(line: 4035, column: 38, scope: !8017)
!8273 = !DILocation(line: 4035, column: 89, scope: !8021)
!8274 = !DILocation(line: 4035, column: 103, scope: !8023)
!8275 = !DILocation(line: 4035, column: 89, scope: !8023)
!8276 = !DILocation(line: 4035, column: 123, scope: !8026)
!8277 = !DILocation(line: 4035, column: 114, scope: !8026)
!8278 = !DILocation(line: 4035, column: 89, scope: !8026)
!8279 = !DILocation(line: 4035, column: 89, scope: !8030)
!8280 = !DILocation(line: 4035, column: 38, scope: !8030)
!8281 = !DILocation(line: 4035, column: 38, scope: !8033)
!8282 = !DILocation(line: 4035, column: 36, scope: !8033)
!8283 = !DILocation(line: 4035, column: 4, scope: !8033)
!8284 = !DILocation(line: 4036, column: 18, scope: !8012)
!8285 = !DILocation(line: 4036, column: 29, scope: !8012)
!8286 = !DILocation(line: 4036, column: 4, scope: !8012)
!8287 = !DILocation(line: 4037, column: 16, scope: !8012)
!8288 = !DILocation(line: 4037, column: 27, scope: !8012)
!8289 = !DILocation(line: 4037, column: 33, scope: !8012)
!8290 = !DILocation(line: 4037, column: 4, scope: !8012)
!8291 = !DILocation(line: 4038, column: 17, scope: !8012)
!8292 = !DILocation(line: 4038, column: 28, scope: !8012)
!8293 = !DILocation(line: 4038, column: 34, scope: !8012)
!8294 = !DILocation(line: 4038, column: 41, scope: !8012)
!8295 = !DILocation(line: 4038, column: 50, scope: !8012)
!8296 = !DILocation(line: 4038, column: 57, scope: !8012)
!8297 = !DILocation(line: 4038, column: 4, scope: !8012)
!8298 = !DILocation(line: 4039, column: 14, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8012, file: !243, line: 4039, column: 4)
!8300 = !DILocation(line: 4039, column: 6, scope: !8299)
!8301 = !DILocation(line: 4039, column: 43, scope: !8302)
!8302 = !DILexicalBlockFile(scope: !8303, file: !243, discriminator: 1)
!8303 = distinct !DILexicalBlock(scope: !8299, file: !243, line: 4039, column: 24)
!8304 = !DILocation(line: 4039, column: 54, scope: !8302)
!8305 = !DILocation(line: 4039, column: 61, scope: !8302)
!8306 = !DILocation(line: 4039, column: 67, scope: !8302)
!8307 = !DILocation(line: 4039, column: 70, scope: !8302)
!8308 = !DILocation(line: 4039, column: 73, scope: !8302)
!8309 = !DILocation(line: 4039, column: 77, scope: !8302)
!8310 = !DILocation(line: 4039, column: 34, scope: !8302)
!8311 = !DILocation(line: 4039, column: 93, scope: !8302)
!8312 = distinct !{!8312, !8313}
!8313 = !DILocation(line: 4039, column: 93, scope: !8303)
!8314 = !DILocalVariable(name: "sw", scope: !8315, file: !243, line: 4039, type: !360)
!8315 = distinct !DILexicalBlock(scope: !8303, file: !243, line: 4039, column: 96)
!8316 = !DILocation(line: 4039, column: 115, scope: !8315)
!8317 = !DILocalVariable(name: "rect", scope: !8315, file: !243, line: 4039, type: !274)
!8318 = !DILocation(line: 4039, column: 130, scope: !8315)
!8319 = !DILocation(line: 4039, column: 141, scope: !8320)
!8320 = !DILexicalBlockFile(scope: !8321, file: !243, discriminator: 2)
!8321 = distinct !DILexicalBlock(scope: !8315, file: !243, line: 4039, column: 140)
!8322 = !DILocation(line: 4039, column: 140, scope: !8320)
!8323 = !DILocation(line: 4039, column: 161, scope: !8324)
!8324 = !DILexicalBlockFile(scope: !8321, file: !243, discriminator: 3)
!8325 = !DILocation(line: 4039, column: 178, scope: !8326)
!8326 = !DILexicalBlockFile(scope: !8327, file: !243, discriminator: 4)
!8327 = distinct !DILexicalBlock(scope: !8315, file: !243, line: 4039, column: 168)
!8328 = !DILocation(line: 4039, column: 176, scope: !8326)
!8329 = !DILocation(line: 4039, column: 173, scope: !8326)
!8330 = !DILocation(line: 4039, column: 198, scope: !8331)
!8331 = !DILexicalBlockFile(scope: !8332, file: !243, discriminator: 5)
!8332 = distinct !DILexicalBlock(scope: !8327, file: !243, line: 4039, column: 168)
!8333 = !DILocation(line: 4039, column: 168, scope: !8331)
!8334 = !DILocation(line: 4039, column: 245, scope: !8335)
!8335 = !DILexicalBlockFile(scope: !8336, file: !243, discriminator: 6)
!8336 = distinct !DILexicalBlock(scope: !8332, file: !243, line: 4039, column: 217)
!8337 = !DILocation(line: 4039, column: 228, scope: !8335)
!8338 = !DILocation(line: 4039, column: 249, scope: !8335)
!8339 = !DILocation(line: 4039, column: 253, scope: !8335)
!8340 = !DILocation(line: 4039, column: 247, scope: !8335)
!8341 = !DILocation(line: 4039, column: 224, scope: !8335)
!8342 = !DILocation(line: 4039, column: 226, scope: !8335)
!8343 = !DILocation(line: 4039, column: 288, scope: !8335)
!8344 = !DILocation(line: 4039, column: 271, scope: !8335)
!8345 = !DILocation(line: 4039, column: 292, scope: !8335)
!8346 = !DILocation(line: 4039, column: 296, scope: !8335)
!8347 = !DILocation(line: 4039, column: 290, scope: !8335)
!8348 = !DILocation(line: 4039, column: 267, scope: !8335)
!8349 = !DILocation(line: 4039, column: 269, scope: !8335)
!8350 = !DILocation(line: 4039, column: 335, scope: !8335)
!8351 = !DILocation(line: 4039, column: 310, scope: !8335)
!8352 = !DILocation(line: 4039, column: 316, scope: !8335)
!8353 = !DILocation(line: 4039, column: 373, scope: !8335)
!8354 = !DILocation(line: 4039, column: 347, scope: !8335)
!8355 = !DILocation(line: 4039, column: 354, scope: !8335)
!8356 = !DILocation(line: 4039, column: 400, scope: !8335)
!8357 = !DILocation(line: 4039, column: 411, scope: !8335)
!8358 = !DILocation(line: 4039, column: 381, scope: !8335)
!8359 = !DILocation(line: 4039, column: 16, scope: !8335)
!8360 = !DILocation(line: 4039, column: 27, scope: !8335)
!8361 = !DILocation(line: 4039, column: 31, scope: !8335)
!8362 = !DILocation(line: 4039, column: 36, scope: !8335)
!8363 = !DILocation(line: 4039, column: 42, scope: !8335)
!8364 = !DILocation(line: 4039, column: 44, scope: !8335)
!8365 = !DILocation(line: 4039, column: 48, scope: !8335)
!8366 = !DILocation(line: 4039, column: 43, scope: !8335)
!8367 = !DILocation(line: 4039, column: 57, scope: !8335)
!8368 = !DILocation(line: 4039, column: 59, scope: !8335)
!8369 = !DILocation(line: 4039, column: 63, scope: !8335)
!8370 = !DILocation(line: 4039, column: 58, scope: !8335)
!8371 = !DILocation(line: 4039, column: 72, scope: !8335)
!8372 = !DILocation(line: 4039, column: 76, scope: !8335)
!8373 = !DILocation(line: 4039, column: 6, scope: !8374)
!8374 = !DILexicalBlockFile(scope: !8335, file: !243, discriminator: 23)
!8375 = !DILocation(line: 4039, column: 92, scope: !8335)
!8376 = !DILocation(line: 4039, column: 207, scope: !8377)
!8377 = !DILexicalBlockFile(scope: !8332, file: !243, discriminator: 7)
!8378 = !DILocation(line: 4039, column: 211, scope: !8377)
!8379 = !DILocation(line: 4039, column: 205, scope: !8377)
!8380 = !DILocation(line: 4039, column: 168, scope: !8377)
!8381 = distinct !{!8381, !8382}
!8382 = !DILocation(line: 4039, column: 168, scope: !8315)
!8383 = !DILocation(line: 4039, column: 113, scope: !8384)
!8384 = !DILexicalBlockFile(scope: !8315, file: !243, discriminator: 8)
!8385 = !DILocation(line: 4039, column: 124, scope: !8384)
!8386 = !DILocation(line: 4039, column: 94, scope: !8384)
!8387 = !DILocation(line: 4039, column: 6, scope: !8384)
!8388 = !DILocation(line: 4039, column: 23, scope: !8389)
!8389 = !DILexicalBlockFile(scope: !8390, file: !243, discriminator: 9)
!8390 = distinct !DILexicalBlock(scope: !8303, file: !243, line: 4039, column: 23)
!8391 = !DILocation(line: 4039, column: 48, scope: !8392)
!8392 = !DILexicalBlockFile(scope: !8390, file: !243, discriminator: 10)
!8393 = !DILocation(line: 4039, column: 59, scope: !8392)
!8394 = !DILocation(line: 4039, column: 72, scope: !8392)
!8395 = !DILocation(line: 4039, column: 78, scope: !8392)
!8396 = !DILocation(line: 4039, column: 81, scope: !8392)
!8397 = !DILocation(line: 4039, column: 84, scope: !8392)
!8398 = !DILocation(line: 4039, column: 88, scope: !8392)
!8399 = !DILocation(line: 4039, column: 39, scope: !8392)
!8400 = !DILocation(line: 4039, column: 104, scope: !8401)
!8401 = !DILexicalBlockFile(scope: !8303, file: !243, discriminator: 11)
!8402 = !DILocation(line: 4039, column: 128, scope: !8403)
!8403 = !DILexicalBlockFile(scope: !8303, file: !243, discriminator: 12)
!8404 = !DILocation(line: 4039, column: 139, scope: !8403)
!8405 = !DILocation(line: 4039, column: 146, scope: !8403)
!8406 = !DILocation(line: 4039, column: 152, scope: !8403)
!8407 = !DILocation(line: 4039, column: 155, scope: !8403)
!8408 = !DILocation(line: 4039, column: 158, scope: !8403)
!8409 = !DILocation(line: 4039, column: 162, scope: !8403)
!8410 = !DILocation(line: 4039, column: 119, scope: !8403)
!8411 = !DILocation(line: 4039, column: 178, scope: !8403)
!8412 = distinct !{!8412, !8413}
!8413 = !DILocation(line: 4039, column: 178, scope: !8303)
!8414 = !DILocalVariable(name: "sw", scope: !8415, file: !243, line: 4039, type: !360)
!8415 = distinct !DILexicalBlock(scope: !8303, file: !243, line: 4039, column: 181)
!8416 = !DILocation(line: 4039, column: 200, scope: !8415)
!8417 = !DILocalVariable(name: "rect", scope: !8415, file: !243, line: 4039, type: !274)
!8418 = !DILocation(line: 4039, column: 215, scope: !8415)
!8419 = !DILocation(line: 4039, column: 226, scope: !8420)
!8420 = !DILexicalBlockFile(scope: !8421, file: !243, discriminator: 13)
!8421 = distinct !DILexicalBlock(scope: !8415, file: !243, line: 4039, column: 225)
!8422 = !DILocation(line: 4039, column: 225, scope: !8420)
!8423 = !DILocation(line: 4039, column: 246, scope: !8424)
!8424 = !DILexicalBlockFile(scope: !8421, file: !243, discriminator: 14)
!8425 = !DILocation(line: 4039, column: 263, scope: !8426)
!8426 = !DILexicalBlockFile(scope: !8427, file: !243, discriminator: 15)
!8427 = distinct !DILexicalBlock(scope: !8415, file: !243, line: 4039, column: 253)
!8428 = !DILocation(line: 4039, column: 261, scope: !8426)
!8429 = !DILocation(line: 4039, column: 258, scope: !8426)
!8430 = !DILocation(line: 4039, column: 283, scope: !8431)
!8431 = !DILexicalBlockFile(scope: !8432, file: !243, discriminator: 16)
!8432 = distinct !DILexicalBlock(scope: !8427, file: !243, line: 4039, column: 253)
!8433 = !DILocation(line: 4039, column: 253, scope: !8431)
!8434 = !DILocation(line: 4039, column: 330, scope: !8435)
!8435 = !DILexicalBlockFile(scope: !8436, file: !243, discriminator: 17)
!8436 = distinct !DILexicalBlock(scope: !8432, file: !243, line: 4039, column: 302)
!8437 = !DILocation(line: 4039, column: 313, scope: !8435)
!8438 = !DILocation(line: 4039, column: 334, scope: !8435)
!8439 = !DILocation(line: 4039, column: 338, scope: !8435)
!8440 = !DILocation(line: 4039, column: 332, scope: !8435)
!8441 = !DILocation(line: 4039, column: 309, scope: !8435)
!8442 = !DILocation(line: 4039, column: 311, scope: !8435)
!8443 = !DILocation(line: 4039, column: 373, scope: !8435)
!8444 = !DILocation(line: 4039, column: 356, scope: !8435)
!8445 = !DILocation(line: 4039, column: 377, scope: !8435)
!8446 = !DILocation(line: 4039, column: 381, scope: !8435)
!8447 = !DILocation(line: 4039, column: 375, scope: !8435)
!8448 = !DILocation(line: 4039, column: 352, scope: !8435)
!8449 = !DILocation(line: 4039, column: 354, scope: !8435)
!8450 = !DILocation(line: 4039, column: 420, scope: !8435)
!8451 = !DILocation(line: 4039, column: 395, scope: !8435)
!8452 = !DILocation(line: 4039, column: 401, scope: !8435)
!8453 = !DILocation(line: 4039, column: 458, scope: !8435)
!8454 = !DILocation(line: 4039, column: 432, scope: !8435)
!8455 = !DILocation(line: 4039, column: 439, scope: !8435)
!8456 = !DILocation(line: 4039, column: 485, scope: !8435)
!8457 = !DILocation(line: 4039, column: 496, scope: !8435)
!8458 = !DILocation(line: 4039, column: 466, scope: !8435)
!8459 = !DILocation(line: 4039, column: 16, scope: !8435)
!8460 = !DILocation(line: 4039, column: 27, scope: !8435)
!8461 = !DILocation(line: 4039, column: 31, scope: !8435)
!8462 = !DILocation(line: 4039, column: 36, scope: !8435)
!8463 = !DILocation(line: 4039, column: 42, scope: !8435)
!8464 = !DILocation(line: 4039, column: 44, scope: !8435)
!8465 = !DILocation(line: 4039, column: 48, scope: !8435)
!8466 = !DILocation(line: 4039, column: 43, scope: !8435)
!8467 = !DILocation(line: 4039, column: 57, scope: !8435)
!8468 = !DILocation(line: 4039, column: 59, scope: !8435)
!8469 = !DILocation(line: 4039, column: 63, scope: !8435)
!8470 = !DILocation(line: 4039, column: 58, scope: !8435)
!8471 = !DILocation(line: 4039, column: 72, scope: !8435)
!8472 = !DILocation(line: 4039, column: 76, scope: !8435)
!8473 = !DILocation(line: 4039, column: 6, scope: !8474)
!8474 = !DILexicalBlockFile(scope: !8435, file: !243, discriminator: 24)
!8475 = !DILocation(line: 4039, column: 92, scope: !8435)
!8476 = !DILocation(line: 4039, column: 292, scope: !8477)
!8477 = !DILexicalBlockFile(scope: !8432, file: !243, discriminator: 18)
!8478 = !DILocation(line: 4039, column: 296, scope: !8477)
!8479 = !DILocation(line: 4039, column: 290, scope: !8477)
!8480 = !DILocation(line: 4039, column: 253, scope: !8477)
!8481 = distinct !{!8481, !8482}
!8482 = !DILocation(line: 4039, column: 253, scope: !8415)
!8483 = !DILocation(line: 4039, column: 113, scope: !8484)
!8484 = !DILexicalBlockFile(scope: !8415, file: !243, discriminator: 19)
!8485 = !DILocation(line: 4039, column: 124, scope: !8484)
!8486 = !DILocation(line: 4039, column: 94, scope: !8484)
!8487 = !DILocation(line: 4039, column: 6, scope: !8484)
!8488 = !DILocation(line: 4039, column: 23, scope: !8489)
!8489 = !DILexicalBlockFile(scope: !8490, file: !243, discriminator: 20)
!8490 = distinct !DILexicalBlock(scope: !8303, file: !243, line: 4039, column: 23)
!8491 = !DILocation(line: 4039, column: 48, scope: !8492)
!8492 = !DILexicalBlockFile(scope: !8490, file: !243, discriminator: 21)
!8493 = !DILocation(line: 4039, column: 59, scope: !8492)
!8494 = !DILocation(line: 4039, column: 72, scope: !8492)
!8495 = !DILocation(line: 4039, column: 78, scope: !8492)
!8496 = !DILocation(line: 4039, column: 81, scope: !8492)
!8497 = !DILocation(line: 4039, column: 84, scope: !8492)
!8498 = !DILocation(line: 4039, column: 88, scope: !8492)
!8499 = !DILocation(line: 4039, column: 39, scope: !8492)
!8500 = !DILocation(line: 4039, column: 104, scope: !8501)
!8501 = !DILexicalBlockFile(scope: !8303, file: !243, discriminator: 22)
!8502 = !DILocation(line: 4040, column: 18, scope: !8012)
!8503 = !DILocation(line: 4040, column: 29, scope: !8012)
!8504 = !DILocation(line: 4040, column: 4, scope: !8012)
!8505 = !DILocation(line: 4041, column: 17, scope: !8012)
!8506 = !DILocation(line: 4041, column: 28, scope: !8012)
!8507 = !DILocation(line: 4041, column: 4, scope: !8012)
!8508 = !DILocation(line: 4042, column: 33, scope: !8012)
!8509 = !DILocation(line: 4042, column: 21, scope: !8012)
!8510 = !DILocation(line: 4042, column: 4, scope: !8012)
!8511 = !DILocation(line: 4043, column: 4, scope: !8012)
!8512 = !DILocation(line: 4046, column: 8, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8012, file: !243, line: 4046, column: 8)
!8514 = !DILocation(line: 4046, column: 15, scope: !8513)
!8515 = !DILocation(line: 4046, column: 18, scope: !8513)
!8516 = !DILocation(line: 4046, column: 8, scope: !8012)
!8517 = !DILocation(line: 4048, column: 12, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8519, file: !243, line: 4048, column: 5)
!8519 = distinct !DILexicalBlock(scope: !8513, file: !243, line: 4047, column: 4)
!8520 = !DILocation(line: 4048, column: 10, scope: !8518)
!8521 = !DILocation(line: 4048, column: 17, scope: !8522)
!8522 = !DILexicalBlockFile(scope: !8523, file: !243, discriminator: 1)
!8523 = distinct !DILexicalBlock(scope: !8518, file: !243, line: 4048, column: 5)
!8524 = !DILocation(line: 4048, column: 19, scope: !8522)
!8525 = !DILocation(line: 4048, column: 5, scope: !8522)
!8526 = !DILocation(line: 4049, column: 39, scope: !8523)
!8527 = !DILocation(line: 4049, column: 24, scope: !8523)
!8528 = !DILocation(line: 4049, column: 31, scope: !8523)
!8529 = !DILocation(line: 4049, column: 19, scope: !8523)
!8530 = !DILocation(line: 4049, column: 17, scope: !8523)
!8531 = !DILocation(line: 4049, column: 6, scope: !8523)
!8532 = !DILocation(line: 4049, column: 22, scope: !8523)
!8533 = !DILocation(line: 4048, column: 26, scope: !8534)
!8534 = !DILexicalBlockFile(scope: !8523, file: !243, discriminator: 2)
!8535 = !DILocation(line: 4048, column: 5, scope: !8534)
!8536 = distinct !{!8536, !8537}
!8537 = !DILocation(line: 4048, column: 5, scope: !8519)
!8538 = !DILocation(line: 4050, column: 43, scope: !8519)
!8539 = !DILocation(line: 4050, column: 21, scope: !8519)
!8540 = !DILocation(line: 4050, column: 12, scope: !8519)
!8541 = !DILocation(line: 4050, column: 10, scope: !8519)
!8542 = !DILocation(line: 4051, column: 20, scope: !8519)
!8543 = !DILocation(line: 4051, column: 31, scope: !8519)
!8544 = !DILocation(line: 4051, column: 39, scope: !8519)
!8545 = !DILocation(line: 4051, column: 54, scope: !8519)
!8546 = !DILocation(line: 4051, column: 78, scope: !8547)
!8547 = !DILexicalBlockFile(scope: !8519, file: !243, discriminator: 1)
!8548 = !DILocation(line: 4051, column: 61, scope: !8547)
!8549 = !DILocation(line: 4051, column: 39, scope: !8547)
!8550 = !DILocation(line: 4051, column: 90, scope: !8551)
!8551 = !DILexicalBlockFile(scope: !8519, file: !243, discriminator: 2)
!8552 = !DILocation(line: 4051, column: 104, scope: !8553)
!8553 = !DILexicalBlockFile(scope: !8519, file: !243, discriminator: 3)
!8554 = !DILocation(line: 4051, column: 90, scope: !8553)
!8555 = !DILocation(line: 4051, column: 124, scope: !8556)
!8556 = !DILexicalBlockFile(scope: !8519, file: !243, discriminator: 4)
!8557 = !DILocation(line: 4051, column: 115, scope: !8556)
!8558 = !DILocation(line: 4051, column: 90, scope: !8556)
!8559 = !DILocation(line: 4051, column: 90, scope: !8560)
!8560 = !DILexicalBlockFile(scope: !8519, file: !243, discriminator: 5)
!8561 = !DILocation(line: 4051, column: 39, scope: !8560)
!8562 = !DILocation(line: 4051, column: 39, scope: !8563)
!8563 = !DILexicalBlockFile(scope: !8519, file: !243, discriminator: 6)
!8564 = !DILocation(line: 4051, column: 37, scope: !8563)
!8565 = !DILocation(line: 4051, column: 5, scope: !8563)
!8566 = !DILocation(line: 4052, column: 20, scope: !8519)
!8567 = !DILocation(line: 4052, column: 31, scope: !8519)
!8568 = !DILocation(line: 4052, column: 39, scope: !8519)
!8569 = !DILocation(line: 4052, column: 54, scope: !8519)
!8570 = !DILocation(line: 4052, column: 78, scope: !8547)
!8571 = !DILocation(line: 4052, column: 61, scope: !8547)
!8572 = !DILocation(line: 4052, column: 39, scope: !8547)
!8573 = !DILocation(line: 4052, column: 90, scope: !8551)
!8574 = !DILocation(line: 4052, column: 104, scope: !8553)
!8575 = !DILocation(line: 4052, column: 90, scope: !8553)
!8576 = !DILocation(line: 4052, column: 124, scope: !8556)
!8577 = !DILocation(line: 4052, column: 115, scope: !8556)
!8578 = !DILocation(line: 4052, column: 90, scope: !8556)
!8579 = !DILocation(line: 4052, column: 90, scope: !8560)
!8580 = !DILocation(line: 4052, column: 39, scope: !8560)
!8581 = !DILocation(line: 4052, column: 39, scope: !8563)
!8582 = !DILocation(line: 4052, column: 37, scope: !8563)
!8583 = !DILocation(line: 4052, column: 5, scope: !8563)
!8584 = !DILocation(line: 4053, column: 19, scope: !8519)
!8585 = !DILocation(line: 4053, column: 30, scope: !8519)
!8586 = !DILocation(line: 4053, column: 5, scope: !8519)
!8587 = !DILocation(line: 4054, column: 17, scope: !8519)
!8588 = !DILocation(line: 4054, column: 28, scope: !8519)
!8589 = !DILocation(line: 4054, column: 34, scope: !8519)
!8590 = !DILocation(line: 4054, column: 5, scope: !8519)
!8591 = !DILocation(line: 4055, column: 18, scope: !8519)
!8592 = !DILocation(line: 4055, column: 29, scope: !8519)
!8593 = !DILocation(line: 4055, column: 35, scope: !8519)
!8594 = !DILocation(line: 4055, column: 42, scope: !8519)
!8595 = !DILocation(line: 4055, column: 51, scope: !8519)
!8596 = !DILocation(line: 4055, column: 58, scope: !8519)
!8597 = !DILocation(line: 4055, column: 5, scope: !8519)
!8598 = !DILocation(line: 4056, column: 15, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8519, file: !243, line: 4056, column: 5)
!8600 = !DILocation(line: 4056, column: 7, scope: !8599)
!8601 = !DILocation(line: 4056, column: 44, scope: !8602)
!8602 = !DILexicalBlockFile(scope: !8603, file: !243, discriminator: 1)
!8603 = distinct !DILexicalBlock(scope: !8599, file: !243, line: 4056, column: 25)
!8604 = !DILocation(line: 4056, column: 55, scope: !8602)
!8605 = !DILocation(line: 4056, column: 62, scope: !8602)
!8606 = !DILocation(line: 4056, column: 68, scope: !8602)
!8607 = !DILocation(line: 4056, column: 71, scope: !8602)
!8608 = !DILocation(line: 4056, column: 74, scope: !8602)
!8609 = !DILocation(line: 4056, column: 78, scope: !8602)
!8610 = !DILocation(line: 4056, column: 35, scope: !8602)
!8611 = !DILocation(line: 4056, column: 94, scope: !8602)
!8612 = distinct !{!8612, !8613}
!8613 = !DILocation(line: 4056, column: 94, scope: !8603)
!8614 = !DILocalVariable(name: "sw", scope: !8615, file: !243, line: 4056, type: !360)
!8615 = distinct !DILexicalBlock(scope: !8603, file: !243, line: 4056, column: 97)
!8616 = !DILocation(line: 4056, column: 116, scope: !8615)
!8617 = !DILocalVariable(name: "rect", scope: !8615, file: !243, line: 4056, type: !274)
!8618 = !DILocation(line: 4056, column: 131, scope: !8615)
!8619 = !DILocation(line: 4056, column: 142, scope: !8620)
!8620 = !DILexicalBlockFile(scope: !8621, file: !243, discriminator: 2)
!8621 = distinct !DILexicalBlock(scope: !8615, file: !243, line: 4056, column: 141)
!8622 = !DILocation(line: 4056, column: 141, scope: !8620)
!8623 = !DILocation(line: 4056, column: 162, scope: !8624)
!8624 = !DILexicalBlockFile(scope: !8621, file: !243, discriminator: 3)
!8625 = !DILocation(line: 4056, column: 179, scope: !8626)
!8626 = !DILexicalBlockFile(scope: !8627, file: !243, discriminator: 4)
!8627 = distinct !DILexicalBlock(scope: !8615, file: !243, line: 4056, column: 169)
!8628 = !DILocation(line: 4056, column: 177, scope: !8626)
!8629 = !DILocation(line: 4056, column: 174, scope: !8626)
!8630 = !DILocation(line: 4056, column: 199, scope: !8631)
!8631 = !DILexicalBlockFile(scope: !8632, file: !243, discriminator: 5)
!8632 = distinct !DILexicalBlock(scope: !8627, file: !243, line: 4056, column: 169)
!8633 = !DILocation(line: 4056, column: 169, scope: !8631)
!8634 = !DILocation(line: 4056, column: 246, scope: !8635)
!8635 = !DILexicalBlockFile(scope: !8636, file: !243, discriminator: 6)
!8636 = distinct !DILexicalBlock(scope: !8632, file: !243, line: 4056, column: 218)
!8637 = !DILocation(line: 4056, column: 229, scope: !8635)
!8638 = !DILocation(line: 4056, column: 250, scope: !8635)
!8639 = !DILocation(line: 4056, column: 254, scope: !8635)
!8640 = !DILocation(line: 4056, column: 248, scope: !8635)
!8641 = !DILocation(line: 4056, column: 225, scope: !8635)
!8642 = !DILocation(line: 4056, column: 227, scope: !8635)
!8643 = !DILocation(line: 4056, column: 289, scope: !8635)
!8644 = !DILocation(line: 4056, column: 272, scope: !8635)
!8645 = !DILocation(line: 4056, column: 293, scope: !8635)
!8646 = !DILocation(line: 4056, column: 297, scope: !8635)
!8647 = !DILocation(line: 4056, column: 291, scope: !8635)
!8648 = !DILocation(line: 4056, column: 268, scope: !8635)
!8649 = !DILocation(line: 4056, column: 270, scope: !8635)
!8650 = !DILocation(line: 4056, column: 336, scope: !8635)
!8651 = !DILocation(line: 4056, column: 311, scope: !8635)
!8652 = !DILocation(line: 4056, column: 317, scope: !8635)
!8653 = !DILocation(line: 4056, column: 374, scope: !8635)
!8654 = !DILocation(line: 4056, column: 348, scope: !8635)
!8655 = !DILocation(line: 4056, column: 355, scope: !8635)
!8656 = !DILocation(line: 4056, column: 401, scope: !8635)
!8657 = !DILocation(line: 4056, column: 412, scope: !8635)
!8658 = !DILocation(line: 4056, column: 382, scope: !8635)
!8659 = !DILocation(line: 4056, column: 17, scope: !8635)
!8660 = !DILocation(line: 4056, column: 28, scope: !8635)
!8661 = !DILocation(line: 4056, column: 32, scope: !8635)
!8662 = !DILocation(line: 4056, column: 37, scope: !8635)
!8663 = !DILocation(line: 4056, column: 43, scope: !8635)
!8664 = !DILocation(line: 4056, column: 45, scope: !8635)
!8665 = !DILocation(line: 4056, column: 49, scope: !8635)
!8666 = !DILocation(line: 4056, column: 44, scope: !8635)
!8667 = !DILocation(line: 4056, column: 58, scope: !8635)
!8668 = !DILocation(line: 4056, column: 60, scope: !8635)
!8669 = !DILocation(line: 4056, column: 64, scope: !8635)
!8670 = !DILocation(line: 4056, column: 59, scope: !8635)
!8671 = !DILocation(line: 4056, column: 73, scope: !8635)
!8672 = !DILocation(line: 4056, column: 77, scope: !8635)
!8673 = !DILocation(line: 4056, column: 7, scope: !8674)
!8674 = !DILexicalBlockFile(scope: !8635, file: !243, discriminator: 23)
!8675 = !DILocation(line: 4056, column: 93, scope: !8635)
!8676 = !DILocation(line: 4056, column: 208, scope: !8677)
!8677 = !DILexicalBlockFile(scope: !8632, file: !243, discriminator: 7)
!8678 = !DILocation(line: 4056, column: 212, scope: !8677)
!8679 = !DILocation(line: 4056, column: 206, scope: !8677)
!8680 = !DILocation(line: 4056, column: 169, scope: !8677)
!8681 = distinct !{!8681, !8682}
!8682 = !DILocation(line: 4056, column: 169, scope: !8615)
!8683 = !DILocation(line: 4056, column: 114, scope: !8684)
!8684 = !DILexicalBlockFile(scope: !8615, file: !243, discriminator: 8)
!8685 = !DILocation(line: 4056, column: 125, scope: !8684)
!8686 = !DILocation(line: 4056, column: 95, scope: !8684)
!8687 = !DILocation(line: 4056, column: 7, scope: !8684)
!8688 = !DILocation(line: 4056, column: 24, scope: !8689)
!8689 = !DILexicalBlockFile(scope: !8690, file: !243, discriminator: 9)
!8690 = distinct !DILexicalBlock(scope: !8603, file: !243, line: 4056, column: 24)
!8691 = !DILocation(line: 4056, column: 49, scope: !8692)
!8692 = !DILexicalBlockFile(scope: !8690, file: !243, discriminator: 10)
!8693 = !DILocation(line: 4056, column: 60, scope: !8692)
!8694 = !DILocation(line: 4056, column: 73, scope: !8692)
!8695 = !DILocation(line: 4056, column: 79, scope: !8692)
!8696 = !DILocation(line: 4056, column: 82, scope: !8692)
!8697 = !DILocation(line: 4056, column: 85, scope: !8692)
!8698 = !DILocation(line: 4056, column: 89, scope: !8692)
!8699 = !DILocation(line: 4056, column: 40, scope: !8692)
!8700 = !DILocation(line: 4056, column: 105, scope: !8701)
!8701 = !DILexicalBlockFile(scope: !8603, file: !243, discriminator: 11)
!8702 = !DILocation(line: 4056, column: 129, scope: !8703)
!8703 = !DILexicalBlockFile(scope: !8603, file: !243, discriminator: 12)
!8704 = !DILocation(line: 4056, column: 140, scope: !8703)
!8705 = !DILocation(line: 4056, column: 147, scope: !8703)
!8706 = !DILocation(line: 4056, column: 153, scope: !8703)
!8707 = !DILocation(line: 4056, column: 156, scope: !8703)
!8708 = !DILocation(line: 4056, column: 159, scope: !8703)
!8709 = !DILocation(line: 4056, column: 163, scope: !8703)
!8710 = !DILocation(line: 4056, column: 120, scope: !8703)
!8711 = !DILocation(line: 4056, column: 179, scope: !8703)
!8712 = distinct !{!8712, !8713}
!8713 = !DILocation(line: 4056, column: 179, scope: !8603)
!8714 = !DILocalVariable(name: "sw", scope: !8715, file: !243, line: 4056, type: !360)
!8715 = distinct !DILexicalBlock(scope: !8603, file: !243, line: 4056, column: 182)
!8716 = !DILocation(line: 4056, column: 201, scope: !8715)
!8717 = !DILocalVariable(name: "rect", scope: !8715, file: !243, line: 4056, type: !274)
!8718 = !DILocation(line: 4056, column: 216, scope: !8715)
!8719 = !DILocation(line: 4056, column: 227, scope: !8720)
!8720 = !DILexicalBlockFile(scope: !8721, file: !243, discriminator: 13)
!8721 = distinct !DILexicalBlock(scope: !8715, file: !243, line: 4056, column: 226)
!8722 = !DILocation(line: 4056, column: 226, scope: !8720)
!8723 = !DILocation(line: 4056, column: 247, scope: !8724)
!8724 = !DILexicalBlockFile(scope: !8721, file: !243, discriminator: 14)
!8725 = !DILocation(line: 4056, column: 264, scope: !8726)
!8726 = !DILexicalBlockFile(scope: !8727, file: !243, discriminator: 15)
!8727 = distinct !DILexicalBlock(scope: !8715, file: !243, line: 4056, column: 254)
!8728 = !DILocation(line: 4056, column: 262, scope: !8726)
!8729 = !DILocation(line: 4056, column: 259, scope: !8726)
!8730 = !DILocation(line: 4056, column: 284, scope: !8731)
!8731 = !DILexicalBlockFile(scope: !8732, file: !243, discriminator: 16)
!8732 = distinct !DILexicalBlock(scope: !8727, file: !243, line: 4056, column: 254)
!8733 = !DILocation(line: 4056, column: 254, scope: !8731)
!8734 = !DILocation(line: 4056, column: 331, scope: !8735)
!8735 = !DILexicalBlockFile(scope: !8736, file: !243, discriminator: 17)
!8736 = distinct !DILexicalBlock(scope: !8732, file: !243, line: 4056, column: 303)
!8737 = !DILocation(line: 4056, column: 314, scope: !8735)
!8738 = !DILocation(line: 4056, column: 335, scope: !8735)
!8739 = !DILocation(line: 4056, column: 339, scope: !8735)
!8740 = !DILocation(line: 4056, column: 333, scope: !8735)
!8741 = !DILocation(line: 4056, column: 310, scope: !8735)
!8742 = !DILocation(line: 4056, column: 312, scope: !8735)
!8743 = !DILocation(line: 4056, column: 374, scope: !8735)
!8744 = !DILocation(line: 4056, column: 357, scope: !8735)
!8745 = !DILocation(line: 4056, column: 378, scope: !8735)
!8746 = !DILocation(line: 4056, column: 382, scope: !8735)
!8747 = !DILocation(line: 4056, column: 376, scope: !8735)
!8748 = !DILocation(line: 4056, column: 353, scope: !8735)
!8749 = !DILocation(line: 4056, column: 355, scope: !8735)
!8750 = !DILocation(line: 4056, column: 421, scope: !8735)
!8751 = !DILocation(line: 4056, column: 396, scope: !8735)
!8752 = !DILocation(line: 4056, column: 402, scope: !8735)
!8753 = !DILocation(line: 4056, column: 459, scope: !8735)
!8754 = !DILocation(line: 4056, column: 433, scope: !8735)
!8755 = !DILocation(line: 4056, column: 440, scope: !8735)
!8756 = !DILocation(line: 4056, column: 486, scope: !8735)
!8757 = !DILocation(line: 4056, column: 497, scope: !8735)
!8758 = !DILocation(line: 4056, column: 467, scope: !8735)
!8759 = !DILocation(line: 4056, column: 17, scope: !8735)
!8760 = !DILocation(line: 4056, column: 28, scope: !8735)
!8761 = !DILocation(line: 4056, column: 32, scope: !8735)
!8762 = !DILocation(line: 4056, column: 37, scope: !8735)
!8763 = !DILocation(line: 4056, column: 43, scope: !8735)
!8764 = !DILocation(line: 4056, column: 45, scope: !8735)
!8765 = !DILocation(line: 4056, column: 49, scope: !8735)
!8766 = !DILocation(line: 4056, column: 44, scope: !8735)
!8767 = !DILocation(line: 4056, column: 58, scope: !8735)
!8768 = !DILocation(line: 4056, column: 60, scope: !8735)
!8769 = !DILocation(line: 4056, column: 64, scope: !8735)
!8770 = !DILocation(line: 4056, column: 59, scope: !8735)
!8771 = !DILocation(line: 4056, column: 73, scope: !8735)
!8772 = !DILocation(line: 4056, column: 77, scope: !8735)
!8773 = !DILocation(line: 4056, column: 7, scope: !8774)
!8774 = !DILexicalBlockFile(scope: !8735, file: !243, discriminator: 24)
!8775 = !DILocation(line: 4056, column: 93, scope: !8735)
!8776 = !DILocation(line: 4056, column: 293, scope: !8777)
!8777 = !DILexicalBlockFile(scope: !8732, file: !243, discriminator: 18)
!8778 = !DILocation(line: 4056, column: 297, scope: !8777)
!8779 = !DILocation(line: 4056, column: 291, scope: !8777)
!8780 = !DILocation(line: 4056, column: 254, scope: !8777)
!8781 = distinct !{!8781, !8782}
!8782 = !DILocation(line: 4056, column: 254, scope: !8715)
!8783 = !DILocation(line: 4056, column: 114, scope: !8784)
!8784 = !DILexicalBlockFile(scope: !8715, file: !243, discriminator: 19)
!8785 = !DILocation(line: 4056, column: 125, scope: !8784)
!8786 = !DILocation(line: 4056, column: 95, scope: !8784)
!8787 = !DILocation(line: 4056, column: 7, scope: !8784)
!8788 = !DILocation(line: 4056, column: 24, scope: !8789)
!8789 = !DILexicalBlockFile(scope: !8790, file: !243, discriminator: 20)
!8790 = distinct !DILexicalBlock(scope: !8603, file: !243, line: 4056, column: 24)
!8791 = !DILocation(line: 4056, column: 49, scope: !8792)
!8792 = !DILexicalBlockFile(scope: !8790, file: !243, discriminator: 21)
!8793 = !DILocation(line: 4056, column: 60, scope: !8792)
!8794 = !DILocation(line: 4056, column: 73, scope: !8792)
!8795 = !DILocation(line: 4056, column: 79, scope: !8792)
!8796 = !DILocation(line: 4056, column: 82, scope: !8792)
!8797 = !DILocation(line: 4056, column: 85, scope: !8792)
!8798 = !DILocation(line: 4056, column: 89, scope: !8792)
!8799 = !DILocation(line: 4056, column: 40, scope: !8792)
!8800 = !DILocation(line: 4056, column: 105, scope: !8801)
!8801 = !DILexicalBlockFile(scope: !8603, file: !243, discriminator: 22)
!8802 = !DILocation(line: 4057, column: 19, scope: !8519)
!8803 = !DILocation(line: 4057, column: 30, scope: !8519)
!8804 = !DILocation(line: 4057, column: 5, scope: !8519)
!8805 = !DILocation(line: 4058, column: 18, scope: !8519)
!8806 = !DILocation(line: 4058, column: 29, scope: !8519)
!8807 = !DILocation(line: 4058, column: 5, scope: !8519)
!8808 = !DILocation(line: 4059, column: 34, scope: !8519)
!8809 = !DILocation(line: 4059, column: 22, scope: !8519)
!8810 = !DILocation(line: 4059, column: 5, scope: !8519)
!8811 = !DILocation(line: 4060, column: 4, scope: !8519)
!8812 = !DILocation(line: 4061, column: 13, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8513, file: !243, line: 4061, column: 13)
!8814 = !DILocation(line: 4061, column: 20, scope: !8813)
!8815 = !DILocation(line: 4061, column: 24, scope: !8813)
!8816 = !DILocation(line: 4061, column: 36, scope: !8813)
!8817 = !DILocation(line: 4061, column: 13, scope: !8513)
!8818 = !DILocation(line: 4063, column: 44, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8813, file: !243, line: 4062, column: 4)
!8820 = !DILocation(line: 4063, column: 51, scope: !8819)
!8821 = !DILocation(line: 4063, column: 55, scope: !8819)
!8822 = !DILocation(line: 4063, column: 21, scope: !8819)
!8823 = !DILocation(line: 4063, column: 12, scope: !8819)
!8824 = !DILocation(line: 4063, column: 10, scope: !8819)
!8825 = !DILocation(line: 4064, column: 19, scope: !8819)
!8826 = !DILocation(line: 4064, column: 30, scope: !8819)
!8827 = !DILocation(line: 4064, column: 5, scope: !8819)
!8828 = !DILocation(line: 4065, column: 14, scope: !8819)
!8829 = !DILocation(line: 4065, column: 25, scope: !8819)
!8830 = !DILocation(line: 4065, column: 31, scope: !8819)
!8831 = !DILocation(line: 4065, column: 5, scope: !8819)
!8832 = !DILocation(line: 4066, column: 18, scope: !8819)
!8833 = !DILocation(line: 4066, column: 29, scope: !8819)
!8834 = !DILocation(line: 4066, column: 35, scope: !8819)
!8835 = !DILocation(line: 4066, column: 42, scope: !8819)
!8836 = !DILocation(line: 4066, column: 51, scope: !8819)
!8837 = !DILocation(line: 4066, column: 58, scope: !8819)
!8838 = !DILocation(line: 4066, column: 5, scope: !8819)
!8839 = !DILocation(line: 4067, column: 15, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8819, file: !243, line: 4067, column: 5)
!8841 = !DILocation(line: 4067, column: 7, scope: !8840)
!8842 = !DILocation(line: 4067, column: 44, scope: !8843)
!8843 = !DILexicalBlockFile(scope: !8844, file: !243, discriminator: 1)
!8844 = distinct !DILexicalBlock(scope: !8840, file: !243, line: 4067, column: 25)
!8845 = !DILocation(line: 4067, column: 55, scope: !8843)
!8846 = !DILocation(line: 4067, column: 62, scope: !8843)
!8847 = !DILocation(line: 4067, column: 68, scope: !8843)
!8848 = !DILocation(line: 4067, column: 71, scope: !8843)
!8849 = !DILocation(line: 4067, column: 74, scope: !8843)
!8850 = !DILocation(line: 4067, column: 78, scope: !8843)
!8851 = !DILocation(line: 4067, column: 35, scope: !8843)
!8852 = !DILocation(line: 4067, column: 94, scope: !8843)
!8853 = distinct !{!8853, !8854}
!8854 = !DILocation(line: 4067, column: 94, scope: !8844)
!8855 = !DILocalVariable(name: "sw", scope: !8856, file: !243, line: 4067, type: !360)
!8856 = distinct !DILexicalBlock(scope: !8844, file: !243, line: 4067, column: 97)
!8857 = !DILocation(line: 4067, column: 116, scope: !8856)
!8858 = !DILocalVariable(name: "rect", scope: !8856, file: !243, line: 4067, type: !274)
!8859 = !DILocation(line: 4067, column: 131, scope: !8856)
!8860 = !DILocation(line: 4067, column: 142, scope: !8861)
!8861 = !DILexicalBlockFile(scope: !8862, file: !243, discriminator: 2)
!8862 = distinct !DILexicalBlock(scope: !8856, file: !243, line: 4067, column: 141)
!8863 = !DILocation(line: 4067, column: 141, scope: !8861)
!8864 = !DILocation(line: 4067, column: 162, scope: !8865)
!8865 = !DILexicalBlockFile(scope: !8862, file: !243, discriminator: 3)
!8866 = !DILocation(line: 4067, column: 179, scope: !8867)
!8867 = !DILexicalBlockFile(scope: !8868, file: !243, discriminator: 4)
!8868 = distinct !DILexicalBlock(scope: !8856, file: !243, line: 4067, column: 169)
!8869 = !DILocation(line: 4067, column: 177, scope: !8867)
!8870 = !DILocation(line: 4067, column: 174, scope: !8867)
!8871 = !DILocation(line: 4067, column: 199, scope: !8872)
!8872 = !DILexicalBlockFile(scope: !8873, file: !243, discriminator: 5)
!8873 = distinct !DILexicalBlock(scope: !8868, file: !243, line: 4067, column: 169)
!8874 = !DILocation(line: 4067, column: 169, scope: !8872)
!8875 = !DILocation(line: 4067, column: 246, scope: !8876)
!8876 = !DILexicalBlockFile(scope: !8877, file: !243, discriminator: 6)
!8877 = distinct !DILexicalBlock(scope: !8873, file: !243, line: 4067, column: 218)
!8878 = !DILocation(line: 4067, column: 229, scope: !8876)
!8879 = !DILocation(line: 4067, column: 250, scope: !8876)
!8880 = !DILocation(line: 4067, column: 254, scope: !8876)
!8881 = !DILocation(line: 4067, column: 248, scope: !8876)
!8882 = !DILocation(line: 4067, column: 225, scope: !8876)
!8883 = !DILocation(line: 4067, column: 227, scope: !8876)
!8884 = !DILocation(line: 4067, column: 289, scope: !8876)
!8885 = !DILocation(line: 4067, column: 272, scope: !8876)
!8886 = !DILocation(line: 4067, column: 293, scope: !8876)
!8887 = !DILocation(line: 4067, column: 297, scope: !8876)
!8888 = !DILocation(line: 4067, column: 291, scope: !8876)
!8889 = !DILocation(line: 4067, column: 268, scope: !8876)
!8890 = !DILocation(line: 4067, column: 270, scope: !8876)
!8891 = !DILocation(line: 4067, column: 336, scope: !8876)
!8892 = !DILocation(line: 4067, column: 311, scope: !8876)
!8893 = !DILocation(line: 4067, column: 317, scope: !8876)
!8894 = !DILocation(line: 4067, column: 374, scope: !8876)
!8895 = !DILocation(line: 4067, column: 348, scope: !8876)
!8896 = !DILocation(line: 4067, column: 355, scope: !8876)
!8897 = !DILocation(line: 4067, column: 401, scope: !8876)
!8898 = !DILocation(line: 4067, column: 412, scope: !8876)
!8899 = !DILocation(line: 4067, column: 382, scope: !8876)
!8900 = !DILocation(line: 4067, column: 17, scope: !8876)
!8901 = !DILocation(line: 4067, column: 28, scope: !8876)
!8902 = !DILocation(line: 4067, column: 32, scope: !8876)
!8903 = !DILocation(line: 4067, column: 37, scope: !8876)
!8904 = !DILocation(line: 4067, column: 43, scope: !8876)
!8905 = !DILocation(line: 4067, column: 45, scope: !8876)
!8906 = !DILocation(line: 4067, column: 49, scope: !8876)
!8907 = !DILocation(line: 4067, column: 44, scope: !8876)
!8908 = !DILocation(line: 4067, column: 58, scope: !8876)
!8909 = !DILocation(line: 4067, column: 60, scope: !8876)
!8910 = !DILocation(line: 4067, column: 64, scope: !8876)
!8911 = !DILocation(line: 4067, column: 59, scope: !8876)
!8912 = !DILocation(line: 4067, column: 73, scope: !8876)
!8913 = !DILocation(line: 4067, column: 77, scope: !8876)
!8914 = !DILocation(line: 4067, column: 7, scope: !8915)
!8915 = !DILexicalBlockFile(scope: !8876, file: !243, discriminator: 23)
!8916 = !DILocation(line: 4067, column: 93, scope: !8876)
!8917 = !DILocation(line: 4067, column: 208, scope: !8918)
!8918 = !DILexicalBlockFile(scope: !8873, file: !243, discriminator: 7)
!8919 = !DILocation(line: 4067, column: 212, scope: !8918)
!8920 = !DILocation(line: 4067, column: 206, scope: !8918)
!8921 = !DILocation(line: 4067, column: 169, scope: !8918)
!8922 = distinct !{!8922, !8923}
!8923 = !DILocation(line: 4067, column: 169, scope: !8856)
!8924 = !DILocation(line: 4067, column: 114, scope: !8925)
!8925 = !DILexicalBlockFile(scope: !8856, file: !243, discriminator: 8)
!8926 = !DILocation(line: 4067, column: 125, scope: !8925)
!8927 = !DILocation(line: 4067, column: 95, scope: !8925)
!8928 = !DILocation(line: 4067, column: 7, scope: !8925)
!8929 = !DILocation(line: 4067, column: 24, scope: !8930)
!8930 = !DILexicalBlockFile(scope: !8931, file: !243, discriminator: 9)
!8931 = distinct !DILexicalBlock(scope: !8844, file: !243, line: 4067, column: 24)
!8932 = !DILocation(line: 4067, column: 49, scope: !8933)
!8933 = !DILexicalBlockFile(scope: !8931, file: !243, discriminator: 10)
!8934 = !DILocation(line: 4067, column: 60, scope: !8933)
!8935 = !DILocation(line: 4067, column: 73, scope: !8933)
!8936 = !DILocation(line: 4067, column: 79, scope: !8933)
!8937 = !DILocation(line: 4067, column: 82, scope: !8933)
!8938 = !DILocation(line: 4067, column: 85, scope: !8933)
!8939 = !DILocation(line: 4067, column: 89, scope: !8933)
!8940 = !DILocation(line: 4067, column: 40, scope: !8933)
!8941 = !DILocation(line: 4067, column: 105, scope: !8942)
!8942 = !DILexicalBlockFile(scope: !8844, file: !243, discriminator: 11)
!8943 = !DILocation(line: 4067, column: 129, scope: !8944)
!8944 = !DILexicalBlockFile(scope: !8844, file: !243, discriminator: 12)
!8945 = !DILocation(line: 4067, column: 140, scope: !8944)
!8946 = !DILocation(line: 4067, column: 147, scope: !8944)
!8947 = !DILocation(line: 4067, column: 153, scope: !8944)
!8948 = !DILocation(line: 4067, column: 156, scope: !8944)
!8949 = !DILocation(line: 4067, column: 159, scope: !8944)
!8950 = !DILocation(line: 4067, column: 163, scope: !8944)
!8951 = !DILocation(line: 4067, column: 120, scope: !8944)
!8952 = !DILocation(line: 4067, column: 179, scope: !8944)
!8953 = distinct !{!8953, !8954}
!8954 = !DILocation(line: 4067, column: 179, scope: !8844)
!8955 = !DILocalVariable(name: "sw", scope: !8956, file: !243, line: 4067, type: !360)
!8956 = distinct !DILexicalBlock(scope: !8844, file: !243, line: 4067, column: 182)
!8957 = !DILocation(line: 4067, column: 201, scope: !8956)
!8958 = !DILocalVariable(name: "rect", scope: !8956, file: !243, line: 4067, type: !274)
!8959 = !DILocation(line: 4067, column: 216, scope: !8956)
!8960 = !DILocation(line: 4067, column: 227, scope: !8961)
!8961 = !DILexicalBlockFile(scope: !8962, file: !243, discriminator: 13)
!8962 = distinct !DILexicalBlock(scope: !8956, file: !243, line: 4067, column: 226)
!8963 = !DILocation(line: 4067, column: 226, scope: !8961)
!8964 = !DILocation(line: 4067, column: 247, scope: !8965)
!8965 = !DILexicalBlockFile(scope: !8962, file: !243, discriminator: 14)
!8966 = !DILocation(line: 4067, column: 264, scope: !8967)
!8967 = !DILexicalBlockFile(scope: !8968, file: !243, discriminator: 15)
!8968 = distinct !DILexicalBlock(scope: !8956, file: !243, line: 4067, column: 254)
!8969 = !DILocation(line: 4067, column: 262, scope: !8967)
!8970 = !DILocation(line: 4067, column: 259, scope: !8967)
!8971 = !DILocation(line: 4067, column: 284, scope: !8972)
!8972 = !DILexicalBlockFile(scope: !8973, file: !243, discriminator: 16)
!8973 = distinct !DILexicalBlock(scope: !8968, file: !243, line: 4067, column: 254)
!8974 = !DILocation(line: 4067, column: 254, scope: !8972)
!8975 = !DILocation(line: 4067, column: 331, scope: !8976)
!8976 = !DILexicalBlockFile(scope: !8977, file: !243, discriminator: 17)
!8977 = distinct !DILexicalBlock(scope: !8973, file: !243, line: 4067, column: 303)
!8978 = !DILocation(line: 4067, column: 314, scope: !8976)
!8979 = !DILocation(line: 4067, column: 335, scope: !8976)
!8980 = !DILocation(line: 4067, column: 339, scope: !8976)
!8981 = !DILocation(line: 4067, column: 333, scope: !8976)
!8982 = !DILocation(line: 4067, column: 310, scope: !8976)
!8983 = !DILocation(line: 4067, column: 312, scope: !8976)
!8984 = !DILocation(line: 4067, column: 374, scope: !8976)
!8985 = !DILocation(line: 4067, column: 357, scope: !8976)
!8986 = !DILocation(line: 4067, column: 378, scope: !8976)
!8987 = !DILocation(line: 4067, column: 382, scope: !8976)
!8988 = !DILocation(line: 4067, column: 376, scope: !8976)
!8989 = !DILocation(line: 4067, column: 353, scope: !8976)
!8990 = !DILocation(line: 4067, column: 355, scope: !8976)
!8991 = !DILocation(line: 4067, column: 421, scope: !8976)
!8992 = !DILocation(line: 4067, column: 396, scope: !8976)
!8993 = !DILocation(line: 4067, column: 402, scope: !8976)
!8994 = !DILocation(line: 4067, column: 459, scope: !8976)
!8995 = !DILocation(line: 4067, column: 433, scope: !8976)
!8996 = !DILocation(line: 4067, column: 440, scope: !8976)
!8997 = !DILocation(line: 4067, column: 486, scope: !8976)
!8998 = !DILocation(line: 4067, column: 497, scope: !8976)
!8999 = !DILocation(line: 4067, column: 467, scope: !8976)
!9000 = !DILocation(line: 4067, column: 17, scope: !8976)
!9001 = !DILocation(line: 4067, column: 28, scope: !8976)
!9002 = !DILocation(line: 4067, column: 32, scope: !8976)
!9003 = !DILocation(line: 4067, column: 37, scope: !8976)
!9004 = !DILocation(line: 4067, column: 43, scope: !8976)
!9005 = !DILocation(line: 4067, column: 45, scope: !8976)
!9006 = !DILocation(line: 4067, column: 49, scope: !8976)
!9007 = !DILocation(line: 4067, column: 44, scope: !8976)
!9008 = !DILocation(line: 4067, column: 58, scope: !8976)
!9009 = !DILocation(line: 4067, column: 60, scope: !8976)
!9010 = !DILocation(line: 4067, column: 64, scope: !8976)
!9011 = !DILocation(line: 4067, column: 59, scope: !8976)
!9012 = !DILocation(line: 4067, column: 73, scope: !8976)
!9013 = !DILocation(line: 4067, column: 77, scope: !8976)
!9014 = !DILocation(line: 4067, column: 7, scope: !9015)
!9015 = !DILexicalBlockFile(scope: !8976, file: !243, discriminator: 24)
!9016 = !DILocation(line: 4067, column: 93, scope: !8976)
!9017 = !DILocation(line: 4067, column: 293, scope: !9018)
!9018 = !DILexicalBlockFile(scope: !8973, file: !243, discriminator: 18)
!9019 = !DILocation(line: 4067, column: 297, scope: !9018)
!9020 = !DILocation(line: 4067, column: 291, scope: !9018)
!9021 = !DILocation(line: 4067, column: 254, scope: !9018)
!9022 = distinct !{!9022, !9023}
!9023 = !DILocation(line: 4067, column: 254, scope: !8956)
!9024 = !DILocation(line: 4067, column: 114, scope: !9025)
!9025 = !DILexicalBlockFile(scope: !8956, file: !243, discriminator: 19)
!9026 = !DILocation(line: 4067, column: 125, scope: !9025)
!9027 = !DILocation(line: 4067, column: 95, scope: !9025)
!9028 = !DILocation(line: 4067, column: 7, scope: !9025)
!9029 = !DILocation(line: 4067, column: 24, scope: !9030)
!9030 = !DILexicalBlockFile(scope: !9031, file: !243, discriminator: 20)
!9031 = distinct !DILexicalBlock(scope: !8844, file: !243, line: 4067, column: 24)
!9032 = !DILocation(line: 4067, column: 49, scope: !9033)
!9033 = !DILexicalBlockFile(scope: !9031, file: !243, discriminator: 21)
!9034 = !DILocation(line: 4067, column: 60, scope: !9033)
!9035 = !DILocation(line: 4067, column: 73, scope: !9033)
!9036 = !DILocation(line: 4067, column: 79, scope: !9033)
!9037 = !DILocation(line: 4067, column: 82, scope: !9033)
!9038 = !DILocation(line: 4067, column: 85, scope: !9033)
!9039 = !DILocation(line: 4067, column: 89, scope: !9033)
!9040 = !DILocation(line: 4067, column: 40, scope: !9033)
!9041 = !DILocation(line: 4067, column: 105, scope: !9042)
!9042 = !DILexicalBlockFile(scope: !8844, file: !243, discriminator: 22)
!9043 = !DILocation(line: 4068, column: 19, scope: !8819)
!9044 = !DILocation(line: 4068, column: 30, scope: !8819)
!9045 = !DILocation(line: 4068, column: 5, scope: !8819)
!9046 = !DILocation(line: 4069, column: 18, scope: !8819)
!9047 = !DILocation(line: 4069, column: 29, scope: !8819)
!9048 = !DILocation(line: 4069, column: 5, scope: !8819)
!9049 = !DILocation(line: 4070, column: 36, scope: !8819)
!9050 = !DILocation(line: 4070, column: 23, scope: !8819)
!9051 = !DILocation(line: 4070, column: 5, scope: !8819)
!9052 = !DILocation(line: 4071, column: 4, scope: !8819)
!9053 = !DILocation(line: 4074, column: 43, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !8813, file: !243, line: 4073, column: 4)
!9055 = !DILocation(line: 4074, column: 50, scope: !9054)
!9056 = !DILocation(line: 4074, column: 54, scope: !9054)
!9057 = !DILocation(line: 4074, column: 21, scope: !9054)
!9058 = !DILocation(line: 4074, column: 12, scope: !9054)
!9059 = !DILocation(line: 4074, column: 10, scope: !9054)
!9060 = !DILocation(line: 4075, column: 20, scope: !9054)
!9061 = !DILocation(line: 4075, column: 31, scope: !9054)
!9062 = !DILocation(line: 4075, column: 39, scope: !9054)
!9063 = !DILocation(line: 4075, column: 54, scope: !9054)
!9064 = !DILocation(line: 4075, column: 78, scope: !9065)
!9065 = !DILexicalBlockFile(scope: !9054, file: !243, discriminator: 1)
!9066 = !DILocation(line: 4075, column: 61, scope: !9065)
!9067 = !DILocation(line: 4075, column: 39, scope: !9065)
!9068 = !DILocation(line: 4075, column: 90, scope: !9069)
!9069 = !DILexicalBlockFile(scope: !9054, file: !243, discriminator: 2)
!9070 = !DILocation(line: 4075, column: 104, scope: !9071)
!9071 = !DILexicalBlockFile(scope: !9054, file: !243, discriminator: 3)
!9072 = !DILocation(line: 4075, column: 90, scope: !9071)
!9073 = !DILocation(line: 4075, column: 124, scope: !9074)
!9074 = !DILexicalBlockFile(scope: !9054, file: !243, discriminator: 4)
!9075 = !DILocation(line: 4075, column: 115, scope: !9074)
!9076 = !DILocation(line: 4075, column: 90, scope: !9074)
!9077 = !DILocation(line: 4075, column: 90, scope: !9078)
!9078 = !DILexicalBlockFile(scope: !9054, file: !243, discriminator: 5)
!9079 = !DILocation(line: 4075, column: 39, scope: !9078)
!9080 = !DILocation(line: 4075, column: 39, scope: !9081)
!9081 = !DILexicalBlockFile(scope: !9054, file: !243, discriminator: 6)
!9082 = !DILocation(line: 4075, column: 37, scope: !9081)
!9083 = !DILocation(line: 4075, column: 5, scope: !9081)
!9084 = !DILocation(line: 4076, column: 20, scope: !9054)
!9085 = !DILocation(line: 4076, column: 31, scope: !9054)
!9086 = !DILocation(line: 4076, column: 39, scope: !9054)
!9087 = !DILocation(line: 4076, column: 54, scope: !9054)
!9088 = !DILocation(line: 4076, column: 78, scope: !9065)
!9089 = !DILocation(line: 4076, column: 61, scope: !9065)
!9090 = !DILocation(line: 4076, column: 39, scope: !9065)
!9091 = !DILocation(line: 4076, column: 90, scope: !9069)
!9092 = !DILocation(line: 4076, column: 104, scope: !9071)
!9093 = !DILocation(line: 4076, column: 90, scope: !9071)
!9094 = !DILocation(line: 4076, column: 124, scope: !9074)
!9095 = !DILocation(line: 4076, column: 115, scope: !9074)
!9096 = !DILocation(line: 4076, column: 90, scope: !9074)
!9097 = !DILocation(line: 4076, column: 90, scope: !9078)
!9098 = !DILocation(line: 4076, column: 39, scope: !9078)
!9099 = !DILocation(line: 4076, column: 39, scope: !9081)
!9100 = !DILocation(line: 4076, column: 37, scope: !9081)
!9101 = !DILocation(line: 4076, column: 5, scope: !9081)
!9102 = !DILocation(line: 4077, column: 19, scope: !9054)
!9103 = !DILocation(line: 4077, column: 30, scope: !9054)
!9104 = !DILocation(line: 4077, column: 5, scope: !9054)
!9105 = !DILocation(line: 4078, column: 17, scope: !9054)
!9106 = !DILocation(line: 4078, column: 28, scope: !9054)
!9107 = !DILocation(line: 4078, column: 34, scope: !9054)
!9108 = !DILocation(line: 4078, column: 5, scope: !9054)
!9109 = !DILocation(line: 4079, column: 18, scope: !9054)
!9110 = !DILocation(line: 4079, column: 29, scope: !9054)
!9111 = !DILocation(line: 4079, column: 35, scope: !9054)
!9112 = !DILocation(line: 4079, column: 42, scope: !9054)
!9113 = !DILocation(line: 4079, column: 51, scope: !9054)
!9114 = !DILocation(line: 4079, column: 58, scope: !9054)
!9115 = !DILocation(line: 4079, column: 5, scope: !9054)
!9116 = !DILocation(line: 4080, column: 15, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9054, file: !243, line: 4080, column: 5)
!9118 = !DILocation(line: 4080, column: 7, scope: !9117)
!9119 = !DILocation(line: 4080, column: 44, scope: !9120)
!9120 = !DILexicalBlockFile(scope: !9121, file: !243, discriminator: 1)
!9121 = distinct !DILexicalBlock(scope: !9117, file: !243, line: 4080, column: 25)
!9122 = !DILocation(line: 4080, column: 55, scope: !9120)
!9123 = !DILocation(line: 4080, column: 62, scope: !9120)
!9124 = !DILocation(line: 4080, column: 68, scope: !9120)
!9125 = !DILocation(line: 4080, column: 71, scope: !9120)
!9126 = !DILocation(line: 4080, column: 74, scope: !9120)
!9127 = !DILocation(line: 4080, column: 78, scope: !9120)
!9128 = !DILocation(line: 4080, column: 35, scope: !9120)
!9129 = !DILocation(line: 4080, column: 94, scope: !9120)
!9130 = distinct !{!9130, !9131}
!9131 = !DILocation(line: 4080, column: 94, scope: !9121)
!9132 = !DILocalVariable(name: "sw", scope: !9133, file: !243, line: 4080, type: !360)
!9133 = distinct !DILexicalBlock(scope: !9121, file: !243, line: 4080, column: 97)
!9134 = !DILocation(line: 4080, column: 116, scope: !9133)
!9135 = !DILocalVariable(name: "rect", scope: !9133, file: !243, line: 4080, type: !274)
!9136 = !DILocation(line: 4080, column: 131, scope: !9133)
!9137 = !DILocation(line: 4080, column: 142, scope: !9138)
!9138 = !DILexicalBlockFile(scope: !9139, file: !243, discriminator: 2)
!9139 = distinct !DILexicalBlock(scope: !9133, file: !243, line: 4080, column: 141)
!9140 = !DILocation(line: 4080, column: 141, scope: !9138)
!9141 = !DILocation(line: 4080, column: 162, scope: !9142)
!9142 = !DILexicalBlockFile(scope: !9139, file: !243, discriminator: 3)
!9143 = !DILocation(line: 4080, column: 179, scope: !9144)
!9144 = !DILexicalBlockFile(scope: !9145, file: !243, discriminator: 4)
!9145 = distinct !DILexicalBlock(scope: !9133, file: !243, line: 4080, column: 169)
!9146 = !DILocation(line: 4080, column: 177, scope: !9144)
!9147 = !DILocation(line: 4080, column: 174, scope: !9144)
!9148 = !DILocation(line: 4080, column: 199, scope: !9149)
!9149 = !DILexicalBlockFile(scope: !9150, file: !243, discriminator: 5)
!9150 = distinct !DILexicalBlock(scope: !9145, file: !243, line: 4080, column: 169)
!9151 = !DILocation(line: 4080, column: 169, scope: !9149)
!9152 = !DILocation(line: 4080, column: 246, scope: !9153)
!9153 = !DILexicalBlockFile(scope: !9154, file: !243, discriminator: 6)
!9154 = distinct !DILexicalBlock(scope: !9150, file: !243, line: 4080, column: 218)
!9155 = !DILocation(line: 4080, column: 229, scope: !9153)
!9156 = !DILocation(line: 4080, column: 250, scope: !9153)
!9157 = !DILocation(line: 4080, column: 254, scope: !9153)
!9158 = !DILocation(line: 4080, column: 248, scope: !9153)
!9159 = !DILocation(line: 4080, column: 225, scope: !9153)
!9160 = !DILocation(line: 4080, column: 227, scope: !9153)
!9161 = !DILocation(line: 4080, column: 289, scope: !9153)
!9162 = !DILocation(line: 4080, column: 272, scope: !9153)
!9163 = !DILocation(line: 4080, column: 293, scope: !9153)
!9164 = !DILocation(line: 4080, column: 297, scope: !9153)
!9165 = !DILocation(line: 4080, column: 291, scope: !9153)
!9166 = !DILocation(line: 4080, column: 268, scope: !9153)
!9167 = !DILocation(line: 4080, column: 270, scope: !9153)
!9168 = !DILocation(line: 4080, column: 336, scope: !9153)
!9169 = !DILocation(line: 4080, column: 311, scope: !9153)
!9170 = !DILocation(line: 4080, column: 317, scope: !9153)
!9171 = !DILocation(line: 4080, column: 374, scope: !9153)
!9172 = !DILocation(line: 4080, column: 348, scope: !9153)
!9173 = !DILocation(line: 4080, column: 355, scope: !9153)
!9174 = !DILocation(line: 4080, column: 401, scope: !9153)
!9175 = !DILocation(line: 4080, column: 412, scope: !9153)
!9176 = !DILocation(line: 4080, column: 382, scope: !9153)
!9177 = !DILocation(line: 4080, column: 17, scope: !9153)
!9178 = !DILocation(line: 4080, column: 28, scope: !9153)
!9179 = !DILocation(line: 4080, column: 32, scope: !9153)
!9180 = !DILocation(line: 4080, column: 37, scope: !9153)
!9181 = !DILocation(line: 4080, column: 43, scope: !9153)
!9182 = !DILocation(line: 4080, column: 45, scope: !9153)
!9183 = !DILocation(line: 4080, column: 49, scope: !9153)
!9184 = !DILocation(line: 4080, column: 44, scope: !9153)
!9185 = !DILocation(line: 4080, column: 58, scope: !9153)
!9186 = !DILocation(line: 4080, column: 60, scope: !9153)
!9187 = !DILocation(line: 4080, column: 64, scope: !9153)
!9188 = !DILocation(line: 4080, column: 59, scope: !9153)
!9189 = !DILocation(line: 4080, column: 73, scope: !9153)
!9190 = !DILocation(line: 4080, column: 77, scope: !9153)
!9191 = !DILocation(line: 4080, column: 7, scope: !9192)
!9192 = !DILexicalBlockFile(scope: !9153, file: !243, discriminator: 23)
!9193 = !DILocation(line: 4080, column: 93, scope: !9153)
!9194 = !DILocation(line: 4080, column: 208, scope: !9195)
!9195 = !DILexicalBlockFile(scope: !9150, file: !243, discriminator: 7)
!9196 = !DILocation(line: 4080, column: 212, scope: !9195)
!9197 = !DILocation(line: 4080, column: 206, scope: !9195)
!9198 = !DILocation(line: 4080, column: 169, scope: !9195)
!9199 = distinct !{!9199, !9200}
!9200 = !DILocation(line: 4080, column: 169, scope: !9133)
!9201 = !DILocation(line: 4080, column: 114, scope: !9202)
!9202 = !DILexicalBlockFile(scope: !9133, file: !243, discriminator: 8)
!9203 = !DILocation(line: 4080, column: 125, scope: !9202)
!9204 = !DILocation(line: 4080, column: 95, scope: !9202)
!9205 = !DILocation(line: 4080, column: 7, scope: !9202)
!9206 = !DILocation(line: 4080, column: 24, scope: !9207)
!9207 = !DILexicalBlockFile(scope: !9208, file: !243, discriminator: 9)
!9208 = distinct !DILexicalBlock(scope: !9121, file: !243, line: 4080, column: 24)
!9209 = !DILocation(line: 4080, column: 49, scope: !9210)
!9210 = !DILexicalBlockFile(scope: !9208, file: !243, discriminator: 10)
!9211 = !DILocation(line: 4080, column: 60, scope: !9210)
!9212 = !DILocation(line: 4080, column: 73, scope: !9210)
!9213 = !DILocation(line: 4080, column: 79, scope: !9210)
!9214 = !DILocation(line: 4080, column: 82, scope: !9210)
!9215 = !DILocation(line: 4080, column: 85, scope: !9210)
!9216 = !DILocation(line: 4080, column: 89, scope: !9210)
!9217 = !DILocation(line: 4080, column: 40, scope: !9210)
!9218 = !DILocation(line: 4080, column: 105, scope: !9219)
!9219 = !DILexicalBlockFile(scope: !9121, file: !243, discriminator: 11)
!9220 = !DILocation(line: 4080, column: 129, scope: !9221)
!9221 = !DILexicalBlockFile(scope: !9121, file: !243, discriminator: 12)
!9222 = !DILocation(line: 4080, column: 140, scope: !9221)
!9223 = !DILocation(line: 4080, column: 147, scope: !9221)
!9224 = !DILocation(line: 4080, column: 153, scope: !9221)
!9225 = !DILocation(line: 4080, column: 156, scope: !9221)
!9226 = !DILocation(line: 4080, column: 159, scope: !9221)
!9227 = !DILocation(line: 4080, column: 163, scope: !9221)
!9228 = !DILocation(line: 4080, column: 120, scope: !9221)
!9229 = !DILocation(line: 4080, column: 179, scope: !9221)
!9230 = distinct !{!9230, !9231}
!9231 = !DILocation(line: 4080, column: 179, scope: !9121)
!9232 = !DILocalVariable(name: "sw", scope: !9233, file: !243, line: 4080, type: !360)
!9233 = distinct !DILexicalBlock(scope: !9121, file: !243, line: 4080, column: 182)
!9234 = !DILocation(line: 4080, column: 201, scope: !9233)
!9235 = !DILocalVariable(name: "rect", scope: !9233, file: !243, line: 4080, type: !274)
!9236 = !DILocation(line: 4080, column: 216, scope: !9233)
!9237 = !DILocation(line: 4080, column: 227, scope: !9238)
!9238 = !DILexicalBlockFile(scope: !9239, file: !243, discriminator: 13)
!9239 = distinct !DILexicalBlock(scope: !9233, file: !243, line: 4080, column: 226)
!9240 = !DILocation(line: 4080, column: 226, scope: !9238)
!9241 = !DILocation(line: 4080, column: 247, scope: !9242)
!9242 = !DILexicalBlockFile(scope: !9239, file: !243, discriminator: 14)
!9243 = !DILocation(line: 4080, column: 264, scope: !9244)
!9244 = !DILexicalBlockFile(scope: !9245, file: !243, discriminator: 15)
!9245 = distinct !DILexicalBlock(scope: !9233, file: !243, line: 4080, column: 254)
!9246 = !DILocation(line: 4080, column: 262, scope: !9244)
!9247 = !DILocation(line: 4080, column: 259, scope: !9244)
!9248 = !DILocation(line: 4080, column: 284, scope: !9249)
!9249 = !DILexicalBlockFile(scope: !9250, file: !243, discriminator: 16)
!9250 = distinct !DILexicalBlock(scope: !9245, file: !243, line: 4080, column: 254)
!9251 = !DILocation(line: 4080, column: 254, scope: !9249)
!9252 = !DILocation(line: 4080, column: 331, scope: !9253)
!9253 = !DILexicalBlockFile(scope: !9254, file: !243, discriminator: 17)
!9254 = distinct !DILexicalBlock(scope: !9250, file: !243, line: 4080, column: 303)
!9255 = !DILocation(line: 4080, column: 314, scope: !9253)
!9256 = !DILocation(line: 4080, column: 335, scope: !9253)
!9257 = !DILocation(line: 4080, column: 339, scope: !9253)
!9258 = !DILocation(line: 4080, column: 333, scope: !9253)
!9259 = !DILocation(line: 4080, column: 310, scope: !9253)
!9260 = !DILocation(line: 4080, column: 312, scope: !9253)
!9261 = !DILocation(line: 4080, column: 374, scope: !9253)
!9262 = !DILocation(line: 4080, column: 357, scope: !9253)
!9263 = !DILocation(line: 4080, column: 378, scope: !9253)
!9264 = !DILocation(line: 4080, column: 382, scope: !9253)
!9265 = !DILocation(line: 4080, column: 376, scope: !9253)
!9266 = !DILocation(line: 4080, column: 353, scope: !9253)
!9267 = !DILocation(line: 4080, column: 355, scope: !9253)
!9268 = !DILocation(line: 4080, column: 421, scope: !9253)
!9269 = !DILocation(line: 4080, column: 396, scope: !9253)
!9270 = !DILocation(line: 4080, column: 402, scope: !9253)
!9271 = !DILocation(line: 4080, column: 459, scope: !9253)
!9272 = !DILocation(line: 4080, column: 433, scope: !9253)
!9273 = !DILocation(line: 4080, column: 440, scope: !9253)
!9274 = !DILocation(line: 4080, column: 486, scope: !9253)
!9275 = !DILocation(line: 4080, column: 497, scope: !9253)
!9276 = !DILocation(line: 4080, column: 467, scope: !9253)
!9277 = !DILocation(line: 4080, column: 17, scope: !9253)
!9278 = !DILocation(line: 4080, column: 28, scope: !9253)
!9279 = !DILocation(line: 4080, column: 32, scope: !9253)
!9280 = !DILocation(line: 4080, column: 37, scope: !9253)
!9281 = !DILocation(line: 4080, column: 43, scope: !9253)
!9282 = !DILocation(line: 4080, column: 45, scope: !9253)
!9283 = !DILocation(line: 4080, column: 49, scope: !9253)
!9284 = !DILocation(line: 4080, column: 44, scope: !9253)
!9285 = !DILocation(line: 4080, column: 58, scope: !9253)
!9286 = !DILocation(line: 4080, column: 60, scope: !9253)
!9287 = !DILocation(line: 4080, column: 64, scope: !9253)
!9288 = !DILocation(line: 4080, column: 59, scope: !9253)
!9289 = !DILocation(line: 4080, column: 73, scope: !9253)
!9290 = !DILocation(line: 4080, column: 77, scope: !9253)
!9291 = !DILocation(line: 4080, column: 7, scope: !9292)
!9292 = !DILexicalBlockFile(scope: !9253, file: !243, discriminator: 24)
!9293 = !DILocation(line: 4080, column: 93, scope: !9253)
!9294 = !DILocation(line: 4080, column: 293, scope: !9295)
!9295 = !DILexicalBlockFile(scope: !9250, file: !243, discriminator: 18)
!9296 = !DILocation(line: 4080, column: 297, scope: !9295)
!9297 = !DILocation(line: 4080, column: 291, scope: !9295)
!9298 = !DILocation(line: 4080, column: 254, scope: !9295)
!9299 = distinct !{!9299, !9300}
!9300 = !DILocation(line: 4080, column: 254, scope: !9233)
!9301 = !DILocation(line: 4080, column: 114, scope: !9302)
!9302 = !DILexicalBlockFile(scope: !9233, file: !243, discriminator: 19)
!9303 = !DILocation(line: 4080, column: 125, scope: !9302)
!9304 = !DILocation(line: 4080, column: 95, scope: !9302)
!9305 = !DILocation(line: 4080, column: 7, scope: !9302)
!9306 = !DILocation(line: 4080, column: 24, scope: !9307)
!9307 = !DILexicalBlockFile(scope: !9308, file: !243, discriminator: 20)
!9308 = distinct !DILexicalBlock(scope: !9121, file: !243, line: 4080, column: 24)
!9309 = !DILocation(line: 4080, column: 49, scope: !9310)
!9310 = !DILexicalBlockFile(scope: !9308, file: !243, discriminator: 21)
!9311 = !DILocation(line: 4080, column: 60, scope: !9310)
!9312 = !DILocation(line: 4080, column: 73, scope: !9310)
!9313 = !DILocation(line: 4080, column: 79, scope: !9310)
!9314 = !DILocation(line: 4080, column: 82, scope: !9310)
!9315 = !DILocation(line: 4080, column: 85, scope: !9310)
!9316 = !DILocation(line: 4080, column: 89, scope: !9310)
!9317 = !DILocation(line: 4080, column: 40, scope: !9310)
!9318 = !DILocation(line: 4080, column: 105, scope: !9319)
!9319 = !DILexicalBlockFile(scope: !9121, file: !243, discriminator: 22)
!9320 = !DILocation(line: 4081, column: 19, scope: !9054)
!9321 = !DILocation(line: 4081, column: 30, scope: !9054)
!9322 = !DILocation(line: 4081, column: 5, scope: !9054)
!9323 = !DILocation(line: 4082, column: 18, scope: !9054)
!9324 = !DILocation(line: 4082, column: 29, scope: !9054)
!9325 = !DILocation(line: 4082, column: 5, scope: !9054)
!9326 = !DILocation(line: 4083, column: 34, scope: !9054)
!9327 = !DILocation(line: 4083, column: 22, scope: !9054)
!9328 = !DILocation(line: 4083, column: 5, scope: !9054)
!9329 = !DILocation(line: 4085, column: 4, scope: !8012)
!9330 = !DILocation(line: 4088, column: 57, scope: !8012)
!9331 = !DILocation(line: 4088, column: 64, scope: !8012)
!9332 = !DILocation(line: 4088, column: 4, scope: !8012)
!9333 = !DILocation(line: 4089, column: 2, scope: !8012)
!9334 = !DILocation(line: 4091, column: 8, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9336, file: !243, line: 4091, column: 8)
!9336 = distinct !DILexicalBlock(scope: !7961, file: !243, line: 4091, column: 2)
!9337 = !DILocation(line: 4091, column: 15, scope: !9335)
!9338 = !DILocation(line: 4091, column: 8, scope: !9336)
!9339 = !DILocation(line: 4091, column: 36, scope: !9340)
!9340 = !DILexicalBlockFile(scope: !9335, file: !243, discriminator: 1)
!9341 = !DILocation(line: 4091, column: 47, scope: !9340)
!9342 = !DILocation(line: 4091, column: 23, scope: !9340)
!9343 = !DILocation(line: 4092, column: 1, scope: !7961)
!9344 = distinct !DISubprogram(name: "ui_draw_glyph", scope: !243, file: !243, line: 4096, type: !9345, isLocal: false, isDefinition: true, scopeLine: 4100, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!9345 = !DISubroutineType(types: !9346)
!9346 = !{null, !45, !45, !45, !45, !45, !190, !45, !45, !193, !193}
!9347 = !DILocalVariable(name: "mixmode", arg: 1, scope: !9344, file: !243, line: 4096, type: !45)
!9348 = !DILocation(line: 4096, column: 19, scope: !9344)
!9349 = !DILocalVariable(name: "x", arg: 2, scope: !9344, file: !243, line: 4097, type: !45)
!9350 = !DILocation(line: 4097, column: 23, scope: !9344)
!9351 = !DILocalVariable(name: "y", arg: 3, scope: !9344, file: !243, line: 4097, type: !45)
!9352 = !DILocation(line: 4097, column: 30, scope: !9344)
!9353 = !DILocalVariable(name: "cx", arg: 4, scope: !9344, file: !243, line: 4097, type: !45)
!9354 = !DILocation(line: 4097, column: 37, scope: !9344)
!9355 = !DILocalVariable(name: "cy", arg: 5, scope: !9344, file: !243, line: 4097, type: !45)
!9356 = !DILocation(line: 4097, column: 45, scope: !9344)
!9357 = !DILocalVariable(name: "glyph", arg: 6, scope: !9344, file: !243, line: 4098, type: !190)
!9358 = !DILocation(line: 4098, column: 28, scope: !9344)
!9359 = !DILocalVariable(name: "srcx", arg: 7, scope: !9344, file: !243, line: 4098, type: !45)
!9360 = !DILocation(line: 4098, column: 39, scope: !9344)
!9361 = !DILocalVariable(name: "srcy", arg: 8, scope: !9344, file: !243, line: 4098, type: !45)
!9362 = !DILocation(line: 4098, column: 49, scope: !9344)
!9363 = !DILocalVariable(name: "bgcolour", arg: 9, scope: !9344, file: !243, line: 4099, type: !193)
!9364 = !DILocation(line: 4099, column: 15, scope: !9344)
!9365 = !DILocalVariable(name: "fgcolour", arg: 10, scope: !9344, file: !243, line: 4099, type: !193)
!9366 = !DILocation(line: 4099, column: 32, scope: !9344)
!9367 = !DILocation(line: 4101, column: 9, scope: !9344)
!9368 = !DILocation(line: 4102, column: 9, scope: !9344)
!9369 = !DILocation(line: 4104, column: 17, scope: !9344)
!9370 = !DILocation(line: 4104, column: 28, scope: !9344)
!9371 = !DILocation(line: 4104, column: 36, scope: !9344)
!9372 = !DILocation(line: 4104, column: 51, scope: !9344)
!9373 = !DILocation(line: 4104, column: 75, scope: !9374)
!9374 = !DILexicalBlockFile(scope: !9344, file: !243, discriminator: 1)
!9375 = !DILocation(line: 4104, column: 58, scope: !9374)
!9376 = !DILocation(line: 4104, column: 36, scope: !9374)
!9377 = !DILocation(line: 4104, column: 87, scope: !9378)
!9378 = !DILexicalBlockFile(scope: !9344, file: !243, discriminator: 2)
!9379 = !DILocation(line: 4104, column: 101, scope: !9380)
!9380 = !DILexicalBlockFile(scope: !9344, file: !243, discriminator: 3)
!9381 = !DILocation(line: 4104, column: 87, scope: !9380)
!9382 = !DILocation(line: 4104, column: 121, scope: !9383)
!9383 = !DILexicalBlockFile(scope: !9344, file: !243, discriminator: 4)
!9384 = !DILocation(line: 4104, column: 112, scope: !9383)
!9385 = !DILocation(line: 4104, column: 87, scope: !9383)
!9386 = !DILocation(line: 4104, column: 87, scope: !9387)
!9387 = !DILexicalBlockFile(scope: !9344, file: !243, discriminator: 5)
!9388 = !DILocation(line: 4104, column: 36, scope: !9387)
!9389 = !DILocation(line: 4104, column: 36, scope: !9390)
!9390 = !DILexicalBlockFile(scope: !9344, file: !243, discriminator: 6)
!9391 = !DILocation(line: 4104, column: 34, scope: !9390)
!9392 = !DILocation(line: 4104, column: 2, scope: !9390)
!9393 = !DILocation(line: 4105, column: 17, scope: !9344)
!9394 = !DILocation(line: 4105, column: 28, scope: !9344)
!9395 = !DILocation(line: 4105, column: 36, scope: !9344)
!9396 = !DILocation(line: 4105, column: 51, scope: !9344)
!9397 = !DILocation(line: 4105, column: 75, scope: !9374)
!9398 = !DILocation(line: 4105, column: 58, scope: !9374)
!9399 = !DILocation(line: 4105, column: 36, scope: !9374)
!9400 = !DILocation(line: 4105, column: 87, scope: !9378)
!9401 = !DILocation(line: 4105, column: 101, scope: !9380)
!9402 = !DILocation(line: 4105, column: 87, scope: !9380)
!9403 = !DILocation(line: 4105, column: 121, scope: !9383)
!9404 = !DILocation(line: 4105, column: 112, scope: !9383)
!9405 = !DILocation(line: 4105, column: 87, scope: !9383)
!9406 = !DILocation(line: 4105, column: 87, scope: !9387)
!9407 = !DILocation(line: 4105, column: 36, scope: !9387)
!9408 = !DILocation(line: 4105, column: 36, scope: !9390)
!9409 = !DILocation(line: 4105, column: 34, scope: !9390)
!9410 = !DILocation(line: 4105, column: 2, scope: !9390)
!9411 = !DILocation(line: 4107, column: 16, scope: !9344)
!9412 = !DILocation(line: 4107, column: 27, scope: !9344)
!9413 = !DILocation(line: 4108, column: 10, scope: !9344)
!9414 = !DILocation(line: 4108, column: 18, scope: !9344)
!9415 = !DILocation(line: 4108, column: 9, scope: !9344)
!9416 = !DILocation(line: 4107, column: 2, scope: !9344)
!9417 = !DILocation(line: 4109, column: 14, scope: !9344)
!9418 = !DILocation(line: 4109, column: 25, scope: !9344)
!9419 = !DILocation(line: 4109, column: 40, scope: !9344)
!9420 = !DILocation(line: 4109, column: 31, scope: !9344)
!9421 = !DILocation(line: 4109, column: 2, scope: !9344)
!9422 = !DILocation(line: 4110, column: 15, scope: !9344)
!9423 = !DILocation(line: 4110, column: 26, scope: !9344)
!9424 = !DILocation(line: 4110, column: 32, scope: !9344)
!9425 = !DILocation(line: 4110, column: 35, scope: !9344)
!9426 = !DILocation(line: 4110, column: 2, scope: !9344)
!9427 = !DILocation(line: 4112, column: 19, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9344, file: !243, line: 4112, column: 2)
!9429 = !DILocation(line: 4112, column: 30, scope: !9428)
!9430 = !DILocation(line: 4112, column: 47, scope: !9431)
!9431 = !DILexicalBlockFile(scope: !9428, file: !243, discriminator: 1)
!9432 = !DILocation(line: 4112, column: 30, scope: !9431)
!9433 = !DILocation(line: 4112, column: 61, scope: !9434)
!9434 = !DILexicalBlockFile(scope: !9428, file: !243, discriminator: 2)
!9435 = !DILocation(line: 4112, column: 30, scope: !9434)
!9436 = !DILocation(line: 4112, column: 30, scope: !9437)
!9437 = !DILexicalBlockFile(scope: !9428, file: !243, discriminator: 3)
!9438 = !DILocation(line: 4112, column: 68, scope: !9437)
!9439 = !DILocation(line: 4112, column: 74, scope: !9437)
!9440 = !DILocation(line: 4112, column: 77, scope: !9437)
!9441 = !DILocation(line: 4112, column: 80, scope: !9437)
!9442 = !DILocation(line: 4112, column: 84, scope: !9437)
!9443 = !DILocation(line: 4112, column: 4, scope: !9437)
!9444 = !DILocation(line: 4114, column: 16, scope: !9344)
!9445 = !DILocation(line: 4114, column: 27, scope: !9344)
!9446 = !DILocation(line: 4114, column: 2, scope: !9344)
!9447 = !DILocation(line: 4115, column: 1, scope: !9344)
!9448 = distinct !DISubprogram(name: "ui_draw_text", scope: !243, file: !243, line: 4152, type: !9449, isLocal: false, isDefinition: true, scopeLine: 4156, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!9449 = !DISubroutineType(types: !9450)
!9450 = !{null, !47, !47, !47, !45, !45, !45, !45, !45, !45, !45, !45, !45, !45, !45, !5524, !193, !193, !46, !47}
!9451 = !DILocalVariable(name: "font", arg: 1, scope: !9448, file: !243, line: 4152, type: !47)
!9452 = !DILocation(line: 4152, column: 20, scope: !9448)
!9453 = !DILocalVariable(name: "flags", arg: 2, scope: !9448, file: !243, line: 4152, type: !47)
!9454 = !DILocation(line: 4152, column: 32, scope: !9448)
!9455 = !DILocalVariable(name: "opcode", arg: 3, scope: !9448, file: !243, line: 4152, type: !47)
!9456 = !DILocation(line: 4152, column: 45, scope: !9448)
!9457 = !DILocalVariable(name: "mixmode", arg: 4, scope: !9448, file: !243, line: 4152, type: !45)
!9458 = !DILocation(line: 4152, column: 57, scope: !9448)
!9459 = !DILocalVariable(name: "x", arg: 5, scope: !9448, file: !243, line: 4152, type: !45)
!9460 = !DILocation(line: 4152, column: 70, scope: !9448)
!9461 = !DILocalVariable(name: "y", arg: 6, scope: !9448, file: !243, line: 4152, type: !45)
!9462 = !DILocation(line: 4152, column: 77, scope: !9448)
!9463 = !DILocalVariable(name: "clipx", arg: 7, scope: !9448, file: !243, line: 4153, type: !45)
!9464 = !DILocation(line: 4153, column: 11, scope: !9448)
!9465 = !DILocalVariable(name: "clipy", arg: 8, scope: !9448, file: !243, line: 4153, type: !45)
!9466 = !DILocation(line: 4153, column: 22, scope: !9448)
!9467 = !DILocalVariable(name: "clipcx", arg: 9, scope: !9448, file: !243, line: 4153, type: !45)
!9468 = !DILocation(line: 4153, column: 33, scope: !9448)
!9469 = !DILocalVariable(name: "clipcy", arg: 10, scope: !9448, file: !243, line: 4153, type: !45)
!9470 = !DILocation(line: 4153, column: 45, scope: !9448)
!9471 = !DILocalVariable(name: "boxx", arg: 11, scope: !9448, file: !243, line: 4154, type: !45)
!9472 = !DILocation(line: 4154, column: 11, scope: !9448)
!9473 = !DILocalVariable(name: "boxy", arg: 12, scope: !9448, file: !243, line: 4154, type: !45)
!9474 = !DILocation(line: 4154, column: 21, scope: !9448)
!9475 = !DILocalVariable(name: "boxcx", arg: 13, scope: !9448, file: !243, line: 4154, type: !45)
!9476 = !DILocation(line: 4154, column: 31, scope: !9448)
!9477 = !DILocalVariable(name: "boxcy", arg: 14, scope: !9448, file: !243, line: 4154, type: !45)
!9478 = !DILocation(line: 4154, column: 42, scope: !9448)
!9479 = !DILocalVariable(name: "brush", arg: 15, scope: !9448, file: !243, line: 4154, type: !5524)
!9480 = !DILocation(line: 4154, column: 57, scope: !9448)
!9481 = !DILocalVariable(name: "bgcolour", arg: 16, scope: !9448, file: !243, line: 4155, type: !193)
!9482 = !DILocation(line: 4155, column: 14, scope: !9448)
!9483 = !DILocalVariable(name: "fgcolour", arg: 17, scope: !9448, file: !243, line: 4155, type: !193)
!9484 = !DILocation(line: 4155, column: 31, scope: !9448)
!9485 = !DILocalVariable(name: "text", arg: 18, scope: !9448, file: !243, line: 4155, type: !46)
!9486 = !DILocation(line: 4155, column: 49, scope: !9448)
!9487 = !DILocalVariable(name: "length", arg: 19, scope: !9448, file: !243, line: 4155, type: !47)
!9488 = !DILocation(line: 4155, column: 61, scope: !9448)
!9489 = !DILocalVariable(name: "attr", scope: !9448, file: !243, line: 4157, type: !2170)
!9490 = !DILocation(line: 4157, column: 20, scope: !9448)
!9491 = !DILocation(line: 4158, column: 9, scope: !9448)
!9492 = !DILocation(line: 4159, column: 9, scope: !9448)
!9493 = !DILocation(line: 4161, column: 23, scope: !9448)
!9494 = !DILocation(line: 4161, column: 34, scope: !9448)
!9495 = !DILocation(line: 4161, column: 2, scope: !9448)
!9496 = !DILocalVariable(name: "glyph", scope: !9448, file: !243, line: 4165, type: !9497)
!9497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9498, size: 64, align: 64)
!9498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FONTGLYPH", file: !36, line: 130, baseType: !9499)
!9499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_FONTGLYPH", file: !36, line: 121, size: 128, align: 64, elements: !9500)
!9500 = !{!9501, !9502, !9503, !9504, !9505}
!9501 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !9499, file: !36, line: 123, baseType: !6917, size: 16, align: 16)
!9502 = !DIDerivedType(tag: DW_TAG_member, name: "baseline", scope: !9499, file: !36, line: 124, baseType: !6917, size: 16, align: 16, offset: 16)
!9503 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !9499, file: !36, line: 125, baseType: !240, size: 16, align: 16, offset: 32)
!9504 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !9499, file: !36, line: 126, baseType: !240, size: 16, align: 16, offset: 48)
!9505 = !DIDerivedType(tag: DW_TAG_member, name: "pixmap", scope: !9499, file: !36, line: 127, baseType: !188, size: 64, align: 64, offset: 64)
!9506 = !DILocation(line: 4165, column: 13, scope: !9448)
!9507 = !DILocalVariable(name: "i", scope: !9448, file: !243, line: 4166, type: !45)
!9508 = !DILocation(line: 4166, column: 6, scope: !9448)
!9509 = !DILocalVariable(name: "j", scope: !9448, file: !243, line: 4166, type: !45)
!9510 = !DILocation(line: 4166, column: 9, scope: !9448)
!9511 = !DILocalVariable(name: "xyoffset", scope: !9448, file: !243, line: 4166, type: !45)
!9512 = !DILocation(line: 4166, column: 12, scope: !9448)
!9513 = !DILocalVariable(name: "x1", scope: !9448, file: !243, line: 4166, type: !45)
!9514 = !DILocation(line: 4166, column: 22, scope: !9448)
!9515 = !DILocalVariable(name: "y1", scope: !9448, file: !243, line: 4166, type: !45)
!9516 = !DILocation(line: 4166, column: 26, scope: !9448)
!9517 = !DILocalVariable(name: "entry", scope: !9448, file: !243, line: 4167, type: !9518)
!9518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9519, size: 64, align: 64)
!9519 = !DIDerivedType(tag: DW_TAG_typedef, name: "DATABLOB", file: !36, line: 138, baseType: !9520)
!9520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_DATABLOB", file: !36, line: 132, size: 128, align: 64, elements: !9521)
!9521 = !{!9522, !9523}
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9520, file: !36, line: 134, baseType: !43, size: 64, align: 64)
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9520, file: !36, line: 135, baseType: !45, size: 32, align: 32, offset: 64)
!9524 = !DILocation(line: 4167, column: 12, scope: !9448)
!9525 = !DILocation(line: 4169, column: 17, scope: !9448)
!9526 = !DILocation(line: 4169, column: 28, scope: !9448)
!9527 = !DILocation(line: 4169, column: 36, scope: !9448)
!9528 = !DILocation(line: 4169, column: 51, scope: !9448)
!9529 = !DILocation(line: 4169, column: 75, scope: !9530)
!9530 = !DILexicalBlockFile(scope: !9448, file: !243, discriminator: 1)
!9531 = !DILocation(line: 4169, column: 58, scope: !9530)
!9532 = !DILocation(line: 4169, column: 36, scope: !9530)
!9533 = !DILocation(line: 4169, column: 87, scope: !9534)
!9534 = !DILexicalBlockFile(scope: !9448, file: !243, discriminator: 2)
!9535 = !DILocation(line: 4169, column: 101, scope: !9536)
!9536 = !DILexicalBlockFile(scope: !9448, file: !243, discriminator: 3)
!9537 = !DILocation(line: 4169, column: 87, scope: !9536)
!9538 = !DILocation(line: 4169, column: 121, scope: !9539)
!9539 = !DILexicalBlockFile(scope: !9448, file: !243, discriminator: 4)
!9540 = !DILocation(line: 4169, column: 112, scope: !9539)
!9541 = !DILocation(line: 4169, column: 87, scope: !9539)
!9542 = !DILocation(line: 4169, column: 87, scope: !9543)
!9543 = !DILexicalBlockFile(scope: !9448, file: !243, discriminator: 5)
!9544 = !DILocation(line: 4169, column: 36, scope: !9543)
!9545 = !DILocation(line: 4169, column: 36, scope: !9546)
!9546 = !DILexicalBlockFile(scope: !9448, file: !243, discriminator: 6)
!9547 = !DILocation(line: 4169, column: 34, scope: !9546)
!9548 = !DILocation(line: 4169, column: 2, scope: !9546)
!9549 = !DILocation(line: 4174, column: 6, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9448, file: !243, line: 4174, column: 6)
!9551 = !DILocation(line: 4174, column: 13, scope: !9550)
!9552 = !DILocation(line: 4174, column: 11, scope: !9550)
!9553 = !DILocation(line: 4174, column: 26, scope: !9550)
!9554 = !DILocation(line: 4174, column: 19, scope: !9550)
!9555 = !DILocation(line: 4174, column: 6, scope: !9448)
!9556 = !DILocation(line: 4175, column: 16, scope: !9550)
!9557 = !DILocation(line: 4175, column: 24, scope: !9550)
!9558 = !DILocation(line: 4175, column: 22, scope: !9550)
!9559 = !DILocation(line: 4175, column: 9, scope: !9550)
!9560 = !DILocation(line: 4175, column: 3, scope: !9550)
!9561 = !DILocation(line: 4177, column: 6, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9448, file: !243, line: 4177, column: 6)
!9563 = !DILocation(line: 4177, column: 12, scope: !9562)
!9564 = !DILocation(line: 4177, column: 6, scope: !9448)
!9565 = !DILocation(line: 4179, column: 20, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9567, file: !243, line: 4179, column: 3)
!9567 = distinct !DILexicalBlock(scope: !9562, file: !243, line: 4178, column: 2)
!9568 = !DILocation(line: 4179, column: 31, scope: !9566)
!9569 = !DILocation(line: 4179, column: 48, scope: !9570)
!9570 = !DILexicalBlockFile(scope: !9566, file: !243, discriminator: 1)
!9571 = !DILocation(line: 4179, column: 31, scope: !9570)
!9572 = !DILocation(line: 4179, column: 62, scope: !9573)
!9573 = !DILexicalBlockFile(scope: !9566, file: !243, discriminator: 2)
!9574 = !DILocation(line: 4179, column: 31, scope: !9573)
!9575 = !DILocation(line: 4179, column: 31, scope: !9576)
!9576 = !DILexicalBlockFile(scope: !9566, file: !243, discriminator: 3)
!9577 = !DILocation(line: 4179, column: 69, scope: !9576)
!9578 = !DILocation(line: 4179, column: 75, scope: !9576)
!9579 = !DILocation(line: 4179, column: 81, scope: !9576)
!9580 = !DILocation(line: 4179, column: 87, scope: !9576)
!9581 = !DILocation(line: 4179, column: 94, scope: !9576)
!9582 = !DILocation(line: 4179, column: 5, scope: !9576)
!9583 = !DILocation(line: 4180, column: 2, scope: !9567)
!9584 = !DILocation(line: 4181, column: 11, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9562, file: !243, line: 4181, column: 11)
!9586 = !DILocation(line: 4181, column: 19, scope: !9585)
!9587 = !DILocation(line: 4181, column: 11, scope: !9562)
!9588 = !DILocation(line: 4183, column: 20, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9590, file: !243, line: 4183, column: 3)
!9590 = distinct !DILexicalBlock(scope: !9585, file: !243, line: 4182, column: 2)
!9591 = !DILocation(line: 4183, column: 31, scope: !9589)
!9592 = !DILocation(line: 4183, column: 48, scope: !9593)
!9593 = !DILexicalBlockFile(scope: !9589, file: !243, discriminator: 1)
!9594 = !DILocation(line: 4183, column: 31, scope: !9593)
!9595 = !DILocation(line: 4183, column: 62, scope: !9596)
!9596 = !DILexicalBlockFile(scope: !9589, file: !243, discriminator: 2)
!9597 = !DILocation(line: 4183, column: 31, scope: !9596)
!9598 = !DILocation(line: 4183, column: 31, scope: !9599)
!9599 = !DILexicalBlockFile(scope: !9589, file: !243, discriminator: 3)
!9600 = !DILocation(line: 4183, column: 69, scope: !9599)
!9601 = !DILocation(line: 4183, column: 75, scope: !9599)
!9602 = !DILocation(line: 4183, column: 82, scope: !9599)
!9603 = !DILocation(line: 4183, column: 89, scope: !9599)
!9604 = !DILocation(line: 4183, column: 97, scope: !9599)
!9605 = !DILocation(line: 4183, column: 5, scope: !9599)
!9606 = !DILocation(line: 4184, column: 2, scope: !9590)
!9607 = !DILocation(line: 4186, column: 17, scope: !9448)
!9608 = !DILocation(line: 4186, column: 28, scope: !9448)
!9609 = !DILocation(line: 4186, column: 36, scope: !9448)
!9610 = !DILocation(line: 4186, column: 51, scope: !9448)
!9611 = !DILocation(line: 4186, column: 75, scope: !9530)
!9612 = !DILocation(line: 4186, column: 58, scope: !9530)
!9613 = !DILocation(line: 4186, column: 36, scope: !9530)
!9614 = !DILocation(line: 4186, column: 87, scope: !9534)
!9615 = !DILocation(line: 4186, column: 101, scope: !9536)
!9616 = !DILocation(line: 4186, column: 87, scope: !9536)
!9617 = !DILocation(line: 4186, column: 121, scope: !9539)
!9618 = !DILocation(line: 4186, column: 112, scope: !9539)
!9619 = !DILocation(line: 4186, column: 87, scope: !9539)
!9620 = !DILocation(line: 4186, column: 87, scope: !9543)
!9621 = !DILocation(line: 4186, column: 36, scope: !9543)
!9622 = !DILocation(line: 4186, column: 36, scope: !9546)
!9623 = !DILocation(line: 4186, column: 34, scope: !9546)
!9624 = !DILocation(line: 4186, column: 2, scope: !9546)
!9625 = !DILocation(line: 4187, column: 17, scope: !9448)
!9626 = !DILocation(line: 4187, column: 28, scope: !9448)
!9627 = !DILocation(line: 4187, column: 36, scope: !9448)
!9628 = !DILocation(line: 4187, column: 51, scope: !9448)
!9629 = !DILocation(line: 4187, column: 75, scope: !9530)
!9630 = !DILocation(line: 4187, column: 58, scope: !9530)
!9631 = !DILocation(line: 4187, column: 36, scope: !9530)
!9632 = !DILocation(line: 4187, column: 87, scope: !9534)
!9633 = !DILocation(line: 4187, column: 101, scope: !9536)
!9634 = !DILocation(line: 4187, column: 87, scope: !9536)
!9635 = !DILocation(line: 4187, column: 121, scope: !9539)
!9636 = !DILocation(line: 4187, column: 112, scope: !9539)
!9637 = !DILocation(line: 4187, column: 87, scope: !9539)
!9638 = !DILocation(line: 4187, column: 87, scope: !9543)
!9639 = !DILocation(line: 4187, column: 36, scope: !9543)
!9640 = !DILocation(line: 4187, column: 36, scope: !9546)
!9641 = !DILocation(line: 4187, column: 34, scope: !9546)
!9642 = !DILocation(line: 4187, column: 2, scope: !9546)
!9643 = !DILocation(line: 4188, column: 16, scope: !9448)
!9644 = !DILocation(line: 4188, column: 27, scope: !9448)
!9645 = !DILocation(line: 4188, column: 2, scope: !9448)
!9646 = !DILocation(line: 4191, column: 9, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9448, file: !243, line: 4191, column: 2)
!9648 = !DILocation(line: 4191, column: 7, scope: !9647)
!9649 = !DILocation(line: 4191, column: 14, scope: !9650)
!9650 = !DILexicalBlockFile(scope: !9651, file: !243, discriminator: 1)
!9651 = distinct !DILexicalBlock(scope: !9647, file: !243, line: 4191, column: 2)
!9652 = !DILocation(line: 4191, column: 18, scope: !9650)
!9653 = !DILocation(line: 4191, column: 16, scope: !9650)
!9654 = !DILocation(line: 4191, column: 2, scope: !9650)
!9655 = !DILocation(line: 4193, column: 16, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9651, file: !243, line: 4192, column: 2)
!9657 = !DILocation(line: 4193, column: 11, scope: !9656)
!9658 = !DILocation(line: 4193, column: 3, scope: !9656)
!9659 = !DILocation(line: 4197, column: 9, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9661, file: !243, line: 4197, column: 9)
!9661 = distinct !DILexicalBlock(scope: !9656, file: !243, line: 4194, column: 3)
!9662 = !DILocation(line: 4197, column: 11, scope: !9660)
!9663 = !DILocation(line: 4197, column: 17, scope: !9660)
!9664 = !DILocation(line: 4197, column: 15, scope: !9660)
!9665 = !DILocation(line: 4197, column: 9, scope: !9661)
!9666 = !DILocation(line: 4199, column: 6, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9660, file: !243, line: 4198, column: 5)
!9668 = !DILocation(line: 4201, column: 17, scope: !9667)
!9669 = !DILocation(line: 4201, column: 8, scope: !9667)
!9670 = !DILocation(line: 4202, column: 6, scope: !9667)
!9671 = !DILocation(line: 4204, column: 25, scope: !9661)
!9672 = !DILocation(line: 4204, column: 27, scope: !9661)
!9673 = !DILocation(line: 4204, column: 20, scope: !9661)
!9674 = !DILocation(line: 4204, column: 33, scope: !9661)
!9675 = !DILocation(line: 4204, column: 44, scope: !9661)
!9676 = !DILocation(line: 4204, column: 46, scope: !9661)
!9677 = !DILocation(line: 4204, column: 39, scope: !9661)
!9678 = !DILocation(line: 4204, column: 5, scope: !9661)
!9679 = !DILocation(line: 4205, column: 7, scope: !9661)
!9680 = !DILocation(line: 4206, column: 15, scope: !9661)
!9681 = !DILocation(line: 4206, column: 12, scope: !9661)
!9682 = !DILocation(line: 4208, column: 19, scope: !9661)
!9683 = !DILocation(line: 4208, column: 14, scope: !9661)
!9684 = !DILocation(line: 4208, column: 10, scope: !9661)
!9685 = !DILocation(line: 4209, column: 7, scope: !9661)
!9686 = !DILocation(line: 4210, column: 5, scope: !9661)
!9687 = !DILocation(line: 4214, column: 9, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9661, file: !243, line: 4214, column: 9)
!9689 = !DILocation(line: 4214, column: 11, scope: !9688)
!9690 = !DILocation(line: 4214, column: 17, scope: !9688)
!9691 = !DILocation(line: 4214, column: 15, scope: !9688)
!9692 = !DILocation(line: 4214, column: 9, scope: !9661)
!9693 = !DILocation(line: 4216, column: 6, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9688, file: !243, line: 4215, column: 5)
!9695 = !DILocation(line: 4218, column: 17, scope: !9694)
!9696 = !DILocation(line: 4218, column: 8, scope: !9694)
!9697 = !DILocation(line: 4219, column: 6, scope: !9694)
!9698 = !DILocation(line: 4221, column: 33, scope: !9661)
!9699 = !DILocation(line: 4221, column: 35, scope: !9661)
!9700 = !DILocation(line: 4221, column: 28, scope: !9661)
!9701 = !DILocation(line: 4221, column: 13, scope: !9661)
!9702 = !DILocation(line: 4221, column: 11, scope: !9661)
!9703 = !DILocation(line: 4222, column: 9, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9661, file: !243, line: 4222, column: 9)
!9705 = !DILocation(line: 4222, column: 16, scope: !9704)
!9706 = !DILocation(line: 4222, column: 21, scope: !9704)
!9707 = !DILocation(line: 4222, column: 9, scope: !9661)
!9708 = !DILocation(line: 4224, column: 23, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9710, file: !243, line: 4224, column: 10)
!9710 = distinct !DILexicalBlock(scope: !9704, file: !243, line: 4223, column: 5)
!9711 = !DILocation(line: 4224, column: 30, scope: !9709)
!9712 = !DILocation(line: 4224, column: 11, scope: !9709)
!9713 = !DILocation(line: 4224, column: 40, scope: !9709)
!9714 = !DILocation(line: 4225, column: 10, scope: !9709)
!9715 = !DILocation(line: 4225, column: 16, scope: !9716)
!9716 = !DILexicalBlockFile(scope: !9709, file: !243, discriminator: 1)
!9717 = !DILocation(line: 4225, column: 22, scope: !9716)
!9718 = !DILocation(line: 4225, column: 31, scope: !9716)
!9719 = !DILocation(line: 4225, column: 35, scope: !9720)
!9720 = !DILexicalBlockFile(scope: !9709, file: !243, discriminator: 2)
!9721 = !DILocation(line: 4225, column: 37, scope: !9720)
!9722 = !DILocation(line: 4225, column: 43, scope: !9720)
!9723 = !DILocation(line: 4225, column: 41, scope: !9720)
!9724 = !DILocation(line: 4224, column: 10, scope: !9725)
!9725 = !DILexicalBlockFile(scope: !9710, file: !243, discriminator: 1)
!9726 = !DILocation(line: 4227, column: 11, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9728, file: !243, line: 4227, column: 11)
!9728 = distinct !DILexicalBlock(scope: !9709, file: !243, line: 4226, column: 6)
!9729 = !DILocation(line: 4227, column: 17, scope: !9727)
!9730 = !DILocation(line: 4227, column: 11, scope: !9728)
!9731 = !DILocation(line: 4228, column: 18, scope: !9727)
!9732 = !DILocation(line: 4228, column: 20, scope: !9727)
!9733 = !DILocation(line: 4228, column: 13, scope: !9727)
!9734 = !DILocation(line: 4228, column: 10, scope: !9727)
!9735 = !DILocation(line: 4228, column: 8, scope: !9727)
!9736 = !DILocation(line: 4230, column: 18, scope: !9727)
!9737 = !DILocation(line: 4230, column: 20, scope: !9727)
!9738 = !DILocation(line: 4230, column: 13, scope: !9727)
!9739 = !DILocation(line: 4230, column: 10, scope: !9727)
!9740 = !DILocation(line: 4231, column: 6, scope: !9728)
!9741 = !DILocation(line: 4232, column: 13, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9710, file: !243, line: 4232, column: 6)
!9743 = !DILocation(line: 4232, column: 11, scope: !9742)
!9744 = !DILocation(line: 4232, column: 18, scope: !9745)
!9745 = !DILexicalBlockFile(scope: !9746, file: !243, discriminator: 1)
!9746 = distinct !DILexicalBlock(scope: !9742, file: !243, line: 4232, column: 6)
!9747 = !DILocation(line: 4232, column: 22, scope: !9745)
!9748 = !DILocation(line: 4232, column: 29, scope: !9745)
!9749 = !DILocation(line: 4232, column: 20, scope: !9745)
!9750 = !DILocation(line: 4232, column: 6, scope: !9745)
!9751 = !DILocation(line: 4233, column: 33, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9746, file: !243, line: 4233, column: 7)
!9753 = !DILocation(line: 4233, column: 65, scope: !9752)
!9754 = !DILocation(line: 4233, column: 39, scope: !9752)
!9755 = !DILocation(line: 4233, column: 51, scope: !9752)
!9756 = !DILocation(line: 4233, column: 58, scope: !9752)
!9757 = !DILocation(line: 4233, column: 17, scope: !9752)
!9758 = !DILocation(line: 4233, column: 15, scope: !9752)
!9759 = !DILocation(line: 4233, column: 76, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9752, file: !243, line: 4233, column: 74)
!9761 = !DILocation(line: 4233, column: 82, scope: !9760)
!9762 = !DILocation(line: 4233, column: 74, scope: !9752)
!9763 = !DILocation(line: 4233, column: 130, scope: !9764)
!9764 = !DILexicalBlockFile(scope: !9765, file: !243, discriminator: 1)
!9765 = distinct !DILexicalBlock(scope: !9760, file: !243, line: 4233, column: 91)
!9766 = !DILocation(line: 4233, column: 104, scope: !9764)
!9767 = !DILocation(line: 4233, column: 116, scope: !9764)
!9768 = !DILocation(line: 4233, column: 123, scope: !9764)
!9769 = !DILocation(line: 4233, column: 102, scope: !9764)
!9770 = !DILocation(line: 4233, column: 141, scope: !9764)
!9771 = !DILocation(line: 4233, column: 150, scope: !9764)
!9772 = !DILocation(line: 4233, column: 140, scope: !9764)
!9773 = !DILocation(line: 4233, column: 165, scope: !9774)
!9774 = !DILexicalBlockFile(scope: !9775, file: !243, discriminator: 2)
!9775 = distinct !DILexicalBlock(scope: !9776, file: !243, line: 4233, column: 165)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !243, line: 4233, column: 159)
!9777 = distinct !DILexicalBlock(scope: !9765, file: !243, line: 4233, column: 140)
!9778 = !DILocation(line: 4233, column: 171, scope: !9774)
!9779 = !DILocation(line: 4233, column: 210, scope: !9780)
!9780 = !DILexicalBlockFile(scope: !9775, file: !243, discriminator: 3)
!9781 = !DILocation(line: 4233, column: 211, scope: !9780)
!9782 = !DILocation(line: 4233, column: 184, scope: !9780)
!9783 = !DILocation(line: 4233, column: 196, scope: !9780)
!9784 = !DILocation(line: 4233, column: 203, scope: !9780)
!9785 = !DILocation(line: 4233, column: 244, scope: !9780)
!9786 = !DILocation(line: 4233, column: 245, scope: !9780)
!9787 = !DILocation(line: 4233, column: 218, scope: !9780)
!9788 = !DILocation(line: 4233, column: 230, scope: !9780)
!9789 = !DILocation(line: 4233, column: 237, scope: !9780)
!9790 = !DILocation(line: 4233, column: 249, scope: !9780)
!9791 = !DILocation(line: 4233, column: 215, scope: !9780)
!9792 = !DILocation(line: 4233, column: 181, scope: !9780)
!9793 = !DILocation(line: 4233, column: 179, scope: !9780)
!9794 = !DILocation(line: 4233, column: 292, scope: !9795)
!9795 = !DILexicalBlockFile(scope: !9775, file: !243, discriminator: 4)
!9796 = !DILocation(line: 4233, column: 293, scope: !9795)
!9797 = !DILocation(line: 4233, column: 266, scope: !9795)
!9798 = !DILocation(line: 4233, column: 278, scope: !9795)
!9799 = !DILocation(line: 4233, column: 285, scope: !9795)
!9800 = !DILocation(line: 4233, column: 326, scope: !9795)
!9801 = !DILocation(line: 4233, column: 327, scope: !9795)
!9802 = !DILocation(line: 4233, column: 300, scope: !9795)
!9803 = !DILocation(line: 4233, column: 312, scope: !9795)
!9804 = !DILocation(line: 4233, column: 319, scope: !9795)
!9805 = !DILocation(line: 4233, column: 331, scope: !9795)
!9806 = !DILocation(line: 4233, column: 297, scope: !9795)
!9807 = !DILocation(line: 4233, column: 263, scope: !9795)
!9808 = !DILocation(line: 4233, column: 340, scope: !9809)
!9809 = !DILexicalBlockFile(scope: !9776, file: !243, discriminator: 5)
!9810 = !DILocation(line: 4233, column: 346, scope: !9809)
!9811 = !DILocation(line: 4233, column: 359, scope: !9812)
!9812 = !DILexicalBlockFile(scope: !9813, file: !243, discriminator: 6)
!9813 = distinct !DILexicalBlock(scope: !9814, file: !243, line: 4233, column: 359)
!9814 = distinct !DILexicalBlock(scope: !9777, file: !243, line: 4233, column: 353)
!9815 = !DILocation(line: 4233, column: 365, scope: !9812)
!9816 = !DILocation(line: 4233, column: 378, scope: !9817)
!9817 = !DILexicalBlockFile(scope: !9813, file: !243, discriminator: 7)
!9818 = !DILocation(line: 4233, column: 375, scope: !9817)
!9819 = !DILocation(line: 4233, column: 373, scope: !9817)
!9820 = !DILocation(line: 4233, column: 398, scope: !9821)
!9821 = !DILexicalBlockFile(scope: !9813, file: !243, discriminator: 8)
!9822 = !DILocation(line: 4233, column: 395, scope: !9821)
!9823 = !DILocation(line: 4233, column: 410, scope: !9824)
!9824 = !DILexicalBlockFile(scope: !9765, file: !243, discriminator: 9)
!9825 = !DILocation(line: 4233, column: 416, scope: !9826)
!9826 = !DILexicalBlockFile(scope: !9827, file: !243, discriminator: 10)
!9827 = distinct !DILexicalBlock(scope: !9752, file: !243, line: 4233, column: 416)
!9828 = !DILocation(line: 4233, column: 422, scope: !9826)
!9829 = !DILocation(line: 4233, column: 15, scope: !9830)
!9830 = !DILexicalBlockFile(scope: !9831, file: !243, discriminator: 11)
!9831 = distinct !DILexicalBlock(scope: !9827, file: !243, line: 4233, column: 8)
!9832 = !DILocation(line: 4233, column: 19, scope: !9830)
!9833 = !DILocation(line: 4233, column: 26, scope: !9830)
!9834 = !DILocation(line: 4233, column: 17, scope: !9830)
!9835 = !DILocation(line: 4233, column: 13, scope: !9830)
!9836 = !DILocation(line: 4233, column: 39, scope: !9830)
!9837 = !DILocation(line: 4233, column: 43, scope: !9830)
!9838 = !DILocation(line: 4233, column: 50, scope: !9830)
!9839 = !DILocation(line: 4233, column: 41, scope: !9830)
!9840 = !DILocation(line: 4233, column: 37, scope: !9830)
!9841 = !DILocation(line: 4233, column: 72, scope: !9830)
!9842 = !DILocation(line: 4233, column: 83, scope: !9830)
!9843 = !DILocation(line: 4233, column: 98, scope: !9830)
!9844 = !DILocation(line: 4233, column: 105, scope: !9830)
!9845 = !DILocation(line: 4233, column: 89, scope: !9830)
!9846 = !DILocation(line: 4233, column: 60, scope: !9830)
!9847 = !DILocation(line: 4233, column: 127, scope: !9830)
!9848 = !DILocation(line: 4233, column: 138, scope: !9830)
!9849 = !DILocation(line: 4233, column: 144, scope: !9830)
!9850 = !DILocation(line: 4233, column: 148, scope: !9830)
!9851 = !DILocation(line: 4233, column: 114, scope: !9852)
!9852 = !DILexicalBlockFile(scope: !9830, file: !243, discriminator: 18)
!9853 = !DILocation(line: 4233, column: 170, scope: !9830)
!9854 = !DILocation(line: 4233, column: 181, scope: !9830)
!9855 = !DILocation(line: 4233, column: 198, scope: !9856)
!9856 = !DILexicalBlockFile(scope: !9857, file: !243, discriminator: 12)
!9857 = distinct !DILexicalBlock(scope: !9831, file: !243, line: 4233, column: 153)
!9858 = !DILocation(line: 4233, column: 181, scope: !9856)
!9859 = !DILocation(line: 4233, column: 212, scope: !9860)
!9860 = !DILexicalBlockFile(scope: !9857, file: !243, discriminator: 13)
!9861 = !DILocation(line: 4233, column: 181, scope: !9860)
!9862 = !DILocation(line: 4233, column: 181, scope: !9863)
!9863 = !DILexicalBlockFile(scope: !9857, file: !243, discriminator: 14)
!9864 = !DILocation(line: 4233, column: 219, scope: !9863)
!9865 = !DILocation(line: 4233, column: 225, scope: !9863)
!9866 = !DILocation(line: 4233, column: 229, scope: !9863)
!9867 = !DILocation(line: 4233, column: 233, scope: !9863)
!9868 = !DILocation(line: 4233, column: 240, scope: !9863)
!9869 = !DILocation(line: 4233, column: 247, scope: !9863)
!9870 = !DILocation(line: 4233, column: 254, scope: !9863)
!9871 = !DILocation(line: 4233, column: 155, scope: !9863)
!9872 = !DILocation(line: 4233, column: 270, scope: !9863)
!9873 = !DILocation(line: 4233, column: 276, scope: !9863)
!9874 = !DILocation(line: 4233, column: 289, scope: !9875)
!9875 = !DILexicalBlockFile(scope: !9876, file: !243, discriminator: 15)
!9876 = distinct !DILexicalBlock(scope: !9831, file: !243, line: 4233, column: 270)
!9877 = !DILocation(line: 4233, column: 296, scope: !9875)
!9878 = !DILocation(line: 4233, column: 286, scope: !9875)
!9879 = !DILocation(line: 4233, column: 284, scope: !9875)
!9880 = !DILocation(line: 4233, column: 303, scope: !9881)
!9881 = !DILexicalBlockFile(scope: !9831, file: !243, discriminator: 16)
!9882 = !DILocation(line: 4233, column: 304, scope: !9883)
!9883 = !DILexicalBlockFile(scope: !9752, file: !243, discriminator: 17)
!9884 = !DILocation(line: 4232, column: 36, scope: !9885)
!9885 = !DILexicalBlockFile(scope: !9746, file: !243, discriminator: 2)
!9886 = !DILocation(line: 4232, column: 6, scope: !9885)
!9887 = distinct !{!9887, !9888}
!9888 = !DILocation(line: 4232, column: 6, scope: !9710)
!9889 = !DILocation(line: 4234, column: 5, scope: !9710)
!9890 = !DILocation(line: 4235, column: 9, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9661, file: !243, line: 4235, column: 9)
!9892 = !DILocation(line: 4235, column: 11, scope: !9891)
!9893 = !DILocation(line: 4235, column: 17, scope: !9891)
!9894 = !DILocation(line: 4235, column: 15, scope: !9891)
!9895 = !DILocation(line: 4235, column: 9, scope: !9661)
!9896 = !DILocation(line: 4236, column: 8, scope: !9891)
!9897 = !DILocation(line: 4236, column: 6, scope: !9891)
!9898 = !DILocation(line: 4238, column: 8, scope: !9891)
!9899 = !DILocation(line: 4239, column: 15, scope: !9661)
!9900 = !DILocation(line: 4239, column: 12, scope: !9661)
!9901 = !DILocation(line: 4241, column: 19, scope: !9661)
!9902 = !DILocation(line: 4241, column: 14, scope: !9661)
!9903 = !DILocation(line: 4241, column: 10, scope: !9661)
!9904 = !DILocation(line: 4242, column: 7, scope: !9661)
!9905 = !DILocation(line: 4243, column: 5, scope: !9661)
!9906 = !DILocation(line: 4246, column: 31, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9661, file: !243, line: 4246, column: 5)
!9908 = !DILocation(line: 4246, column: 42, scope: !9907)
!9909 = !DILocation(line: 4246, column: 37, scope: !9907)
!9910 = !DILocation(line: 4246, column: 15, scope: !9907)
!9911 = !DILocation(line: 4246, column: 13, scope: !9907)
!9912 = !DILocation(line: 4246, column: 53, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9907, file: !243, line: 4246, column: 51)
!9914 = !DILocation(line: 4246, column: 59, scope: !9913)
!9915 = !DILocation(line: 4246, column: 51, scope: !9907)
!9916 = !DILocation(line: 4246, column: 86, scope: !9917)
!9917 = !DILexicalBlockFile(scope: !9918, file: !243, discriminator: 1)
!9918 = distinct !DILexicalBlock(scope: !9913, file: !243, line: 4246, column: 68)
!9919 = !DILocation(line: 4246, column: 81, scope: !9917)
!9920 = !DILocation(line: 4246, column: 79, scope: !9917)
!9921 = !DILocation(line: 4246, column: 97, scope: !9917)
!9922 = !DILocation(line: 4246, column: 106, scope: !9917)
!9923 = !DILocation(line: 4246, column: 96, scope: !9917)
!9924 = !DILocation(line: 4246, column: 121, scope: !9925)
!9925 = !DILexicalBlockFile(scope: !9926, file: !243, discriminator: 2)
!9926 = distinct !DILexicalBlock(scope: !9927, file: !243, line: 4246, column: 121)
!9927 = distinct !DILexicalBlock(scope: !9928, file: !243, line: 4246, column: 115)
!9928 = distinct !DILexicalBlock(scope: !9918, file: !243, line: 4246, column: 96)
!9929 = !DILocation(line: 4246, column: 127, scope: !9925)
!9930 = !DILocation(line: 4246, column: 145, scope: !9931)
!9931 = !DILexicalBlockFile(scope: !9926, file: !243, discriminator: 3)
!9932 = !DILocation(line: 4246, column: 146, scope: !9931)
!9933 = !DILocation(line: 4246, column: 140, scope: !9931)
!9934 = !DILocation(line: 4246, column: 158, scope: !9931)
!9935 = !DILocation(line: 4246, column: 159, scope: !9931)
!9936 = !DILocation(line: 4246, column: 153, scope: !9931)
!9937 = !DILocation(line: 4246, column: 163, scope: !9931)
!9938 = !DILocation(line: 4246, column: 150, scope: !9931)
!9939 = !DILocation(line: 4246, column: 137, scope: !9931)
!9940 = !DILocation(line: 4246, column: 135, scope: !9931)
!9941 = !DILocation(line: 4246, column: 185, scope: !9942)
!9942 = !DILexicalBlockFile(scope: !9926, file: !243, discriminator: 4)
!9943 = !DILocation(line: 4246, column: 186, scope: !9942)
!9944 = !DILocation(line: 4246, column: 180, scope: !9942)
!9945 = !DILocation(line: 4246, column: 198, scope: !9942)
!9946 = !DILocation(line: 4246, column: 199, scope: !9942)
!9947 = !DILocation(line: 4246, column: 193, scope: !9942)
!9948 = !DILocation(line: 4246, column: 203, scope: !9942)
!9949 = !DILocation(line: 4246, column: 190, scope: !9942)
!9950 = !DILocation(line: 4246, column: 177, scope: !9942)
!9951 = !DILocation(line: 4246, column: 212, scope: !9952)
!9952 = !DILexicalBlockFile(scope: !9927, file: !243, discriminator: 5)
!9953 = !DILocation(line: 4246, column: 218, scope: !9952)
!9954 = !DILocation(line: 4246, column: 231, scope: !9955)
!9955 = !DILexicalBlockFile(scope: !9956, file: !243, discriminator: 6)
!9956 = distinct !DILexicalBlock(scope: !9957, file: !243, line: 4246, column: 231)
!9957 = distinct !DILexicalBlock(scope: !9928, file: !243, line: 4246, column: 225)
!9958 = !DILocation(line: 4246, column: 237, scope: !9955)
!9959 = !DILocation(line: 4246, column: 250, scope: !9960)
!9960 = !DILexicalBlockFile(scope: !9956, file: !243, discriminator: 7)
!9961 = !DILocation(line: 4246, column: 247, scope: !9960)
!9962 = !DILocation(line: 4246, column: 245, scope: !9960)
!9963 = !DILocation(line: 4246, column: 270, scope: !9964)
!9964 = !DILexicalBlockFile(scope: !9956, file: !243, discriminator: 8)
!9965 = !DILocation(line: 4246, column: 267, scope: !9964)
!9966 = !DILocation(line: 4246, column: 282, scope: !9967)
!9967 = !DILexicalBlockFile(scope: !9918, file: !243, discriminator: 9)
!9968 = !DILocation(line: 4246, column: 288, scope: !9969)
!9969 = !DILexicalBlockFile(scope: !9970, file: !243, discriminator: 10)
!9970 = distinct !DILexicalBlock(scope: !9907, file: !243, line: 4246, column: 288)
!9971 = !DILocation(line: 4246, column: 294, scope: !9969)
!9972 = !DILocation(line: 4246, column: 13, scope: !9973)
!9973 = !DILexicalBlockFile(scope: !9974, file: !243, discriminator: 11)
!9974 = distinct !DILexicalBlock(scope: !9970, file: !243, line: 4246, column: 6)
!9975 = !DILocation(line: 4246, column: 17, scope: !9973)
!9976 = !DILocation(line: 4246, column: 24, scope: !9973)
!9977 = !DILocation(line: 4246, column: 15, scope: !9973)
!9978 = !DILocation(line: 4246, column: 11, scope: !9973)
!9979 = !DILocation(line: 4246, column: 37, scope: !9973)
!9980 = !DILocation(line: 4246, column: 41, scope: !9973)
!9981 = !DILocation(line: 4246, column: 48, scope: !9973)
!9982 = !DILocation(line: 4246, column: 39, scope: !9973)
!9983 = !DILocation(line: 4246, column: 35, scope: !9973)
!9984 = !DILocation(line: 4246, column: 70, scope: !9973)
!9985 = !DILocation(line: 4246, column: 81, scope: !9973)
!9986 = !DILocation(line: 4246, column: 96, scope: !9973)
!9987 = !DILocation(line: 4246, column: 103, scope: !9973)
!9988 = !DILocation(line: 4246, column: 87, scope: !9973)
!9989 = !DILocation(line: 4246, column: 58, scope: !9973)
!9990 = !DILocation(line: 4246, column: 125, scope: !9973)
!9991 = !DILocation(line: 4246, column: 136, scope: !9973)
!9992 = !DILocation(line: 4246, column: 142, scope: !9973)
!9993 = !DILocation(line: 4246, column: 146, scope: !9973)
!9994 = !DILocation(line: 4246, column: 112, scope: !9995)
!9995 = !DILexicalBlockFile(scope: !9973, file: !243, discriminator: 17)
!9996 = !DILocation(line: 4246, column: 168, scope: !9973)
!9997 = !DILocation(line: 4246, column: 179, scope: !9973)
!9998 = !DILocation(line: 4246, column: 196, scope: !9999)
!9999 = !DILexicalBlockFile(scope: !10000, file: !243, discriminator: 12)
!10000 = distinct !DILexicalBlock(scope: !9974, file: !243, line: 4246, column: 151)
!10001 = !DILocation(line: 4246, column: 179, scope: !9999)
!10002 = !DILocation(line: 4246, column: 210, scope: !10003)
!10003 = !DILexicalBlockFile(scope: !10000, file: !243, discriminator: 13)
!10004 = !DILocation(line: 4246, column: 179, scope: !10003)
!10005 = !DILocation(line: 4246, column: 179, scope: !10006)
!10006 = !DILexicalBlockFile(scope: !10000, file: !243, discriminator: 14)
!10007 = !DILocation(line: 4246, column: 217, scope: !10006)
!10008 = !DILocation(line: 4246, column: 223, scope: !10006)
!10009 = !DILocation(line: 4246, column: 227, scope: !10006)
!10010 = !DILocation(line: 4246, column: 231, scope: !10006)
!10011 = !DILocation(line: 4246, column: 238, scope: !10006)
!10012 = !DILocation(line: 4246, column: 245, scope: !10006)
!10013 = !DILocation(line: 4246, column: 252, scope: !10006)
!10014 = !DILocation(line: 4246, column: 153, scope: !10006)
!10015 = !DILocation(line: 4246, column: 268, scope: !10006)
!10016 = !DILocation(line: 4246, column: 274, scope: !10006)
!10017 = !DILocation(line: 4246, column: 287, scope: !10018)
!10018 = !DILexicalBlockFile(scope: !10019, file: !243, discriminator: 15)
!10019 = distinct !DILexicalBlock(scope: !9974, file: !243, line: 4246, column: 268)
!10020 = !DILocation(line: 4246, column: 294, scope: !10018)
!10021 = !DILocation(line: 4246, column: 284, scope: !10018)
!10022 = !DILocation(line: 4246, column: 282, scope: !10018)
!10023 = !DILocation(line: 4246, column: 301, scope: !10024)
!10024 = !DILexicalBlockFile(scope: !9974, file: !243, discriminator: 16)
!10025 = !DILocation(line: 4247, column: 6, scope: !9661)
!10026 = !DILocation(line: 4248, column: 5, scope: !9661)
!10027 = !DILocation(line: 4191, column: 2, scope: !10028)
!10028 = !DILexicalBlockFile(scope: !9651, file: !243, discriminator: 2)
!10029 = distinct !{!10029, !10030}
!10030 = !DILocation(line: 4191, column: 2, scope: !9448)
!10031 = !DILocation(line: 4252, column: 16, scope: !9448)
!10032 = !DILocation(line: 4252, column: 27, scope: !9448)
!10033 = !DILocation(line: 4252, column: 2, scope: !9448)
!10034 = !DILocation(line: 4254, column: 6, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !9448, file: !243, line: 4254, column: 6)
!10036 = !DILocation(line: 4254, column: 6, scope: !9448)
!10037 = !DILocation(line: 4256, column: 7, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10039, file: !243, line: 4256, column: 7)
!10039 = distinct !DILexicalBlock(scope: !10035, file: !243, line: 4255, column: 2)
!10040 = !DILocation(line: 4256, column: 13, scope: !10038)
!10041 = !DILocation(line: 4256, column: 7, scope: !10039)
!10042 = !DILocation(line: 4258, column: 14, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10038, file: !243, line: 4257, column: 3)
!10044 = !DILocation(line: 4258, column: 25, scope: !10043)
!10045 = !DILocation(line: 4258, column: 38, scope: !10043)
!10046 = !DILocation(line: 4258, column: 45, scope: !10043)
!10047 = !DILocation(line: 4258, column: 51, scope: !10043)
!10048 = !DILocation(line: 4259, column: 7, scope: !10043)
!10049 = !DILocation(line: 4259, column: 13, scope: !10043)
!10050 = !DILocation(line: 4259, column: 20, scope: !10043)
!10051 = !DILocation(line: 4259, column: 27, scope: !10043)
!10052 = !DILocation(line: 4259, column: 33, scope: !10043)
!10053 = !DILocation(line: 4258, column: 4, scope: !10043)
!10054 = !DILocation(line: 4260, column: 4, scope: !10043)
!10055 = distinct !{!10055, !10054}
!10056 = !DILocalVariable(name: "sw", scope: !10057, file: !243, line: 4260, type: !360)
!10057 = distinct !DILexicalBlock(scope: !10043, file: !243, line: 4260, column: 7)
!10058 = !DILocation(line: 4260, column: 26, scope: !10057)
!10059 = !DILocalVariable(name: "rect", scope: !10057, file: !243, line: 4260, type: !274)
!10060 = !DILocation(line: 4260, column: 41, scope: !10057)
!10061 = !DILocation(line: 4260, column: 52, scope: !10062)
!10062 = !DILexicalBlockFile(scope: !10063, file: !243, discriminator: 1)
!10063 = distinct !DILexicalBlock(scope: !10057, file: !243, line: 4260, column: 51)
!10064 = !DILocation(line: 4260, column: 51, scope: !10062)
!10065 = !DILocation(line: 4260, column: 72, scope: !10066)
!10066 = !DILexicalBlockFile(scope: !10063, file: !243, discriminator: 2)
!10067 = !DILocation(line: 4260, column: 89, scope: !10068)
!10068 = !DILexicalBlockFile(scope: !10069, file: !243, discriminator: 3)
!10069 = distinct !DILexicalBlock(scope: !10057, file: !243, line: 4260, column: 79)
!10070 = !DILocation(line: 4260, column: 87, scope: !10068)
!10071 = !DILocation(line: 4260, column: 84, scope: !10068)
!10072 = !DILocation(line: 4260, column: 109, scope: !10073)
!10073 = !DILexicalBlockFile(scope: !10074, file: !243, discriminator: 4)
!10074 = distinct !DILexicalBlock(scope: !10069, file: !243, line: 4260, column: 79)
!10075 = !DILocation(line: 4260, column: 79, scope: !10073)
!10076 = !DILocation(line: 4260, column: 156, scope: !10077)
!10077 = !DILexicalBlockFile(scope: !10078, file: !243, discriminator: 5)
!10078 = distinct !DILexicalBlock(scope: !10074, file: !243, line: 4260, column: 128)
!10079 = !DILocation(line: 4260, column: 139, scope: !10077)
!10080 = !DILocation(line: 4260, column: 160, scope: !10077)
!10081 = !DILocation(line: 4260, column: 164, scope: !10077)
!10082 = !DILocation(line: 4260, column: 158, scope: !10077)
!10083 = !DILocation(line: 4260, column: 135, scope: !10077)
!10084 = !DILocation(line: 4260, column: 137, scope: !10077)
!10085 = !DILocation(line: 4260, column: 199, scope: !10077)
!10086 = !DILocation(line: 4260, column: 182, scope: !10077)
!10087 = !DILocation(line: 4260, column: 203, scope: !10077)
!10088 = !DILocation(line: 4260, column: 207, scope: !10077)
!10089 = !DILocation(line: 4260, column: 201, scope: !10077)
!10090 = !DILocation(line: 4260, column: 178, scope: !10077)
!10091 = !DILocation(line: 4260, column: 180, scope: !10077)
!10092 = !DILocation(line: 4260, column: 246, scope: !10077)
!10093 = !DILocation(line: 4260, column: 221, scope: !10077)
!10094 = !DILocation(line: 4260, column: 227, scope: !10077)
!10095 = !DILocation(line: 4260, column: 284, scope: !10077)
!10096 = !DILocation(line: 4260, column: 258, scope: !10077)
!10097 = !DILocation(line: 4260, column: 265, scope: !10077)
!10098 = !DILocation(line: 4260, column: 311, scope: !10077)
!10099 = !DILocation(line: 4260, column: 322, scope: !10077)
!10100 = !DILocation(line: 4260, column: 292, scope: !10077)
!10101 = !DILocation(line: 4260, column: 17, scope: !10077)
!10102 = !DILocation(line: 4260, column: 28, scope: !10077)
!10103 = !DILocation(line: 4260, column: 41, scope: !10077)
!10104 = !DILocation(line: 4260, column: 45, scope: !10077)
!10105 = !DILocation(line: 4260, column: 50, scope: !10077)
!10106 = !DILocation(line: 4260, column: 56, scope: !10077)
!10107 = !DILocation(line: 4260, column: 62, scope: !10077)
!10108 = !DILocation(line: 4260, column: 68, scope: !10077)
!10109 = !DILocation(line: 4260, column: 75, scope: !10077)
!10110 = !DILocation(line: 4260, column: 82, scope: !10077)
!10111 = !DILocation(line: 4260, column: 89, scope: !10077)
!10112 = !DILocation(line: 4260, column: 93, scope: !10077)
!10113 = !DILocation(line: 4260, column: 87, scope: !10077)
!10114 = !DILocation(line: 4260, column: 102, scope: !10077)
!10115 = !DILocation(line: 4260, column: 109, scope: !10077)
!10116 = !DILocation(line: 4260, column: 113, scope: !10077)
!10117 = !DILocation(line: 4260, column: 107, scope: !10077)
!10118 = !DILocation(line: 4260, column: 6, scope: !10119)
!10119 = !DILexicalBlockFile(scope: !10077, file: !243, discriminator: 8)
!10120 = !DILocation(line: 4260, column: 123, scope: !10077)
!10121 = !DILocation(line: 4260, column: 118, scope: !10122)
!10122 = !DILexicalBlockFile(scope: !10074, file: !243, discriminator: 6)
!10123 = !DILocation(line: 4260, column: 122, scope: !10122)
!10124 = !DILocation(line: 4260, column: 116, scope: !10122)
!10125 = !DILocation(line: 4260, column: 79, scope: !10122)
!10126 = distinct !{!10126, !10127}
!10127 = !DILocation(line: 4260, column: 79, scope: !10057)
!10128 = !DILocation(line: 4260, column: 144, scope: !10129)
!10129 = !DILexicalBlockFile(scope: !10057, file: !243, discriminator: 7)
!10130 = !DILocation(line: 4260, column: 155, scope: !10129)
!10131 = !DILocation(line: 4260, column: 125, scope: !10129)
!10132 = !DILocation(line: 4260, column: 6, scope: !10129)
!10133 = !DILocation(line: 4265, column: 3, scope: !10043)
!10134 = !DILocation(line: 4268, column: 14, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10038, file: !243, line: 4267, column: 3)
!10136 = !DILocation(line: 4268, column: 25, scope: !10135)
!10137 = !DILocation(line: 4268, column: 38, scope: !10135)
!10138 = !DILocation(line: 4268, column: 45, scope: !10135)
!10139 = !DILocation(line: 4268, column: 51, scope: !10135)
!10140 = !DILocation(line: 4269, column: 7, scope: !10135)
!10141 = !DILocation(line: 4269, column: 14, scope: !10135)
!10142 = !DILocation(line: 4269, column: 22, scope: !10135)
!10143 = !DILocation(line: 4269, column: 30, scope: !10135)
!10144 = !DILocation(line: 4269, column: 37, scope: !10135)
!10145 = !DILocation(line: 4268, column: 4, scope: !10135)
!10146 = !DILocation(line: 4270, column: 4, scope: !10135)
!10147 = distinct !{!10147, !10146}
!10148 = !DILocalVariable(name: "sw", scope: !10149, file: !243, line: 4270, type: !360)
!10149 = distinct !DILexicalBlock(scope: !10135, file: !243, line: 4270, column: 7)
!10150 = !DILocation(line: 4270, column: 26, scope: !10149)
!10151 = !DILocalVariable(name: "rect", scope: !10149, file: !243, line: 4270, type: !274)
!10152 = !DILocation(line: 4270, column: 41, scope: !10149)
!10153 = !DILocation(line: 4270, column: 52, scope: !10154)
!10154 = !DILexicalBlockFile(scope: !10155, file: !243, discriminator: 1)
!10155 = distinct !DILexicalBlock(scope: !10149, file: !243, line: 4270, column: 51)
!10156 = !DILocation(line: 4270, column: 51, scope: !10154)
!10157 = !DILocation(line: 4270, column: 72, scope: !10158)
!10158 = !DILexicalBlockFile(scope: !10155, file: !243, discriminator: 2)
!10159 = !DILocation(line: 4270, column: 89, scope: !10160)
!10160 = !DILexicalBlockFile(scope: !10161, file: !243, discriminator: 3)
!10161 = distinct !DILexicalBlock(scope: !10149, file: !243, line: 4270, column: 79)
!10162 = !DILocation(line: 4270, column: 87, scope: !10160)
!10163 = !DILocation(line: 4270, column: 84, scope: !10160)
!10164 = !DILocation(line: 4270, column: 109, scope: !10165)
!10165 = !DILexicalBlockFile(scope: !10166, file: !243, discriminator: 4)
!10166 = distinct !DILexicalBlock(scope: !10161, file: !243, line: 4270, column: 79)
!10167 = !DILocation(line: 4270, column: 79, scope: !10165)
!10168 = !DILocation(line: 4270, column: 156, scope: !10169)
!10169 = !DILexicalBlockFile(scope: !10170, file: !243, discriminator: 5)
!10170 = distinct !DILexicalBlock(scope: !10166, file: !243, line: 4270, column: 128)
!10171 = !DILocation(line: 4270, column: 139, scope: !10169)
!10172 = !DILocation(line: 4270, column: 160, scope: !10169)
!10173 = !DILocation(line: 4270, column: 164, scope: !10169)
!10174 = !DILocation(line: 4270, column: 158, scope: !10169)
!10175 = !DILocation(line: 4270, column: 135, scope: !10169)
!10176 = !DILocation(line: 4270, column: 137, scope: !10169)
!10177 = !DILocation(line: 4270, column: 199, scope: !10169)
!10178 = !DILocation(line: 4270, column: 182, scope: !10169)
!10179 = !DILocation(line: 4270, column: 203, scope: !10169)
!10180 = !DILocation(line: 4270, column: 207, scope: !10169)
!10181 = !DILocation(line: 4270, column: 201, scope: !10169)
!10182 = !DILocation(line: 4270, column: 178, scope: !10169)
!10183 = !DILocation(line: 4270, column: 180, scope: !10169)
!10184 = !DILocation(line: 4270, column: 246, scope: !10169)
!10185 = !DILocation(line: 4270, column: 221, scope: !10169)
!10186 = !DILocation(line: 4270, column: 227, scope: !10169)
!10187 = !DILocation(line: 4270, column: 284, scope: !10169)
!10188 = !DILocation(line: 4270, column: 258, scope: !10169)
!10189 = !DILocation(line: 4270, column: 265, scope: !10169)
!10190 = !DILocation(line: 4270, column: 311, scope: !10169)
!10191 = !DILocation(line: 4270, column: 322, scope: !10169)
!10192 = !DILocation(line: 4270, column: 292, scope: !10169)
!10193 = !DILocation(line: 4270, column: 17, scope: !10169)
!10194 = !DILocation(line: 4270, column: 28, scope: !10169)
!10195 = !DILocation(line: 4270, column: 41, scope: !10169)
!10196 = !DILocation(line: 4270, column: 45, scope: !10169)
!10197 = !DILocation(line: 4270, column: 50, scope: !10169)
!10198 = !DILocation(line: 4270, column: 56, scope: !10169)
!10199 = !DILocation(line: 4270, column: 63, scope: !10169)
!10200 = !DILocation(line: 4270, column: 70, scope: !10169)
!10201 = !DILocation(line: 4270, column: 78, scope: !10169)
!10202 = !DILocation(line: 4270, column: 86, scope: !10169)
!10203 = !DILocation(line: 4270, column: 94, scope: !10169)
!10204 = !DILocation(line: 4270, column: 98, scope: !10169)
!10205 = !DILocation(line: 4270, column: 92, scope: !10169)
!10206 = !DILocation(line: 4270, column: 107, scope: !10169)
!10207 = !DILocation(line: 4270, column: 115, scope: !10169)
!10208 = !DILocation(line: 4270, column: 119, scope: !10169)
!10209 = !DILocation(line: 4270, column: 113, scope: !10169)
!10210 = !DILocation(line: 4270, column: 6, scope: !10211)
!10211 = !DILexicalBlockFile(scope: !10169, file: !243, discriminator: 8)
!10212 = !DILocation(line: 4270, column: 129, scope: !10169)
!10213 = !DILocation(line: 4270, column: 118, scope: !10214)
!10214 = !DILexicalBlockFile(scope: !10166, file: !243, discriminator: 6)
!10215 = !DILocation(line: 4270, column: 122, scope: !10214)
!10216 = !DILocation(line: 4270, column: 116, scope: !10214)
!10217 = !DILocation(line: 4270, column: 79, scope: !10214)
!10218 = distinct !{!10218, !10219}
!10219 = !DILocation(line: 4270, column: 79, scope: !10149)
!10220 = !DILocation(line: 4270, column: 150, scope: !10221)
!10221 = !DILexicalBlockFile(scope: !10149, file: !243, discriminator: 7)
!10222 = !DILocation(line: 4270, column: 161, scope: !10221)
!10223 = !DILocation(line: 4270, column: 131, scope: !10221)
!10224 = !DILocation(line: 4270, column: 6, scope: !10221)
!10225 = !DILocation(line: 4276, column: 2, scope: !10039)
!10226 = !DILocation(line: 4277, column: 1, scope: !9448)
!10227 = distinct !DISubprogram(name: "ui_desktop_save", scope: !243, file: !243, line: 4280, type: !10228, isLocal: false, isDefinition: true, scopeLine: 4281, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!10228 = !DISubroutineType(types: !10229)
!10229 = !{null, !193, !45, !45, !45, !45}
!10230 = !DILocalVariable(name: "offset", arg: 1, scope: !10227, file: !243, line: 4280, type: !193)
!10231 = !DILocation(line: 4280, column: 24, scope: !10227)
!10232 = !DILocalVariable(name: "x", arg: 2, scope: !10227, file: !243, line: 4280, type: !45)
!10233 = !DILocation(line: 4280, column: 36, scope: !10227)
!10234 = !DILocalVariable(name: "y", arg: 3, scope: !10227, file: !243, line: 4280, type: !45)
!10235 = !DILocation(line: 4280, column: 43, scope: !10227)
!10236 = !DILocalVariable(name: "cx", arg: 4, scope: !10227, file: !243, line: 4280, type: !45)
!10237 = !DILocation(line: 4280, column: 50, scope: !10227)
!10238 = !DILocalVariable(name: "cy", arg: 5, scope: !10227, file: !243, line: 4280, type: !45)
!10239 = !DILocation(line: 4280, column: 58, scope: !10227)
!10240 = !DILocalVariable(name: "pix", scope: !10227, file: !243, line: 4282, type: !189)
!10241 = !DILocation(line: 4282, column: 9, scope: !10227)
!10242 = !DILocalVariable(name: "image", scope: !10227, file: !243, line: 4283, type: !3769)
!10243 = !DILocation(line: 4283, column: 10, scope: !10227)
!10244 = !DILocation(line: 4285, column: 6, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10227, file: !243, line: 4285, column: 6)
!10246 = !DILocation(line: 4285, column: 6, scope: !10227)
!10247 = !DILocation(line: 4287, column: 21, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10245, file: !243, line: 4286, column: 2)
!10249 = !DILocation(line: 4287, column: 32, scope: !10248)
!10250 = !DILocation(line: 4287, column: 45, scope: !10248)
!10251 = !DILocation(line: 4287, column: 48, scope: !10248)
!10252 = !DILocation(line: 4287, column: 51, scope: !10248)
!10253 = !DILocation(line: 4287, column: 55, scope: !10248)
!10254 = !DILocation(line: 4287, column: 11, scope: !10248)
!10255 = !DILocation(line: 4287, column: 9, scope: !10248)
!10256 = !DILocation(line: 4288, column: 16, scope: !10248)
!10257 = !DILocation(line: 4288, column: 3, scope: !10248)
!10258 = !DILocation(line: 4289, column: 2, scope: !10248)
!10259 = !DILocation(line: 4292, column: 23, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10245, file: !243, line: 4291, column: 2)
!10261 = !DILocation(line: 4292, column: 34, scope: !10260)
!10262 = !DILocation(line: 4292, column: 41, scope: !10260)
!10263 = !DILocation(line: 4292, column: 45, scope: !10260)
!10264 = !DILocation(line: 4292, column: 49, scope: !10260)
!10265 = !DILocation(line: 4292, column: 9, scope: !10260)
!10266 = !DILocation(line: 4292, column: 7, scope: !10260)
!10267 = !DILocation(line: 4293, column: 13, scope: !10260)
!10268 = !DILocation(line: 4293, column: 24, scope: !10260)
!10269 = !DILocation(line: 4293, column: 31, scope: !10260)
!10270 = !DILocation(line: 4293, column: 36, scope: !10260)
!10271 = !DILocation(line: 4293, column: 42, scope: !10260)
!10272 = !DILocation(line: 4293, column: 45, scope: !10260)
!10273 = !DILocation(line: 4293, column: 48, scope: !10260)
!10274 = !DILocation(line: 4293, column: 52, scope: !10260)
!10275 = !DILocation(line: 4293, column: 3, scope: !10260)
!10276 = !DILocation(line: 4294, column: 21, scope: !10260)
!10277 = !DILocation(line: 4294, column: 32, scope: !10260)
!10278 = !DILocation(line: 4294, column: 43, scope: !10260)
!10279 = !DILocation(line: 4294, column: 47, scope: !10260)
!10280 = !DILocation(line: 4294, column: 11, scope: !10260)
!10281 = !DILocation(line: 4294, column: 9, scope: !10260)
!10282 = !DILocation(line: 4295, column: 16, scope: !10260)
!10283 = !DILocation(line: 4295, column: 3, scope: !10260)
!10284 = !DILocation(line: 4296, column: 15, scope: !10260)
!10285 = !DILocation(line: 4296, column: 26, scope: !10260)
!10286 = !DILocation(line: 4296, column: 3, scope: !10260)
!10287 = !DILocation(line: 4299, column: 12, scope: !10227)
!10288 = !DILocation(line: 4299, column: 18, scope: !10227)
!10289 = !DILocation(line: 4299, column: 9, scope: !10227)
!10290 = !DILocation(line: 4300, column: 20, scope: !10227)
!10291 = !DILocation(line: 4300, column: 28, scope: !10227)
!10292 = !DILocation(line: 4300, column: 32, scope: !10227)
!10293 = !DILocation(line: 4300, column: 36, scope: !10227)
!10294 = !DILocation(line: 4300, column: 43, scope: !10227)
!10295 = !DILocation(line: 4300, column: 59, scope: !10227)
!10296 = !DILocation(line: 4300, column: 65, scope: !10227)
!10297 = !DILocation(line: 4300, column: 80, scope: !10227)
!10298 = !DILocation(line: 4300, column: 87, scope: !10227)
!10299 = !DILocation(line: 4300, column: 2, scope: !10227)
!10300 = !DILocation(line: 4302, column: 1, scope: !10227)
!10301 = !DILocation(line: 4302, column: 4, scope: !10227)
!10302 = !DILocation(line: 4302, column: 6, scope: !10227)
!10303 = !DILocation(line: 4302, column: 2, scope: !10227)
!10304 = !DILocation(line: 4303, column: 1, scope: !10227)
!10305 = distinct !DISubprogram(name: "ui_desktop_restore", scope: !243, file: !243, line: 4306, type: !10228, isLocal: false, isDefinition: true, scopeLine: 4307, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!10306 = !DILocalVariable(name: "offset", arg: 1, scope: !10305, file: !243, line: 4306, type: !193)
!10307 = !DILocation(line: 4306, column: 27, scope: !10305)
!10308 = !DILocalVariable(name: "x", arg: 2, scope: !10305, file: !243, line: 4306, type: !45)
!10309 = !DILocation(line: 4306, column: 39, scope: !10305)
!10310 = !DILocalVariable(name: "y", arg: 3, scope: !10305, file: !243, line: 4306, type: !45)
!10311 = !DILocation(line: 4306, column: 46, scope: !10305)
!10312 = !DILocalVariable(name: "cx", arg: 4, scope: !10305, file: !243, line: 4306, type: !45)
!10313 = !DILocation(line: 4306, column: 53, scope: !10305)
!10314 = !DILocalVariable(name: "cy", arg: 5, scope: !10305, file: !243, line: 4306, type: !45)
!10315 = !DILocation(line: 4306, column: 61, scope: !10305)
!10316 = !DILocalVariable(name: "image", scope: !10305, file: !243, line: 4308, type: !3769)
!10317 = !DILocation(line: 4308, column: 10, scope: !10305)
!10318 = !DILocalVariable(name: "data", scope: !10305, file: !243, line: 4309, type: !46)
!10319 = !DILocation(line: 4309, column: 9, scope: !10305)
!10320 = !DILocation(line: 4311, column: 12, scope: !10305)
!10321 = !DILocation(line: 4311, column: 18, scope: !10305)
!10322 = !DILocation(line: 4311, column: 9, scope: !10305)
!10323 = !DILocation(line: 4312, column: 27, scope: !10305)
!10324 = !DILocation(line: 4312, column: 35, scope: !10305)
!10325 = !DILocation(line: 4312, column: 39, scope: !10305)
!10326 = !DILocation(line: 4312, column: 43, scope: !10305)
!10327 = !DILocation(line: 4312, column: 49, scope: !10305)
!10328 = !DILocation(line: 4312, column: 9, scope: !10305)
!10329 = !DILocation(line: 4312, column: 7, scope: !10305)
!10330 = !DILocation(line: 4313, column: 6, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10305, file: !243, line: 4313, column: 6)
!10332 = !DILocation(line: 4313, column: 11, scope: !10331)
!10333 = !DILocation(line: 4313, column: 6, scope: !10305)
!10334 = !DILocation(line: 4314, column: 3, scope: !10331)
!10335 = !DILocation(line: 4316, column: 23, scope: !10305)
!10336 = !DILocation(line: 4316, column: 34, scope: !10305)
!10337 = !DILocation(line: 4316, column: 44, scope: !10305)
!10338 = !DILocation(line: 4317, column: 18, scope: !10305)
!10339 = !DILocation(line: 4317, column: 24, scope: !10305)
!10340 = !DILocation(line: 4317, column: 28, scope: !10305)
!10341 = !DILocation(line: 4317, column: 32, scope: !10305)
!10342 = !DILocation(line: 4316, column: 10, scope: !10305)
!10343 = !DILocation(line: 4316, column: 8, scope: !10305)
!10344 = !DILocation(line: 4319, column: 6, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10305, file: !243, line: 4319, column: 6)
!10346 = !DILocation(line: 4319, column: 6, scope: !10305)
!10347 = !DILocation(line: 4321, column: 13, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10345, file: !243, line: 4320, column: 2)
!10349 = !DILocation(line: 4321, column: 24, scope: !10348)
!10350 = !DILocation(line: 4321, column: 37, scope: !10348)
!10351 = !DILocation(line: 4321, column: 43, scope: !10348)
!10352 = !DILocation(line: 4321, column: 56, scope: !10348)
!10353 = !DILocation(line: 4321, column: 59, scope: !10348)
!10354 = !DILocation(line: 4321, column: 62, scope: !10348)
!10355 = !DILocation(line: 4321, column: 66, scope: !10348)
!10356 = !DILocation(line: 4321, column: 3, scope: !10348)
!10357 = !DILocation(line: 4322, column: 13, scope: !10348)
!10358 = !DILocation(line: 4322, column: 24, scope: !10348)
!10359 = !DILocation(line: 4322, column: 37, scope: !10348)
!10360 = !DILocation(line: 4322, column: 44, scope: !10348)
!10361 = !DILocation(line: 4322, column: 50, scope: !10348)
!10362 = !DILocation(line: 4322, column: 53, scope: !10348)
!10363 = !DILocation(line: 4322, column: 56, scope: !10348)
!10364 = !DILocation(line: 4322, column: 60, scope: !10348)
!10365 = !DILocation(line: 4322, column: 64, scope: !10348)
!10366 = !DILocation(line: 4322, column: 67, scope: !10348)
!10367 = !DILocation(line: 4322, column: 3, scope: !10348)
!10368 = !DILocation(line: 4323, column: 3, scope: !10348)
!10369 = distinct !{!10369, !10368}
!10370 = !DILocalVariable(name: "sw", scope: !10371, file: !243, line: 4323, type: !360)
!10371 = distinct !DILexicalBlock(scope: !10348, file: !243, line: 4323, column: 6)
!10372 = !DILocation(line: 4323, column: 25, scope: !10371)
!10373 = !DILocalVariable(name: "rect", scope: !10371, file: !243, line: 4323, type: !274)
!10374 = !DILocation(line: 4323, column: 40, scope: !10371)
!10375 = !DILocation(line: 4323, column: 51, scope: !10376)
!10376 = !DILexicalBlockFile(scope: !10377, file: !243, discriminator: 1)
!10377 = distinct !DILexicalBlock(scope: !10371, file: !243, line: 4323, column: 50)
!10378 = !DILocation(line: 4323, column: 50, scope: !10376)
!10379 = !DILocation(line: 4323, column: 71, scope: !10380)
!10380 = !DILexicalBlockFile(scope: !10377, file: !243, discriminator: 2)
!10381 = !DILocation(line: 4323, column: 88, scope: !10382)
!10382 = !DILexicalBlockFile(scope: !10383, file: !243, discriminator: 3)
!10383 = distinct !DILexicalBlock(scope: !10371, file: !243, line: 4323, column: 78)
!10384 = !DILocation(line: 4323, column: 86, scope: !10382)
!10385 = !DILocation(line: 4323, column: 83, scope: !10382)
!10386 = !DILocation(line: 4323, column: 108, scope: !10387)
!10387 = !DILexicalBlockFile(scope: !10388, file: !243, discriminator: 4)
!10388 = distinct !DILexicalBlock(scope: !10383, file: !243, line: 4323, column: 78)
!10389 = !DILocation(line: 4323, column: 78, scope: !10387)
!10390 = !DILocation(line: 4323, column: 155, scope: !10391)
!10391 = !DILexicalBlockFile(scope: !10392, file: !243, discriminator: 5)
!10392 = distinct !DILexicalBlock(scope: !10388, file: !243, line: 4323, column: 127)
!10393 = !DILocation(line: 4323, column: 138, scope: !10391)
!10394 = !DILocation(line: 4323, column: 159, scope: !10391)
!10395 = !DILocation(line: 4323, column: 163, scope: !10391)
!10396 = !DILocation(line: 4323, column: 157, scope: !10391)
!10397 = !DILocation(line: 4323, column: 134, scope: !10391)
!10398 = !DILocation(line: 4323, column: 136, scope: !10391)
!10399 = !DILocation(line: 4323, column: 198, scope: !10391)
!10400 = !DILocation(line: 4323, column: 181, scope: !10391)
!10401 = !DILocation(line: 4323, column: 202, scope: !10391)
!10402 = !DILocation(line: 4323, column: 206, scope: !10391)
!10403 = !DILocation(line: 4323, column: 200, scope: !10391)
!10404 = !DILocation(line: 4323, column: 177, scope: !10391)
!10405 = !DILocation(line: 4323, column: 179, scope: !10391)
!10406 = !DILocation(line: 4323, column: 245, scope: !10391)
!10407 = !DILocation(line: 4323, column: 220, scope: !10391)
!10408 = !DILocation(line: 4323, column: 226, scope: !10391)
!10409 = !DILocation(line: 4323, column: 283, scope: !10391)
!10410 = !DILocation(line: 4323, column: 257, scope: !10391)
!10411 = !DILocation(line: 4323, column: 264, scope: !10391)
!10412 = !DILocation(line: 4323, column: 310, scope: !10391)
!10413 = !DILocation(line: 4323, column: 321, scope: !10391)
!10414 = !DILocation(line: 4323, column: 291, scope: !10391)
!10415 = !DILocation(line: 4323, column: 16, scope: !10391)
!10416 = !DILocation(line: 4323, column: 27, scope: !10391)
!10417 = !DILocation(line: 4323, column: 40, scope: !10391)
!10418 = !DILocation(line: 4323, column: 44, scope: !10391)
!10419 = !DILocation(line: 4323, column: 49, scope: !10391)
!10420 = !DILocation(line: 4323, column: 55, scope: !10391)
!10421 = !DILocation(line: 4323, column: 58, scope: !10391)
!10422 = !DILocation(line: 4323, column: 61, scope: !10391)
!10423 = !DILocation(line: 4323, column: 65, scope: !10391)
!10424 = !DILocation(line: 4323, column: 69, scope: !10391)
!10425 = !DILocation(line: 4323, column: 73, scope: !10391)
!10426 = !DILocation(line: 4323, column: 77, scope: !10391)
!10427 = !DILocation(line: 4323, column: 71, scope: !10391)
!10428 = !DILocation(line: 4323, column: 86, scope: !10391)
!10429 = !DILocation(line: 4323, column: 90, scope: !10391)
!10430 = !DILocation(line: 4323, column: 94, scope: !10391)
!10431 = !DILocation(line: 4323, column: 88, scope: !10391)
!10432 = !DILocation(line: 4323, column: 5, scope: !10433)
!10433 = !DILexicalBlockFile(scope: !10391, file: !243, discriminator: 8)
!10434 = !DILocation(line: 4323, column: 104, scope: !10391)
!10435 = !DILocation(line: 4323, column: 117, scope: !10436)
!10436 = !DILexicalBlockFile(scope: !10388, file: !243, discriminator: 6)
!10437 = !DILocation(line: 4323, column: 121, scope: !10436)
!10438 = !DILocation(line: 4323, column: 115, scope: !10436)
!10439 = !DILocation(line: 4323, column: 78, scope: !10436)
!10440 = distinct !{!10440, !10441}
!10441 = !DILocation(line: 4323, column: 78, scope: !10371)
!10442 = !DILocation(line: 4323, column: 125, scope: !10443)
!10443 = !DILexicalBlockFile(scope: !10371, file: !243, discriminator: 7)
!10444 = !DILocation(line: 4323, column: 136, scope: !10443)
!10445 = !DILocation(line: 4323, column: 106, scope: !10443)
!10446 = !DILocation(line: 4323, column: 5, scope: !10443)
!10447 = !DILocation(line: 4326, column: 2, scope: !10348)
!10448 = !DILocation(line: 4329, column: 13, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10345, file: !243, line: 4328, column: 2)
!10450 = !DILocation(line: 4329, column: 24, scope: !10449)
!10451 = !DILocation(line: 4329, column: 31, scope: !10449)
!10452 = !DILocation(line: 4329, column: 37, scope: !10449)
!10453 = !DILocation(line: 4329, column: 50, scope: !10449)
!10454 = !DILocation(line: 4329, column: 53, scope: !10449)
!10455 = !DILocation(line: 4329, column: 56, scope: !10449)
!10456 = !DILocation(line: 4329, column: 60, scope: !10449)
!10457 = !DILocation(line: 4329, column: 3, scope: !10449)
!10458 = !DILocation(line: 4330, column: 3, scope: !10449)
!10459 = distinct !{!10459, !10458}
!10460 = !DILocalVariable(name: "sw", scope: !10461, file: !243, line: 4330, type: !360)
!10461 = distinct !DILexicalBlock(scope: !10449, file: !243, line: 4330, column: 6)
!10462 = !DILocation(line: 4330, column: 25, scope: !10461)
!10463 = !DILocalVariable(name: "rect", scope: !10461, file: !243, line: 4330, type: !274)
!10464 = !DILocation(line: 4330, column: 40, scope: !10461)
!10465 = !DILocation(line: 4330, column: 51, scope: !10466)
!10466 = !DILexicalBlockFile(scope: !10467, file: !243, discriminator: 1)
!10467 = distinct !DILexicalBlock(scope: !10461, file: !243, line: 4330, column: 50)
!10468 = !DILocation(line: 4330, column: 50, scope: !10466)
!10469 = !DILocation(line: 4330, column: 71, scope: !10470)
!10470 = !DILexicalBlockFile(scope: !10467, file: !243, discriminator: 2)
!10471 = !DILocation(line: 4330, column: 88, scope: !10472)
!10472 = !DILexicalBlockFile(scope: !10473, file: !243, discriminator: 3)
!10473 = distinct !DILexicalBlock(scope: !10461, file: !243, line: 4330, column: 78)
!10474 = !DILocation(line: 4330, column: 86, scope: !10472)
!10475 = !DILocation(line: 4330, column: 83, scope: !10472)
!10476 = !DILocation(line: 4330, column: 108, scope: !10477)
!10477 = !DILexicalBlockFile(scope: !10478, file: !243, discriminator: 4)
!10478 = distinct !DILexicalBlock(scope: !10473, file: !243, line: 4330, column: 78)
!10479 = !DILocation(line: 4330, column: 78, scope: !10477)
!10480 = !DILocation(line: 4330, column: 155, scope: !10481)
!10481 = !DILexicalBlockFile(scope: !10482, file: !243, discriminator: 5)
!10482 = distinct !DILexicalBlock(scope: !10478, file: !243, line: 4330, column: 127)
!10483 = !DILocation(line: 4330, column: 138, scope: !10481)
!10484 = !DILocation(line: 4330, column: 159, scope: !10481)
!10485 = !DILocation(line: 4330, column: 163, scope: !10481)
!10486 = !DILocation(line: 4330, column: 157, scope: !10481)
!10487 = !DILocation(line: 4330, column: 134, scope: !10481)
!10488 = !DILocation(line: 4330, column: 136, scope: !10481)
!10489 = !DILocation(line: 4330, column: 198, scope: !10481)
!10490 = !DILocation(line: 4330, column: 181, scope: !10481)
!10491 = !DILocation(line: 4330, column: 202, scope: !10481)
!10492 = !DILocation(line: 4330, column: 206, scope: !10481)
!10493 = !DILocation(line: 4330, column: 200, scope: !10481)
!10494 = !DILocation(line: 4330, column: 177, scope: !10481)
!10495 = !DILocation(line: 4330, column: 179, scope: !10481)
!10496 = !DILocation(line: 4330, column: 245, scope: !10481)
!10497 = !DILocation(line: 4330, column: 220, scope: !10481)
!10498 = !DILocation(line: 4330, column: 226, scope: !10481)
!10499 = !DILocation(line: 4330, column: 283, scope: !10481)
!10500 = !DILocation(line: 4330, column: 257, scope: !10481)
!10501 = !DILocation(line: 4330, column: 264, scope: !10481)
!10502 = !DILocation(line: 4330, column: 310, scope: !10481)
!10503 = !DILocation(line: 4330, column: 321, scope: !10481)
!10504 = !DILocation(line: 4330, column: 291, scope: !10481)
!10505 = !DILocation(line: 4330, column: 16, scope: !10481)
!10506 = !DILocation(line: 4330, column: 27, scope: !10481)
!10507 = !DILocation(line: 4330, column: 34, scope: !10481)
!10508 = !DILocation(line: 4330, column: 38, scope: !10481)
!10509 = !DILocation(line: 4330, column: 43, scope: !10481)
!10510 = !DILocation(line: 4330, column: 49, scope: !10481)
!10511 = !DILocation(line: 4330, column: 52, scope: !10481)
!10512 = !DILocation(line: 4330, column: 55, scope: !10481)
!10513 = !DILocation(line: 4330, column: 59, scope: !10481)
!10514 = !DILocation(line: 4330, column: 63, scope: !10481)
!10515 = !DILocation(line: 4330, column: 67, scope: !10481)
!10516 = !DILocation(line: 4330, column: 71, scope: !10481)
!10517 = !DILocation(line: 4330, column: 65, scope: !10481)
!10518 = !DILocation(line: 4330, column: 80, scope: !10481)
!10519 = !DILocation(line: 4330, column: 84, scope: !10481)
!10520 = !DILocation(line: 4330, column: 88, scope: !10481)
!10521 = !DILocation(line: 4330, column: 82, scope: !10481)
!10522 = !DILocation(line: 4330, column: 5, scope: !10523)
!10523 = !DILexicalBlockFile(scope: !10481, file: !243, discriminator: 8)
!10524 = !DILocation(line: 4330, column: 98, scope: !10481)
!10525 = !DILocation(line: 4330, column: 117, scope: !10526)
!10526 = !DILexicalBlockFile(scope: !10478, file: !243, discriminator: 6)
!10527 = !DILocation(line: 4330, column: 121, scope: !10526)
!10528 = !DILocation(line: 4330, column: 115, scope: !10526)
!10529 = !DILocation(line: 4330, column: 78, scope: !10526)
!10530 = distinct !{!10530, !10531}
!10531 = !DILocation(line: 4330, column: 78, scope: !10461)
!10532 = !DILocation(line: 4330, column: 119, scope: !10533)
!10533 = !DILexicalBlockFile(scope: !10461, file: !243, discriminator: 7)
!10534 = !DILocation(line: 4330, column: 130, scope: !10533)
!10535 = !DILocation(line: 4330, column: 100, scope: !10533)
!10536 = !DILocation(line: 4330, column: 5, scope: !10533)
!10537 = !DILocation(line: 4335, column: 8, scope: !10305)
!10538 = !DILocation(line: 4335, column: 2, scope: !10305)
!10539 = !DILocation(line: 4336, column: 1, scope: !10305)
!10540 = !DILocation(line: 4336, column: 1, scope: !10541)
!10541 = !DILexicalBlockFile(scope: !10305, file: !243, discriminator: 1)
!10542 = distinct !DISubprogram(name: "ui_begin_update", scope: !243, file: !243, line: 4340, type: !254, isLocal: false, isDefinition: true, scopeLine: 4341, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!10543 = !DILocation(line: 4342, column: 1, scope: !10542)
!10544 = distinct !DISubprogram(name: "ui_end_update", scope: !243, file: !243, line: 4345, type: !254, isLocal: false, isDefinition: true, scopeLine: 4346, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!10545 = !DILocation(line: 4347, column: 9, scope: !10544)
!10546 = !DILocation(line: 4347, column: 2, scope: !10544)
!10547 = !DILocation(line: 4348, column: 1, scope: !10544)
!10548 = distinct !DISubprogram(name: "ui_seamless_begin", scope: !243, file: !243, line: 4352, type: !10549, isLocal: false, isDefinition: true, scopeLine: 4353, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!10549 = !DISubroutineType(types: !10550)
!10550 = !{null, !44}
!10551 = !DILocalVariable(name: "hidden", arg: 1, scope: !10548, file: !243, line: 4352, type: !44)
!10552 = !DILocation(line: 4352, column: 27, scope: !10548)
!10553 = !DILocation(line: 4354, column: 7, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10548, file: !243, line: 4354, column: 6)
!10555 = !DILocation(line: 4354, column: 6, scope: !10548)
!10556 = !DILocation(line: 4355, column: 3, scope: !10554)
!10557 = !DILocation(line: 4357, column: 6, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10548, file: !243, line: 4357, column: 6)
!10559 = !DILocation(line: 4357, column: 6, scope: !10548)
!10560 = !DILocation(line: 4358, column: 3, scope: !10558)
!10561 = !DILocation(line: 4360, column: 21, scope: !10548)
!10562 = !DILocation(line: 4361, column: 22, scope: !10548)
!10563 = !DILocation(line: 4361, column: 20, scope: !10548)
!10564 = !DILocation(line: 4363, column: 7, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10548, file: !243, line: 4363, column: 6)
!10566 = !DILocation(line: 4363, column: 6, scope: !10548)
!10567 = !DILocation(line: 4364, column: 3, scope: !10565)
!10568 = !DILocation(line: 4366, column: 6, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10548, file: !243, line: 4366, column: 6)
!10570 = !DILocation(line: 4366, column: 6, scope: !10548)
!10571 = !DILocation(line: 4368, column: 3, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10569, file: !243, line: 4367, column: 2)
!10573 = !DILocation(line: 4369, column: 27, scope: !10572)
!10574 = !DILocation(line: 4370, column: 2, scope: !10572)
!10575 = !DILocation(line: 4372, column: 27, scope: !10548)
!10576 = !DILocation(line: 4372, column: 2, scope: !10548)
!10577 = !DILocation(line: 4373, column: 1, scope: !10548)
!10578 = !DILocation(line: 4373, column: 1, scope: !10579)
!10579 = !DILexicalBlockFile(scope: !10548, file: !243, discriminator: 1)
!10580 = distinct !DISubprogram(name: "ui_seamless_toggle", scope: !243, file: !243, line: 4424, type: !254, isLocal: false, isDefinition: true, scopeLine: 4425, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!10581 = !DILocation(line: 4426, column: 7, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10580, file: !243, line: 4426, column: 6)
!10583 = !DILocation(line: 4426, column: 6, scope: !10580)
!10584 = !DILocation(line: 4427, column: 3, scope: !10582)
!10585 = !DILocation(line: 4429, column: 7, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10580, file: !243, line: 4429, column: 6)
!10587 = !DILocation(line: 4429, column: 6, scope: !10580)
!10588 = !DILocation(line: 4430, column: 3, scope: !10586)
!10589 = !DILocation(line: 4432, column: 6, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10580, file: !243, line: 4432, column: 6)
!10591 = !DILocation(line: 4432, column: 6, scope: !10580)
!10592 = !DILocation(line: 4433, column: 3, scope: !10590)
!10593 = !DILocation(line: 4435, column: 6, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10580, file: !243, line: 4435, column: 6)
!10595 = !DILocation(line: 4435, column: 6, scope: !10580)
!10596 = !DILocation(line: 4438, column: 3, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10594, file: !243, line: 4436, column: 2)
!10598 = !DILocation(line: 4438, column: 10, scope: !10599)
!10599 = !DILexicalBlockFile(scope: !10597, file: !243, discriminator: 1)
!10600 = !DILocation(line: 4438, column: 3, scope: !10599)
!10601 = !DILocation(line: 4440, column: 19, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10597, file: !243, line: 4439, column: 3)
!10603 = !DILocation(line: 4440, column: 30, scope: !10602)
!10604 = !DILocation(line: 4440, column: 50, scope: !10602)
!10605 = !DILocation(line: 4440, column: 4, scope: !10602)
!10606 = !DILocation(line: 4441, column: 21, scope: !10602)
!10607 = !DILocation(line: 4441, column: 4, scope: !10602)
!10608 = !DILocation(line: 4438, column: 3, scope: !10609)
!10609 = !DILexicalBlockFile(scope: !10597, file: !243, discriminator: 2)
!10610 = distinct !{!10610, !10596}
!10611 = !DILocation(line: 4443, column: 14, scope: !10597)
!10612 = !DILocation(line: 4443, column: 25, scope: !10597)
!10613 = !DILocation(line: 4443, column: 3, scope: !10597)
!10614 = !DILocation(line: 4444, column: 2, scope: !10597)
!10615 = !DILocation(line: 4448, column: 16, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10594, file: !243, line: 4446, column: 2)
!10617 = !DILocation(line: 4448, column: 27, scope: !10616)
!10618 = !DILocation(line: 4448, column: 3, scope: !10616)
!10619 = !DILocation(line: 4449, column: 3, scope: !10616)
!10620 = !DILocation(line: 4452, column: 23, scope: !10580)
!10621 = !DILocation(line: 4452, column: 22, scope: !10580)
!10622 = !DILocation(line: 4452, column: 20, scope: !10580)
!10623 = !DILocation(line: 4453, column: 1, scope: !10580)
!10624 = !DILocation(line: 4453, column: 1, scope: !10625)
!10625 = !DILexicalBlockFile(scope: !10580, file: !243, discriminator: 1)
!10626 = distinct !DISubprogram(name: "ui_seamless_end", scope: !243, file: !243, line: 4377, type: !254, isLocal: false, isDefinition: true, scopeLine: 4378, isOptimized: false, unit: !0, variables: !256)
!10627 = !DILocation(line: 4380, column: 2, scope: !10626)
!10628 = !DILocation(line: 4380, column: 9, scope: !10629)
!10629 = !DILexicalBlockFile(scope: !10626, file: !243, discriminator: 1)
!10630 = !DILocation(line: 4380, column: 2, scope: !10629)
!10631 = !DILocation(line: 4382, column: 18, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10626, file: !243, line: 4381, column: 2)
!10633 = !DILocation(line: 4382, column: 29, scope: !10632)
!10634 = !DILocation(line: 4382, column: 49, scope: !10632)
!10635 = !DILocation(line: 4382, column: 3, scope: !10632)
!10636 = !DILocation(line: 4383, column: 20, scope: !10632)
!10637 = !DILocation(line: 4383, column: 3, scope: !10632)
!10638 = !DILocation(line: 4380, column: 2, scope: !10639)
!10639 = !DILexicalBlockFile(scope: !10626, file: !243, discriminator: 2)
!10640 = distinct !{!10640, !10627}
!10641 = !DILocation(line: 4386, column: 21, scope: !10626)
!10642 = !DILocation(line: 4387, column: 20, scope: !10626)
!10643 = !DILocation(line: 4388, column: 20, scope: !10626)
!10644 = !DILocation(line: 4389, column: 1, scope: !10626)
!10645 = distinct !DISubprogram(name: "sw_remove_window", scope: !243, file: !243, line: 350, type: !10646, isLocal: true, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!10646 = !DISubroutineType(types: !10647)
!10647 = !{null, !360}
!10648 = !DILocalVariable(name: "win", arg: 1, scope: !10645, file: !243, line: 350, type: !360)
!10649 = !DILocation(line: 350, column: 36, scope: !10645)
!10650 = !DILocalVariable(name: "sw", scope: !10645, file: !243, line: 352, type: !360)
!10651 = !DILocation(line: 352, column: 19, scope: !10645)
!10652 = !DILocalVariable(name: "prevnext", scope: !10645, file: !243, line: 352, type: !10653)
!10653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64, align: 64)
!10654 = !DILocation(line: 352, column: 25, scope: !10645)
!10655 = !DILocation(line: 353, column: 12, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10645, file: !243, line: 353, column: 2)
!10657 = !DILocation(line: 353, column: 10, scope: !10656)
!10658 = !DILocation(line: 353, column: 7, scope: !10656)
!10659 = !DILocation(line: 353, column: 32, scope: !10660)
!10660 = !DILexicalBlockFile(scope: !10661, file: !243, discriminator: 1)
!10661 = distinct !DILexicalBlock(scope: !10656, file: !243, line: 353, column: 2)
!10662 = !DILocation(line: 353, column: 2, scope: !10660)
!10663 = !DILocation(line: 355, column: 7, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10665, file: !243, line: 355, column: 7)
!10665 = distinct !DILexicalBlock(scope: !10661, file: !243, line: 354, column: 2)
!10666 = !DILocation(line: 355, column: 13, scope: !10664)
!10667 = !DILocation(line: 355, column: 10, scope: !10664)
!10668 = !DILocation(line: 355, column: 7, scope: !10665)
!10669 = !DILocation(line: 357, column: 16, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10664, file: !243, line: 356, column: 3)
!10671 = !DILocation(line: 357, column: 20, scope: !10670)
!10672 = !DILocation(line: 357, column: 5, scope: !10670)
!10673 = !DILocation(line: 357, column: 14, scope: !10670)
!10674 = !DILocation(line: 358, column: 4, scope: !10670)
!10675 = !DILocation(line: 358, column: 8, scope: !10670)
!10676 = !DILocation(line: 358, column: 15, scope: !10670)
!10677 = !DILocation(line: 358, column: 21, scope: !10670)
!10678 = !DILocation(line: 359, column: 8, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10670, file: !243, line: 359, column: 8)
!10680 = !DILocation(line: 359, column: 12, scope: !10679)
!10681 = !DILocation(line: 359, column: 19, scope: !10679)
!10682 = !DILocation(line: 359, column: 26, scope: !10679)
!10683 = !DILocation(line: 359, column: 8, scope: !10670)
!10684 = !DILocation(line: 361, column: 20, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10679, file: !243, line: 360, column: 4)
!10686 = !DILocation(line: 361, column: 31, scope: !10685)
!10687 = !DILocation(line: 361, column: 35, scope: !10685)
!10688 = !DILocation(line: 361, column: 42, scope: !10685)
!10689 = !DILocation(line: 361, column: 5, scope: !10685)
!10690 = !DILocation(line: 362, column: 11, scope: !10685)
!10691 = !DILocation(line: 362, column: 15, scope: !10685)
!10692 = !DILocation(line: 362, column: 5, scope: !10685)
!10693 = !DILocation(line: 363, column: 4, scope: !10685)
!10694 = !DILocation(line: 364, column: 10, scope: !10670)
!10695 = !DILocation(line: 364, column: 14, scope: !10670)
!10696 = !DILocation(line: 364, column: 4, scope: !10670)
!10697 = !DILocation(line: 365, column: 10, scope: !10670)
!10698 = !DILocation(line: 365, column: 4, scope: !10670)
!10699 = !DILocation(line: 366, column: 4, scope: !10670)
!10700 = !DILocation(line: 368, column: 15, scope: !10665)
!10701 = !DILocation(line: 368, column: 19, scope: !10665)
!10702 = !DILocation(line: 368, column: 12, scope: !10665)
!10703 = !DILocation(line: 369, column: 2, scope: !10665)
!10704 = !DILocation(line: 353, column: 41, scope: !10705)
!10705 = !DILexicalBlockFile(scope: !10661, file: !243, discriminator: 2)
!10706 = !DILocation(line: 353, column: 45, scope: !10705)
!10707 = !DILocation(line: 353, column: 39, scope: !10705)
!10708 = !DILocation(line: 353, column: 2, scope: !10705)
!10709 = distinct !{!10709, !10710}
!10710 = !DILocation(line: 353, column: 2, scope: !10645)
!10711 = !DILocation(line: 370, column: 2, scope: !10645)
!10712 = !DILocation(line: 371, column: 1, scope: !10645)
!10713 = distinct !DISubprogram(name: "ui_seamless_hide_desktop", scope: !243, file: !243, line: 4393, type: !254, isLocal: false, isDefinition: true, scopeLine: 4394, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!10714 = !DILocation(line: 4395, column: 7, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10713, file: !243, line: 4395, column: 6)
!10716 = !DILocation(line: 4395, column: 6, scope: !10713)
!10717 = !DILocation(line: 4396, column: 3, scope: !10715)
!10718 = !DILocation(line: 4398, column: 7, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10713, file: !243, line: 4398, column: 6)
!10720 = !DILocation(line: 4398, column: 6, scope: !10713)
!10721 = !DILocation(line: 4399, column: 3, scope: !10719)
!10722 = !DILocation(line: 4401, column: 6, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10713, file: !243, line: 4401, column: 6)
!10724 = !DILocation(line: 4401, column: 6, scope: !10713)
!10725 = !DILocation(line: 4402, column: 3, scope: !10723)
!10726 = !DILocation(line: 4404, column: 20, scope: !10713)
!10727 = !DILocation(line: 4405, column: 1, scope: !10713)
!10728 = !DILocation(line: 4405, column: 1, scope: !10729)
!10729 = !DILexicalBlockFile(scope: !10713, file: !243, discriminator: 1)
!10730 = distinct !DISubprogram(name: "ui_seamless_unhide_desktop", scope: !243, file: !243, line: 4409, type: !254, isLocal: false, isDefinition: true, scopeLine: 4410, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!10731 = !DILocation(line: 4411, column: 7, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10730, file: !243, line: 4411, column: 6)
!10733 = !DILocation(line: 4411, column: 6, scope: !10730)
!10734 = !DILocation(line: 4412, column: 3, scope: !10732)
!10735 = !DILocation(line: 4414, column: 7, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10730, file: !243, line: 4414, column: 6)
!10737 = !DILocation(line: 4414, column: 6, scope: !10730)
!10738 = !DILocation(line: 4415, column: 3, scope: !10736)
!10739 = !DILocation(line: 4417, column: 20, scope: !10730)
!10740 = !DILocation(line: 4419, column: 2, scope: !10730)
!10741 = !DILocation(line: 4420, column: 1, scope: !10730)
!10742 = !DILocation(line: 4420, column: 1, scope: !10743)
!10743 = !DILexicalBlockFile(scope: !10730, file: !243, discriminator: 1)
!10744 = distinct !DISubprogram(name: "ui_seamless_create_window", scope: !243, file: !243, line: 4457, type: !10745, isLocal: false, isDefinition: true, scopeLine: 4459, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!10745 = !DISubroutineType(types: !10746)
!10746 = !{null, !81, !81, !81, !81}
!10747 = !DILocalVariable(name: "id", arg: 1, scope: !10744, file: !243, line: 4457, type: !81)
!10748 = !DILocation(line: 4457, column: 41, scope: !10744)
!10749 = !DILocalVariable(name: "group", arg: 2, scope: !10744, file: !243, line: 4457, type: !81)
!10750 = !DILocation(line: 4457, column: 59, scope: !10744)
!10751 = !DILocalVariable(name: "parent", arg: 3, scope: !10744, file: !243, line: 4457, type: !81)
!10752 = !DILocation(line: 4457, column: 80, scope: !10744)
!10753 = !DILocalVariable(name: "flags", arg: 4, scope: !10744, file: !243, line: 4458, type: !81)
!10754 = !DILocation(line: 4458, column: 20, scope: !10744)
!10755 = !DILocalVariable(name: "wnd", scope: !10744, file: !243, line: 4460, type: !136)
!10756 = !DILocation(line: 4460, column: 9, scope: !10744)
!10757 = !DILocalVariable(name: "attribs", scope: !10744, file: !243, line: 4461, type: !1372)
!10758 = !DILocation(line: 4461, column: 23, scope: !10744)
!10759 = !DILocalVariable(name: "classhints", scope: !10744, file: !243, line: 4462, type: !1392)
!10760 = !DILocation(line: 4462, column: 14, scope: !10744)
!10761 = !DILocalVariable(name: "sizehints", scope: !10744, file: !243, line: 4463, type: !1250)
!10762 = !DILocation(line: 4463, column: 14, scope: !10744)
!10763 = !DILocalVariable(name: "wmhints", scope: !10744, file: !243, line: 4464, type: !10764)
!10764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10765, size: 64, align: 64)
!10765 = !DIDerivedType(tag: DW_TAG_typedef, name: "XWMHints", file: !718, line: 130, baseType: !10766)
!10766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !718, line: 119, size: 448, align: 64, elements: !10767)
!10767 = !{!10768, !10769, !10770, !10771, !10772, !10773, !10774, !10775, !10776}
!10768 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10766, file: !718, line: 120, baseType: !178, size: 64, align: 64)
!10769 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !10766, file: !718, line: 121, baseType: !45, size: 32, align: 32, offset: 64)
!10770 = !DIDerivedType(tag: DW_TAG_member, name: "initial_state", scope: !10766, file: !718, line: 123, baseType: !45, size: 32, align: 32, offset: 96)
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "icon_pixmap", scope: !10766, file: !718, line: 124, baseType: !189, size: 64, align: 64, offset: 128)
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "icon_window", scope: !10766, file: !718, line: 125, baseType: !136, size: 64, align: 64, offset: 192)
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "icon_x", scope: !10766, file: !718, line: 126, baseType: !45, size: 32, align: 32, offset: 256)
!10774 = !DIDerivedType(tag: DW_TAG_member, name: "icon_y", scope: !10766, file: !718, line: 126, baseType: !45, size: 32, align: 32, offset: 288)
!10775 = !DIDerivedType(tag: DW_TAG_member, name: "icon_mask", scope: !10766, file: !718, line: 127, baseType: !189, size: 64, align: 64, offset: 320)
!10776 = !DIDerivedType(tag: DW_TAG_member, name: "window_group", scope: !10766, file: !718, line: 128, baseType: !79, size: 64, align: 64, offset: 384)
!10777 = !DILocation(line: 4464, column: 12, scope: !10744)
!10778 = !DILocalVariable(name: "input_mask", scope: !10744, file: !243, line: 4465, type: !178)
!10779 = !DILocation(line: 4465, column: 7, scope: !10744)
!10780 = !DILocalVariable(name: "value_mask", scope: !10744, file: !243, line: 4466, type: !81)
!10781 = !DILocation(line: 4466, column: 16, scope: !10744)
!10782 = !DILocalVariable(name: "sw", scope: !10744, file: !243, line: 4467, type: !360)
!10783 = !DILocation(line: 4467, column: 19, scope: !10744)
!10784 = !DILocalVariable(name: "sw_parent", scope: !10744, file: !243, line: 4467, type: !360)
!10785 = !DILocation(line: 4467, column: 24, scope: !10744)
!10786 = !DILocation(line: 4469, column: 7, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10744, file: !243, line: 4469, column: 6)
!10788 = !DILocation(line: 4469, column: 6, scope: !10744)
!10789 = !DILocation(line: 4470, column: 3, scope: !10787)
!10790 = !DILocation(line: 4473, column: 27, scope: !10744)
!10791 = !DILocation(line: 4473, column: 7, scope: !10744)
!10792 = !DILocation(line: 4473, column: 5, scope: !10744)
!10793 = !DILocation(line: 4474, column: 6, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10744, file: !243, line: 4474, column: 6)
!10795 = !DILocation(line: 4474, column: 6, scope: !10744)
!10796 = !DILocation(line: 4475, column: 3, scope: !10794)
!10797 = !DILocation(line: 4477, column: 15, scope: !10744)
!10798 = !DILocation(line: 4477, column: 13, scope: !10744)
!10799 = !DILocation(line: 4478, column: 22, scope: !10744)
!10800 = !DILocation(line: 4478, column: 32, scope: !10744)
!10801 = !DILocation(line: 4478, column: 35, scope: !10744)
!10802 = !DILocation(line: 4478, column: 79, scope: !10744)
!10803 = !DILocation(line: 4479, column: 20, scope: !10744)
!10804 = !DILocation(line: 4479, column: 30, scope: !10744)
!10805 = !DILocation(line: 4478, column: 8, scope: !10744)
!10806 = !DILocation(line: 4478, column: 6, scope: !10744)
!10807 = !DILocation(line: 4481, column: 18, scope: !10744)
!10808 = !DILocation(line: 4481, column: 23, scope: !10744)
!10809 = !DILocation(line: 4481, column: 2, scope: !10810)
!10810 = !DILexicalBlockFile(scope: !10744, file: !243, discriminator: 1)
!10811 = !DILocation(line: 4482, column: 24, scope: !10744)
!10812 = !DILocation(line: 4482, column: 35, scope: !10744)
!10813 = !DILocation(line: 4482, column: 2, scope: !10744)
!10814 = !DILocation(line: 4484, column: 13, scope: !10744)
!10815 = !DILocation(line: 4484, column: 24, scope: !10744)
!10816 = !DILocation(line: 4484, column: 2, scope: !10744)
!10817 = !DILocation(line: 4485, column: 19, scope: !10744)
!10818 = !DILocation(line: 4485, column: 2, scope: !10744)
!10819 = !DILocation(line: 4487, column: 23, scope: !10744)
!10820 = !DILocation(line: 4487, column: 2, scope: !10744)
!10821 = !DILocation(line: 4489, column: 15, scope: !10744)
!10822 = !DILocation(line: 4489, column: 13, scope: !10744)
!10823 = !DILocation(line: 4490, column: 6, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10744, file: !243, line: 4490, column: 6)
!10825 = !DILocation(line: 4490, column: 17, scope: !10824)
!10826 = !DILocation(line: 4490, column: 6, scope: !10744)
!10827 = !DILocation(line: 4492, column: 3, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10824, file: !243, line: 4491, column: 2)
!10829 = !DILocation(line: 4492, column: 15, scope: !10828)
!10830 = !DILocation(line: 4492, column: 24, scope: !10828)
!10831 = !DILocation(line: 4493, column: 3, scope: !10828)
!10832 = !DILocation(line: 4493, column: 15, scope: !10828)
!10833 = !DILocation(line: 4493, column: 25, scope: !10828)
!10834 = !DILocation(line: 4494, column: 17, scope: !10828)
!10835 = !DILocation(line: 4494, column: 28, scope: !10828)
!10836 = !DILocation(line: 4494, column: 33, scope: !10828)
!10837 = !DILocation(line: 4494, column: 3, scope: !10828)
!10838 = !DILocation(line: 4495, column: 9, scope: !10828)
!10839 = !DILocation(line: 4495, column: 3, scope: !10828)
!10840 = !DILocation(line: 4496, column: 2, scope: !10828)
!10841 = !DILocation(line: 4499, column: 14, scope: !10744)
!10842 = !DILocation(line: 4499, column: 12, scope: !10744)
!10843 = !DILocation(line: 4500, column: 6, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10744, file: !243, line: 4500, column: 6)
!10845 = !DILocation(line: 4500, column: 16, scope: !10844)
!10846 = !DILocation(line: 4500, column: 6, scope: !10744)
!10847 = !DILocation(line: 4502, column: 3, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10844, file: !243, line: 4501, column: 2)
!10849 = !DILocation(line: 4502, column: 14, scope: !10848)
!10850 = !DILocation(line: 4502, column: 20, scope: !10848)
!10851 = !DILocation(line: 4503, column: 21, scope: !10848)
!10852 = !DILocation(line: 4503, column: 32, scope: !10848)
!10853 = !DILocation(line: 4503, column: 37, scope: !10848)
!10854 = !DILocation(line: 4503, column: 3, scope: !10848)
!10855 = !DILocation(line: 4504, column: 9, scope: !10848)
!10856 = !DILocation(line: 4504, column: 3, scope: !10848)
!10857 = !DILocation(line: 4505, column: 2, scope: !10848)
!10858 = !DILocation(line: 4508, column: 6, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10744, file: !243, line: 4508, column: 6)
!10860 = !DILocation(line: 4508, column: 13, scope: !10859)
!10861 = !DILocation(line: 4508, column: 6, scope: !10744)
!10862 = !DILocation(line: 4510, column: 24, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10859, file: !243, line: 4509, column: 2)
!10864 = !DILocation(line: 4510, column: 35, scope: !10863)
!10865 = !DILocation(line: 4510, column: 39, scope: !10863)
!10866 = !DILocation(line: 4510, column: 42, scope: !10863)
!10867 = !DILocation(line: 4510, column: 3, scope: !10863)
!10868 = !DILocation(line: 4513, column: 25, scope: !10863)
!10869 = !DILocation(line: 4513, column: 3, scope: !10863)
!10870 = !DILocation(line: 4514, column: 2, scope: !10863)
!10871 = !DILocation(line: 4516, column: 11, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10859, file: !243, line: 4516, column: 11)
!10873 = !DILocation(line: 4516, column: 18, scope: !10872)
!10874 = !DILocation(line: 4516, column: 11, scope: !10859)
!10875 = !DILocation(line: 4518, column: 35, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10872, file: !243, line: 4517, column: 2)
!10877 = !DILocation(line: 4518, column: 15, scope: !10876)
!10878 = !DILocation(line: 4518, column: 13, scope: !10876)
!10879 = !DILocation(line: 4519, column: 7, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10876, file: !243, line: 4519, column: 7)
!10881 = !DILocation(line: 4519, column: 7, scope: !10876)
!10882 = !DILocation(line: 4520, column: 25, scope: !10880)
!10883 = !DILocation(line: 4520, column: 36, scope: !10880)
!10884 = !DILocation(line: 4520, column: 41, scope: !10880)
!10885 = !DILocation(line: 4520, column: 52, scope: !10880)
!10886 = !DILocation(line: 4520, column: 4, scope: !10880)
!10887 = !DILocation(line: 4523, column: 11, scope: !10880)
!10888 = !DILocation(line: 4522, column: 4, scope: !10880)
!10889 = !DILocation(line: 4524, column: 2, scope: !10876)
!10890 = !DILocation(line: 4526, column: 6, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10744, file: !243, line: 4526, column: 6)
!10892 = !DILocation(line: 4526, column: 12, scope: !10891)
!10893 = !DILocation(line: 4526, column: 6, scope: !10744)
!10894 = !DILocation(line: 4530, column: 7, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10896, file: !243, line: 4530, column: 7)
!10896 = distinct !DILexicalBlock(scope: !10891, file: !243, line: 4527, column: 2)
!10897 = !DILocation(line: 4530, column: 14, scope: !10895)
!10898 = !DILocation(line: 4530, column: 7, scope: !10896)
!10899 = !DILocation(line: 4531, column: 25, scope: !10895)
!10900 = !DILocation(line: 4531, column: 36, scope: !10895)
!10901 = !DILocation(line: 4531, column: 40, scope: !10895)
!10902 = !DILocation(line: 4531, column: 43, scope: !10895)
!10903 = !DILocation(line: 4531, column: 4, scope: !10895)
!10904 = !DILocation(line: 4532, column: 25, scope: !10896)
!10905 = !DILocation(line: 4532, column: 3, scope: !10896)
!10906 = !DILocation(line: 4533, column: 2, scope: !10896)
!10907 = !DILocation(line: 4535, column: 6, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10744, file: !243, line: 4535, column: 6)
!10909 = !DILocation(line: 4535, column: 12, scope: !10908)
!10910 = !DILocation(line: 4535, column: 6, scope: !10744)
!10911 = !DILocation(line: 4538, column: 25, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10908, file: !243, line: 4536, column: 2)
!10913 = !DILocation(line: 4538, column: 3, scope: !10912)
!10914 = !DILocation(line: 4539, column: 2, scope: !10912)
!10915 = !DILocation(line: 4543, column: 2, scope: !10744)
!10916 = !DILocation(line: 4544, column: 13, scope: !10744)
!10917 = !DILocation(line: 4546, column: 15, scope: !10744)
!10918 = !DILocation(line: 4546, column: 26, scope: !10744)
!10919 = !DILocation(line: 4546, column: 31, scope: !10744)
!10920 = !DILocation(line: 4546, column: 2, scope: !10744)
!10921 = !DILocalVariable(name: "supported", scope: !10744, file: !243, line: 4549, type: !2063)
!10922 = !DILocation(line: 4549, column: 7, scope: !10744)
!10923 = !DILocation(line: 4549, column: 21, scope: !10744)
!10924 = !DILocation(line: 4550, column: 3, scope: !10744)
!10925 = !DILocation(line: 4551, column: 3, scope: !10744)
!10926 = !DILocation(line: 4554, column: 18, scope: !10744)
!10927 = !DILocation(line: 4554, column: 29, scope: !10744)
!10928 = !DILocation(line: 4554, column: 34, scope: !10744)
!10929 = !DILocation(line: 4554, column: 2, scope: !10744)
!10930 = !DILocation(line: 4556, column: 7, scope: !10744)
!10931 = !DILocation(line: 4556, column: 5, scope: !10744)
!10932 = !DILocation(line: 4558, column: 9, scope: !10744)
!10933 = !DILocation(line: 4558, column: 2, scope: !10744)
!10934 = !DILocation(line: 4560, column: 12, scope: !10744)
!10935 = !DILocation(line: 4560, column: 2, scope: !10744)
!10936 = !DILocation(line: 4560, column: 6, scope: !10744)
!10937 = !DILocation(line: 4560, column: 10, scope: !10744)
!10938 = !DILocation(line: 4561, column: 11, scope: !10744)
!10939 = !DILocation(line: 4561, column: 2, scope: !10744)
!10940 = !DILocation(line: 4561, column: 6, scope: !10744)
!10941 = !DILocation(line: 4561, column: 9, scope: !10744)
!10942 = !DILocation(line: 4562, column: 28, scope: !10744)
!10943 = !DILocation(line: 4562, column: 14, scope: !10744)
!10944 = !DILocation(line: 4562, column: 2, scope: !10744)
!10945 = !DILocation(line: 4562, column: 6, scope: !10744)
!10946 = !DILocation(line: 4562, column: 12, scope: !10744)
!10947 = !DILocation(line: 4563, column: 2, scope: !10744)
!10948 = !DILocation(line: 4563, column: 6, scope: !10744)
!10949 = !DILocation(line: 4563, column: 13, scope: !10744)
!10950 = !DILocation(line: 4563, column: 19, scope: !10744)
!10951 = !DILocation(line: 4564, column: 2, scope: !10744)
!10952 = !DILocation(line: 4564, column: 6, scope: !10744)
!10953 = !DILocation(line: 4564, column: 12, scope: !10744)
!10954 = !DILocation(line: 4565, column: 2, scope: !10744)
!10955 = !DILocation(line: 4565, column: 6, scope: !10744)
!10956 = !DILocation(line: 4565, column: 14, scope: !10744)
!10957 = !DILocation(line: 4566, column: 23, scope: !10744)
!10958 = !DILocation(line: 4566, column: 2, scope: !10744)
!10959 = !DILocation(line: 4566, column: 6, scope: !10744)
!10960 = !DILocation(line: 4566, column: 21, scope: !10744)
!10961 = !DILocation(line: 4567, column: 1, scope: !10744)
!10962 = !DILocation(line: 4567, column: 5, scope: !10744)
!10963 = !DILocation(line: 4567, column: 4, scope: !10744)
!10964 = !DILocation(line: 4567, column: 12, scope: !10744)
!10965 = !DILocation(line: 4567, column: 11, scope: !10744)
!10966 = !DILocation(line: 4569, column: 2, scope: !10744)
!10967 = !DILocation(line: 4569, column: 6, scope: !10744)
!10968 = !DILocation(line: 4569, column: 27, scope: !10744)
!10969 = !DILocation(line: 4570, column: 2, scope: !10744)
!10970 = !DILocation(line: 4570, column: 6, scope: !10744)
!10971 = !DILocation(line: 4570, column: 20, scope: !10744)
!10972 = !DILocation(line: 4571, column: 23, scope: !10744)
!10973 = !DILocation(line: 4571, column: 27, scope: !10744)
!10974 = !DILocation(line: 4571, column: 42, scope: !10744)
!10975 = !DILocation(line: 4571, column: 2, scope: !10744)
!10976 = !DILocation(line: 4571, column: 6, scope: !10744)
!10977 = !DILocation(line: 4571, column: 21, scope: !10744)
!10978 = !DILocation(line: 4572, column: 21, scope: !10744)
!10979 = !DILocation(line: 4572, column: 25, scope: !10744)
!10980 = !DILocation(line: 4572, column: 39, scope: !10744)
!10981 = !DILocation(line: 4572, column: 2, scope: !10744)
!10982 = !DILocation(line: 4572, column: 6, scope: !10744)
!10983 = !DILocation(line: 4572, column: 19, scope: !10744)
!10984 = !DILocation(line: 4574, column: 13, scope: !10744)
!10985 = !DILocation(line: 4574, column: 2, scope: !10744)
!10986 = !DILocation(line: 4574, column: 6, scope: !10744)
!10987 = !DILocation(line: 4574, column: 11, scope: !10744)
!10988 = !DILocation(line: 4575, column: 23, scope: !10744)
!10989 = !DILocation(line: 4575, column: 21, scope: !10744)
!10990 = !DILocation(line: 4578, column: 12, scope: !10744)
!10991 = !DILocation(line: 4578, column: 10, scope: !10744)
!10992 = !DILocation(line: 4579, column: 6, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10744, file: !243, line: 4579, column: 6)
!10994 = !DILocation(line: 4579, column: 6, scope: !10744)
!10995 = !DILocation(line: 4581, column: 3, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10993, file: !243, line: 4580, column: 2)
!10997 = !DILocation(line: 4581, column: 12, scope: !10996)
!10998 = !DILocation(line: 4581, column: 18, scope: !10996)
!10999 = !DILocation(line: 4582, column: 27, scope: !10996)
!11000 = !DILocation(line: 4582, column: 31, scope: !10996)
!11001 = !DILocation(line: 4582, column: 38, scope: !10996)
!11002 = !DILocation(line: 4582, column: 3, scope: !10996)
!11003 = !DILocation(line: 4582, column: 12, scope: !10996)
!11004 = !DILocation(line: 4582, column: 25, scope: !10996)
!11005 = !DILocation(line: 4583, column: 15, scope: !10996)
!11006 = !DILocation(line: 4583, column: 26, scope: !10996)
!11007 = !DILocation(line: 4583, column: 30, scope: !10996)
!11008 = !DILocation(line: 4583, column: 35, scope: !10996)
!11009 = !DILocation(line: 4583, column: 3, scope: !10996)
!11010 = !DILocation(line: 4584, column: 9, scope: !10996)
!11011 = !DILocation(line: 4584, column: 3, scope: !10996)
!11012 = !DILocation(line: 4585, column: 2, scope: !10996)
!11013 = !DILocation(line: 4586, column: 1, scope: !10744)
!11014 = distinct !DISubprogram(name: "get_window_attribs_seamless", scope: !243, file: !243, line: 2040, type: !2092, isLocal: true, isDefinition: true, scopeLine: 2041, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11015 = !DILocalVariable(name: "attribs", arg: 1, scope: !11014, file: !243, line: 2040, type: !2094)
!11016 = !DILocation(line: 2040, column: 52, scope: !11014)
!11017 = !DILocation(line: 2042, column: 29, scope: !11014)
!11018 = !DILocation(line: 2042, column: 10, scope: !11014)
!11019 = !DILocation(line: 2042, column: 38, scope: !11014)
!11020 = !DILocation(line: 2042, column: 2, scope: !11014)
!11021 = distinct !DISubprogram(name: "sw_find_group", scope: !243, file: !243, line: 517, type: !11022, isLocal: true, isDefinition: true, scopeLine: 518, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11022 = !DISubroutineType(types: !11023)
!11023 = !{!368, !81, !44}
!11024 = !DILocalVariable(name: "id", arg: 1, scope: !11021, file: !243, line: 517, type: !81)
!11025 = !DILocation(line: 517, column: 29, scope: !11021)
!11026 = !DILocalVariable(name: "dont_create", arg: 2, scope: !11021, file: !243, line: 517, type: !44)
!11027 = !DILocation(line: 517, column: 41, scope: !11021)
!11028 = !DILocalVariable(name: "sw", scope: !11021, file: !243, line: 519, type: !360)
!11029 = !DILocation(line: 519, column: 19, scope: !11021)
!11030 = !DILocalVariable(name: "sg", scope: !11021, file: !243, line: 520, type: !368)
!11031 = !DILocation(line: 520, column: 18, scope: !11021)
!11032 = !DILocalVariable(name: "attribs", scope: !11021, file: !243, line: 521, type: !1372)
!11033 = !DILocation(line: 521, column: 23, scope: !11021)
!11034 = !DILocation(line: 523, column: 12, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11021, file: !243, line: 523, column: 2)
!11036 = !DILocation(line: 523, column: 10, scope: !11035)
!11037 = !DILocation(line: 523, column: 7, scope: !11035)
!11038 = !DILocation(line: 523, column: 32, scope: !11039)
!11039 = !DILexicalBlockFile(scope: !11040, file: !243, discriminator: 1)
!11040 = distinct !DILexicalBlock(scope: !11035, file: !243, line: 523, column: 2)
!11041 = !DILocation(line: 523, column: 2, scope: !11039)
!11042 = !DILocation(line: 525, column: 7, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !243, line: 525, column: 7)
!11044 = distinct !DILexicalBlock(scope: !11040, file: !243, line: 524, column: 2)
!11045 = !DILocation(line: 525, column: 11, scope: !11043)
!11046 = !DILocation(line: 525, column: 18, scope: !11043)
!11047 = !DILocation(line: 525, column: 24, scope: !11043)
!11048 = !DILocation(line: 525, column: 21, scope: !11043)
!11049 = !DILocation(line: 525, column: 7, scope: !11044)
!11050 = !DILocation(line: 526, column: 11, scope: !11043)
!11051 = !DILocation(line: 526, column: 15, scope: !11043)
!11052 = !DILocation(line: 526, column: 4, scope: !11043)
!11053 = !DILocation(line: 527, column: 2, scope: !11044)
!11054 = !DILocation(line: 523, column: 41, scope: !11055)
!11055 = !DILexicalBlockFile(scope: !11040, file: !243, discriminator: 2)
!11056 = !DILocation(line: 523, column: 45, scope: !11055)
!11057 = !DILocation(line: 523, column: 39, scope: !11055)
!11058 = !DILocation(line: 523, column: 2, scope: !11055)
!11059 = distinct !{!11059, !11060}
!11060 = !DILocation(line: 523, column: 2, scope: !11021)
!11061 = !DILocation(line: 529, column: 6, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11021, file: !243, line: 529, column: 6)
!11063 = !DILocation(line: 529, column: 6, scope: !11021)
!11064 = !DILocation(line: 530, column: 3, scope: !11062)
!11065 = !DILocation(line: 532, column: 7, scope: !11021)
!11066 = !DILocation(line: 532, column: 5, scope: !11021)
!11067 = !DILocation(line: 535, column: 17, scope: !11021)
!11068 = !DILocation(line: 535, column: 27, scope: !11021)
!11069 = !DILocation(line: 535, column: 30, scope: !11021)
!11070 = !DILocation(line: 535, column: 3, scope: !11021)
!11071 = !DILocation(line: 534, column: 2, scope: !11021)
!11072 = !DILocation(line: 534, column: 6, scope: !11021)
!11073 = !DILocation(line: 534, column: 10, scope: !11021)
!11074 = !DILocation(line: 537, column: 18, scope: !11021)
!11075 = !DILocation(line: 537, column: 22, scope: !11021)
!11076 = !DILocation(line: 537, column: 27, scope: !11021)
!11077 = !DILocation(line: 537, column: 2, scope: !11078)
!11078 = !DILexicalBlockFile(scope: !11021, file: !243, discriminator: 1)
!11079 = !DILocation(line: 539, column: 11, scope: !11021)
!11080 = !DILocation(line: 539, column: 2, scope: !11021)
!11081 = !DILocation(line: 539, column: 6, scope: !11021)
!11082 = !DILocation(line: 539, column: 9, scope: !11021)
!11083 = !DILocation(line: 540, column: 2, scope: !11021)
!11084 = !DILocation(line: 540, column: 6, scope: !11021)
!11085 = !DILocation(line: 540, column: 13, scope: !11021)
!11086 = !DILocation(line: 542, column: 9, scope: !11021)
!11087 = !DILocation(line: 542, column: 2, scope: !11021)
!11088 = !DILocation(line: 543, column: 1, scope: !11021)
!11089 = distinct !DISubprogram(name: "ui_seamless_destroy_window", scope: !243, file: !243, line: 4590, type: !11090, isLocal: false, isDefinition: true, scopeLine: 4591, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11090 = !DISubroutineType(types: !11091)
!11091 = !{null, !81, !81}
!11092 = !DILocalVariable(name: "id", arg: 1, scope: !11089, file: !243, line: 4590, type: !81)
!11093 = !DILocation(line: 4590, column: 42, scope: !11089)
!11094 = !DILocalVariable(name: "flags", arg: 2, scope: !11089, file: !243, line: 4590, type: !81)
!11095 = !DILocation(line: 4590, column: 60, scope: !11089)
!11096 = !DILocation(line: 4592, column: 9, scope: !11089)
!11097 = !DILocalVariable(name: "sw", scope: !11089, file: !243, line: 4594, type: !360)
!11098 = !DILocation(line: 4594, column: 19, scope: !11089)
!11099 = !DILocation(line: 4596, column: 7, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11089, file: !243, line: 4596, column: 6)
!11101 = !DILocation(line: 4596, column: 6, scope: !11089)
!11102 = !DILocation(line: 4597, column: 3, scope: !11100)
!11103 = !DILocation(line: 4599, column: 27, scope: !11089)
!11104 = !DILocation(line: 4599, column: 7, scope: !11089)
!11105 = !DILocation(line: 4599, column: 5, scope: !11089)
!11106 = !DILocation(line: 4600, column: 7, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11089, file: !243, line: 4600, column: 6)
!11108 = !DILocation(line: 4600, column: 6, scope: !11089)
!11109 = !DILocation(line: 4603, column: 75, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11107, file: !243, line: 4601, column: 2)
!11111 = !DILocation(line: 4602, column: 3, scope: !11110)
!11112 = !DILocation(line: 4604, column: 3, scope: !11110)
!11113 = !DILocation(line: 4607, column: 17, scope: !11089)
!11114 = !DILocation(line: 4607, column: 28, scope: !11089)
!11115 = !DILocation(line: 4607, column: 32, scope: !11089)
!11116 = !DILocation(line: 4607, column: 2, scope: !11089)
!11117 = !DILocation(line: 4608, column: 19, scope: !11089)
!11118 = !DILocation(line: 4608, column: 2, scope: !11089)
!11119 = !DILocation(line: 4609, column: 1, scope: !11089)
!11120 = !DILocation(line: 4609, column: 1, scope: !11121)
!11121 = !DILexicalBlockFile(scope: !11089, file: !243, discriminator: 1)
!11122 = distinct !DISubprogram(name: "ui_seamless_destroy_group", scope: !243, file: !243, line: 4613, type: !11090, isLocal: false, isDefinition: true, scopeLine: 4614, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11123 = !DILocalVariable(name: "id", arg: 1, scope: !11122, file: !243, line: 4613, type: !81)
!11124 = !DILocation(line: 4613, column: 41, scope: !11122)
!11125 = !DILocalVariable(name: "flags", arg: 2, scope: !11122, file: !243, line: 4613, type: !81)
!11126 = !DILocation(line: 4613, column: 59, scope: !11122)
!11127 = !DILocation(line: 4615, column: 9, scope: !11122)
!11128 = !DILocalVariable(name: "sw", scope: !11122, file: !243, line: 4617, type: !360)
!11129 = !DILocation(line: 4617, column: 19, scope: !11122)
!11130 = !DILocalVariable(name: "sw_next", scope: !11122, file: !243, line: 4617, type: !360)
!11131 = !DILocation(line: 4617, column: 24, scope: !11122)
!11132 = !DILocation(line: 4619, column: 7, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11122, file: !243, line: 4619, column: 6)
!11134 = !DILocation(line: 4619, column: 6, scope: !11122)
!11135 = !DILocation(line: 4620, column: 3, scope: !11133)
!11136 = !DILocation(line: 4622, column: 12, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11122, file: !243, line: 4622, column: 2)
!11138 = !DILocation(line: 4622, column: 10, scope: !11137)
!11139 = !DILocation(line: 4622, column: 7, scope: !11137)
!11140 = !DILocation(line: 4622, column: 32, scope: !11141)
!11141 = !DILexicalBlockFile(scope: !11142, file: !243, discriminator: 1)
!11142 = distinct !DILexicalBlock(scope: !11137, file: !243, line: 4622, column: 2)
!11143 = !DILocation(line: 4622, column: 2, scope: !11141)
!11144 = !DILocation(line: 4624, column: 13, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11142, file: !243, line: 4623, column: 2)
!11146 = !DILocation(line: 4624, column: 17, scope: !11145)
!11147 = !DILocation(line: 4624, column: 11, scope: !11145)
!11148 = !DILocation(line: 4626, column: 7, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11145, file: !243, line: 4626, column: 7)
!11150 = !DILocation(line: 4626, column: 11, scope: !11149)
!11151 = !DILocation(line: 4626, column: 18, scope: !11149)
!11152 = !DILocation(line: 4626, column: 24, scope: !11149)
!11153 = !DILocation(line: 4626, column: 21, scope: !11149)
!11154 = !DILocation(line: 4626, column: 7, scope: !11145)
!11155 = !DILocation(line: 4628, column: 19, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11149, file: !243, line: 4627, column: 3)
!11157 = !DILocation(line: 4628, column: 30, scope: !11156)
!11158 = !DILocation(line: 4628, column: 34, scope: !11156)
!11159 = !DILocation(line: 4628, column: 4, scope: !11156)
!11160 = !DILocation(line: 4629, column: 21, scope: !11156)
!11161 = !DILocation(line: 4629, column: 4, scope: !11156)
!11162 = !DILocation(line: 4630, column: 3, scope: !11156)
!11163 = !DILocation(line: 4631, column: 2, scope: !11145)
!11164 = !DILocation(line: 4622, column: 41, scope: !11165)
!11165 = !DILexicalBlockFile(scope: !11142, file: !243, discriminator: 2)
!11166 = !DILocation(line: 4622, column: 39, scope: !11165)
!11167 = !DILocation(line: 4622, column: 2, scope: !11165)
!11168 = distinct !{!11168, !11169}
!11169 = !DILocation(line: 4622, column: 2, scope: !11122)
!11170 = !DILocation(line: 4632, column: 1, scope: !11122)
!11171 = distinct !DISubprogram(name: "ui_seamless_seticon", scope: !243, file: !243, line: 4636, type: !11172, isLocal: false, isDefinition: true, scopeLine: 4638, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11172 = !DISubroutineType(types: !11173)
!11173 = !{null, !81, !11174, !45, !45, !45, !11174, !11176}
!11174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11175, size: 64, align: 64)
!11175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !69)
!11176 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !11177, line: 216, baseType: !81)
!11177 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/lichi/Desktop/rdesktop/[task]rdesktop")
!11178 = !DILocalVariable(name: "id", arg: 1, scope: !11171, file: !243, line: 4636, type: !81)
!11179 = !DILocation(line: 4636, column: 35, scope: !11171)
!11180 = !DILocalVariable(name: "format", arg: 2, scope: !11171, file: !243, line: 4636, type: !11174)
!11181 = !DILocation(line: 4636, column: 51, scope: !11171)
!11182 = !DILocalVariable(name: "width", arg: 3, scope: !11171, file: !243, line: 4636, type: !45)
!11183 = !DILocation(line: 4636, column: 63, scope: !11171)
!11184 = !DILocalVariable(name: "height", arg: 4, scope: !11171, file: !243, line: 4636, type: !45)
!11185 = !DILocation(line: 4636, column: 74, scope: !11171)
!11186 = !DILocalVariable(name: "chunk", arg: 5, scope: !11171, file: !243, line: 4636, type: !45)
!11187 = !DILocation(line: 4636, column: 86, scope: !11171)
!11188 = !DILocalVariable(name: "data", arg: 6, scope: !11171, file: !243, line: 4637, type: !11174)
!11189 = !DILocation(line: 4637, column: 19, scope: !11171)
!11190 = !DILocalVariable(name: "chunk_len", arg: 7, scope: !11171, file: !243, line: 4637, type: !11176)
!11191 = !DILocation(line: 4637, column: 32, scope: !11171)
!11192 = !DILocalVariable(name: "sw", scope: !11171, file: !243, line: 4639, type: !360)
!11193 = !DILocation(line: 4639, column: 19, scope: !11171)
!11194 = !DILocation(line: 4641, column: 7, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11171, file: !243, line: 4641, column: 6)
!11196 = !DILocation(line: 4641, column: 6, scope: !11171)
!11197 = !DILocation(line: 4642, column: 3, scope: !11195)
!11198 = !DILocation(line: 4644, column: 27, scope: !11171)
!11199 = !DILocation(line: 4644, column: 7, scope: !11171)
!11200 = !DILocation(line: 4644, column: 5, scope: !11171)
!11201 = !DILocation(line: 4645, column: 7, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11171, file: !243, line: 4645, column: 6)
!11203 = !DILocation(line: 4645, column: 6, scope: !11171)
!11204 = !DILocation(line: 4647, column: 82, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11202, file: !243, line: 4646, column: 2)
!11206 = !DILocation(line: 4647, column: 3, scope: !11205)
!11207 = !DILocation(line: 4648, column: 3, scope: !11205)
!11208 = !DILocation(line: 4651, column: 6, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11171, file: !243, line: 4651, column: 6)
!11210 = !DILocation(line: 4651, column: 12, scope: !11209)
!11211 = !DILocation(line: 4651, column: 6, scope: !11171)
!11212 = !DILocation(line: 4653, column: 7, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11214, file: !243, line: 4653, column: 7)
!11214 = distinct !DILexicalBlock(scope: !11209, file: !243, line: 4652, column: 2)
!11215 = !DILocation(line: 4653, column: 11, scope: !11213)
!11216 = !DILocation(line: 4653, column: 7, scope: !11214)
!11217 = !DILocation(line: 4654, column: 4, scope: !11213)
!11218 = !DILocation(line: 4657, column: 14, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11214, file: !243, line: 4657, column: 7)
!11220 = !DILocation(line: 4657, column: 7, scope: !11219)
!11221 = !DILocation(line: 4657, column: 30, scope: !11219)
!11222 = !DILocation(line: 4657, column: 7, scope: !11214)
!11223 = !DILocation(line: 4660, column: 11, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11219, file: !243, line: 4658, column: 3)
!11225 = !DILocation(line: 4659, column: 4, scope: !11224)
!11226 = !DILocation(line: 4661, column: 4, scope: !11224)
!11227 = !DILocation(line: 4664, column: 19, scope: !11214)
!11228 = !DILocation(line: 4664, column: 27, scope: !11214)
!11229 = !DILocation(line: 4664, column: 25, scope: !11214)
!11230 = !DILocation(line: 4664, column: 34, scope: !11214)
!11231 = !DILocation(line: 4664, column: 3, scope: !11214)
!11232 = !DILocation(line: 4664, column: 7, scope: !11214)
!11233 = !DILocation(line: 4664, column: 17, scope: !11214)
!11234 = !DILocation(line: 4665, column: 7, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11214, file: !243, line: 4665, column: 7)
!11236 = !DILocation(line: 4665, column: 11, scope: !11235)
!11237 = !DILocation(line: 4665, column: 21, scope: !11235)
!11238 = !DILocation(line: 4665, column: 7, scope: !11214)
!11239 = !DILocation(line: 4668, column: 11, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11235, file: !243, line: 4666, column: 3)
!11241 = !DILocation(line: 4668, column: 15, scope: !11240)
!11242 = !DILocation(line: 4667, column: 4, scope: !11240)
!11243 = !DILocation(line: 4669, column: 4, scope: !11240)
!11244 = !DILocation(line: 4669, column: 8, scope: !11240)
!11245 = !DILocation(line: 4669, column: 18, scope: !11240)
!11246 = !DILocation(line: 4670, column: 4, scope: !11240)
!11247 = !DILocation(line: 4673, column: 3, scope: !11214)
!11248 = !DILocation(line: 4673, column: 7, scope: !11214)
!11249 = !DILocation(line: 4673, column: 19, scope: !11214)
!11250 = !DILocation(line: 4674, column: 2, scope: !11214)
!11251 = !DILocation(line: 4677, column: 8, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11253, file: !243, line: 4677, column: 7)
!11253 = distinct !DILexicalBlock(scope: !11209, file: !243, line: 4676, column: 2)
!11254 = !DILocation(line: 4677, column: 12, scope: !11252)
!11255 = !DILocation(line: 4677, column: 7, scope: !11253)
!11256 = !DILocation(line: 4678, column: 4, scope: !11252)
!11257 = !DILocation(line: 4681, column: 6, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11171, file: !243, line: 4681, column: 6)
!11259 = !DILocation(line: 4681, column: 19, scope: !11258)
!11260 = !DILocation(line: 4681, column: 23, scope: !11258)
!11261 = !DILocation(line: 4681, column: 35, scope: !11258)
!11262 = !DILocation(line: 4681, column: 39, scope: !11258)
!11263 = !DILocation(line: 4681, column: 33, scope: !11258)
!11264 = !DILocation(line: 4681, column: 18, scope: !11258)
!11265 = !DILocation(line: 4681, column: 16, scope: !11258)
!11266 = !DILocation(line: 4681, column: 6, scope: !11171)
!11267 = !DILocation(line: 4685, column: 10, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11258, file: !243, line: 4682, column: 2)
!11269 = !DILocation(line: 4685, column: 21, scope: !11268)
!11270 = !DILocation(line: 4685, column: 25, scope: !11268)
!11271 = !DILocation(line: 4685, column: 37, scope: !11268)
!11272 = !DILocation(line: 4685, column: 41, scope: !11268)
!11273 = !DILocation(line: 4685, column: 35, scope: !11268)
!11274 = !DILocation(line: 4683, column: 3, scope: !11268)
!11275 = !DILocation(line: 4686, column: 3, scope: !11268)
!11276 = !DILocation(line: 4686, column: 7, scope: !11268)
!11277 = !DILocation(line: 4686, column: 17, scope: !11268)
!11278 = !DILocation(line: 4687, column: 3, scope: !11268)
!11279 = !DILocation(line: 4690, column: 9, scope: !11171)
!11280 = !DILocation(line: 4690, column: 13, scope: !11171)
!11281 = !DILocation(line: 4690, column: 27, scope: !11171)
!11282 = !DILocation(line: 4690, column: 31, scope: !11171)
!11283 = !DILocation(line: 4690, column: 25, scope: !11171)
!11284 = !DILocation(line: 4690, column: 44, scope: !11171)
!11285 = !DILocation(line: 4690, column: 50, scope: !11171)
!11286 = !DILocation(line: 4690, column: 2, scope: !11171)
!11287 = !DILocation(line: 4691, column: 21, scope: !11171)
!11288 = !DILocation(line: 4691, column: 2, scope: !11171)
!11289 = !DILocation(line: 4691, column: 6, scope: !11171)
!11290 = !DILocation(line: 4691, column: 18, scope: !11171)
!11291 = !DILocation(line: 4693, column: 6, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11171, file: !243, line: 4693, column: 6)
!11293 = !DILocation(line: 4693, column: 10, scope: !11292)
!11294 = !DILocation(line: 4693, column: 25, scope: !11292)
!11295 = !DILocation(line: 4693, column: 29, scope: !11292)
!11296 = !DILocation(line: 4693, column: 22, scope: !11292)
!11297 = !DILocation(line: 4693, column: 6, scope: !11171)
!11298 = !DILocation(line: 4695, column: 17, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11292, file: !243, line: 4694, column: 2)
!11300 = !DILocation(line: 4695, column: 21, scope: !11299)
!11301 = !DILocation(line: 4695, column: 26, scope: !11299)
!11302 = !DILocation(line: 4695, column: 33, scope: !11299)
!11303 = !DILocation(line: 4695, column: 41, scope: !11299)
!11304 = !DILocation(line: 4695, column: 45, scope: !11299)
!11305 = !DILocation(line: 4695, column: 3, scope: !11299)
!11306 = !DILocation(line: 4696, column: 3, scope: !11299)
!11307 = !DILocation(line: 4696, column: 7, scope: !11299)
!11308 = !DILocation(line: 4696, column: 17, scope: !11299)
!11309 = !DILocation(line: 4697, column: 2, scope: !11299)
!11310 = !DILocation(line: 4698, column: 1, scope: !11171)
!11311 = distinct !DISubprogram(name: "ui_seamless_delicon", scope: !243, file: !243, line: 4702, type: !11312, isLocal: false, isDefinition: true, scopeLine: 4703, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11312 = !DISubroutineType(types: !11313)
!11313 = !{null, !81, !11174, !45, !45}
!11314 = !DILocalVariable(name: "id", arg: 1, scope: !11311, file: !243, line: 4702, type: !81)
!11315 = !DILocation(line: 4702, column: 35, scope: !11311)
!11316 = !DILocalVariable(name: "format", arg: 2, scope: !11311, file: !243, line: 4702, type: !11174)
!11317 = !DILocation(line: 4702, column: 51, scope: !11311)
!11318 = !DILocalVariable(name: "width", arg: 3, scope: !11311, file: !243, line: 4702, type: !45)
!11319 = !DILocation(line: 4702, column: 63, scope: !11311)
!11320 = !DILocalVariable(name: "height", arg: 4, scope: !11311, file: !243, line: 4702, type: !45)
!11321 = !DILocation(line: 4702, column: 74, scope: !11311)
!11322 = !DILocalVariable(name: "sw", scope: !11311, file: !243, line: 4704, type: !360)
!11323 = !DILocation(line: 4704, column: 19, scope: !11311)
!11324 = !DILocation(line: 4706, column: 7, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11311, file: !243, line: 4706, column: 6)
!11326 = !DILocation(line: 4706, column: 6, scope: !11311)
!11327 = !DILocation(line: 4707, column: 3, scope: !11325)
!11328 = !DILocation(line: 4709, column: 27, scope: !11311)
!11329 = !DILocation(line: 4709, column: 7, scope: !11311)
!11330 = !DILocation(line: 4709, column: 5, scope: !11311)
!11331 = !DILocation(line: 4710, column: 7, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11311, file: !243, line: 4710, column: 6)
!11333 = !DILocation(line: 4710, column: 6, scope: !11311)
!11334 = !DILocation(line: 4712, column: 82, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11332, file: !243, line: 4711, column: 2)
!11336 = !DILocation(line: 4712, column: 3, scope: !11335)
!11337 = !DILocation(line: 4713, column: 3, scope: !11335)
!11338 = !DILocation(line: 4716, column: 13, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11311, file: !243, line: 4716, column: 6)
!11340 = !DILocation(line: 4716, column: 6, scope: !11339)
!11341 = !DILocation(line: 4716, column: 29, scope: !11339)
!11342 = !DILocation(line: 4716, column: 6, scope: !11311)
!11343 = !DILocation(line: 4718, column: 77, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11339, file: !243, line: 4717, column: 2)
!11345 = !DILocation(line: 4718, column: 3, scope: !11344)
!11346 = !DILocation(line: 4719, column: 3, scope: !11344)
!11347 = !DILocation(line: 4722, column: 16, scope: !11311)
!11348 = !DILocation(line: 4722, column: 20, scope: !11311)
!11349 = !DILocation(line: 4722, column: 25, scope: !11311)
!11350 = !DILocation(line: 4722, column: 32, scope: !11311)
!11351 = !DILocation(line: 4722, column: 2, scope: !11311)
!11352 = !DILocation(line: 4723, column: 1, scope: !11311)
!11353 = !DILocation(line: 4723, column: 1, scope: !11354)
!11354 = !DILexicalBlockFile(scope: !11311, file: !243, discriminator: 1)
!11355 = distinct !DISubprogram(name: "ui_seamless_move_window", scope: !243, file: !243, line: 4727, type: !11356, isLocal: false, isDefinition: true, scopeLine: 4728, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{null, !81, !45, !45, !45, !45, !81}
!11358 = !DILocalVariable(name: "id", arg: 1, scope: !11355, file: !243, line: 4727, type: !81)
!11359 = !DILocation(line: 4727, column: 39, scope: !11355)
!11360 = !DILocalVariable(name: "x", arg: 2, scope: !11355, file: !243, line: 4727, type: !45)
!11361 = !DILocation(line: 4727, column: 47, scope: !11355)
!11362 = !DILocalVariable(name: "y", arg: 3, scope: !11355, file: !243, line: 4727, type: !45)
!11363 = !DILocation(line: 4727, column: 54, scope: !11355)
!11364 = !DILocalVariable(name: "width", arg: 4, scope: !11355, file: !243, line: 4727, type: !45)
!11365 = !DILocation(line: 4727, column: 61, scope: !11355)
!11366 = !DILocalVariable(name: "height", arg: 5, scope: !11355, file: !243, line: 4727, type: !45)
!11367 = !DILocation(line: 4727, column: 72, scope: !11355)
!11368 = !DILocalVariable(name: "flags", arg: 6, scope: !11355, file: !243, line: 4727, type: !81)
!11369 = !DILocation(line: 4727, column: 94, scope: !11355)
!11370 = !DILocation(line: 4729, column: 9, scope: !11355)
!11371 = !DILocalVariable(name: "sw", scope: !11355, file: !243, line: 4731, type: !360)
!11372 = !DILocation(line: 4731, column: 19, scope: !11355)
!11373 = !DILocation(line: 4733, column: 7, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11355, file: !243, line: 4733, column: 6)
!11375 = !DILocation(line: 4733, column: 6, scope: !11355)
!11376 = !DILocation(line: 4734, column: 3, scope: !11374)
!11377 = !DILocation(line: 4736, column: 27, scope: !11355)
!11378 = !DILocation(line: 4736, column: 7, scope: !11355)
!11379 = !DILocation(line: 4736, column: 5, scope: !11355)
!11380 = !DILocation(line: 4737, column: 7, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11355, file: !243, line: 4737, column: 6)
!11382 = !DILocation(line: 4737, column: 6, scope: !11355)
!11383 = !DILocation(line: 4740, column: 10, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11381, file: !243, line: 4738, column: 2)
!11385 = !DILocation(line: 4739, column: 3, scope: !11384)
!11386 = !DILocation(line: 4741, column: 3, scope: !11384)
!11387 = !DILocation(line: 4745, column: 6, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11355, file: !243, line: 4745, column: 6)
!11389 = !DILocation(line: 4745, column: 10, scope: !11388)
!11390 = !DILocation(line: 4745, column: 6, scope: !11355)
!11391 = !DILocation(line: 4746, column: 3, scope: !11388)
!11392 = !DILocation(line: 4748, column: 7, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11355, file: !243, line: 4748, column: 6)
!11394 = !DILocation(line: 4748, column: 13, scope: !11393)
!11395 = !DILocation(line: 4748, column: 17, scope: !11396)
!11396 = !DILexicalBlockFile(scope: !11393, file: !243, discriminator: 1)
!11397 = !DILocation(line: 4748, column: 6, scope: !11396)
!11398 = !DILocation(line: 4750, column: 3, scope: !11393)
!11399 = !DILocation(line: 4754, column: 10, scope: !11355)
!11400 = !DILocation(line: 4754, column: 14, scope: !11355)
!11401 = !DILocation(line: 4754, column: 2, scope: !11355)
!11402 = !DILocation(line: 4758, column: 23, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11355, file: !243, line: 4755, column: 2)
!11404 = !DILocation(line: 4758, column: 4, scope: !11403)
!11405 = !DILocation(line: 4759, column: 4, scope: !11403)
!11406 = !DILocation(line: 4762, column: 16, scope: !11355)
!11407 = !DILocation(line: 4762, column: 2, scope: !11355)
!11408 = !DILocation(line: 4762, column: 6, scope: !11355)
!11409 = !DILocation(line: 4762, column: 14, scope: !11355)
!11410 = !DILocation(line: 4763, column: 16, scope: !11355)
!11411 = !DILocation(line: 4763, column: 2, scope: !11355)
!11412 = !DILocation(line: 4763, column: 6, scope: !11355)
!11413 = !DILocation(line: 4763, column: 14, scope: !11355)
!11414 = !DILocation(line: 4764, column: 14, scope: !11355)
!11415 = !DILocation(line: 4764, column: 2, scope: !11355)
!11416 = !DILocation(line: 4764, column: 6, scope: !11355)
!11417 = !DILocation(line: 4764, column: 12, scope: !11355)
!11418 = !DILocation(line: 4765, column: 15, scope: !11355)
!11419 = !DILocation(line: 4765, column: 2, scope: !11355)
!11420 = !DILocation(line: 4765, column: 6, scope: !11355)
!11421 = !DILocation(line: 4765, column: 13, scope: !11355)
!11422 = !DILocation(line: 4768, column: 20, scope: !11355)
!11423 = !DILocation(line: 4768, column: 31, scope: !11355)
!11424 = !DILocation(line: 4768, column: 35, scope: !11355)
!11425 = !DILocation(line: 4768, column: 40, scope: !11355)
!11426 = !DILocation(line: 4768, column: 44, scope: !11355)
!11427 = !DILocation(line: 4768, column: 53, scope: !11355)
!11428 = !DILocation(line: 4768, column: 57, scope: !11355)
!11429 = !DILocation(line: 4768, column: 66, scope: !11355)
!11430 = !DILocation(line: 4768, column: 70, scope: !11355)
!11431 = !DILocation(line: 4768, column: 77, scope: !11355)
!11432 = !DILocation(line: 4768, column: 81, scope: !11355)
!11433 = !DILocation(line: 4768, column: 2, scope: !11355)
!11434 = !DILocation(line: 4769, column: 1, scope: !11355)
!11435 = !DILocation(line: 4769, column: 1, scope: !11436)
!11436 = !DILexicalBlockFile(scope: !11355, file: !243, discriminator: 1)
!11437 = distinct !DISubprogram(name: "sw_update_position", scope: !243, file: !243, line: 394, type: !10646, isLocal: true, isDefinition: true, scopeLine: 395, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11438 = !DILocalVariable(name: "sw", arg: 1, scope: !11437, file: !243, line: 394, type: !360)
!11439 = !DILocation(line: 394, column: 38, scope: !11437)
!11440 = !DILocalVariable(name: "wa", scope: !11437, file: !243, line: 396, type: !2170)
!11441 = !DILocation(line: 396, column: 20, scope: !11437)
!11442 = !DILocalVariable(name: "x", scope: !11437, file: !243, line: 397, type: !45)
!11443 = !DILocation(line: 397, column: 6, scope: !11437)
!11444 = !DILocalVariable(name: "y", scope: !11437, file: !243, line: 397, type: !45)
!11445 = !DILocation(line: 397, column: 9, scope: !11437)
!11446 = !DILocalVariable(name: "child_return", scope: !11437, file: !243, line: 398, type: !136)
!11447 = !DILocation(line: 398, column: 9, scope: !11437)
!11448 = !DILocalVariable(name: "serial", scope: !11437, file: !243, line: 399, type: !117)
!11449 = !DILocation(line: 399, column: 15, scope: !11437)
!11450 = !DILocation(line: 401, column: 23, scope: !11437)
!11451 = !DILocation(line: 401, column: 34, scope: !11437)
!11452 = !DILocation(line: 401, column: 38, scope: !11437)
!11453 = !DILocation(line: 401, column: 2, scope: !11437)
!11454 = !DILocation(line: 402, column: 24, scope: !11437)
!11455 = !DILocation(line: 402, column: 35, scope: !11437)
!11456 = !DILocation(line: 402, column: 39, scope: !11437)
!11457 = !DILocation(line: 402, column: 47, scope: !11437)
!11458 = !DILocation(line: 403, column: 14, scope: !11437)
!11459 = !DILocation(line: 403, column: 10, scope: !11437)
!11460 = !DILocation(line: 403, column: 32, scope: !11437)
!11461 = !DILocation(line: 403, column: 28, scope: !11437)
!11462 = !DILocation(line: 402, column: 2, scope: !11437)
!11463 = !DILocation(line: 405, column: 34, scope: !11437)
!11464 = !DILocation(line: 405, column: 38, scope: !11437)
!11465 = !DILocation(line: 405, column: 42, scope: !11437)
!11466 = !DILocation(line: 405, column: 45, scope: !11437)
!11467 = !DILocation(line: 405, column: 51, scope: !11437)
!11468 = !DILocation(line: 405, column: 61, scope: !11437)
!11469 = !DILocation(line: 405, column: 11, scope: !11437)
!11470 = !DILocation(line: 405, column: 9, scope: !11437)
!11471 = !DILocation(line: 407, column: 2, scope: !11437)
!11472 = !DILocation(line: 407, column: 6, scope: !11437)
!11473 = !DILocation(line: 407, column: 27, scope: !11437)
!11474 = !DILocation(line: 408, column: 22, scope: !11437)
!11475 = !DILocation(line: 408, column: 2, scope: !11437)
!11476 = !DILocation(line: 408, column: 6, scope: !11437)
!11477 = !DILocation(line: 408, column: 20, scope: !11437)
!11478 = !DILocation(line: 410, column: 23, scope: !11437)
!11479 = !DILocation(line: 410, column: 2, scope: !11437)
!11480 = !DILocation(line: 410, column: 6, scope: !11437)
!11481 = !DILocation(line: 410, column: 21, scope: !11437)
!11482 = !DILocation(line: 411, column: 23, scope: !11437)
!11483 = !DILocation(line: 411, column: 2, scope: !11437)
!11484 = !DILocation(line: 411, column: 6, scope: !11437)
!11485 = !DILocation(line: 411, column: 21, scope: !11437)
!11486 = !DILocation(line: 412, column: 24, scope: !11437)
!11487 = !DILocation(line: 412, column: 2, scope: !11437)
!11488 = !DILocation(line: 412, column: 6, scope: !11437)
!11489 = !DILocation(line: 412, column: 19, scope: !11437)
!11490 = !DILocation(line: 413, column: 25, scope: !11437)
!11491 = !DILocation(line: 413, column: 2, scope: !11437)
!11492 = !DILocation(line: 413, column: 6, scope: !11437)
!11493 = !DILocation(line: 413, column: 20, scope: !11437)
!11494 = !DILocation(line: 414, column: 1, scope: !11437)
!11495 = distinct !DISubprogram(name: "ui_seamless_restack_window", scope: !243, file: !243, line: 4773, type: !11496, isLocal: false, isDefinition: true, scopeLine: 4774, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11496 = !DISubroutineType(types: !11497)
!11497 = !{null, !81, !81, !81}
!11498 = !DILocalVariable(name: "id", arg: 1, scope: !11495, file: !243, line: 4773, type: !81)
!11499 = !DILocation(line: 4773, column: 42, scope: !11495)
!11500 = !DILocalVariable(name: "behind", arg: 2, scope: !11495, file: !243, line: 4773, type: !81)
!11501 = !DILocation(line: 4773, column: 60, scope: !11495)
!11502 = !DILocalVariable(name: "flags", arg: 3, scope: !11495, file: !243, line: 4773, type: !81)
!11503 = !DILocation(line: 4773, column: 82, scope: !11495)
!11504 = !DILocalVariable(name: "sw", scope: !11495, file: !243, line: 4775, type: !360)
!11505 = !DILocation(line: 4775, column: 19, scope: !11495)
!11506 = !DILocalVariable(name: "values", scope: !11495, file: !243, line: 4776, type: !11507)
!11507 = !DIDerivedType(tag: DW_TAG_typedef, name: "XWindowChanges", file: !50, line: 405, baseType: !11508)
!11508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !50, line: 399, size: 320, align: 64, elements: !11509)
!11509 = !{!11510, !11511, !11512, !11513, !11514, !11515, !11516}
!11510 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !11508, file: !50, line: 400, baseType: !45, size: 32, align: 32)
!11511 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !11508, file: !50, line: 400, baseType: !45, size: 32, align: 32, offset: 32)
!11512 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !11508, file: !50, line: 401, baseType: !45, size: 32, align: 32, offset: 64)
!11513 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !11508, file: !50, line: 401, baseType: !45, size: 32, align: 32, offset: 96)
!11514 = !DIDerivedType(tag: DW_TAG_member, name: "border_width", scope: !11508, file: !50, line: 402, baseType: !45, size: 32, align: 32, offset: 128)
!11515 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !11508, file: !50, line: 403, baseType: !136, size: 64, align: 64, offset: 192)
!11516 = !DIDerivedType(tag: DW_TAG_member, name: "stack_mode", scope: !11508, file: !50, line: 404, baseType: !45, size: 32, align: 32, offset: 256)
!11517 = !DILocation(line: 4776, column: 17, scope: !11495)
!11518 = !DILocalVariable(name: "restack_serial", scope: !11495, file: !243, line: 4777, type: !81)
!11519 = !DILocation(line: 4777, column: 16, scope: !11495)
!11520 = !DILocalVariable(name: "value_mask", scope: !11495, file: !243, line: 4778, type: !117)
!11521 = !DILocation(line: 4778, column: 15, scope: !11495)
!11522 = !DILocation(line: 4780, column: 7, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11495, file: !243, line: 4780, column: 6)
!11524 = !DILocation(line: 4780, column: 6, scope: !11495)
!11525 = !DILocation(line: 4781, column: 3, scope: !11523)
!11526 = !DILocation(line: 4783, column: 27, scope: !11495)
!11527 = !DILocation(line: 4783, column: 7, scope: !11495)
!11528 = !DILocation(line: 4783, column: 5, scope: !11495)
!11529 = !DILocation(line: 4784, column: 7, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11495, file: !243, line: 4784, column: 6)
!11531 = !DILocation(line: 4784, column: 6, scope: !11495)
!11532 = !DILocation(line: 4787, column: 75, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11530, file: !243, line: 4785, column: 2)
!11534 = !DILocation(line: 4786, column: 3, scope: !11533)
!11535 = !DILocation(line: 4788, column: 3, scope: !11533)
!11536 = !DILocation(line: 4791, column: 6, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11495, file: !243, line: 4791, column: 6)
!11538 = !DILocation(line: 4791, column: 6, scope: !11495)
!11539 = !DILocalVariable(name: "sw_behind", scope: !11540, file: !243, line: 4793, type: !360)
!11540 = distinct !DILexicalBlock(scope: !11537, file: !243, line: 4792, column: 2)
!11541 = !DILocation(line: 4793, column: 20, scope: !11540)
!11542 = !DILocation(line: 4795, column: 35, scope: !11540)
!11543 = !DILocation(line: 4795, column: 15, scope: !11540)
!11544 = !DILocation(line: 4795, column: 13, scope: !11540)
!11545 = !DILocation(line: 4796, column: 8, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11540, file: !243, line: 4796, column: 7)
!11547 = !DILocation(line: 4796, column: 7, scope: !11540)
!11548 = !DILocation(line: 4800, column: 11, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11546, file: !243, line: 4797, column: 3)
!11550 = !DILocation(line: 4798, column: 4, scope: !11549)
!11551 = !DILocation(line: 4801, column: 4, scope: !11549)
!11552 = !DILocation(line: 4804, column: 10, scope: !11540)
!11553 = !DILocation(line: 4804, column: 21, scope: !11540)
!11554 = !DILocation(line: 4805, column: 14, scope: !11540)
!11555 = !DILocation(line: 4806, column: 20, scope: !11540)
!11556 = !DILocation(line: 4806, column: 31, scope: !11540)
!11557 = !DILocation(line: 4806, column: 10, scope: !11540)
!11558 = !DILocation(line: 4806, column: 18, scope: !11540)
!11559 = !DILocation(line: 4810, column: 28, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11540, file: !243, line: 4810, column: 7)
!11561 = !DILocation(line: 4810, column: 32, scope: !11560)
!11562 = !DILocation(line: 4810, column: 7, scope: !11560)
!11563 = !DILocation(line: 4810, column: 7, scope: !11540)
!11564 = !DILocation(line: 4812, column: 30, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11566, file: !243, line: 4812, column: 8)
!11566 = distinct !DILexicalBlock(scope: !11560, file: !243, line: 4811, column: 3)
!11567 = !DILocation(line: 4812, column: 41, scope: !11565)
!11568 = !DILocation(line: 4812, column: 9, scope: !11565)
!11569 = !DILocation(line: 4812, column: 8, scope: !11566)
!11570 = !DILocation(line: 4816, column: 12, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11565, file: !243, line: 4813, column: 4)
!11572 = !DILocation(line: 4816, column: 23, scope: !11571)
!11573 = !DILocation(line: 4817, column: 16, scope: !11571)
!11574 = !DILocation(line: 4818, column: 4, scope: !11571)
!11575 = !DILocation(line: 4819, column: 3, scope: !11566)
!11576 = !DILocation(line: 4822, column: 29, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !243, line: 4822, column: 8)
!11578 = distinct !DILexicalBlock(scope: !11560, file: !243, line: 4821, column: 3)
!11579 = !DILocation(line: 4822, column: 40, scope: !11577)
!11580 = !DILocation(line: 4822, column: 8, scope: !11577)
!11581 = !DILocation(line: 4822, column: 8, scope: !11578)
!11582 = !DILocation(line: 4826, column: 12, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11577, file: !243, line: 4823, column: 4)
!11584 = !DILocation(line: 4826, column: 23, scope: !11583)
!11585 = !DILocation(line: 4827, column: 16, scope: !11583)
!11586 = !DILocation(line: 4828, column: 4, scope: !11583)
!11587 = !DILocation(line: 4830, column: 2, scope: !11540)
!11588 = !DILocation(line: 4833, column: 10, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11537, file: !243, line: 4832, column: 2)
!11590 = !DILocation(line: 4833, column: 21, scope: !11589)
!11591 = !DILocation(line: 4834, column: 14, scope: !11589)
!11592 = !DILocation(line: 4837, column: 32, scope: !11495)
!11593 = !DILocation(line: 4837, column: 19, scope: !11495)
!11594 = !DILocation(line: 4837, column: 17, scope: !11495)
!11595 = !DILocation(line: 4838, column: 23, scope: !11495)
!11596 = !DILocation(line: 4838, column: 34, scope: !11495)
!11597 = !DILocation(line: 4838, column: 38, scope: !11495)
!11598 = !DILocation(line: 4838, column: 42, scope: !11495)
!11599 = !DILocation(line: 4838, column: 45, scope: !11495)
!11600 = !DILocation(line: 4838, column: 68, scope: !11495)
!11601 = !DILocation(line: 4838, column: 2, scope: !11495)
!11602 = !DILocation(line: 4839, column: 26, scope: !11495)
!11603 = !DILocation(line: 4839, column: 30, scope: !11495)
!11604 = !DILocation(line: 4839, column: 35, scope: !11495)
!11605 = !DILocation(line: 4839, column: 2, scope: !11495)
!11606 = !DILocation(line: 4841, column: 20, scope: !11495)
!11607 = !DILocation(line: 4841, column: 24, scope: !11495)
!11608 = !DILocation(line: 4841, column: 2, scope: !11495)
!11609 = !DILocation(line: 4843, column: 6, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11495, file: !243, line: 4843, column: 6)
!11611 = !DILocation(line: 4843, column: 12, scope: !11610)
!11612 = !DILocation(line: 4843, column: 6, scope: !11495)
!11613 = !DILocation(line: 4846, column: 25, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11610, file: !243, line: 4844, column: 2)
!11615 = !DILocation(line: 4846, column: 29, scope: !11614)
!11616 = !DILocation(line: 4846, column: 3, scope: !11614)
!11617 = !DILocation(line: 4847, column: 2, scope: !11614)
!11618 = !DILocation(line: 4848, column: 1, scope: !11495)
!11619 = distinct !DISubprogram(name: "sw_wait_configurenotify", scope: !243, file: !243, line: 603, type: !11620, isLocal: true, isDefinition: true, scopeLine: 604, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11620 = !DISubroutineType(types: !11621)
!11621 = !{null, !136, !81}
!11622 = !DILocalVariable(name: "wnd", arg: 1, scope: !11619, file: !243, line: 603, type: !136)
!11623 = !DILocation(line: 603, column: 32, scope: !11619)
!11624 = !DILocalVariable(name: "serial", arg: 2, scope: !11619, file: !243, line: 603, type: !81)
!11625 = !DILocation(line: 603, column: 51, scope: !11619)
!11626 = !DILocalVariable(name: "xevent", scope: !11619, file: !243, line: 605, type: !1408)
!11627 = !DILocation(line: 605, column: 9, scope: !11619)
!11628 = !DILocalVariable(name: "context", scope: !11619, file: !243, line: 606, type: !242)
!11629 = !DILocation(line: 606, column: 29, scope: !11619)
!11630 = !DILocalVariable(name: "now", scope: !11619, file: !243, line: 607, type: !353)
!11631 = !DILocation(line: 607, column: 17, scope: !11619)
!11632 = !DILocalVariable(name: "future", scope: !11619, file: !243, line: 608, type: !353)
!11633 = !DILocation(line: 608, column: 17, scope: !11619)
!11634 = !DILocalVariable(name: "got", scope: !11619, file: !243, line: 609, type: !44)
!11635 = !DILocation(line: 609, column: 10, scope: !11619)
!11636 = !DILocation(line: 611, column: 19, scope: !11619)
!11637 = !DILocation(line: 611, column: 10, scope: !11619)
!11638 = !DILocation(line: 611, column: 17, scope: !11619)
!11639 = !DILocation(line: 612, column: 19, scope: !11619)
!11640 = !DILocation(line: 612, column: 10, scope: !11619)
!11641 = !DILocation(line: 612, column: 17, scope: !11619)
!11642 = !DILocation(line: 614, column: 2, scope: !11619)
!11643 = !DILocation(line: 615, column: 9, scope: !11619)
!11644 = !DILocation(line: 615, column: 17, scope: !11619)
!11645 = !DILocation(line: 617, column: 2, scope: !11619)
!11646 = distinct !{!11646, !11645}
!11647 = !DILocation(line: 619, column: 21, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !243, line: 619, column: 7)
!11649 = distinct !DILexicalBlock(scope: !11619, file: !243, line: 618, column: 2)
!11650 = !DILocation(line: 619, column: 63, scope: !11648)
!11651 = !DILocation(line: 619, column: 7, scope: !11648)
!11652 = !DILocation(line: 619, column: 7, scope: !11649)
!11653 = !DILocation(line: 621, column: 8, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11648, file: !243, line: 620, column: 3)
!11655 = !DILocation(line: 622, column: 4, scope: !11654)
!11656 = !DILocation(line: 624, column: 3, scope: !11649)
!11657 = !DILocation(line: 625, column: 3, scope: !11649)
!11658 = !DILocation(line: 626, column: 2, scope: !11649)
!11659 = !DILocation(line: 627, column: 11, scope: !11619)
!11660 = !DILocation(line: 627, column: 18, scope: !11619)
!11661 = !DILocation(line: 627, column: 9, scope: !11619)
!11662 = !DILocation(line: 627, column: 11, scope: !11663)
!11663 = !DILexicalBlockFile(scope: !11619, file: !243, discriminator: 1)
!11664 = !DILocation(line: 627, column: 8, scope: !11663)
!11665 = !DILocation(line: 627, column: 9, scope: !11663)
!11666 = !DILocation(line: 627, column: 11, scope: !11667)
!11667 = !DILexicalBlockFile(scope: !11619, file: !243, discriminator: 2)
!11668 = !DILocation(line: 627, column: 8, scope: !11667)
!11669 = !DILocation(line: 627, column: 9, scope: !11667)
!11670 = !DILocation(line: 627, column: 9, scope: !11671)
!11671 = !DILexicalBlockFile(scope: !11619, file: !243, discriminator: 3)
!11672 = !DILocation(line: 626, column: 2, scope: !11673)
!11673 = !DILexicalBlockFile(scope: !11649, file: !243, discriminator: 1)
!11674 = !DILocation(line: 629, column: 7, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11619, file: !243, line: 629, column: 6)
!11676 = !DILocation(line: 629, column: 6, scope: !11619)
!11677 = !DILocation(line: 631, column: 3, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11675, file: !243, line: 630, column: 2)
!11679 = !DILocation(line: 633, column: 2, scope: !11678)
!11680 = !DILocation(line: 634, column: 1, scope: !11619)
!11681 = distinct !DISubprogram(name: "sw_restack_window", scope: !243, file: !243, line: 437, type: !11682, isLocal: true, isDefinition: true, scopeLine: 438, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11682 = !DISubroutineType(types: !11683)
!11683 = !{null, !360, !81}
!11684 = !DILocalVariable(name: "sw", arg: 1, scope: !11681, file: !243, line: 437, type: !360)
!11685 = !DILocation(line: 437, column: 37, scope: !11681)
!11686 = !DILocalVariable(name: "behind", arg: 2, scope: !11681, file: !243, line: 437, type: !81)
!11687 = !DILocation(line: 437, column: 55, scope: !11681)
!11688 = !DILocalVariable(name: "sw_above", scope: !11681, file: !243, line: 439, type: !360)
!11689 = !DILocation(line: 439, column: 19, scope: !11681)
!11690 = !DILocation(line: 442, column: 18, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11681, file: !243, line: 442, column: 2)
!11692 = !DILocation(line: 442, column: 16, scope: !11691)
!11693 = !DILocation(line: 442, column: 7, scope: !11691)
!11694 = !DILocation(line: 442, column: 38, scope: !11695)
!11695 = !DILexicalBlockFile(scope: !11696, file: !243, discriminator: 1)
!11696 = distinct !DILexicalBlock(scope: !11691, file: !243, line: 442, column: 2)
!11697 = !DILocation(line: 442, column: 2, scope: !11695)
!11698 = !DILocation(line: 444, column: 7, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11700, file: !243, line: 444, column: 7)
!11700 = distinct !DILexicalBlock(scope: !11696, file: !243, line: 443, column: 2)
!11701 = !DILocation(line: 444, column: 17, scope: !11699)
!11702 = !DILocation(line: 444, column: 27, scope: !11699)
!11703 = !DILocation(line: 444, column: 31, scope: !11699)
!11704 = !DILocation(line: 444, column: 24, scope: !11699)
!11705 = !DILocation(line: 444, column: 7, scope: !11700)
!11706 = !DILocation(line: 445, column: 4, scope: !11699)
!11707 = !DILocation(line: 446, column: 2, scope: !11700)
!11708 = !DILocation(line: 442, column: 59, scope: !11709)
!11709 = !DILexicalBlockFile(scope: !11696, file: !243, discriminator: 2)
!11710 = !DILocation(line: 442, column: 69, scope: !11709)
!11711 = !DILocation(line: 442, column: 57, scope: !11709)
!11712 = !DILocation(line: 442, column: 2, scope: !11709)
!11713 = distinct !{!11713, !11714}
!11714 = !DILocation(line: 442, column: 2, scope: !11681)
!11715 = !DILocation(line: 448, column: 6, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11681, file: !243, line: 448, column: 6)
!11717 = !DILocation(line: 448, column: 6, scope: !11681)
!11718 = !DILocation(line: 449, column: 22, scope: !11716)
!11719 = !DILocation(line: 449, column: 26, scope: !11716)
!11720 = !DILocation(line: 449, column: 3, scope: !11716)
!11721 = !DILocation(line: 449, column: 13, scope: !11716)
!11722 = !DILocation(line: 449, column: 20, scope: !11716)
!11723 = !DILocation(line: 452, column: 18, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11681, file: !243, line: 452, column: 2)
!11725 = !DILocation(line: 452, column: 16, scope: !11724)
!11726 = !DILocation(line: 452, column: 7, scope: !11724)
!11727 = !DILocation(line: 452, column: 38, scope: !11728)
!11728 = !DILexicalBlockFile(scope: !11729, file: !243, discriminator: 1)
!11729 = distinct !DILexicalBlock(scope: !11724, file: !243, line: 452, column: 2)
!11730 = !DILocation(line: 452, column: 2, scope: !11728)
!11731 = !DILocation(line: 454, column: 7, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11733, file: !243, line: 454, column: 7)
!11733 = distinct !DILexicalBlock(scope: !11729, file: !243, line: 453, column: 2)
!11734 = !DILocation(line: 454, column: 17, scope: !11732)
!11735 = !DILocation(line: 454, column: 27, scope: !11732)
!11736 = !DILocation(line: 454, column: 24, scope: !11732)
!11737 = !DILocation(line: 454, column: 7, scope: !11733)
!11738 = !DILocation(line: 455, column: 4, scope: !11732)
!11739 = !DILocation(line: 456, column: 2, scope: !11733)
!11740 = !DILocation(line: 452, column: 59, scope: !11741)
!11741 = !DILexicalBlockFile(scope: !11729, file: !243, discriminator: 2)
!11742 = !DILocation(line: 452, column: 69, scope: !11741)
!11743 = !DILocation(line: 452, column: 57, scope: !11741)
!11744 = !DILocation(line: 452, column: 2, scope: !11741)
!11745 = distinct !{!11745, !11746}
!11746 = !DILocation(line: 452, column: 2, scope: !11681)
!11747 = !DILocation(line: 458, column: 6, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11681, file: !243, line: 458, column: 6)
!11749 = !DILocation(line: 458, column: 6, scope: !11681)
!11750 = !DILocation(line: 459, column: 22, scope: !11748)
!11751 = !DILocation(line: 459, column: 26, scope: !11748)
!11752 = !DILocation(line: 459, column: 3, scope: !11748)
!11753 = !DILocation(line: 459, column: 13, scope: !11748)
!11754 = !DILocation(line: 459, column: 20, scope: !11748)
!11755 = !DILocation(line: 461, column: 15, scope: !11681)
!11756 = !DILocation(line: 461, column: 2, scope: !11681)
!11757 = !DILocation(line: 461, column: 6, scope: !11681)
!11758 = !DILocation(line: 461, column: 13, scope: !11681)
!11759 = !DILocation(line: 462, column: 1, scope: !11681)
!11760 = distinct !DISubprogram(name: "ui_seamless_settitle", scope: !243, file: !243, line: 4852, type: !11761, isLocal: false, isDefinition: true, scopeLine: 4853, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11761 = !DISubroutineType(types: !11762)
!11762 = !{null, !81, !11174, !81}
!11763 = !DILocalVariable(name: "id", arg: 1, scope: !11760, file: !243, line: 4852, type: !81)
!11764 = !DILocation(line: 4852, column: 36, scope: !11760)
!11765 = !DILocalVariable(name: "title", arg: 2, scope: !11760, file: !243, line: 4852, type: !11174)
!11766 = !DILocation(line: 4852, column: 52, scope: !11760)
!11767 = !DILocalVariable(name: "flags", arg: 3, scope: !11760, file: !243, line: 4852, type: !81)
!11768 = !DILocation(line: 4852, column: 73, scope: !11760)
!11769 = !DILocation(line: 4854, column: 9, scope: !11760)
!11770 = !DILocalVariable(name: "sw", scope: !11760, file: !243, line: 4856, type: !360)
!11771 = !DILocation(line: 4856, column: 19, scope: !11760)
!11772 = !DILocation(line: 4858, column: 7, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11760, file: !243, line: 4858, column: 6)
!11774 = !DILocation(line: 4858, column: 6, scope: !11760)
!11775 = !DILocation(line: 4859, column: 3, scope: !11773)
!11776 = !DILocation(line: 4861, column: 27, scope: !11760)
!11777 = !DILocation(line: 4861, column: 7, scope: !11760)
!11778 = !DILocation(line: 4861, column: 5, scope: !11760)
!11779 = !DILocation(line: 4862, column: 7, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11760, file: !243, line: 4862, column: 6)
!11781 = !DILocation(line: 4862, column: 6, scope: !11760)
!11782 = !DILocation(line: 4864, column: 83, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11780, file: !243, line: 4863, column: 2)
!11784 = !DILocation(line: 4864, column: 3, scope: !11783)
!11785 = !DILocation(line: 4865, column: 3, scope: !11783)
!11786 = !DILocation(line: 4869, column: 13, scope: !11760)
!11787 = !DILocation(line: 4869, column: 24, scope: !11760)
!11788 = !DILocation(line: 4869, column: 28, scope: !11760)
!11789 = !DILocation(line: 4869, column: 33, scope: !11760)
!11790 = !DILocation(line: 4869, column: 2, scope: !11760)
!11791 = !DILocation(line: 4870, column: 19, scope: !11760)
!11792 = !DILocation(line: 4870, column: 23, scope: !11760)
!11793 = !DILocation(line: 4870, column: 28, scope: !11760)
!11794 = !DILocation(line: 4870, column: 2, scope: !11760)
!11795 = !DILocation(line: 4871, column: 1, scope: !11760)
!11796 = !DILocation(line: 4871, column: 1, scope: !11797)
!11797 = !DILexicalBlockFile(scope: !11760, file: !243, discriminator: 1)
!11798 = distinct !DISubprogram(name: "ui_seamless_setstate", scope: !243, file: !243, line: 4875, type: !11799, isLocal: false, isDefinition: true, scopeLine: 4876, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11799 = !DISubroutineType(types: !11800)
!11800 = !{null, !81, !117, !81}
!11801 = !DILocalVariable(name: "id", arg: 1, scope: !11798, file: !243, line: 4875, type: !81)
!11802 = !DILocation(line: 4875, column: 36, scope: !11798)
!11803 = !DILocalVariable(name: "state", arg: 2, scope: !11798, file: !243, line: 4875, type: !117)
!11804 = !DILocation(line: 4875, column: 53, scope: !11798)
!11805 = !DILocalVariable(name: "flags", arg: 3, scope: !11798, file: !243, line: 4875, type: !81)
!11806 = !DILocation(line: 4875, column: 74, scope: !11798)
!11807 = !DILocation(line: 4877, column: 9, scope: !11798)
!11808 = !DILocalVariable(name: "sw", scope: !11798, file: !243, line: 4879, type: !360)
!11809 = !DILocation(line: 4879, column: 19, scope: !11798)
!11810 = !DILocation(line: 4881, column: 7, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11798, file: !243, line: 4881, column: 6)
!11812 = !DILocation(line: 4881, column: 6, scope: !11798)
!11813 = !DILocation(line: 4882, column: 3, scope: !11811)
!11814 = !DILocation(line: 4884, column: 27, scope: !11798)
!11815 = !DILocation(line: 4884, column: 7, scope: !11798)
!11816 = !DILocation(line: 4884, column: 5, scope: !11798)
!11817 = !DILocation(line: 4885, column: 7, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11798, file: !243, line: 4885, column: 6)
!11819 = !DILocation(line: 4885, column: 6, scope: !11798)
!11820 = !DILocation(line: 4887, column: 83, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11818, file: !243, line: 4886, column: 2)
!11822 = !DILocation(line: 4887, column: 3, scope: !11821)
!11823 = !DILocation(line: 4888, column: 3, scope: !11821)
!11824 = !DILocation(line: 4891, column: 10, scope: !11798)
!11825 = !DILocation(line: 4891, column: 2, scope: !11798)
!11826 = !DILocation(line: 4895, column: 22, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11798, file: !243, line: 4892, column: 2)
!11828 = !DILocation(line: 4895, column: 26, scope: !11827)
!11829 = !DILocation(line: 4895, column: 31, scope: !11827)
!11830 = !DILocation(line: 4895, column: 4, scope: !11827)
!11831 = !DILocation(line: 4896, column: 15, scope: !11827)
!11832 = !DILocation(line: 4896, column: 26, scope: !11827)
!11833 = !DILocation(line: 4896, column: 30, scope: !11827)
!11834 = !DILocation(line: 4896, column: 4, scope: !11827)
!11835 = !DILocation(line: 4897, column: 4, scope: !11827)
!11836 = !DILocation(line: 4904, column: 8, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11827, file: !243, line: 4904, column: 8)
!11838 = !DILocation(line: 4904, column: 12, scope: !11837)
!11839 = !DILocation(line: 4904, column: 18, scope: !11837)
!11840 = !DILocation(line: 4904, column: 8, scope: !11827)
!11841 = !DILocalVariable(name: "hints", scope: !11842, file: !243, line: 4906, type: !10764)
!11842 = distinct !DILexicalBlock(scope: !11837, file: !243, line: 4905, column: 4)
!11843 = !DILocation(line: 4906, column: 15, scope: !11842)
!11844 = !DILocation(line: 4907, column: 25, scope: !11842)
!11845 = !DILocation(line: 4907, column: 36, scope: !11842)
!11846 = !DILocation(line: 4907, column: 40, scope: !11842)
!11847 = !DILocation(line: 4907, column: 13, scope: !11842)
!11848 = !DILocation(line: 4907, column: 11, scope: !11842)
!11849 = !DILocation(line: 4908, column: 9, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11842, file: !243, line: 4908, column: 9)
!11851 = !DILocation(line: 4908, column: 9, scope: !11842)
!11852 = !DILocation(line: 4910, column: 6, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11850, file: !243, line: 4909, column: 5)
!11854 = !DILocation(line: 4910, column: 13, scope: !11853)
!11855 = !DILocation(line: 4910, column: 19, scope: !11853)
!11856 = !DILocation(line: 4911, column: 6, scope: !11853)
!11857 = !DILocation(line: 4911, column: 13, scope: !11853)
!11858 = !DILocation(line: 4911, column: 27, scope: !11853)
!11859 = !DILocation(line: 4912, column: 18, scope: !11853)
!11860 = !DILocation(line: 4912, column: 29, scope: !11853)
!11861 = !DILocation(line: 4912, column: 33, scope: !11853)
!11862 = !DILocation(line: 4912, column: 38, scope: !11853)
!11863 = !DILocation(line: 4912, column: 6, scope: !11853)
!11864 = !DILocation(line: 4913, column: 12, scope: !11853)
!11865 = !DILocation(line: 4913, column: 6, scope: !11853)
!11866 = !DILocation(line: 4914, column: 5, scope: !11853)
!11867 = !DILocation(line: 4915, column: 16, scope: !11842)
!11868 = !DILocation(line: 4915, column: 27, scope: !11842)
!11869 = !DILocation(line: 4915, column: 31, scope: !11842)
!11870 = !DILocation(line: 4915, column: 5, scope: !11842)
!11871 = !DILocation(line: 4916, column: 4, scope: !11842)
!11872 = !DILocation(line: 4918, column: 20, scope: !11837)
!11873 = !DILocation(line: 4918, column: 31, scope: !11837)
!11874 = !DILocation(line: 4918, column: 35, scope: !11837)
!11875 = !DILocation(line: 4918, column: 39, scope: !11837)
!11876 = !DILocation(line: 4918, column: 42, scope: !11837)
!11877 = !DILocation(line: 4918, column: 5, scope: !11837)
!11878 = !DILocation(line: 4919, column: 4, scope: !11827)
!11879 = !DILocation(line: 4921, column: 69, scope: !11827)
!11880 = !DILocation(line: 4921, column: 4, scope: !11827)
!11881 = !DILocation(line: 4922, column: 4, scope: !11827)
!11882 = !DILocation(line: 4925, column: 14, scope: !11798)
!11883 = !DILocation(line: 4925, column: 2, scope: !11798)
!11884 = !DILocation(line: 4925, column: 6, scope: !11798)
!11885 = !DILocation(line: 4925, column: 12, scope: !11798)
!11886 = !DILocation(line: 4926, column: 1, scope: !11798)
!11887 = !DILocation(line: 4926, column: 1, scope: !11888)
!11888 = !DILexicalBlockFile(scope: !11798, file: !243, discriminator: 1)
!11889 = distinct !DISubprogram(name: "ui_seamless_syncbegin", scope: !243, file: !243, line: 4930, type: !11890, isLocal: false, isDefinition: true, scopeLine: 4931, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11890 = !DISubroutineType(types: !11891)
!11891 = !{null, !81}
!11892 = !DILocalVariable(name: "flags", arg: 1, scope: !11889, file: !243, line: 4930, type: !81)
!11893 = !DILocation(line: 4930, column: 37, scope: !11889)
!11894 = !DILocation(line: 4932, column: 9, scope: !11889)
!11895 = !DILocation(line: 4934, column: 7, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11889, file: !243, line: 4934, column: 6)
!11897 = !DILocation(line: 4934, column: 6, scope: !11889)
!11898 = !DILocation(line: 4935, column: 3, scope: !11896)
!11899 = !DILocation(line: 4938, column: 2, scope: !11889)
!11900 = !DILocation(line: 4938, column: 9, scope: !11901)
!11901 = !DILexicalBlockFile(scope: !11889, file: !243, discriminator: 1)
!11902 = !DILocation(line: 4938, column: 2, scope: !11901)
!11903 = !DILocation(line: 4940, column: 18, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11889, file: !243, line: 4939, column: 2)
!11905 = !DILocation(line: 4940, column: 29, scope: !11904)
!11906 = !DILocation(line: 4940, column: 49, scope: !11904)
!11907 = !DILocation(line: 4940, column: 3, scope: !11904)
!11908 = !DILocation(line: 4941, column: 20, scope: !11904)
!11909 = !DILocation(line: 4941, column: 3, scope: !11904)
!11910 = !DILocation(line: 4938, column: 2, scope: !11911)
!11911 = !DILexicalBlockFile(scope: !11889, file: !243, discriminator: 2)
!11912 = distinct !{!11912, !11899}
!11913 = !DILocation(line: 4943, column: 1, scope: !11889)
!11914 = distinct !DISubprogram(name: "ui_seamless_ack", scope: !243, file: !243, line: 4947, type: !11915, isLocal: false, isDefinition: true, scopeLine: 4948, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11915 = !DISubroutineType(types: !11916)
!11916 = !{null, !117}
!11917 = !DILocalVariable(name: "serial", arg: 1, scope: !11914, file: !243, line: 4947, type: !117)
!11918 = !DILocation(line: 4947, column: 30, scope: !11914)
!11919 = !DILocalVariable(name: "sw", scope: !11914, file: !243, line: 4949, type: !360)
!11920 = !DILocation(line: 4949, column: 19, scope: !11914)
!11921 = !DILocation(line: 4950, column: 12, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11914, file: !243, line: 4950, column: 2)
!11923 = !DILocation(line: 4950, column: 10, scope: !11922)
!11924 = !DILocation(line: 4950, column: 7, scope: !11922)
!11925 = !DILocation(line: 4950, column: 32, scope: !11926)
!11926 = !DILexicalBlockFile(scope: !11927, file: !243, discriminator: 1)
!11927 = distinct !DILexicalBlock(scope: !11922, file: !243, line: 4950, column: 2)
!11928 = !DILocation(line: 4950, column: 2, scope: !11926)
!11929 = !DILocation(line: 4952, column: 7, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11931, file: !243, line: 4952, column: 7)
!11931 = distinct !DILexicalBlock(scope: !11927, file: !243, line: 4951, column: 2)
!11932 = !DILocation(line: 4952, column: 11, scope: !11930)
!11933 = !DILocation(line: 4952, column: 32, scope: !11930)
!11934 = !DILocation(line: 4952, column: 36, scope: !11935)
!11935 = !DILexicalBlockFile(scope: !11930, file: !243, discriminator: 1)
!11936 = !DILocation(line: 4952, column: 40, scope: !11935)
!11937 = !DILocation(line: 4952, column: 57, scope: !11935)
!11938 = !DILocation(line: 4952, column: 54, scope: !11935)
!11939 = !DILocation(line: 4952, column: 7, scope: !11935)
!11940 = !DILocation(line: 4954, column: 18, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11930, file: !243, line: 4953, column: 3)
!11942 = !DILocation(line: 4954, column: 22, scope: !11941)
!11943 = !DILocation(line: 4954, column: 4, scope: !11941)
!11944 = !DILocation(line: 4954, column: 8, scope: !11941)
!11945 = !DILocation(line: 4954, column: 16, scope: !11941)
!11946 = !DILocation(line: 4955, column: 18, scope: !11941)
!11947 = !DILocation(line: 4955, column: 22, scope: !11941)
!11948 = !DILocation(line: 4955, column: 4, scope: !11941)
!11949 = !DILocation(line: 4955, column: 8, scope: !11941)
!11950 = !DILocation(line: 4955, column: 16, scope: !11941)
!11951 = !DILocation(line: 4956, column: 16, scope: !11941)
!11952 = !DILocation(line: 4956, column: 20, scope: !11941)
!11953 = !DILocation(line: 4956, column: 4, scope: !11941)
!11954 = !DILocation(line: 4956, column: 8, scope: !11941)
!11955 = !DILocation(line: 4956, column: 14, scope: !11941)
!11956 = !DILocation(line: 4957, column: 17, scope: !11941)
!11957 = !DILocation(line: 4957, column: 21, scope: !11941)
!11958 = !DILocation(line: 4957, column: 4, scope: !11941)
!11959 = !DILocation(line: 4957, column: 8, scope: !11941)
!11960 = !DILocation(line: 4957, column: 15, scope: !11941)
!11961 = !DILocation(line: 4958, column: 4, scope: !11941)
!11962 = !DILocation(line: 4958, column: 8, scope: !11941)
!11963 = !DILocation(line: 4958, column: 29, scope: !11941)
!11964 = !DILocation(line: 4963, column: 14, scope: !11941)
!11965 = !DILocation(line: 4963, column: 25, scope: !11941)
!11966 = !DILocation(line: 4964, column: 7, scope: !11941)
!11967 = !DILocation(line: 4964, column: 11, scope: !11941)
!11968 = !DILocation(line: 4964, column: 16, scope: !11941)
!11969 = !DILocation(line: 4965, column: 7, scope: !11941)
!11970 = !DILocation(line: 4965, column: 11, scope: !11941)
!11971 = !DILocation(line: 4965, column: 20, scope: !11941)
!11972 = !DILocation(line: 4965, column: 24, scope: !11941)
!11973 = !DILocation(line: 4965, column: 33, scope: !11941)
!11974 = !DILocation(line: 4965, column: 37, scope: !11941)
!11975 = !DILocation(line: 4965, column: 44, scope: !11941)
!11976 = !DILocation(line: 4965, column: 48, scope: !11941)
!11977 = !DILocation(line: 4963, column: 4, scope: !11941)
!11978 = !DILocation(line: 4967, column: 4, scope: !11941)
!11979 = !DILocation(line: 4969, column: 2, scope: !11931)
!11980 = !DILocation(line: 4950, column: 41, scope: !11981)
!11981 = !DILexicalBlockFile(scope: !11927, file: !243, discriminator: 2)
!11982 = !DILocation(line: 4950, column: 45, scope: !11981)
!11983 = !DILocation(line: 4950, column: 39, scope: !11981)
!11984 = !DILocation(line: 4950, column: 2, scope: !11981)
!11985 = distinct !{!11985, !11986}
!11986 = !DILocation(line: 4950, column: 2, scope: !11914)
!11987 = !DILocation(line: 4970, column: 1, scope: !11914)
!11988 = distinct !DISubprogram(name: "calculate_mask_weight", scope: !243, file: !243, line: 1629, type: !11989, isLocal: true, isDefinition: true, scopeLine: 1630, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!11989 = !DISubroutineType(types: !11990)
!11990 = !{!117, !193}
!11991 = !DILocalVariable(name: "mask", arg: 1, scope: !11988, file: !243, line: 1629, type: !193)
!11992 = !DILocation(line: 1629, column: 30, scope: !11988)
!11993 = !DILocalVariable(name: "weight", scope: !11988, file: !243, line: 1631, type: !117)
!11994 = !DILocation(line: 1631, column: 11, scope: !11988)
!11995 = !DILocation(line: 1632, column: 2, scope: !11988)
!11996 = distinct !{!11996, !11995}
!11997 = !DILocation(line: 1634, column: 14, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11988, file: !243, line: 1633, column: 2)
!11999 = !DILocation(line: 1634, column: 19, scope: !11998)
!12000 = !DILocation(line: 1634, column: 10, scope: !11998)
!12001 = !DILocation(line: 1635, column: 2, scope: !11998)
!12002 = !DILocation(line: 1636, column: 14, scope: !11988)
!12003 = !DILocation(line: 1635, column: 2, scope: !12004)
!12004 = !DILexicalBlockFile(scope: !11998, file: !243, discriminator: 1)
!12005 = !DILocation(line: 1637, column: 9, scope: !11988)
!12006 = !DILocation(line: 1637, column: 2, scope: !11988)
!12007 = distinct !DISubprogram(name: "calculate_shifts", scope: !243, file: !243, line: 1618, type: !12008, isLocal: true, isDefinition: true, scopeLine: 1619, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!12008 = !DISubroutineType(types: !12009)
!12009 = !{null, !193, !12010, !12010}
!12010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!12011 = !DILocalVariable(name: "mask", arg: 1, scope: !12007, file: !243, line: 1618, type: !193)
!12012 = !DILocation(line: 1618, column: 25, scope: !12007)
!12013 = !DILocalVariable(name: "shift_r", arg: 2, scope: !12007, file: !243, line: 1618, type: !12010)
!12014 = !DILocation(line: 1618, column: 36, scope: !12007)
!12015 = !DILocalVariable(name: "shift_l", arg: 3, scope: !12007, file: !243, line: 1618, type: !12010)
!12016 = !DILocation(line: 1618, column: 50, scope: !12007)
!12017 = !DILocation(line: 1620, column: 17, scope: !12007)
!12018 = !DILocation(line: 1620, column: 13, scope: !12007)
!12019 = !DILocation(line: 1620, column: 23, scope: !12007)
!12020 = !DILocation(line: 1620, column: 3, scope: !12007)
!12021 = !DILocation(line: 1620, column: 11, scope: !12007)
!12022 = !DILocation(line: 1621, column: 12, scope: !12007)
!12023 = !DILocation(line: 1621, column: 11, scope: !12007)
!12024 = !DILocation(line: 1621, column: 7, scope: !12007)
!12025 = !DILocation(line: 1622, column: 21, scope: !12007)
!12026 = !DILocation(line: 1622, column: 30, scope: !12007)
!12027 = !DILocation(line: 1622, column: 35, scope: !12007)
!12028 = !DILocation(line: 1622, column: 28, scope: !12007)
!12029 = !DILocation(line: 1622, column: 26, scope: !12007)
!12030 = !DILocation(line: 1622, column: 17, scope: !12007)
!12031 = !DILocation(line: 1622, column: 15, scope: !12007)
!12032 = !DILocation(line: 1622, column: 3, scope: !12007)
!12033 = !DILocation(line: 1622, column: 11, scope: !12007)
!12034 = !DILocation(line: 1623, column: 1, scope: !12007)
!12035 = distinct !DISubprogram(name: "seamless_restack_test", scope: !243, file: !243, line: 717, type: !254, isLocal: true, isDefinition: true, scopeLine: 718, isOptimized: false, unit: !0, variables: !256)
!12036 = !DILocalVariable(name: "wnds", scope: !12035, file: !243, line: 722, type: !12037)
!12037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 192, align: 64, elements: !12038)
!12038 = !{!12039}
!12039 = !DISubrange(count: 3)
!12040 = !DILocation(line: 722, column: 9, scope: !12035)
!12041 = !DILocalVariable(name: "i", scope: !12035, file: !243, line: 723, type: !45)
!12042 = !DILocation(line: 723, column: 6, scope: !12035)
!12043 = !DILocalVariable(name: "xevent", scope: !12035, file: !243, line: 724, type: !1408)
!12044 = !DILocation(line: 724, column: 9, scope: !12035)
!12045 = !DILocalVariable(name: "values", scope: !12035, file: !243, line: 725, type: !11507)
!12046 = !DILocation(line: 725, column: 17, scope: !12035)
!12047 = !DILocalVariable(name: "restack_serial", scope: !12035, file: !243, line: 726, type: !81)
!12048 = !DILocation(line: 726, column: 16, scope: !12035)
!12049 = !DILocation(line: 728, column: 9, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12035, file: !243, line: 728, column: 2)
!12051 = !DILocation(line: 728, column: 7, scope: !12050)
!12052 = !DILocation(line: 728, column: 14, scope: !12053)
!12053 = !DILexicalBlockFile(scope: !12054, file: !243, discriminator: 1)
!12054 = distinct !DILexicalBlock(scope: !12050, file: !243, line: 728, column: 2)
!12055 = !DILocation(line: 728, column: 16, scope: !12053)
!12056 = !DILocation(line: 728, column: 2, scope: !12053)
!12057 = !DILocalVariable(name: "name", scope: !12058, file: !243, line: 730, type: !2141)
!12058 = distinct !DILexicalBlock(scope: !12054, file: !243, line: 729, column: 2)
!12059 = !DILocation(line: 730, column: 8, scope: !12058)
!12060 = !DILocation(line: 732, column: 24, scope: !12058)
!12061 = !DILocation(line: 732, column: 34, scope: !12058)
!12062 = !DILocation(line: 732, column: 37, scope: !12058)
!12063 = !DILocation(line: 732, column: 4, scope: !12058)
!12064 = !DILocation(line: 731, column: 8, scope: !12058)
!12065 = !DILocation(line: 731, column: 3, scope: !12058)
!12066 = !DILocation(line: 731, column: 11, scope: !12058)
!12067 = !DILocation(line: 734, column: 12, scope: !12058)
!12068 = !DILocation(line: 734, column: 72, scope: !12058)
!12069 = !DILocation(line: 734, column: 3, scope: !12058)
!12070 = !DILocation(line: 735, column: 14, scope: !12058)
!12071 = !DILocation(line: 735, column: 30, scope: !12058)
!12072 = !DILocation(line: 735, column: 25, scope: !12058)
!12073 = !DILocation(line: 735, column: 34, scope: !12058)
!12074 = !DILocation(line: 735, column: 3, scope: !12058)
!12075 = !DILocation(line: 736, column: 25, scope: !12058)
!12076 = !DILocation(line: 736, column: 20, scope: !12058)
!12077 = !DILocation(line: 736, column: 29, scope: !12058)
!12078 = !DILocation(line: 736, column: 3, scope: !12058)
!12079 = !DILocation(line: 743, column: 29, scope: !12058)
!12080 = !DILocation(line: 743, column: 24, scope: !12058)
!12081 = !DILocation(line: 743, column: 3, scope: !12058)
!12082 = !DILocation(line: 746, column: 24, scope: !12058)
!12083 = !DILocation(line: 746, column: 40, scope: !12058)
!12084 = !DILocation(line: 746, column: 35, scope: !12058)
!12085 = !DILocation(line: 746, column: 43, scope: !12058)
!12086 = !DILocation(line: 746, column: 46, scope: !12058)
!12087 = !DILocation(line: 746, column: 3, scope: !12058)
!12088 = !DILocation(line: 747, column: 30, scope: !12058)
!12089 = !DILocation(line: 747, column: 25, scope: !12058)
!12090 = !DILocation(line: 747, column: 3, scope: !12058)
!12091 = !DILocation(line: 750, column: 16, scope: !12058)
!12092 = !DILocation(line: 750, column: 32, scope: !12058)
!12093 = !DILocation(line: 750, column: 27, scope: !12058)
!12094 = !DILocation(line: 750, column: 3, scope: !12058)
!12095 = !DILocation(line: 751, column: 2, scope: !12058)
!12096 = !DILocation(line: 728, column: 22, scope: !12097)
!12097 = !DILexicalBlockFile(scope: !12054, file: !243, discriminator: 2)
!12098 = !DILocation(line: 728, column: 2, scope: !12097)
!12099 = distinct !{!12099, !12100}
!12100 = !DILocation(line: 728, column: 2, scope: !12035)
!12101 = !DILocation(line: 756, column: 13, scope: !12035)
!12102 = !DILocation(line: 756, column: 24, scope: !12035)
!12103 = !DILocation(line: 756, column: 2, scope: !12035)
!12104 = !DILocation(line: 757, column: 2, scope: !12035)
!12105 = distinct !{!12105, !12104}
!12106 = !DILocation(line: 759, column: 16, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12035, file: !243, line: 758, column: 2)
!12108 = !DILocation(line: 759, column: 27, scope: !12107)
!12109 = !DILocation(line: 759, column: 3, scope: !12107)
!12110 = !DILocation(line: 760, column: 2, scope: !12107)
!12111 = !DILocation(line: 761, column: 16, scope: !12035)
!12112 = !DILocation(line: 761, column: 21, scope: !12035)
!12113 = !DILocation(line: 760, column: 2, scope: !12114)
!12114 = !DILexicalBlockFile(scope: !12107, file: !243, discriminator: 1)
!12115 = !DILocation(line: 762, column: 13, scope: !12035)
!12116 = !DILocation(line: 762, column: 24, scope: !12035)
!12117 = !DILocation(line: 762, column: 2, scope: !12035)
!12118 = !DILocation(line: 763, column: 2, scope: !12035)
!12119 = distinct !{!12119, !12118}
!12120 = !DILocation(line: 765, column: 16, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12035, file: !243, line: 764, column: 2)
!12122 = !DILocation(line: 765, column: 27, scope: !12121)
!12123 = !DILocation(line: 765, column: 3, scope: !12121)
!12124 = !DILocation(line: 766, column: 2, scope: !12121)
!12125 = !DILocation(line: 767, column: 16, scope: !12035)
!12126 = !DILocation(line: 767, column: 21, scope: !12035)
!12127 = !DILocation(line: 766, column: 2, scope: !12128)
!12128 = !DILexicalBlockFile(scope: !12121, file: !243, discriminator: 1)
!12129 = !DILocation(line: 768, column: 13, scope: !12035)
!12130 = !DILocation(line: 768, column: 24, scope: !12035)
!12131 = !DILocation(line: 768, column: 2, scope: !12035)
!12132 = !DILocation(line: 769, column: 2, scope: !12035)
!12133 = distinct !{!12133, !12132}
!12134 = !DILocation(line: 771, column: 16, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12035, file: !243, line: 770, column: 2)
!12136 = !DILocation(line: 771, column: 27, scope: !12135)
!12137 = !DILocation(line: 771, column: 3, scope: !12135)
!12138 = !DILocation(line: 772, column: 2, scope: !12135)
!12139 = !DILocation(line: 773, column: 16, scope: !12035)
!12140 = !DILocation(line: 773, column: 21, scope: !12035)
!12141 = !DILocation(line: 772, column: 2, scope: !12142)
!12142 = !DILexicalBlockFile(scope: !12135, file: !243, discriminator: 1)
!12143 = !DILocation(line: 776, column: 27, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12035, file: !243, line: 776, column: 6)
!12145 = !DILocation(line: 776, column: 36, scope: !12144)
!12146 = !DILocation(line: 776, column: 7, scope: !12144)
!12147 = !DILocation(line: 776, column: 45, scope: !12144)
!12148 = !DILocation(line: 776, column: 69, scope: !12149)
!12149 = !DILexicalBlockFile(scope: !12144, file: !243, discriminator: 1)
!12150 = !DILocation(line: 776, column: 78, scope: !12149)
!12151 = !DILocation(line: 776, column: 49, scope: !12149)
!12152 = !DILocation(line: 776, column: 6, scope: !12149)
!12153 = !DILocation(line: 779, column: 3, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12144, file: !243, line: 777, column: 2)
!12155 = !DILocation(line: 780, column: 29, scope: !12154)
!12156 = !DILocation(line: 781, column: 10, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12154, file: !243, line: 781, column: 3)
!12158 = !DILocation(line: 781, column: 8, scope: !12157)
!12159 = !DILocation(line: 781, column: 15, scope: !12160)
!12160 = !DILexicalBlockFile(scope: !12161, file: !243, discriminator: 1)
!12161 = distinct !DILexicalBlock(scope: !12157, file: !243, line: 781, column: 3)
!12162 = !DILocation(line: 781, column: 17, scope: !12160)
!12163 = !DILocation(line: 781, column: 3, scope: !12160)
!12164 = !DILocation(line: 782, column: 19, scope: !12161)
!12165 = !DILocation(line: 782, column: 35, scope: !12161)
!12166 = !DILocation(line: 782, column: 30, scope: !12161)
!12167 = !DILocation(line: 782, column: 4, scope: !12161)
!12168 = !DILocation(line: 781, column: 23, scope: !12169)
!12169 = !DILexicalBlockFile(scope: !12161, file: !243, discriminator: 2)
!12170 = !DILocation(line: 781, column: 3, scope: !12169)
!12171 = distinct !{!12171, !12172}
!12172 = !DILocation(line: 781, column: 3, scope: !12154)
!12173 = !DILocation(line: 783, column: 3, scope: !12154)
!12174 = !DILocation(line: 788, column: 9, scope: !12035)
!12175 = !DILocation(line: 788, column: 20, scope: !12035)
!12176 = !DILocation(line: 789, column: 19, scope: !12035)
!12177 = !DILocation(line: 789, column: 9, scope: !12035)
!12178 = !DILocation(line: 789, column: 17, scope: !12035)
!12179 = !DILocation(line: 790, column: 32, scope: !12035)
!12180 = !DILocation(line: 790, column: 19, scope: !12035)
!12181 = !DILocation(line: 790, column: 17, scope: !12035)
!12182 = !DILocation(line: 791, column: 23, scope: !12035)
!12183 = !DILocation(line: 791, column: 34, scope: !12035)
!12184 = !DILocation(line: 791, column: 42, scope: !12035)
!12185 = !DILocation(line: 791, column: 45, scope: !12035)
!12186 = !DILocation(line: 791, column: 2, scope: !12035)
!12187 = !DILocation(line: 793, column: 26, scope: !12035)
!12188 = !DILocation(line: 793, column: 35, scope: !12035)
!12189 = !DILocation(line: 793, column: 2, scope: !12035)
!12190 = !DILocation(line: 797, column: 27, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12035, file: !243, line: 797, column: 6)
!12192 = !DILocation(line: 797, column: 36, scope: !12191)
!12193 = !DILocation(line: 797, column: 7, scope: !12191)
!12194 = !DILocation(line: 797, column: 6, scope: !12035)
!12195 = !DILocation(line: 799, column: 3, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12191, file: !243, line: 798, column: 2)
!12197 = !DILocation(line: 801, column: 29, scope: !12196)
!12198 = !DILocation(line: 802, column: 2, scope: !12196)
!12199 = !DILocation(line: 803, column: 31, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12191, file: !243, line: 803, column: 11)
!12201 = !DILocation(line: 803, column: 40, scope: !12200)
!12202 = !DILocation(line: 803, column: 11, scope: !12200)
!12203 = !DILocation(line: 803, column: 11, scope: !12191)
!12204 = !DILocation(line: 805, column: 3, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12200, file: !243, line: 804, column: 2)
!12206 = !DILocation(line: 807, column: 29, scope: !12205)
!12207 = !DILocation(line: 808, column: 2, scope: !12205)
!12208 = !DILocation(line: 811, column: 9, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12035, file: !243, line: 811, column: 2)
!12210 = !DILocation(line: 811, column: 7, scope: !12209)
!12211 = !DILocation(line: 811, column: 14, scope: !12212)
!12212 = !DILexicalBlockFile(scope: !12213, file: !243, discriminator: 1)
!12213 = distinct !DILexicalBlock(scope: !12209, file: !243, line: 811, column: 2)
!12214 = !DILocation(line: 811, column: 16, scope: !12212)
!12215 = !DILocation(line: 811, column: 2, scope: !12212)
!12216 = !DILocation(line: 813, column: 18, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12213, file: !243, line: 812, column: 2)
!12218 = !DILocation(line: 813, column: 34, scope: !12217)
!12219 = !DILocation(line: 813, column: 29, scope: !12217)
!12220 = !DILocation(line: 813, column: 3, scope: !12217)
!12221 = !DILocation(line: 814, column: 3, scope: !12217)
!12222 = distinct !{!12222, !12221}
!12223 = !DILocation(line: 816, column: 17, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12217, file: !243, line: 815, column: 3)
!12225 = !DILocation(line: 816, column: 33, scope: !12224)
!12226 = !DILocation(line: 816, column: 28, scope: !12224)
!12227 = !DILocation(line: 816, column: 4, scope: !12224)
!12228 = !DILocation(line: 817, column: 3, scope: !12224)
!12229 = !DILocation(line: 818, column: 17, scope: !12217)
!12230 = !DILocation(line: 818, column: 22, scope: !12217)
!12231 = !DILocation(line: 817, column: 3, scope: !12232)
!12232 = !DILexicalBlockFile(scope: !12224, file: !243, discriminator: 1)
!12233 = !DILocation(line: 819, column: 2, scope: !12217)
!12234 = !DILocation(line: 811, column: 22, scope: !12235)
!12235 = !DILexicalBlockFile(scope: !12213, file: !243, discriminator: 2)
!12236 = !DILocation(line: 811, column: 2, scope: !12235)
!12237 = distinct !{!12237, !12238}
!12238 = !DILocation(line: 811, column: 2, scope: !12035)
!12239 = !DILocation(line: 820, column: 1, scope: !12035)
!12240 = distinct !DISubprogram(name: "sw_window_is_behind", scope: !243, file: !243, line: 665, type: !12241, isLocal: true, isDefinition: true, scopeLine: 666, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!12241 = !DISubroutineType(types: !12242)
!12242 = !{!44, !136, !136}
!12243 = !DILocalVariable(name: "wnd", arg: 1, scope: !12240, file: !243, line: 665, type: !136)
!12244 = !DILocation(line: 665, column: 28, scope: !12240)
!12245 = !DILocalVariable(name: "behind", arg: 2, scope: !12240, file: !243, line: 665, type: !136)
!12246 = !DILocation(line: 665, column: 40, scope: !12240)
!12247 = !DILocalVariable(name: "dummy1", scope: !12240, file: !243, line: 667, type: !136)
!12248 = !DILocation(line: 667, column: 9, scope: !12240)
!12249 = !DILocalVariable(name: "dummy2", scope: !12240, file: !243, line: 667, type: !136)
!12250 = !DILocation(line: 667, column: 17, scope: !12240)
!12251 = !DILocalVariable(name: "child_list", scope: !12240, file: !243, line: 668, type: !12252)
!12252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64, align: 64)
!12253 = !DILocation(line: 668, column: 10, scope: !12240)
!12254 = !DILocalVariable(name: "num_children", scope: !12240, file: !243, line: 669, type: !117)
!12255 = !DILocation(line: 669, column: 15, scope: !12240)
!12256 = !DILocalVariable(name: "i", scope: !12240, file: !243, line: 670, type: !45)
!12257 = !DILocation(line: 670, column: 6, scope: !12240)
!12258 = !DILocalVariable(name: "found_behind", scope: !12240, file: !243, line: 671, type: !44)
!12259 = !DILocation(line: 671, column: 10, scope: !12240)
!12260 = !DILocalVariable(name: "found_wnd", scope: !12240, file: !243, line: 672, type: !44)
!12261 = !DILocation(line: 672, column: 10, scope: !12240)
!12262 = !DILocation(line: 674, column: 24, scope: !12240)
!12263 = !DILocation(line: 674, column: 8, scope: !12240)
!12264 = !DILocation(line: 674, column: 6, scope: !12240)
!12265 = !DILocation(line: 675, column: 27, scope: !12240)
!12266 = !DILocation(line: 675, column: 11, scope: !12240)
!12267 = !DILocation(line: 675, column: 9, scope: !12240)
!12268 = !DILocation(line: 677, column: 13, scope: !12240)
!12269 = !DILocation(line: 677, column: 23, scope: !12240)
!12270 = !DILocation(line: 677, column: 26, scope: !12240)
!12271 = !DILocation(line: 677, column: 2, scope: !12240)
!12272 = !DILocation(line: 680, column: 11, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12240, file: !243, line: 680, column: 2)
!12274 = !DILocation(line: 680, column: 24, scope: !12273)
!12275 = !DILocation(line: 680, column: 9, scope: !12273)
!12276 = !DILocation(line: 680, column: 7, scope: !12273)
!12277 = !DILocation(line: 680, column: 29, scope: !12278)
!12278 = !DILexicalBlockFile(scope: !12279, file: !243, discriminator: 1)
!12279 = distinct !DILexicalBlock(scope: !12273, file: !243, line: 680, column: 2)
!12280 = !DILocation(line: 680, column: 31, scope: !12278)
!12281 = !DILocation(line: 680, column: 2, scope: !12278)
!12282 = !DILocation(line: 682, column: 18, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12284, file: !243, line: 682, column: 7)
!12284 = distinct !DILexicalBlock(scope: !12279, file: !243, line: 681, column: 2)
!12285 = !DILocation(line: 682, column: 7, scope: !12283)
!12286 = !DILocation(line: 682, column: 24, scope: !12283)
!12287 = !DILocation(line: 682, column: 21, scope: !12283)
!12288 = !DILocation(line: 682, column: 7, scope: !12284)
!12289 = !DILocation(line: 684, column: 17, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12283, file: !243, line: 683, column: 3)
!12291 = !DILocation(line: 685, column: 3, scope: !12290)
!12292 = !DILocation(line: 686, column: 23, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12283, file: !243, line: 686, column: 12)
!12294 = !DILocation(line: 686, column: 12, scope: !12293)
!12295 = !DILocation(line: 686, column: 29, scope: !12293)
!12296 = !DILocation(line: 686, column: 26, scope: !12293)
!12297 = !DILocation(line: 686, column: 12, scope: !12283)
!12298 = !DILocation(line: 688, column: 14, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12293, file: !243, line: 687, column: 3)
!12300 = !DILocation(line: 689, column: 4, scope: !12299)
!12301 = !DILocation(line: 691, column: 2, scope: !12284)
!12302 = !DILocation(line: 680, column: 38, scope: !12303)
!12303 = !DILexicalBlockFile(scope: !12279, file: !243, discriminator: 2)
!12304 = !DILocation(line: 680, column: 2, scope: !12303)
!12305 = distinct !{!12305, !12306}
!12306 = !DILocation(line: 680, column: 2, scope: !12240)
!12307 = !DILocation(line: 693, column: 6, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12240, file: !243, line: 693, column: 6)
!12309 = !DILocation(line: 693, column: 6, scope: !12240)
!12310 = !DILocation(line: 694, column: 9, scope: !12308)
!12311 = !DILocation(line: 694, column: 3, scope: !12308)
!12312 = !DILocation(line: 696, column: 7, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12240, file: !243, line: 696, column: 6)
!12314 = !DILocation(line: 696, column: 6, scope: !12240)
!12315 = !DILocation(line: 698, column: 76, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12313, file: !243, line: 697, column: 2)
!12317 = !DILocation(line: 698, column: 3, scope: !12316)
!12318 = !DILocation(line: 700, column: 8, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12316, file: !243, line: 700, column: 7)
!12320 = !DILocation(line: 700, column: 7, scope: !12316)
!12321 = !DILocation(line: 703, column: 70, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12319, file: !243, line: 701, column: 3)
!12323 = !DILocation(line: 702, column: 4, scope: !12322)
!12324 = !DILocation(line: 704, column: 3, scope: !12322)
!12325 = !DILocation(line: 705, column: 2, scope: !12316)
!12326 = !DILocation(line: 707, column: 9, scope: !12240)
!12327 = !DILocation(line: 707, column: 2, scope: !12240)
!12328 = distinct !DISubprogram(name: "sw_get_toplevel", scope: !243, file: !243, line: 638, type: !12329, isLocal: true, isDefinition: true, scopeLine: 639, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!12329 = !DISubroutineType(types: !12330)
!12330 = !{!136, !136}
!12331 = !DILocalVariable(name: "wnd", arg: 1, scope: !12328, file: !243, line: 638, type: !136)
!12332 = !DILocation(line: 638, column: 24, scope: !12328)
!12333 = !DILocalVariable(name: "root", scope: !12328, file: !243, line: 640, type: !136)
!12334 = !DILocation(line: 640, column: 9, scope: !12328)
!12335 = !DILocalVariable(name: "parent", scope: !12328, file: !243, line: 640, type: !136)
!12336 = !DILocation(line: 640, column: 15, scope: !12328)
!12337 = !DILocalVariable(name: "child_list", scope: !12328, file: !243, line: 641, type: !12252)
!12338 = !DILocation(line: 641, column: 10, scope: !12328)
!12339 = !DILocalVariable(name: "num_children", scope: !12328, file: !243, line: 642, type: !117)
!12340 = !DILocation(line: 642, column: 15, scope: !12328)
!12341 = !DILocation(line: 644, column: 2, scope: !12328)
!12342 = !DILocation(line: 646, column: 14, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12328, file: !243, line: 645, column: 2)
!12344 = !DILocation(line: 646, column: 25, scope: !12343)
!12345 = !DILocation(line: 646, column: 3, scope: !12343)
!12346 = !DILocation(line: 647, column: 7, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12343, file: !243, line: 647, column: 7)
!12348 = !DILocation(line: 647, column: 15, scope: !12347)
!12349 = !DILocation(line: 647, column: 12, scope: !12347)
!12350 = !DILocation(line: 647, column: 7, scope: !12343)
!12351 = !DILocation(line: 649, column: 4, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12347, file: !243, line: 648, column: 3)
!12353 = !DILocation(line: 651, column: 13, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12347, file: !243, line: 651, column: 12)
!12355 = !DILocation(line: 651, column: 12, scope: !12347)
!12356 = !DILocation(line: 653, column: 4, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12354, file: !243, line: 652, column: 3)
!12358 = !DILocation(line: 654, column: 3, scope: !12357)
!12359 = !DILocation(line: 656, column: 9, scope: !12343)
!12360 = !DILocation(line: 656, column: 7, scope: !12343)
!12361 = !DILocation(line: 644, column: 2, scope: !12362)
!12362 = !DILexicalBlockFile(scope: !12328, file: !243, discriminator: 1)
!12363 = distinct !{!12363, !12341}
!12364 = !DILocation(line: 659, column: 9, scope: !12328)
!12365 = !DILocation(line: 659, column: 2, scope: !12328)
!12366 = distinct !DISubprogram(name: "sw_get_window_by_wnd", scope: !243, file: !243, line: 337, type: !12367, isLocal: true, isDefinition: true, scopeLine: 338, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!12367 = !DISubroutineType(types: !12368)
!12368 = !{!360, !136}
!12369 = !DILocalVariable(name: "wnd", arg: 1, scope: !12366, file: !243, line: 337, type: !136)
!12370 = !DILocation(line: 337, column: 29, scope: !12366)
!12371 = !DILocalVariable(name: "sw", scope: !12366, file: !243, line: 339, type: !360)
!12372 = !DILocation(line: 339, column: 19, scope: !12366)
!12373 = !DILocation(line: 340, column: 12, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12366, file: !243, line: 340, column: 2)
!12375 = !DILocation(line: 340, column: 10, scope: !12374)
!12376 = !DILocation(line: 340, column: 7, scope: !12374)
!12377 = !DILocation(line: 340, column: 32, scope: !12378)
!12378 = !DILexicalBlockFile(scope: !12379, file: !243, discriminator: 1)
!12379 = distinct !DILexicalBlock(scope: !12374, file: !243, line: 340, column: 2)
!12380 = !DILocation(line: 340, column: 2, scope: !12378)
!12381 = !DILocation(line: 342, column: 7, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12383, file: !243, line: 342, column: 7)
!12383 = distinct !DILexicalBlock(scope: !12379, file: !243, line: 341, column: 2)
!12384 = !DILocation(line: 342, column: 11, scope: !12382)
!12385 = !DILocation(line: 342, column: 18, scope: !12382)
!12386 = !DILocation(line: 342, column: 15, scope: !12382)
!12387 = !DILocation(line: 342, column: 7, scope: !12383)
!12388 = !DILocation(line: 343, column: 11, scope: !12382)
!12389 = !DILocation(line: 343, column: 4, scope: !12382)
!12390 = !DILocation(line: 344, column: 2, scope: !12383)
!12391 = !DILocation(line: 340, column: 41, scope: !12392)
!12392 = !DILexicalBlockFile(scope: !12379, file: !243, discriminator: 2)
!12393 = !DILocation(line: 340, column: 45, scope: !12392)
!12394 = !DILocation(line: 340, column: 39, scope: !12392)
!12395 = !DILocation(line: 340, column: 2, scope: !12392)
!12396 = distinct !{!12396, !12397}
!12397 = !DILocation(line: 340, column: 2, scope: !12366)
!12398 = !DILocation(line: 345, column: 2, scope: !12366)
!12399 = !DILocation(line: 346, column: 1, scope: !12366)
!12400 = distinct !DISubprogram(name: "handle_button_event", scope: !243, file: !243, line: 2414, type: !12401, isLocal: true, isDefinition: true, scopeLine: 2415, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!12401 = !DISubroutineType(types: !12402)
!12402 = !{null, !1408, !44}
!12403 = !DILocalVariable(name: "xevent", arg: 1, scope: !12400, file: !243, line: 2414, type: !1408)
!12404 = !DILocation(line: 2414, column: 28, scope: !12400)
!12405 = !DILocalVariable(name: "down", arg: 2, scope: !12400, file: !243, line: 2414, type: !44)
!12406 = !DILocation(line: 2414, column: 44, scope: !12400)
!12407 = !DILocalVariable(name: "attr", scope: !12400, file: !243, line: 2416, type: !2170)
!12408 = !DILocation(line: 2416, column: 20, scope: !12400)
!12409 = !DILocalVariable(name: "button", scope: !12400, file: !243, line: 2417, type: !240)
!12410 = !DILocation(line: 2417, column: 9, scope: !12400)
!12411 = !DILocalVariable(name: "input_type", scope: !12400, file: !243, line: 2417, type: !240)
!12412 = !DILocation(line: 2417, column: 17, scope: !12400)
!12413 = !DILocalVariable(name: "flags", scope: !12400, file: !243, line: 2417, type: !240)
!12414 = !DILocation(line: 2417, column: 29, scope: !12400)
!12415 = !DILocation(line: 2419, column: 23, scope: !12400)
!12416 = !DILocation(line: 2419, column: 34, scope: !12400)
!12417 = !DILocation(line: 2419, column: 2, scope: !12400)
!12418 = !DILocation(line: 2421, column: 30, scope: !12400)
!12419 = !DILocation(line: 2421, column: 38, scope: !12400)
!12420 = !DILocation(line: 2421, column: 21, scope: !12400)
!12421 = !DILocation(line: 2427, column: 59, scope: !12400)
!12422 = !DILocation(line: 2427, column: 67, scope: !12400)
!12423 = !DILocation(line: 2427, column: 74, scope: !12400)
!12424 = !DILocation(line: 2427, column: 26, scope: !12400)
!12425 = !DILocation(line: 2427, column: 9, scope: !12400)
!12426 = !DILocation(line: 2427, column: 17, scope: !12400)
!12427 = !DILocation(line: 2427, column: 24, scope: !12400)
!12428 = !DILocation(line: 2428, column: 43, scope: !12400)
!12429 = !DILocation(line: 2428, column: 51, scope: !12400)
!12430 = !DILocation(line: 2428, column: 11, scope: !12400)
!12431 = !DILocation(line: 2428, column: 9, scope: !12400)
!12432 = !DILocation(line: 2429, column: 6, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12400, file: !243, line: 2429, column: 6)
!12434 = !DILocation(line: 2429, column: 13, scope: !12433)
!12435 = !DILocation(line: 2429, column: 6, scope: !12400)
!12436 = !DILocation(line: 2430, column: 3, scope: !12433)
!12437 = !DILocation(line: 2432, column: 6, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12400, file: !243, line: 2432, column: 6)
!12439 = !DILocation(line: 2432, column: 6, scope: !12400)
!12440 = !DILocation(line: 2433, column: 9, scope: !12438)
!12441 = !DILocation(line: 2433, column: 3, scope: !12438)
!12442 = !DILocation(line: 2436, column: 6, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12400, file: !243, line: 2436, column: 6)
!12444 = !DILocation(line: 2436, column: 19, scope: !12443)
!12445 = !DILocation(line: 2436, column: 30, scope: !12446)
!12446 = !DILexicalBlockFile(scope: !12443, file: !243, discriminator: 1)
!12447 = !DILocation(line: 2436, column: 35, scope: !12446)
!12448 = !DILocation(line: 2436, column: 6, scope: !12446)
!12449 = !DILocation(line: 2437, column: 16, scope: !12443)
!12450 = !DILocation(line: 2437, column: 3, scope: !12443)
!12451 = !DILocation(line: 2440, column: 13, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12400, file: !243, line: 2440, column: 6)
!12453 = !DILocation(line: 2440, column: 21, scope: !12452)
!12454 = !DILocation(line: 2440, column: 25, scope: !12452)
!12455 = !DILocation(line: 2440, column: 23, scope: !12452)
!12456 = !DILocation(line: 2440, column: 6, scope: !12400)
!12457 = !DILocation(line: 2443, column: 14, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12459, file: !243, line: 2443, column: 7)
!12459 = distinct !DILexicalBlock(scope: !12452, file: !243, line: 2441, column: 2)
!12460 = !DILocation(line: 2443, column: 22, scope: !12458)
!12461 = !DILocation(line: 2443, column: 32, scope: !12458)
!12462 = !DILocation(line: 2443, column: 40, scope: !12458)
!12463 = !DILocation(line: 2443, column: 38, scope: !12458)
!12464 = !DILocation(line: 2443, column: 24, scope: !12458)
!12465 = !DILocation(line: 2443, column: 7, scope: !12459)
!12466 = !DILocation(line: 2447, column: 3, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12458, file: !243, line: 2444, column: 3)
!12468 = !DILocation(line: 2448, column: 19, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12458, file: !243, line: 2448, column: 12)
!12470 = !DILocation(line: 2448, column: 27, scope: !12469)
!12471 = !DILocation(line: 2448, column: 37, scope: !12469)
!12472 = !DILocation(line: 2448, column: 45, scope: !12469)
!12473 = !DILocation(line: 2448, column: 63, scope: !12469)
!12474 = !DILocation(line: 2448, column: 43, scope: !12469)
!12475 = !DILocation(line: 2448, column: 29, scope: !12469)
!12476 = !DILocation(line: 2448, column: 12, scope: !12458)
!12477 = !DILocation(line: 2454, column: 15, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12479, file: !243, line: 2454, column: 8)
!12479 = distinct !DILexicalBlock(scope: !12469, file: !243, line: 2449, column: 3)
!12480 = !DILocation(line: 2454, column: 20, scope: !12478)
!12481 = !DILocation(line: 2454, column: 8, scope: !12479)
!12482 = !DILocation(line: 2455, column: 5, scope: !12478)
!12483 = !DILocation(line: 2456, column: 3, scope: !12479)
!12484 = !DILocation(line: 2457, column: 19, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12469, file: !243, line: 2457, column: 12)
!12486 = !DILocation(line: 2457, column: 27, scope: !12485)
!12487 = !DILocation(line: 2457, column: 37, scope: !12485)
!12488 = !DILocation(line: 2457, column: 45, scope: !12485)
!12489 = !DILocation(line: 2457, column: 63, scope: !12485)
!12490 = !DILocation(line: 2457, column: 43, scope: !12485)
!12491 = !DILocation(line: 2457, column: 29, scope: !12485)
!12492 = !DILocation(line: 2457, column: 12, scope: !12469)
!12493 = !DILocation(line: 2460, column: 15, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12495, file: !243, line: 2460, column: 8)
!12495 = distinct !DILexicalBlock(scope: !12485, file: !243, line: 2458, column: 3)
!12496 = !DILocation(line: 2460, column: 20, scope: !12494)
!12497 = !DILocation(line: 2460, column: 8, scope: !12495)
!12498 = !DILocation(line: 2464, column: 20, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12494, file: !243, line: 2461, column: 4)
!12500 = !DILocation(line: 2464, column: 31, scope: !12499)
!12501 = !DILocation(line: 2464, column: 43, scope: !12499)
!12502 = !DILocation(line: 2464, column: 5, scope: !12503)
!12503 = !DILexicalBlockFile(scope: !12499, file: !243, discriminator: 1)
!12504 = !DILocation(line: 2465, column: 20, scope: !12499)
!12505 = !DILocation(line: 2465, column: 31, scope: !12499)
!12506 = !DILocation(line: 2465, column: 37, scope: !12499)
!12507 = !DILocation(line: 2465, column: 40, scope: !12499)
!12508 = !DILocation(line: 2465, column: 5, scope: !12499)
!12509 = !DILocation(line: 2466, column: 5, scope: !12499)
!12510 = !DILocation(line: 2468, column: 3, scope: !12495)
!12511 = !DILocation(line: 2469, column: 19, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12485, file: !243, line: 2469, column: 12)
!12513 = !DILocation(line: 2469, column: 27, scope: !12512)
!12514 = !DILocation(line: 2469, column: 32, scope: !12512)
!12515 = !DILocation(line: 2469, column: 29, scope: !12512)
!12516 = !DILocation(line: 2469, column: 12, scope: !12485)
!12517 = !DILocation(line: 2472, column: 15, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12519, file: !243, line: 2472, column: 8)
!12519 = distinct !DILexicalBlock(scope: !12512, file: !243, line: 2470, column: 3)
!12520 = !DILocation(line: 2472, column: 20, scope: !12518)
!12521 = !DILocation(line: 2472, column: 8, scope: !12519)
!12522 = !DILocation(line: 2473, column: 5, scope: !12518)
!12523 = !DILocation(line: 2474, column: 3, scope: !12519)
!12524 = !DILocation(line: 2478, column: 15, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !243, line: 2478, column: 8)
!12526 = distinct !DILexicalBlock(scope: !12512, file: !243, line: 2476, column: 3)
!12527 = !DILocation(line: 2478, column: 20, scope: !12525)
!12528 = !DILocation(line: 2478, column: 8, scope: !12526)
!12529 = !DILocation(line: 2480, column: 10, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12531, file: !243, line: 2480, column: 9)
!12531 = distinct !DILexicalBlock(scope: !12525, file: !243, line: 2479, column: 4)
!12532 = !DILocation(line: 2480, column: 23, scope: !12530)
!12533 = !DILocation(line: 2480, column: 26, scope: !12534)
!12534 = !DILexicalBlockFile(scope: !12530, file: !243, discriminator: 1)
!12535 = !DILocation(line: 2480, column: 45, scope: !12534)
!12536 = !DILocation(line: 2480, column: 49, scope: !12537)
!12537 = !DILexicalBlockFile(scope: !12530, file: !243, discriminator: 2)
!12538 = !DILocation(line: 2480, column: 9, scope: !12537)
!12539 = !DILocation(line: 2482, column: 19, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12530, file: !243, line: 2481, column: 5)
!12541 = !DILocation(line: 2483, column: 31, scope: !12540)
!12542 = !DILocation(line: 2483, column: 39, scope: !12540)
!12543 = !DILocation(line: 2483, column: 22, scope: !12540)
!12544 = !DILocation(line: 2484, column: 31, scope: !12540)
!12545 = !DILocation(line: 2484, column: 39, scope: !12540)
!12546 = !DILocation(line: 2484, column: 22, scope: !12540)
!12547 = !DILocation(line: 2485, column: 5, scope: !12540)
!12548 = !DILocation(line: 2486, column: 5, scope: !12531)
!12549 = !DILocation(line: 2489, column: 2, scope: !12459)
!12550 = !DILocation(line: 2494, column: 7, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12400, file: !243, line: 2494, column: 6)
!12552 = !DILocation(line: 2494, column: 12, scope: !12551)
!12553 = !DILocation(line: 2494, column: 16, scope: !12554)
!12554 = !DILexicalBlockFile(scope: !12551, file: !243, discriminator: 1)
!12555 = !DILocation(line: 2494, column: 23, scope: !12554)
!12556 = !DILocation(line: 2494, column: 33, scope: !12554)
!12557 = !DILocation(line: 2494, column: 36, scope: !12558)
!12558 = !DILexicalBlockFile(scope: !12551, file: !243, discriminator: 2)
!12559 = !DILocation(line: 2494, column: 43, scope: !12558)
!12560 = !DILocation(line: 2494, column: 6, scope: !12558)
!12561 = !DILocation(line: 2496, column: 3, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12551, file: !243, line: 2495, column: 2)
!12563 = !DILocation(line: 2499, column: 13, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12400, file: !243, line: 2499, column: 6)
!12565 = !DILocation(line: 2499, column: 21, scope: !12564)
!12566 = !DILocation(line: 2499, column: 31, scope: !12564)
!12567 = !DILocation(line: 2499, column: 28, scope: !12564)
!12568 = !DILocation(line: 2499, column: 6, scope: !12400)
!12569 = !DILocation(line: 2501, column: 18, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12564, file: !243, line: 2500, column: 2)
!12571 = !DILocation(line: 2501, column: 29, scope: !12570)
!12572 = !DILocation(line: 2502, column: 11, scope: !12570)
!12573 = !DILocation(line: 2502, column: 19, scope: !12570)
!12574 = !DILocation(line: 2502, column: 17, scope: !12570)
!12575 = !DILocation(line: 2502, column: 34, scope: !12570)
!12576 = !DILocation(line: 2502, column: 42, scope: !12570)
!12577 = !DILocation(line: 2502, column: 27, scope: !12570)
!12578 = !DILocation(line: 2502, column: 52, scope: !12570)
!12579 = !DILocation(line: 2502, column: 60, scope: !12570)
!12580 = !DILocation(line: 2502, column: 45, scope: !12570)
!12581 = !DILocation(line: 2501, column: 3, scope: !12582)
!12582 = !DILexicalBlockFile(scope: !12570, file: !243, discriminator: 1)
!12583 = !DILocation(line: 2503, column: 2, scope: !12570)
!12584 = !DILocation(line: 2507, column: 18, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12564, file: !243, line: 2505, column: 2)
!12586 = !DILocation(line: 2507, column: 29, scope: !12585)
!12587 = !DILocation(line: 2508, column: 11, scope: !12585)
!12588 = !DILocation(line: 2508, column: 19, scope: !12585)
!12589 = !DILocation(line: 2508, column: 17, scope: !12585)
!12590 = !DILocation(line: 2508, column: 34, scope: !12585)
!12591 = !DILocation(line: 2508, column: 42, scope: !12585)
!12592 = !DILocation(line: 2508, column: 27, scope: !12585)
!12593 = !DILocation(line: 2508, column: 57, scope: !12585)
!12594 = !DILocation(line: 2508, column: 65, scope: !12585)
!12595 = !DILocation(line: 2508, column: 50, scope: !12585)
!12596 = !DILocation(line: 2507, column: 3, scope: !12597)
!12597 = !DILexicalBlockFile(scope: !12585, file: !243, discriminator: 1)
!12598 = !DILocation(line: 2510, column: 1, scope: !12400)
!12599 = distinct !DISubprogram(name: "sw_all_to_desktop", scope: !243, file: !243, line: 376, type: !12600, isLocal: true, isDefinition: true, scopeLine: 377, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!12600 = !DISubroutineType(types: !12601)
!12601 = !{null, !136, !117}
!12602 = !DILocalVariable(name: "wnd", arg: 1, scope: !12599, file: !243, line: 376, type: !136)
!12603 = !DILocation(line: 376, column: 26, scope: !12599)
!12604 = !DILocalVariable(name: "desktop", arg: 2, scope: !12599, file: !243, line: 376, type: !117)
!12605 = !DILocation(line: 376, column: 44, scope: !12599)
!12606 = !DILocalVariable(name: "sw", scope: !12599, file: !243, line: 378, type: !360)
!12607 = !DILocation(line: 378, column: 19, scope: !12599)
!12608 = !DILocation(line: 379, column: 12, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12599, file: !243, line: 379, column: 2)
!12610 = !DILocation(line: 379, column: 10, scope: !12609)
!12611 = !DILocation(line: 379, column: 7, scope: !12609)
!12612 = !DILocation(line: 379, column: 32, scope: !12613)
!12613 = !DILexicalBlockFile(scope: !12614, file: !243, discriminator: 1)
!12614 = distinct !DILexicalBlock(scope: !12609, file: !243, line: 379, column: 2)
!12615 = !DILocation(line: 379, column: 2, scope: !12613)
!12616 = !DILocation(line: 381, column: 7, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12618, file: !243, line: 381, column: 7)
!12618 = distinct !DILexicalBlock(scope: !12614, file: !243, line: 380, column: 2)
!12619 = !DILocation(line: 381, column: 11, scope: !12617)
!12620 = !DILocation(line: 381, column: 18, scope: !12617)
!12621 = !DILocation(line: 381, column: 15, scope: !12617)
!12622 = !DILocation(line: 381, column: 7, scope: !12618)
!12623 = !DILocation(line: 382, column: 4, scope: !12617)
!12624 = !DILocation(line: 383, column: 7, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12618, file: !243, line: 383, column: 7)
!12626 = !DILocation(line: 383, column: 11, scope: !12625)
!12627 = !DILocation(line: 383, column: 22, scope: !12625)
!12628 = !DILocation(line: 383, column: 19, scope: !12625)
!12629 = !DILocation(line: 383, column: 7, scope: !12618)
!12630 = !DILocation(line: 385, column: 25, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12625, file: !243, line: 384, column: 3)
!12632 = !DILocation(line: 385, column: 29, scope: !12631)
!12633 = !DILocation(line: 385, column: 34, scope: !12631)
!12634 = !DILocation(line: 385, column: 4, scope: !12631)
!12635 = !DILocation(line: 386, column: 18, scope: !12631)
!12636 = !DILocation(line: 386, column: 4, scope: !12631)
!12637 = !DILocation(line: 386, column: 8, scope: !12631)
!12638 = !DILocation(line: 386, column: 16, scope: !12631)
!12639 = !DILocation(line: 387, column: 3, scope: !12631)
!12640 = !DILocation(line: 388, column: 2, scope: !12618)
!12641 = !DILocation(line: 379, column: 41, scope: !12642)
!12642 = !DILexicalBlockFile(scope: !12614, file: !243, discriminator: 2)
!12643 = !DILocation(line: 379, column: 45, scope: !12642)
!12644 = !DILocation(line: 379, column: 39, scope: !12642)
!12645 = !DILocation(line: 379, column: 2, scope: !12642)
!12646 = distinct !{!12646, !12647}
!12647 = !DILocation(line: 379, column: 2, scope: !12599)
!12648 = !DILocation(line: 389, column: 1, scope: !12599)
!12649 = distinct !DISubprogram(name: "sw_handle_restack", scope: !243, file: !243, line: 466, type: !10646, isLocal: true, isDefinition: true, scopeLine: 467, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!12650 = !DILocalVariable(name: "sw", arg: 1, scope: !12649, file: !243, line: 466, type: !360)
!12651 = !DILocation(line: 466, column: 37, scope: !12649)
!12652 = !DILocalVariable(name: "status", scope: !12649, file: !243, line: 468, type: !45)
!12653 = !DILocation(line: 468, column: 8, scope: !12649)
!12654 = !DILocalVariable(name: "root", scope: !12649, file: !243, line: 469, type: !136)
!12655 = !DILocation(line: 469, column: 9, scope: !12649)
!12656 = !DILocalVariable(name: "parent", scope: !12649, file: !243, line: 469, type: !136)
!12657 = !DILocation(line: 469, column: 15, scope: !12649)
!12658 = !DILocalVariable(name: "children", scope: !12649, file: !243, line: 469, type: !12252)
!12659 = !DILocation(line: 469, column: 24, scope: !12649)
!12660 = !DILocalVariable(name: "nchildren", scope: !12649, file: !243, line: 470, type: !117)
!12661 = !DILocation(line: 470, column: 15, scope: !12649)
!12662 = !DILocalVariable(name: "i", scope: !12649, file: !243, line: 470, type: !117)
!12663 = !DILocation(line: 470, column: 26, scope: !12649)
!12664 = !DILocalVariable(name: "sw_below", scope: !12649, file: !243, line: 471, type: !360)
!12665 = !DILocation(line: 471, column: 19, scope: !12649)
!12666 = !DILocation(line: 473, column: 22, scope: !12649)
!12667 = !DILocation(line: 473, column: 32, scope: !12649)
!12668 = !DILocation(line: 473, column: 35, scope: !12649)
!12669 = !DILocation(line: 473, column: 11, scope: !12649)
!12670 = !DILocation(line: 473, column: 9, scope: !12649)
!12671 = !DILocation(line: 475, column: 7, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12649, file: !243, line: 475, column: 6)
!12673 = !DILocation(line: 475, column: 14, scope: !12672)
!12674 = !DILocation(line: 475, column: 18, scope: !12675)
!12675 = !DILexicalBlockFile(scope: !12672, file: !243, discriminator: 1)
!12676 = !DILocation(line: 475, column: 6, scope: !12675)
!12677 = !DILocation(line: 476, column: 3, scope: !12672)
!12678 = !DILocation(line: 478, column: 11, scope: !12649)
!12679 = !DILocation(line: 480, column: 4, scope: !12649)
!12680 = !DILocation(line: 481, column: 2, scope: !12649)
!12681 = !DILocation(line: 481, column: 18, scope: !12682)
!12682 = !DILexicalBlockFile(scope: !12649, file: !243, discriminator: 1)
!12683 = !DILocation(line: 481, column: 9, scope: !12682)
!12684 = !DILocation(line: 481, column: 24, scope: !12682)
!12685 = !DILocation(line: 481, column: 28, scope: !12682)
!12686 = !DILocation(line: 481, column: 21, scope: !12682)
!12687 = !DILocation(line: 481, column: 2, scope: !12682)
!12688 = !DILocation(line: 483, column: 4, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12649, file: !243, line: 482, column: 2)
!12690 = !DILocation(line: 484, column: 7, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12689, file: !243, line: 484, column: 7)
!12692 = !DILocation(line: 484, column: 12, scope: !12691)
!12693 = !DILocation(line: 484, column: 9, scope: !12691)
!12694 = !DILocation(line: 484, column: 7, scope: !12689)
!12695 = !DILocation(line: 485, column: 4, scope: !12691)
!12696 = !DILocation(line: 481, column: 2, scope: !12697)
!12697 = !DILexicalBlockFile(scope: !12649, file: !243, discriminator: 2)
!12698 = distinct !{!12698, !12680}
!12699 = !DILocation(line: 488, column: 8, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12649, file: !243, line: 488, column: 2)
!12701 = !DILocation(line: 488, column: 7, scope: !12700)
!12702 = !DILocation(line: 488, column: 12, scope: !12703)
!12703 = !DILexicalBlockFile(scope: !12704, file: !243, discriminator: 1)
!12704 = distinct !DILexicalBlock(scope: !12700, file: !243, line: 488, column: 2)
!12705 = !DILocation(line: 488, column: 16, scope: !12703)
!12706 = !DILocation(line: 488, column: 14, scope: !12703)
!12707 = !DILocation(line: 488, column: 2, scope: !12703)
!12708 = !DILocation(line: 490, column: 44, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12704, file: !243, line: 489, column: 2)
!12710 = !DILocation(line: 490, column: 35, scope: !12709)
!12711 = !DILocation(line: 490, column: 14, scope: !12709)
!12712 = !DILocation(line: 490, column: 12, scope: !12709)
!12713 = !DILocation(line: 491, column: 7, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12709, file: !243, line: 491, column: 7)
!12715 = !DILocation(line: 491, column: 7, scope: !12709)
!12716 = !DILocation(line: 492, column: 4, scope: !12714)
!12717 = !DILocation(line: 493, column: 2, scope: !12709)
!12718 = !DILocation(line: 488, column: 28, scope: !12719)
!12719 = !DILexicalBlockFile(scope: !12704, file: !243, discriminator: 2)
!12720 = !DILocation(line: 488, column: 2, scope: !12719)
!12721 = distinct !{!12721, !12722}
!12722 = !DILocation(line: 488, column: 2, scope: !12649)
!12723 = !DILocation(line: 495, column: 7, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12649, file: !243, line: 495, column: 6)
!12725 = !DILocation(line: 495, column: 16, scope: !12724)
!12726 = !DILocation(line: 495, column: 20, scope: !12727)
!12727 = !DILexicalBlockFile(scope: !12724, file: !243, discriminator: 1)
!12728 = !DILocation(line: 495, column: 24, scope: !12727)
!12729 = !DILocation(line: 495, column: 6, scope: !12727)
!12730 = !DILocation(line: 496, column: 3, scope: !12724)
!12731 = !DILocation(line: 497, column: 6, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12649, file: !243, line: 497, column: 6)
!12733 = !DILocation(line: 497, column: 15, scope: !12732)
!12734 = !DILocation(line: 497, column: 19, scope: !12735)
!12735 = !DILexicalBlockFile(scope: !12732, file: !243, discriminator: 1)
!12736 = !DILocation(line: 497, column: 29, scope: !12735)
!12737 = !DILocation(line: 497, column: 35, scope: !12735)
!12738 = !DILocation(line: 497, column: 39, scope: !12735)
!12739 = !DILocation(line: 497, column: 32, scope: !12735)
!12740 = !DILocation(line: 497, column: 6, scope: !12735)
!12741 = !DILocation(line: 498, column: 3, scope: !12732)
!12742 = !DILocation(line: 500, column: 6, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12649, file: !243, line: 500, column: 6)
!12744 = !DILocation(line: 500, column: 6, scope: !12649)
!12745 = !DILocation(line: 502, column: 25, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12743, file: !243, line: 501, column: 2)
!12747 = !DILocation(line: 502, column: 29, scope: !12746)
!12748 = !DILocation(line: 502, column: 33, scope: !12746)
!12749 = !DILocation(line: 502, column: 43, scope: !12746)
!12750 = !DILocation(line: 502, column: 3, scope: !12746)
!12751 = !DILocation(line: 503, column: 21, scope: !12746)
!12752 = !DILocation(line: 503, column: 25, scope: !12746)
!12753 = !DILocation(line: 503, column: 35, scope: !12746)
!12754 = !DILocation(line: 503, column: 3, scope: !12746)
!12755 = !DILocation(line: 504, column: 2, scope: !12746)
!12756 = !DILocation(line: 507, column: 25, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12743, file: !243, line: 506, column: 2)
!12758 = !DILocation(line: 507, column: 29, scope: !12757)
!12759 = !DILocation(line: 507, column: 3, scope: !12757)
!12760 = !DILocation(line: 508, column: 21, scope: !12757)
!12761 = !DILocation(line: 508, column: 3, scope: !12757)
!12762 = !DILocation(line: 500, column: 6, scope: !12763)
!12763 = !DILexicalBlockFile(scope: !12743, file: !243, discriminator: 1)
!12764 = !DILocation(line: 512, column: 8, scope: !12649)
!12765 = !DILocation(line: 512, column: 2, scope: !12649)
!12766 = !DILocation(line: 513, column: 1, scope: !12649)
!12767 = !DILocation(line: 513, column: 1, scope: !12682)
!12768 = distinct !DISubprogram(name: "process_pending_resize", scope: !243, file: !243, line: 3040, type: !564, isLocal: true, isDefinition: true, scopeLine: 3041, isOptimized: false, unit: !0, variables: !256)
!12769 = !DILocalVariable(name: "now_ts", scope: !12768, file: !243, line: 3042, type: !261)
!12770 = !DILocation(line: 3042, column: 9, scope: !12768)
!12771 = !DILocalVariable(name: "now", scope: !12768, file: !243, line: 3043, type: !353)
!12772 = !DILocation(line: 3043, column: 17, scope: !12768)
!12773 = !DILocation(line: 3048, column: 2, scope: !12768)
!12774 = !DILocation(line: 3049, column: 6, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12768, file: !243, line: 3049, column: 6)
!12776 = !DILocation(line: 3049, column: 49, scope: !12775)
!12777 = !DILocation(line: 3049, column: 6, scope: !12768)
!12778 = !DILocation(line: 3050, column: 3, scope: !12775)
!12779 = !DILocation(line: 3069, column: 6, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12768, file: !243, line: 3069, column: 6)
!12781 = !DILocation(line: 3069, column: 52, scope: !12780)
!12782 = !DILocation(line: 3070, column: 6, scope: !12780)
!12783 = !DILocation(line: 3070, column: 63, scope: !12780)
!12784 = !DILocation(line: 3069, column: 6, scope: !12785)
!12785 = !DILexicalBlockFile(scope: !12768, file: !243, discriminator: 1)
!12786 = !DILocation(line: 3072, column: 78, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12780, file: !243, line: 3071, column: 2)
!12788 = !DILocation(line: 3072, column: 39, scope: !12787)
!12789 = !DILocation(line: 3073, column: 26, scope: !12787)
!12790 = !DILocation(line: 3074, column: 2, scope: !12787)
!12791 = !DILocation(line: 3076, column: 6, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12768, file: !243, line: 3076, column: 6)
!12793 = !DILocation(line: 3076, column: 29, scope: !12792)
!12794 = !DILocation(line: 3076, column: 6, scope: !12768)
!12795 = !DILocation(line: 3077, column: 3, scope: !12792)
!12796 = !DILocation(line: 3080, column: 6, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12768, file: !243, line: 3080, column: 6)
!12798 = !DILocation(line: 3080, column: 19, scope: !12797)
!12799 = !DILocation(line: 3080, column: 22, scope: !12800)
!12800 = !DILexicalBlockFile(scope: !12797, file: !243, discriminator: 1)
!12801 = !DILocation(line: 3080, column: 6, scope: !12800)
!12802 = !DILocation(line: 3083, column: 30, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12797, file: !243, line: 3081, column: 2)
!12804 = !DILocation(line: 3083, column: 33, scope: !12803)
!12805 = !DILocation(line: 3083, column: 29, scope: !12803)
!12806 = !DILocation(line: 3084, column: 31, scope: !12803)
!12807 = !DILocation(line: 3084, column: 34, scope: !12803)
!12808 = !DILocation(line: 3084, column: 30, scope: !12803)
!12809 = !DILocation(line: 3085, column: 7, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12803, file: !243, line: 3085, column: 7)
!12811 = !DILocation(line: 3085, column: 26, scope: !12810)
!12812 = !DILocation(line: 3085, column: 7, scope: !12803)
!12813 = !DILocation(line: 3088, column: 3, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12810, file: !243, line: 3086, column: 3)
!12815 = !DILocation(line: 3089, column: 2, scope: !12803)
!12816 = !DILocation(line: 3093, column: 31, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12797, file: !243, line: 3091, column: 2)
!12818 = !DILocation(line: 3093, column: 29, scope: !12817)
!12819 = !DILocation(line: 3094, column: 32, scope: !12817)
!12820 = !DILocation(line: 3094, column: 30, scope: !12817)
!12821 = !DILocation(line: 3099, column: 6, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12768, file: !243, line: 3099, column: 6)
!12823 = !DILocation(line: 3099, column: 30, scope: !12822)
!12824 = !DILocation(line: 3099, column: 6, scope: !12768)
!12825 = !DILocation(line: 3107, column: 10, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12822, file: !243, line: 3100, column: 2)
!12827 = !DILocation(line: 3108, column: 10, scope: !12826)
!12828 = !DILocation(line: 3106, column: 3, scope: !12826)
!12829 = !DILocation(line: 3110, column: 3, scope: !12826)
!12830 = !DILocation(line: 3114, column: 12, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12822, file: !243, line: 3113, column: 2)
!12832 = !DILocation(line: 3114, column: 10, scope: !12831)
!12833 = !DILocation(line: 3115, column: 7, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12831, file: !243, line: 3115, column: 7)
!12835 = !DILocation(line: 3115, column: 16, scope: !12834)
!12836 = !DILocation(line: 3115, column: 14, scope: !12834)
!12837 = !DILocation(line: 3115, column: 41, scope: !12834)
!12838 = !DILocation(line: 3115, column: 7, scope: !12831)
!12839 = !DILocation(line: 3116, column: 4, scope: !12834)
!12840 = !DILocation(line: 3119, column: 10, scope: !12831)
!12841 = !DILocation(line: 3120, column: 10, scope: !12831)
!12842 = !DILocation(line: 3118, column: 3, scope: !12831)
!12843 = !DILocation(line: 3122, column: 29, scope: !12831)
!12844 = !DILocation(line: 3123, column: 29, scope: !12831)
!12845 = !DILocation(line: 3122, column: 3, scope: !12831)
!12846 = !DILocation(line: 3125, column: 20, scope: !12831)
!12847 = !DILocation(line: 3126, column: 30, scope: !12831)
!12848 = !DILocation(line: 3126, column: 28, scope: !12831)
!12849 = !DILocation(line: 3129, column: 2, scope: !12768)
!12850 = !DILocation(line: 3130, column: 1, scope: !12768)
!12851 = distinct !DISubprogram(name: "time_difference_in_ms", scope: !243, file: !243, line: 2949, type: !12852, isLocal: true, isDefinition: true, scopeLine: 2950, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!12852 = !DISubroutineType(types: !12853)
!12853 = !{!193, !353, !353}
!12854 = !DILocalVariable(name: "then", arg: 1, scope: !12851, file: !243, line: 2949, type: !353)
!12855 = !DILocation(line: 2949, column: 38, scope: !12851)
!12856 = !DILocalVariable(name: "now", arg: 2, scope: !12851, file: !243, line: 2949, type: !353)
!12857 = !DILocation(line: 2949, column: 59, scope: !12851)
!12858 = !DILocalVariable(name: "ms", scope: !12851, file: !243, line: 2951, type: !193)
!12859 = !DILocation(line: 2951, column: 9, scope: !12851)
!12860 = !DILocation(line: 2952, column: 5, scope: !12851)
!12861 = !DILocation(line: 2953, column: 13, scope: !12851)
!12862 = !DILocation(line: 2953, column: 27, scope: !12851)
!12863 = !DILocation(line: 2953, column: 20, scope: !12851)
!12864 = !DILocation(line: 2953, column: 35, scope: !12851)
!12865 = !DILocation(line: 2953, column: 5, scope: !12851)
!12866 = !DILocation(line: 2954, column: 13, scope: !12851)
!12867 = !DILocation(line: 2954, column: 28, scope: !12851)
!12868 = !DILocation(line: 2954, column: 21, scope: !12851)
!12869 = !DILocation(line: 2954, column: 37, scope: !12851)
!12870 = !DILocation(line: 2954, column: 5, scope: !12851)
!12871 = !DILocation(line: 2955, column: 9, scope: !12851)
!12872 = !DILocation(line: 2955, column: 2, scope: !12851)
!12873 = distinct !DISubprogram(name: "timeval_is_set", scope: !243, file: !243, line: 3025, type: !12874, isLocal: true, isDefinition: true, scopeLine: 3026, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!12874 = !DISubroutineType(types: !12875)
!12875 = !{!44, !382}
!12876 = !DILocalVariable(name: "time", arg: 1, scope: !12873, file: !243, line: 3025, type: !382)
!12877 = !DILocation(line: 3025, column: 32, scope: !12873)
!12878 = !DILocation(line: 3027, column: 10, scope: !12873)
!12879 = !DILocation(line: 3027, column: 16, scope: !12873)
!12880 = !DILocation(line: 3027, column: 23, scope: !12873)
!12881 = !DILocation(line: 3027, column: 28, scope: !12873)
!12882 = !DILocation(line: 3027, column: 31, scope: !12883)
!12883 = !DILexicalBlockFile(scope: !12873, file: !243, discriminator: 1)
!12884 = !DILocation(line: 3027, column: 37, scope: !12883)
!12885 = !DILocation(line: 3027, column: 45, scope: !12883)
!12886 = !DILocation(line: 3027, column: 9, scope: !12887)
!12887 = !DILexicalBlockFile(scope: !12873, file: !243, discriminator: 2)
!12888 = !DILocation(line: 3027, column: 2, scope: !12887)
!12889 = distinct !DISubprogram(name: "sw_check_timers", scope: !243, file: !243, line: 419, type: !254, isLocal: true, isDefinition: true, scopeLine: 420, isOptimized: false, unit: !0, variables: !256)
!12890 = !DILocalVariable(name: "sw", scope: !12889, file: !243, line: 421, type: !360)
!12891 = !DILocation(line: 421, column: 19, scope: !12889)
!12892 = !DILocalVariable(name: "now", scope: !12889, file: !243, line: 422, type: !353)
!12893 = !DILocation(line: 422, column: 17, scope: !12889)
!12894 = !DILocation(line: 424, column: 2, scope: !12889)
!12895 = !DILocation(line: 425, column: 12, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12889, file: !243, line: 425, column: 2)
!12897 = !DILocation(line: 425, column: 10, scope: !12896)
!12898 = !DILocation(line: 425, column: 7, scope: !12896)
!12899 = !DILocation(line: 425, column: 32, scope: !12900)
!12900 = !DILexicalBlockFile(scope: !12901, file: !243, discriminator: 1)
!12901 = distinct !DILexicalBlock(scope: !12896, file: !243, line: 425, column: 2)
!12902 = !DILocation(line: 425, column: 2, scope: !12900)
!12903 = !DILocation(line: 427, column: 6, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12905, file: !243, line: 427, column: 6)
!12905 = distinct !DILexicalBlock(scope: !12901, file: !243, line: 426, column: 2)
!12906 = !DILocation(line: 427, column: 10, scope: !12904)
!12907 = !DILocation(line: 427, column: 9, scope: !12904)
!12908 = !DILocation(line: 427, column: 7, scope: !12904)
!12909 = !DILocation(line: 427, column: 16, scope: !12904)
!12910 = !DILocation(line: 427, column: 6, scope: !12911)
!12911 = !DILexicalBlockFile(scope: !12904, file: !243, discriminator: 1)
!12912 = !DILocation(line: 427, column: 10, scope: !12911)
!12913 = !DILocation(line: 427, column: 9, scope: !12911)
!12914 = !DILocation(line: 427, column: 19, scope: !12911)
!12915 = !DILocation(line: 427, column: 37, scope: !12911)
!12916 = !DILocation(line: 427, column: 40, scope: !12917)
!12917 = !DILexicalBlockFile(scope: !12904, file: !243, discriminator: 2)
!12918 = !DILocation(line: 427, column: 44, scope: !12917)
!12919 = !DILocation(line: 427, column: 43, scope: !12917)
!12920 = !DILocation(line: 427, column: 50, scope: !12917)
!12921 = !DILocation(line: 427, column: 6, scope: !12917)
!12922 = !DILocation(line: 427, column: 40, scope: !12923)
!12923 = !DILexicalBlockFile(scope: !12904, file: !243, discriminator: 3)
!12924 = !DILocation(line: 427, column: 44, scope: !12923)
!12925 = !DILocation(line: 427, column: 43, scope: !12923)
!12926 = !DILocation(line: 427, column: 41, scope: !12923)
!12927 = !DILocation(line: 427, column: 40, scope: !12928)
!12928 = !DILexicalBlockFile(scope: !12904, file: !243, discriminator: 4)
!12929 = !DILocation(line: 427, column: 44, scope: !12928)
!12930 = !DILocation(line: 427, column: 43, scope: !12928)
!12931 = !DILocation(line: 427, column: 6, scope: !12928)
!12932 = !DILocation(line: 429, column: 3, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12904, file: !243, line: 428, column: 3)
!12934 = !DILocation(line: 429, column: 7, scope: !12933)
!12935 = !DILocation(line: 429, column: 6, scope: !12933)
!12936 = !DILocation(line: 429, column: 14, scope: !12933)
!12937 = !DILocation(line: 429, column: 13, scope: !12933)
!12938 = !DILocation(line: 430, column: 23, scope: !12933)
!12939 = !DILocation(line: 430, column: 4, scope: !12933)
!12940 = !DILocation(line: 431, column: 3, scope: !12933)
!12941 = !DILocation(line: 432, column: 2, scope: !12905)
!12942 = !DILocation(line: 425, column: 41, scope: !12943)
!12943 = !DILexicalBlockFile(scope: !12901, file: !243, discriminator: 2)
!12944 = !DILocation(line: 425, column: 45, scope: !12943)
!12945 = !DILocation(line: 425, column: 39, scope: !12943)
!12946 = !DILocation(line: 425, column: 2, scope: !12943)
!12947 = distinct !{!12947, !12948}
!12948 = !DILocation(line: 425, column: 2, scope: !12889)
!12949 = !DILocation(line: 433, column: 1, scope: !12889)
!12950 = distinct !DISubprogram(name: "translate24to32", scope: !243, file: !243, line: 1416, type: !12951, isLocal: true, isDefinition: true, scopeLine: 1417, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!12951 = !DISubroutineType(types: !12952)
!12952 = !{null, !12953, !46, !46}
!12953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12954, size: 64, align: 64)
!12954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !47)
!12955 = !DILocalVariable(name: "data", arg: 1, scope: !12950, file: !243, line: 1416, type: !12953)
!12956 = !DILocation(line: 1416, column: 31, scope: !12950)
!12957 = !DILocalVariable(name: "out", arg: 2, scope: !12950, file: !243, line: 1416, type: !46)
!12958 = !DILocation(line: 1416, column: 45, scope: !12950)
!12959 = !DILocalVariable(name: "end", arg: 3, scope: !12950, file: !243, line: 1416, type: !46)
!12960 = !DILocation(line: 1416, column: 58, scope: !12950)
!12961 = !DILocalVariable(name: "pixel", scope: !12950, file: !243, line: 1418, type: !193)
!12962 = !DILocation(line: 1418, column: 9, scope: !12950)
!12963 = !DILocalVariable(name: "value", scope: !12950, file: !243, line: 1419, type: !193)
!12964 = !DILocation(line: 1419, column: 9, scope: !12950)
!12965 = !DILocalVariable(name: "pc", scope: !12950, file: !243, line: 1420, type: !4417)
!12966 = !DILocation(line: 1420, column: 14, scope: !12950)
!12967 = !DILocation(line: 1422, column: 6, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12950, file: !243, line: 1422, column: 6)
!12969 = !DILocation(line: 1422, column: 6, scope: !12950)
!12970 = !DILocation(line: 1434, column: 5, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12972, file: !243, line: 1434, column: 3)
!12972 = distinct !DILexicalBlock(scope: !12968, file: !243, line: 1423, column: 2)
!12973 = !DILocation(line: 1434, column: 12, scope: !12974)
!12974 = !DILexicalBlockFile(scope: !12971, file: !243, discriminator: 1)
!12975 = !DILocation(line: 1434, column: 19, scope: !12974)
!12976 = !DILocation(line: 1434, column: 23, scope: !12974)
!12977 = !DILocation(line: 1434, column: 16, scope: !12974)
!12978 = !DILocation(line: 1434, column: 5, scope: !12974)
!12979 = !DILocation(line: 1434, column: 67, scope: !12980)
!12980 = !DILexicalBlockFile(scope: !12981, file: !243, discriminator: 2)
!12981 = distinct !DILexicalBlock(scope: !12971, file: !243, line: 1434, column: 32)
!12982 = !DILocation(line: 1434, column: 54, scope: !12980)
!12983 = !DILocation(line: 1434, column: 88, scope: !12980)
!12984 = !DILocation(line: 1434, column: 93, scope: !12980)
!12985 = !DILocation(line: 1434, column: 76, scope: !12980)
!12986 = !DILocation(line: 1434, column: 98, scope: !12980)
!12987 = !DILocation(line: 1434, column: 73, scope: !12980)
!12988 = !DILocation(line: 1434, column: 47, scope: !12980)
!12989 = !DILocation(line: 1434, column: 34, scope: !12980)
!12990 = !DILocation(line: 1434, column: 52, scope: !12980)
!12991 = !DILocation(line: 1434, column: 110, scope: !12980)
!12992 = !DILocation(line: 1434, column: 121, scope: !12980)
!12993 = !DILocation(line: 1434, column: 160, scope: !12980)
!12994 = !DILocation(line: 1434, column: 147, scope: !12980)
!12995 = !DILocation(line: 1434, column: 181, scope: !12980)
!12996 = !DILocation(line: 1434, column: 186, scope: !12980)
!12997 = !DILocation(line: 1434, column: 169, scope: !12980)
!12998 = !DILocation(line: 1434, column: 191, scope: !12980)
!12999 = !DILocation(line: 1434, column: 166, scope: !12980)
!13000 = !DILocation(line: 1434, column: 140, scope: !12980)
!13001 = !DILocation(line: 1434, column: 127, scope: !12980)
!13002 = !DILocation(line: 1434, column: 145, scope: !12980)
!13003 = !DILocation(line: 1434, column: 203, scope: !12980)
!13004 = !DILocation(line: 1434, column: 214, scope: !12980)
!13005 = !DILocation(line: 1434, column: 253, scope: !12980)
!13006 = !DILocation(line: 1434, column: 240, scope: !12980)
!13007 = !DILocation(line: 1434, column: 274, scope: !12980)
!13008 = !DILocation(line: 1434, column: 279, scope: !12980)
!13009 = !DILocation(line: 1434, column: 262, scope: !12980)
!13010 = !DILocation(line: 1434, column: 284, scope: !12980)
!13011 = !DILocation(line: 1434, column: 259, scope: !12980)
!13012 = !DILocation(line: 1434, column: 233, scope: !12980)
!13013 = !DILocation(line: 1434, column: 220, scope: !12980)
!13014 = !DILocation(line: 1434, column: 238, scope: !12980)
!13015 = !DILocation(line: 1434, column: 296, scope: !12980)
!13016 = !DILocation(line: 1434, column: 307, scope: !12980)
!13017 = !DILocation(line: 1434, column: 346, scope: !12980)
!13018 = !DILocation(line: 1434, column: 333, scope: !12980)
!13019 = !DILocation(line: 1434, column: 367, scope: !12980)
!13020 = !DILocation(line: 1434, column: 372, scope: !12980)
!13021 = !DILocation(line: 1434, column: 355, scope: !12980)
!13022 = !DILocation(line: 1434, column: 377, scope: !12980)
!13023 = !DILocation(line: 1434, column: 352, scope: !12980)
!13024 = !DILocation(line: 1434, column: 326, scope: !12980)
!13025 = !DILocation(line: 1434, column: 313, scope: !12980)
!13026 = !DILocation(line: 1434, column: 331, scope: !12980)
!13027 = !DILocation(line: 1434, column: 389, scope: !12980)
!13028 = !DILocation(line: 1434, column: 400, scope: !12980)
!13029 = !DILocation(line: 1434, column: 439, scope: !12980)
!13030 = !DILocation(line: 1434, column: 426, scope: !12980)
!13031 = !DILocation(line: 1434, column: 460, scope: !12980)
!13032 = !DILocation(line: 1434, column: 465, scope: !12980)
!13033 = !DILocation(line: 1434, column: 448, scope: !12980)
!13034 = !DILocation(line: 1434, column: 470, scope: !12980)
!13035 = !DILocation(line: 1434, column: 445, scope: !12980)
!13036 = !DILocation(line: 1434, column: 419, scope: !12980)
!13037 = !DILocation(line: 1434, column: 406, scope: !12980)
!13038 = !DILocation(line: 1434, column: 424, scope: !12980)
!13039 = !DILocation(line: 1434, column: 482, scope: !12980)
!13040 = !DILocation(line: 1434, column: 493, scope: !12980)
!13041 = !DILocation(line: 1434, column: 532, scope: !12980)
!13042 = !DILocation(line: 1434, column: 519, scope: !12980)
!13043 = !DILocation(line: 1434, column: 553, scope: !12980)
!13044 = !DILocation(line: 1434, column: 558, scope: !12980)
!13045 = !DILocation(line: 1434, column: 541, scope: !12980)
!13046 = !DILocation(line: 1434, column: 563, scope: !12980)
!13047 = !DILocation(line: 1434, column: 538, scope: !12980)
!13048 = !DILocation(line: 1434, column: 512, scope: !12980)
!13049 = !DILocation(line: 1434, column: 499, scope: !12980)
!13050 = !DILocation(line: 1434, column: 517, scope: !12980)
!13051 = !DILocation(line: 1434, column: 575, scope: !12980)
!13052 = !DILocation(line: 1434, column: 586, scope: !12980)
!13053 = !DILocation(line: 1434, column: 625, scope: !12980)
!13054 = !DILocation(line: 1434, column: 612, scope: !12980)
!13055 = !DILocation(line: 1434, column: 646, scope: !12980)
!13056 = !DILocation(line: 1434, column: 651, scope: !12980)
!13057 = !DILocation(line: 1434, column: 634, scope: !12980)
!13058 = !DILocation(line: 1434, column: 656, scope: !12980)
!13059 = !DILocation(line: 1434, column: 631, scope: !12980)
!13060 = !DILocation(line: 1434, column: 605, scope: !12980)
!13061 = !DILocation(line: 1434, column: 592, scope: !12980)
!13062 = !DILocation(line: 1434, column: 610, scope: !12980)
!13063 = !DILocation(line: 1434, column: 668, scope: !12980)
!13064 = !DILocation(line: 1434, column: 679, scope: !12980)
!13065 = !DILocation(line: 1434, column: 718, scope: !12980)
!13066 = !DILocation(line: 1434, column: 705, scope: !12980)
!13067 = !DILocation(line: 1434, column: 739, scope: !12980)
!13068 = !DILocation(line: 1434, column: 744, scope: !12980)
!13069 = !DILocation(line: 1434, column: 727, scope: !12980)
!13070 = !DILocation(line: 1434, column: 749, scope: !12980)
!13071 = !DILocation(line: 1434, column: 724, scope: !12980)
!13072 = !DILocation(line: 1434, column: 698, scope: !12980)
!13073 = !DILocation(line: 1434, column: 685, scope: !12980)
!13074 = !DILocation(line: 1434, column: 703, scope: !12980)
!13075 = !DILocation(line: 1434, column: 761, scope: !12980)
!13076 = !DILocation(line: 1434, column: 772, scope: !12980)
!13077 = !DILocation(line: 1434, column: 5, scope: !12980)
!13078 = distinct !{!13078, !12970}
!13079 = !DILocation(line: 1434, column: 780, scope: !13080)
!13080 = !DILexicalBlockFile(scope: !12971, file: !243, discriminator: 3)
!13081 = !DILocation(line: 1434, column: 787, scope: !13082)
!13082 = !DILexicalBlockFile(scope: !12971, file: !243, discriminator: 4)
!13083 = !DILocation(line: 1434, column: 793, scope: !13082)
!13084 = !DILocation(line: 1434, column: 791, scope: !13082)
!13085 = !DILocation(line: 1434, column: 780, scope: !13082)
!13086 = !DILocation(line: 1434, column: 833, scope: !13087)
!13087 = !DILexicalBlockFile(scope: !13088, file: !243, discriminator: 5)
!13088 = distinct !DILexicalBlock(scope: !12971, file: !243, line: 1434, column: 798)
!13089 = !DILocation(line: 1434, column: 820, scope: !13087)
!13090 = !DILocation(line: 1434, column: 854, scope: !13087)
!13091 = !DILocation(line: 1434, column: 859, scope: !13087)
!13092 = !DILocation(line: 1434, column: 842, scope: !13087)
!13093 = !DILocation(line: 1434, column: 864, scope: !13087)
!13094 = !DILocation(line: 1434, column: 839, scope: !13087)
!13095 = !DILocation(line: 1434, column: 813, scope: !13087)
!13096 = !DILocation(line: 1434, column: 800, scope: !13087)
!13097 = !DILocation(line: 1434, column: 818, scope: !13087)
!13098 = !DILocation(line: 1434, column: 876, scope: !13087)
!13099 = !DILocation(line: 1434, column: 887, scope: !13087)
!13100 = !DILocation(line: 1434, column: 780, scope: !13087)
!13101 = distinct !{!13101, !13102}
!13102 = !DILocation(line: 1434, column: 780, scope: !12971)
!13103 = !DILocation(line: 1443, column: 2, scope: !12972)
!13104 = !DILocation(line: 1444, column: 11, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !12968, file: !243, line: 1444, column: 11)
!13106 = !DILocation(line: 1444, column: 11, scope: !12968)
!13107 = !DILocation(line: 1446, column: 3, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13105, file: !243, line: 1445, column: 2)
!13109 = !DILocation(line: 1446, column: 10, scope: !13110)
!13110 = !DILexicalBlockFile(scope: !13108, file: !243, discriminator: 1)
!13111 = !DILocation(line: 1446, column: 16, scope: !13110)
!13112 = !DILocation(line: 1446, column: 14, scope: !13110)
!13113 = !DILocation(line: 1446, column: 3, scope: !13110)
!13114 = !DILocation(line: 1448, column: 18, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13108, file: !243, line: 1447, column: 3)
!13116 = !DILocation(line: 1448, column: 12, scope: !13115)
!13117 = !DILocation(line: 1448, column: 22, scope: !13115)
!13118 = !DILocation(line: 1448, column: 10, scope: !13115)
!13119 = !DILocation(line: 1449, column: 19, scope: !13115)
!13120 = !DILocation(line: 1449, column: 13, scope: !13115)
!13121 = !DILocation(line: 1449, column: 23, scope: !13115)
!13122 = !DILocation(line: 1449, column: 10, scope: !13115)
!13123 = !DILocation(line: 1450, column: 19, scope: !13115)
!13124 = !DILocation(line: 1450, column: 13, scope: !13115)
!13125 = !DILocation(line: 1450, column: 10, scope: !13115)
!13126 = !DILocation(line: 1451, column: 17, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13115, file: !243, line: 1451, column: 4)
!13128 = !DILocation(line: 1451, column: 23, scope: !13127)
!13129 = !DILocation(line: 1451, column: 35, scope: !13127)
!13130 = !DILocation(line: 1451, column: 9, scope: !13127)
!13131 = !DILocation(line: 1451, column: 14, scope: !13127)
!13132 = !DILocation(line: 1451, column: 54, scope: !13127)
!13133 = !DILocation(line: 1451, column: 60, scope: !13127)
!13134 = !DILocation(line: 1451, column: 72, scope: !13127)
!13135 = !DILocation(line: 1451, column: 45, scope: !13127)
!13136 = !DILocation(line: 1451, column: 51, scope: !13127)
!13137 = !DILocation(line: 1451, column: 88, scope: !13127)
!13138 = !DILocation(line: 1451, column: 94, scope: !13127)
!13139 = !DILocation(line: 1451, column: 81, scope: !13127)
!13140 = !DILocation(line: 1451, column: 85, scope: !13127)
!13141 = !DILocation(line: 1452, column: 17, scope: !13115)
!13142 = !DILocation(line: 1452, column: 24, scope: !13115)
!13143 = !DILocation(line: 1452, column: 21, scope: !13115)
!13144 = !DILocation(line: 1452, column: 42, scope: !13115)
!13145 = !DILocation(line: 1452, column: 39, scope: !13115)
!13146 = !DILocation(line: 1452, column: 64, scope: !13115)
!13147 = !DILocation(line: 1452, column: 73, scope: !13115)
!13148 = !DILocation(line: 1452, column: 70, scope: !13115)
!13149 = !DILocation(line: 1452, column: 93, scope: !13115)
!13150 = !DILocation(line: 1452, column: 90, scope: !13115)
!13151 = !DILocation(line: 1452, column: 57, scope: !13115)
!13152 = !DILocation(line: 1452, column: 117, scope: !13115)
!13153 = !DILocation(line: 1452, column: 125, scope: !13115)
!13154 = !DILocation(line: 1452, column: 122, scope: !13115)
!13155 = !DILocation(line: 1452, column: 144, scope: !13115)
!13156 = !DILocation(line: 1452, column: 141, scope: !13115)
!13157 = !DILocation(line: 1452, column: 110, scope: !13115)
!13158 = !DILocation(line: 1452, column: 10, scope: !13115)
!13159 = !DILocation(line: 1453, column: 17, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !13115, file: !243, line: 1453, column: 4)
!13161 = !DILocation(line: 1453, column: 23, scope: !13160)
!13162 = !DILocation(line: 1453, column: 11, scope: !13160)
!13163 = !DILocation(line: 1453, column: 15, scope: !13160)
!13164 = !DILocation(line: 1453, column: 41, scope: !13160)
!13165 = !DILocation(line: 1453, column: 47, scope: !13160)
!13166 = !DILocation(line: 1453, column: 35, scope: !13160)
!13167 = !DILocation(line: 1453, column: 39, scope: !13160)
!13168 = !DILocation(line: 1453, column: 65, scope: !13160)
!13169 = !DILocation(line: 1453, column: 71, scope: !13160)
!13170 = !DILocation(line: 1453, column: 59, scope: !13160)
!13171 = !DILocation(line: 1453, column: 63, scope: !13160)
!13172 = !DILocation(line: 1453, column: 88, scope: !13160)
!13173 = !DILocation(line: 1453, column: 82, scope: !13160)
!13174 = !DILocation(line: 1453, column: 86, scope: !13160)
!13175 = !DILocation(line: 1446, column: 3, scope: !13176)
!13176 = !DILexicalBlockFile(scope: !13108, file: !243, discriminator: 2)
!13177 = distinct !{!13177, !13107}
!13178 = !DILocation(line: 1455, column: 2, scope: !13108)
!13179 = !DILocation(line: 1458, column: 3, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13105, file: !243, line: 1457, column: 2)
!13181 = !DILocation(line: 1458, column: 10, scope: !13182)
!13182 = !DILexicalBlockFile(scope: !13180, file: !243, discriminator: 1)
!13183 = !DILocation(line: 1458, column: 16, scope: !13182)
!13184 = !DILocation(line: 1458, column: 14, scope: !13182)
!13185 = !DILocation(line: 1458, column: 3, scope: !13182)
!13186 = !DILocation(line: 1460, column: 18, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13180, file: !243, line: 1459, column: 3)
!13188 = !DILocation(line: 1460, column: 12, scope: !13187)
!13189 = !DILocation(line: 1460, column: 22, scope: !13187)
!13190 = !DILocation(line: 1460, column: 10, scope: !13187)
!13191 = !DILocation(line: 1461, column: 19, scope: !13187)
!13192 = !DILocation(line: 1461, column: 13, scope: !13187)
!13193 = !DILocation(line: 1461, column: 23, scope: !13187)
!13194 = !DILocation(line: 1461, column: 10, scope: !13187)
!13195 = !DILocation(line: 1462, column: 19, scope: !13187)
!13196 = !DILocation(line: 1462, column: 13, scope: !13187)
!13197 = !DILocation(line: 1462, column: 10, scope: !13187)
!13198 = !DILocation(line: 1463, column: 17, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13187, file: !243, line: 1463, column: 4)
!13200 = !DILocation(line: 1463, column: 23, scope: !13199)
!13201 = !DILocation(line: 1463, column: 35, scope: !13199)
!13202 = !DILocation(line: 1463, column: 9, scope: !13199)
!13203 = !DILocation(line: 1463, column: 14, scope: !13199)
!13204 = !DILocation(line: 1463, column: 54, scope: !13199)
!13205 = !DILocation(line: 1463, column: 60, scope: !13199)
!13206 = !DILocation(line: 1463, column: 72, scope: !13199)
!13207 = !DILocation(line: 1463, column: 45, scope: !13199)
!13208 = !DILocation(line: 1463, column: 51, scope: !13199)
!13209 = !DILocation(line: 1463, column: 88, scope: !13199)
!13210 = !DILocation(line: 1463, column: 94, scope: !13199)
!13211 = !DILocation(line: 1463, column: 81, scope: !13199)
!13212 = !DILocation(line: 1463, column: 85, scope: !13199)
!13213 = !DILocation(line: 1464, column: 17, scope: !13187)
!13214 = !DILocation(line: 1464, column: 24, scope: !13187)
!13215 = !DILocation(line: 1464, column: 21, scope: !13187)
!13216 = !DILocation(line: 1464, column: 42, scope: !13187)
!13217 = !DILocation(line: 1464, column: 39, scope: !13187)
!13218 = !DILocation(line: 1464, column: 64, scope: !13187)
!13219 = !DILocation(line: 1464, column: 73, scope: !13187)
!13220 = !DILocation(line: 1464, column: 70, scope: !13187)
!13221 = !DILocation(line: 1464, column: 93, scope: !13187)
!13222 = !DILocation(line: 1464, column: 90, scope: !13187)
!13223 = !DILocation(line: 1464, column: 57, scope: !13187)
!13224 = !DILocation(line: 1464, column: 117, scope: !13187)
!13225 = !DILocation(line: 1464, column: 125, scope: !13187)
!13226 = !DILocation(line: 1464, column: 122, scope: !13187)
!13227 = !DILocation(line: 1464, column: 144, scope: !13187)
!13228 = !DILocation(line: 1464, column: 141, scope: !13187)
!13229 = !DILocation(line: 1464, column: 110, scope: !13187)
!13230 = !DILocation(line: 1464, column: 10, scope: !13187)
!13231 = !DILocation(line: 1465, column: 17, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13187, file: !243, line: 1465, column: 4)
!13233 = !DILocation(line: 1465, column: 11, scope: !13232)
!13234 = !DILocation(line: 1465, column: 15, scope: !13232)
!13235 = !DILocation(line: 1465, column: 35, scope: !13232)
!13236 = !DILocation(line: 1465, column: 41, scope: !13232)
!13237 = !DILocation(line: 1465, column: 29, scope: !13232)
!13238 = !DILocation(line: 1465, column: 33, scope: !13232)
!13239 = !DILocation(line: 1465, column: 58, scope: !13232)
!13240 = !DILocation(line: 1465, column: 64, scope: !13232)
!13241 = !DILocation(line: 1465, column: 52, scope: !13232)
!13242 = !DILocation(line: 1465, column: 56, scope: !13232)
!13243 = !DILocation(line: 1465, column: 82, scope: !13232)
!13244 = !DILocation(line: 1465, column: 88, scope: !13232)
!13245 = !DILocation(line: 1465, column: 76, scope: !13232)
!13246 = !DILocation(line: 1465, column: 80, scope: !13232)
!13247 = !DILocation(line: 1458, column: 3, scope: !13248)
!13248 = !DILexicalBlockFile(scope: !13180, file: !243, discriminator: 2)
!13249 = distinct !{!13249, !13179}
!13250 = !DILocation(line: 1468, column: 1, scope: !12950)
!13251 = distinct !DISubprogram(name: "translate24to24", scope: !243, file: !243, line: 1383, type: !12951, isLocal: true, isDefinition: true, scopeLine: 1384, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!13252 = !DILocalVariable(name: "data", arg: 1, scope: !13251, file: !243, line: 1383, type: !12953)
!13253 = !DILocation(line: 1383, column: 31, scope: !13251)
!13254 = !DILocalVariable(name: "out", arg: 2, scope: !13251, file: !243, line: 1383, type: !46)
!13255 = !DILocation(line: 1383, column: 45, scope: !13251)
!13256 = !DILocalVariable(name: "end", arg: 3, scope: !13251, file: !243, line: 1383, type: !46)
!13257 = !DILocation(line: 1383, column: 58, scope: !13251)
!13258 = !DILocalVariable(name: "pixel", scope: !13251, file: !243, line: 1385, type: !193)
!13259 = !DILocation(line: 1385, column: 9, scope: !13251)
!13260 = !DILocalVariable(name: "value", scope: !13251, file: !243, line: 1386, type: !193)
!13261 = !DILocation(line: 1386, column: 9, scope: !13251)
!13262 = !DILocalVariable(name: "pc", scope: !13251, file: !243, line: 1387, type: !4417)
!13263 = !DILocation(line: 1387, column: 14, scope: !13251)
!13264 = !DILocation(line: 1389, column: 6, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13251, file: !243, line: 1389, column: 6)
!13266 = !DILocation(line: 1389, column: 6, scope: !13251)
!13267 = !DILocation(line: 1391, column: 3, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13265, file: !243, line: 1390, column: 2)
!13269 = !DILocation(line: 1391, column: 10, scope: !13270)
!13270 = !DILexicalBlockFile(scope: !13268, file: !243, discriminator: 1)
!13271 = !DILocation(line: 1391, column: 16, scope: !13270)
!13272 = !DILocation(line: 1391, column: 14, scope: !13270)
!13273 = !DILocation(line: 1391, column: 3, scope: !13270)
!13274 = !DILocation(line: 1393, column: 18, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13268, file: !243, line: 1392, column: 3)
!13276 = !DILocation(line: 1393, column: 12, scope: !13275)
!13277 = !DILocation(line: 1393, column: 22, scope: !13275)
!13278 = !DILocation(line: 1393, column: 10, scope: !13275)
!13279 = !DILocation(line: 1394, column: 19, scope: !13275)
!13280 = !DILocation(line: 1394, column: 13, scope: !13275)
!13281 = !DILocation(line: 1394, column: 23, scope: !13275)
!13282 = !DILocation(line: 1394, column: 10, scope: !13275)
!13283 = !DILocation(line: 1395, column: 19, scope: !13275)
!13284 = !DILocation(line: 1395, column: 13, scope: !13275)
!13285 = !DILocation(line: 1395, column: 10, scope: !13275)
!13286 = !DILocation(line: 1396, column: 17, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13275, file: !243, line: 1396, column: 4)
!13288 = !DILocation(line: 1396, column: 23, scope: !13287)
!13289 = !DILocation(line: 1396, column: 35, scope: !13287)
!13290 = !DILocation(line: 1396, column: 9, scope: !13287)
!13291 = !DILocation(line: 1396, column: 14, scope: !13287)
!13292 = !DILocation(line: 1396, column: 54, scope: !13287)
!13293 = !DILocation(line: 1396, column: 60, scope: !13287)
!13294 = !DILocation(line: 1396, column: 72, scope: !13287)
!13295 = !DILocation(line: 1396, column: 45, scope: !13287)
!13296 = !DILocation(line: 1396, column: 51, scope: !13287)
!13297 = !DILocation(line: 1396, column: 88, scope: !13287)
!13298 = !DILocation(line: 1396, column: 94, scope: !13287)
!13299 = !DILocation(line: 1396, column: 81, scope: !13287)
!13300 = !DILocation(line: 1396, column: 85, scope: !13287)
!13301 = !DILocation(line: 1397, column: 17, scope: !13275)
!13302 = !DILocation(line: 1397, column: 24, scope: !13275)
!13303 = !DILocation(line: 1397, column: 21, scope: !13275)
!13304 = !DILocation(line: 1397, column: 42, scope: !13275)
!13305 = !DILocation(line: 1397, column: 39, scope: !13275)
!13306 = !DILocation(line: 1397, column: 64, scope: !13275)
!13307 = !DILocation(line: 1397, column: 73, scope: !13275)
!13308 = !DILocation(line: 1397, column: 70, scope: !13275)
!13309 = !DILocation(line: 1397, column: 93, scope: !13275)
!13310 = !DILocation(line: 1397, column: 90, scope: !13275)
!13311 = !DILocation(line: 1397, column: 57, scope: !13275)
!13312 = !DILocation(line: 1397, column: 117, scope: !13275)
!13313 = !DILocation(line: 1397, column: 125, scope: !13275)
!13314 = !DILocation(line: 1397, column: 122, scope: !13275)
!13315 = !DILocation(line: 1397, column: 144, scope: !13275)
!13316 = !DILocation(line: 1397, column: 141, scope: !13275)
!13317 = !DILocation(line: 1397, column: 110, scope: !13275)
!13318 = !DILocation(line: 1397, column: 10, scope: !13275)
!13319 = !DILocation(line: 1398, column: 17, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13275, file: !243, line: 1398, column: 4)
!13321 = !DILocation(line: 1398, column: 23, scope: !13320)
!13322 = !DILocation(line: 1398, column: 11, scope: !13320)
!13323 = !DILocation(line: 1398, column: 15, scope: !13320)
!13324 = !DILocation(line: 1398, column: 41, scope: !13320)
!13325 = !DILocation(line: 1398, column: 47, scope: !13320)
!13326 = !DILocation(line: 1398, column: 35, scope: !13320)
!13327 = !DILocation(line: 1398, column: 39, scope: !13320)
!13328 = !DILocation(line: 1398, column: 64, scope: !13320)
!13329 = !DILocation(line: 1398, column: 58, scope: !13320)
!13330 = !DILocation(line: 1398, column: 62, scope: !13320)
!13331 = !DILocation(line: 1391, column: 3, scope: !13332)
!13332 = !DILexicalBlockFile(scope: !13268, file: !243, discriminator: 2)
!13333 = distinct !{!13333, !13267}
!13334 = !DILocation(line: 1400, column: 2, scope: !13268)
!13335 = !DILocation(line: 1403, column: 3, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13265, file: !243, line: 1402, column: 2)
!13337 = !DILocation(line: 1403, column: 10, scope: !13338)
!13338 = !DILexicalBlockFile(scope: !13336, file: !243, discriminator: 1)
!13339 = !DILocation(line: 1403, column: 16, scope: !13338)
!13340 = !DILocation(line: 1403, column: 14, scope: !13338)
!13341 = !DILocation(line: 1403, column: 3, scope: !13338)
!13342 = !DILocation(line: 1405, column: 18, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13336, file: !243, line: 1404, column: 3)
!13344 = !DILocation(line: 1405, column: 12, scope: !13343)
!13345 = !DILocation(line: 1405, column: 22, scope: !13343)
!13346 = !DILocation(line: 1405, column: 10, scope: !13343)
!13347 = !DILocation(line: 1406, column: 19, scope: !13343)
!13348 = !DILocation(line: 1406, column: 13, scope: !13343)
!13349 = !DILocation(line: 1406, column: 23, scope: !13343)
!13350 = !DILocation(line: 1406, column: 10, scope: !13343)
!13351 = !DILocation(line: 1407, column: 19, scope: !13343)
!13352 = !DILocation(line: 1407, column: 13, scope: !13343)
!13353 = !DILocation(line: 1407, column: 10, scope: !13343)
!13354 = !DILocation(line: 1408, column: 17, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13343, file: !243, line: 1408, column: 4)
!13356 = !DILocation(line: 1408, column: 23, scope: !13355)
!13357 = !DILocation(line: 1408, column: 35, scope: !13355)
!13358 = !DILocation(line: 1408, column: 9, scope: !13355)
!13359 = !DILocation(line: 1408, column: 14, scope: !13355)
!13360 = !DILocation(line: 1408, column: 54, scope: !13355)
!13361 = !DILocation(line: 1408, column: 60, scope: !13355)
!13362 = !DILocation(line: 1408, column: 72, scope: !13355)
!13363 = !DILocation(line: 1408, column: 45, scope: !13355)
!13364 = !DILocation(line: 1408, column: 51, scope: !13355)
!13365 = !DILocation(line: 1408, column: 88, scope: !13355)
!13366 = !DILocation(line: 1408, column: 94, scope: !13355)
!13367 = !DILocation(line: 1408, column: 81, scope: !13355)
!13368 = !DILocation(line: 1408, column: 85, scope: !13355)
!13369 = !DILocation(line: 1409, column: 17, scope: !13343)
!13370 = !DILocation(line: 1409, column: 24, scope: !13343)
!13371 = !DILocation(line: 1409, column: 21, scope: !13343)
!13372 = !DILocation(line: 1409, column: 42, scope: !13343)
!13373 = !DILocation(line: 1409, column: 39, scope: !13343)
!13374 = !DILocation(line: 1409, column: 64, scope: !13343)
!13375 = !DILocation(line: 1409, column: 73, scope: !13343)
!13376 = !DILocation(line: 1409, column: 70, scope: !13343)
!13377 = !DILocation(line: 1409, column: 93, scope: !13343)
!13378 = !DILocation(line: 1409, column: 90, scope: !13343)
!13379 = !DILocation(line: 1409, column: 57, scope: !13343)
!13380 = !DILocation(line: 1409, column: 117, scope: !13343)
!13381 = !DILocation(line: 1409, column: 125, scope: !13343)
!13382 = !DILocation(line: 1409, column: 122, scope: !13343)
!13383 = !DILocation(line: 1409, column: 144, scope: !13343)
!13384 = !DILocation(line: 1409, column: 141, scope: !13343)
!13385 = !DILocation(line: 1409, column: 110, scope: !13343)
!13386 = !DILocation(line: 1409, column: 10, scope: !13343)
!13387 = !DILocation(line: 1410, column: 17, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13343, file: !243, line: 1410, column: 4)
!13389 = !DILocation(line: 1410, column: 11, scope: !13388)
!13390 = !DILocation(line: 1410, column: 15, scope: !13388)
!13391 = !DILocation(line: 1410, column: 35, scope: !13388)
!13392 = !DILocation(line: 1410, column: 41, scope: !13388)
!13393 = !DILocation(line: 1410, column: 29, scope: !13388)
!13394 = !DILocation(line: 1410, column: 33, scope: !13388)
!13395 = !DILocation(line: 1410, column: 58, scope: !13388)
!13396 = !DILocation(line: 1410, column: 64, scope: !13388)
!13397 = !DILocation(line: 1410, column: 52, scope: !13388)
!13398 = !DILocation(line: 1410, column: 56, scope: !13388)
!13399 = !DILocation(line: 1403, column: 3, scope: !13400)
!13400 = !DILexicalBlockFile(scope: !13336, file: !243, discriminator: 2)
!13401 = distinct !{!13401, !13335}
!13402 = !DILocation(line: 1413, column: 1, scope: !13251)
!13403 = distinct !DISubprogram(name: "translate24to16", scope: !243, file: !243, line: 1358, type: !12951, isLocal: true, isDefinition: true, scopeLine: 1359, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!13404 = !DILocalVariable(name: "data", arg: 1, scope: !13403, file: !243, line: 1358, type: !12953)
!13405 = !DILocation(line: 1358, column: 31, scope: !13403)
!13406 = !DILocalVariable(name: "out", arg: 2, scope: !13403, file: !243, line: 1358, type: !46)
!13407 = !DILocation(line: 1358, column: 45, scope: !13403)
!13408 = !DILocalVariable(name: "end", arg: 3, scope: !13403, file: !243, line: 1358, type: !46)
!13409 = !DILocation(line: 1358, column: 58, scope: !13403)
!13410 = !DILocalVariable(name: "pixel", scope: !13403, file: !243, line: 1360, type: !193)
!13411 = !DILocation(line: 1360, column: 9, scope: !13403)
!13412 = !DILocalVariable(name: "value", scope: !13403, file: !243, line: 1361, type: !240)
!13413 = !DILocation(line: 1361, column: 9, scope: !13403)
!13414 = !DILocalVariable(name: "pc", scope: !13403, file: !243, line: 1362, type: !4417)
!13415 = !DILocation(line: 1362, column: 14, scope: !13403)
!13416 = !DILocation(line: 1364, column: 2, scope: !13403)
!13417 = !DILocation(line: 1364, column: 9, scope: !13418)
!13418 = !DILexicalBlockFile(scope: !13403, file: !243, discriminator: 1)
!13419 = !DILocation(line: 1364, column: 15, scope: !13418)
!13420 = !DILocation(line: 1364, column: 13, scope: !13418)
!13421 = !DILocation(line: 1364, column: 2, scope: !13418)
!13422 = !DILocation(line: 1366, column: 17, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13403, file: !243, line: 1365, column: 2)
!13424 = !DILocation(line: 1366, column: 11, scope: !13423)
!13425 = !DILocation(line: 1366, column: 21, scope: !13423)
!13426 = !DILocation(line: 1366, column: 9, scope: !13423)
!13427 = !DILocation(line: 1367, column: 18, scope: !13423)
!13428 = !DILocation(line: 1367, column: 12, scope: !13423)
!13429 = !DILocation(line: 1367, column: 22, scope: !13423)
!13430 = !DILocation(line: 1367, column: 9, scope: !13423)
!13431 = !DILocation(line: 1368, column: 18, scope: !13423)
!13432 = !DILocation(line: 1368, column: 12, scope: !13423)
!13433 = !DILocation(line: 1368, column: 9, scope: !13423)
!13434 = !DILocation(line: 1369, column: 16, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13423, file: !243, line: 1369, column: 3)
!13436 = !DILocation(line: 1369, column: 22, scope: !13435)
!13437 = !DILocation(line: 1369, column: 34, scope: !13435)
!13438 = !DILocation(line: 1369, column: 8, scope: !13435)
!13439 = !DILocation(line: 1369, column: 13, scope: !13435)
!13440 = !DILocation(line: 1369, column: 53, scope: !13435)
!13441 = !DILocation(line: 1369, column: 59, scope: !13435)
!13442 = !DILocation(line: 1369, column: 71, scope: !13435)
!13443 = !DILocation(line: 1369, column: 44, scope: !13435)
!13444 = !DILocation(line: 1369, column: 50, scope: !13435)
!13445 = !DILocation(line: 1369, column: 87, scope: !13435)
!13446 = !DILocation(line: 1369, column: 93, scope: !13435)
!13447 = !DILocation(line: 1369, column: 80, scope: !13435)
!13448 = !DILocation(line: 1369, column: 84, scope: !13435)
!13449 = !DILocation(line: 1370, column: 16, scope: !13423)
!13450 = !DILocation(line: 1370, column: 23, scope: !13423)
!13451 = !DILocation(line: 1370, column: 20, scope: !13423)
!13452 = !DILocation(line: 1370, column: 41, scope: !13423)
!13453 = !DILocation(line: 1370, column: 38, scope: !13423)
!13454 = !DILocation(line: 1370, column: 63, scope: !13423)
!13455 = !DILocation(line: 1370, column: 72, scope: !13423)
!13456 = !DILocation(line: 1370, column: 69, scope: !13423)
!13457 = !DILocation(line: 1370, column: 92, scope: !13423)
!13458 = !DILocation(line: 1370, column: 89, scope: !13423)
!13459 = !DILocation(line: 1370, column: 56, scope: !13423)
!13460 = !DILocation(line: 1370, column: 116, scope: !13423)
!13461 = !DILocation(line: 1370, column: 124, scope: !13423)
!13462 = !DILocation(line: 1370, column: 121, scope: !13423)
!13463 = !DILocation(line: 1370, column: 143, scope: !13423)
!13464 = !DILocation(line: 1370, column: 140, scope: !13423)
!13465 = !DILocation(line: 1370, column: 109, scope: !13423)
!13466 = !DILocation(line: 1370, column: 11, scope: !13423)
!13467 = !DILocation(line: 1370, column: 9, scope: !13423)
!13468 = !DILocation(line: 1371, column: 7, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13423, file: !243, line: 1371, column: 7)
!13470 = !DILocation(line: 1371, column: 7, scope: !13423)
!13471 = !DILocation(line: 1373, column: 17, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13473, file: !243, line: 1373, column: 4)
!13473 = distinct !DILexicalBlock(scope: !13469, file: !243, line: 1372, column: 3)
!13474 = !DILocation(line: 1373, column: 23, scope: !13472)
!13475 = !DILocation(line: 1373, column: 11, scope: !13472)
!13476 = !DILocation(line: 1373, column: 15, scope: !13472)
!13477 = !DILocation(line: 1373, column: 40, scope: !13472)
!13478 = !DILocation(line: 1373, column: 34, scope: !13472)
!13479 = !DILocation(line: 1373, column: 38, scope: !13472)
!13480 = !DILocation(line: 1374, column: 3, scope: !13473)
!13481 = !DILocation(line: 1377, column: 17, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13483, file: !243, line: 1377, column: 4)
!13483 = distinct !DILexicalBlock(scope: !13469, file: !243, line: 1376, column: 3)
!13484 = !DILocation(line: 1377, column: 11, scope: !13482)
!13485 = !DILocation(line: 1377, column: 15, scope: !13482)
!13486 = !DILocation(line: 1377, column: 35, scope: !13482)
!13487 = !DILocation(line: 1377, column: 41, scope: !13482)
!13488 = !DILocation(line: 1377, column: 29, scope: !13482)
!13489 = !DILocation(line: 1377, column: 33, scope: !13482)
!13490 = !DILocation(line: 1364, column: 2, scope: !13491)
!13491 = !DILexicalBlockFile(scope: !13403, file: !243, discriminator: 2)
!13492 = distinct !{!13492, !13416}
!13493 = !DILocation(line: 1380, column: 1, scope: !13403)
!13494 = distinct !DISubprogram(name: "translate16to32", scope: !243, file: !243, line: 1287, type: !13495, isLocal: true, isDefinition: true, scopeLine: 1288, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!13495 = !DISubroutineType(types: !13496)
!13496 = !{null, !13497, !46, !46}
!13497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13498, size: 64, align: 64)
!13498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!13499 = !DILocalVariable(name: "data", arg: 1, scope: !13494, file: !243, line: 1287, type: !13497)
!13500 = !DILocation(line: 1287, column: 32, scope: !13494)
!13501 = !DILocalVariable(name: "out", arg: 2, scope: !13494, file: !243, line: 1287, type: !46)
!13502 = !DILocation(line: 1287, column: 46, scope: !13494)
!13503 = !DILocalVariable(name: "end", arg: 3, scope: !13494, file: !243, line: 1287, type: !46)
!13504 = !DILocation(line: 1287, column: 59, scope: !13494)
!13505 = !DILocalVariable(name: "pixel", scope: !13494, file: !243, line: 1289, type: !240)
!13506 = !DILocation(line: 1289, column: 9, scope: !13494)
!13507 = !DILocalVariable(name: "value", scope: !13494, file: !243, line: 1290, type: !193)
!13508 = !DILocation(line: 1290, column: 9, scope: !13494)
!13509 = !DILocalVariable(name: "pc", scope: !13494, file: !243, line: 1291, type: !4417)
!13510 = !DILocation(line: 1291, column: 14, scope: !13494)
!13511 = !DILocation(line: 1293, column: 6, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13494, file: !243, line: 1293, column: 6)
!13513 = !DILocation(line: 1293, column: 6, scope: !13494)
!13514 = !DILocation(line: 1296, column: 5, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13516, file: !243, line: 1296, column: 3)
!13516 = distinct !DILexicalBlock(scope: !13512, file: !243, line: 1294, column: 2)
!13517 = !DILocation(line: 1296, column: 12, scope: !13518)
!13518 = !DILexicalBlockFile(scope: !13515, file: !243, discriminator: 1)
!13519 = !DILocation(line: 1296, column: 19, scope: !13518)
!13520 = !DILocation(line: 1296, column: 23, scope: !13518)
!13521 = !DILocation(line: 1296, column: 16, scope: !13518)
!13522 = !DILocation(line: 1296, column: 5, scope: !13518)
!13523 = !DILocation(line: 1296, column: 48, scope: !13524)
!13524 = !DILexicalBlockFile(scope: !13525, file: !243, discriminator: 2)
!13525 = distinct !DILexicalBlock(scope: !13515, file: !243, line: 1296, column: 32)
!13526 = !DILocation(line: 1296, column: 42, scope: !13524)
!13527 = !DILocation(line: 1296, column: 40, scope: !13524)
!13528 = !DILocation(line: 1296, column: 66, scope: !13524)
!13529 = !DILocation(line: 1296, column: 72, scope: !13524)
!13530 = !DILocation(line: 1296, column: 78, scope: !13524)
!13531 = !DILocation(line: 1296, column: 90, scope: !13524)
!13532 = !DILocation(line: 1296, column: 96, scope: !13524)
!13533 = !DILocation(line: 1296, column: 103, scope: !13524)
!13534 = !DILocation(line: 1296, column: 86, scope: !13524)
!13535 = !DILocation(line: 1296, column: 58, scope: !13524)
!13536 = !DILocation(line: 1296, column: 62, scope: !13524)
!13537 = !DILocation(line: 1296, column: 124, scope: !13524)
!13538 = !DILocation(line: 1296, column: 130, scope: !13524)
!13539 = !DILocation(line: 1296, column: 136, scope: !13524)
!13540 = !DILocation(line: 1296, column: 148, scope: !13524)
!13541 = !DILocation(line: 1296, column: 154, scope: !13524)
!13542 = !DILocation(line: 1296, column: 160, scope: !13524)
!13543 = !DILocation(line: 1296, column: 144, scope: !13524)
!13544 = !DILocation(line: 1296, column: 114, scope: !13524)
!13545 = !DILocation(line: 1296, column: 120, scope: !13524)
!13546 = !DILocation(line: 1296, column: 180, scope: !13524)
!13547 = !DILocation(line: 1296, column: 186, scope: !13524)
!13548 = !DILocation(line: 1296, column: 192, scope: !13524)
!13549 = !DILocation(line: 1296, column: 204, scope: !13524)
!13550 = !DILocation(line: 1296, column: 210, scope: !13524)
!13551 = !DILocation(line: 1296, column: 216, scope: !13524)
!13552 = !DILocation(line: 1296, column: 200, scope: !13524)
!13553 = !DILocation(line: 1296, column: 171, scope: !13524)
!13554 = !DILocation(line: 1296, column: 176, scope: !13524)
!13555 = !DILocation(line: 1296, column: 241, scope: !13524)
!13556 = !DILocation(line: 1296, column: 238, scope: !13524)
!13557 = !DILocation(line: 1296, column: 232, scope: !13524)
!13558 = !DILocation(line: 1296, column: 236, scope: !13524)
!13559 = !DILocation(line: 1296, column: 261, scope: !13524)
!13560 = !DILocation(line: 1296, column: 258, scope: !13524)
!13561 = !DILocation(line: 1296, column: 252, scope: !13524)
!13562 = !DILocation(line: 1296, column: 256, scope: !13524)
!13563 = !DILocation(line: 1296, column: 282, scope: !13524)
!13564 = !DILocation(line: 1296, column: 279, scope: !13524)
!13565 = !DILocation(line: 1296, column: 273, scope: !13524)
!13566 = !DILocation(line: 1296, column: 277, scope: !13524)
!13567 = !DILocation(line: 1296, column: 292, scope: !13524)
!13568 = !DILocation(line: 1296, column: 296, scope: !13524)
!13569 = !DILocation(line: 1296, column: 315, scope: !13524)
!13570 = !DILocation(line: 1296, column: 309, scope: !13524)
!13571 = !DILocation(line: 1296, column: 307, scope: !13524)
!13572 = !DILocation(line: 1296, column: 333, scope: !13524)
!13573 = !DILocation(line: 1296, column: 339, scope: !13524)
!13574 = !DILocation(line: 1296, column: 345, scope: !13524)
!13575 = !DILocation(line: 1296, column: 357, scope: !13524)
!13576 = !DILocation(line: 1296, column: 363, scope: !13524)
!13577 = !DILocation(line: 1296, column: 370, scope: !13524)
!13578 = !DILocation(line: 1296, column: 353, scope: !13524)
!13579 = !DILocation(line: 1296, column: 325, scope: !13524)
!13580 = !DILocation(line: 1296, column: 329, scope: !13524)
!13581 = !DILocation(line: 1296, column: 391, scope: !13524)
!13582 = !DILocation(line: 1296, column: 397, scope: !13524)
!13583 = !DILocation(line: 1296, column: 403, scope: !13524)
!13584 = !DILocation(line: 1296, column: 415, scope: !13524)
!13585 = !DILocation(line: 1296, column: 421, scope: !13524)
!13586 = !DILocation(line: 1296, column: 427, scope: !13524)
!13587 = !DILocation(line: 1296, column: 411, scope: !13524)
!13588 = !DILocation(line: 1296, column: 381, scope: !13524)
!13589 = !DILocation(line: 1296, column: 387, scope: !13524)
!13590 = !DILocation(line: 1296, column: 447, scope: !13524)
!13591 = !DILocation(line: 1296, column: 453, scope: !13524)
!13592 = !DILocation(line: 1296, column: 459, scope: !13524)
!13593 = !DILocation(line: 1296, column: 471, scope: !13524)
!13594 = !DILocation(line: 1296, column: 477, scope: !13524)
!13595 = !DILocation(line: 1296, column: 483, scope: !13524)
!13596 = !DILocation(line: 1296, column: 467, scope: !13524)
!13597 = !DILocation(line: 1296, column: 438, scope: !13524)
!13598 = !DILocation(line: 1296, column: 443, scope: !13524)
!13599 = !DILocation(line: 1296, column: 508, scope: !13524)
!13600 = !DILocation(line: 1296, column: 505, scope: !13524)
!13601 = !DILocation(line: 1296, column: 499, scope: !13524)
!13602 = !DILocation(line: 1296, column: 503, scope: !13524)
!13603 = !DILocation(line: 1296, column: 528, scope: !13524)
!13604 = !DILocation(line: 1296, column: 525, scope: !13524)
!13605 = !DILocation(line: 1296, column: 519, scope: !13524)
!13606 = !DILocation(line: 1296, column: 523, scope: !13524)
!13607 = !DILocation(line: 1296, column: 549, scope: !13524)
!13608 = !DILocation(line: 1296, column: 546, scope: !13524)
!13609 = !DILocation(line: 1296, column: 540, scope: !13524)
!13610 = !DILocation(line: 1296, column: 544, scope: !13524)
!13611 = !DILocation(line: 1296, column: 559, scope: !13524)
!13612 = !DILocation(line: 1296, column: 563, scope: !13524)
!13613 = !DILocation(line: 1296, column: 582, scope: !13524)
!13614 = !DILocation(line: 1296, column: 576, scope: !13524)
!13615 = !DILocation(line: 1296, column: 574, scope: !13524)
!13616 = !DILocation(line: 1296, column: 600, scope: !13524)
!13617 = !DILocation(line: 1296, column: 606, scope: !13524)
!13618 = !DILocation(line: 1296, column: 612, scope: !13524)
!13619 = !DILocation(line: 1296, column: 624, scope: !13524)
!13620 = !DILocation(line: 1296, column: 630, scope: !13524)
!13621 = !DILocation(line: 1296, column: 637, scope: !13524)
!13622 = !DILocation(line: 1296, column: 620, scope: !13524)
!13623 = !DILocation(line: 1296, column: 592, scope: !13524)
!13624 = !DILocation(line: 1296, column: 596, scope: !13524)
!13625 = !DILocation(line: 1296, column: 658, scope: !13524)
!13626 = !DILocation(line: 1296, column: 664, scope: !13524)
!13627 = !DILocation(line: 1296, column: 670, scope: !13524)
!13628 = !DILocation(line: 1296, column: 682, scope: !13524)
!13629 = !DILocation(line: 1296, column: 688, scope: !13524)
!13630 = !DILocation(line: 1296, column: 694, scope: !13524)
!13631 = !DILocation(line: 1296, column: 678, scope: !13524)
!13632 = !DILocation(line: 1296, column: 648, scope: !13524)
!13633 = !DILocation(line: 1296, column: 654, scope: !13524)
!13634 = !DILocation(line: 1296, column: 714, scope: !13524)
!13635 = !DILocation(line: 1296, column: 720, scope: !13524)
!13636 = !DILocation(line: 1296, column: 726, scope: !13524)
!13637 = !DILocation(line: 1296, column: 738, scope: !13524)
!13638 = !DILocation(line: 1296, column: 744, scope: !13524)
!13639 = !DILocation(line: 1296, column: 750, scope: !13524)
!13640 = !DILocation(line: 1296, column: 734, scope: !13524)
!13641 = !DILocation(line: 1296, column: 705, scope: !13524)
!13642 = !DILocation(line: 1296, column: 710, scope: !13524)
!13643 = !DILocation(line: 1296, column: 775, scope: !13524)
!13644 = !DILocation(line: 1296, column: 772, scope: !13524)
!13645 = !DILocation(line: 1296, column: 766, scope: !13524)
!13646 = !DILocation(line: 1296, column: 770, scope: !13524)
!13647 = !DILocation(line: 1296, column: 795, scope: !13524)
!13648 = !DILocation(line: 1296, column: 792, scope: !13524)
!13649 = !DILocation(line: 1296, column: 786, scope: !13524)
!13650 = !DILocation(line: 1296, column: 790, scope: !13524)
!13651 = !DILocation(line: 1296, column: 816, scope: !13524)
!13652 = !DILocation(line: 1296, column: 813, scope: !13524)
!13653 = !DILocation(line: 1296, column: 807, scope: !13524)
!13654 = !DILocation(line: 1296, column: 811, scope: !13524)
!13655 = !DILocation(line: 1296, column: 826, scope: !13524)
!13656 = !DILocation(line: 1296, column: 830, scope: !13524)
!13657 = !DILocation(line: 1296, column: 849, scope: !13524)
!13658 = !DILocation(line: 1296, column: 843, scope: !13524)
!13659 = !DILocation(line: 1296, column: 841, scope: !13524)
!13660 = !DILocation(line: 1296, column: 867, scope: !13524)
!13661 = !DILocation(line: 1296, column: 873, scope: !13524)
!13662 = !DILocation(line: 1296, column: 879, scope: !13524)
!13663 = !DILocation(line: 1296, column: 891, scope: !13524)
!13664 = !DILocation(line: 1296, column: 897, scope: !13524)
!13665 = !DILocation(line: 1296, column: 904, scope: !13524)
!13666 = !DILocation(line: 1296, column: 887, scope: !13524)
!13667 = !DILocation(line: 1296, column: 859, scope: !13524)
!13668 = !DILocation(line: 1296, column: 863, scope: !13524)
!13669 = !DILocation(line: 1296, column: 925, scope: !13524)
!13670 = !DILocation(line: 1296, column: 931, scope: !13524)
!13671 = !DILocation(line: 1296, column: 937, scope: !13524)
!13672 = !DILocation(line: 1296, column: 949, scope: !13524)
!13673 = !DILocation(line: 1296, column: 955, scope: !13524)
!13674 = !DILocation(line: 1296, column: 961, scope: !13524)
!13675 = !DILocation(line: 1296, column: 945, scope: !13524)
!13676 = !DILocation(line: 1296, column: 915, scope: !13524)
!13677 = !DILocation(line: 1296, column: 921, scope: !13524)
!13678 = !DILocation(line: 1296, column: 981, scope: !13524)
!13679 = !DILocation(line: 1296, column: 987, scope: !13524)
!13680 = !DILocation(line: 1296, column: 993, scope: !13524)
!13681 = !DILocation(line: 1296, column: 1005, scope: !13524)
!13682 = !DILocation(line: 1296, column: 1011, scope: !13524)
!13683 = !DILocation(line: 1296, column: 1017, scope: !13524)
!13684 = !DILocation(line: 1296, column: 1001, scope: !13524)
!13685 = !DILocation(line: 1296, column: 972, scope: !13524)
!13686 = !DILocation(line: 1296, column: 977, scope: !13524)
!13687 = !DILocation(line: 1296, column: 1042, scope: !13524)
!13688 = !DILocation(line: 1296, column: 1039, scope: !13524)
!13689 = !DILocation(line: 1296, column: 1033, scope: !13524)
!13690 = !DILocation(line: 1296, column: 1037, scope: !13524)
!13691 = !DILocation(line: 1296, column: 1062, scope: !13524)
!13692 = !DILocation(line: 1296, column: 1059, scope: !13524)
!13693 = !DILocation(line: 1296, column: 1053, scope: !13524)
!13694 = !DILocation(line: 1296, column: 1057, scope: !13524)
!13695 = !DILocation(line: 1296, column: 1083, scope: !13524)
!13696 = !DILocation(line: 1296, column: 1080, scope: !13524)
!13697 = !DILocation(line: 1296, column: 1074, scope: !13524)
!13698 = !DILocation(line: 1296, column: 1078, scope: !13524)
!13699 = !DILocation(line: 1296, column: 1093, scope: !13524)
!13700 = !DILocation(line: 1296, column: 1097, scope: !13524)
!13701 = !DILocation(line: 1296, column: 1116, scope: !13524)
!13702 = !DILocation(line: 1296, column: 1110, scope: !13524)
!13703 = !DILocation(line: 1296, column: 1108, scope: !13524)
!13704 = !DILocation(line: 1296, column: 1134, scope: !13524)
!13705 = !DILocation(line: 1296, column: 1140, scope: !13524)
!13706 = !DILocation(line: 1296, column: 1146, scope: !13524)
!13707 = !DILocation(line: 1296, column: 1158, scope: !13524)
!13708 = !DILocation(line: 1296, column: 1164, scope: !13524)
!13709 = !DILocation(line: 1296, column: 1171, scope: !13524)
!13710 = !DILocation(line: 1296, column: 1154, scope: !13524)
!13711 = !DILocation(line: 1296, column: 1126, scope: !13524)
!13712 = !DILocation(line: 1296, column: 1130, scope: !13524)
!13713 = !DILocation(line: 1296, column: 1192, scope: !13524)
!13714 = !DILocation(line: 1296, column: 1198, scope: !13524)
!13715 = !DILocation(line: 1296, column: 1204, scope: !13524)
!13716 = !DILocation(line: 1296, column: 1216, scope: !13524)
!13717 = !DILocation(line: 1296, column: 1222, scope: !13524)
!13718 = !DILocation(line: 1296, column: 1228, scope: !13524)
!13719 = !DILocation(line: 1296, column: 1212, scope: !13524)
!13720 = !DILocation(line: 1296, column: 1182, scope: !13524)
!13721 = !DILocation(line: 1296, column: 1188, scope: !13524)
!13722 = !DILocation(line: 1296, column: 1248, scope: !13524)
!13723 = !DILocation(line: 1296, column: 1254, scope: !13524)
!13724 = !DILocation(line: 1296, column: 1260, scope: !13524)
!13725 = !DILocation(line: 1296, column: 1272, scope: !13524)
!13726 = !DILocation(line: 1296, column: 1278, scope: !13524)
!13727 = !DILocation(line: 1296, column: 1284, scope: !13524)
!13728 = !DILocation(line: 1296, column: 1268, scope: !13524)
!13729 = !DILocation(line: 1296, column: 1239, scope: !13524)
!13730 = !DILocation(line: 1296, column: 1244, scope: !13524)
!13731 = !DILocation(line: 1296, column: 1309, scope: !13524)
!13732 = !DILocation(line: 1296, column: 1306, scope: !13524)
!13733 = !DILocation(line: 1296, column: 1300, scope: !13524)
!13734 = !DILocation(line: 1296, column: 1304, scope: !13524)
!13735 = !DILocation(line: 1296, column: 1329, scope: !13524)
!13736 = !DILocation(line: 1296, column: 1326, scope: !13524)
!13737 = !DILocation(line: 1296, column: 1320, scope: !13524)
!13738 = !DILocation(line: 1296, column: 1324, scope: !13524)
!13739 = !DILocation(line: 1296, column: 1350, scope: !13524)
!13740 = !DILocation(line: 1296, column: 1347, scope: !13524)
!13741 = !DILocation(line: 1296, column: 1341, scope: !13524)
!13742 = !DILocation(line: 1296, column: 1345, scope: !13524)
!13743 = !DILocation(line: 1296, column: 1360, scope: !13524)
!13744 = !DILocation(line: 1296, column: 1364, scope: !13524)
!13745 = !DILocation(line: 1296, column: 1383, scope: !13524)
!13746 = !DILocation(line: 1296, column: 1377, scope: !13524)
!13747 = !DILocation(line: 1296, column: 1375, scope: !13524)
!13748 = !DILocation(line: 1296, column: 1401, scope: !13524)
!13749 = !DILocation(line: 1296, column: 1407, scope: !13524)
!13750 = !DILocation(line: 1296, column: 1413, scope: !13524)
!13751 = !DILocation(line: 1296, column: 1425, scope: !13524)
!13752 = !DILocation(line: 1296, column: 1431, scope: !13524)
!13753 = !DILocation(line: 1296, column: 1438, scope: !13524)
!13754 = !DILocation(line: 1296, column: 1421, scope: !13524)
!13755 = !DILocation(line: 1296, column: 1393, scope: !13524)
!13756 = !DILocation(line: 1296, column: 1397, scope: !13524)
!13757 = !DILocation(line: 1296, column: 1459, scope: !13524)
!13758 = !DILocation(line: 1296, column: 1465, scope: !13524)
!13759 = !DILocation(line: 1296, column: 1471, scope: !13524)
!13760 = !DILocation(line: 1296, column: 1483, scope: !13524)
!13761 = !DILocation(line: 1296, column: 1489, scope: !13524)
!13762 = !DILocation(line: 1296, column: 1495, scope: !13524)
!13763 = !DILocation(line: 1296, column: 1479, scope: !13524)
!13764 = !DILocation(line: 1296, column: 1449, scope: !13524)
!13765 = !DILocation(line: 1296, column: 1455, scope: !13524)
!13766 = !DILocation(line: 1296, column: 1515, scope: !13524)
!13767 = !DILocation(line: 1296, column: 1521, scope: !13524)
!13768 = !DILocation(line: 1296, column: 1527, scope: !13524)
!13769 = !DILocation(line: 1296, column: 1539, scope: !13524)
!13770 = !DILocation(line: 1296, column: 1545, scope: !13524)
!13771 = !DILocation(line: 1296, column: 1551, scope: !13524)
!13772 = !DILocation(line: 1296, column: 1535, scope: !13524)
!13773 = !DILocation(line: 1296, column: 1506, scope: !13524)
!13774 = !DILocation(line: 1296, column: 1511, scope: !13524)
!13775 = !DILocation(line: 1296, column: 1576, scope: !13524)
!13776 = !DILocation(line: 1296, column: 1573, scope: !13524)
!13777 = !DILocation(line: 1296, column: 1567, scope: !13524)
!13778 = !DILocation(line: 1296, column: 1571, scope: !13524)
!13779 = !DILocation(line: 1296, column: 1596, scope: !13524)
!13780 = !DILocation(line: 1296, column: 1593, scope: !13524)
!13781 = !DILocation(line: 1296, column: 1587, scope: !13524)
!13782 = !DILocation(line: 1296, column: 1591, scope: !13524)
!13783 = !DILocation(line: 1296, column: 1617, scope: !13524)
!13784 = !DILocation(line: 1296, column: 1614, scope: !13524)
!13785 = !DILocation(line: 1296, column: 1608, scope: !13524)
!13786 = !DILocation(line: 1296, column: 1612, scope: !13524)
!13787 = !DILocation(line: 1296, column: 1627, scope: !13524)
!13788 = !DILocation(line: 1296, column: 1631, scope: !13524)
!13789 = !DILocation(line: 1296, column: 1650, scope: !13524)
!13790 = !DILocation(line: 1296, column: 1644, scope: !13524)
!13791 = !DILocation(line: 1296, column: 1642, scope: !13524)
!13792 = !DILocation(line: 1296, column: 1668, scope: !13524)
!13793 = !DILocation(line: 1296, column: 1674, scope: !13524)
!13794 = !DILocation(line: 1296, column: 1680, scope: !13524)
!13795 = !DILocation(line: 1296, column: 1692, scope: !13524)
!13796 = !DILocation(line: 1296, column: 1698, scope: !13524)
!13797 = !DILocation(line: 1296, column: 1705, scope: !13524)
!13798 = !DILocation(line: 1296, column: 1688, scope: !13524)
!13799 = !DILocation(line: 1296, column: 1660, scope: !13524)
!13800 = !DILocation(line: 1296, column: 1664, scope: !13524)
!13801 = !DILocation(line: 1296, column: 1726, scope: !13524)
!13802 = !DILocation(line: 1296, column: 1732, scope: !13524)
!13803 = !DILocation(line: 1296, column: 1738, scope: !13524)
!13804 = !DILocation(line: 1296, column: 1750, scope: !13524)
!13805 = !DILocation(line: 1296, column: 1756, scope: !13524)
!13806 = !DILocation(line: 1296, column: 1762, scope: !13524)
!13807 = !DILocation(line: 1296, column: 1746, scope: !13524)
!13808 = !DILocation(line: 1296, column: 1716, scope: !13524)
!13809 = !DILocation(line: 1296, column: 1722, scope: !13524)
!13810 = !DILocation(line: 1296, column: 1782, scope: !13524)
!13811 = !DILocation(line: 1296, column: 1788, scope: !13524)
!13812 = !DILocation(line: 1296, column: 1794, scope: !13524)
!13813 = !DILocation(line: 1296, column: 1806, scope: !13524)
!13814 = !DILocation(line: 1296, column: 1812, scope: !13524)
!13815 = !DILocation(line: 1296, column: 1818, scope: !13524)
!13816 = !DILocation(line: 1296, column: 1802, scope: !13524)
!13817 = !DILocation(line: 1296, column: 1773, scope: !13524)
!13818 = !DILocation(line: 1296, column: 1778, scope: !13524)
!13819 = !DILocation(line: 1296, column: 1843, scope: !13524)
!13820 = !DILocation(line: 1296, column: 1840, scope: !13524)
!13821 = !DILocation(line: 1296, column: 1834, scope: !13524)
!13822 = !DILocation(line: 1296, column: 1838, scope: !13524)
!13823 = !DILocation(line: 1296, column: 1863, scope: !13524)
!13824 = !DILocation(line: 1296, column: 1860, scope: !13524)
!13825 = !DILocation(line: 1296, column: 1854, scope: !13524)
!13826 = !DILocation(line: 1296, column: 1858, scope: !13524)
!13827 = !DILocation(line: 1296, column: 1884, scope: !13524)
!13828 = !DILocation(line: 1296, column: 1881, scope: !13524)
!13829 = !DILocation(line: 1296, column: 1875, scope: !13524)
!13830 = !DILocation(line: 1296, column: 1879, scope: !13524)
!13831 = !DILocation(line: 1296, column: 1894, scope: !13524)
!13832 = !DILocation(line: 1296, column: 1898, scope: !13524)
!13833 = !DILocation(line: 1296, column: 1917, scope: !13524)
!13834 = !DILocation(line: 1296, column: 1911, scope: !13524)
!13835 = !DILocation(line: 1296, column: 1909, scope: !13524)
!13836 = !DILocation(line: 1296, column: 1935, scope: !13524)
!13837 = !DILocation(line: 1296, column: 1941, scope: !13524)
!13838 = !DILocation(line: 1296, column: 1947, scope: !13524)
!13839 = !DILocation(line: 1296, column: 1959, scope: !13524)
!13840 = !DILocation(line: 1296, column: 1965, scope: !13524)
!13841 = !DILocation(line: 1296, column: 1972, scope: !13524)
!13842 = !DILocation(line: 1296, column: 1955, scope: !13524)
!13843 = !DILocation(line: 1296, column: 1927, scope: !13524)
!13844 = !DILocation(line: 1296, column: 1931, scope: !13524)
!13845 = !DILocation(line: 1296, column: 1993, scope: !13524)
!13846 = !DILocation(line: 1296, column: 1999, scope: !13524)
!13847 = !DILocation(line: 1296, column: 2005, scope: !13524)
!13848 = !DILocation(line: 1296, column: 2017, scope: !13524)
!13849 = !DILocation(line: 1296, column: 2023, scope: !13524)
!13850 = !DILocation(line: 1296, column: 2029, scope: !13524)
!13851 = !DILocation(line: 1296, column: 2013, scope: !13524)
!13852 = !DILocation(line: 1296, column: 1983, scope: !13524)
!13853 = !DILocation(line: 1296, column: 1989, scope: !13524)
!13854 = !DILocation(line: 1296, column: 2049, scope: !13524)
!13855 = !DILocation(line: 1296, column: 2055, scope: !13524)
!13856 = !DILocation(line: 1296, column: 2061, scope: !13524)
!13857 = !DILocation(line: 1296, column: 2073, scope: !13524)
!13858 = !DILocation(line: 1296, column: 2079, scope: !13524)
!13859 = !DILocation(line: 1296, column: 2085, scope: !13524)
!13860 = !DILocation(line: 1296, column: 2069, scope: !13524)
!13861 = !DILocation(line: 1296, column: 2040, scope: !13524)
!13862 = !DILocation(line: 1296, column: 2045, scope: !13524)
!13863 = !DILocation(line: 1296, column: 2110, scope: !13524)
!13864 = !DILocation(line: 1296, column: 2107, scope: !13524)
!13865 = !DILocation(line: 1296, column: 2101, scope: !13524)
!13866 = !DILocation(line: 1296, column: 2105, scope: !13524)
!13867 = !DILocation(line: 1296, column: 2130, scope: !13524)
!13868 = !DILocation(line: 1296, column: 2127, scope: !13524)
!13869 = !DILocation(line: 1296, column: 2121, scope: !13524)
!13870 = !DILocation(line: 1296, column: 2125, scope: !13524)
!13871 = !DILocation(line: 1296, column: 2151, scope: !13524)
!13872 = !DILocation(line: 1296, column: 2148, scope: !13524)
!13873 = !DILocation(line: 1296, column: 2142, scope: !13524)
!13874 = !DILocation(line: 1296, column: 2146, scope: !13524)
!13875 = !DILocation(line: 1296, column: 2161, scope: !13524)
!13876 = !DILocation(line: 1296, column: 2165, scope: !13524)
!13877 = !DILocation(line: 1296, column: 5, scope: !13524)
!13878 = distinct !{!13878, !13514}
!13879 = !DILocation(line: 1296, column: 2172, scope: !13880)
!13880 = !DILexicalBlockFile(scope: !13515, file: !243, discriminator: 3)
!13881 = !DILocation(line: 1296, column: 2179, scope: !13882)
!13882 = !DILexicalBlockFile(scope: !13515, file: !243, discriminator: 4)
!13883 = !DILocation(line: 1296, column: 2185, scope: !13882)
!13884 = !DILocation(line: 1296, column: 2183, scope: !13882)
!13885 = !DILocation(line: 1296, column: 2172, scope: !13882)
!13886 = !DILocation(line: 1296, column: 2206, scope: !13887)
!13887 = !DILexicalBlockFile(scope: !13888, file: !243, discriminator: 5)
!13888 = distinct !DILexicalBlock(scope: !13515, file: !243, line: 1296, column: 2190)
!13889 = !DILocation(line: 1296, column: 2200, scope: !13887)
!13890 = !DILocation(line: 1296, column: 2198, scope: !13887)
!13891 = !DILocation(line: 1296, column: 2224, scope: !13887)
!13892 = !DILocation(line: 1296, column: 2230, scope: !13887)
!13893 = !DILocation(line: 1296, column: 2236, scope: !13887)
!13894 = !DILocation(line: 1296, column: 2248, scope: !13887)
!13895 = !DILocation(line: 1296, column: 2254, scope: !13887)
!13896 = !DILocation(line: 1296, column: 2261, scope: !13887)
!13897 = !DILocation(line: 1296, column: 2244, scope: !13887)
!13898 = !DILocation(line: 1296, column: 2216, scope: !13887)
!13899 = !DILocation(line: 1296, column: 2220, scope: !13887)
!13900 = !DILocation(line: 1296, column: 2282, scope: !13887)
!13901 = !DILocation(line: 1296, column: 2288, scope: !13887)
!13902 = !DILocation(line: 1296, column: 2294, scope: !13887)
!13903 = !DILocation(line: 1296, column: 2306, scope: !13887)
!13904 = !DILocation(line: 1296, column: 2312, scope: !13887)
!13905 = !DILocation(line: 1296, column: 2318, scope: !13887)
!13906 = !DILocation(line: 1296, column: 2302, scope: !13887)
!13907 = !DILocation(line: 1296, column: 2272, scope: !13887)
!13908 = !DILocation(line: 1296, column: 2278, scope: !13887)
!13909 = !DILocation(line: 1296, column: 2338, scope: !13887)
!13910 = !DILocation(line: 1296, column: 2344, scope: !13887)
!13911 = !DILocation(line: 1296, column: 2350, scope: !13887)
!13912 = !DILocation(line: 1296, column: 2362, scope: !13887)
!13913 = !DILocation(line: 1296, column: 2368, scope: !13887)
!13914 = !DILocation(line: 1296, column: 2374, scope: !13887)
!13915 = !DILocation(line: 1296, column: 2358, scope: !13887)
!13916 = !DILocation(line: 1296, column: 2329, scope: !13887)
!13917 = !DILocation(line: 1296, column: 2334, scope: !13887)
!13918 = !DILocation(line: 1296, column: 2399, scope: !13887)
!13919 = !DILocation(line: 1296, column: 2396, scope: !13887)
!13920 = !DILocation(line: 1296, column: 2390, scope: !13887)
!13921 = !DILocation(line: 1296, column: 2394, scope: !13887)
!13922 = !DILocation(line: 1296, column: 2419, scope: !13887)
!13923 = !DILocation(line: 1296, column: 2416, scope: !13887)
!13924 = !DILocation(line: 1296, column: 2410, scope: !13887)
!13925 = !DILocation(line: 1296, column: 2414, scope: !13887)
!13926 = !DILocation(line: 1296, column: 2440, scope: !13887)
!13927 = !DILocation(line: 1296, column: 2437, scope: !13887)
!13928 = !DILocation(line: 1296, column: 2431, scope: !13887)
!13929 = !DILocation(line: 1296, column: 2435, scope: !13887)
!13930 = !DILocation(line: 1296, column: 2450, scope: !13887)
!13931 = !DILocation(line: 1296, column: 2454, scope: !13887)
!13932 = !DILocation(line: 1296, column: 2172, scope: !13887)
!13933 = distinct !{!13933, !13934}
!13934 = !DILocation(line: 1296, column: 2172, scope: !13515)
!13935 = !DILocation(line: 1306, column: 2, scope: !13516)
!13936 = !DILocation(line: 1307, column: 11, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13512, file: !243, line: 1307, column: 11)
!13938 = !DILocation(line: 1307, column: 11, scope: !13512)
!13939 = !DILocation(line: 1309, column: 7, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13941, file: !243, line: 1309, column: 7)
!13941 = distinct !DILexicalBlock(scope: !13937, file: !243, line: 1308, column: 2)
!13942 = !DILocation(line: 1309, column: 7, scope: !13941)
!13943 = !DILocation(line: 1311, column: 4, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13940, file: !243, line: 1310, column: 3)
!13945 = !DILocation(line: 1311, column: 11, scope: !13946)
!13946 = !DILexicalBlockFile(scope: !13944, file: !243, discriminator: 1)
!13947 = !DILocation(line: 1311, column: 17, scope: !13946)
!13948 = !DILocation(line: 1311, column: 15, scope: !13946)
!13949 = !DILocation(line: 1311, column: 4, scope: !13946)
!13950 = !DILocation(line: 1313, column: 19, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13944, file: !243, line: 1312, column: 4)
!13952 = !DILocation(line: 1313, column: 13, scope: !13951)
!13953 = !DILocation(line: 1313, column: 11, scope: !13951)
!13954 = !DILocation(line: 1314, column: 18, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13951, file: !243, line: 1314, column: 5)
!13956 = !DILocation(line: 1314, column: 24, scope: !13955)
!13957 = !DILocation(line: 1314, column: 32, scope: !13955)
!13958 = !DILocation(line: 1314, column: 41, scope: !13955)
!13959 = !DILocation(line: 1314, column: 47, scope: !13955)
!13960 = !DILocation(line: 1314, column: 38, scope: !13955)
!13961 = !DILocation(line: 1314, column: 15, scope: !13955)
!13962 = !DILocation(line: 1314, column: 13, scope: !13955)
!13963 = !DILocation(line: 1315, column: 18, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13951, file: !243, line: 1315, column: 5)
!13965 = !DILocation(line: 1315, column: 24, scope: !13964)
!13966 = !DILocation(line: 1315, column: 30, scope: !13964)
!13967 = !DILocation(line: 1315, column: 42, scope: !13964)
!13968 = !DILocation(line: 1315, column: 48, scope: !13964)
!13969 = !DILocation(line: 1315, column: 55, scope: !13964)
!13970 = !DILocation(line: 1315, column: 38, scope: !13964)
!13971 = !DILocation(line: 1315, column: 10, scope: !13964)
!13972 = !DILocation(line: 1315, column: 14, scope: !13964)
!13973 = !DILocation(line: 1315, column: 76, scope: !13964)
!13974 = !DILocation(line: 1315, column: 82, scope: !13964)
!13975 = !DILocation(line: 1315, column: 88, scope: !13964)
!13976 = !DILocation(line: 1315, column: 100, scope: !13964)
!13977 = !DILocation(line: 1315, column: 106, scope: !13964)
!13978 = !DILocation(line: 1315, column: 112, scope: !13964)
!13979 = !DILocation(line: 1315, column: 96, scope: !13964)
!13980 = !DILocation(line: 1315, column: 66, scope: !13964)
!13981 = !DILocation(line: 1315, column: 72, scope: !13964)
!13982 = !DILocation(line: 1315, column: 132, scope: !13964)
!13983 = !DILocation(line: 1315, column: 138, scope: !13964)
!13984 = !DILocation(line: 1315, column: 144, scope: !13964)
!13985 = !DILocation(line: 1315, column: 156, scope: !13964)
!13986 = !DILocation(line: 1315, column: 162, scope: !13964)
!13987 = !DILocation(line: 1315, column: 168, scope: !13964)
!13988 = !DILocation(line: 1315, column: 152, scope: !13964)
!13989 = !DILocation(line: 1315, column: 123, scope: !13964)
!13990 = !DILocation(line: 1315, column: 128, scope: !13964)
!13991 = !DILocation(line: 1316, column: 18, scope: !13951)
!13992 = !DILocation(line: 1316, column: 25, scope: !13951)
!13993 = !DILocation(line: 1316, column: 22, scope: !13951)
!13994 = !DILocation(line: 1316, column: 43, scope: !13951)
!13995 = !DILocation(line: 1316, column: 40, scope: !13951)
!13996 = !DILocation(line: 1316, column: 65, scope: !13951)
!13997 = !DILocation(line: 1316, column: 74, scope: !13951)
!13998 = !DILocation(line: 1316, column: 71, scope: !13951)
!13999 = !DILocation(line: 1316, column: 94, scope: !13951)
!14000 = !DILocation(line: 1316, column: 91, scope: !13951)
!14001 = !DILocation(line: 1316, column: 58, scope: !13951)
!14002 = !DILocation(line: 1316, column: 118, scope: !13951)
!14003 = !DILocation(line: 1316, column: 126, scope: !13951)
!14004 = !DILocation(line: 1316, column: 123, scope: !13951)
!14005 = !DILocation(line: 1316, column: 145, scope: !13951)
!14006 = !DILocation(line: 1316, column: 142, scope: !13951)
!14007 = !DILocation(line: 1316, column: 111, scope: !13951)
!14008 = !DILocation(line: 1316, column: 11, scope: !13951)
!14009 = !DILocation(line: 1317, column: 18, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !13951, file: !243, line: 1317, column: 5)
!14011 = !DILocation(line: 1317, column: 24, scope: !14010)
!14012 = !DILocation(line: 1317, column: 12, scope: !14010)
!14013 = !DILocation(line: 1317, column: 16, scope: !14010)
!14014 = !DILocation(line: 1317, column: 42, scope: !14010)
!14015 = !DILocation(line: 1317, column: 48, scope: !14010)
!14016 = !DILocation(line: 1317, column: 36, scope: !14010)
!14017 = !DILocation(line: 1317, column: 40, scope: !14010)
!14018 = !DILocation(line: 1317, column: 66, scope: !14010)
!14019 = !DILocation(line: 1317, column: 72, scope: !14010)
!14020 = !DILocation(line: 1317, column: 60, scope: !14010)
!14021 = !DILocation(line: 1317, column: 64, scope: !14010)
!14022 = !DILocation(line: 1317, column: 89, scope: !14010)
!14023 = !DILocation(line: 1317, column: 83, scope: !14010)
!14024 = !DILocation(line: 1317, column: 87, scope: !14010)
!14025 = !DILocation(line: 1311, column: 4, scope: !14026)
!14026 = !DILexicalBlockFile(scope: !13944, file: !243, discriminator: 2)
!14027 = distinct !{!14027, !13943}
!14028 = !DILocation(line: 1319, column: 3, scope: !13944)
!14029 = !DILocation(line: 1322, column: 4, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !13940, file: !243, line: 1321, column: 3)
!14031 = !DILocation(line: 1322, column: 11, scope: !14032)
!14032 = !DILexicalBlockFile(scope: !14030, file: !243, discriminator: 1)
!14033 = !DILocation(line: 1322, column: 17, scope: !14032)
!14034 = !DILocation(line: 1322, column: 15, scope: !14032)
!14035 = !DILocation(line: 1322, column: 4, scope: !14032)
!14036 = !DILocation(line: 1324, column: 19, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14030, file: !243, line: 1323, column: 4)
!14038 = !DILocation(line: 1324, column: 13, scope: !14037)
!14039 = !DILocation(line: 1324, column: 11, scope: !14037)
!14040 = !DILocation(line: 1325, column: 18, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14037, file: !243, line: 1325, column: 5)
!14042 = !DILocation(line: 1325, column: 24, scope: !14041)
!14043 = !DILocation(line: 1325, column: 30, scope: !14041)
!14044 = !DILocation(line: 1325, column: 42, scope: !14041)
!14045 = !DILocation(line: 1325, column: 48, scope: !14041)
!14046 = !DILocation(line: 1325, column: 55, scope: !14041)
!14047 = !DILocation(line: 1325, column: 38, scope: !14041)
!14048 = !DILocation(line: 1325, column: 10, scope: !14041)
!14049 = !DILocation(line: 1325, column: 14, scope: !14041)
!14050 = !DILocation(line: 1325, column: 76, scope: !14041)
!14051 = !DILocation(line: 1325, column: 82, scope: !14041)
!14052 = !DILocation(line: 1325, column: 88, scope: !14041)
!14053 = !DILocation(line: 1325, column: 100, scope: !14041)
!14054 = !DILocation(line: 1325, column: 106, scope: !14041)
!14055 = !DILocation(line: 1325, column: 112, scope: !14041)
!14056 = !DILocation(line: 1325, column: 96, scope: !14041)
!14057 = !DILocation(line: 1325, column: 66, scope: !14041)
!14058 = !DILocation(line: 1325, column: 72, scope: !14041)
!14059 = !DILocation(line: 1325, column: 132, scope: !14041)
!14060 = !DILocation(line: 1325, column: 138, scope: !14041)
!14061 = !DILocation(line: 1325, column: 144, scope: !14041)
!14062 = !DILocation(line: 1325, column: 156, scope: !14041)
!14063 = !DILocation(line: 1325, column: 162, scope: !14041)
!14064 = !DILocation(line: 1325, column: 168, scope: !14041)
!14065 = !DILocation(line: 1325, column: 152, scope: !14041)
!14066 = !DILocation(line: 1325, column: 123, scope: !14041)
!14067 = !DILocation(line: 1325, column: 128, scope: !14041)
!14068 = !DILocation(line: 1326, column: 18, scope: !14037)
!14069 = !DILocation(line: 1326, column: 25, scope: !14037)
!14070 = !DILocation(line: 1326, column: 22, scope: !14037)
!14071 = !DILocation(line: 1326, column: 43, scope: !14037)
!14072 = !DILocation(line: 1326, column: 40, scope: !14037)
!14073 = !DILocation(line: 1326, column: 65, scope: !14037)
!14074 = !DILocation(line: 1326, column: 74, scope: !14037)
!14075 = !DILocation(line: 1326, column: 71, scope: !14037)
!14076 = !DILocation(line: 1326, column: 94, scope: !14037)
!14077 = !DILocation(line: 1326, column: 91, scope: !14037)
!14078 = !DILocation(line: 1326, column: 58, scope: !14037)
!14079 = !DILocation(line: 1326, column: 118, scope: !14037)
!14080 = !DILocation(line: 1326, column: 126, scope: !14037)
!14081 = !DILocation(line: 1326, column: 123, scope: !14037)
!14082 = !DILocation(line: 1326, column: 145, scope: !14037)
!14083 = !DILocation(line: 1326, column: 142, scope: !14037)
!14084 = !DILocation(line: 1326, column: 111, scope: !14037)
!14085 = !DILocation(line: 1326, column: 11, scope: !14037)
!14086 = !DILocation(line: 1327, column: 18, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14037, file: !243, line: 1327, column: 5)
!14088 = !DILocation(line: 1327, column: 24, scope: !14087)
!14089 = !DILocation(line: 1327, column: 12, scope: !14087)
!14090 = !DILocation(line: 1327, column: 16, scope: !14087)
!14091 = !DILocation(line: 1327, column: 42, scope: !14087)
!14092 = !DILocation(line: 1327, column: 48, scope: !14087)
!14093 = !DILocation(line: 1327, column: 36, scope: !14087)
!14094 = !DILocation(line: 1327, column: 40, scope: !14087)
!14095 = !DILocation(line: 1327, column: 66, scope: !14087)
!14096 = !DILocation(line: 1327, column: 72, scope: !14087)
!14097 = !DILocation(line: 1327, column: 60, scope: !14087)
!14098 = !DILocation(line: 1327, column: 64, scope: !14087)
!14099 = !DILocation(line: 1327, column: 89, scope: !14087)
!14100 = !DILocation(line: 1327, column: 83, scope: !14087)
!14101 = !DILocation(line: 1327, column: 87, scope: !14087)
!14102 = !DILocation(line: 1322, column: 4, scope: !14103)
!14103 = !DILexicalBlockFile(scope: !14030, file: !243, discriminator: 2)
!14104 = distinct !{!14104, !14029}
!14105 = !DILocation(line: 1330, column: 2, scope: !13941)
!14106 = !DILocation(line: 1333, column: 7, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14108, file: !243, line: 1333, column: 7)
!14108 = distinct !DILexicalBlock(scope: !13937, file: !243, line: 1332, column: 2)
!14109 = !DILocation(line: 1333, column: 7, scope: !14108)
!14110 = !DILocation(line: 1335, column: 4, scope: !14111)
!14111 = distinct !DILexicalBlock(scope: !14107, file: !243, line: 1334, column: 3)
!14112 = !DILocation(line: 1335, column: 11, scope: !14113)
!14113 = !DILexicalBlockFile(scope: !14111, file: !243, discriminator: 1)
!14114 = !DILocation(line: 1335, column: 17, scope: !14113)
!14115 = !DILocation(line: 1335, column: 15, scope: !14113)
!14116 = !DILocation(line: 1335, column: 4, scope: !14113)
!14117 = !DILocation(line: 1337, column: 19, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14111, file: !243, line: 1336, column: 4)
!14119 = !DILocation(line: 1337, column: 13, scope: !14118)
!14120 = !DILocation(line: 1337, column: 11, scope: !14118)
!14121 = !DILocation(line: 1338, column: 18, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14118, file: !243, line: 1338, column: 5)
!14123 = !DILocation(line: 1338, column: 24, scope: !14122)
!14124 = !DILocation(line: 1338, column: 32, scope: !14122)
!14125 = !DILocation(line: 1338, column: 41, scope: !14122)
!14126 = !DILocation(line: 1338, column: 47, scope: !14122)
!14127 = !DILocation(line: 1338, column: 38, scope: !14122)
!14128 = !DILocation(line: 1338, column: 15, scope: !14122)
!14129 = !DILocation(line: 1338, column: 13, scope: !14122)
!14130 = !DILocation(line: 1339, column: 18, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14118, file: !243, line: 1339, column: 5)
!14132 = !DILocation(line: 1339, column: 24, scope: !14131)
!14133 = !DILocation(line: 1339, column: 30, scope: !14131)
!14134 = !DILocation(line: 1339, column: 42, scope: !14131)
!14135 = !DILocation(line: 1339, column: 48, scope: !14131)
!14136 = !DILocation(line: 1339, column: 55, scope: !14131)
!14137 = !DILocation(line: 1339, column: 38, scope: !14131)
!14138 = !DILocation(line: 1339, column: 10, scope: !14131)
!14139 = !DILocation(line: 1339, column: 14, scope: !14131)
!14140 = !DILocation(line: 1339, column: 76, scope: !14131)
!14141 = !DILocation(line: 1339, column: 82, scope: !14131)
!14142 = !DILocation(line: 1339, column: 88, scope: !14131)
!14143 = !DILocation(line: 1339, column: 100, scope: !14131)
!14144 = !DILocation(line: 1339, column: 106, scope: !14131)
!14145 = !DILocation(line: 1339, column: 112, scope: !14131)
!14146 = !DILocation(line: 1339, column: 96, scope: !14131)
!14147 = !DILocation(line: 1339, column: 66, scope: !14131)
!14148 = !DILocation(line: 1339, column: 72, scope: !14131)
!14149 = !DILocation(line: 1339, column: 132, scope: !14131)
!14150 = !DILocation(line: 1339, column: 138, scope: !14131)
!14151 = !DILocation(line: 1339, column: 144, scope: !14131)
!14152 = !DILocation(line: 1339, column: 156, scope: !14131)
!14153 = !DILocation(line: 1339, column: 162, scope: !14131)
!14154 = !DILocation(line: 1339, column: 168, scope: !14131)
!14155 = !DILocation(line: 1339, column: 152, scope: !14131)
!14156 = !DILocation(line: 1339, column: 123, scope: !14131)
!14157 = !DILocation(line: 1339, column: 128, scope: !14131)
!14158 = !DILocation(line: 1340, column: 18, scope: !14118)
!14159 = !DILocation(line: 1340, column: 25, scope: !14118)
!14160 = !DILocation(line: 1340, column: 22, scope: !14118)
!14161 = !DILocation(line: 1340, column: 43, scope: !14118)
!14162 = !DILocation(line: 1340, column: 40, scope: !14118)
!14163 = !DILocation(line: 1340, column: 65, scope: !14118)
!14164 = !DILocation(line: 1340, column: 74, scope: !14118)
!14165 = !DILocation(line: 1340, column: 71, scope: !14118)
!14166 = !DILocation(line: 1340, column: 94, scope: !14118)
!14167 = !DILocation(line: 1340, column: 91, scope: !14118)
!14168 = !DILocation(line: 1340, column: 58, scope: !14118)
!14169 = !DILocation(line: 1340, column: 118, scope: !14118)
!14170 = !DILocation(line: 1340, column: 126, scope: !14118)
!14171 = !DILocation(line: 1340, column: 123, scope: !14118)
!14172 = !DILocation(line: 1340, column: 145, scope: !14118)
!14173 = !DILocation(line: 1340, column: 142, scope: !14118)
!14174 = !DILocation(line: 1340, column: 111, scope: !14118)
!14175 = !DILocation(line: 1340, column: 11, scope: !14118)
!14176 = !DILocation(line: 1341, column: 18, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14118, file: !243, line: 1341, column: 5)
!14178 = !DILocation(line: 1341, column: 12, scope: !14177)
!14179 = !DILocation(line: 1341, column: 16, scope: !14177)
!14180 = !DILocation(line: 1341, column: 36, scope: !14177)
!14181 = !DILocation(line: 1341, column: 42, scope: !14177)
!14182 = !DILocation(line: 1341, column: 30, scope: !14177)
!14183 = !DILocation(line: 1341, column: 34, scope: !14177)
!14184 = !DILocation(line: 1341, column: 59, scope: !14177)
!14185 = !DILocation(line: 1341, column: 65, scope: !14177)
!14186 = !DILocation(line: 1341, column: 53, scope: !14177)
!14187 = !DILocation(line: 1341, column: 57, scope: !14177)
!14188 = !DILocation(line: 1341, column: 83, scope: !14177)
!14189 = !DILocation(line: 1341, column: 89, scope: !14177)
!14190 = !DILocation(line: 1341, column: 77, scope: !14177)
!14191 = !DILocation(line: 1341, column: 81, scope: !14177)
!14192 = !DILocation(line: 1335, column: 4, scope: !14193)
!14193 = !DILexicalBlockFile(scope: !14111, file: !243, discriminator: 2)
!14194 = distinct !{!14194, !14110}
!14195 = !DILocation(line: 1343, column: 3, scope: !14111)
!14196 = !DILocation(line: 1346, column: 4, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14107, file: !243, line: 1345, column: 3)
!14198 = !DILocation(line: 1346, column: 11, scope: !14199)
!14199 = !DILexicalBlockFile(scope: !14197, file: !243, discriminator: 1)
!14200 = !DILocation(line: 1346, column: 17, scope: !14199)
!14201 = !DILocation(line: 1346, column: 15, scope: !14199)
!14202 = !DILocation(line: 1346, column: 4, scope: !14199)
!14203 = !DILocation(line: 1348, column: 19, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14197, file: !243, line: 1347, column: 4)
!14205 = !DILocation(line: 1348, column: 13, scope: !14204)
!14206 = !DILocation(line: 1348, column: 11, scope: !14204)
!14207 = !DILocation(line: 1349, column: 18, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14204, file: !243, line: 1349, column: 5)
!14209 = !DILocation(line: 1349, column: 24, scope: !14208)
!14210 = !DILocation(line: 1349, column: 30, scope: !14208)
!14211 = !DILocation(line: 1349, column: 42, scope: !14208)
!14212 = !DILocation(line: 1349, column: 48, scope: !14208)
!14213 = !DILocation(line: 1349, column: 55, scope: !14208)
!14214 = !DILocation(line: 1349, column: 38, scope: !14208)
!14215 = !DILocation(line: 1349, column: 10, scope: !14208)
!14216 = !DILocation(line: 1349, column: 14, scope: !14208)
!14217 = !DILocation(line: 1349, column: 76, scope: !14208)
!14218 = !DILocation(line: 1349, column: 82, scope: !14208)
!14219 = !DILocation(line: 1349, column: 88, scope: !14208)
!14220 = !DILocation(line: 1349, column: 100, scope: !14208)
!14221 = !DILocation(line: 1349, column: 106, scope: !14208)
!14222 = !DILocation(line: 1349, column: 112, scope: !14208)
!14223 = !DILocation(line: 1349, column: 96, scope: !14208)
!14224 = !DILocation(line: 1349, column: 66, scope: !14208)
!14225 = !DILocation(line: 1349, column: 72, scope: !14208)
!14226 = !DILocation(line: 1349, column: 132, scope: !14208)
!14227 = !DILocation(line: 1349, column: 138, scope: !14208)
!14228 = !DILocation(line: 1349, column: 144, scope: !14208)
!14229 = !DILocation(line: 1349, column: 156, scope: !14208)
!14230 = !DILocation(line: 1349, column: 162, scope: !14208)
!14231 = !DILocation(line: 1349, column: 168, scope: !14208)
!14232 = !DILocation(line: 1349, column: 152, scope: !14208)
!14233 = !DILocation(line: 1349, column: 123, scope: !14208)
!14234 = !DILocation(line: 1349, column: 128, scope: !14208)
!14235 = !DILocation(line: 1350, column: 18, scope: !14204)
!14236 = !DILocation(line: 1350, column: 25, scope: !14204)
!14237 = !DILocation(line: 1350, column: 22, scope: !14204)
!14238 = !DILocation(line: 1350, column: 43, scope: !14204)
!14239 = !DILocation(line: 1350, column: 40, scope: !14204)
!14240 = !DILocation(line: 1350, column: 65, scope: !14204)
!14241 = !DILocation(line: 1350, column: 74, scope: !14204)
!14242 = !DILocation(line: 1350, column: 71, scope: !14204)
!14243 = !DILocation(line: 1350, column: 94, scope: !14204)
!14244 = !DILocation(line: 1350, column: 91, scope: !14204)
!14245 = !DILocation(line: 1350, column: 58, scope: !14204)
!14246 = !DILocation(line: 1350, column: 118, scope: !14204)
!14247 = !DILocation(line: 1350, column: 126, scope: !14204)
!14248 = !DILocation(line: 1350, column: 123, scope: !14204)
!14249 = !DILocation(line: 1350, column: 145, scope: !14204)
!14250 = !DILocation(line: 1350, column: 142, scope: !14204)
!14251 = !DILocation(line: 1350, column: 111, scope: !14204)
!14252 = !DILocation(line: 1350, column: 11, scope: !14204)
!14253 = !DILocation(line: 1351, column: 18, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14204, file: !243, line: 1351, column: 5)
!14255 = !DILocation(line: 1351, column: 12, scope: !14254)
!14256 = !DILocation(line: 1351, column: 16, scope: !14254)
!14257 = !DILocation(line: 1351, column: 36, scope: !14254)
!14258 = !DILocation(line: 1351, column: 42, scope: !14254)
!14259 = !DILocation(line: 1351, column: 30, scope: !14254)
!14260 = !DILocation(line: 1351, column: 34, scope: !14254)
!14261 = !DILocation(line: 1351, column: 59, scope: !14254)
!14262 = !DILocation(line: 1351, column: 65, scope: !14254)
!14263 = !DILocation(line: 1351, column: 53, scope: !14254)
!14264 = !DILocation(line: 1351, column: 57, scope: !14254)
!14265 = !DILocation(line: 1351, column: 83, scope: !14254)
!14266 = !DILocation(line: 1351, column: 89, scope: !14254)
!14267 = !DILocation(line: 1351, column: 77, scope: !14254)
!14268 = !DILocation(line: 1351, column: 81, scope: !14254)
!14269 = !DILocation(line: 1346, column: 4, scope: !14270)
!14270 = !DILexicalBlockFile(scope: !14197, file: !243, discriminator: 2)
!14271 = distinct !{!14271, !14196}
!14272 = !DILocation(line: 1355, column: 1, scope: !13494)
!14273 = distinct !DISubprogram(name: "translate16to24", scope: !243, file: !243, line: 1217, type: !13495, isLocal: true, isDefinition: true, scopeLine: 1218, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!14274 = !DILocalVariable(name: "data", arg: 1, scope: !14273, file: !243, line: 1217, type: !13497)
!14275 = !DILocation(line: 1217, column: 32, scope: !14273)
!14276 = !DILocalVariable(name: "out", arg: 2, scope: !14273, file: !243, line: 1217, type: !46)
!14277 = !DILocation(line: 1217, column: 46, scope: !14273)
!14278 = !DILocalVariable(name: "end", arg: 3, scope: !14273, file: !243, line: 1217, type: !46)
!14279 = !DILocation(line: 1217, column: 59, scope: !14273)
!14280 = !DILocalVariable(name: "value", scope: !14273, file: !243, line: 1219, type: !193)
!14281 = !DILocation(line: 1219, column: 9, scope: !14273)
!14282 = !DILocalVariable(name: "pixel", scope: !14273, file: !243, line: 1220, type: !240)
!14283 = !DILocation(line: 1220, column: 9, scope: !14273)
!14284 = !DILocalVariable(name: "pc", scope: !14273, file: !243, line: 1221, type: !4417)
!14285 = !DILocation(line: 1221, column: 14, scope: !14273)
!14286 = !DILocation(line: 1223, column: 6, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !14273, file: !243, line: 1223, column: 6)
!14288 = !DILocation(line: 1223, column: 6, scope: !14273)
!14289 = !DILocation(line: 1226, column: 5, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14291, file: !243, line: 1226, column: 3)
!14291 = distinct !DILexicalBlock(scope: !14287, file: !243, line: 1224, column: 2)
!14292 = !DILocation(line: 1226, column: 12, scope: !14293)
!14293 = !DILexicalBlockFile(scope: !14290, file: !243, discriminator: 1)
!14294 = !DILocation(line: 1226, column: 19, scope: !14293)
!14295 = !DILocation(line: 1226, column: 23, scope: !14293)
!14296 = !DILocation(line: 1226, column: 16, scope: !14293)
!14297 = !DILocation(line: 1226, column: 5, scope: !14293)
!14298 = !DILocation(line: 1226, column: 48, scope: !14299)
!14299 = !DILexicalBlockFile(scope: !14300, file: !243, discriminator: 2)
!14300 = distinct !DILexicalBlock(scope: !14290, file: !243, line: 1226, column: 32)
!14301 = !DILocation(line: 1226, column: 42, scope: !14299)
!14302 = !DILocation(line: 1226, column: 40, scope: !14299)
!14303 = !DILocation(line: 1226, column: 66, scope: !14299)
!14304 = !DILocation(line: 1226, column: 72, scope: !14299)
!14305 = !DILocation(line: 1226, column: 78, scope: !14299)
!14306 = !DILocation(line: 1226, column: 90, scope: !14299)
!14307 = !DILocation(line: 1226, column: 96, scope: !14299)
!14308 = !DILocation(line: 1226, column: 103, scope: !14299)
!14309 = !DILocation(line: 1226, column: 86, scope: !14299)
!14310 = !DILocation(line: 1226, column: 58, scope: !14299)
!14311 = !DILocation(line: 1226, column: 62, scope: !14299)
!14312 = !DILocation(line: 1226, column: 124, scope: !14299)
!14313 = !DILocation(line: 1226, column: 130, scope: !14299)
!14314 = !DILocation(line: 1226, column: 136, scope: !14299)
!14315 = !DILocation(line: 1226, column: 148, scope: !14299)
!14316 = !DILocation(line: 1226, column: 154, scope: !14299)
!14317 = !DILocation(line: 1226, column: 160, scope: !14299)
!14318 = !DILocation(line: 1226, column: 144, scope: !14299)
!14319 = !DILocation(line: 1226, column: 114, scope: !14299)
!14320 = !DILocation(line: 1226, column: 120, scope: !14299)
!14321 = !DILocation(line: 1226, column: 180, scope: !14299)
!14322 = !DILocation(line: 1226, column: 186, scope: !14299)
!14323 = !DILocation(line: 1226, column: 192, scope: !14299)
!14324 = !DILocation(line: 1226, column: 204, scope: !14299)
!14325 = !DILocation(line: 1226, column: 210, scope: !14299)
!14326 = !DILocation(line: 1226, column: 216, scope: !14299)
!14327 = !DILocation(line: 1226, column: 200, scope: !14299)
!14328 = !DILocation(line: 1226, column: 171, scope: !14299)
!14329 = !DILocation(line: 1226, column: 176, scope: !14299)
!14330 = !DILocation(line: 1226, column: 241, scope: !14299)
!14331 = !DILocation(line: 1226, column: 238, scope: !14299)
!14332 = !DILocation(line: 1226, column: 232, scope: !14299)
!14333 = !DILocation(line: 1226, column: 236, scope: !14299)
!14334 = !DILocation(line: 1226, column: 261, scope: !14299)
!14335 = !DILocation(line: 1226, column: 258, scope: !14299)
!14336 = !DILocation(line: 1226, column: 252, scope: !14299)
!14337 = !DILocation(line: 1226, column: 256, scope: !14299)
!14338 = !DILocation(line: 1226, column: 282, scope: !14299)
!14339 = !DILocation(line: 1226, column: 279, scope: !14299)
!14340 = !DILocation(line: 1226, column: 273, scope: !14299)
!14341 = !DILocation(line: 1226, column: 277, scope: !14299)
!14342 = !DILocation(line: 1226, column: 301, scope: !14299)
!14343 = !DILocation(line: 1226, column: 295, scope: !14299)
!14344 = !DILocation(line: 1226, column: 293, scope: !14299)
!14345 = !DILocation(line: 1226, column: 319, scope: !14299)
!14346 = !DILocation(line: 1226, column: 325, scope: !14299)
!14347 = !DILocation(line: 1226, column: 331, scope: !14299)
!14348 = !DILocation(line: 1226, column: 343, scope: !14299)
!14349 = !DILocation(line: 1226, column: 349, scope: !14299)
!14350 = !DILocation(line: 1226, column: 356, scope: !14299)
!14351 = !DILocation(line: 1226, column: 339, scope: !14299)
!14352 = !DILocation(line: 1226, column: 311, scope: !14299)
!14353 = !DILocation(line: 1226, column: 315, scope: !14299)
!14354 = !DILocation(line: 1226, column: 377, scope: !14299)
!14355 = !DILocation(line: 1226, column: 383, scope: !14299)
!14356 = !DILocation(line: 1226, column: 389, scope: !14299)
!14357 = !DILocation(line: 1226, column: 401, scope: !14299)
!14358 = !DILocation(line: 1226, column: 407, scope: !14299)
!14359 = !DILocation(line: 1226, column: 413, scope: !14299)
!14360 = !DILocation(line: 1226, column: 397, scope: !14299)
!14361 = !DILocation(line: 1226, column: 367, scope: !14299)
!14362 = !DILocation(line: 1226, column: 373, scope: !14299)
!14363 = !DILocation(line: 1226, column: 433, scope: !14299)
!14364 = !DILocation(line: 1226, column: 439, scope: !14299)
!14365 = !DILocation(line: 1226, column: 445, scope: !14299)
!14366 = !DILocation(line: 1226, column: 457, scope: !14299)
!14367 = !DILocation(line: 1226, column: 463, scope: !14299)
!14368 = !DILocation(line: 1226, column: 469, scope: !14299)
!14369 = !DILocation(line: 1226, column: 453, scope: !14299)
!14370 = !DILocation(line: 1226, column: 424, scope: !14299)
!14371 = !DILocation(line: 1226, column: 429, scope: !14299)
!14372 = !DILocation(line: 1226, column: 494, scope: !14299)
!14373 = !DILocation(line: 1226, column: 491, scope: !14299)
!14374 = !DILocation(line: 1226, column: 485, scope: !14299)
!14375 = !DILocation(line: 1226, column: 489, scope: !14299)
!14376 = !DILocation(line: 1226, column: 514, scope: !14299)
!14377 = !DILocation(line: 1226, column: 511, scope: !14299)
!14378 = !DILocation(line: 1226, column: 505, scope: !14299)
!14379 = !DILocation(line: 1226, column: 509, scope: !14299)
!14380 = !DILocation(line: 1226, column: 535, scope: !14299)
!14381 = !DILocation(line: 1226, column: 532, scope: !14299)
!14382 = !DILocation(line: 1226, column: 526, scope: !14299)
!14383 = !DILocation(line: 1226, column: 530, scope: !14299)
!14384 = !DILocation(line: 1226, column: 554, scope: !14299)
!14385 = !DILocation(line: 1226, column: 548, scope: !14299)
!14386 = !DILocation(line: 1226, column: 546, scope: !14299)
!14387 = !DILocation(line: 1226, column: 572, scope: !14299)
!14388 = !DILocation(line: 1226, column: 578, scope: !14299)
!14389 = !DILocation(line: 1226, column: 584, scope: !14299)
!14390 = !DILocation(line: 1226, column: 596, scope: !14299)
!14391 = !DILocation(line: 1226, column: 602, scope: !14299)
!14392 = !DILocation(line: 1226, column: 609, scope: !14299)
!14393 = !DILocation(line: 1226, column: 592, scope: !14299)
!14394 = !DILocation(line: 1226, column: 564, scope: !14299)
!14395 = !DILocation(line: 1226, column: 568, scope: !14299)
!14396 = !DILocation(line: 1226, column: 630, scope: !14299)
!14397 = !DILocation(line: 1226, column: 636, scope: !14299)
!14398 = !DILocation(line: 1226, column: 642, scope: !14299)
!14399 = !DILocation(line: 1226, column: 654, scope: !14299)
!14400 = !DILocation(line: 1226, column: 660, scope: !14299)
!14401 = !DILocation(line: 1226, column: 666, scope: !14299)
!14402 = !DILocation(line: 1226, column: 650, scope: !14299)
!14403 = !DILocation(line: 1226, column: 620, scope: !14299)
!14404 = !DILocation(line: 1226, column: 626, scope: !14299)
!14405 = !DILocation(line: 1226, column: 686, scope: !14299)
!14406 = !DILocation(line: 1226, column: 692, scope: !14299)
!14407 = !DILocation(line: 1226, column: 698, scope: !14299)
!14408 = !DILocation(line: 1226, column: 710, scope: !14299)
!14409 = !DILocation(line: 1226, column: 716, scope: !14299)
!14410 = !DILocation(line: 1226, column: 722, scope: !14299)
!14411 = !DILocation(line: 1226, column: 706, scope: !14299)
!14412 = !DILocation(line: 1226, column: 677, scope: !14299)
!14413 = !DILocation(line: 1226, column: 682, scope: !14299)
!14414 = !DILocation(line: 1226, column: 747, scope: !14299)
!14415 = !DILocation(line: 1226, column: 744, scope: !14299)
!14416 = !DILocation(line: 1226, column: 738, scope: !14299)
!14417 = !DILocation(line: 1226, column: 742, scope: !14299)
!14418 = !DILocation(line: 1226, column: 767, scope: !14299)
!14419 = !DILocation(line: 1226, column: 764, scope: !14299)
!14420 = !DILocation(line: 1226, column: 758, scope: !14299)
!14421 = !DILocation(line: 1226, column: 762, scope: !14299)
!14422 = !DILocation(line: 1226, column: 788, scope: !14299)
!14423 = !DILocation(line: 1226, column: 785, scope: !14299)
!14424 = !DILocation(line: 1226, column: 779, scope: !14299)
!14425 = !DILocation(line: 1226, column: 783, scope: !14299)
!14426 = !DILocation(line: 1226, column: 807, scope: !14299)
!14427 = !DILocation(line: 1226, column: 801, scope: !14299)
!14428 = !DILocation(line: 1226, column: 799, scope: !14299)
!14429 = !DILocation(line: 1226, column: 825, scope: !14299)
!14430 = !DILocation(line: 1226, column: 831, scope: !14299)
!14431 = !DILocation(line: 1226, column: 837, scope: !14299)
!14432 = !DILocation(line: 1226, column: 849, scope: !14299)
!14433 = !DILocation(line: 1226, column: 855, scope: !14299)
!14434 = !DILocation(line: 1226, column: 862, scope: !14299)
!14435 = !DILocation(line: 1226, column: 845, scope: !14299)
!14436 = !DILocation(line: 1226, column: 817, scope: !14299)
!14437 = !DILocation(line: 1226, column: 821, scope: !14299)
!14438 = !DILocation(line: 1226, column: 883, scope: !14299)
!14439 = !DILocation(line: 1226, column: 889, scope: !14299)
!14440 = !DILocation(line: 1226, column: 895, scope: !14299)
!14441 = !DILocation(line: 1226, column: 907, scope: !14299)
!14442 = !DILocation(line: 1226, column: 913, scope: !14299)
!14443 = !DILocation(line: 1226, column: 919, scope: !14299)
!14444 = !DILocation(line: 1226, column: 903, scope: !14299)
!14445 = !DILocation(line: 1226, column: 873, scope: !14299)
!14446 = !DILocation(line: 1226, column: 879, scope: !14299)
!14447 = !DILocation(line: 1226, column: 939, scope: !14299)
!14448 = !DILocation(line: 1226, column: 945, scope: !14299)
!14449 = !DILocation(line: 1226, column: 951, scope: !14299)
!14450 = !DILocation(line: 1226, column: 963, scope: !14299)
!14451 = !DILocation(line: 1226, column: 969, scope: !14299)
!14452 = !DILocation(line: 1226, column: 975, scope: !14299)
!14453 = !DILocation(line: 1226, column: 959, scope: !14299)
!14454 = !DILocation(line: 1226, column: 930, scope: !14299)
!14455 = !DILocation(line: 1226, column: 935, scope: !14299)
!14456 = !DILocation(line: 1226, column: 1000, scope: !14299)
!14457 = !DILocation(line: 1226, column: 997, scope: !14299)
!14458 = !DILocation(line: 1226, column: 991, scope: !14299)
!14459 = !DILocation(line: 1226, column: 995, scope: !14299)
!14460 = !DILocation(line: 1226, column: 1020, scope: !14299)
!14461 = !DILocation(line: 1226, column: 1017, scope: !14299)
!14462 = !DILocation(line: 1226, column: 1011, scope: !14299)
!14463 = !DILocation(line: 1226, column: 1015, scope: !14299)
!14464 = !DILocation(line: 1226, column: 1041, scope: !14299)
!14465 = !DILocation(line: 1226, column: 1038, scope: !14299)
!14466 = !DILocation(line: 1226, column: 1032, scope: !14299)
!14467 = !DILocation(line: 1226, column: 1036, scope: !14299)
!14468 = !DILocation(line: 1226, column: 1060, scope: !14299)
!14469 = !DILocation(line: 1226, column: 1054, scope: !14299)
!14470 = !DILocation(line: 1226, column: 1052, scope: !14299)
!14471 = !DILocation(line: 1226, column: 1078, scope: !14299)
!14472 = !DILocation(line: 1226, column: 1084, scope: !14299)
!14473 = !DILocation(line: 1226, column: 1090, scope: !14299)
!14474 = !DILocation(line: 1226, column: 1102, scope: !14299)
!14475 = !DILocation(line: 1226, column: 1108, scope: !14299)
!14476 = !DILocation(line: 1226, column: 1115, scope: !14299)
!14477 = !DILocation(line: 1226, column: 1098, scope: !14299)
!14478 = !DILocation(line: 1226, column: 1070, scope: !14299)
!14479 = !DILocation(line: 1226, column: 1074, scope: !14299)
!14480 = !DILocation(line: 1226, column: 1136, scope: !14299)
!14481 = !DILocation(line: 1226, column: 1142, scope: !14299)
!14482 = !DILocation(line: 1226, column: 1148, scope: !14299)
!14483 = !DILocation(line: 1226, column: 1160, scope: !14299)
!14484 = !DILocation(line: 1226, column: 1166, scope: !14299)
!14485 = !DILocation(line: 1226, column: 1172, scope: !14299)
!14486 = !DILocation(line: 1226, column: 1156, scope: !14299)
!14487 = !DILocation(line: 1226, column: 1126, scope: !14299)
!14488 = !DILocation(line: 1226, column: 1132, scope: !14299)
!14489 = !DILocation(line: 1226, column: 1192, scope: !14299)
!14490 = !DILocation(line: 1226, column: 1198, scope: !14299)
!14491 = !DILocation(line: 1226, column: 1204, scope: !14299)
!14492 = !DILocation(line: 1226, column: 1216, scope: !14299)
!14493 = !DILocation(line: 1226, column: 1222, scope: !14299)
!14494 = !DILocation(line: 1226, column: 1228, scope: !14299)
!14495 = !DILocation(line: 1226, column: 1212, scope: !14299)
!14496 = !DILocation(line: 1226, column: 1183, scope: !14299)
!14497 = !DILocation(line: 1226, column: 1188, scope: !14299)
!14498 = !DILocation(line: 1226, column: 1253, scope: !14299)
!14499 = !DILocation(line: 1226, column: 1250, scope: !14299)
!14500 = !DILocation(line: 1226, column: 1244, scope: !14299)
!14501 = !DILocation(line: 1226, column: 1248, scope: !14299)
!14502 = !DILocation(line: 1226, column: 1273, scope: !14299)
!14503 = !DILocation(line: 1226, column: 1270, scope: !14299)
!14504 = !DILocation(line: 1226, column: 1264, scope: !14299)
!14505 = !DILocation(line: 1226, column: 1268, scope: !14299)
!14506 = !DILocation(line: 1226, column: 1294, scope: !14299)
!14507 = !DILocation(line: 1226, column: 1291, scope: !14299)
!14508 = !DILocation(line: 1226, column: 1285, scope: !14299)
!14509 = !DILocation(line: 1226, column: 1289, scope: !14299)
!14510 = !DILocation(line: 1226, column: 1313, scope: !14299)
!14511 = !DILocation(line: 1226, column: 1307, scope: !14299)
!14512 = !DILocation(line: 1226, column: 1305, scope: !14299)
!14513 = !DILocation(line: 1226, column: 1331, scope: !14299)
!14514 = !DILocation(line: 1226, column: 1337, scope: !14299)
!14515 = !DILocation(line: 1226, column: 1343, scope: !14299)
!14516 = !DILocation(line: 1226, column: 1355, scope: !14299)
!14517 = !DILocation(line: 1226, column: 1361, scope: !14299)
!14518 = !DILocation(line: 1226, column: 1368, scope: !14299)
!14519 = !DILocation(line: 1226, column: 1351, scope: !14299)
!14520 = !DILocation(line: 1226, column: 1323, scope: !14299)
!14521 = !DILocation(line: 1226, column: 1327, scope: !14299)
!14522 = !DILocation(line: 1226, column: 1389, scope: !14299)
!14523 = !DILocation(line: 1226, column: 1395, scope: !14299)
!14524 = !DILocation(line: 1226, column: 1401, scope: !14299)
!14525 = !DILocation(line: 1226, column: 1413, scope: !14299)
!14526 = !DILocation(line: 1226, column: 1419, scope: !14299)
!14527 = !DILocation(line: 1226, column: 1425, scope: !14299)
!14528 = !DILocation(line: 1226, column: 1409, scope: !14299)
!14529 = !DILocation(line: 1226, column: 1379, scope: !14299)
!14530 = !DILocation(line: 1226, column: 1385, scope: !14299)
!14531 = !DILocation(line: 1226, column: 1445, scope: !14299)
!14532 = !DILocation(line: 1226, column: 1451, scope: !14299)
!14533 = !DILocation(line: 1226, column: 1457, scope: !14299)
!14534 = !DILocation(line: 1226, column: 1469, scope: !14299)
!14535 = !DILocation(line: 1226, column: 1475, scope: !14299)
!14536 = !DILocation(line: 1226, column: 1481, scope: !14299)
!14537 = !DILocation(line: 1226, column: 1465, scope: !14299)
!14538 = !DILocation(line: 1226, column: 1436, scope: !14299)
!14539 = !DILocation(line: 1226, column: 1441, scope: !14299)
!14540 = !DILocation(line: 1226, column: 1506, scope: !14299)
!14541 = !DILocation(line: 1226, column: 1503, scope: !14299)
!14542 = !DILocation(line: 1226, column: 1497, scope: !14299)
!14543 = !DILocation(line: 1226, column: 1501, scope: !14299)
!14544 = !DILocation(line: 1226, column: 1526, scope: !14299)
!14545 = !DILocation(line: 1226, column: 1523, scope: !14299)
!14546 = !DILocation(line: 1226, column: 1517, scope: !14299)
!14547 = !DILocation(line: 1226, column: 1521, scope: !14299)
!14548 = !DILocation(line: 1226, column: 1547, scope: !14299)
!14549 = !DILocation(line: 1226, column: 1544, scope: !14299)
!14550 = !DILocation(line: 1226, column: 1538, scope: !14299)
!14551 = !DILocation(line: 1226, column: 1542, scope: !14299)
!14552 = !DILocation(line: 1226, column: 1566, scope: !14299)
!14553 = !DILocation(line: 1226, column: 1560, scope: !14299)
!14554 = !DILocation(line: 1226, column: 1558, scope: !14299)
!14555 = !DILocation(line: 1226, column: 1584, scope: !14299)
!14556 = !DILocation(line: 1226, column: 1590, scope: !14299)
!14557 = !DILocation(line: 1226, column: 1596, scope: !14299)
!14558 = !DILocation(line: 1226, column: 1608, scope: !14299)
!14559 = !DILocation(line: 1226, column: 1614, scope: !14299)
!14560 = !DILocation(line: 1226, column: 1621, scope: !14299)
!14561 = !DILocation(line: 1226, column: 1604, scope: !14299)
!14562 = !DILocation(line: 1226, column: 1576, scope: !14299)
!14563 = !DILocation(line: 1226, column: 1580, scope: !14299)
!14564 = !DILocation(line: 1226, column: 1642, scope: !14299)
!14565 = !DILocation(line: 1226, column: 1648, scope: !14299)
!14566 = !DILocation(line: 1226, column: 1654, scope: !14299)
!14567 = !DILocation(line: 1226, column: 1666, scope: !14299)
!14568 = !DILocation(line: 1226, column: 1672, scope: !14299)
!14569 = !DILocation(line: 1226, column: 1678, scope: !14299)
!14570 = !DILocation(line: 1226, column: 1662, scope: !14299)
!14571 = !DILocation(line: 1226, column: 1632, scope: !14299)
!14572 = !DILocation(line: 1226, column: 1638, scope: !14299)
!14573 = !DILocation(line: 1226, column: 1698, scope: !14299)
!14574 = !DILocation(line: 1226, column: 1704, scope: !14299)
!14575 = !DILocation(line: 1226, column: 1710, scope: !14299)
!14576 = !DILocation(line: 1226, column: 1722, scope: !14299)
!14577 = !DILocation(line: 1226, column: 1728, scope: !14299)
!14578 = !DILocation(line: 1226, column: 1734, scope: !14299)
!14579 = !DILocation(line: 1226, column: 1718, scope: !14299)
!14580 = !DILocation(line: 1226, column: 1689, scope: !14299)
!14581 = !DILocation(line: 1226, column: 1694, scope: !14299)
!14582 = !DILocation(line: 1226, column: 1759, scope: !14299)
!14583 = !DILocation(line: 1226, column: 1756, scope: !14299)
!14584 = !DILocation(line: 1226, column: 1750, scope: !14299)
!14585 = !DILocation(line: 1226, column: 1754, scope: !14299)
!14586 = !DILocation(line: 1226, column: 1779, scope: !14299)
!14587 = !DILocation(line: 1226, column: 1776, scope: !14299)
!14588 = !DILocation(line: 1226, column: 1770, scope: !14299)
!14589 = !DILocation(line: 1226, column: 1774, scope: !14299)
!14590 = !DILocation(line: 1226, column: 1800, scope: !14299)
!14591 = !DILocation(line: 1226, column: 1797, scope: !14299)
!14592 = !DILocation(line: 1226, column: 1791, scope: !14299)
!14593 = !DILocation(line: 1226, column: 1795, scope: !14299)
!14594 = !DILocation(line: 1226, column: 1819, scope: !14299)
!14595 = !DILocation(line: 1226, column: 1813, scope: !14299)
!14596 = !DILocation(line: 1226, column: 1811, scope: !14299)
!14597 = !DILocation(line: 1226, column: 1837, scope: !14299)
!14598 = !DILocation(line: 1226, column: 1843, scope: !14299)
!14599 = !DILocation(line: 1226, column: 1849, scope: !14299)
!14600 = !DILocation(line: 1226, column: 1861, scope: !14299)
!14601 = !DILocation(line: 1226, column: 1867, scope: !14299)
!14602 = !DILocation(line: 1226, column: 1874, scope: !14299)
!14603 = !DILocation(line: 1226, column: 1857, scope: !14299)
!14604 = !DILocation(line: 1226, column: 1829, scope: !14299)
!14605 = !DILocation(line: 1226, column: 1833, scope: !14299)
!14606 = !DILocation(line: 1226, column: 1895, scope: !14299)
!14607 = !DILocation(line: 1226, column: 1901, scope: !14299)
!14608 = !DILocation(line: 1226, column: 1907, scope: !14299)
!14609 = !DILocation(line: 1226, column: 1919, scope: !14299)
!14610 = !DILocation(line: 1226, column: 1925, scope: !14299)
!14611 = !DILocation(line: 1226, column: 1931, scope: !14299)
!14612 = !DILocation(line: 1226, column: 1915, scope: !14299)
!14613 = !DILocation(line: 1226, column: 1885, scope: !14299)
!14614 = !DILocation(line: 1226, column: 1891, scope: !14299)
!14615 = !DILocation(line: 1226, column: 1951, scope: !14299)
!14616 = !DILocation(line: 1226, column: 1957, scope: !14299)
!14617 = !DILocation(line: 1226, column: 1963, scope: !14299)
!14618 = !DILocation(line: 1226, column: 1975, scope: !14299)
!14619 = !DILocation(line: 1226, column: 1981, scope: !14299)
!14620 = !DILocation(line: 1226, column: 1987, scope: !14299)
!14621 = !DILocation(line: 1226, column: 1971, scope: !14299)
!14622 = !DILocation(line: 1226, column: 1942, scope: !14299)
!14623 = !DILocation(line: 1226, column: 1947, scope: !14299)
!14624 = !DILocation(line: 1226, column: 2012, scope: !14299)
!14625 = !DILocation(line: 1226, column: 2009, scope: !14299)
!14626 = !DILocation(line: 1226, column: 2003, scope: !14299)
!14627 = !DILocation(line: 1226, column: 2007, scope: !14299)
!14628 = !DILocation(line: 1226, column: 2032, scope: !14299)
!14629 = !DILocation(line: 1226, column: 2029, scope: !14299)
!14630 = !DILocation(line: 1226, column: 2023, scope: !14299)
!14631 = !DILocation(line: 1226, column: 2027, scope: !14299)
!14632 = !DILocation(line: 1226, column: 2053, scope: !14299)
!14633 = !DILocation(line: 1226, column: 2050, scope: !14299)
!14634 = !DILocation(line: 1226, column: 2044, scope: !14299)
!14635 = !DILocation(line: 1226, column: 2048, scope: !14299)
!14636 = !DILocation(line: 1226, column: 5, scope: !14299)
!14637 = distinct !{!14637, !14289}
!14638 = !DILocation(line: 1226, column: 2060, scope: !14639)
!14639 = !DILexicalBlockFile(scope: !14290, file: !243, discriminator: 3)
!14640 = !DILocation(line: 1226, column: 2067, scope: !14641)
!14641 = !DILexicalBlockFile(scope: !14290, file: !243, discriminator: 4)
!14642 = !DILocation(line: 1226, column: 2073, scope: !14641)
!14643 = !DILocation(line: 1226, column: 2071, scope: !14641)
!14644 = !DILocation(line: 1226, column: 2060, scope: !14641)
!14645 = !DILocation(line: 1226, column: 2094, scope: !14646)
!14646 = !DILexicalBlockFile(scope: !14647, file: !243, discriminator: 5)
!14647 = distinct !DILexicalBlock(scope: !14290, file: !243, line: 1226, column: 2078)
!14648 = !DILocation(line: 1226, column: 2088, scope: !14646)
!14649 = !DILocation(line: 1226, column: 2086, scope: !14646)
!14650 = !DILocation(line: 1226, column: 2112, scope: !14646)
!14651 = !DILocation(line: 1226, column: 2118, scope: !14646)
!14652 = !DILocation(line: 1226, column: 2124, scope: !14646)
!14653 = !DILocation(line: 1226, column: 2136, scope: !14646)
!14654 = !DILocation(line: 1226, column: 2142, scope: !14646)
!14655 = !DILocation(line: 1226, column: 2149, scope: !14646)
!14656 = !DILocation(line: 1226, column: 2132, scope: !14646)
!14657 = !DILocation(line: 1226, column: 2104, scope: !14646)
!14658 = !DILocation(line: 1226, column: 2108, scope: !14646)
!14659 = !DILocation(line: 1226, column: 2170, scope: !14646)
!14660 = !DILocation(line: 1226, column: 2176, scope: !14646)
!14661 = !DILocation(line: 1226, column: 2182, scope: !14646)
!14662 = !DILocation(line: 1226, column: 2194, scope: !14646)
!14663 = !DILocation(line: 1226, column: 2200, scope: !14646)
!14664 = !DILocation(line: 1226, column: 2206, scope: !14646)
!14665 = !DILocation(line: 1226, column: 2190, scope: !14646)
!14666 = !DILocation(line: 1226, column: 2160, scope: !14646)
!14667 = !DILocation(line: 1226, column: 2166, scope: !14646)
!14668 = !DILocation(line: 1226, column: 2226, scope: !14646)
!14669 = !DILocation(line: 1226, column: 2232, scope: !14646)
!14670 = !DILocation(line: 1226, column: 2238, scope: !14646)
!14671 = !DILocation(line: 1226, column: 2250, scope: !14646)
!14672 = !DILocation(line: 1226, column: 2256, scope: !14646)
!14673 = !DILocation(line: 1226, column: 2262, scope: !14646)
!14674 = !DILocation(line: 1226, column: 2246, scope: !14646)
!14675 = !DILocation(line: 1226, column: 2217, scope: !14646)
!14676 = !DILocation(line: 1226, column: 2222, scope: !14646)
!14677 = !DILocation(line: 1226, column: 2287, scope: !14646)
!14678 = !DILocation(line: 1226, column: 2284, scope: !14646)
!14679 = !DILocation(line: 1226, column: 2278, scope: !14646)
!14680 = !DILocation(line: 1226, column: 2282, scope: !14646)
!14681 = !DILocation(line: 1226, column: 2307, scope: !14646)
!14682 = !DILocation(line: 1226, column: 2304, scope: !14646)
!14683 = !DILocation(line: 1226, column: 2298, scope: !14646)
!14684 = !DILocation(line: 1226, column: 2302, scope: !14646)
!14685 = !DILocation(line: 1226, column: 2328, scope: !14646)
!14686 = !DILocation(line: 1226, column: 2325, scope: !14646)
!14687 = !DILocation(line: 1226, column: 2319, scope: !14646)
!14688 = !DILocation(line: 1226, column: 2323, scope: !14646)
!14689 = !DILocation(line: 1226, column: 2060, scope: !14646)
!14690 = distinct !{!14690, !14691}
!14691 = !DILocation(line: 1226, column: 2060, scope: !14290)
!14692 = !DILocation(line: 1235, column: 2, scope: !14291)
!14693 = !DILocation(line: 1236, column: 11, scope: !14694)
!14694 = distinct !DILexicalBlock(scope: !14287, file: !243, line: 1236, column: 11)
!14695 = !DILocation(line: 1236, column: 11, scope: !14287)
!14696 = !DILocation(line: 1238, column: 7, scope: !14697)
!14697 = distinct !DILexicalBlock(scope: !14698, file: !243, line: 1238, column: 7)
!14698 = distinct !DILexicalBlock(scope: !14694, file: !243, line: 1237, column: 2)
!14699 = !DILocation(line: 1238, column: 7, scope: !14698)
!14700 = !DILocation(line: 1240, column: 4, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14697, file: !243, line: 1239, column: 3)
!14702 = !DILocation(line: 1240, column: 11, scope: !14703)
!14703 = !DILexicalBlockFile(scope: !14701, file: !243, discriminator: 1)
!14704 = !DILocation(line: 1240, column: 17, scope: !14703)
!14705 = !DILocation(line: 1240, column: 15, scope: !14703)
!14706 = !DILocation(line: 1240, column: 4, scope: !14703)
!14707 = !DILocation(line: 1242, column: 19, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14701, file: !243, line: 1241, column: 4)
!14709 = !DILocation(line: 1242, column: 13, scope: !14708)
!14710 = !DILocation(line: 1242, column: 11, scope: !14708)
!14711 = !DILocation(line: 1243, column: 18, scope: !14712)
!14712 = distinct !DILexicalBlock(scope: !14708, file: !243, line: 1243, column: 5)
!14713 = !DILocation(line: 1243, column: 24, scope: !14712)
!14714 = !DILocation(line: 1243, column: 32, scope: !14712)
!14715 = !DILocation(line: 1243, column: 41, scope: !14712)
!14716 = !DILocation(line: 1243, column: 47, scope: !14712)
!14717 = !DILocation(line: 1243, column: 38, scope: !14712)
!14718 = !DILocation(line: 1243, column: 15, scope: !14712)
!14719 = !DILocation(line: 1243, column: 13, scope: !14712)
!14720 = !DILocation(line: 1244, column: 18, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14708, file: !243, line: 1244, column: 5)
!14722 = !DILocation(line: 1244, column: 24, scope: !14721)
!14723 = !DILocation(line: 1244, column: 30, scope: !14721)
!14724 = !DILocation(line: 1244, column: 42, scope: !14721)
!14725 = !DILocation(line: 1244, column: 48, scope: !14721)
!14726 = !DILocation(line: 1244, column: 55, scope: !14721)
!14727 = !DILocation(line: 1244, column: 38, scope: !14721)
!14728 = !DILocation(line: 1244, column: 10, scope: !14721)
!14729 = !DILocation(line: 1244, column: 14, scope: !14721)
!14730 = !DILocation(line: 1244, column: 76, scope: !14721)
!14731 = !DILocation(line: 1244, column: 82, scope: !14721)
!14732 = !DILocation(line: 1244, column: 88, scope: !14721)
!14733 = !DILocation(line: 1244, column: 100, scope: !14721)
!14734 = !DILocation(line: 1244, column: 106, scope: !14721)
!14735 = !DILocation(line: 1244, column: 112, scope: !14721)
!14736 = !DILocation(line: 1244, column: 96, scope: !14721)
!14737 = !DILocation(line: 1244, column: 66, scope: !14721)
!14738 = !DILocation(line: 1244, column: 72, scope: !14721)
!14739 = !DILocation(line: 1244, column: 132, scope: !14721)
!14740 = !DILocation(line: 1244, column: 138, scope: !14721)
!14741 = !DILocation(line: 1244, column: 144, scope: !14721)
!14742 = !DILocation(line: 1244, column: 156, scope: !14721)
!14743 = !DILocation(line: 1244, column: 162, scope: !14721)
!14744 = !DILocation(line: 1244, column: 168, scope: !14721)
!14745 = !DILocation(line: 1244, column: 152, scope: !14721)
!14746 = !DILocation(line: 1244, column: 123, scope: !14721)
!14747 = !DILocation(line: 1244, column: 128, scope: !14721)
!14748 = !DILocation(line: 1245, column: 18, scope: !14708)
!14749 = !DILocation(line: 1245, column: 25, scope: !14708)
!14750 = !DILocation(line: 1245, column: 22, scope: !14708)
!14751 = !DILocation(line: 1245, column: 43, scope: !14708)
!14752 = !DILocation(line: 1245, column: 40, scope: !14708)
!14753 = !DILocation(line: 1245, column: 65, scope: !14708)
!14754 = !DILocation(line: 1245, column: 74, scope: !14708)
!14755 = !DILocation(line: 1245, column: 71, scope: !14708)
!14756 = !DILocation(line: 1245, column: 94, scope: !14708)
!14757 = !DILocation(line: 1245, column: 91, scope: !14708)
!14758 = !DILocation(line: 1245, column: 58, scope: !14708)
!14759 = !DILocation(line: 1245, column: 118, scope: !14708)
!14760 = !DILocation(line: 1245, column: 126, scope: !14708)
!14761 = !DILocation(line: 1245, column: 123, scope: !14708)
!14762 = !DILocation(line: 1245, column: 145, scope: !14708)
!14763 = !DILocation(line: 1245, column: 142, scope: !14708)
!14764 = !DILocation(line: 1245, column: 111, scope: !14708)
!14765 = !DILocation(line: 1245, column: 11, scope: !14708)
!14766 = !DILocation(line: 1246, column: 18, scope: !14767)
!14767 = distinct !DILexicalBlock(scope: !14708, file: !243, line: 1246, column: 5)
!14768 = !DILocation(line: 1246, column: 24, scope: !14767)
!14769 = !DILocation(line: 1246, column: 12, scope: !14767)
!14770 = !DILocation(line: 1246, column: 16, scope: !14767)
!14771 = !DILocation(line: 1246, column: 42, scope: !14767)
!14772 = !DILocation(line: 1246, column: 48, scope: !14767)
!14773 = !DILocation(line: 1246, column: 36, scope: !14767)
!14774 = !DILocation(line: 1246, column: 40, scope: !14767)
!14775 = !DILocation(line: 1246, column: 65, scope: !14767)
!14776 = !DILocation(line: 1246, column: 59, scope: !14767)
!14777 = !DILocation(line: 1246, column: 63, scope: !14767)
!14778 = !DILocation(line: 1240, column: 4, scope: !14779)
!14779 = !DILexicalBlockFile(scope: !14701, file: !243, discriminator: 2)
!14780 = distinct !{!14780, !14700}
!14781 = !DILocation(line: 1248, column: 3, scope: !14701)
!14782 = !DILocation(line: 1251, column: 4, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14697, file: !243, line: 1250, column: 3)
!14784 = !DILocation(line: 1251, column: 11, scope: !14785)
!14785 = !DILexicalBlockFile(scope: !14783, file: !243, discriminator: 1)
!14786 = !DILocation(line: 1251, column: 17, scope: !14785)
!14787 = !DILocation(line: 1251, column: 15, scope: !14785)
!14788 = !DILocation(line: 1251, column: 4, scope: !14785)
!14789 = !DILocation(line: 1253, column: 19, scope: !14790)
!14790 = distinct !DILexicalBlock(scope: !14783, file: !243, line: 1252, column: 4)
!14791 = !DILocation(line: 1253, column: 13, scope: !14790)
!14792 = !DILocation(line: 1253, column: 11, scope: !14790)
!14793 = !DILocation(line: 1254, column: 18, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14790, file: !243, line: 1254, column: 5)
!14795 = !DILocation(line: 1254, column: 24, scope: !14794)
!14796 = !DILocation(line: 1254, column: 30, scope: !14794)
!14797 = !DILocation(line: 1254, column: 42, scope: !14794)
!14798 = !DILocation(line: 1254, column: 48, scope: !14794)
!14799 = !DILocation(line: 1254, column: 55, scope: !14794)
!14800 = !DILocation(line: 1254, column: 38, scope: !14794)
!14801 = !DILocation(line: 1254, column: 10, scope: !14794)
!14802 = !DILocation(line: 1254, column: 14, scope: !14794)
!14803 = !DILocation(line: 1254, column: 76, scope: !14794)
!14804 = !DILocation(line: 1254, column: 82, scope: !14794)
!14805 = !DILocation(line: 1254, column: 88, scope: !14794)
!14806 = !DILocation(line: 1254, column: 100, scope: !14794)
!14807 = !DILocation(line: 1254, column: 106, scope: !14794)
!14808 = !DILocation(line: 1254, column: 112, scope: !14794)
!14809 = !DILocation(line: 1254, column: 96, scope: !14794)
!14810 = !DILocation(line: 1254, column: 66, scope: !14794)
!14811 = !DILocation(line: 1254, column: 72, scope: !14794)
!14812 = !DILocation(line: 1254, column: 132, scope: !14794)
!14813 = !DILocation(line: 1254, column: 138, scope: !14794)
!14814 = !DILocation(line: 1254, column: 144, scope: !14794)
!14815 = !DILocation(line: 1254, column: 156, scope: !14794)
!14816 = !DILocation(line: 1254, column: 162, scope: !14794)
!14817 = !DILocation(line: 1254, column: 168, scope: !14794)
!14818 = !DILocation(line: 1254, column: 152, scope: !14794)
!14819 = !DILocation(line: 1254, column: 123, scope: !14794)
!14820 = !DILocation(line: 1254, column: 128, scope: !14794)
!14821 = !DILocation(line: 1255, column: 18, scope: !14790)
!14822 = !DILocation(line: 1255, column: 25, scope: !14790)
!14823 = !DILocation(line: 1255, column: 22, scope: !14790)
!14824 = !DILocation(line: 1255, column: 43, scope: !14790)
!14825 = !DILocation(line: 1255, column: 40, scope: !14790)
!14826 = !DILocation(line: 1255, column: 65, scope: !14790)
!14827 = !DILocation(line: 1255, column: 74, scope: !14790)
!14828 = !DILocation(line: 1255, column: 71, scope: !14790)
!14829 = !DILocation(line: 1255, column: 94, scope: !14790)
!14830 = !DILocation(line: 1255, column: 91, scope: !14790)
!14831 = !DILocation(line: 1255, column: 58, scope: !14790)
!14832 = !DILocation(line: 1255, column: 118, scope: !14790)
!14833 = !DILocation(line: 1255, column: 126, scope: !14790)
!14834 = !DILocation(line: 1255, column: 123, scope: !14790)
!14835 = !DILocation(line: 1255, column: 145, scope: !14790)
!14836 = !DILocation(line: 1255, column: 142, scope: !14790)
!14837 = !DILocation(line: 1255, column: 111, scope: !14790)
!14838 = !DILocation(line: 1255, column: 11, scope: !14790)
!14839 = !DILocation(line: 1256, column: 18, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14790, file: !243, line: 1256, column: 5)
!14841 = !DILocation(line: 1256, column: 24, scope: !14840)
!14842 = !DILocation(line: 1256, column: 12, scope: !14840)
!14843 = !DILocation(line: 1256, column: 16, scope: !14840)
!14844 = !DILocation(line: 1256, column: 42, scope: !14840)
!14845 = !DILocation(line: 1256, column: 48, scope: !14840)
!14846 = !DILocation(line: 1256, column: 36, scope: !14840)
!14847 = !DILocation(line: 1256, column: 40, scope: !14840)
!14848 = !DILocation(line: 1256, column: 65, scope: !14840)
!14849 = !DILocation(line: 1256, column: 59, scope: !14840)
!14850 = !DILocation(line: 1256, column: 63, scope: !14840)
!14851 = !DILocation(line: 1251, column: 4, scope: !14852)
!14852 = !DILexicalBlockFile(scope: !14783, file: !243, discriminator: 2)
!14853 = distinct !{!14853, !14782}
!14854 = !DILocation(line: 1259, column: 2, scope: !14698)
!14855 = !DILocation(line: 1262, column: 7, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14857, file: !243, line: 1262, column: 7)
!14857 = distinct !DILexicalBlock(scope: !14694, file: !243, line: 1261, column: 2)
!14858 = !DILocation(line: 1262, column: 7, scope: !14857)
!14859 = !DILocation(line: 1264, column: 4, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14856, file: !243, line: 1263, column: 3)
!14861 = !DILocation(line: 1264, column: 11, scope: !14862)
!14862 = !DILexicalBlockFile(scope: !14860, file: !243, discriminator: 1)
!14863 = !DILocation(line: 1264, column: 17, scope: !14862)
!14864 = !DILocation(line: 1264, column: 15, scope: !14862)
!14865 = !DILocation(line: 1264, column: 4, scope: !14862)
!14866 = !DILocation(line: 1266, column: 19, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14860, file: !243, line: 1265, column: 4)
!14868 = !DILocation(line: 1266, column: 13, scope: !14867)
!14869 = !DILocation(line: 1266, column: 11, scope: !14867)
!14870 = !DILocation(line: 1267, column: 18, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14867, file: !243, line: 1267, column: 5)
!14872 = !DILocation(line: 1267, column: 24, scope: !14871)
!14873 = !DILocation(line: 1267, column: 32, scope: !14871)
!14874 = !DILocation(line: 1267, column: 41, scope: !14871)
!14875 = !DILocation(line: 1267, column: 47, scope: !14871)
!14876 = !DILocation(line: 1267, column: 38, scope: !14871)
!14877 = !DILocation(line: 1267, column: 15, scope: !14871)
!14878 = !DILocation(line: 1267, column: 13, scope: !14871)
!14879 = !DILocation(line: 1268, column: 18, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14867, file: !243, line: 1268, column: 5)
!14881 = !DILocation(line: 1268, column: 24, scope: !14880)
!14882 = !DILocation(line: 1268, column: 30, scope: !14880)
!14883 = !DILocation(line: 1268, column: 42, scope: !14880)
!14884 = !DILocation(line: 1268, column: 48, scope: !14880)
!14885 = !DILocation(line: 1268, column: 55, scope: !14880)
!14886 = !DILocation(line: 1268, column: 38, scope: !14880)
!14887 = !DILocation(line: 1268, column: 10, scope: !14880)
!14888 = !DILocation(line: 1268, column: 14, scope: !14880)
!14889 = !DILocation(line: 1268, column: 76, scope: !14880)
!14890 = !DILocation(line: 1268, column: 82, scope: !14880)
!14891 = !DILocation(line: 1268, column: 88, scope: !14880)
!14892 = !DILocation(line: 1268, column: 100, scope: !14880)
!14893 = !DILocation(line: 1268, column: 106, scope: !14880)
!14894 = !DILocation(line: 1268, column: 112, scope: !14880)
!14895 = !DILocation(line: 1268, column: 96, scope: !14880)
!14896 = !DILocation(line: 1268, column: 66, scope: !14880)
!14897 = !DILocation(line: 1268, column: 72, scope: !14880)
!14898 = !DILocation(line: 1268, column: 132, scope: !14880)
!14899 = !DILocation(line: 1268, column: 138, scope: !14880)
!14900 = !DILocation(line: 1268, column: 144, scope: !14880)
!14901 = !DILocation(line: 1268, column: 156, scope: !14880)
!14902 = !DILocation(line: 1268, column: 162, scope: !14880)
!14903 = !DILocation(line: 1268, column: 168, scope: !14880)
!14904 = !DILocation(line: 1268, column: 152, scope: !14880)
!14905 = !DILocation(line: 1268, column: 123, scope: !14880)
!14906 = !DILocation(line: 1268, column: 128, scope: !14880)
!14907 = !DILocation(line: 1269, column: 18, scope: !14867)
!14908 = !DILocation(line: 1269, column: 25, scope: !14867)
!14909 = !DILocation(line: 1269, column: 22, scope: !14867)
!14910 = !DILocation(line: 1269, column: 43, scope: !14867)
!14911 = !DILocation(line: 1269, column: 40, scope: !14867)
!14912 = !DILocation(line: 1269, column: 65, scope: !14867)
!14913 = !DILocation(line: 1269, column: 74, scope: !14867)
!14914 = !DILocation(line: 1269, column: 71, scope: !14867)
!14915 = !DILocation(line: 1269, column: 94, scope: !14867)
!14916 = !DILocation(line: 1269, column: 91, scope: !14867)
!14917 = !DILocation(line: 1269, column: 58, scope: !14867)
!14918 = !DILocation(line: 1269, column: 118, scope: !14867)
!14919 = !DILocation(line: 1269, column: 126, scope: !14867)
!14920 = !DILocation(line: 1269, column: 123, scope: !14867)
!14921 = !DILocation(line: 1269, column: 145, scope: !14867)
!14922 = !DILocation(line: 1269, column: 142, scope: !14867)
!14923 = !DILocation(line: 1269, column: 111, scope: !14867)
!14924 = !DILocation(line: 1269, column: 11, scope: !14867)
!14925 = !DILocation(line: 1270, column: 18, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14867, file: !243, line: 1270, column: 5)
!14927 = !DILocation(line: 1270, column: 12, scope: !14926)
!14928 = !DILocation(line: 1270, column: 16, scope: !14926)
!14929 = !DILocation(line: 1270, column: 36, scope: !14926)
!14930 = !DILocation(line: 1270, column: 42, scope: !14926)
!14931 = !DILocation(line: 1270, column: 30, scope: !14926)
!14932 = !DILocation(line: 1270, column: 34, scope: !14926)
!14933 = !DILocation(line: 1270, column: 59, scope: !14926)
!14934 = !DILocation(line: 1270, column: 65, scope: !14926)
!14935 = !DILocation(line: 1270, column: 53, scope: !14926)
!14936 = !DILocation(line: 1270, column: 57, scope: !14926)
!14937 = !DILocation(line: 1264, column: 4, scope: !14938)
!14938 = !DILexicalBlockFile(scope: !14860, file: !243, discriminator: 2)
!14939 = distinct !{!14939, !14859}
!14940 = !DILocation(line: 1272, column: 3, scope: !14860)
!14941 = !DILocation(line: 1275, column: 4, scope: !14942)
!14942 = distinct !DILexicalBlock(scope: !14856, file: !243, line: 1274, column: 3)
!14943 = !DILocation(line: 1275, column: 11, scope: !14944)
!14944 = !DILexicalBlockFile(scope: !14942, file: !243, discriminator: 1)
!14945 = !DILocation(line: 1275, column: 17, scope: !14944)
!14946 = !DILocation(line: 1275, column: 15, scope: !14944)
!14947 = !DILocation(line: 1275, column: 4, scope: !14944)
!14948 = !DILocation(line: 1277, column: 19, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14942, file: !243, line: 1276, column: 4)
!14950 = !DILocation(line: 1277, column: 13, scope: !14949)
!14951 = !DILocation(line: 1277, column: 11, scope: !14949)
!14952 = !DILocation(line: 1278, column: 18, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14949, file: !243, line: 1278, column: 5)
!14954 = !DILocation(line: 1278, column: 24, scope: !14953)
!14955 = !DILocation(line: 1278, column: 30, scope: !14953)
!14956 = !DILocation(line: 1278, column: 42, scope: !14953)
!14957 = !DILocation(line: 1278, column: 48, scope: !14953)
!14958 = !DILocation(line: 1278, column: 55, scope: !14953)
!14959 = !DILocation(line: 1278, column: 38, scope: !14953)
!14960 = !DILocation(line: 1278, column: 10, scope: !14953)
!14961 = !DILocation(line: 1278, column: 14, scope: !14953)
!14962 = !DILocation(line: 1278, column: 76, scope: !14953)
!14963 = !DILocation(line: 1278, column: 82, scope: !14953)
!14964 = !DILocation(line: 1278, column: 88, scope: !14953)
!14965 = !DILocation(line: 1278, column: 100, scope: !14953)
!14966 = !DILocation(line: 1278, column: 106, scope: !14953)
!14967 = !DILocation(line: 1278, column: 112, scope: !14953)
!14968 = !DILocation(line: 1278, column: 96, scope: !14953)
!14969 = !DILocation(line: 1278, column: 66, scope: !14953)
!14970 = !DILocation(line: 1278, column: 72, scope: !14953)
!14971 = !DILocation(line: 1278, column: 132, scope: !14953)
!14972 = !DILocation(line: 1278, column: 138, scope: !14953)
!14973 = !DILocation(line: 1278, column: 144, scope: !14953)
!14974 = !DILocation(line: 1278, column: 156, scope: !14953)
!14975 = !DILocation(line: 1278, column: 162, scope: !14953)
!14976 = !DILocation(line: 1278, column: 168, scope: !14953)
!14977 = !DILocation(line: 1278, column: 152, scope: !14953)
!14978 = !DILocation(line: 1278, column: 123, scope: !14953)
!14979 = !DILocation(line: 1278, column: 128, scope: !14953)
!14980 = !DILocation(line: 1279, column: 18, scope: !14949)
!14981 = !DILocation(line: 1279, column: 25, scope: !14949)
!14982 = !DILocation(line: 1279, column: 22, scope: !14949)
!14983 = !DILocation(line: 1279, column: 43, scope: !14949)
!14984 = !DILocation(line: 1279, column: 40, scope: !14949)
!14985 = !DILocation(line: 1279, column: 65, scope: !14949)
!14986 = !DILocation(line: 1279, column: 74, scope: !14949)
!14987 = !DILocation(line: 1279, column: 71, scope: !14949)
!14988 = !DILocation(line: 1279, column: 94, scope: !14949)
!14989 = !DILocation(line: 1279, column: 91, scope: !14949)
!14990 = !DILocation(line: 1279, column: 58, scope: !14949)
!14991 = !DILocation(line: 1279, column: 118, scope: !14949)
!14992 = !DILocation(line: 1279, column: 126, scope: !14949)
!14993 = !DILocation(line: 1279, column: 123, scope: !14949)
!14994 = !DILocation(line: 1279, column: 145, scope: !14949)
!14995 = !DILocation(line: 1279, column: 142, scope: !14949)
!14996 = !DILocation(line: 1279, column: 111, scope: !14949)
!14997 = !DILocation(line: 1279, column: 11, scope: !14949)
!14998 = !DILocation(line: 1280, column: 18, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14949, file: !243, line: 1280, column: 5)
!15000 = !DILocation(line: 1280, column: 12, scope: !14999)
!15001 = !DILocation(line: 1280, column: 16, scope: !14999)
!15002 = !DILocation(line: 1280, column: 36, scope: !14999)
!15003 = !DILocation(line: 1280, column: 42, scope: !14999)
!15004 = !DILocation(line: 1280, column: 30, scope: !14999)
!15005 = !DILocation(line: 1280, column: 34, scope: !14999)
!15006 = !DILocation(line: 1280, column: 59, scope: !14999)
!15007 = !DILocation(line: 1280, column: 65, scope: !14999)
!15008 = !DILocation(line: 1280, column: 53, scope: !14999)
!15009 = !DILocation(line: 1280, column: 57, scope: !14999)
!15010 = !DILocation(line: 1275, column: 4, scope: !15011)
!15011 = !DILexicalBlockFile(scope: !14942, file: !243, discriminator: 2)
!15012 = distinct !{!15012, !14941}
!15013 = !DILocation(line: 1284, column: 1, scope: !14273)
!15014 = distinct !DISubprogram(name: "translate16to16", scope: !243, file: !243, line: 1160, type: !13495, isLocal: true, isDefinition: true, scopeLine: 1161, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!15015 = !DILocalVariable(name: "data", arg: 1, scope: !15014, file: !243, line: 1160, type: !13497)
!15016 = !DILocation(line: 1160, column: 32, scope: !15014)
!15017 = !DILocalVariable(name: "out", arg: 2, scope: !15014, file: !243, line: 1160, type: !46)
!15018 = !DILocation(line: 1160, column: 46, scope: !15014)
!15019 = !DILocalVariable(name: "end", arg: 3, scope: !15014, file: !243, line: 1160, type: !46)
!15020 = !DILocation(line: 1160, column: 59, scope: !15014)
!15021 = !DILocalVariable(name: "pixel", scope: !15014, file: !243, line: 1162, type: !240)
!15022 = !DILocation(line: 1162, column: 9, scope: !15014)
!15023 = !DILocalVariable(name: "value", scope: !15014, file: !243, line: 1163, type: !240)
!15024 = !DILocation(line: 1163, column: 9, scope: !15014)
!15025 = !DILocalVariable(name: "pc", scope: !15014, file: !243, line: 1164, type: !4417)
!15026 = !DILocation(line: 1164, column: 14, scope: !15014)
!15027 = !DILocation(line: 1166, column: 6, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15014, file: !243, line: 1166, column: 6)
!15029 = !DILocation(line: 1166, column: 6, scope: !15014)
!15030 = !DILocation(line: 1168, column: 7, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15032, file: !243, line: 1168, column: 7)
!15032 = distinct !DILexicalBlock(scope: !15028, file: !243, line: 1167, column: 2)
!15033 = !DILocation(line: 1168, column: 7, scope: !15032)
!15034 = !DILocation(line: 1170, column: 4, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15031, file: !243, line: 1169, column: 3)
!15036 = !DILocation(line: 1170, column: 11, scope: !15037)
!15037 = !DILexicalBlockFile(scope: !15035, file: !243, discriminator: 1)
!15038 = !DILocation(line: 1170, column: 17, scope: !15037)
!15039 = !DILocation(line: 1170, column: 15, scope: !15037)
!15040 = !DILocation(line: 1170, column: 4, scope: !15037)
!15041 = !DILocation(line: 1172, column: 19, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !15035, file: !243, line: 1171, column: 4)
!15043 = !DILocation(line: 1172, column: 13, scope: !15042)
!15044 = !DILocation(line: 1172, column: 11, scope: !15042)
!15045 = !DILocation(line: 1173, column: 18, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15042, file: !243, line: 1173, column: 5)
!15047 = !DILocation(line: 1173, column: 24, scope: !15046)
!15048 = !DILocation(line: 1173, column: 32, scope: !15046)
!15049 = !DILocation(line: 1173, column: 41, scope: !15046)
!15050 = !DILocation(line: 1173, column: 47, scope: !15046)
!15051 = !DILocation(line: 1173, column: 38, scope: !15046)
!15052 = !DILocation(line: 1173, column: 15, scope: !15046)
!15053 = !DILocation(line: 1173, column: 13, scope: !15046)
!15054 = !DILocation(line: 1174, column: 18, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !15042, file: !243, line: 1174, column: 5)
!15056 = !DILocation(line: 1174, column: 24, scope: !15055)
!15057 = !DILocation(line: 1174, column: 30, scope: !15055)
!15058 = !DILocation(line: 1174, column: 42, scope: !15055)
!15059 = !DILocation(line: 1174, column: 48, scope: !15055)
!15060 = !DILocation(line: 1174, column: 55, scope: !15055)
!15061 = !DILocation(line: 1174, column: 38, scope: !15055)
!15062 = !DILocation(line: 1174, column: 10, scope: !15055)
!15063 = !DILocation(line: 1174, column: 14, scope: !15055)
!15064 = !DILocation(line: 1174, column: 76, scope: !15055)
!15065 = !DILocation(line: 1174, column: 82, scope: !15055)
!15066 = !DILocation(line: 1174, column: 88, scope: !15055)
!15067 = !DILocation(line: 1174, column: 100, scope: !15055)
!15068 = !DILocation(line: 1174, column: 106, scope: !15055)
!15069 = !DILocation(line: 1174, column: 112, scope: !15055)
!15070 = !DILocation(line: 1174, column: 96, scope: !15055)
!15071 = !DILocation(line: 1174, column: 66, scope: !15055)
!15072 = !DILocation(line: 1174, column: 72, scope: !15055)
!15073 = !DILocation(line: 1174, column: 132, scope: !15055)
!15074 = !DILocation(line: 1174, column: 138, scope: !15055)
!15075 = !DILocation(line: 1174, column: 144, scope: !15055)
!15076 = !DILocation(line: 1174, column: 156, scope: !15055)
!15077 = !DILocation(line: 1174, column: 162, scope: !15055)
!15078 = !DILocation(line: 1174, column: 168, scope: !15055)
!15079 = !DILocation(line: 1174, column: 152, scope: !15055)
!15080 = !DILocation(line: 1174, column: 123, scope: !15055)
!15081 = !DILocation(line: 1174, column: 128, scope: !15055)
!15082 = !DILocation(line: 1175, column: 18, scope: !15042)
!15083 = !DILocation(line: 1175, column: 25, scope: !15042)
!15084 = !DILocation(line: 1175, column: 22, scope: !15042)
!15085 = !DILocation(line: 1175, column: 43, scope: !15042)
!15086 = !DILocation(line: 1175, column: 40, scope: !15042)
!15087 = !DILocation(line: 1175, column: 65, scope: !15042)
!15088 = !DILocation(line: 1175, column: 74, scope: !15042)
!15089 = !DILocation(line: 1175, column: 71, scope: !15042)
!15090 = !DILocation(line: 1175, column: 94, scope: !15042)
!15091 = !DILocation(line: 1175, column: 91, scope: !15042)
!15092 = !DILocation(line: 1175, column: 58, scope: !15042)
!15093 = !DILocation(line: 1175, column: 118, scope: !15042)
!15094 = !DILocation(line: 1175, column: 126, scope: !15042)
!15095 = !DILocation(line: 1175, column: 123, scope: !15042)
!15096 = !DILocation(line: 1175, column: 145, scope: !15042)
!15097 = !DILocation(line: 1175, column: 142, scope: !15042)
!15098 = !DILocation(line: 1175, column: 111, scope: !15042)
!15099 = !DILocation(line: 1175, column: 13, scope: !15042)
!15100 = !DILocation(line: 1175, column: 11, scope: !15042)
!15101 = !DILocation(line: 1176, column: 18, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15042, file: !243, line: 1176, column: 5)
!15103 = !DILocation(line: 1176, column: 24, scope: !15102)
!15104 = !DILocation(line: 1176, column: 12, scope: !15102)
!15105 = !DILocation(line: 1176, column: 16, scope: !15102)
!15106 = !DILocation(line: 1176, column: 41, scope: !15102)
!15107 = !DILocation(line: 1176, column: 35, scope: !15102)
!15108 = !DILocation(line: 1176, column: 39, scope: !15102)
!15109 = !DILocation(line: 1170, column: 4, scope: !15110)
!15110 = !DILexicalBlockFile(scope: !15035, file: !243, discriminator: 2)
!15111 = distinct !{!15111, !15034}
!15112 = !DILocation(line: 1178, column: 3, scope: !15035)
!15113 = !DILocation(line: 1181, column: 4, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !15031, file: !243, line: 1180, column: 3)
!15115 = !DILocation(line: 1181, column: 11, scope: !15116)
!15116 = !DILexicalBlockFile(scope: !15114, file: !243, discriminator: 1)
!15117 = !DILocation(line: 1181, column: 17, scope: !15116)
!15118 = !DILocation(line: 1181, column: 15, scope: !15116)
!15119 = !DILocation(line: 1181, column: 4, scope: !15116)
!15120 = !DILocation(line: 1183, column: 19, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15114, file: !243, line: 1182, column: 4)
!15122 = !DILocation(line: 1183, column: 13, scope: !15121)
!15123 = !DILocation(line: 1183, column: 11, scope: !15121)
!15124 = !DILocation(line: 1184, column: 18, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15121, file: !243, line: 1184, column: 5)
!15126 = !DILocation(line: 1184, column: 24, scope: !15125)
!15127 = !DILocation(line: 1184, column: 30, scope: !15125)
!15128 = !DILocation(line: 1184, column: 42, scope: !15125)
!15129 = !DILocation(line: 1184, column: 48, scope: !15125)
!15130 = !DILocation(line: 1184, column: 55, scope: !15125)
!15131 = !DILocation(line: 1184, column: 38, scope: !15125)
!15132 = !DILocation(line: 1184, column: 10, scope: !15125)
!15133 = !DILocation(line: 1184, column: 14, scope: !15125)
!15134 = !DILocation(line: 1184, column: 76, scope: !15125)
!15135 = !DILocation(line: 1184, column: 82, scope: !15125)
!15136 = !DILocation(line: 1184, column: 88, scope: !15125)
!15137 = !DILocation(line: 1184, column: 100, scope: !15125)
!15138 = !DILocation(line: 1184, column: 106, scope: !15125)
!15139 = !DILocation(line: 1184, column: 112, scope: !15125)
!15140 = !DILocation(line: 1184, column: 96, scope: !15125)
!15141 = !DILocation(line: 1184, column: 66, scope: !15125)
!15142 = !DILocation(line: 1184, column: 72, scope: !15125)
!15143 = !DILocation(line: 1184, column: 132, scope: !15125)
!15144 = !DILocation(line: 1184, column: 138, scope: !15125)
!15145 = !DILocation(line: 1184, column: 144, scope: !15125)
!15146 = !DILocation(line: 1184, column: 156, scope: !15125)
!15147 = !DILocation(line: 1184, column: 162, scope: !15125)
!15148 = !DILocation(line: 1184, column: 168, scope: !15125)
!15149 = !DILocation(line: 1184, column: 152, scope: !15125)
!15150 = !DILocation(line: 1184, column: 123, scope: !15125)
!15151 = !DILocation(line: 1184, column: 128, scope: !15125)
!15152 = !DILocation(line: 1185, column: 18, scope: !15121)
!15153 = !DILocation(line: 1185, column: 25, scope: !15121)
!15154 = !DILocation(line: 1185, column: 22, scope: !15121)
!15155 = !DILocation(line: 1185, column: 43, scope: !15121)
!15156 = !DILocation(line: 1185, column: 40, scope: !15121)
!15157 = !DILocation(line: 1185, column: 65, scope: !15121)
!15158 = !DILocation(line: 1185, column: 74, scope: !15121)
!15159 = !DILocation(line: 1185, column: 71, scope: !15121)
!15160 = !DILocation(line: 1185, column: 94, scope: !15121)
!15161 = !DILocation(line: 1185, column: 91, scope: !15121)
!15162 = !DILocation(line: 1185, column: 58, scope: !15121)
!15163 = !DILocation(line: 1185, column: 118, scope: !15121)
!15164 = !DILocation(line: 1185, column: 126, scope: !15121)
!15165 = !DILocation(line: 1185, column: 123, scope: !15121)
!15166 = !DILocation(line: 1185, column: 145, scope: !15121)
!15167 = !DILocation(line: 1185, column: 142, scope: !15121)
!15168 = !DILocation(line: 1185, column: 111, scope: !15121)
!15169 = !DILocation(line: 1185, column: 13, scope: !15121)
!15170 = !DILocation(line: 1185, column: 11, scope: !15121)
!15171 = !DILocation(line: 1186, column: 18, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15121, file: !243, line: 1186, column: 5)
!15173 = !DILocation(line: 1186, column: 24, scope: !15172)
!15174 = !DILocation(line: 1186, column: 12, scope: !15172)
!15175 = !DILocation(line: 1186, column: 16, scope: !15172)
!15176 = !DILocation(line: 1186, column: 41, scope: !15172)
!15177 = !DILocation(line: 1186, column: 35, scope: !15172)
!15178 = !DILocation(line: 1186, column: 39, scope: !15172)
!15179 = !DILocation(line: 1181, column: 4, scope: !15180)
!15180 = !DILexicalBlockFile(scope: !15114, file: !243, discriminator: 2)
!15181 = distinct !{!15181, !15113}
!15182 = !DILocation(line: 1189, column: 2, scope: !15032)
!15183 = !DILocation(line: 1192, column: 7, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15185, file: !243, line: 1192, column: 7)
!15185 = distinct !DILexicalBlock(scope: !15028, file: !243, line: 1191, column: 2)
!15186 = !DILocation(line: 1192, column: 7, scope: !15185)
!15187 = !DILocation(line: 1194, column: 4, scope: !15188)
!15188 = distinct !DILexicalBlock(scope: !15184, file: !243, line: 1193, column: 3)
!15189 = !DILocation(line: 1194, column: 11, scope: !15190)
!15190 = !DILexicalBlockFile(scope: !15188, file: !243, discriminator: 1)
!15191 = !DILocation(line: 1194, column: 17, scope: !15190)
!15192 = !DILocation(line: 1194, column: 15, scope: !15190)
!15193 = !DILocation(line: 1194, column: 4, scope: !15190)
!15194 = !DILocation(line: 1196, column: 19, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15188, file: !243, line: 1195, column: 4)
!15196 = !DILocation(line: 1196, column: 13, scope: !15195)
!15197 = !DILocation(line: 1196, column: 11, scope: !15195)
!15198 = !DILocation(line: 1197, column: 18, scope: !15199)
!15199 = distinct !DILexicalBlock(scope: !15195, file: !243, line: 1197, column: 5)
!15200 = !DILocation(line: 1197, column: 24, scope: !15199)
!15201 = !DILocation(line: 1197, column: 32, scope: !15199)
!15202 = !DILocation(line: 1197, column: 41, scope: !15199)
!15203 = !DILocation(line: 1197, column: 47, scope: !15199)
!15204 = !DILocation(line: 1197, column: 38, scope: !15199)
!15205 = !DILocation(line: 1197, column: 15, scope: !15199)
!15206 = !DILocation(line: 1197, column: 13, scope: !15199)
!15207 = !DILocation(line: 1198, column: 18, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15195, file: !243, line: 1198, column: 5)
!15209 = !DILocation(line: 1198, column: 24, scope: !15208)
!15210 = !DILocation(line: 1198, column: 30, scope: !15208)
!15211 = !DILocation(line: 1198, column: 42, scope: !15208)
!15212 = !DILocation(line: 1198, column: 48, scope: !15208)
!15213 = !DILocation(line: 1198, column: 55, scope: !15208)
!15214 = !DILocation(line: 1198, column: 38, scope: !15208)
!15215 = !DILocation(line: 1198, column: 10, scope: !15208)
!15216 = !DILocation(line: 1198, column: 14, scope: !15208)
!15217 = !DILocation(line: 1198, column: 76, scope: !15208)
!15218 = !DILocation(line: 1198, column: 82, scope: !15208)
!15219 = !DILocation(line: 1198, column: 88, scope: !15208)
!15220 = !DILocation(line: 1198, column: 100, scope: !15208)
!15221 = !DILocation(line: 1198, column: 106, scope: !15208)
!15222 = !DILocation(line: 1198, column: 112, scope: !15208)
!15223 = !DILocation(line: 1198, column: 96, scope: !15208)
!15224 = !DILocation(line: 1198, column: 66, scope: !15208)
!15225 = !DILocation(line: 1198, column: 72, scope: !15208)
!15226 = !DILocation(line: 1198, column: 132, scope: !15208)
!15227 = !DILocation(line: 1198, column: 138, scope: !15208)
!15228 = !DILocation(line: 1198, column: 144, scope: !15208)
!15229 = !DILocation(line: 1198, column: 156, scope: !15208)
!15230 = !DILocation(line: 1198, column: 162, scope: !15208)
!15231 = !DILocation(line: 1198, column: 168, scope: !15208)
!15232 = !DILocation(line: 1198, column: 152, scope: !15208)
!15233 = !DILocation(line: 1198, column: 123, scope: !15208)
!15234 = !DILocation(line: 1198, column: 128, scope: !15208)
!15235 = !DILocation(line: 1199, column: 18, scope: !15195)
!15236 = !DILocation(line: 1199, column: 25, scope: !15195)
!15237 = !DILocation(line: 1199, column: 22, scope: !15195)
!15238 = !DILocation(line: 1199, column: 43, scope: !15195)
!15239 = !DILocation(line: 1199, column: 40, scope: !15195)
!15240 = !DILocation(line: 1199, column: 65, scope: !15195)
!15241 = !DILocation(line: 1199, column: 74, scope: !15195)
!15242 = !DILocation(line: 1199, column: 71, scope: !15195)
!15243 = !DILocation(line: 1199, column: 94, scope: !15195)
!15244 = !DILocation(line: 1199, column: 91, scope: !15195)
!15245 = !DILocation(line: 1199, column: 58, scope: !15195)
!15246 = !DILocation(line: 1199, column: 118, scope: !15195)
!15247 = !DILocation(line: 1199, column: 126, scope: !15195)
!15248 = !DILocation(line: 1199, column: 123, scope: !15195)
!15249 = !DILocation(line: 1199, column: 145, scope: !15195)
!15250 = !DILocation(line: 1199, column: 142, scope: !15195)
!15251 = !DILocation(line: 1199, column: 111, scope: !15195)
!15252 = !DILocation(line: 1199, column: 13, scope: !15195)
!15253 = !DILocation(line: 1199, column: 11, scope: !15195)
!15254 = !DILocation(line: 1200, column: 18, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15195, file: !243, line: 1200, column: 5)
!15256 = !DILocation(line: 1200, column: 12, scope: !15255)
!15257 = !DILocation(line: 1200, column: 16, scope: !15255)
!15258 = !DILocation(line: 1200, column: 36, scope: !15255)
!15259 = !DILocation(line: 1200, column: 42, scope: !15255)
!15260 = !DILocation(line: 1200, column: 30, scope: !15255)
!15261 = !DILocation(line: 1200, column: 34, scope: !15255)
!15262 = !DILocation(line: 1194, column: 4, scope: !15263)
!15263 = !DILexicalBlockFile(scope: !15188, file: !243, discriminator: 2)
!15264 = distinct !{!15264, !15187}
!15265 = !DILocation(line: 1202, column: 3, scope: !15188)
!15266 = !DILocation(line: 1205, column: 4, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15184, file: !243, line: 1204, column: 3)
!15268 = !DILocation(line: 1205, column: 11, scope: !15269)
!15269 = !DILexicalBlockFile(scope: !15267, file: !243, discriminator: 1)
!15270 = !DILocation(line: 1205, column: 17, scope: !15269)
!15271 = !DILocation(line: 1205, column: 15, scope: !15269)
!15272 = !DILocation(line: 1205, column: 4, scope: !15269)
!15273 = !DILocation(line: 1207, column: 19, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15267, file: !243, line: 1206, column: 4)
!15275 = !DILocation(line: 1207, column: 13, scope: !15274)
!15276 = !DILocation(line: 1207, column: 11, scope: !15274)
!15277 = !DILocation(line: 1208, column: 18, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15274, file: !243, line: 1208, column: 5)
!15279 = !DILocation(line: 1208, column: 24, scope: !15278)
!15280 = !DILocation(line: 1208, column: 30, scope: !15278)
!15281 = !DILocation(line: 1208, column: 42, scope: !15278)
!15282 = !DILocation(line: 1208, column: 48, scope: !15278)
!15283 = !DILocation(line: 1208, column: 55, scope: !15278)
!15284 = !DILocation(line: 1208, column: 38, scope: !15278)
!15285 = !DILocation(line: 1208, column: 10, scope: !15278)
!15286 = !DILocation(line: 1208, column: 14, scope: !15278)
!15287 = !DILocation(line: 1208, column: 76, scope: !15278)
!15288 = !DILocation(line: 1208, column: 82, scope: !15278)
!15289 = !DILocation(line: 1208, column: 88, scope: !15278)
!15290 = !DILocation(line: 1208, column: 100, scope: !15278)
!15291 = !DILocation(line: 1208, column: 106, scope: !15278)
!15292 = !DILocation(line: 1208, column: 112, scope: !15278)
!15293 = !DILocation(line: 1208, column: 96, scope: !15278)
!15294 = !DILocation(line: 1208, column: 66, scope: !15278)
!15295 = !DILocation(line: 1208, column: 72, scope: !15278)
!15296 = !DILocation(line: 1208, column: 132, scope: !15278)
!15297 = !DILocation(line: 1208, column: 138, scope: !15278)
!15298 = !DILocation(line: 1208, column: 144, scope: !15278)
!15299 = !DILocation(line: 1208, column: 156, scope: !15278)
!15300 = !DILocation(line: 1208, column: 162, scope: !15278)
!15301 = !DILocation(line: 1208, column: 168, scope: !15278)
!15302 = !DILocation(line: 1208, column: 152, scope: !15278)
!15303 = !DILocation(line: 1208, column: 123, scope: !15278)
!15304 = !DILocation(line: 1208, column: 128, scope: !15278)
!15305 = !DILocation(line: 1209, column: 18, scope: !15274)
!15306 = !DILocation(line: 1209, column: 25, scope: !15274)
!15307 = !DILocation(line: 1209, column: 22, scope: !15274)
!15308 = !DILocation(line: 1209, column: 43, scope: !15274)
!15309 = !DILocation(line: 1209, column: 40, scope: !15274)
!15310 = !DILocation(line: 1209, column: 65, scope: !15274)
!15311 = !DILocation(line: 1209, column: 74, scope: !15274)
!15312 = !DILocation(line: 1209, column: 71, scope: !15274)
!15313 = !DILocation(line: 1209, column: 94, scope: !15274)
!15314 = !DILocation(line: 1209, column: 91, scope: !15274)
!15315 = !DILocation(line: 1209, column: 58, scope: !15274)
!15316 = !DILocation(line: 1209, column: 118, scope: !15274)
!15317 = !DILocation(line: 1209, column: 126, scope: !15274)
!15318 = !DILocation(line: 1209, column: 123, scope: !15274)
!15319 = !DILocation(line: 1209, column: 145, scope: !15274)
!15320 = !DILocation(line: 1209, column: 142, scope: !15274)
!15321 = !DILocation(line: 1209, column: 111, scope: !15274)
!15322 = !DILocation(line: 1209, column: 13, scope: !15274)
!15323 = !DILocation(line: 1209, column: 11, scope: !15274)
!15324 = !DILocation(line: 1210, column: 18, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15274, file: !243, line: 1210, column: 5)
!15326 = !DILocation(line: 1210, column: 12, scope: !15325)
!15327 = !DILocation(line: 1210, column: 16, scope: !15325)
!15328 = !DILocation(line: 1210, column: 36, scope: !15325)
!15329 = !DILocation(line: 1210, column: 42, scope: !15325)
!15330 = !DILocation(line: 1210, column: 30, scope: !15325)
!15331 = !DILocation(line: 1210, column: 34, scope: !15325)
!15332 = !DILocation(line: 1205, column: 4, scope: !15333)
!15333 = !DILexicalBlockFile(scope: !15267, file: !243, discriminator: 2)
!15334 = distinct !{!15334, !15266}
!15335 = !DILocation(line: 1214, column: 1, scope: !15014)
!15336 = distinct !DISubprogram(name: "translate15to32", scope: !243, file: !243, line: 1109, type: !13495, isLocal: true, isDefinition: true, scopeLine: 1110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!15337 = !DILocalVariable(name: "data", arg: 1, scope: !15336, file: !243, line: 1109, type: !13497)
!15338 = !DILocation(line: 1109, column: 32, scope: !15336)
!15339 = !DILocalVariable(name: "out", arg: 2, scope: !15336, file: !243, line: 1109, type: !46)
!15340 = !DILocation(line: 1109, column: 46, scope: !15336)
!15341 = !DILocalVariable(name: "end", arg: 3, scope: !15336, file: !243, line: 1109, type: !46)
!15342 = !DILocation(line: 1109, column: 59, scope: !15336)
!15343 = !DILocalVariable(name: "pixel", scope: !15336, file: !243, line: 1111, type: !240)
!15344 = !DILocation(line: 1111, column: 9, scope: !15336)
!15345 = !DILocalVariable(name: "value", scope: !15336, file: !243, line: 1112, type: !193)
!15346 = !DILocation(line: 1112, column: 9, scope: !15336)
!15347 = !DILocalVariable(name: "pc", scope: !15336, file: !243, line: 1113, type: !4417)
!15348 = !DILocation(line: 1113, column: 14, scope: !15336)
!15349 = !DILocation(line: 1115, column: 6, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15336, file: !243, line: 1115, column: 6)
!15351 = !DILocation(line: 1115, column: 6, scope: !15336)
!15352 = !DILocation(line: 1118, column: 5, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15354, file: !243, line: 1118, column: 3)
!15354 = distinct !DILexicalBlock(scope: !15350, file: !243, line: 1116, column: 2)
!15355 = !DILocation(line: 1118, column: 12, scope: !15356)
!15356 = !DILexicalBlockFile(scope: !15353, file: !243, discriminator: 1)
!15357 = !DILocation(line: 1118, column: 19, scope: !15356)
!15358 = !DILocation(line: 1118, column: 23, scope: !15356)
!15359 = !DILocation(line: 1118, column: 16, scope: !15356)
!15360 = !DILocation(line: 1118, column: 5, scope: !15356)
!15361 = !DILocation(line: 1118, column: 48, scope: !15362)
!15362 = !DILexicalBlockFile(scope: !15363, file: !243, discriminator: 2)
!15363 = distinct !DILexicalBlock(scope: !15353, file: !243, line: 1118, column: 32)
!15364 = !DILocation(line: 1118, column: 42, scope: !15362)
!15365 = !DILocation(line: 1118, column: 40, scope: !15362)
!15366 = !DILocation(line: 1118, column: 66, scope: !15362)
!15367 = !DILocation(line: 1118, column: 72, scope: !15362)
!15368 = !DILocation(line: 1118, column: 78, scope: !15362)
!15369 = !DILocation(line: 1118, column: 90, scope: !15362)
!15370 = !DILocation(line: 1118, column: 96, scope: !15362)
!15371 = !DILocation(line: 1118, column: 103, scope: !15362)
!15372 = !DILocation(line: 1118, column: 86, scope: !15362)
!15373 = !DILocation(line: 1118, column: 58, scope: !15362)
!15374 = !DILocation(line: 1118, column: 62, scope: !15362)
!15375 = !DILocation(line: 1118, column: 124, scope: !15362)
!15376 = !DILocation(line: 1118, column: 130, scope: !15362)
!15377 = !DILocation(line: 1118, column: 136, scope: !15362)
!15378 = !DILocation(line: 1118, column: 148, scope: !15362)
!15379 = !DILocation(line: 1118, column: 154, scope: !15362)
!15380 = !DILocation(line: 1118, column: 160, scope: !15362)
!15381 = !DILocation(line: 1118, column: 144, scope: !15362)
!15382 = !DILocation(line: 1118, column: 114, scope: !15362)
!15383 = !DILocation(line: 1118, column: 120, scope: !15362)
!15384 = !DILocation(line: 1118, column: 180, scope: !15362)
!15385 = !DILocation(line: 1118, column: 186, scope: !15362)
!15386 = !DILocation(line: 1118, column: 192, scope: !15362)
!15387 = !DILocation(line: 1118, column: 204, scope: !15362)
!15388 = !DILocation(line: 1118, column: 210, scope: !15362)
!15389 = !DILocation(line: 1118, column: 216, scope: !15362)
!15390 = !DILocation(line: 1118, column: 200, scope: !15362)
!15391 = !DILocation(line: 1118, column: 171, scope: !15362)
!15392 = !DILocation(line: 1118, column: 176, scope: !15362)
!15393 = !DILocation(line: 1118, column: 241, scope: !15362)
!15394 = !DILocation(line: 1118, column: 238, scope: !15362)
!15395 = !DILocation(line: 1118, column: 232, scope: !15362)
!15396 = !DILocation(line: 1118, column: 236, scope: !15362)
!15397 = !DILocation(line: 1118, column: 261, scope: !15362)
!15398 = !DILocation(line: 1118, column: 258, scope: !15362)
!15399 = !DILocation(line: 1118, column: 252, scope: !15362)
!15400 = !DILocation(line: 1118, column: 256, scope: !15362)
!15401 = !DILocation(line: 1118, column: 282, scope: !15362)
!15402 = !DILocation(line: 1118, column: 279, scope: !15362)
!15403 = !DILocation(line: 1118, column: 273, scope: !15362)
!15404 = !DILocation(line: 1118, column: 277, scope: !15362)
!15405 = !DILocation(line: 1118, column: 292, scope: !15362)
!15406 = !DILocation(line: 1118, column: 296, scope: !15362)
!15407 = !DILocation(line: 1118, column: 315, scope: !15362)
!15408 = !DILocation(line: 1118, column: 309, scope: !15362)
!15409 = !DILocation(line: 1118, column: 307, scope: !15362)
!15410 = !DILocation(line: 1118, column: 333, scope: !15362)
!15411 = !DILocation(line: 1118, column: 339, scope: !15362)
!15412 = !DILocation(line: 1118, column: 345, scope: !15362)
!15413 = !DILocation(line: 1118, column: 357, scope: !15362)
!15414 = !DILocation(line: 1118, column: 363, scope: !15362)
!15415 = !DILocation(line: 1118, column: 370, scope: !15362)
!15416 = !DILocation(line: 1118, column: 353, scope: !15362)
!15417 = !DILocation(line: 1118, column: 325, scope: !15362)
!15418 = !DILocation(line: 1118, column: 329, scope: !15362)
!15419 = !DILocation(line: 1118, column: 391, scope: !15362)
!15420 = !DILocation(line: 1118, column: 397, scope: !15362)
!15421 = !DILocation(line: 1118, column: 403, scope: !15362)
!15422 = !DILocation(line: 1118, column: 415, scope: !15362)
!15423 = !DILocation(line: 1118, column: 421, scope: !15362)
!15424 = !DILocation(line: 1118, column: 427, scope: !15362)
!15425 = !DILocation(line: 1118, column: 411, scope: !15362)
!15426 = !DILocation(line: 1118, column: 381, scope: !15362)
!15427 = !DILocation(line: 1118, column: 387, scope: !15362)
!15428 = !DILocation(line: 1118, column: 447, scope: !15362)
!15429 = !DILocation(line: 1118, column: 453, scope: !15362)
!15430 = !DILocation(line: 1118, column: 459, scope: !15362)
!15431 = !DILocation(line: 1118, column: 471, scope: !15362)
!15432 = !DILocation(line: 1118, column: 477, scope: !15362)
!15433 = !DILocation(line: 1118, column: 483, scope: !15362)
!15434 = !DILocation(line: 1118, column: 467, scope: !15362)
!15435 = !DILocation(line: 1118, column: 438, scope: !15362)
!15436 = !DILocation(line: 1118, column: 443, scope: !15362)
!15437 = !DILocation(line: 1118, column: 508, scope: !15362)
!15438 = !DILocation(line: 1118, column: 505, scope: !15362)
!15439 = !DILocation(line: 1118, column: 499, scope: !15362)
!15440 = !DILocation(line: 1118, column: 503, scope: !15362)
!15441 = !DILocation(line: 1118, column: 528, scope: !15362)
!15442 = !DILocation(line: 1118, column: 525, scope: !15362)
!15443 = !DILocation(line: 1118, column: 519, scope: !15362)
!15444 = !DILocation(line: 1118, column: 523, scope: !15362)
!15445 = !DILocation(line: 1118, column: 549, scope: !15362)
!15446 = !DILocation(line: 1118, column: 546, scope: !15362)
!15447 = !DILocation(line: 1118, column: 540, scope: !15362)
!15448 = !DILocation(line: 1118, column: 544, scope: !15362)
!15449 = !DILocation(line: 1118, column: 559, scope: !15362)
!15450 = !DILocation(line: 1118, column: 563, scope: !15362)
!15451 = !DILocation(line: 1118, column: 582, scope: !15362)
!15452 = !DILocation(line: 1118, column: 576, scope: !15362)
!15453 = !DILocation(line: 1118, column: 574, scope: !15362)
!15454 = !DILocation(line: 1118, column: 600, scope: !15362)
!15455 = !DILocation(line: 1118, column: 606, scope: !15362)
!15456 = !DILocation(line: 1118, column: 612, scope: !15362)
!15457 = !DILocation(line: 1118, column: 624, scope: !15362)
!15458 = !DILocation(line: 1118, column: 630, scope: !15362)
!15459 = !DILocation(line: 1118, column: 637, scope: !15362)
!15460 = !DILocation(line: 1118, column: 620, scope: !15362)
!15461 = !DILocation(line: 1118, column: 592, scope: !15362)
!15462 = !DILocation(line: 1118, column: 596, scope: !15362)
!15463 = !DILocation(line: 1118, column: 658, scope: !15362)
!15464 = !DILocation(line: 1118, column: 664, scope: !15362)
!15465 = !DILocation(line: 1118, column: 670, scope: !15362)
!15466 = !DILocation(line: 1118, column: 682, scope: !15362)
!15467 = !DILocation(line: 1118, column: 688, scope: !15362)
!15468 = !DILocation(line: 1118, column: 694, scope: !15362)
!15469 = !DILocation(line: 1118, column: 678, scope: !15362)
!15470 = !DILocation(line: 1118, column: 648, scope: !15362)
!15471 = !DILocation(line: 1118, column: 654, scope: !15362)
!15472 = !DILocation(line: 1118, column: 714, scope: !15362)
!15473 = !DILocation(line: 1118, column: 720, scope: !15362)
!15474 = !DILocation(line: 1118, column: 726, scope: !15362)
!15475 = !DILocation(line: 1118, column: 738, scope: !15362)
!15476 = !DILocation(line: 1118, column: 744, scope: !15362)
!15477 = !DILocation(line: 1118, column: 750, scope: !15362)
!15478 = !DILocation(line: 1118, column: 734, scope: !15362)
!15479 = !DILocation(line: 1118, column: 705, scope: !15362)
!15480 = !DILocation(line: 1118, column: 710, scope: !15362)
!15481 = !DILocation(line: 1118, column: 775, scope: !15362)
!15482 = !DILocation(line: 1118, column: 772, scope: !15362)
!15483 = !DILocation(line: 1118, column: 766, scope: !15362)
!15484 = !DILocation(line: 1118, column: 770, scope: !15362)
!15485 = !DILocation(line: 1118, column: 795, scope: !15362)
!15486 = !DILocation(line: 1118, column: 792, scope: !15362)
!15487 = !DILocation(line: 1118, column: 786, scope: !15362)
!15488 = !DILocation(line: 1118, column: 790, scope: !15362)
!15489 = !DILocation(line: 1118, column: 816, scope: !15362)
!15490 = !DILocation(line: 1118, column: 813, scope: !15362)
!15491 = !DILocation(line: 1118, column: 807, scope: !15362)
!15492 = !DILocation(line: 1118, column: 811, scope: !15362)
!15493 = !DILocation(line: 1118, column: 826, scope: !15362)
!15494 = !DILocation(line: 1118, column: 830, scope: !15362)
!15495 = !DILocation(line: 1118, column: 849, scope: !15362)
!15496 = !DILocation(line: 1118, column: 843, scope: !15362)
!15497 = !DILocation(line: 1118, column: 841, scope: !15362)
!15498 = !DILocation(line: 1118, column: 867, scope: !15362)
!15499 = !DILocation(line: 1118, column: 873, scope: !15362)
!15500 = !DILocation(line: 1118, column: 879, scope: !15362)
!15501 = !DILocation(line: 1118, column: 891, scope: !15362)
!15502 = !DILocation(line: 1118, column: 897, scope: !15362)
!15503 = !DILocation(line: 1118, column: 904, scope: !15362)
!15504 = !DILocation(line: 1118, column: 887, scope: !15362)
!15505 = !DILocation(line: 1118, column: 859, scope: !15362)
!15506 = !DILocation(line: 1118, column: 863, scope: !15362)
!15507 = !DILocation(line: 1118, column: 925, scope: !15362)
!15508 = !DILocation(line: 1118, column: 931, scope: !15362)
!15509 = !DILocation(line: 1118, column: 937, scope: !15362)
!15510 = !DILocation(line: 1118, column: 949, scope: !15362)
!15511 = !DILocation(line: 1118, column: 955, scope: !15362)
!15512 = !DILocation(line: 1118, column: 961, scope: !15362)
!15513 = !DILocation(line: 1118, column: 945, scope: !15362)
!15514 = !DILocation(line: 1118, column: 915, scope: !15362)
!15515 = !DILocation(line: 1118, column: 921, scope: !15362)
!15516 = !DILocation(line: 1118, column: 981, scope: !15362)
!15517 = !DILocation(line: 1118, column: 987, scope: !15362)
!15518 = !DILocation(line: 1118, column: 993, scope: !15362)
!15519 = !DILocation(line: 1118, column: 1005, scope: !15362)
!15520 = !DILocation(line: 1118, column: 1011, scope: !15362)
!15521 = !DILocation(line: 1118, column: 1017, scope: !15362)
!15522 = !DILocation(line: 1118, column: 1001, scope: !15362)
!15523 = !DILocation(line: 1118, column: 972, scope: !15362)
!15524 = !DILocation(line: 1118, column: 977, scope: !15362)
!15525 = !DILocation(line: 1118, column: 1042, scope: !15362)
!15526 = !DILocation(line: 1118, column: 1039, scope: !15362)
!15527 = !DILocation(line: 1118, column: 1033, scope: !15362)
!15528 = !DILocation(line: 1118, column: 1037, scope: !15362)
!15529 = !DILocation(line: 1118, column: 1062, scope: !15362)
!15530 = !DILocation(line: 1118, column: 1059, scope: !15362)
!15531 = !DILocation(line: 1118, column: 1053, scope: !15362)
!15532 = !DILocation(line: 1118, column: 1057, scope: !15362)
!15533 = !DILocation(line: 1118, column: 1083, scope: !15362)
!15534 = !DILocation(line: 1118, column: 1080, scope: !15362)
!15535 = !DILocation(line: 1118, column: 1074, scope: !15362)
!15536 = !DILocation(line: 1118, column: 1078, scope: !15362)
!15537 = !DILocation(line: 1118, column: 1093, scope: !15362)
!15538 = !DILocation(line: 1118, column: 1097, scope: !15362)
!15539 = !DILocation(line: 1118, column: 1116, scope: !15362)
!15540 = !DILocation(line: 1118, column: 1110, scope: !15362)
!15541 = !DILocation(line: 1118, column: 1108, scope: !15362)
!15542 = !DILocation(line: 1118, column: 1134, scope: !15362)
!15543 = !DILocation(line: 1118, column: 1140, scope: !15362)
!15544 = !DILocation(line: 1118, column: 1146, scope: !15362)
!15545 = !DILocation(line: 1118, column: 1158, scope: !15362)
!15546 = !DILocation(line: 1118, column: 1164, scope: !15362)
!15547 = !DILocation(line: 1118, column: 1171, scope: !15362)
!15548 = !DILocation(line: 1118, column: 1154, scope: !15362)
!15549 = !DILocation(line: 1118, column: 1126, scope: !15362)
!15550 = !DILocation(line: 1118, column: 1130, scope: !15362)
!15551 = !DILocation(line: 1118, column: 1192, scope: !15362)
!15552 = !DILocation(line: 1118, column: 1198, scope: !15362)
!15553 = !DILocation(line: 1118, column: 1204, scope: !15362)
!15554 = !DILocation(line: 1118, column: 1216, scope: !15362)
!15555 = !DILocation(line: 1118, column: 1222, scope: !15362)
!15556 = !DILocation(line: 1118, column: 1228, scope: !15362)
!15557 = !DILocation(line: 1118, column: 1212, scope: !15362)
!15558 = !DILocation(line: 1118, column: 1182, scope: !15362)
!15559 = !DILocation(line: 1118, column: 1188, scope: !15362)
!15560 = !DILocation(line: 1118, column: 1248, scope: !15362)
!15561 = !DILocation(line: 1118, column: 1254, scope: !15362)
!15562 = !DILocation(line: 1118, column: 1260, scope: !15362)
!15563 = !DILocation(line: 1118, column: 1272, scope: !15362)
!15564 = !DILocation(line: 1118, column: 1278, scope: !15362)
!15565 = !DILocation(line: 1118, column: 1284, scope: !15362)
!15566 = !DILocation(line: 1118, column: 1268, scope: !15362)
!15567 = !DILocation(line: 1118, column: 1239, scope: !15362)
!15568 = !DILocation(line: 1118, column: 1244, scope: !15362)
!15569 = !DILocation(line: 1118, column: 1309, scope: !15362)
!15570 = !DILocation(line: 1118, column: 1306, scope: !15362)
!15571 = !DILocation(line: 1118, column: 1300, scope: !15362)
!15572 = !DILocation(line: 1118, column: 1304, scope: !15362)
!15573 = !DILocation(line: 1118, column: 1329, scope: !15362)
!15574 = !DILocation(line: 1118, column: 1326, scope: !15362)
!15575 = !DILocation(line: 1118, column: 1320, scope: !15362)
!15576 = !DILocation(line: 1118, column: 1324, scope: !15362)
!15577 = !DILocation(line: 1118, column: 1350, scope: !15362)
!15578 = !DILocation(line: 1118, column: 1347, scope: !15362)
!15579 = !DILocation(line: 1118, column: 1341, scope: !15362)
!15580 = !DILocation(line: 1118, column: 1345, scope: !15362)
!15581 = !DILocation(line: 1118, column: 1360, scope: !15362)
!15582 = !DILocation(line: 1118, column: 1364, scope: !15362)
!15583 = !DILocation(line: 1118, column: 1383, scope: !15362)
!15584 = !DILocation(line: 1118, column: 1377, scope: !15362)
!15585 = !DILocation(line: 1118, column: 1375, scope: !15362)
!15586 = !DILocation(line: 1118, column: 1401, scope: !15362)
!15587 = !DILocation(line: 1118, column: 1407, scope: !15362)
!15588 = !DILocation(line: 1118, column: 1413, scope: !15362)
!15589 = !DILocation(line: 1118, column: 1425, scope: !15362)
!15590 = !DILocation(line: 1118, column: 1431, scope: !15362)
!15591 = !DILocation(line: 1118, column: 1438, scope: !15362)
!15592 = !DILocation(line: 1118, column: 1421, scope: !15362)
!15593 = !DILocation(line: 1118, column: 1393, scope: !15362)
!15594 = !DILocation(line: 1118, column: 1397, scope: !15362)
!15595 = !DILocation(line: 1118, column: 1459, scope: !15362)
!15596 = !DILocation(line: 1118, column: 1465, scope: !15362)
!15597 = !DILocation(line: 1118, column: 1471, scope: !15362)
!15598 = !DILocation(line: 1118, column: 1483, scope: !15362)
!15599 = !DILocation(line: 1118, column: 1489, scope: !15362)
!15600 = !DILocation(line: 1118, column: 1495, scope: !15362)
!15601 = !DILocation(line: 1118, column: 1479, scope: !15362)
!15602 = !DILocation(line: 1118, column: 1449, scope: !15362)
!15603 = !DILocation(line: 1118, column: 1455, scope: !15362)
!15604 = !DILocation(line: 1118, column: 1515, scope: !15362)
!15605 = !DILocation(line: 1118, column: 1521, scope: !15362)
!15606 = !DILocation(line: 1118, column: 1527, scope: !15362)
!15607 = !DILocation(line: 1118, column: 1539, scope: !15362)
!15608 = !DILocation(line: 1118, column: 1545, scope: !15362)
!15609 = !DILocation(line: 1118, column: 1551, scope: !15362)
!15610 = !DILocation(line: 1118, column: 1535, scope: !15362)
!15611 = !DILocation(line: 1118, column: 1506, scope: !15362)
!15612 = !DILocation(line: 1118, column: 1511, scope: !15362)
!15613 = !DILocation(line: 1118, column: 1576, scope: !15362)
!15614 = !DILocation(line: 1118, column: 1573, scope: !15362)
!15615 = !DILocation(line: 1118, column: 1567, scope: !15362)
!15616 = !DILocation(line: 1118, column: 1571, scope: !15362)
!15617 = !DILocation(line: 1118, column: 1596, scope: !15362)
!15618 = !DILocation(line: 1118, column: 1593, scope: !15362)
!15619 = !DILocation(line: 1118, column: 1587, scope: !15362)
!15620 = !DILocation(line: 1118, column: 1591, scope: !15362)
!15621 = !DILocation(line: 1118, column: 1617, scope: !15362)
!15622 = !DILocation(line: 1118, column: 1614, scope: !15362)
!15623 = !DILocation(line: 1118, column: 1608, scope: !15362)
!15624 = !DILocation(line: 1118, column: 1612, scope: !15362)
!15625 = !DILocation(line: 1118, column: 1627, scope: !15362)
!15626 = !DILocation(line: 1118, column: 1631, scope: !15362)
!15627 = !DILocation(line: 1118, column: 1650, scope: !15362)
!15628 = !DILocation(line: 1118, column: 1644, scope: !15362)
!15629 = !DILocation(line: 1118, column: 1642, scope: !15362)
!15630 = !DILocation(line: 1118, column: 1668, scope: !15362)
!15631 = !DILocation(line: 1118, column: 1674, scope: !15362)
!15632 = !DILocation(line: 1118, column: 1680, scope: !15362)
!15633 = !DILocation(line: 1118, column: 1692, scope: !15362)
!15634 = !DILocation(line: 1118, column: 1698, scope: !15362)
!15635 = !DILocation(line: 1118, column: 1705, scope: !15362)
!15636 = !DILocation(line: 1118, column: 1688, scope: !15362)
!15637 = !DILocation(line: 1118, column: 1660, scope: !15362)
!15638 = !DILocation(line: 1118, column: 1664, scope: !15362)
!15639 = !DILocation(line: 1118, column: 1726, scope: !15362)
!15640 = !DILocation(line: 1118, column: 1732, scope: !15362)
!15641 = !DILocation(line: 1118, column: 1738, scope: !15362)
!15642 = !DILocation(line: 1118, column: 1750, scope: !15362)
!15643 = !DILocation(line: 1118, column: 1756, scope: !15362)
!15644 = !DILocation(line: 1118, column: 1762, scope: !15362)
!15645 = !DILocation(line: 1118, column: 1746, scope: !15362)
!15646 = !DILocation(line: 1118, column: 1716, scope: !15362)
!15647 = !DILocation(line: 1118, column: 1722, scope: !15362)
!15648 = !DILocation(line: 1118, column: 1782, scope: !15362)
!15649 = !DILocation(line: 1118, column: 1788, scope: !15362)
!15650 = !DILocation(line: 1118, column: 1794, scope: !15362)
!15651 = !DILocation(line: 1118, column: 1806, scope: !15362)
!15652 = !DILocation(line: 1118, column: 1812, scope: !15362)
!15653 = !DILocation(line: 1118, column: 1818, scope: !15362)
!15654 = !DILocation(line: 1118, column: 1802, scope: !15362)
!15655 = !DILocation(line: 1118, column: 1773, scope: !15362)
!15656 = !DILocation(line: 1118, column: 1778, scope: !15362)
!15657 = !DILocation(line: 1118, column: 1843, scope: !15362)
!15658 = !DILocation(line: 1118, column: 1840, scope: !15362)
!15659 = !DILocation(line: 1118, column: 1834, scope: !15362)
!15660 = !DILocation(line: 1118, column: 1838, scope: !15362)
!15661 = !DILocation(line: 1118, column: 1863, scope: !15362)
!15662 = !DILocation(line: 1118, column: 1860, scope: !15362)
!15663 = !DILocation(line: 1118, column: 1854, scope: !15362)
!15664 = !DILocation(line: 1118, column: 1858, scope: !15362)
!15665 = !DILocation(line: 1118, column: 1884, scope: !15362)
!15666 = !DILocation(line: 1118, column: 1881, scope: !15362)
!15667 = !DILocation(line: 1118, column: 1875, scope: !15362)
!15668 = !DILocation(line: 1118, column: 1879, scope: !15362)
!15669 = !DILocation(line: 1118, column: 1894, scope: !15362)
!15670 = !DILocation(line: 1118, column: 1898, scope: !15362)
!15671 = !DILocation(line: 1118, column: 1917, scope: !15362)
!15672 = !DILocation(line: 1118, column: 1911, scope: !15362)
!15673 = !DILocation(line: 1118, column: 1909, scope: !15362)
!15674 = !DILocation(line: 1118, column: 1935, scope: !15362)
!15675 = !DILocation(line: 1118, column: 1941, scope: !15362)
!15676 = !DILocation(line: 1118, column: 1947, scope: !15362)
!15677 = !DILocation(line: 1118, column: 1959, scope: !15362)
!15678 = !DILocation(line: 1118, column: 1965, scope: !15362)
!15679 = !DILocation(line: 1118, column: 1972, scope: !15362)
!15680 = !DILocation(line: 1118, column: 1955, scope: !15362)
!15681 = !DILocation(line: 1118, column: 1927, scope: !15362)
!15682 = !DILocation(line: 1118, column: 1931, scope: !15362)
!15683 = !DILocation(line: 1118, column: 1993, scope: !15362)
!15684 = !DILocation(line: 1118, column: 1999, scope: !15362)
!15685 = !DILocation(line: 1118, column: 2005, scope: !15362)
!15686 = !DILocation(line: 1118, column: 2017, scope: !15362)
!15687 = !DILocation(line: 1118, column: 2023, scope: !15362)
!15688 = !DILocation(line: 1118, column: 2029, scope: !15362)
!15689 = !DILocation(line: 1118, column: 2013, scope: !15362)
!15690 = !DILocation(line: 1118, column: 1983, scope: !15362)
!15691 = !DILocation(line: 1118, column: 1989, scope: !15362)
!15692 = !DILocation(line: 1118, column: 2049, scope: !15362)
!15693 = !DILocation(line: 1118, column: 2055, scope: !15362)
!15694 = !DILocation(line: 1118, column: 2061, scope: !15362)
!15695 = !DILocation(line: 1118, column: 2073, scope: !15362)
!15696 = !DILocation(line: 1118, column: 2079, scope: !15362)
!15697 = !DILocation(line: 1118, column: 2085, scope: !15362)
!15698 = !DILocation(line: 1118, column: 2069, scope: !15362)
!15699 = !DILocation(line: 1118, column: 2040, scope: !15362)
!15700 = !DILocation(line: 1118, column: 2045, scope: !15362)
!15701 = !DILocation(line: 1118, column: 2110, scope: !15362)
!15702 = !DILocation(line: 1118, column: 2107, scope: !15362)
!15703 = !DILocation(line: 1118, column: 2101, scope: !15362)
!15704 = !DILocation(line: 1118, column: 2105, scope: !15362)
!15705 = !DILocation(line: 1118, column: 2130, scope: !15362)
!15706 = !DILocation(line: 1118, column: 2127, scope: !15362)
!15707 = !DILocation(line: 1118, column: 2121, scope: !15362)
!15708 = !DILocation(line: 1118, column: 2125, scope: !15362)
!15709 = !DILocation(line: 1118, column: 2151, scope: !15362)
!15710 = !DILocation(line: 1118, column: 2148, scope: !15362)
!15711 = !DILocation(line: 1118, column: 2142, scope: !15362)
!15712 = !DILocation(line: 1118, column: 2146, scope: !15362)
!15713 = !DILocation(line: 1118, column: 2161, scope: !15362)
!15714 = !DILocation(line: 1118, column: 2165, scope: !15362)
!15715 = !DILocation(line: 1118, column: 5, scope: !15362)
!15716 = distinct !{!15716, !15352}
!15717 = !DILocation(line: 1118, column: 2172, scope: !15718)
!15718 = !DILexicalBlockFile(scope: !15353, file: !243, discriminator: 3)
!15719 = !DILocation(line: 1118, column: 2179, scope: !15720)
!15720 = !DILexicalBlockFile(scope: !15353, file: !243, discriminator: 4)
!15721 = !DILocation(line: 1118, column: 2185, scope: !15720)
!15722 = !DILocation(line: 1118, column: 2183, scope: !15720)
!15723 = !DILocation(line: 1118, column: 2172, scope: !15720)
!15724 = !DILocation(line: 1118, column: 2206, scope: !15725)
!15725 = !DILexicalBlockFile(scope: !15726, file: !243, discriminator: 5)
!15726 = distinct !DILexicalBlock(scope: !15353, file: !243, line: 1118, column: 2190)
!15727 = !DILocation(line: 1118, column: 2200, scope: !15725)
!15728 = !DILocation(line: 1118, column: 2198, scope: !15725)
!15729 = !DILocation(line: 1118, column: 2224, scope: !15725)
!15730 = !DILocation(line: 1118, column: 2230, scope: !15725)
!15731 = !DILocation(line: 1118, column: 2236, scope: !15725)
!15732 = !DILocation(line: 1118, column: 2248, scope: !15725)
!15733 = !DILocation(line: 1118, column: 2254, scope: !15725)
!15734 = !DILocation(line: 1118, column: 2261, scope: !15725)
!15735 = !DILocation(line: 1118, column: 2244, scope: !15725)
!15736 = !DILocation(line: 1118, column: 2216, scope: !15725)
!15737 = !DILocation(line: 1118, column: 2220, scope: !15725)
!15738 = !DILocation(line: 1118, column: 2282, scope: !15725)
!15739 = !DILocation(line: 1118, column: 2288, scope: !15725)
!15740 = !DILocation(line: 1118, column: 2294, scope: !15725)
!15741 = !DILocation(line: 1118, column: 2306, scope: !15725)
!15742 = !DILocation(line: 1118, column: 2312, scope: !15725)
!15743 = !DILocation(line: 1118, column: 2318, scope: !15725)
!15744 = !DILocation(line: 1118, column: 2302, scope: !15725)
!15745 = !DILocation(line: 1118, column: 2272, scope: !15725)
!15746 = !DILocation(line: 1118, column: 2278, scope: !15725)
!15747 = !DILocation(line: 1118, column: 2338, scope: !15725)
!15748 = !DILocation(line: 1118, column: 2344, scope: !15725)
!15749 = !DILocation(line: 1118, column: 2350, scope: !15725)
!15750 = !DILocation(line: 1118, column: 2362, scope: !15725)
!15751 = !DILocation(line: 1118, column: 2368, scope: !15725)
!15752 = !DILocation(line: 1118, column: 2374, scope: !15725)
!15753 = !DILocation(line: 1118, column: 2358, scope: !15725)
!15754 = !DILocation(line: 1118, column: 2329, scope: !15725)
!15755 = !DILocation(line: 1118, column: 2334, scope: !15725)
!15756 = !DILocation(line: 1118, column: 2399, scope: !15725)
!15757 = !DILocation(line: 1118, column: 2396, scope: !15725)
!15758 = !DILocation(line: 1118, column: 2390, scope: !15725)
!15759 = !DILocation(line: 1118, column: 2394, scope: !15725)
!15760 = !DILocation(line: 1118, column: 2419, scope: !15725)
!15761 = !DILocation(line: 1118, column: 2416, scope: !15725)
!15762 = !DILocation(line: 1118, column: 2410, scope: !15725)
!15763 = !DILocation(line: 1118, column: 2414, scope: !15725)
!15764 = !DILocation(line: 1118, column: 2440, scope: !15725)
!15765 = !DILocation(line: 1118, column: 2437, scope: !15725)
!15766 = !DILocation(line: 1118, column: 2431, scope: !15725)
!15767 = !DILocation(line: 1118, column: 2435, scope: !15725)
!15768 = !DILocation(line: 1118, column: 2450, scope: !15725)
!15769 = !DILocation(line: 1118, column: 2454, scope: !15725)
!15770 = !DILocation(line: 1118, column: 2172, scope: !15725)
!15771 = distinct !{!15771, !15772}
!15772 = !DILocation(line: 1118, column: 2172, scope: !15353)
!15773 = !DILocation(line: 1128, column: 2, scope: !15354)
!15774 = !DILocation(line: 1129, column: 11, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !15350, file: !243, line: 1129, column: 11)
!15776 = !DILocation(line: 1129, column: 11, scope: !15350)
!15777 = !DILocation(line: 1131, column: 3, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !15775, file: !243, line: 1130, column: 2)
!15779 = !DILocation(line: 1131, column: 10, scope: !15780)
!15780 = !DILexicalBlockFile(scope: !15778, file: !243, discriminator: 1)
!15781 = !DILocation(line: 1131, column: 16, scope: !15780)
!15782 = !DILocation(line: 1131, column: 14, scope: !15780)
!15783 = !DILocation(line: 1131, column: 3, scope: !15780)
!15784 = !DILocation(line: 1133, column: 18, scope: !15785)
!15785 = distinct !DILexicalBlock(scope: !15778, file: !243, line: 1132, column: 3)
!15786 = !DILocation(line: 1133, column: 12, scope: !15785)
!15787 = !DILocation(line: 1133, column: 10, scope: !15785)
!15788 = !DILocation(line: 1134, column: 8, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15785, file: !243, line: 1134, column: 8)
!15790 = !DILocation(line: 1134, column: 8, scope: !15785)
!15791 = !DILocation(line: 1136, column: 18, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15793, file: !243, line: 1136, column: 5)
!15793 = distinct !DILexicalBlock(scope: !15789, file: !243, line: 1135, column: 4)
!15794 = !DILocation(line: 1136, column: 24, scope: !15792)
!15795 = !DILocation(line: 1136, column: 32, scope: !15792)
!15796 = !DILocation(line: 1136, column: 41, scope: !15792)
!15797 = !DILocation(line: 1136, column: 47, scope: !15792)
!15798 = !DILocation(line: 1136, column: 38, scope: !15792)
!15799 = !DILocation(line: 1136, column: 15, scope: !15792)
!15800 = !DILocation(line: 1136, column: 13, scope: !15792)
!15801 = !DILocation(line: 1137, column: 4, scope: !15793)
!15802 = !DILocation(line: 1138, column: 17, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15785, file: !243, line: 1138, column: 4)
!15804 = !DILocation(line: 1138, column: 23, scope: !15803)
!15805 = !DILocation(line: 1138, column: 29, scope: !15803)
!15806 = !DILocation(line: 1138, column: 41, scope: !15803)
!15807 = !DILocation(line: 1138, column: 47, scope: !15803)
!15808 = !DILocation(line: 1138, column: 54, scope: !15803)
!15809 = !DILocation(line: 1138, column: 37, scope: !15803)
!15810 = !DILocation(line: 1138, column: 9, scope: !15803)
!15811 = !DILocation(line: 1138, column: 13, scope: !15803)
!15812 = !DILocation(line: 1138, column: 75, scope: !15803)
!15813 = !DILocation(line: 1138, column: 81, scope: !15803)
!15814 = !DILocation(line: 1138, column: 87, scope: !15803)
!15815 = !DILocation(line: 1138, column: 99, scope: !15803)
!15816 = !DILocation(line: 1138, column: 105, scope: !15803)
!15817 = !DILocation(line: 1138, column: 111, scope: !15803)
!15818 = !DILocation(line: 1138, column: 95, scope: !15803)
!15819 = !DILocation(line: 1138, column: 65, scope: !15803)
!15820 = !DILocation(line: 1138, column: 71, scope: !15803)
!15821 = !DILocation(line: 1138, column: 131, scope: !15803)
!15822 = !DILocation(line: 1138, column: 137, scope: !15803)
!15823 = !DILocation(line: 1138, column: 143, scope: !15803)
!15824 = !DILocation(line: 1138, column: 155, scope: !15803)
!15825 = !DILocation(line: 1138, column: 161, scope: !15803)
!15826 = !DILocation(line: 1138, column: 167, scope: !15803)
!15827 = !DILocation(line: 1138, column: 151, scope: !15803)
!15828 = !DILocation(line: 1138, column: 122, scope: !15803)
!15829 = !DILocation(line: 1138, column: 127, scope: !15803)
!15830 = !DILocation(line: 1139, column: 17, scope: !15785)
!15831 = !DILocation(line: 1139, column: 24, scope: !15785)
!15832 = !DILocation(line: 1139, column: 21, scope: !15785)
!15833 = !DILocation(line: 1139, column: 42, scope: !15785)
!15834 = !DILocation(line: 1139, column: 39, scope: !15785)
!15835 = !DILocation(line: 1139, column: 64, scope: !15785)
!15836 = !DILocation(line: 1139, column: 73, scope: !15785)
!15837 = !DILocation(line: 1139, column: 70, scope: !15785)
!15838 = !DILocation(line: 1139, column: 93, scope: !15785)
!15839 = !DILocation(line: 1139, column: 90, scope: !15785)
!15840 = !DILocation(line: 1139, column: 57, scope: !15785)
!15841 = !DILocation(line: 1139, column: 117, scope: !15785)
!15842 = !DILocation(line: 1139, column: 125, scope: !15785)
!15843 = !DILocation(line: 1139, column: 122, scope: !15785)
!15844 = !DILocation(line: 1139, column: 144, scope: !15785)
!15845 = !DILocation(line: 1139, column: 141, scope: !15785)
!15846 = !DILocation(line: 1139, column: 110, scope: !15785)
!15847 = !DILocation(line: 1139, column: 10, scope: !15785)
!15848 = !DILocation(line: 1140, column: 17, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15785, file: !243, line: 1140, column: 4)
!15850 = !DILocation(line: 1140, column: 23, scope: !15849)
!15851 = !DILocation(line: 1140, column: 11, scope: !15849)
!15852 = !DILocation(line: 1140, column: 15, scope: !15849)
!15853 = !DILocation(line: 1140, column: 41, scope: !15849)
!15854 = !DILocation(line: 1140, column: 47, scope: !15849)
!15855 = !DILocation(line: 1140, column: 35, scope: !15849)
!15856 = !DILocation(line: 1140, column: 39, scope: !15849)
!15857 = !DILocation(line: 1140, column: 65, scope: !15849)
!15858 = !DILocation(line: 1140, column: 71, scope: !15849)
!15859 = !DILocation(line: 1140, column: 59, scope: !15849)
!15860 = !DILocation(line: 1140, column: 63, scope: !15849)
!15861 = !DILocation(line: 1140, column: 88, scope: !15849)
!15862 = !DILocation(line: 1140, column: 82, scope: !15849)
!15863 = !DILocation(line: 1140, column: 86, scope: !15849)
!15864 = !DILocation(line: 1131, column: 3, scope: !15865)
!15865 = !DILexicalBlockFile(scope: !15778, file: !243, discriminator: 2)
!15866 = distinct !{!15866, !15777}
!15867 = !DILocation(line: 1142, column: 2, scope: !15778)
!15868 = !DILocation(line: 1145, column: 3, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15775, file: !243, line: 1144, column: 2)
!15870 = !DILocation(line: 1145, column: 10, scope: !15871)
!15871 = !DILexicalBlockFile(scope: !15869, file: !243, discriminator: 1)
!15872 = !DILocation(line: 1145, column: 16, scope: !15871)
!15873 = !DILocation(line: 1145, column: 14, scope: !15871)
!15874 = !DILocation(line: 1145, column: 3, scope: !15871)
!15875 = !DILocation(line: 1147, column: 18, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15869, file: !243, line: 1146, column: 3)
!15877 = !DILocation(line: 1147, column: 12, scope: !15876)
!15878 = !DILocation(line: 1147, column: 10, scope: !15876)
!15879 = !DILocation(line: 1148, column: 8, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15876, file: !243, line: 1148, column: 8)
!15881 = !DILocation(line: 1148, column: 8, scope: !15876)
!15882 = !DILocation(line: 1150, column: 18, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15884, file: !243, line: 1150, column: 5)
!15884 = distinct !DILexicalBlock(scope: !15880, file: !243, line: 1149, column: 4)
!15885 = !DILocation(line: 1150, column: 24, scope: !15883)
!15886 = !DILocation(line: 1150, column: 32, scope: !15883)
!15887 = !DILocation(line: 1150, column: 41, scope: !15883)
!15888 = !DILocation(line: 1150, column: 47, scope: !15883)
!15889 = !DILocation(line: 1150, column: 38, scope: !15883)
!15890 = !DILocation(line: 1150, column: 15, scope: !15883)
!15891 = !DILocation(line: 1150, column: 13, scope: !15883)
!15892 = !DILocation(line: 1151, column: 4, scope: !15884)
!15893 = !DILocation(line: 1152, column: 17, scope: !15894)
!15894 = distinct !DILexicalBlock(scope: !15876, file: !243, line: 1152, column: 4)
!15895 = !DILocation(line: 1152, column: 23, scope: !15894)
!15896 = !DILocation(line: 1152, column: 29, scope: !15894)
!15897 = !DILocation(line: 1152, column: 41, scope: !15894)
!15898 = !DILocation(line: 1152, column: 47, scope: !15894)
!15899 = !DILocation(line: 1152, column: 54, scope: !15894)
!15900 = !DILocation(line: 1152, column: 37, scope: !15894)
!15901 = !DILocation(line: 1152, column: 9, scope: !15894)
!15902 = !DILocation(line: 1152, column: 13, scope: !15894)
!15903 = !DILocation(line: 1152, column: 75, scope: !15894)
!15904 = !DILocation(line: 1152, column: 81, scope: !15894)
!15905 = !DILocation(line: 1152, column: 87, scope: !15894)
!15906 = !DILocation(line: 1152, column: 99, scope: !15894)
!15907 = !DILocation(line: 1152, column: 105, scope: !15894)
!15908 = !DILocation(line: 1152, column: 111, scope: !15894)
!15909 = !DILocation(line: 1152, column: 95, scope: !15894)
!15910 = !DILocation(line: 1152, column: 65, scope: !15894)
!15911 = !DILocation(line: 1152, column: 71, scope: !15894)
!15912 = !DILocation(line: 1152, column: 131, scope: !15894)
!15913 = !DILocation(line: 1152, column: 137, scope: !15894)
!15914 = !DILocation(line: 1152, column: 143, scope: !15894)
!15915 = !DILocation(line: 1152, column: 155, scope: !15894)
!15916 = !DILocation(line: 1152, column: 161, scope: !15894)
!15917 = !DILocation(line: 1152, column: 167, scope: !15894)
!15918 = !DILocation(line: 1152, column: 151, scope: !15894)
!15919 = !DILocation(line: 1152, column: 122, scope: !15894)
!15920 = !DILocation(line: 1152, column: 127, scope: !15894)
!15921 = !DILocation(line: 1153, column: 17, scope: !15876)
!15922 = !DILocation(line: 1153, column: 24, scope: !15876)
!15923 = !DILocation(line: 1153, column: 21, scope: !15876)
!15924 = !DILocation(line: 1153, column: 42, scope: !15876)
!15925 = !DILocation(line: 1153, column: 39, scope: !15876)
!15926 = !DILocation(line: 1153, column: 64, scope: !15876)
!15927 = !DILocation(line: 1153, column: 73, scope: !15876)
!15928 = !DILocation(line: 1153, column: 70, scope: !15876)
!15929 = !DILocation(line: 1153, column: 93, scope: !15876)
!15930 = !DILocation(line: 1153, column: 90, scope: !15876)
!15931 = !DILocation(line: 1153, column: 57, scope: !15876)
!15932 = !DILocation(line: 1153, column: 117, scope: !15876)
!15933 = !DILocation(line: 1153, column: 125, scope: !15876)
!15934 = !DILocation(line: 1153, column: 122, scope: !15876)
!15935 = !DILocation(line: 1153, column: 144, scope: !15876)
!15936 = !DILocation(line: 1153, column: 141, scope: !15876)
!15937 = !DILocation(line: 1153, column: 110, scope: !15876)
!15938 = !DILocation(line: 1153, column: 10, scope: !15876)
!15939 = !DILocation(line: 1154, column: 17, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15876, file: !243, line: 1154, column: 4)
!15941 = !DILocation(line: 1154, column: 11, scope: !15940)
!15942 = !DILocation(line: 1154, column: 15, scope: !15940)
!15943 = !DILocation(line: 1154, column: 35, scope: !15940)
!15944 = !DILocation(line: 1154, column: 41, scope: !15940)
!15945 = !DILocation(line: 1154, column: 29, scope: !15940)
!15946 = !DILocation(line: 1154, column: 33, scope: !15940)
!15947 = !DILocation(line: 1154, column: 58, scope: !15940)
!15948 = !DILocation(line: 1154, column: 64, scope: !15940)
!15949 = !DILocation(line: 1154, column: 52, scope: !15940)
!15950 = !DILocation(line: 1154, column: 56, scope: !15940)
!15951 = !DILocation(line: 1154, column: 82, scope: !15940)
!15952 = !DILocation(line: 1154, column: 88, scope: !15940)
!15953 = !DILocation(line: 1154, column: 76, scope: !15940)
!15954 = !DILocation(line: 1154, column: 80, scope: !15940)
!15955 = !DILocation(line: 1145, column: 3, scope: !15956)
!15956 = !DILexicalBlockFile(scope: !15869, file: !243, discriminator: 2)
!15957 = distinct !{!15957, !15868}
!15958 = !DILocation(line: 1157, column: 1, scope: !15336)
!15959 = distinct !DISubprogram(name: "translate15to24", scope: !243, file: !243, line: 1059, type: !13495, isLocal: true, isDefinition: true, scopeLine: 1060, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!15960 = !DILocalVariable(name: "data", arg: 1, scope: !15959, file: !243, line: 1059, type: !13497)
!15961 = !DILocation(line: 1059, column: 32, scope: !15959)
!15962 = !DILocalVariable(name: "out", arg: 2, scope: !15959, file: !243, line: 1059, type: !46)
!15963 = !DILocation(line: 1059, column: 46, scope: !15959)
!15964 = !DILocalVariable(name: "end", arg: 3, scope: !15959, file: !243, line: 1059, type: !46)
!15965 = !DILocation(line: 1059, column: 59, scope: !15959)
!15966 = !DILocalVariable(name: "value", scope: !15959, file: !243, line: 1061, type: !193)
!15967 = !DILocation(line: 1061, column: 9, scope: !15959)
!15968 = !DILocalVariable(name: "pixel", scope: !15959, file: !243, line: 1062, type: !240)
!15969 = !DILocation(line: 1062, column: 9, scope: !15959)
!15970 = !DILocalVariable(name: "pc", scope: !15959, file: !243, line: 1063, type: !4417)
!15971 = !DILocation(line: 1063, column: 14, scope: !15959)
!15972 = !DILocation(line: 1065, column: 6, scope: !15973)
!15973 = distinct !DILexicalBlock(scope: !15959, file: !243, line: 1065, column: 6)
!15974 = !DILocation(line: 1065, column: 6, scope: !15959)
!15975 = !DILocation(line: 1068, column: 5, scope: !15976)
!15976 = distinct !DILexicalBlock(scope: !15977, file: !243, line: 1068, column: 3)
!15977 = distinct !DILexicalBlock(scope: !15973, file: !243, line: 1066, column: 2)
!15978 = !DILocation(line: 1068, column: 12, scope: !15979)
!15979 = !DILexicalBlockFile(scope: !15976, file: !243, discriminator: 1)
!15980 = !DILocation(line: 1068, column: 19, scope: !15979)
!15981 = !DILocation(line: 1068, column: 23, scope: !15979)
!15982 = !DILocation(line: 1068, column: 16, scope: !15979)
!15983 = !DILocation(line: 1068, column: 5, scope: !15979)
!15984 = !DILocation(line: 1068, column: 48, scope: !15985)
!15985 = !DILexicalBlockFile(scope: !15986, file: !243, discriminator: 2)
!15986 = distinct !DILexicalBlock(scope: !15976, file: !243, line: 1068, column: 32)
!15987 = !DILocation(line: 1068, column: 42, scope: !15985)
!15988 = !DILocation(line: 1068, column: 40, scope: !15985)
!15989 = !DILocation(line: 1068, column: 66, scope: !15985)
!15990 = !DILocation(line: 1068, column: 72, scope: !15985)
!15991 = !DILocation(line: 1068, column: 78, scope: !15985)
!15992 = !DILocation(line: 1068, column: 90, scope: !15985)
!15993 = !DILocation(line: 1068, column: 96, scope: !15985)
!15994 = !DILocation(line: 1068, column: 103, scope: !15985)
!15995 = !DILocation(line: 1068, column: 86, scope: !15985)
!15996 = !DILocation(line: 1068, column: 58, scope: !15985)
!15997 = !DILocation(line: 1068, column: 62, scope: !15985)
!15998 = !DILocation(line: 1068, column: 124, scope: !15985)
!15999 = !DILocation(line: 1068, column: 130, scope: !15985)
!16000 = !DILocation(line: 1068, column: 136, scope: !15985)
!16001 = !DILocation(line: 1068, column: 148, scope: !15985)
!16002 = !DILocation(line: 1068, column: 154, scope: !15985)
!16003 = !DILocation(line: 1068, column: 160, scope: !15985)
!16004 = !DILocation(line: 1068, column: 144, scope: !15985)
!16005 = !DILocation(line: 1068, column: 114, scope: !15985)
!16006 = !DILocation(line: 1068, column: 120, scope: !15985)
!16007 = !DILocation(line: 1068, column: 180, scope: !15985)
!16008 = !DILocation(line: 1068, column: 186, scope: !15985)
!16009 = !DILocation(line: 1068, column: 192, scope: !15985)
!16010 = !DILocation(line: 1068, column: 204, scope: !15985)
!16011 = !DILocation(line: 1068, column: 210, scope: !15985)
!16012 = !DILocation(line: 1068, column: 216, scope: !15985)
!16013 = !DILocation(line: 1068, column: 200, scope: !15985)
!16014 = !DILocation(line: 1068, column: 171, scope: !15985)
!16015 = !DILocation(line: 1068, column: 176, scope: !15985)
!16016 = !DILocation(line: 1068, column: 241, scope: !15985)
!16017 = !DILocation(line: 1068, column: 238, scope: !15985)
!16018 = !DILocation(line: 1068, column: 232, scope: !15985)
!16019 = !DILocation(line: 1068, column: 236, scope: !15985)
!16020 = !DILocation(line: 1068, column: 261, scope: !15985)
!16021 = !DILocation(line: 1068, column: 258, scope: !15985)
!16022 = !DILocation(line: 1068, column: 252, scope: !15985)
!16023 = !DILocation(line: 1068, column: 256, scope: !15985)
!16024 = !DILocation(line: 1068, column: 282, scope: !15985)
!16025 = !DILocation(line: 1068, column: 279, scope: !15985)
!16026 = !DILocation(line: 1068, column: 273, scope: !15985)
!16027 = !DILocation(line: 1068, column: 277, scope: !15985)
!16028 = !DILocation(line: 1068, column: 301, scope: !15985)
!16029 = !DILocation(line: 1068, column: 295, scope: !15985)
!16030 = !DILocation(line: 1068, column: 293, scope: !15985)
!16031 = !DILocation(line: 1068, column: 319, scope: !15985)
!16032 = !DILocation(line: 1068, column: 325, scope: !15985)
!16033 = !DILocation(line: 1068, column: 331, scope: !15985)
!16034 = !DILocation(line: 1068, column: 343, scope: !15985)
!16035 = !DILocation(line: 1068, column: 349, scope: !15985)
!16036 = !DILocation(line: 1068, column: 356, scope: !15985)
!16037 = !DILocation(line: 1068, column: 339, scope: !15985)
!16038 = !DILocation(line: 1068, column: 311, scope: !15985)
!16039 = !DILocation(line: 1068, column: 315, scope: !15985)
!16040 = !DILocation(line: 1068, column: 377, scope: !15985)
!16041 = !DILocation(line: 1068, column: 383, scope: !15985)
!16042 = !DILocation(line: 1068, column: 389, scope: !15985)
!16043 = !DILocation(line: 1068, column: 401, scope: !15985)
!16044 = !DILocation(line: 1068, column: 407, scope: !15985)
!16045 = !DILocation(line: 1068, column: 413, scope: !15985)
!16046 = !DILocation(line: 1068, column: 397, scope: !15985)
!16047 = !DILocation(line: 1068, column: 367, scope: !15985)
!16048 = !DILocation(line: 1068, column: 373, scope: !15985)
!16049 = !DILocation(line: 1068, column: 433, scope: !15985)
!16050 = !DILocation(line: 1068, column: 439, scope: !15985)
!16051 = !DILocation(line: 1068, column: 445, scope: !15985)
!16052 = !DILocation(line: 1068, column: 457, scope: !15985)
!16053 = !DILocation(line: 1068, column: 463, scope: !15985)
!16054 = !DILocation(line: 1068, column: 469, scope: !15985)
!16055 = !DILocation(line: 1068, column: 453, scope: !15985)
!16056 = !DILocation(line: 1068, column: 424, scope: !15985)
!16057 = !DILocation(line: 1068, column: 429, scope: !15985)
!16058 = !DILocation(line: 1068, column: 494, scope: !15985)
!16059 = !DILocation(line: 1068, column: 491, scope: !15985)
!16060 = !DILocation(line: 1068, column: 485, scope: !15985)
!16061 = !DILocation(line: 1068, column: 489, scope: !15985)
!16062 = !DILocation(line: 1068, column: 514, scope: !15985)
!16063 = !DILocation(line: 1068, column: 511, scope: !15985)
!16064 = !DILocation(line: 1068, column: 505, scope: !15985)
!16065 = !DILocation(line: 1068, column: 509, scope: !15985)
!16066 = !DILocation(line: 1068, column: 535, scope: !15985)
!16067 = !DILocation(line: 1068, column: 532, scope: !15985)
!16068 = !DILocation(line: 1068, column: 526, scope: !15985)
!16069 = !DILocation(line: 1068, column: 530, scope: !15985)
!16070 = !DILocation(line: 1068, column: 554, scope: !15985)
!16071 = !DILocation(line: 1068, column: 548, scope: !15985)
!16072 = !DILocation(line: 1068, column: 546, scope: !15985)
!16073 = !DILocation(line: 1068, column: 572, scope: !15985)
!16074 = !DILocation(line: 1068, column: 578, scope: !15985)
!16075 = !DILocation(line: 1068, column: 584, scope: !15985)
!16076 = !DILocation(line: 1068, column: 596, scope: !15985)
!16077 = !DILocation(line: 1068, column: 602, scope: !15985)
!16078 = !DILocation(line: 1068, column: 609, scope: !15985)
!16079 = !DILocation(line: 1068, column: 592, scope: !15985)
!16080 = !DILocation(line: 1068, column: 564, scope: !15985)
!16081 = !DILocation(line: 1068, column: 568, scope: !15985)
!16082 = !DILocation(line: 1068, column: 630, scope: !15985)
!16083 = !DILocation(line: 1068, column: 636, scope: !15985)
!16084 = !DILocation(line: 1068, column: 642, scope: !15985)
!16085 = !DILocation(line: 1068, column: 654, scope: !15985)
!16086 = !DILocation(line: 1068, column: 660, scope: !15985)
!16087 = !DILocation(line: 1068, column: 666, scope: !15985)
!16088 = !DILocation(line: 1068, column: 650, scope: !15985)
!16089 = !DILocation(line: 1068, column: 620, scope: !15985)
!16090 = !DILocation(line: 1068, column: 626, scope: !15985)
!16091 = !DILocation(line: 1068, column: 686, scope: !15985)
!16092 = !DILocation(line: 1068, column: 692, scope: !15985)
!16093 = !DILocation(line: 1068, column: 698, scope: !15985)
!16094 = !DILocation(line: 1068, column: 710, scope: !15985)
!16095 = !DILocation(line: 1068, column: 716, scope: !15985)
!16096 = !DILocation(line: 1068, column: 722, scope: !15985)
!16097 = !DILocation(line: 1068, column: 706, scope: !15985)
!16098 = !DILocation(line: 1068, column: 677, scope: !15985)
!16099 = !DILocation(line: 1068, column: 682, scope: !15985)
!16100 = !DILocation(line: 1068, column: 747, scope: !15985)
!16101 = !DILocation(line: 1068, column: 744, scope: !15985)
!16102 = !DILocation(line: 1068, column: 738, scope: !15985)
!16103 = !DILocation(line: 1068, column: 742, scope: !15985)
!16104 = !DILocation(line: 1068, column: 767, scope: !15985)
!16105 = !DILocation(line: 1068, column: 764, scope: !15985)
!16106 = !DILocation(line: 1068, column: 758, scope: !15985)
!16107 = !DILocation(line: 1068, column: 762, scope: !15985)
!16108 = !DILocation(line: 1068, column: 788, scope: !15985)
!16109 = !DILocation(line: 1068, column: 785, scope: !15985)
!16110 = !DILocation(line: 1068, column: 779, scope: !15985)
!16111 = !DILocation(line: 1068, column: 783, scope: !15985)
!16112 = !DILocation(line: 1068, column: 807, scope: !15985)
!16113 = !DILocation(line: 1068, column: 801, scope: !15985)
!16114 = !DILocation(line: 1068, column: 799, scope: !15985)
!16115 = !DILocation(line: 1068, column: 825, scope: !15985)
!16116 = !DILocation(line: 1068, column: 831, scope: !15985)
!16117 = !DILocation(line: 1068, column: 837, scope: !15985)
!16118 = !DILocation(line: 1068, column: 849, scope: !15985)
!16119 = !DILocation(line: 1068, column: 855, scope: !15985)
!16120 = !DILocation(line: 1068, column: 862, scope: !15985)
!16121 = !DILocation(line: 1068, column: 845, scope: !15985)
!16122 = !DILocation(line: 1068, column: 817, scope: !15985)
!16123 = !DILocation(line: 1068, column: 821, scope: !15985)
!16124 = !DILocation(line: 1068, column: 883, scope: !15985)
!16125 = !DILocation(line: 1068, column: 889, scope: !15985)
!16126 = !DILocation(line: 1068, column: 895, scope: !15985)
!16127 = !DILocation(line: 1068, column: 907, scope: !15985)
!16128 = !DILocation(line: 1068, column: 913, scope: !15985)
!16129 = !DILocation(line: 1068, column: 919, scope: !15985)
!16130 = !DILocation(line: 1068, column: 903, scope: !15985)
!16131 = !DILocation(line: 1068, column: 873, scope: !15985)
!16132 = !DILocation(line: 1068, column: 879, scope: !15985)
!16133 = !DILocation(line: 1068, column: 939, scope: !15985)
!16134 = !DILocation(line: 1068, column: 945, scope: !15985)
!16135 = !DILocation(line: 1068, column: 951, scope: !15985)
!16136 = !DILocation(line: 1068, column: 963, scope: !15985)
!16137 = !DILocation(line: 1068, column: 969, scope: !15985)
!16138 = !DILocation(line: 1068, column: 975, scope: !15985)
!16139 = !DILocation(line: 1068, column: 959, scope: !15985)
!16140 = !DILocation(line: 1068, column: 930, scope: !15985)
!16141 = !DILocation(line: 1068, column: 935, scope: !15985)
!16142 = !DILocation(line: 1068, column: 1000, scope: !15985)
!16143 = !DILocation(line: 1068, column: 997, scope: !15985)
!16144 = !DILocation(line: 1068, column: 991, scope: !15985)
!16145 = !DILocation(line: 1068, column: 995, scope: !15985)
!16146 = !DILocation(line: 1068, column: 1020, scope: !15985)
!16147 = !DILocation(line: 1068, column: 1017, scope: !15985)
!16148 = !DILocation(line: 1068, column: 1011, scope: !15985)
!16149 = !DILocation(line: 1068, column: 1015, scope: !15985)
!16150 = !DILocation(line: 1068, column: 1041, scope: !15985)
!16151 = !DILocation(line: 1068, column: 1038, scope: !15985)
!16152 = !DILocation(line: 1068, column: 1032, scope: !15985)
!16153 = !DILocation(line: 1068, column: 1036, scope: !15985)
!16154 = !DILocation(line: 1068, column: 1060, scope: !15985)
!16155 = !DILocation(line: 1068, column: 1054, scope: !15985)
!16156 = !DILocation(line: 1068, column: 1052, scope: !15985)
!16157 = !DILocation(line: 1068, column: 1078, scope: !15985)
!16158 = !DILocation(line: 1068, column: 1084, scope: !15985)
!16159 = !DILocation(line: 1068, column: 1090, scope: !15985)
!16160 = !DILocation(line: 1068, column: 1102, scope: !15985)
!16161 = !DILocation(line: 1068, column: 1108, scope: !15985)
!16162 = !DILocation(line: 1068, column: 1115, scope: !15985)
!16163 = !DILocation(line: 1068, column: 1098, scope: !15985)
!16164 = !DILocation(line: 1068, column: 1070, scope: !15985)
!16165 = !DILocation(line: 1068, column: 1074, scope: !15985)
!16166 = !DILocation(line: 1068, column: 1136, scope: !15985)
!16167 = !DILocation(line: 1068, column: 1142, scope: !15985)
!16168 = !DILocation(line: 1068, column: 1148, scope: !15985)
!16169 = !DILocation(line: 1068, column: 1160, scope: !15985)
!16170 = !DILocation(line: 1068, column: 1166, scope: !15985)
!16171 = !DILocation(line: 1068, column: 1172, scope: !15985)
!16172 = !DILocation(line: 1068, column: 1156, scope: !15985)
!16173 = !DILocation(line: 1068, column: 1126, scope: !15985)
!16174 = !DILocation(line: 1068, column: 1132, scope: !15985)
!16175 = !DILocation(line: 1068, column: 1192, scope: !15985)
!16176 = !DILocation(line: 1068, column: 1198, scope: !15985)
!16177 = !DILocation(line: 1068, column: 1204, scope: !15985)
!16178 = !DILocation(line: 1068, column: 1216, scope: !15985)
!16179 = !DILocation(line: 1068, column: 1222, scope: !15985)
!16180 = !DILocation(line: 1068, column: 1228, scope: !15985)
!16181 = !DILocation(line: 1068, column: 1212, scope: !15985)
!16182 = !DILocation(line: 1068, column: 1183, scope: !15985)
!16183 = !DILocation(line: 1068, column: 1188, scope: !15985)
!16184 = !DILocation(line: 1068, column: 1253, scope: !15985)
!16185 = !DILocation(line: 1068, column: 1250, scope: !15985)
!16186 = !DILocation(line: 1068, column: 1244, scope: !15985)
!16187 = !DILocation(line: 1068, column: 1248, scope: !15985)
!16188 = !DILocation(line: 1068, column: 1273, scope: !15985)
!16189 = !DILocation(line: 1068, column: 1270, scope: !15985)
!16190 = !DILocation(line: 1068, column: 1264, scope: !15985)
!16191 = !DILocation(line: 1068, column: 1268, scope: !15985)
!16192 = !DILocation(line: 1068, column: 1294, scope: !15985)
!16193 = !DILocation(line: 1068, column: 1291, scope: !15985)
!16194 = !DILocation(line: 1068, column: 1285, scope: !15985)
!16195 = !DILocation(line: 1068, column: 1289, scope: !15985)
!16196 = !DILocation(line: 1068, column: 1313, scope: !15985)
!16197 = !DILocation(line: 1068, column: 1307, scope: !15985)
!16198 = !DILocation(line: 1068, column: 1305, scope: !15985)
!16199 = !DILocation(line: 1068, column: 1331, scope: !15985)
!16200 = !DILocation(line: 1068, column: 1337, scope: !15985)
!16201 = !DILocation(line: 1068, column: 1343, scope: !15985)
!16202 = !DILocation(line: 1068, column: 1355, scope: !15985)
!16203 = !DILocation(line: 1068, column: 1361, scope: !15985)
!16204 = !DILocation(line: 1068, column: 1368, scope: !15985)
!16205 = !DILocation(line: 1068, column: 1351, scope: !15985)
!16206 = !DILocation(line: 1068, column: 1323, scope: !15985)
!16207 = !DILocation(line: 1068, column: 1327, scope: !15985)
!16208 = !DILocation(line: 1068, column: 1389, scope: !15985)
!16209 = !DILocation(line: 1068, column: 1395, scope: !15985)
!16210 = !DILocation(line: 1068, column: 1401, scope: !15985)
!16211 = !DILocation(line: 1068, column: 1413, scope: !15985)
!16212 = !DILocation(line: 1068, column: 1419, scope: !15985)
!16213 = !DILocation(line: 1068, column: 1425, scope: !15985)
!16214 = !DILocation(line: 1068, column: 1409, scope: !15985)
!16215 = !DILocation(line: 1068, column: 1379, scope: !15985)
!16216 = !DILocation(line: 1068, column: 1385, scope: !15985)
!16217 = !DILocation(line: 1068, column: 1445, scope: !15985)
!16218 = !DILocation(line: 1068, column: 1451, scope: !15985)
!16219 = !DILocation(line: 1068, column: 1457, scope: !15985)
!16220 = !DILocation(line: 1068, column: 1469, scope: !15985)
!16221 = !DILocation(line: 1068, column: 1475, scope: !15985)
!16222 = !DILocation(line: 1068, column: 1481, scope: !15985)
!16223 = !DILocation(line: 1068, column: 1465, scope: !15985)
!16224 = !DILocation(line: 1068, column: 1436, scope: !15985)
!16225 = !DILocation(line: 1068, column: 1441, scope: !15985)
!16226 = !DILocation(line: 1068, column: 1506, scope: !15985)
!16227 = !DILocation(line: 1068, column: 1503, scope: !15985)
!16228 = !DILocation(line: 1068, column: 1497, scope: !15985)
!16229 = !DILocation(line: 1068, column: 1501, scope: !15985)
!16230 = !DILocation(line: 1068, column: 1526, scope: !15985)
!16231 = !DILocation(line: 1068, column: 1523, scope: !15985)
!16232 = !DILocation(line: 1068, column: 1517, scope: !15985)
!16233 = !DILocation(line: 1068, column: 1521, scope: !15985)
!16234 = !DILocation(line: 1068, column: 1547, scope: !15985)
!16235 = !DILocation(line: 1068, column: 1544, scope: !15985)
!16236 = !DILocation(line: 1068, column: 1538, scope: !15985)
!16237 = !DILocation(line: 1068, column: 1542, scope: !15985)
!16238 = !DILocation(line: 1068, column: 1566, scope: !15985)
!16239 = !DILocation(line: 1068, column: 1560, scope: !15985)
!16240 = !DILocation(line: 1068, column: 1558, scope: !15985)
!16241 = !DILocation(line: 1068, column: 1584, scope: !15985)
!16242 = !DILocation(line: 1068, column: 1590, scope: !15985)
!16243 = !DILocation(line: 1068, column: 1596, scope: !15985)
!16244 = !DILocation(line: 1068, column: 1608, scope: !15985)
!16245 = !DILocation(line: 1068, column: 1614, scope: !15985)
!16246 = !DILocation(line: 1068, column: 1621, scope: !15985)
!16247 = !DILocation(line: 1068, column: 1604, scope: !15985)
!16248 = !DILocation(line: 1068, column: 1576, scope: !15985)
!16249 = !DILocation(line: 1068, column: 1580, scope: !15985)
!16250 = !DILocation(line: 1068, column: 1642, scope: !15985)
!16251 = !DILocation(line: 1068, column: 1648, scope: !15985)
!16252 = !DILocation(line: 1068, column: 1654, scope: !15985)
!16253 = !DILocation(line: 1068, column: 1666, scope: !15985)
!16254 = !DILocation(line: 1068, column: 1672, scope: !15985)
!16255 = !DILocation(line: 1068, column: 1678, scope: !15985)
!16256 = !DILocation(line: 1068, column: 1662, scope: !15985)
!16257 = !DILocation(line: 1068, column: 1632, scope: !15985)
!16258 = !DILocation(line: 1068, column: 1638, scope: !15985)
!16259 = !DILocation(line: 1068, column: 1698, scope: !15985)
!16260 = !DILocation(line: 1068, column: 1704, scope: !15985)
!16261 = !DILocation(line: 1068, column: 1710, scope: !15985)
!16262 = !DILocation(line: 1068, column: 1722, scope: !15985)
!16263 = !DILocation(line: 1068, column: 1728, scope: !15985)
!16264 = !DILocation(line: 1068, column: 1734, scope: !15985)
!16265 = !DILocation(line: 1068, column: 1718, scope: !15985)
!16266 = !DILocation(line: 1068, column: 1689, scope: !15985)
!16267 = !DILocation(line: 1068, column: 1694, scope: !15985)
!16268 = !DILocation(line: 1068, column: 1759, scope: !15985)
!16269 = !DILocation(line: 1068, column: 1756, scope: !15985)
!16270 = !DILocation(line: 1068, column: 1750, scope: !15985)
!16271 = !DILocation(line: 1068, column: 1754, scope: !15985)
!16272 = !DILocation(line: 1068, column: 1779, scope: !15985)
!16273 = !DILocation(line: 1068, column: 1776, scope: !15985)
!16274 = !DILocation(line: 1068, column: 1770, scope: !15985)
!16275 = !DILocation(line: 1068, column: 1774, scope: !15985)
!16276 = !DILocation(line: 1068, column: 1800, scope: !15985)
!16277 = !DILocation(line: 1068, column: 1797, scope: !15985)
!16278 = !DILocation(line: 1068, column: 1791, scope: !15985)
!16279 = !DILocation(line: 1068, column: 1795, scope: !15985)
!16280 = !DILocation(line: 1068, column: 1819, scope: !15985)
!16281 = !DILocation(line: 1068, column: 1813, scope: !15985)
!16282 = !DILocation(line: 1068, column: 1811, scope: !15985)
!16283 = !DILocation(line: 1068, column: 1837, scope: !15985)
!16284 = !DILocation(line: 1068, column: 1843, scope: !15985)
!16285 = !DILocation(line: 1068, column: 1849, scope: !15985)
!16286 = !DILocation(line: 1068, column: 1861, scope: !15985)
!16287 = !DILocation(line: 1068, column: 1867, scope: !15985)
!16288 = !DILocation(line: 1068, column: 1874, scope: !15985)
!16289 = !DILocation(line: 1068, column: 1857, scope: !15985)
!16290 = !DILocation(line: 1068, column: 1829, scope: !15985)
!16291 = !DILocation(line: 1068, column: 1833, scope: !15985)
!16292 = !DILocation(line: 1068, column: 1895, scope: !15985)
!16293 = !DILocation(line: 1068, column: 1901, scope: !15985)
!16294 = !DILocation(line: 1068, column: 1907, scope: !15985)
!16295 = !DILocation(line: 1068, column: 1919, scope: !15985)
!16296 = !DILocation(line: 1068, column: 1925, scope: !15985)
!16297 = !DILocation(line: 1068, column: 1931, scope: !15985)
!16298 = !DILocation(line: 1068, column: 1915, scope: !15985)
!16299 = !DILocation(line: 1068, column: 1885, scope: !15985)
!16300 = !DILocation(line: 1068, column: 1891, scope: !15985)
!16301 = !DILocation(line: 1068, column: 1951, scope: !15985)
!16302 = !DILocation(line: 1068, column: 1957, scope: !15985)
!16303 = !DILocation(line: 1068, column: 1963, scope: !15985)
!16304 = !DILocation(line: 1068, column: 1975, scope: !15985)
!16305 = !DILocation(line: 1068, column: 1981, scope: !15985)
!16306 = !DILocation(line: 1068, column: 1987, scope: !15985)
!16307 = !DILocation(line: 1068, column: 1971, scope: !15985)
!16308 = !DILocation(line: 1068, column: 1942, scope: !15985)
!16309 = !DILocation(line: 1068, column: 1947, scope: !15985)
!16310 = !DILocation(line: 1068, column: 2012, scope: !15985)
!16311 = !DILocation(line: 1068, column: 2009, scope: !15985)
!16312 = !DILocation(line: 1068, column: 2003, scope: !15985)
!16313 = !DILocation(line: 1068, column: 2007, scope: !15985)
!16314 = !DILocation(line: 1068, column: 2032, scope: !15985)
!16315 = !DILocation(line: 1068, column: 2029, scope: !15985)
!16316 = !DILocation(line: 1068, column: 2023, scope: !15985)
!16317 = !DILocation(line: 1068, column: 2027, scope: !15985)
!16318 = !DILocation(line: 1068, column: 2053, scope: !15985)
!16319 = !DILocation(line: 1068, column: 2050, scope: !15985)
!16320 = !DILocation(line: 1068, column: 2044, scope: !15985)
!16321 = !DILocation(line: 1068, column: 2048, scope: !15985)
!16322 = !DILocation(line: 1068, column: 5, scope: !15985)
!16323 = distinct !{!16323, !15975}
!16324 = !DILocation(line: 1068, column: 2060, scope: !16325)
!16325 = !DILexicalBlockFile(scope: !15976, file: !243, discriminator: 3)
!16326 = !DILocation(line: 1068, column: 2067, scope: !16327)
!16327 = !DILexicalBlockFile(scope: !15976, file: !243, discriminator: 4)
!16328 = !DILocation(line: 1068, column: 2073, scope: !16327)
!16329 = !DILocation(line: 1068, column: 2071, scope: !16327)
!16330 = !DILocation(line: 1068, column: 2060, scope: !16327)
!16331 = !DILocation(line: 1068, column: 2094, scope: !16332)
!16332 = !DILexicalBlockFile(scope: !16333, file: !243, discriminator: 5)
!16333 = distinct !DILexicalBlock(scope: !15976, file: !243, line: 1068, column: 2078)
!16334 = !DILocation(line: 1068, column: 2088, scope: !16332)
!16335 = !DILocation(line: 1068, column: 2086, scope: !16332)
!16336 = !DILocation(line: 1068, column: 2112, scope: !16332)
!16337 = !DILocation(line: 1068, column: 2118, scope: !16332)
!16338 = !DILocation(line: 1068, column: 2124, scope: !16332)
!16339 = !DILocation(line: 1068, column: 2136, scope: !16332)
!16340 = !DILocation(line: 1068, column: 2142, scope: !16332)
!16341 = !DILocation(line: 1068, column: 2149, scope: !16332)
!16342 = !DILocation(line: 1068, column: 2132, scope: !16332)
!16343 = !DILocation(line: 1068, column: 2104, scope: !16332)
!16344 = !DILocation(line: 1068, column: 2108, scope: !16332)
!16345 = !DILocation(line: 1068, column: 2170, scope: !16332)
!16346 = !DILocation(line: 1068, column: 2176, scope: !16332)
!16347 = !DILocation(line: 1068, column: 2182, scope: !16332)
!16348 = !DILocation(line: 1068, column: 2194, scope: !16332)
!16349 = !DILocation(line: 1068, column: 2200, scope: !16332)
!16350 = !DILocation(line: 1068, column: 2206, scope: !16332)
!16351 = !DILocation(line: 1068, column: 2190, scope: !16332)
!16352 = !DILocation(line: 1068, column: 2160, scope: !16332)
!16353 = !DILocation(line: 1068, column: 2166, scope: !16332)
!16354 = !DILocation(line: 1068, column: 2226, scope: !16332)
!16355 = !DILocation(line: 1068, column: 2232, scope: !16332)
!16356 = !DILocation(line: 1068, column: 2238, scope: !16332)
!16357 = !DILocation(line: 1068, column: 2250, scope: !16332)
!16358 = !DILocation(line: 1068, column: 2256, scope: !16332)
!16359 = !DILocation(line: 1068, column: 2262, scope: !16332)
!16360 = !DILocation(line: 1068, column: 2246, scope: !16332)
!16361 = !DILocation(line: 1068, column: 2217, scope: !16332)
!16362 = !DILocation(line: 1068, column: 2222, scope: !16332)
!16363 = !DILocation(line: 1068, column: 2287, scope: !16332)
!16364 = !DILocation(line: 1068, column: 2284, scope: !16332)
!16365 = !DILocation(line: 1068, column: 2278, scope: !16332)
!16366 = !DILocation(line: 1068, column: 2282, scope: !16332)
!16367 = !DILocation(line: 1068, column: 2307, scope: !16332)
!16368 = !DILocation(line: 1068, column: 2304, scope: !16332)
!16369 = !DILocation(line: 1068, column: 2298, scope: !16332)
!16370 = !DILocation(line: 1068, column: 2302, scope: !16332)
!16371 = !DILocation(line: 1068, column: 2328, scope: !16332)
!16372 = !DILocation(line: 1068, column: 2325, scope: !16332)
!16373 = !DILocation(line: 1068, column: 2319, scope: !16332)
!16374 = !DILocation(line: 1068, column: 2323, scope: !16332)
!16375 = !DILocation(line: 1068, column: 2060, scope: !16332)
!16376 = distinct !{!16376, !16377}
!16377 = !DILocation(line: 1068, column: 2060, scope: !15976)
!16378 = !DILocation(line: 1077, column: 2, scope: !15977)
!16379 = !DILocation(line: 1078, column: 11, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !15973, file: !243, line: 1078, column: 11)
!16381 = !DILocation(line: 1078, column: 11, scope: !15973)
!16382 = !DILocation(line: 1080, column: 3, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16380, file: !243, line: 1079, column: 2)
!16384 = !DILocation(line: 1080, column: 10, scope: !16385)
!16385 = !DILexicalBlockFile(scope: !16383, file: !243, discriminator: 1)
!16386 = !DILocation(line: 1080, column: 16, scope: !16385)
!16387 = !DILocation(line: 1080, column: 14, scope: !16385)
!16388 = !DILocation(line: 1080, column: 3, scope: !16385)
!16389 = !DILocation(line: 1082, column: 18, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16383, file: !243, line: 1081, column: 3)
!16391 = !DILocation(line: 1082, column: 12, scope: !16390)
!16392 = !DILocation(line: 1082, column: 10, scope: !16390)
!16393 = !DILocation(line: 1083, column: 8, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16390, file: !243, line: 1083, column: 8)
!16395 = !DILocation(line: 1083, column: 8, scope: !16390)
!16396 = !DILocation(line: 1085, column: 18, scope: !16397)
!16397 = distinct !DILexicalBlock(scope: !16398, file: !243, line: 1085, column: 5)
!16398 = distinct !DILexicalBlock(scope: !16394, file: !243, line: 1084, column: 4)
!16399 = !DILocation(line: 1085, column: 24, scope: !16397)
!16400 = !DILocation(line: 1085, column: 32, scope: !16397)
!16401 = !DILocation(line: 1085, column: 41, scope: !16397)
!16402 = !DILocation(line: 1085, column: 47, scope: !16397)
!16403 = !DILocation(line: 1085, column: 38, scope: !16397)
!16404 = !DILocation(line: 1085, column: 15, scope: !16397)
!16405 = !DILocation(line: 1085, column: 13, scope: !16397)
!16406 = !DILocation(line: 1086, column: 4, scope: !16398)
!16407 = !DILocation(line: 1087, column: 17, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !16390, file: !243, line: 1087, column: 4)
!16409 = !DILocation(line: 1087, column: 23, scope: !16408)
!16410 = !DILocation(line: 1087, column: 29, scope: !16408)
!16411 = !DILocation(line: 1087, column: 41, scope: !16408)
!16412 = !DILocation(line: 1087, column: 47, scope: !16408)
!16413 = !DILocation(line: 1087, column: 54, scope: !16408)
!16414 = !DILocation(line: 1087, column: 37, scope: !16408)
!16415 = !DILocation(line: 1087, column: 9, scope: !16408)
!16416 = !DILocation(line: 1087, column: 13, scope: !16408)
!16417 = !DILocation(line: 1087, column: 75, scope: !16408)
!16418 = !DILocation(line: 1087, column: 81, scope: !16408)
!16419 = !DILocation(line: 1087, column: 87, scope: !16408)
!16420 = !DILocation(line: 1087, column: 99, scope: !16408)
!16421 = !DILocation(line: 1087, column: 105, scope: !16408)
!16422 = !DILocation(line: 1087, column: 111, scope: !16408)
!16423 = !DILocation(line: 1087, column: 95, scope: !16408)
!16424 = !DILocation(line: 1087, column: 65, scope: !16408)
!16425 = !DILocation(line: 1087, column: 71, scope: !16408)
!16426 = !DILocation(line: 1087, column: 131, scope: !16408)
!16427 = !DILocation(line: 1087, column: 137, scope: !16408)
!16428 = !DILocation(line: 1087, column: 143, scope: !16408)
!16429 = !DILocation(line: 1087, column: 155, scope: !16408)
!16430 = !DILocation(line: 1087, column: 161, scope: !16408)
!16431 = !DILocation(line: 1087, column: 167, scope: !16408)
!16432 = !DILocation(line: 1087, column: 151, scope: !16408)
!16433 = !DILocation(line: 1087, column: 122, scope: !16408)
!16434 = !DILocation(line: 1087, column: 127, scope: !16408)
!16435 = !DILocation(line: 1088, column: 17, scope: !16390)
!16436 = !DILocation(line: 1088, column: 24, scope: !16390)
!16437 = !DILocation(line: 1088, column: 21, scope: !16390)
!16438 = !DILocation(line: 1088, column: 42, scope: !16390)
!16439 = !DILocation(line: 1088, column: 39, scope: !16390)
!16440 = !DILocation(line: 1088, column: 64, scope: !16390)
!16441 = !DILocation(line: 1088, column: 73, scope: !16390)
!16442 = !DILocation(line: 1088, column: 70, scope: !16390)
!16443 = !DILocation(line: 1088, column: 93, scope: !16390)
!16444 = !DILocation(line: 1088, column: 90, scope: !16390)
!16445 = !DILocation(line: 1088, column: 57, scope: !16390)
!16446 = !DILocation(line: 1088, column: 117, scope: !16390)
!16447 = !DILocation(line: 1088, column: 125, scope: !16390)
!16448 = !DILocation(line: 1088, column: 122, scope: !16390)
!16449 = !DILocation(line: 1088, column: 144, scope: !16390)
!16450 = !DILocation(line: 1088, column: 141, scope: !16390)
!16451 = !DILocation(line: 1088, column: 110, scope: !16390)
!16452 = !DILocation(line: 1088, column: 10, scope: !16390)
!16453 = !DILocation(line: 1089, column: 17, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16390, file: !243, line: 1089, column: 4)
!16455 = !DILocation(line: 1089, column: 23, scope: !16454)
!16456 = !DILocation(line: 1089, column: 11, scope: !16454)
!16457 = !DILocation(line: 1089, column: 15, scope: !16454)
!16458 = !DILocation(line: 1089, column: 41, scope: !16454)
!16459 = !DILocation(line: 1089, column: 47, scope: !16454)
!16460 = !DILocation(line: 1089, column: 35, scope: !16454)
!16461 = !DILocation(line: 1089, column: 39, scope: !16454)
!16462 = !DILocation(line: 1089, column: 64, scope: !16454)
!16463 = !DILocation(line: 1089, column: 58, scope: !16454)
!16464 = !DILocation(line: 1089, column: 62, scope: !16454)
!16465 = !DILocation(line: 1080, column: 3, scope: !16466)
!16466 = !DILexicalBlockFile(scope: !16383, file: !243, discriminator: 2)
!16467 = distinct !{!16467, !16382}
!16468 = !DILocation(line: 1091, column: 2, scope: !16383)
!16469 = !DILocation(line: 1094, column: 3, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16380, file: !243, line: 1093, column: 2)
!16471 = !DILocation(line: 1094, column: 10, scope: !16472)
!16472 = !DILexicalBlockFile(scope: !16470, file: !243, discriminator: 1)
!16473 = !DILocation(line: 1094, column: 16, scope: !16472)
!16474 = !DILocation(line: 1094, column: 14, scope: !16472)
!16475 = !DILocation(line: 1094, column: 3, scope: !16472)
!16476 = !DILocation(line: 1096, column: 18, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16470, file: !243, line: 1095, column: 3)
!16478 = !DILocation(line: 1096, column: 12, scope: !16477)
!16479 = !DILocation(line: 1096, column: 10, scope: !16477)
!16480 = !DILocation(line: 1097, column: 8, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16477, file: !243, line: 1097, column: 8)
!16482 = !DILocation(line: 1097, column: 8, scope: !16477)
!16483 = !DILocation(line: 1099, column: 18, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16485, file: !243, line: 1099, column: 5)
!16485 = distinct !DILexicalBlock(scope: !16481, file: !243, line: 1098, column: 4)
!16486 = !DILocation(line: 1099, column: 24, scope: !16484)
!16487 = !DILocation(line: 1099, column: 32, scope: !16484)
!16488 = !DILocation(line: 1099, column: 41, scope: !16484)
!16489 = !DILocation(line: 1099, column: 47, scope: !16484)
!16490 = !DILocation(line: 1099, column: 38, scope: !16484)
!16491 = !DILocation(line: 1099, column: 15, scope: !16484)
!16492 = !DILocation(line: 1099, column: 13, scope: !16484)
!16493 = !DILocation(line: 1100, column: 4, scope: !16485)
!16494 = !DILocation(line: 1101, column: 17, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16477, file: !243, line: 1101, column: 4)
!16496 = !DILocation(line: 1101, column: 23, scope: !16495)
!16497 = !DILocation(line: 1101, column: 29, scope: !16495)
!16498 = !DILocation(line: 1101, column: 41, scope: !16495)
!16499 = !DILocation(line: 1101, column: 47, scope: !16495)
!16500 = !DILocation(line: 1101, column: 54, scope: !16495)
!16501 = !DILocation(line: 1101, column: 37, scope: !16495)
!16502 = !DILocation(line: 1101, column: 9, scope: !16495)
!16503 = !DILocation(line: 1101, column: 13, scope: !16495)
!16504 = !DILocation(line: 1101, column: 75, scope: !16495)
!16505 = !DILocation(line: 1101, column: 81, scope: !16495)
!16506 = !DILocation(line: 1101, column: 87, scope: !16495)
!16507 = !DILocation(line: 1101, column: 99, scope: !16495)
!16508 = !DILocation(line: 1101, column: 105, scope: !16495)
!16509 = !DILocation(line: 1101, column: 111, scope: !16495)
!16510 = !DILocation(line: 1101, column: 95, scope: !16495)
!16511 = !DILocation(line: 1101, column: 65, scope: !16495)
!16512 = !DILocation(line: 1101, column: 71, scope: !16495)
!16513 = !DILocation(line: 1101, column: 131, scope: !16495)
!16514 = !DILocation(line: 1101, column: 137, scope: !16495)
!16515 = !DILocation(line: 1101, column: 143, scope: !16495)
!16516 = !DILocation(line: 1101, column: 155, scope: !16495)
!16517 = !DILocation(line: 1101, column: 161, scope: !16495)
!16518 = !DILocation(line: 1101, column: 167, scope: !16495)
!16519 = !DILocation(line: 1101, column: 151, scope: !16495)
!16520 = !DILocation(line: 1101, column: 122, scope: !16495)
!16521 = !DILocation(line: 1101, column: 127, scope: !16495)
!16522 = !DILocation(line: 1102, column: 17, scope: !16477)
!16523 = !DILocation(line: 1102, column: 24, scope: !16477)
!16524 = !DILocation(line: 1102, column: 21, scope: !16477)
!16525 = !DILocation(line: 1102, column: 42, scope: !16477)
!16526 = !DILocation(line: 1102, column: 39, scope: !16477)
!16527 = !DILocation(line: 1102, column: 64, scope: !16477)
!16528 = !DILocation(line: 1102, column: 73, scope: !16477)
!16529 = !DILocation(line: 1102, column: 70, scope: !16477)
!16530 = !DILocation(line: 1102, column: 93, scope: !16477)
!16531 = !DILocation(line: 1102, column: 90, scope: !16477)
!16532 = !DILocation(line: 1102, column: 57, scope: !16477)
!16533 = !DILocation(line: 1102, column: 117, scope: !16477)
!16534 = !DILocation(line: 1102, column: 125, scope: !16477)
!16535 = !DILocation(line: 1102, column: 122, scope: !16477)
!16536 = !DILocation(line: 1102, column: 144, scope: !16477)
!16537 = !DILocation(line: 1102, column: 141, scope: !16477)
!16538 = !DILocation(line: 1102, column: 110, scope: !16477)
!16539 = !DILocation(line: 1102, column: 10, scope: !16477)
!16540 = !DILocation(line: 1103, column: 17, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16477, file: !243, line: 1103, column: 4)
!16542 = !DILocation(line: 1103, column: 11, scope: !16541)
!16543 = !DILocation(line: 1103, column: 15, scope: !16541)
!16544 = !DILocation(line: 1103, column: 35, scope: !16541)
!16545 = !DILocation(line: 1103, column: 41, scope: !16541)
!16546 = !DILocation(line: 1103, column: 29, scope: !16541)
!16547 = !DILocation(line: 1103, column: 33, scope: !16541)
!16548 = !DILocation(line: 1103, column: 58, scope: !16541)
!16549 = !DILocation(line: 1103, column: 64, scope: !16541)
!16550 = !DILocation(line: 1103, column: 52, scope: !16541)
!16551 = !DILocation(line: 1103, column: 56, scope: !16541)
!16552 = !DILocation(line: 1094, column: 3, scope: !16553)
!16553 = !DILexicalBlockFile(scope: !16470, file: !243, discriminator: 2)
!16554 = distinct !{!16554, !16469}
!16555 = !DILocation(line: 1106, column: 1, scope: !15959)
!16556 = distinct !DISubprogram(name: "translate15to16", scope: !243, file: !243, line: 1022, type: !13495, isLocal: true, isDefinition: true, scopeLine: 1023, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!16557 = !DILocalVariable(name: "data", arg: 1, scope: !16556, file: !243, line: 1022, type: !13497)
!16558 = !DILocation(line: 1022, column: 32, scope: !16556)
!16559 = !DILocalVariable(name: "out", arg: 2, scope: !16556, file: !243, line: 1022, type: !46)
!16560 = !DILocation(line: 1022, column: 46, scope: !16556)
!16561 = !DILocalVariable(name: "end", arg: 3, scope: !16556, file: !243, line: 1022, type: !46)
!16562 = !DILocation(line: 1022, column: 59, scope: !16556)
!16563 = !DILocalVariable(name: "pixel", scope: !16556, file: !243, line: 1024, type: !240)
!16564 = !DILocation(line: 1024, column: 9, scope: !16556)
!16565 = !DILocalVariable(name: "value", scope: !16556, file: !243, line: 1025, type: !240)
!16566 = !DILocation(line: 1025, column: 9, scope: !16556)
!16567 = !DILocalVariable(name: "pc", scope: !16556, file: !243, line: 1026, type: !4417)
!16568 = !DILocation(line: 1026, column: 14, scope: !16556)
!16569 = !DILocation(line: 1028, column: 6, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16556, file: !243, line: 1028, column: 6)
!16571 = !DILocation(line: 1028, column: 6, scope: !16556)
!16572 = !DILocation(line: 1030, column: 3, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16570, file: !243, line: 1029, column: 2)
!16574 = !DILocation(line: 1030, column: 10, scope: !16575)
!16575 = !DILexicalBlockFile(scope: !16573, file: !243, discriminator: 1)
!16576 = !DILocation(line: 1030, column: 16, scope: !16575)
!16577 = !DILocation(line: 1030, column: 14, scope: !16575)
!16578 = !DILocation(line: 1030, column: 3, scope: !16575)
!16579 = !DILocation(line: 1032, column: 18, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16573, file: !243, line: 1031, column: 3)
!16581 = !DILocation(line: 1032, column: 12, scope: !16580)
!16582 = !DILocation(line: 1032, column: 10, scope: !16580)
!16583 = !DILocation(line: 1033, column: 8, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16580, file: !243, line: 1033, column: 8)
!16585 = !DILocation(line: 1033, column: 8, scope: !16580)
!16586 = !DILocation(line: 1035, column: 18, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16588, file: !243, line: 1035, column: 5)
!16588 = distinct !DILexicalBlock(scope: !16584, file: !243, line: 1034, column: 4)
!16589 = !DILocation(line: 1035, column: 24, scope: !16587)
!16590 = !DILocation(line: 1035, column: 32, scope: !16587)
!16591 = !DILocation(line: 1035, column: 41, scope: !16587)
!16592 = !DILocation(line: 1035, column: 47, scope: !16587)
!16593 = !DILocation(line: 1035, column: 38, scope: !16587)
!16594 = !DILocation(line: 1035, column: 15, scope: !16587)
!16595 = !DILocation(line: 1035, column: 13, scope: !16587)
!16596 = !DILocation(line: 1036, column: 4, scope: !16588)
!16597 = !DILocation(line: 1037, column: 17, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16580, file: !243, line: 1037, column: 4)
!16599 = !DILocation(line: 1037, column: 23, scope: !16598)
!16600 = !DILocation(line: 1037, column: 29, scope: !16598)
!16601 = !DILocation(line: 1037, column: 41, scope: !16598)
!16602 = !DILocation(line: 1037, column: 47, scope: !16598)
!16603 = !DILocation(line: 1037, column: 54, scope: !16598)
!16604 = !DILocation(line: 1037, column: 37, scope: !16598)
!16605 = !DILocation(line: 1037, column: 9, scope: !16598)
!16606 = !DILocation(line: 1037, column: 13, scope: !16598)
!16607 = !DILocation(line: 1037, column: 75, scope: !16598)
!16608 = !DILocation(line: 1037, column: 81, scope: !16598)
!16609 = !DILocation(line: 1037, column: 87, scope: !16598)
!16610 = !DILocation(line: 1037, column: 99, scope: !16598)
!16611 = !DILocation(line: 1037, column: 105, scope: !16598)
!16612 = !DILocation(line: 1037, column: 111, scope: !16598)
!16613 = !DILocation(line: 1037, column: 95, scope: !16598)
!16614 = !DILocation(line: 1037, column: 65, scope: !16598)
!16615 = !DILocation(line: 1037, column: 71, scope: !16598)
!16616 = !DILocation(line: 1037, column: 131, scope: !16598)
!16617 = !DILocation(line: 1037, column: 137, scope: !16598)
!16618 = !DILocation(line: 1037, column: 143, scope: !16598)
!16619 = !DILocation(line: 1037, column: 155, scope: !16598)
!16620 = !DILocation(line: 1037, column: 161, scope: !16598)
!16621 = !DILocation(line: 1037, column: 167, scope: !16598)
!16622 = !DILocation(line: 1037, column: 151, scope: !16598)
!16623 = !DILocation(line: 1037, column: 122, scope: !16598)
!16624 = !DILocation(line: 1037, column: 127, scope: !16598)
!16625 = !DILocation(line: 1038, column: 17, scope: !16580)
!16626 = !DILocation(line: 1038, column: 24, scope: !16580)
!16627 = !DILocation(line: 1038, column: 21, scope: !16580)
!16628 = !DILocation(line: 1038, column: 42, scope: !16580)
!16629 = !DILocation(line: 1038, column: 39, scope: !16580)
!16630 = !DILocation(line: 1038, column: 64, scope: !16580)
!16631 = !DILocation(line: 1038, column: 73, scope: !16580)
!16632 = !DILocation(line: 1038, column: 70, scope: !16580)
!16633 = !DILocation(line: 1038, column: 93, scope: !16580)
!16634 = !DILocation(line: 1038, column: 90, scope: !16580)
!16635 = !DILocation(line: 1038, column: 57, scope: !16580)
!16636 = !DILocation(line: 1038, column: 117, scope: !16580)
!16637 = !DILocation(line: 1038, column: 125, scope: !16580)
!16638 = !DILocation(line: 1038, column: 122, scope: !16580)
!16639 = !DILocation(line: 1038, column: 144, scope: !16580)
!16640 = !DILocation(line: 1038, column: 141, scope: !16580)
!16641 = !DILocation(line: 1038, column: 110, scope: !16580)
!16642 = !DILocation(line: 1038, column: 12, scope: !16580)
!16643 = !DILocation(line: 1038, column: 10, scope: !16580)
!16644 = !DILocation(line: 1039, column: 17, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16580, file: !243, line: 1039, column: 4)
!16646 = !DILocation(line: 1039, column: 23, scope: !16645)
!16647 = !DILocation(line: 1039, column: 11, scope: !16645)
!16648 = !DILocation(line: 1039, column: 15, scope: !16645)
!16649 = !DILocation(line: 1039, column: 40, scope: !16645)
!16650 = !DILocation(line: 1039, column: 34, scope: !16645)
!16651 = !DILocation(line: 1039, column: 38, scope: !16645)
!16652 = !DILocation(line: 1030, column: 3, scope: !16653)
!16653 = !DILexicalBlockFile(scope: !16573, file: !243, discriminator: 2)
!16654 = distinct !{!16654, !16572}
!16655 = !DILocation(line: 1041, column: 2, scope: !16573)
!16656 = !DILocation(line: 1044, column: 3, scope: !16657)
!16657 = distinct !DILexicalBlock(scope: !16570, file: !243, line: 1043, column: 2)
!16658 = !DILocation(line: 1044, column: 10, scope: !16659)
!16659 = !DILexicalBlockFile(scope: !16657, file: !243, discriminator: 1)
!16660 = !DILocation(line: 1044, column: 16, scope: !16659)
!16661 = !DILocation(line: 1044, column: 14, scope: !16659)
!16662 = !DILocation(line: 1044, column: 3, scope: !16659)
!16663 = !DILocation(line: 1046, column: 18, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16657, file: !243, line: 1045, column: 3)
!16665 = !DILocation(line: 1046, column: 12, scope: !16664)
!16666 = !DILocation(line: 1046, column: 10, scope: !16664)
!16667 = !DILocation(line: 1047, column: 8, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16664, file: !243, line: 1047, column: 8)
!16669 = !DILocation(line: 1047, column: 8, scope: !16664)
!16670 = !DILocation(line: 1049, column: 18, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16672, file: !243, line: 1049, column: 5)
!16672 = distinct !DILexicalBlock(scope: !16668, file: !243, line: 1048, column: 4)
!16673 = !DILocation(line: 1049, column: 24, scope: !16671)
!16674 = !DILocation(line: 1049, column: 32, scope: !16671)
!16675 = !DILocation(line: 1049, column: 41, scope: !16671)
!16676 = !DILocation(line: 1049, column: 47, scope: !16671)
!16677 = !DILocation(line: 1049, column: 38, scope: !16671)
!16678 = !DILocation(line: 1049, column: 15, scope: !16671)
!16679 = !DILocation(line: 1049, column: 13, scope: !16671)
!16680 = !DILocation(line: 1050, column: 4, scope: !16672)
!16681 = !DILocation(line: 1051, column: 17, scope: !16682)
!16682 = distinct !DILexicalBlock(scope: !16664, file: !243, line: 1051, column: 4)
!16683 = !DILocation(line: 1051, column: 23, scope: !16682)
!16684 = !DILocation(line: 1051, column: 29, scope: !16682)
!16685 = !DILocation(line: 1051, column: 41, scope: !16682)
!16686 = !DILocation(line: 1051, column: 47, scope: !16682)
!16687 = !DILocation(line: 1051, column: 54, scope: !16682)
!16688 = !DILocation(line: 1051, column: 37, scope: !16682)
!16689 = !DILocation(line: 1051, column: 9, scope: !16682)
!16690 = !DILocation(line: 1051, column: 13, scope: !16682)
!16691 = !DILocation(line: 1051, column: 75, scope: !16682)
!16692 = !DILocation(line: 1051, column: 81, scope: !16682)
!16693 = !DILocation(line: 1051, column: 87, scope: !16682)
!16694 = !DILocation(line: 1051, column: 99, scope: !16682)
!16695 = !DILocation(line: 1051, column: 105, scope: !16682)
!16696 = !DILocation(line: 1051, column: 111, scope: !16682)
!16697 = !DILocation(line: 1051, column: 95, scope: !16682)
!16698 = !DILocation(line: 1051, column: 65, scope: !16682)
!16699 = !DILocation(line: 1051, column: 71, scope: !16682)
!16700 = !DILocation(line: 1051, column: 131, scope: !16682)
!16701 = !DILocation(line: 1051, column: 137, scope: !16682)
!16702 = !DILocation(line: 1051, column: 143, scope: !16682)
!16703 = !DILocation(line: 1051, column: 155, scope: !16682)
!16704 = !DILocation(line: 1051, column: 161, scope: !16682)
!16705 = !DILocation(line: 1051, column: 167, scope: !16682)
!16706 = !DILocation(line: 1051, column: 151, scope: !16682)
!16707 = !DILocation(line: 1051, column: 122, scope: !16682)
!16708 = !DILocation(line: 1051, column: 127, scope: !16682)
!16709 = !DILocation(line: 1052, column: 17, scope: !16664)
!16710 = !DILocation(line: 1052, column: 24, scope: !16664)
!16711 = !DILocation(line: 1052, column: 21, scope: !16664)
!16712 = !DILocation(line: 1052, column: 42, scope: !16664)
!16713 = !DILocation(line: 1052, column: 39, scope: !16664)
!16714 = !DILocation(line: 1052, column: 64, scope: !16664)
!16715 = !DILocation(line: 1052, column: 73, scope: !16664)
!16716 = !DILocation(line: 1052, column: 70, scope: !16664)
!16717 = !DILocation(line: 1052, column: 93, scope: !16664)
!16718 = !DILocation(line: 1052, column: 90, scope: !16664)
!16719 = !DILocation(line: 1052, column: 57, scope: !16664)
!16720 = !DILocation(line: 1052, column: 117, scope: !16664)
!16721 = !DILocation(line: 1052, column: 125, scope: !16664)
!16722 = !DILocation(line: 1052, column: 122, scope: !16664)
!16723 = !DILocation(line: 1052, column: 144, scope: !16664)
!16724 = !DILocation(line: 1052, column: 141, scope: !16664)
!16725 = !DILocation(line: 1052, column: 110, scope: !16664)
!16726 = !DILocation(line: 1052, column: 12, scope: !16664)
!16727 = !DILocation(line: 1052, column: 10, scope: !16664)
!16728 = !DILocation(line: 1053, column: 17, scope: !16729)
!16729 = distinct !DILexicalBlock(scope: !16664, file: !243, line: 1053, column: 4)
!16730 = !DILocation(line: 1053, column: 11, scope: !16729)
!16731 = !DILocation(line: 1053, column: 15, scope: !16729)
!16732 = !DILocation(line: 1053, column: 35, scope: !16729)
!16733 = !DILocation(line: 1053, column: 41, scope: !16729)
!16734 = !DILocation(line: 1053, column: 29, scope: !16729)
!16735 = !DILocation(line: 1053, column: 33, scope: !16729)
!16736 = !DILocation(line: 1044, column: 3, scope: !16737)
!16737 = !DILexicalBlockFile(scope: !16657, file: !243, discriminator: 2)
!16738 = distinct !{!16738, !16656}
!16739 = !DILocation(line: 1056, column: 1, scope: !16556)
!16740 = distinct !DISubprogram(name: "translate8to8", scope: !243, file: !243, line: 925, type: !12951, isLocal: true, isDefinition: true, scopeLine: 926, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!16741 = !DILocalVariable(name: "data", arg: 1, scope: !16740, file: !243, line: 925, type: !12953)
!16742 = !DILocation(line: 925, column: 29, scope: !16740)
!16743 = !DILocalVariable(name: "out", arg: 2, scope: !16740, file: !243, line: 925, type: !46)
!16744 = !DILocation(line: 925, column: 43, scope: !16740)
!16745 = !DILocalVariable(name: "end", arg: 3, scope: !16740, file: !243, line: 925, type: !46)
!16746 = !DILocation(line: 925, column: 56, scope: !16740)
!16747 = !DILocation(line: 927, column: 2, scope: !16740)
!16748 = !DILocation(line: 927, column: 9, scope: !16749)
!16749 = !DILexicalBlockFile(scope: !16740, file: !243, discriminator: 1)
!16750 = !DILocation(line: 927, column: 15, scope: !16749)
!16751 = !DILocation(line: 927, column: 13, scope: !16749)
!16752 = !DILocation(line: 927, column: 2, scope: !16749)
!16753 = !DILocation(line: 928, column: 37, scope: !16740)
!16754 = !DILocation(line: 928, column: 31, scope: !16740)
!16755 = !DILocation(line: 928, column: 22, scope: !16740)
!16756 = !DILocation(line: 928, column: 14, scope: !16740)
!16757 = !DILocation(line: 928, column: 8, scope: !16740)
!16758 = !DILocation(line: 928, column: 12, scope: !16740)
!16759 = !DILocation(line: 927, column: 2, scope: !16760)
!16760 = !DILexicalBlockFile(scope: !16740, file: !243, discriminator: 2)
!16761 = distinct !{!16761, !16747}
!16762 = !DILocation(line: 929, column: 1, scope: !16740)
!16763 = distinct !DISubprogram(name: "translate8to16", scope: !243, file: !243, line: 932, type: !12951, isLocal: true, isDefinition: true, scopeLine: 933, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!16764 = !DILocalVariable(name: "data", arg: 1, scope: !16763, file: !243, line: 932, type: !12953)
!16765 = !DILocation(line: 932, column: 30, scope: !16763)
!16766 = !DILocalVariable(name: "out", arg: 2, scope: !16763, file: !243, line: 932, type: !46)
!16767 = !DILocation(line: 932, column: 44, scope: !16763)
!16768 = !DILocalVariable(name: "end", arg: 3, scope: !16763, file: !243, line: 932, type: !46)
!16769 = !DILocation(line: 932, column: 57, scope: !16763)
!16770 = !DILocalVariable(name: "value", scope: !16763, file: !243, line: 934, type: !240)
!16771 = !DILocation(line: 934, column: 9, scope: !16763)
!16772 = !DILocation(line: 936, column: 6, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16763, file: !243, line: 936, column: 6)
!16774 = !DILocation(line: 936, column: 6, scope: !16763)
!16775 = !DILocation(line: 939, column: 5, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16777, file: !243, line: 939, column: 3)
!16777 = distinct !DILexicalBlock(scope: !16773, file: !243, line: 937, column: 2)
!16778 = !DILocation(line: 939, column: 12, scope: !16779)
!16779 = !DILexicalBlockFile(scope: !16776, file: !243, discriminator: 1)
!16780 = !DILocation(line: 939, column: 19, scope: !16779)
!16781 = !DILocation(line: 939, column: 23, scope: !16779)
!16782 = !DILocation(line: 939, column: 16, scope: !16779)
!16783 = !DILocation(line: 939, column: 5, scope: !16779)
!16784 = !DILocation(line: 939, column: 69, scope: !16785)
!16785 = !DILexicalBlockFile(scope: !16786, file: !243, discriminator: 2)
!16786 = distinct !DILexicalBlock(scope: !16776, file: !243, line: 939, column: 32)
!16787 = !DILocation(line: 939, column: 63, scope: !16785)
!16788 = !DILocation(line: 939, column: 54, scope: !16785)
!16789 = !DILocation(line: 939, column: 47, scope: !16785)
!16790 = !DILocation(line: 939, column: 34, scope: !16785)
!16791 = !DILocation(line: 939, column: 52, scope: !16785)
!16792 = !DILocation(line: 939, column: 79, scope: !16785)
!16793 = !DILocation(line: 939, column: 120, scope: !16785)
!16794 = !DILocation(line: 939, column: 114, scope: !16785)
!16795 = !DILocation(line: 939, column: 105, scope: !16785)
!16796 = !DILocation(line: 939, column: 98, scope: !16785)
!16797 = !DILocation(line: 939, column: 85, scope: !16785)
!16798 = !DILocation(line: 939, column: 103, scope: !16785)
!16799 = !DILocation(line: 939, column: 130, scope: !16785)
!16800 = !DILocation(line: 939, column: 171, scope: !16785)
!16801 = !DILocation(line: 939, column: 165, scope: !16785)
!16802 = !DILocation(line: 939, column: 156, scope: !16785)
!16803 = !DILocation(line: 939, column: 149, scope: !16785)
!16804 = !DILocation(line: 939, column: 136, scope: !16785)
!16805 = !DILocation(line: 939, column: 154, scope: !16785)
!16806 = !DILocation(line: 939, column: 181, scope: !16785)
!16807 = !DILocation(line: 939, column: 222, scope: !16785)
!16808 = !DILocation(line: 939, column: 216, scope: !16785)
!16809 = !DILocation(line: 939, column: 207, scope: !16785)
!16810 = !DILocation(line: 939, column: 200, scope: !16785)
!16811 = !DILocation(line: 939, column: 187, scope: !16785)
!16812 = !DILocation(line: 939, column: 205, scope: !16785)
!16813 = !DILocation(line: 939, column: 232, scope: !16785)
!16814 = !DILocation(line: 939, column: 273, scope: !16785)
!16815 = !DILocation(line: 939, column: 267, scope: !16785)
!16816 = !DILocation(line: 939, column: 258, scope: !16785)
!16817 = !DILocation(line: 939, column: 251, scope: !16785)
!16818 = !DILocation(line: 939, column: 238, scope: !16785)
!16819 = !DILocation(line: 939, column: 256, scope: !16785)
!16820 = !DILocation(line: 939, column: 283, scope: !16785)
!16821 = !DILocation(line: 939, column: 324, scope: !16785)
!16822 = !DILocation(line: 939, column: 318, scope: !16785)
!16823 = !DILocation(line: 939, column: 309, scope: !16785)
!16824 = !DILocation(line: 939, column: 302, scope: !16785)
!16825 = !DILocation(line: 939, column: 289, scope: !16785)
!16826 = !DILocation(line: 939, column: 307, scope: !16785)
!16827 = !DILocation(line: 939, column: 334, scope: !16785)
!16828 = !DILocation(line: 939, column: 375, scope: !16785)
!16829 = !DILocation(line: 939, column: 369, scope: !16785)
!16830 = !DILocation(line: 939, column: 360, scope: !16785)
!16831 = !DILocation(line: 939, column: 353, scope: !16785)
!16832 = !DILocation(line: 939, column: 340, scope: !16785)
!16833 = !DILocation(line: 939, column: 358, scope: !16785)
!16834 = !DILocation(line: 939, column: 385, scope: !16785)
!16835 = !DILocation(line: 939, column: 426, scope: !16785)
!16836 = !DILocation(line: 939, column: 420, scope: !16785)
!16837 = !DILocation(line: 939, column: 411, scope: !16785)
!16838 = !DILocation(line: 939, column: 404, scope: !16785)
!16839 = !DILocation(line: 939, column: 391, scope: !16785)
!16840 = !DILocation(line: 939, column: 409, scope: !16785)
!16841 = !DILocation(line: 939, column: 436, scope: !16785)
!16842 = !DILocation(line: 939, column: 5, scope: !16785)
!16843 = distinct !{!16843, !16775}
!16844 = !DILocation(line: 939, column: 444, scope: !16845)
!16845 = !DILexicalBlockFile(scope: !16776, file: !243, discriminator: 3)
!16846 = !DILocation(line: 939, column: 451, scope: !16847)
!16847 = !DILexicalBlockFile(scope: !16776, file: !243, discriminator: 4)
!16848 = !DILocation(line: 939, column: 457, scope: !16847)
!16849 = !DILocation(line: 939, column: 455, scope: !16847)
!16850 = !DILocation(line: 939, column: 444, scope: !16847)
!16851 = !DILocation(line: 939, column: 499, scope: !16852)
!16852 = !DILexicalBlockFile(scope: !16853, file: !243, discriminator: 5)
!16853 = distinct !DILexicalBlock(scope: !16776, file: !243, line: 939, column: 462)
!16854 = !DILocation(line: 939, column: 493, scope: !16852)
!16855 = !DILocation(line: 939, column: 484, scope: !16852)
!16856 = !DILocation(line: 939, column: 477, scope: !16852)
!16857 = !DILocation(line: 939, column: 464, scope: !16852)
!16858 = !DILocation(line: 939, column: 482, scope: !16852)
!16859 = !DILocation(line: 939, column: 509, scope: !16852)
!16860 = !DILocation(line: 939, column: 444, scope: !16852)
!16861 = distinct !{!16861, !16862}
!16862 = !DILocation(line: 939, column: 444, scope: !16776)
!16863 = !DILocation(line: 945, column: 2, scope: !16777)
!16864 = !DILocation(line: 946, column: 11, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16773, file: !243, line: 946, column: 11)
!16866 = !DILocation(line: 946, column: 11, scope: !16773)
!16867 = !DILocation(line: 948, column: 3, scope: !16868)
!16868 = distinct !DILexicalBlock(scope: !16865, file: !243, line: 947, column: 2)
!16869 = !DILocation(line: 948, column: 10, scope: !16870)
!16870 = !DILexicalBlockFile(scope: !16868, file: !243, discriminator: 1)
!16871 = !DILocation(line: 948, column: 16, scope: !16870)
!16872 = !DILocation(line: 948, column: 14, scope: !16870)
!16873 = !DILocation(line: 948, column: 3, scope: !16870)
!16874 = !DILocation(line: 950, column: 36, scope: !16875)
!16875 = distinct !DILexicalBlock(scope: !16868, file: !243, line: 949, column: 3)
!16876 = !DILocation(line: 950, column: 30, scope: !16875)
!16877 = !DILocation(line: 950, column: 21, scope: !16875)
!16878 = !DILocation(line: 950, column: 12, scope: !16875)
!16879 = !DILocation(line: 950, column: 10, scope: !16875)
!16880 = !DILocation(line: 951, column: 17, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16875, file: !243, line: 951, column: 4)
!16882 = !DILocation(line: 951, column: 23, scope: !16881)
!16883 = !DILocation(line: 951, column: 11, scope: !16881)
!16884 = !DILocation(line: 951, column: 15, scope: !16881)
!16885 = !DILocation(line: 951, column: 40, scope: !16881)
!16886 = !DILocation(line: 951, column: 34, scope: !16881)
!16887 = !DILocation(line: 951, column: 38, scope: !16881)
!16888 = !DILocation(line: 948, column: 3, scope: !16889)
!16889 = !DILexicalBlockFile(scope: !16868, file: !243, discriminator: 2)
!16890 = distinct !{!16890, !16867}
!16891 = !DILocation(line: 953, column: 2, scope: !16868)
!16892 = !DILocation(line: 956, column: 3, scope: !16893)
!16893 = distinct !DILexicalBlock(scope: !16865, file: !243, line: 955, column: 2)
!16894 = !DILocation(line: 956, column: 10, scope: !16895)
!16895 = !DILexicalBlockFile(scope: !16893, file: !243, discriminator: 1)
!16896 = !DILocation(line: 956, column: 16, scope: !16895)
!16897 = !DILocation(line: 956, column: 14, scope: !16895)
!16898 = !DILocation(line: 956, column: 3, scope: !16895)
!16899 = !DILocation(line: 958, column: 36, scope: !16900)
!16900 = distinct !DILexicalBlock(scope: !16893, file: !243, line: 957, column: 3)
!16901 = !DILocation(line: 958, column: 30, scope: !16900)
!16902 = !DILocation(line: 958, column: 21, scope: !16900)
!16903 = !DILocation(line: 958, column: 12, scope: !16900)
!16904 = !DILocation(line: 958, column: 10, scope: !16900)
!16905 = !DILocation(line: 959, column: 17, scope: !16906)
!16906 = distinct !DILexicalBlock(scope: !16900, file: !243, line: 959, column: 4)
!16907 = !DILocation(line: 959, column: 11, scope: !16906)
!16908 = !DILocation(line: 959, column: 15, scope: !16906)
!16909 = !DILocation(line: 959, column: 35, scope: !16906)
!16910 = !DILocation(line: 959, column: 41, scope: !16906)
!16911 = !DILocation(line: 959, column: 29, scope: !16906)
!16912 = !DILocation(line: 959, column: 33, scope: !16906)
!16913 = !DILocation(line: 956, column: 3, scope: !16914)
!16914 = !DILexicalBlockFile(scope: !16893, file: !243, discriminator: 2)
!16915 = distinct !{!16915, !16892}
!16916 = !DILocation(line: 962, column: 1, scope: !16763)
!16917 = distinct !DISubprogram(name: "translate8to24", scope: !243, file: !243, line: 966, type: !12951, isLocal: true, isDefinition: true, scopeLine: 967, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!16918 = !DILocalVariable(name: "data", arg: 1, scope: !16917, file: !243, line: 966, type: !12953)
!16919 = !DILocation(line: 966, column: 30, scope: !16917)
!16920 = !DILocalVariable(name: "out", arg: 2, scope: !16917, file: !243, line: 966, type: !46)
!16921 = !DILocation(line: 966, column: 44, scope: !16917)
!16922 = !DILocalVariable(name: "end", arg: 3, scope: !16917, file: !243, line: 966, type: !46)
!16923 = !DILocation(line: 966, column: 57, scope: !16917)
!16924 = !DILocalVariable(name: "value", scope: !16917, file: !243, line: 968, type: !193)
!16925 = !DILocation(line: 968, column: 9, scope: !16917)
!16926 = !DILocation(line: 970, column: 6, scope: !16927)
!16927 = distinct !DILexicalBlock(scope: !16917, file: !243, line: 970, column: 6)
!16928 = !DILocation(line: 970, column: 6, scope: !16917)
!16929 = !DILocation(line: 972, column: 3, scope: !16930)
!16930 = distinct !DILexicalBlock(scope: !16927, file: !243, line: 971, column: 2)
!16931 = !DILocation(line: 972, column: 10, scope: !16932)
!16932 = !DILexicalBlockFile(scope: !16930, file: !243, discriminator: 1)
!16933 = !DILocation(line: 972, column: 16, scope: !16932)
!16934 = !DILocation(line: 972, column: 14, scope: !16932)
!16935 = !DILocation(line: 972, column: 3, scope: !16932)
!16936 = !DILocation(line: 974, column: 27, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16930, file: !243, line: 973, column: 3)
!16938 = !DILocation(line: 974, column: 21, scope: !16937)
!16939 = !DILocation(line: 974, column: 12, scope: !16937)
!16940 = !DILocation(line: 974, column: 10, scope: !16937)
!16941 = !DILocation(line: 975, column: 17, scope: !16942)
!16942 = distinct !DILexicalBlock(scope: !16937, file: !243, line: 975, column: 4)
!16943 = !DILocation(line: 975, column: 23, scope: !16942)
!16944 = !DILocation(line: 975, column: 11, scope: !16942)
!16945 = !DILocation(line: 975, column: 15, scope: !16942)
!16946 = !DILocation(line: 975, column: 41, scope: !16942)
!16947 = !DILocation(line: 975, column: 47, scope: !16942)
!16948 = !DILocation(line: 975, column: 35, scope: !16942)
!16949 = !DILocation(line: 975, column: 39, scope: !16942)
!16950 = !DILocation(line: 975, column: 64, scope: !16942)
!16951 = !DILocation(line: 975, column: 58, scope: !16942)
!16952 = !DILocation(line: 975, column: 62, scope: !16942)
!16953 = !DILocation(line: 972, column: 3, scope: !16954)
!16954 = !DILexicalBlockFile(scope: !16930, file: !243, discriminator: 2)
!16955 = distinct !{!16955, !16929}
!16956 = !DILocation(line: 977, column: 2, scope: !16930)
!16957 = !DILocation(line: 980, column: 3, scope: !16958)
!16958 = distinct !DILexicalBlock(scope: !16927, file: !243, line: 979, column: 2)
!16959 = !DILocation(line: 980, column: 10, scope: !16960)
!16960 = !DILexicalBlockFile(scope: !16958, file: !243, discriminator: 1)
!16961 = !DILocation(line: 980, column: 16, scope: !16960)
!16962 = !DILocation(line: 980, column: 14, scope: !16960)
!16963 = !DILocation(line: 980, column: 3, scope: !16960)
!16964 = !DILocation(line: 982, column: 27, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16958, file: !243, line: 981, column: 3)
!16966 = !DILocation(line: 982, column: 21, scope: !16965)
!16967 = !DILocation(line: 982, column: 12, scope: !16965)
!16968 = !DILocation(line: 982, column: 10, scope: !16965)
!16969 = !DILocation(line: 983, column: 17, scope: !16970)
!16970 = distinct !DILexicalBlock(scope: !16965, file: !243, line: 983, column: 4)
!16971 = !DILocation(line: 983, column: 11, scope: !16970)
!16972 = !DILocation(line: 983, column: 15, scope: !16970)
!16973 = !DILocation(line: 983, column: 35, scope: !16970)
!16974 = !DILocation(line: 983, column: 41, scope: !16970)
!16975 = !DILocation(line: 983, column: 29, scope: !16970)
!16976 = !DILocation(line: 983, column: 33, scope: !16970)
!16977 = !DILocation(line: 983, column: 58, scope: !16970)
!16978 = !DILocation(line: 983, column: 64, scope: !16970)
!16979 = !DILocation(line: 983, column: 52, scope: !16970)
!16980 = !DILocation(line: 983, column: 56, scope: !16970)
!16981 = !DILocation(line: 980, column: 3, scope: !16982)
!16982 = !DILexicalBlockFile(scope: !16958, file: !243, discriminator: 2)
!16983 = distinct !{!16983, !16957}
!16984 = !DILocation(line: 986, column: 1, scope: !16917)
!16985 = distinct !DISubprogram(name: "translate8to32", scope: !243, file: !243, line: 989, type: !12951, isLocal: true, isDefinition: true, scopeLine: 990, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!16986 = !DILocalVariable(name: "data", arg: 1, scope: !16985, file: !243, line: 989, type: !12953)
!16987 = !DILocation(line: 989, column: 30, scope: !16985)
!16988 = !DILocalVariable(name: "out", arg: 2, scope: !16985, file: !243, line: 989, type: !46)
!16989 = !DILocation(line: 989, column: 44, scope: !16985)
!16990 = !DILocalVariable(name: "end", arg: 3, scope: !16985, file: !243, line: 989, type: !46)
!16991 = !DILocation(line: 989, column: 57, scope: !16985)
!16992 = !DILocalVariable(name: "value", scope: !16985, file: !243, line: 991, type: !193)
!16993 = !DILocation(line: 991, column: 9, scope: !16985)
!16994 = !DILocation(line: 993, column: 6, scope: !16995)
!16995 = distinct !DILexicalBlock(scope: !16985, file: !243, line: 993, column: 6)
!16996 = !DILocation(line: 993, column: 6, scope: !16985)
!16997 = !DILocation(line: 996, column: 5, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16999, file: !243, line: 996, column: 3)
!16999 = distinct !DILexicalBlock(scope: !16995, file: !243, line: 994, column: 2)
!17000 = !DILocation(line: 996, column: 12, scope: !17001)
!17001 = !DILexicalBlockFile(scope: !16998, file: !243, discriminator: 1)
!17002 = !DILocation(line: 996, column: 19, scope: !17001)
!17003 = !DILocation(line: 996, column: 23, scope: !17001)
!17004 = !DILocation(line: 996, column: 16, scope: !17001)
!17005 = !DILocation(line: 996, column: 5, scope: !17001)
!17006 = !DILocation(line: 996, column: 69, scope: !17007)
!17007 = !DILexicalBlockFile(scope: !17008, file: !243, discriminator: 2)
!17008 = distinct !DILexicalBlock(scope: !16998, file: !243, line: 996, column: 32)
!17009 = !DILocation(line: 996, column: 63, scope: !17007)
!17010 = !DILocation(line: 996, column: 54, scope: !17007)
!17011 = !DILocation(line: 996, column: 47, scope: !17007)
!17012 = !DILocation(line: 996, column: 34, scope: !17007)
!17013 = !DILocation(line: 996, column: 52, scope: !17007)
!17014 = !DILocation(line: 996, column: 79, scope: !17007)
!17015 = !DILocation(line: 996, column: 120, scope: !17007)
!17016 = !DILocation(line: 996, column: 114, scope: !17007)
!17017 = !DILocation(line: 996, column: 105, scope: !17007)
!17018 = !DILocation(line: 996, column: 98, scope: !17007)
!17019 = !DILocation(line: 996, column: 85, scope: !17007)
!17020 = !DILocation(line: 996, column: 103, scope: !17007)
!17021 = !DILocation(line: 996, column: 130, scope: !17007)
!17022 = !DILocation(line: 996, column: 171, scope: !17007)
!17023 = !DILocation(line: 996, column: 165, scope: !17007)
!17024 = !DILocation(line: 996, column: 156, scope: !17007)
!17025 = !DILocation(line: 996, column: 149, scope: !17007)
!17026 = !DILocation(line: 996, column: 136, scope: !17007)
!17027 = !DILocation(line: 996, column: 154, scope: !17007)
!17028 = !DILocation(line: 996, column: 181, scope: !17007)
!17029 = !DILocation(line: 996, column: 222, scope: !17007)
!17030 = !DILocation(line: 996, column: 216, scope: !17007)
!17031 = !DILocation(line: 996, column: 207, scope: !17007)
!17032 = !DILocation(line: 996, column: 200, scope: !17007)
!17033 = !DILocation(line: 996, column: 187, scope: !17007)
!17034 = !DILocation(line: 996, column: 205, scope: !17007)
!17035 = !DILocation(line: 996, column: 232, scope: !17007)
!17036 = !DILocation(line: 996, column: 273, scope: !17007)
!17037 = !DILocation(line: 996, column: 267, scope: !17007)
!17038 = !DILocation(line: 996, column: 258, scope: !17007)
!17039 = !DILocation(line: 996, column: 251, scope: !17007)
!17040 = !DILocation(line: 996, column: 238, scope: !17007)
!17041 = !DILocation(line: 996, column: 256, scope: !17007)
!17042 = !DILocation(line: 996, column: 283, scope: !17007)
!17043 = !DILocation(line: 996, column: 324, scope: !17007)
!17044 = !DILocation(line: 996, column: 318, scope: !17007)
!17045 = !DILocation(line: 996, column: 309, scope: !17007)
!17046 = !DILocation(line: 996, column: 302, scope: !17007)
!17047 = !DILocation(line: 996, column: 289, scope: !17007)
!17048 = !DILocation(line: 996, column: 307, scope: !17007)
!17049 = !DILocation(line: 996, column: 334, scope: !17007)
!17050 = !DILocation(line: 996, column: 375, scope: !17007)
!17051 = !DILocation(line: 996, column: 369, scope: !17007)
!17052 = !DILocation(line: 996, column: 360, scope: !17007)
!17053 = !DILocation(line: 996, column: 353, scope: !17007)
!17054 = !DILocation(line: 996, column: 340, scope: !17007)
!17055 = !DILocation(line: 996, column: 358, scope: !17007)
!17056 = !DILocation(line: 996, column: 385, scope: !17007)
!17057 = !DILocation(line: 996, column: 426, scope: !17007)
!17058 = !DILocation(line: 996, column: 420, scope: !17007)
!17059 = !DILocation(line: 996, column: 411, scope: !17007)
!17060 = !DILocation(line: 996, column: 404, scope: !17007)
!17061 = !DILocation(line: 996, column: 391, scope: !17007)
!17062 = !DILocation(line: 996, column: 409, scope: !17007)
!17063 = !DILocation(line: 996, column: 436, scope: !17007)
!17064 = !DILocation(line: 996, column: 5, scope: !17007)
!17065 = distinct !{!17065, !16997}
!17066 = !DILocation(line: 996, column: 444, scope: !17067)
!17067 = !DILexicalBlockFile(scope: !16998, file: !243, discriminator: 3)
!17068 = !DILocation(line: 996, column: 451, scope: !17069)
!17069 = !DILexicalBlockFile(scope: !16998, file: !243, discriminator: 4)
!17070 = !DILocation(line: 996, column: 457, scope: !17069)
!17071 = !DILocation(line: 996, column: 455, scope: !17069)
!17072 = !DILocation(line: 996, column: 444, scope: !17069)
!17073 = !DILocation(line: 996, column: 499, scope: !17074)
!17074 = !DILexicalBlockFile(scope: !17075, file: !243, discriminator: 5)
!17075 = distinct !DILexicalBlock(scope: !16998, file: !243, line: 996, column: 462)
!17076 = !DILocation(line: 996, column: 493, scope: !17074)
!17077 = !DILocation(line: 996, column: 484, scope: !17074)
!17078 = !DILocation(line: 996, column: 477, scope: !17074)
!17079 = !DILocation(line: 996, column: 464, scope: !17074)
!17080 = !DILocation(line: 996, column: 482, scope: !17074)
!17081 = !DILocation(line: 996, column: 509, scope: !17074)
!17082 = !DILocation(line: 996, column: 444, scope: !17074)
!17083 = distinct !{!17083, !17084}
!17084 = !DILocation(line: 996, column: 444, scope: !16998)
!17085 = !DILocation(line: 1002, column: 2, scope: !16999)
!17086 = !DILocation(line: 1003, column: 11, scope: !17087)
!17087 = distinct !DILexicalBlock(scope: !16995, file: !243, line: 1003, column: 11)
!17088 = !DILocation(line: 1003, column: 11, scope: !16995)
!17089 = !DILocation(line: 1005, column: 3, scope: !17090)
!17090 = distinct !DILexicalBlock(scope: !17087, file: !243, line: 1004, column: 2)
!17091 = !DILocation(line: 1005, column: 10, scope: !17092)
!17092 = !DILexicalBlockFile(scope: !17090, file: !243, discriminator: 1)
!17093 = !DILocation(line: 1005, column: 16, scope: !17092)
!17094 = !DILocation(line: 1005, column: 14, scope: !17092)
!17095 = !DILocation(line: 1005, column: 3, scope: !17092)
!17096 = !DILocation(line: 1007, column: 27, scope: !17097)
!17097 = distinct !DILexicalBlock(scope: !17090, file: !243, line: 1006, column: 3)
!17098 = !DILocation(line: 1007, column: 21, scope: !17097)
!17099 = !DILocation(line: 1007, column: 12, scope: !17097)
!17100 = !DILocation(line: 1007, column: 10, scope: !17097)
!17101 = !DILocation(line: 1008, column: 17, scope: !17102)
!17102 = distinct !DILexicalBlock(scope: !17097, file: !243, line: 1008, column: 4)
!17103 = !DILocation(line: 1008, column: 23, scope: !17102)
!17104 = !DILocation(line: 1008, column: 11, scope: !17102)
!17105 = !DILocation(line: 1008, column: 15, scope: !17102)
!17106 = !DILocation(line: 1008, column: 41, scope: !17102)
!17107 = !DILocation(line: 1008, column: 47, scope: !17102)
!17108 = !DILocation(line: 1008, column: 35, scope: !17102)
!17109 = !DILocation(line: 1008, column: 39, scope: !17102)
!17110 = !DILocation(line: 1008, column: 65, scope: !17102)
!17111 = !DILocation(line: 1008, column: 71, scope: !17102)
!17112 = !DILocation(line: 1008, column: 59, scope: !17102)
!17113 = !DILocation(line: 1008, column: 63, scope: !17102)
!17114 = !DILocation(line: 1008, column: 88, scope: !17102)
!17115 = !DILocation(line: 1008, column: 82, scope: !17102)
!17116 = !DILocation(line: 1008, column: 86, scope: !17102)
!17117 = !DILocation(line: 1005, column: 3, scope: !17118)
!17118 = !DILexicalBlockFile(scope: !17090, file: !243, discriminator: 2)
!17119 = distinct !{!17119, !17089}
!17120 = !DILocation(line: 1010, column: 2, scope: !17090)
!17121 = !DILocation(line: 1013, column: 3, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17087, file: !243, line: 1012, column: 2)
!17123 = !DILocation(line: 1013, column: 10, scope: !17124)
!17124 = !DILexicalBlockFile(scope: !17122, file: !243, discriminator: 1)
!17125 = !DILocation(line: 1013, column: 16, scope: !17124)
!17126 = !DILocation(line: 1013, column: 14, scope: !17124)
!17127 = !DILocation(line: 1013, column: 3, scope: !17124)
!17128 = !DILocation(line: 1015, column: 27, scope: !17129)
!17129 = distinct !DILexicalBlock(scope: !17122, file: !243, line: 1014, column: 3)
!17130 = !DILocation(line: 1015, column: 21, scope: !17129)
!17131 = !DILocation(line: 1015, column: 12, scope: !17129)
!17132 = !DILocation(line: 1015, column: 10, scope: !17129)
!17133 = !DILocation(line: 1016, column: 17, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17129, file: !243, line: 1016, column: 4)
!17135 = !DILocation(line: 1016, column: 11, scope: !17134)
!17136 = !DILocation(line: 1016, column: 15, scope: !17134)
!17137 = !DILocation(line: 1016, column: 35, scope: !17134)
!17138 = !DILocation(line: 1016, column: 41, scope: !17134)
!17139 = !DILocation(line: 1016, column: 29, scope: !17134)
!17140 = !DILocation(line: 1016, column: 33, scope: !17134)
!17141 = !DILocation(line: 1016, column: 58, scope: !17134)
!17142 = !DILocation(line: 1016, column: 64, scope: !17134)
!17143 = !DILocation(line: 1016, column: 52, scope: !17134)
!17144 = !DILocation(line: 1016, column: 56, scope: !17134)
!17145 = !DILocation(line: 1016, column: 82, scope: !17134)
!17146 = !DILocation(line: 1016, column: 88, scope: !17134)
!17147 = !DILocation(line: 1016, column: 76, scope: !17134)
!17148 = !DILocation(line: 1016, column: 80, scope: !17134)
!17149 = !DILocation(line: 1013, column: 3, scope: !17150)
!17150 = !DILexicalBlockFile(scope: !17122, file: !243, discriminator: 2)
!17151 = distinct !{!17151, !17121}
!17152 = !DILocation(line: 1019, column: 1, scope: !16985)
!17153 = distinct !DISubprogram(name: "sw_configurenotify_p", scope: !243, file: !243, line: 578, type: !17154, isLocal: true, isDefinition: true, scopeLine: 579, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !256)
!17154 = !DISubroutineType(types: !17155)
!17155 = !{!45, !223, !17156, !67}
!17156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64, align: 64)
!17157 = !DILocalVariable(name: "display", arg: 1, scope: !17153, file: !243, line: 578, type: !223)
!17158 = !DILocation(line: 578, column: 32, scope: !17153)
!17159 = !DILocalVariable(name: "xevent", arg: 2, scope: !17153, file: !243, line: 578, type: !17156)
!17160 = !DILocation(line: 578, column: 50, scope: !17153)
!17161 = !DILocalVariable(name: "arg", arg: 3, scope: !17153, file: !243, line: 578, type: !67)
!17162 = !DILocation(line: 578, column: 67, scope: !17153)
!17163 = !DILocation(line: 580, column: 9, scope: !17153)
!17164 = !DILocalVariable(name: "context", scope: !17153, file: !243, line: 581, type: !241)
!17165 = !DILocation(line: 581, column: 30, scope: !17153)
!17166 = !DILocation(line: 581, column: 71, scope: !17153)
!17167 = !DILocation(line: 581, column: 40, scope: !17153)
!17168 = !DILocation(line: 582, column: 6, scope: !17169)
!17169 = distinct !DILexicalBlock(scope: !17153, file: !243, line: 582, column: 6)
!17170 = !DILocation(line: 582, column: 14, scope: !17169)
!17171 = !DILocation(line: 582, column: 19, scope: !17169)
!17172 = !DILocation(line: 582, column: 24, scope: !17169)
!17173 = !DILocation(line: 583, column: 5, scope: !17169)
!17174 = !DILocation(line: 583, column: 8, scope: !17175)
!17175 = !DILexicalBlockFile(scope: !17169, file: !243, discriminator: 1)
!17176 = !DILocation(line: 583, column: 16, scope: !17175)
!17177 = !DILocation(line: 583, column: 27, scope: !17175)
!17178 = !DILocation(line: 583, column: 37, scope: !17175)
!17179 = !DILocation(line: 583, column: 46, scope: !17175)
!17180 = !DILocation(line: 583, column: 34, scope: !17175)
!17181 = !DILocation(line: 584, column: 6, scope: !17169)
!17182 = !DILocation(line: 584, column: 9, scope: !17175)
!17183 = !DILocation(line: 584, column: 17, scope: !17175)
!17184 = !DILocation(line: 584, column: 22, scope: !17175)
!17185 = !DILocation(line: 584, column: 32, scope: !17175)
!17186 = !DILocation(line: 584, column: 41, scope: !17175)
!17187 = !DILocation(line: 584, column: 29, scope: !17175)
!17188 = !DILocation(line: 582, column: 6, scope: !17189)
!17189 = !DILexicalBlockFile(scope: !17153, file: !243, discriminator: 1)
!17190 = !DILocation(line: 585, column: 3, scope: !17169)
!17191 = !DILocation(line: 587, column: 2, scope: !17153)
!17192 = !DILocation(line: 588, column: 1, scope: !17153)
