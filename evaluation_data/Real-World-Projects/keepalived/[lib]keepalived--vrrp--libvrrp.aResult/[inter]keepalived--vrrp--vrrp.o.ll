; ModuleID = './[inter]keepalived--vrrp--vrrp.o.i'
source_filename = "./[inter]keepalived--vrrp--vrrp.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._data = type { i8*, i8, i8*, i8, i8*, i8*, %struct.sockaddr_storage, i8*, i64, %struct._list*, i32, i8, i8, i32, i8*, %struct._interface*, i32, i32, i32, i32, %struct.lvs_syncd_config, i8, %struct.sockaddr_in, %struct.sockaddr_in6, i32, %struct.timeval, i32, i32, i32, i32, i32, i32, i8, i8, i32, [29 x i8], [29 x i8], i8, [32 x i8], [32 x i8], [32 x i8], i8, i8, i8, i8, i8, i8, i32, i64, i8, i8, i8, i32, i64, %struct._notify_fifo, %struct._notify_fifo, %struct._notify_fifo, i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i32, i64, i32 }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct._list = type { %struct._element*, %struct._element*, i32, void (i8*)*, void (%struct._IO_FILE*, i8*)* }
%struct._element = type { %struct._element*, %struct._element*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct._interface = type { [16 x i8], i32, %struct.in_addr, %struct.in6_addr, i32, i8, i32, i16, [32 x i8], [32 x i8], i64, i32, i8, i32, %struct._interface*, i32, %struct._interface*, i8, %struct._garp_delay*, i8, i32, i32, i32, i32, i32, i8, %struct._list* }
%struct.in_addr = type { i32 }
%struct.in6_addr = type { %union.anon }
%union.anon = type { [4 x i32] }
%struct._garp_delay = type { %struct.timeval, i8, %struct.timeval, i8, %struct.timeval, %struct.timeval, i32 }
%struct.lvs_syncd_config = type { i8*, %struct._vrrp_t*, i32, i16, %struct.sockaddr_storage, i16, i8, i8* }
%struct._vrrp_t = type { i16, i8*, %struct._vrrp_sgroup*, %struct._vrrp_stats*, %struct._interface*, i8, i8, i8, i32, i64, [16 x i8], %struct._list*, %struct._list*, %struct._list*, i32, i32, %struct.sockaddr_storage, i8, i8, %struct.sockaddr_storage, %struct._list*, i32, %struct.sockaddr_storage, i8, %struct.timeval, i32, %struct.timeval, %struct.timeval, i32, i32, i32, i8, i8, i32, i32, i32, i8, i8, i8, i32, i8, %struct._list*, %struct._list*, i8, i8, %struct._list*, %struct._list*, i32, i32, i32, i64, i8, i8, i64, %struct.timeval, i32, i32, i8, %struct._sock*, i32, i32, i32, i32, i8, %struct._notify_script*, %struct._notify_script*, %struct._notify_script*, %struct._notify_script*, %struct._notify_script*, %struct._notify_script*, i32, %struct.timeval, i8*, i64, i32, i8, [8 x i8], %struct._seq_counter, i32 }
%struct._vrrp_sgroup = type { i8*, %struct._vector*, %struct._list*, i32, i32, i32, i8, %struct._list*, %struct._list*, %struct._list*, %struct._list*, i8, %struct._notify_script*, %struct._notify_script*, %struct._notify_script*, %struct._notify_script*, %struct._notify_script*, i32, i32 }
%struct._vector = type { i32, i32, i8** }
%struct._vrrp_stats = type { i64, i32, i32, i32, i64, i64, i64, i64, i64, i32, i32, i32, i64, i64 }
%struct._sock = type { i16, %struct.sockaddr_storage, i32, i32, i8, i32, i32, i32, %struct._thread* }
%struct._thread = type { i64, i32, %struct._thread_master*, i32 (%struct._thread*)*, i8*, %struct.timeval, %union.anon.0, %struct._thread_event*, %union.anon.1 }
%struct._thread_master = type { %struct.rb_root, %struct.rb_root, %struct.rb_root, %struct.rb_root, %struct.list_head, %struct.list_head, %struct.list_head, %struct._list*, %struct.rb_root, %struct.epoll_event*, %struct._thread_event*, i32, i32, i32, i32, %struct._thread*, i64, i64, i8 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.rb_root = type { %struct.rb_node* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.epoll_event = type opaque
%union.anon.0 = type { %struct.anon }
%struct.anon = type { i32, i32 }
%struct._thread_event = type { %struct._thread*, %struct._thread*, i64, i32, %struct.rb_node }
%union.anon.1 = type { %struct.rb_node }
%struct._notify_script = type { i8**, i32, i32, i32, i32 }
%struct._seq_counter = type { i8, i32 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.timeval = type { i64, i64 }
%struct._notify_fifo = type { i8*, i32, i8, %struct._notify_script* }
%struct._vrrp_data = type { %struct._list*, %struct._list*, %struct._list*, %struct._list*, %struct._list*, %struct._list*, %struct._list*, %struct._list*, %struct._list*, %struct._list*, %struct._list* }
%struct._vrrphdr = type { i8, i8, i8, i8, %union.anon.2, i16 }
%union.anon.2 = type { %struct.anon.4 }
%struct.anon.4 = type { i16 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ICV_mutable_fields = type { i8, i8, i16 }
%struct._ipsec_ah = type { i8, i8, i16, i32, i32, [12 x i8] }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct.iovec = type { i8*, i64 }
%struct._ip_address = type { %struct.ifaddrmsg, %union.anon.5, %struct._interface*, i8*, i32, i32, i8, %union.anon.7, i8, %struct._static_track_group*, i8, i8, i8 }
%struct.ifaddrmsg = type { i8, i8, i8, i8, i32 }
%union.anon.5 = type { %struct.in6_addr }
%union.anon.7 = type { %struct.in6_addr }
%struct._static_track_group = type { i8*, %struct._vector*, %struct._list* }
%struct.anon.6 = type { %struct.in_addr, %struct.in_addr }
%struct.ipt_handle = type opaque
%struct._tracking_vrrp = type { i32, %struct._vrrp_t*, i32 }
%struct._vrrp_script = type { i8*, %struct._notify_script, i64, i64, i32, i32, i32, i32, %struct._list*, i32, i32, i32, i8 }
%struct._tracked_sc = type { %struct._vrrp_script*, i32 }
%struct.magic_set = type opaque
%struct._tracked_if = type { i32, %struct._interface* }
%struct._tracked_file = type { %struct._vrrp_file*, i32 }
%struct._vrrp_file = type { i8*, i8*, i8*, i32, i32, %struct._list*, i32 }
%struct._ip_route = type { %struct._ip_address*, %struct._ip_address*, %struct._ip_address*, i8, i8, i32, i8, i8, i32, %struct._ip_address*, %struct._interface*, i32, i32, i8, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8, i8, i32, %struct._encap, %struct._list*, i32, i8, %struct._static_track_group*, i8, i32 }
%struct._encap = type { i16, i32, %union.anon.8 }
%union.anon.8 = type { %struct._encap_ip }
%struct._encap_ip = type { i64, %struct._ip_address*, %struct._ip_address*, i8, i16, i8 }
%struct._ip_rule = type { i32, i8, i32, %struct._ip_address*, %struct._ip_address*, i32, i8, i32, i32, i32, i32, i32, %struct._interface*, %struct._interface*, i32, i32, i8, i64, i8, %struct._static_track_group*, i8 }
%struct.cmsghdr = type { i64, i32, i32, [0 x i8] }
%struct.in6_pktinfo = type { %struct.in6_addr, i32 }
%struct.ipv4_phdr_t = type { i32, i32, i8, i8, i16 }
%struct.anon.3 = type { i8, i8 }

@have_ipv4_instance = common global i8 0, align 1
@have_ipv6_instance = common global i8 0, align 1
@monitor_ipv4_routes = internal global i8 0, align 1
@monitor_ipv6_routes = internal global i8 0, align 1
@monitor_ipv4_rules = internal global i8 0, align 1
@monitor_ipv6_rules = internal global i8 0, align 1
@.str = private unnamed_addr constant [33 x i8] c"(%s) Cant send advert to %s (%m)\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"(%s) sent 0 priority\00", align 1
@debug = external global i64, align 8
@global_data = external global %struct._data*, align 8
@.str.2 = private unnamed_addr constant [27 x i8] c"(%s) Entering BACKUP STATE\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"(%s) Entering FAULT STATE\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"(%s) vrrp_state_leave_master called with invalid wantstate %d\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"(%s) Entering %s STATE\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"BACKUP\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"FAULT\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"(%s) Backup received priority 0 advertisement\00", align 1
@time_now = external global %struct.timeval, align 8
@.str.9 = private unnamed_addr constant [70 x i8] c"(%s) advertisement interval updated to %d milli-sec from %d milli-sec\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"%s(%s) stop preempt delay\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"VRRP_Instance\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"%s(%s) start preempt delay(%ld)\00", align 1
@.str.13 = private unnamed_addr constant [62 x i8] c"(%s) received lower priority (%d) advert from %s - discarding\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"(%s) Entering MASTER STATE\00", align 1
@master = external global %struct._thread_master*, align 8
@.str.15 = private unnamed_addr constant [57 x i8] c"(%s) Master received priority 0 or lower priority advert\00", align 1
@.str.16 = private unnamed_addr constant [84 x i8] c"(%s) WARNING - equal priority advert received from remote host with our IP address.\00", align 1
@.str.17 = private unnamed_addr constant [138 x i8] c"(%s) CONFIGURATION ERROR: local instance and a remote instance are both configured as address owner, please fix - reducing local priority\00", align 1
@.str.18 = private unnamed_addr constant [63 x i8] c"(%s) Received advert from %s with lower priority %d, ours %d%s\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c", forcing new election\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [48 x i8] c"(%s) IPSEC-AH : Syncing seq_num - Increment seq\00", align 1
@.str.22 = private unnamed_addr constant [69 x i8] c"(%s) Master received advert from %s with higher priority %d, ours %d\00", align 1
@.str.23 = private unnamed_addr constant [90 x i8] c"(%s) Master received advert from %s with same priority %d but higher IP address than ours\00", align 1
@.str.24 = private unnamed_addr constant [88 x i8] c"(%s) advertisement interval updated from %d to %d milli-sec from higher priority master\00", align 1
@.str.25 = private unnamed_addr constant [37 x i8] c"Assigned address %s for interface %s\00", align 1
@.str.26 = private unnamed_addr constant [113 x i8] c"(%s) track_interface %s is configured on VRRP instance and sync group. Remove vrrp instance or sync group config\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"cant open raw socket. unknown family=%d\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"cant open raw socket. errno=%d\00", align 1
@.str.29 = private unnamed_addr constant [42 x i8] c"vrrp set send socket buffer size error %d\00", align 1
@.str.30 = private unnamed_addr constant [45 x i8] c"vrrp set receive socket buffer size error %d\00", align 1
@vrrp_data = external global %struct._vrrp_data*, align 8
@.str.31 = private unnamed_addr constant [6 x i8] c"vrrp_\00", align 1
@.str.32 = private unnamed_addr constant [38 x i8] c"VRID %d is duplicated on interface %s\00", align 1
@.str.33 = private unnamed_addr constant [50 x i8] c"Sync group %s has no virtual router(s) - removing\00", align 1
@reload = external global i8, align 1
@.str.34 = private unnamed_addr constant [49 x i8] c"VRRP_Group(%s): Syncing instances to FAULT state\00", align 1
@.str.35 = private unnamed_addr constant [26 x i8] c"(%s) entering FAULT state\00", align 1
@old_vrrp_data = external global %struct._vrrp_data*, align 8
@.str.36 = private unnamed_addr constant [74 x i8] c"Unable to find vrrp instance %s for lvs_syncd - clearing lvs_syncd config\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"Warning - script %s is not used\00", align 1
@.str.38 = private unnamed_addr constant [50 x i8] c"VRRP_Script(%s) considered unsuccessful on reload\00", align 1
@.str.39 = private unnamed_addr constant [48 x i8] c"VRRP_Script(%s) considered successful on reload\00", align 1
@garp_delay = common global %struct._list* null, align 8
@block_ipv4 = common global i8 0, align 1
@block_ipv6 = common global i8 0, align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"gratuitous ARPs\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"Unsolicited Neighbour Adverts\00", align 1
@.str.42 = private unnamed_addr constant [38 x i8] c"(%s) Sending/queueing %s on %s for %s\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"(%s) %s Virtual Rules\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"setting\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"removing\00", align 1
@.str.46 = private unnamed_addr constant [23 x i8] c"(%s) %s Virtual Routes\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"(%s) %s %s\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"VIPs.\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"E-VIPs.\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"iptable drop rule\00", align 1
@.str.51 = private unnamed_addr constant [21 x i8] c"recvmsg returned %zd\00", align 1
@.str.52 = private unnamed_addr constant [59 x i8] c"(%s) ip/vrrp header too short. %zu and expect at least %zu\00", align 1
@.str.53 = private unnamed_addr constant [35 x i8] c"(%s) invalid ttl. %d and expect %d\00", align 1
@.str.54 = private unnamed_addr constant [56 x i8] c"(%s) vrrp header too short. %zu and expect at least %zu\00", align 1
@.str.55 = private unnamed_addr constant [115 x i8] c"(%s) configured address family is %d, which is neither AF_INET or AF_INET6. This is probably a bug - please report\00", align 1
@.str.56 = private unnamed_addr constant [27 x i8] c"(%s) Invalid auth type: %d\00", align 1
@.str.57 = private unnamed_addr constant [39 x i8] c"(%s) received a %d auth, expecting %d!\00", align 1
@.str.58 = private unnamed_addr constant [33 x i8] c"(%s) received an invalid passwd!\00", align 1
@.str.59 = private unnamed_addr constant [62 x i8] c"(%s) advertisement interval mismatch mine=%d sec rcved=%d sec\00", align 1
@.str.60 = private unnamed_addr constant [39 x i8] c"(%s) invalid version. %d and expect %d\00", align 1
@.str.61 = private unnamed_addr constant [43 x i8] c"(%s) Invalid packet type. %d and expect %d\00", align 1
@.str.62 = private unnamed_addr constant [54 x i8] c"(%s) received VRID mismatch. Received %d, Expected %d\00", align 1
@.str.63 = private unnamed_addr constant [58 x i8] c"(%s) received an invalid ip number count %d, expected %d!\00", align 1
@.str.64 = private unnamed_addr constant [70 x i8] c"(%s) ip_tot_len mismatch against received length. %d and received %zu\00", align 1
@.str.65 = private unnamed_addr constant [74 x i8] c"(%s) Received packet length mismatch against expected. %zu and expect %zu\00", align 1
@.str.66 = private unnamed_addr constant [52 x i8] c"(%s) Setting unicast VRRPv3 checksum to old version\00", align 1
@.str.67 = private unnamed_addr constant [29 x i8] c"(%s) Invalid VRRPv3 checksum\00", align 1
@.str.68 = private unnamed_addr constant [29 x i8] c"(%s) Invalid VRRPv2 checksum\00", align 1
@.str.69 = private unnamed_addr constant [74 x i8] c"(%s) ip address associated with VRID %d not present in MASTER advert : %s\00", align 1
@.str.70 = private unnamed_addr constant [50 x i8] c"(%s) unicast source address %s not a unicast peer\00", align 1
@.str.71 = private unnamed_addr constant [62 x i8] c"(%s) receive an invalid ip number count associated with VRID!\00", align 1
@.str.72 = private unnamed_addr constant [75 x i8] c"(%s) advertisement interval changed: mine=%d milli-sec, rcved=%d milli-sec\00", align 1
@.str.73 = private unnamed_addr constant [87 x i8] c"(%s) IPSEC-AH : invalid IPSEC HMAC-MD5 value. Due to fields mutation or bad password !\00", align 1
@.str.74 = private unnamed_addr constant [53 x i8] c"IPSEC AH : invalid IPSEC SPI value. %d and expect %d\00", align 1
@.str.75 = private unnamed_addr constant [80 x i8] c"(%s) IPSEC-AH : sequence number %d already processed. Packet dropped. Local(%d)\00", align 1
@.str.76 = private unnamed_addr constant [68 x i8] c"(%s) using locally configured advertisement interval (%d milli-sec)\00", align 1
@script_security = external global i8, align 1
@.str.77 = private unnamed_addr constant [83 x i8] c"SECURITY VIOLATION - scripts are being executed but script_security not enabled.%s\00", align 1
@.str.78 = private unnamed_addr constant [29 x i8] c" There are insecure scripts.\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"Unable to open magic\00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"Unable to load magic database\00", align 1
@.str.81 = private unnamed_addr constant [42 x i8] c"Disabling track script %s due to insecure\00", align 1
@.str.82 = private unnamed_addr constant [53 x i8] c"Disabling track script %s since not found/accessible\00", align 1
@.str.83 = private unnamed_addr constant [35 x i8] c"vrrp notify fifo script terminated\00", align 1
@.str.84 = private unnamed_addr constant [60 x i8] c"(%s) cannot use IPv6 with VRRP version 2; setting version 3\00", align 1
@.str.85 = private unnamed_addr constant [48 x i8] c"(%s) No VIP specified; at least one is required\00", align 1
@.str.86 = private unnamed_addr constant [49 x i8] c"(%s) State MASTER must match being address owner\00", align 1
@.str.87 = private unnamed_addr constant [60 x i8] c"(%s) Strict mode does not support authentication. Ignoring.\00", align 1
@.str.88 = private unnamed_addr constant [63 x i8] c"(%s) VRRP version 3 does not support authentication. Ignoring.\00", align 1
@.str.89 = private unnamed_addr constant [62 x i8] c"(%s) Authentication specified but no password given. Ignoring\00", align 1
@.str.90 = private unnamed_addr constant [55 x i8] c"(%s) Cannot use AH authentication with IPv6 - ignoring\00", align 1
@.str.91 = private unnamed_addr constant [76 x i8] c"(%s) Initial state master is incompatible with AH authentication - clearing\00", align 1
@.str.92 = private unnamed_addr constant [52 x i8] c"(%s) Unicast peers are not supported in strict mode\00", align 1
@.str.93 = private unnamed_addr constant [73 x i8] c"(%s): vmacs are not supported on macvlan interfaces. Specify %s instead.\00", align 1
@.str.94 = private unnamed_addr constant [59 x i8] c"(%s): vmacs are only supported on Ethernet type interfaces\00", align 1
@.str.95 = private unnamed_addr constant [80 x i8] c"(%s) interface %s does not support multicast, specify unicast peers - disabling\00", align 1
@.str.96 = private unnamed_addr constant [55 x i8] c"(%s) disabling ARP since interface does not support it\00", align 1
@.str.97 = private unnamed_addr constant [51 x i8] c"(%s) the first IPv6 VIP address must be link local\00", align 1
@.str.98 = private unnamed_addr constant [111 x i8] c"(%s) Number of VIPs (%d) exceeds maximum/space available in packet (max %zu addresses) - excess moved to eVIPs\00", align 1
@.str.99 = private unnamed_addr constant [70 x i8] c"(%s) nopreempt is incompatible with priority %d - resetting nopreempt\00", align 1
@.str.100 = private unnamed_addr constant [76 x i8] c"(%s) Warning - nopreempt will not work with initial state MASTER - clearing\00", align 1
@.str.101 = private unnamed_addr constant [80 x i8] c"(%s) Warning - preempt delay will not work with initial state MASTER - clearing\00", align 1
@.str.102 = private unnamed_addr constant [64 x i8] c"(%s) preempt_delay is incompatible with strict mode - resetting\00", align 1
@.str.103 = private unnamed_addr constant [67 x i8] c"(%s) preempt_delay is incompatible with nopreempt mode - resetting\00", align 1
@.str.104 = private unnamed_addr constant [87 x i8] c"(%s) warning - accept mode for VRRP version 2 does not comply with RFC3768 - resetting\00", align 1
@.str.105 = private unnamed_addr constant [54 x i8] c"(%s) Strict mode requires no repeat garps - resetting\00", align 1
@.str.106 = private unnamed_addr constant [59 x i8] c"(%s) Strict mode requires no repeat garp delay - resetting\00", align 1
@.str.107 = private unnamed_addr constant [63 x i8] c"(%s) Strict mode requires no lower priority advert - resetting\00", align 1
@.str.108 = private unnamed_addr constant [74 x i8] c"(%s) strict mode requires higher_prio_send_advert to be clear - resetting\00", align 1
@.str.109 = private unnamed_addr constant [96 x i8] c"(%s) VRRPv2 advertisement interval %.2fs is out of range. Must be less than %ds. Setting to %ds\00", align 1
@.str.110 = private unnamed_addr constant [69 x i8] c"(%s) VRRPv2 advertisement interval %fs must be an integer - rounding\00", align 1
@.str.111 = private unnamed_addr constant [100 x i8] c"(%s) VRRPv3 advertisement interval %.2fs is out of range. Must be less than %.2fs. Setting to %.2fs\00", align 1
@.str.112 = private unnamed_addr constant [75 x i8] c"(%s) VRRPv3 advertisement interval %fs must be in units of 10ms - rounding\00", align 1
@ll_addr = external global [6 x i8], align 1
@.str.113 = private unnamed_addr constant [33 x i8] c"(%s) Found matching interface %s\00", align 1
@.str.114 = private unnamed_addr constant [51 x i8] c"(%s) vmac name mismatch %s <=> %s; changing to %s.\00", align 1
@.str.115 = private unnamed_addr constant [68 x i8] c"(%s) VMAC %s already exists but is incompatible. It will be deleted\00", align 1
@.str.116 = private unnamed_addr constant [94 x i8] c"(%s) VMAC interface name %s already exists as a non VMAC interface - ignoring configured name\00", align 1
@.str.117 = private unnamed_addr constant [8 x i8] c"vrrp.%d\00", align 1
@.str.118 = private unnamed_addr constant [10 x i8] c"vrrp%d.%d\00", align 1
@.str.119 = private unnamed_addr constant [60 x i8] c"(%s) xmit_base is incompatible with strict mode - resetting\00", align 1
@.str.120 = private unnamed_addr constant [67 x i8] c"(%s) promote_secondaries is automatically set for vmacs - ignoring\00", align 1
@.str.121 = private unnamed_addr constant [55 x i8] c"(%s) Cannot find an IP address to use for interface %s\00", align 1
@.str.122 = private unnamed_addr constant [53 x i8] c"(%s) Ignoring track_interface %s since own interface\00", align 1
@.str.123 = private unnamed_addr constant [46 x i8] c"(%s) vmac_xmit_base is only valid with a vmac\00", align 1
@.str.124 = private unnamed_addr constant [66 x i8] c"(%s) Unable to set no_accept mode since iptables chain name unset\00", align 1
@.str.125 = private unnamed_addr constant [47 x i8] c"(%s) ignoring %s tracked interface %sdue to %s\00", align 1
@.str.126 = private unnamed_addr constant [8 x i8] c"weight \00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"SYNC group\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"address owner\00", align 1
@.str.129 = private unnamed_addr constant [55 x i8] c"(%s) ignoring tracked script %s with weights due to %s\00", align 1
@.str.130 = private unnamed_addr constant [14 x i8] c"address_owner\00", align 1
@.str.131 = private unnamed_addr constant [71 x i8] c"(%s) ignoring weight from tracked file %s due to %s - specify weight 0\00", align 1
@.str.132 = private unnamed_addr constant [55 x i8] c"(%s) ignoring tracked file %s with weight %d due to %s\00", align 1
@.str.133 = private unnamed_addr constant [61 x i8] c"(%s) Cannot have weighted track script '%s' with priority %d\00", align 1
@.str.134 = private unnamed_addr constant [39 x i8] c"(%s) the virtual router id must be set\00", align 1
@.str.135 = private unnamed_addr constant [24 x i8] c"(%s) Unknown interface!\00", align 1
@.str.136 = private unnamed_addr constant [96 x i8] c"(%s) track_script %s is configured on VRRP instance and sync group. Remove vrrp instance config\00", align 1
@.str.137 = private unnamed_addr constant [94 x i8] c"(%s) track_file %s is configured on VRRP instance and sync group. Remove vrrp instance config\00", align 1
@.str.138 = private unnamed_addr constant [93 x i8] c"(%s) Cannot have weighted track script '%s' with member having priority %d - clearing weight\00", align 1
@.str.139 = private unnamed_addr constant [92 x i8] c"(%s) Cannot have weighted track file '%s' with member having priority %d - setting weight 0\00", align 1
@.str.140 = private unnamed_addr constant [96 x i8] c"(%s) Cannot have weighted track interface '%s' with member having priority %d - clearing weight\00", align 1

; Function Attrs: nounwind uwtable
define void @clear_summary_flags() #0 !dbg !523 {
  store i8 0, i8* @have_ipv4_instance, align 1, !dbg !527
  store i8 0, i8* @have_ipv6_instance, align 1, !dbg !528
  store i8 0, i8* @monitor_ipv4_routes, align 1, !dbg !529
  store i8 0, i8* @monitor_ipv6_routes, align 1, !dbg !530
  store i8 0, i8* @monitor_ipv4_rules, align 1, !dbg !531
  store i8 0, i8* @monitor_ipv6_rules, align 1, !dbg !532
  ret void, !dbg !533
}

; Function Attrs: nounwind uwtable
define i64 @vrrp_adv_len(%struct._vrrp_t*) #0 !dbg !534 {
  %2 = alloca %struct._vrrp_t*, align 8
  %3 = alloca i64, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !792, metadata !793), !dbg !794
  call void @llvm.dbg.declare(metadata i64* %3, metadata !795, metadata !793), !dbg !796
  %4 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !797
  %5 = call i64 @vrrp_pkt_len(%struct._vrrp_t* %4), !dbg !798
  store i64 %5, i64* %3, align 8, !dbg !796
  %6 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !799
  %7 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %6, i32 0, i32 0, !dbg !801
  %8 = load i16, i16* %7, align 8, !dbg !801
  %9 = zext i16 %8 to i32, !dbg !799
  %10 = icmp eq i32 %9, 2, !dbg !802
  br i1 %10, label %11, label %25, !dbg !803

; <label>:11:                                     ; preds = %1
  %12 = call i64 @vrrp_iphdr_len(), !dbg !804
  %13 = load i64, i64* %3, align 8, !dbg !806
  %14 = add i64 %13, %12, !dbg !806
  store i64 %14, i64* %3, align 8, !dbg !806
  %15 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !807
  %16 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %15, i32 0, i32 75, !dbg !809
  %17 = load i8, i8* %16, align 4, !dbg !809
  %18 = zext i8 %17 to i32, !dbg !807
  %19 = icmp eq i32 %18, 2, !dbg !810
  br i1 %19, label %20, label %24, !dbg !811

; <label>:20:                                     ; preds = %11
  %21 = call i64 @vrrp_ipsecah_len(), !dbg !812
  %22 = load i64, i64* %3, align 8, !dbg !813
  %23 = add i64 %22, %21, !dbg !813
  store i64 %23, i64* %3, align 8, !dbg !813
  br label %24, !dbg !814

; <label>:24:                                     ; preds = %20, %11
  br label %25, !dbg !815

; <label>:25:                                     ; preds = %24, %1
  %26 = load i64, i64* %3, align 8, !dbg !816
  ret i64 %26, !dbg !817
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define internal i64 @vrrp_pkt_len(%struct._vrrp_t*) #0 !dbg !818 {
  %2 = alloca %struct._vrrp_t*, align 8
  %3 = alloca i64, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !819, metadata !793), !dbg !820
  call void @llvm.dbg.declare(metadata i64* %3, metadata !821, metadata !793), !dbg !822
  store i64 8, i64* %3, align 8, !dbg !822
  %4 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !823
  %5 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %4, i32 0, i32 0, !dbg !825
  %6 = load i16, i16* %5, align 8, !dbg !825
  %7 = zext i16 %6 to i32, !dbg !823
  %8 = icmp eq i32 %7, 2, !dbg !826
  br i1 %8, label %9, label %49, !dbg !827

; <label>:9:                                      ; preds = %1
  %10 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !828
  %11 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %10, i32 0, i32 60, !dbg !831
  %12 = load i32, i32* %11, align 4, !dbg !831
  %13 = icmp eq i32 %12, 2, !dbg !832
  br i1 %13, label %14, label %17, !dbg !833

; <label>:14:                                     ; preds = %9
  %15 = load i64, i64* %3, align 8, !dbg !834
  %16 = add i64 %15, 8, !dbg !834
  store i64 %16, i64* %3, align 8, !dbg !834
  br label %17, !dbg !835

; <label>:17:                                     ; preds = %14, %9
  %18 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !836
  %19 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %18, i32 0, i32 41, !dbg !837
  %20 = load %struct._list*, %struct._list** %19, align 8, !dbg !837
  %21 = icmp eq %struct._list* %20, null, !dbg !838
  br i1 %21, label %44, label %22, !dbg !839

; <label>:22:                                     ; preds = %17
  %23 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !840
  %24 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %23, i32 0, i32 41, !dbg !842
  %25 = load %struct._list*, %struct._list** %24, align 8, !dbg !842
  %26 = getelementptr inbounds %struct._list, %struct._list* %25, i32 0, i32 0, !dbg !843
  %27 = load %struct._element*, %struct._element** %26, align 8, !dbg !843
  %28 = icmp eq %struct._element* %27, null, !dbg !844
  br i1 %28, label %29, label %36, !dbg !845

; <label>:29:                                     ; preds = %22
  %30 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !846
  %31 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %30, i32 0, i32 41, !dbg !848
  %32 = load %struct._list*, %struct._list** %31, align 8, !dbg !848
  %33 = getelementptr inbounds %struct._list, %struct._list* %32, i32 0, i32 1, !dbg !849
  %34 = load %struct._element*, %struct._element** %33, align 8, !dbg !849
  %35 = icmp eq %struct._element* %34, null, !dbg !850
  br i1 %35, label %44, label %36, !dbg !851

; <label>:36:                                     ; preds = %29, %22
  %37 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !852
  %38 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %37, i32 0, i32 41, !dbg !854
  %39 = load %struct._list*, %struct._list** %38, align 8, !dbg !854
  %40 = getelementptr inbounds %struct._list, %struct._list* %39, i32 0, i32 2, !dbg !855
  %41 = load i32, i32* %40, align 8, !dbg !855
  %42 = zext i32 %41 to i64, !dbg !856
  %43 = mul i64 %42, 4, !dbg !857
  br label %45, !dbg !858

; <label>:44:                                     ; preds = %29, %17
  br label %45, !dbg !859

; <label>:45:                                     ; preds = %44, %36
  %46 = phi i64 [ %43, %36 ], [ 0, %44 ], !dbg !861
  %47 = load i64, i64* %3, align 8, !dbg !863
  %48 = add i64 %47, %46, !dbg !863
  store i64 %48, i64* %3, align 8, !dbg !863
  br label %88, !dbg !864

; <label>:49:                                     ; preds = %1
  %50 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !865
  %51 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %50, i32 0, i32 0, !dbg !867
  %52 = load i16, i16* %51, align 8, !dbg !867
  %53 = zext i16 %52 to i32, !dbg !865
  %54 = icmp eq i32 %53, 10, !dbg !868
  br i1 %54, label %55, label %87, !dbg !869

; <label>:55:                                     ; preds = %49
  %56 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !870
  %57 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %56, i32 0, i32 41, !dbg !871
  %58 = load %struct._list*, %struct._list** %57, align 8, !dbg !871
  %59 = icmp eq %struct._list* %58, null, !dbg !872
  br i1 %59, label %82, label %60, !dbg !873

; <label>:60:                                     ; preds = %55
  %61 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !874
  %62 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %61, i32 0, i32 41, !dbg !876
  %63 = load %struct._list*, %struct._list** %62, align 8, !dbg !876
  %64 = getelementptr inbounds %struct._list, %struct._list* %63, i32 0, i32 0, !dbg !877
  %65 = load %struct._element*, %struct._element** %64, align 8, !dbg !877
  %66 = icmp eq %struct._element* %65, null, !dbg !878
  br i1 %66, label %67, label %74, !dbg !879

; <label>:67:                                     ; preds = %60
  %68 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !880
  %69 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %68, i32 0, i32 41, !dbg !882
  %70 = load %struct._list*, %struct._list** %69, align 8, !dbg !882
  %71 = getelementptr inbounds %struct._list, %struct._list* %70, i32 0, i32 1, !dbg !883
  %72 = load %struct._element*, %struct._element** %71, align 8, !dbg !883
  %73 = icmp eq %struct._element* %72, null, !dbg !884
  br i1 %73, label %82, label %74, !dbg !885

; <label>:74:                                     ; preds = %67, %60
  %75 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !886
  %76 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %75, i32 0, i32 41, !dbg !888
  %77 = load %struct._list*, %struct._list** %76, align 8, !dbg !888
  %78 = getelementptr inbounds %struct._list, %struct._list* %77, i32 0, i32 2, !dbg !889
  %79 = load i32, i32* %78, align 8, !dbg !889
  %80 = zext i32 %79 to i64, !dbg !890
  %81 = mul i64 %80, 16, !dbg !891
  br label %83, !dbg !892

; <label>:82:                                     ; preds = %67, %55
  br label %83, !dbg !893

; <label>:83:                                     ; preds = %82, %74
  %84 = phi i64 [ %81, %74 ], [ 0, %82 ], !dbg !895
  %85 = load i64, i64* %3, align 8, !dbg !897
  %86 = add i64 %85, %84, !dbg !897
  store i64 %86, i64* %3, align 8, !dbg !897
  br label %87, !dbg !898

; <label>:87:                                     ; preds = %83, %49
  br label %88

; <label>:88:                                     ; preds = %87, %45
  %89 = load i64, i64* %3, align 8, !dbg !899
  ret i64 %89, !dbg !900
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @vrrp_iphdr_len() #2 !dbg !901 {
  ret i64 20, !dbg !904
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @vrrp_ipsecah_len() #2 !dbg !905 {
  ret i64 24, !dbg !906
}

; Function Attrs: nounwind uwtable
define %struct._vrrphdr* @vrrp_get_header(i16 zeroext, i8*, i32*) #0 !dbg !907 {
  %4 = alloca i16, align 2
  %5 = alloca i8*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.iphdr*, align 8
  %8 = alloca %struct._vrrphdr*, align 8
  store i16 %0, i16* %4, align 2
  call void @llvm.dbg.declare(metadata i16* %4, metadata !911, metadata !793), !dbg !912
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !913, metadata !793), !dbg !914
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !915, metadata !793), !dbg !916
  call void @llvm.dbg.declare(metadata %struct.iphdr** %7, metadata !917, metadata !793), !dbg !918
  call void @llvm.dbg.declare(metadata %struct._vrrphdr** %8, metadata !919, metadata !793), !dbg !920
  store %struct._vrrphdr* null, %struct._vrrphdr** %8, align 8, !dbg !920
  %9 = load i16, i16* %4, align 2, !dbg !921
  %10 = zext i16 %9 to i32, !dbg !921
  %11 = icmp eq i32 %10, 2, !dbg !923
  br i1 %11, label %12, label %49, !dbg !924

; <label>:12:                                     ; preds = %3
  %13 = load i8*, i8** %5, align 8, !dbg !925
  %14 = bitcast i8* %13 to %struct.iphdr*, !dbg !927
  store %struct.iphdr* %14, %struct.iphdr** %7, align 8, !dbg !928
  %15 = load %struct.iphdr*, %struct.iphdr** %7, align 8, !dbg !929
  %16 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %15, i32 0, i32 6, !dbg !931
  %17 = load i8, i8* %16, align 1, !dbg !931
  %18 = zext i8 %17 to i32, !dbg !929
  %19 = icmp eq i32 %18, 51, !dbg !932
  br i1 %19, label %20, label %35, !dbg !933

; <label>:20:                                     ; preds = %12
  %21 = load i32*, i32** %6, align 8, !dbg !934
  store i32 51, i32* %21, align 4, !dbg !936
  %22 = load %struct.iphdr*, %struct.iphdr** %7, align 8, !dbg !937
  %23 = bitcast %struct.iphdr* %22 to i8*, !dbg !938
  %24 = load %struct.iphdr*, %struct.iphdr** %7, align 8, !dbg !939
  %25 = bitcast %struct.iphdr* %24 to i8*, !dbg !940
  %26 = load i8, i8* %25, align 4, !dbg !940
  %27 = and i8 %26, 15, !dbg !940
  %28 = zext i8 %27 to i32, !dbg !940
  %29 = shl i32 %28, 2, !dbg !941
  %30 = sext i32 %29 to i64, !dbg !942
  %31 = getelementptr inbounds i8, i8* %23, i64 %30, !dbg !942
  %32 = call i64 @vrrp_ipsecah_len(), !dbg !943
  %33 = getelementptr inbounds i8, i8* %31, i64 %32, !dbg !944
  %34 = bitcast i8* %33 to %struct._vrrphdr*, !dbg !945
  store %struct._vrrphdr* %34, %struct._vrrphdr** %8, align 8, !dbg !946
  br label %48, !dbg !947

; <label>:35:                                     ; preds = %12
  %36 = load i32*, i32** %6, align 8, !dbg !948
  store i32 112, i32* %36, align 4, !dbg !950
  %37 = load %struct.iphdr*, %struct.iphdr** %7, align 8, !dbg !951
  %38 = bitcast %struct.iphdr* %37 to i8*, !dbg !952
  %39 = load %struct.iphdr*, %struct.iphdr** %7, align 8, !dbg !953
  %40 = bitcast %struct.iphdr* %39 to i8*, !dbg !954
  %41 = load i8, i8* %40, align 4, !dbg !954
  %42 = and i8 %41, 15, !dbg !954
  %43 = zext i8 %42 to i32, !dbg !954
  %44 = shl i32 %43, 2, !dbg !955
  %45 = sext i32 %44 to i64, !dbg !956
  %46 = getelementptr inbounds i8, i8* %38, i64 %45, !dbg !956
  %47 = bitcast i8* %46 to %struct._vrrphdr*, !dbg !957
  store %struct._vrrphdr* %47, %struct._vrrphdr** %8, align 8, !dbg !958
  br label %48

; <label>:48:                                     ; preds = %35, %20
  br label %58, !dbg !959

; <label>:49:                                     ; preds = %3
  %50 = load i16, i16* %4, align 2, !dbg !960
  %51 = zext i16 %50 to i32, !dbg !960
  %52 = icmp eq i32 %51, 10, !dbg !963
  br i1 %52, label %53, label %57, !dbg !960

; <label>:53:                                     ; preds = %49
  %54 = load i32*, i32** %6, align 8, !dbg !964
  store i32 112, i32* %54, align 4, !dbg !966
  %55 = load i8*, i8** %5, align 8, !dbg !967
  %56 = bitcast i8* %55 to %struct._vrrphdr*, !dbg !968
  store %struct._vrrphdr* %56, %struct._vrrphdr** %8, align 8, !dbg !969
  br label %57, !dbg !970

; <label>:57:                                     ; preds = %53, %49
  br label %58

; <label>:58:                                     ; preds = %57, %48
  %59 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !971
  ret %struct._vrrphdr* %59, !dbg !972
}

; Function Attrs: nounwind uwtable
define void @vrrp_send_adv(%struct._vrrp_t*, i8 zeroext) #0 !dbg !973 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca i8, align 1
  %5 = alloca %struct.sockaddr_storage*, align 8
  %6 = alloca %struct._element*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !976, metadata !793), !dbg !977
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !978, metadata !793), !dbg !979
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %5, metadata !980, metadata !793), !dbg !982
  call void @llvm.dbg.declare(metadata %struct._element** %6, metadata !983, metadata !793), !dbg !985
  %7 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !986
  %8 = load i8, i8* %4, align 1, !dbg !987
  call void @vrrp_update_pkt(%struct._vrrp_t* %7, i8 zeroext %8, %struct.sockaddr_storage* null), !dbg !988
  %9 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !989
  %10 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %9, i32 0, i32 20, !dbg !991
  %11 = load %struct._list*, %struct._list** %10, align 8, !dbg !991
  %12 = icmp eq %struct._list* %11, null, !dbg !992
  br i1 %12, label %27, label %13, !dbg !993

; <label>:13:                                     ; preds = %2
  %14 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !994
  %15 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %14, i32 0, i32 20, !dbg !996
  %16 = load %struct._list*, %struct._list** %15, align 8, !dbg !996
  %17 = getelementptr inbounds %struct._list, %struct._list* %16, i32 0, i32 0, !dbg !997
  %18 = load %struct._element*, %struct._element** %17, align 8, !dbg !997
  %19 = icmp eq %struct._element* %18, null, !dbg !998
  br i1 %19, label %20, label %30, !dbg !999

; <label>:20:                                     ; preds = %13
  %21 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1000
  %22 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %21, i32 0, i32 20, !dbg !1002
  %23 = load %struct._list*, %struct._list** %22, align 8, !dbg !1002
  %24 = getelementptr inbounds %struct._list, %struct._list* %23, i32 0, i32 1, !dbg !1003
  %25 = load %struct._element*, %struct._element** %24, align 8, !dbg !1003
  %26 = icmp eq %struct._element* %25, null, !dbg !1004
  br i1 %26, label %27, label %30, !dbg !1005

; <label>:27:                                     ; preds = %20, %2
  %28 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1006
  %29 = call i64 @vrrp_send_pkt(%struct._vrrp_t* %28, %struct.sockaddr_storage* null), !dbg !1007
  br label %89, !dbg !1007

; <label>:30:                                     ; preds = %20, %13
  %31 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1008
  %32 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %31, i32 0, i32 20, !dbg !1011
  %33 = load %struct._list*, %struct._list** %32, align 8, !dbg !1011
  %34 = icmp ne %struct._list* %33, null, !dbg !1012
  br i1 %34, label %35, label %49, !dbg !1012

; <label>:35:                                     ; preds = %30
  %36 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1013
  %37 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %36, i32 0, i32 20, !dbg !1015
  %38 = load %struct._list*, %struct._list** %37, align 8, !dbg !1015
  %39 = icmp ne %struct._list* %38, null, !dbg !1016
  br i1 %39, label %41, label %40, !dbg !1017

; <label>:40:                                     ; preds = %35
  br label %47, !dbg !1018

; <label>:41:                                     ; preds = %35
  %42 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1020
  %43 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %42, i32 0, i32 20, !dbg !1022
  %44 = load %struct._list*, %struct._list** %43, align 8, !dbg !1022
  %45 = getelementptr inbounds %struct._list, %struct._list* %44, i32 0, i32 0, !dbg !1023
  %46 = load %struct._element*, %struct._element** %45, align 8, !dbg !1023
  br label %47, !dbg !1024

; <label>:47:                                     ; preds = %41, %40
  %48 = phi %struct._element* [ null, %40 ], [ %46, %41 ], !dbg !1025
  br label %50, !dbg !1027

; <label>:49:                                     ; preds = %30
  br label %50, !dbg !1028

; <label>:50:                                     ; preds = %49, %47
  %51 = phi %struct._element* [ %48, %47 ], [ null, %49 ], !dbg !1030
  store %struct._element* %51, %struct._element** %6, align 8, !dbg !1032
  br label %52, !dbg !1033

; <label>:52:                                     ; preds = %84, %50
  %53 = load %struct._element*, %struct._element** %6, align 8, !dbg !1034
  %54 = icmp ne %struct._element* %53, null, !dbg !1037
  br i1 %54, label %55, label %60, !dbg !1038

; <label>:55:                                     ; preds = %52
  %56 = load %struct._element*, %struct._element** %6, align 8, !dbg !1039
  %57 = getelementptr inbounds %struct._element, %struct._element* %56, i32 0, i32 2, !dbg !1041
  %58 = load i8*, i8** %57, align 8, !dbg !1041
  %59 = bitcast i8* %58 to %struct.sockaddr_storage*, !dbg !1042
  store %struct.sockaddr_storage* %59, %struct.sockaddr_storage** %5, align 8, !dbg !1043
  br label %60

; <label>:60:                                     ; preds = %55, %52
  %61 = phi i1 [ false, %52 ], [ true, %55 ]
  br i1 %61, label %62, label %88, !dbg !1044

; <label>:62:                                     ; preds = %60
  %63 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1046
  %64 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %63, i32 0, i32 0, !dbg !1049
  %65 = load i16, i16* %64, align 8, !dbg !1049
  %66 = zext i16 %65 to i32, !dbg !1046
  %67 = icmp eq i32 %66, 2, !dbg !1050
  br i1 %67, label %68, label %72, !dbg !1051

; <label>:68:                                     ; preds = %62
  %69 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1052
  %70 = load i8, i8* %4, align 1, !dbg !1053
  %71 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %5, align 8, !dbg !1054
  call void @vrrp_update_pkt(%struct._vrrp_t* %69, i8 zeroext %70, %struct.sockaddr_storage* %71), !dbg !1055
  br label %72, !dbg !1055

; <label>:72:                                     ; preds = %68, %62
  %73 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1056
  %74 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %5, align 8, !dbg !1058
  %75 = call i64 @vrrp_send_pkt(%struct._vrrp_t* %73, %struct.sockaddr_storage* %74), !dbg !1059
  %76 = icmp slt i64 %75, 0, !dbg !1060
  br i1 %76, label %77, label %83, !dbg !1061

; <label>:77:                                     ; preds = %72
  %78 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1062
  %79 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %78, i32 0, i32 1, !dbg !1063
  %80 = load i8*, i8** %79, align 8, !dbg !1063
  %81 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %5, align 8, !dbg !1064
  %82 = call i8* @inet_sockaddrtos(%struct.sockaddr_storage* %81), !dbg !1065
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i32 0, i32 0), i8* %80, i8* %82), !dbg !1066
  br label %83, !dbg !1066

; <label>:83:                                     ; preds = %77, %72
  br label %84, !dbg !1067

; <label>:84:                                     ; preds = %83
  %85 = load %struct._element*, %struct._element** %6, align 8, !dbg !1068
  %86 = getelementptr inbounds %struct._element, %struct._element* %85, i32 0, i32 0, !dbg !1070
  %87 = load %struct._element*, %struct._element** %86, align 8, !dbg !1070
  store %struct._element* %87, %struct._element** %6, align 8, !dbg !1071
  br label %52, !dbg !1072, !llvm.loop !1073

; <label>:88:                                     ; preds = %60
  br label %89

; <label>:89:                                     ; preds = %88, %27
  %90 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1075
  %91 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %90, i32 0, i32 3, !dbg !1076
  %92 = load %struct._vrrp_stats*, %struct._vrrp_stats** %91, align 8, !dbg !1076
  %93 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %92, i32 0, i32 1, !dbg !1077
  %94 = load i32, i32* %93, align 8, !dbg !1078
  %95 = add i32 %94, 1, !dbg !1078
  store i32 %95, i32* %93, align 8, !dbg !1078
  ret void, !dbg !1079
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_update_pkt(%struct._vrrp_t*, i8 zeroext, %struct.sockaddr_storage*) #0 !dbg !1080 {
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.sockaddr_storage*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct._vrrphdr*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i16*, align 8
  %13 = alloca i16, align 2
  %14 = alloca %struct.iphdr*, align 8
  %15 = alloca %struct.ICV_mutable_fields, align 2
  %16 = alloca [16 x i8], align 16
  %17 = alloca %struct._ipsec_ah*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !1083, metadata !793), !dbg !1084
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !1085, metadata !793), !dbg !1086
  store %struct.sockaddr_storage* %2, %struct.sockaddr_storage** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %6, metadata !1087, metadata !793), !dbg !1088
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1089, metadata !793), !dbg !1090
  %18 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1091
  %19 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %18, i32 0, i32 72, !dbg !1092
  %20 = load i8*, i8** %19, align 8, !dbg !1092
  store i8* %20, i8** %7, align 8, !dbg !1090
  call void @llvm.dbg.declare(metadata %struct._vrrphdr** %8, metadata !1093, metadata !793), !dbg !1094
  call void @llvm.dbg.declare(metadata i8* %9, metadata !1095, metadata !793), !dbg !1096
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1097, metadata !793), !dbg !1098
  store i32 0, i32* %10, align 4, !dbg !1098
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1099, metadata !793), !dbg !1100
  %21 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1101
  %22 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %21, i32 0, i32 20, !dbg !1102
  %23 = load %struct._list*, %struct._list** %22, align 8, !dbg !1102
  %24 = icmp eq %struct._list* %23, null, !dbg !1103
  br i1 %24, label %59, label %25, !dbg !1104

; <label>:25:                                     ; preds = %3
  %26 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1105
  %27 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %26, i32 0, i32 20, !dbg !1107
  %28 = load %struct._list*, %struct._list** %27, align 8, !dbg !1107
  %29 = getelementptr inbounds %struct._list, %struct._list* %28, i32 0, i32 0, !dbg !1108
  %30 = load %struct._element*, %struct._element** %29, align 8, !dbg !1108
  %31 = icmp eq %struct._element* %30, null, !dbg !1109
  br i1 %31, label %32, label %39, !dbg !1110

; <label>:32:                                     ; preds = %25
  %33 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1111
  %34 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %33, i32 0, i32 20, !dbg !1113
  %35 = load %struct._list*, %struct._list** %34, align 8, !dbg !1113
  %36 = getelementptr inbounds %struct._list, %struct._list* %35, i32 0, i32 1, !dbg !1114
  %37 = load %struct._element*, %struct._element** %36, align 8, !dbg !1114
  %38 = icmp eq %struct._element* %37, null, !dbg !1115
  br i1 %38, label %59, label %39, !dbg !1116

; <label>:39:                                     ; preds = %32, %25
  %40 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1117
  %41 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %40, i32 0, i32 20, !dbg !1119
  %42 = load %struct._list*, %struct._list** %41, align 8, !dbg !1119
  %43 = icmp ne %struct._list* %42, null, !dbg !1120
  br i1 %43, label %45, label %44, !dbg !1121

; <label>:44:                                     ; preds = %39
  br label %51, !dbg !1122

; <label>:45:                                     ; preds = %39
  %46 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1124
  %47 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %46, i32 0, i32 20, !dbg !1126
  %48 = load %struct._list*, %struct._list** %47, align 8, !dbg !1126
  %49 = getelementptr inbounds %struct._list, %struct._list* %48, i32 0, i32 0, !dbg !1127
  %50 = load %struct._element*, %struct._element** %49, align 8, !dbg !1127
  br label %51, !dbg !1128

; <label>:51:                                     ; preds = %45, %44
  %52 = phi %struct._element* [ null, %44 ], [ %50, %45 ], !dbg !1129
  %53 = getelementptr inbounds %struct._element, %struct._element* %52, i32 0, i32 0, !dbg !1131
  %54 = load %struct._element*, %struct._element** %53, align 8, !dbg !1131
  %55 = icmp ne %struct._element* %54, null, !dbg !1132
  br i1 %55, label %56, label %59, !dbg !1133

; <label>:56:                                     ; preds = %51
  %57 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %6, align 8, !dbg !1134
  %58 = icmp ne %struct.sockaddr_storage* %57, null, !dbg !1136
  br label %59, !dbg !1136

; <label>:59:                                     ; preds = %56, %51, %32, %3
  %60 = phi i1 [ true, %51 ], [ true, %32 ], [ true, %3 ], [ %58, %56 ]
  %61 = zext i1 %60 to i8, !dbg !1137
  store i8 %61, i8* %9, align 1, !dbg !1137
  %62 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1139
  %63 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %62, i32 0, i32 0, !dbg !1141
  %64 = load i16, i16* %63, align 8, !dbg !1141
  %65 = zext i16 %64 to i32, !dbg !1139
  %66 = icmp eq i32 %65, 2, !dbg !1142
  br i1 %66, label %67, label %81, !dbg !1143

; <label>:67:                                     ; preds = %59
  %68 = call i64 @vrrp_iphdr_len(), !dbg !1144
  %69 = load i8*, i8** %7, align 8, !dbg !1146
  %70 = getelementptr inbounds i8, i8* %69, i64 %68, !dbg !1146
  store i8* %70, i8** %7, align 8, !dbg !1146
  %71 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1147
  %72 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %71, i32 0, i32 75, !dbg !1149
  %73 = load i8, i8* %72, align 4, !dbg !1149
  %74 = zext i8 %73 to i32, !dbg !1147
  %75 = icmp eq i32 %74, 2, !dbg !1150
  br i1 %75, label %76, label %80, !dbg !1151

; <label>:76:                                     ; preds = %67
  %77 = call i64 @vrrp_ipsecah_len(), !dbg !1152
  %78 = load i8*, i8** %7, align 8, !dbg !1153
  %79 = getelementptr inbounds i8, i8* %78, i64 %77, !dbg !1153
  store i8* %79, i8** %7, align 8, !dbg !1153
  br label %80, !dbg !1154

; <label>:80:                                     ; preds = %76, %67
  br label %81, !dbg !1155

; <label>:81:                                     ; preds = %80, %59
  %82 = load i8*, i8** %7, align 8, !dbg !1156
  %83 = bitcast i8* %82 to %struct._vrrphdr*, !dbg !1157
  store %struct._vrrphdr* %83, %struct._vrrphdr** %8, align 8, !dbg !1158
  %84 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1159
  %85 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %84, i32 0, i32 2, !dbg !1161
  %86 = load i8, i8* %85, align 2, !dbg !1161
  %87 = zext i8 %86 to i32, !dbg !1159
  %88 = load i8, i8* %5, align 1, !dbg !1162
  %89 = zext i8 %88 to i32, !dbg !1162
  %90 = icmp ne i32 %87, %89, !dbg !1163
  br i1 %90, label %91, label %130, !dbg !1164

; <label>:91:                                     ; preds = %81
  %92 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1165
  %93 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %92, i32 0, i32 0, !dbg !1168
  %94 = load i16, i16* %93, align 8, !dbg !1168
  %95 = zext i16 %94 to i32, !dbg !1165
  %96 = icmp eq i32 %95, 2, !dbg !1169
  br i1 %96, label %97, label %125, !dbg !1170

; <label>:97:                                     ; preds = %91
  call void @llvm.dbg.declare(metadata i16** %12, metadata !1171, metadata !793), !dbg !1173
  %98 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1174
  %99 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %98, i32 0, i32 2, !dbg !1175
  %100 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1176
  %101 = bitcast %struct._vrrphdr* %100 to i8*, !dbg !1177
  %102 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1178
  %103 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %102, i32 0, i32 2, !dbg !1179
  %104 = ptrtoint i8* %101 to i64, !dbg !1180
  %105 = ptrtoint i8* %103 to i64, !dbg !1180
  %106 = sub i64 %104, %105, !dbg !1180
  %107 = and i64 %106, 1, !dbg !1181
  %108 = sub i64 0, %107, !dbg !1182
  %109 = getelementptr inbounds i8, i8* %99, i64 %108, !dbg !1182
  %110 = bitcast i8* %109 to i16*, !dbg !1183
  store i16* %110, i16** %12, align 8, !dbg !1173
  call void @llvm.dbg.declare(metadata i16* %13, metadata !1184, metadata !793), !dbg !1185
  %111 = load i16*, i16** %12, align 8, !dbg !1186
  %112 = load i16, i16* %111, align 2, !dbg !1187
  store i16 %112, i16* %13, align 2, !dbg !1185
  %113 = load i8, i8* %5, align 1, !dbg !1188
  %114 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1189
  %115 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %114, i32 0, i32 2, !dbg !1190
  store i8 %113, i8* %115, align 2, !dbg !1191
  %116 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1192
  %117 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %116, i32 0, i32 5, !dbg !1193
  %118 = load i16, i16* %117, align 2, !dbg !1193
  %119 = load i16, i16* %13, align 2, !dbg !1194
  %120 = load i16*, i16** %12, align 8, !dbg !1195
  %121 = load i16, i16* %120, align 2, !dbg !1196
  %122 = call zeroext i16 @csum_incremental_update16(i16 zeroext %118, i16 zeroext %119, i16 zeroext %121), !dbg !1197
  %123 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1198
  %124 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %123, i32 0, i32 5, !dbg !1199
  store i16 %122, i16* %124, align 2, !dbg !1200
  br label %129, !dbg !1201

; <label>:125:                                    ; preds = %91
  %126 = load i8, i8* %5, align 1, !dbg !1202
  %127 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1203
  %128 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %127, i32 0, i32 2, !dbg !1204
  store i8 %126, i8* %128, align 2, !dbg !1205
  br label %129

; <label>:129:                                    ; preds = %125, %97
  br label %130, !dbg !1206

; <label>:130:                                    ; preds = %129, %81
  %131 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1207
  %132 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %131, i32 0, i32 0, !dbg !1209
  %133 = load i16, i16* %132, align 8, !dbg !1209
  %134 = zext i16 %133 to i32, !dbg !1207
  %135 = icmp eq i32 %134, 2, !dbg !1210
  br i1 %135, label %136, label %371, !dbg !1211

; <label>:136:                                    ; preds = %130
  call void @llvm.dbg.declare(metadata %struct.iphdr** %14, metadata !1212, metadata !793), !dbg !1214
  %137 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1215
  %138 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %137, i32 0, i32 72, !dbg !1216
  %139 = load i8*, i8** %138, align 8, !dbg !1216
  %140 = bitcast i8* %139 to %struct.iphdr*, !dbg !1217
  store %struct.iphdr* %140, %struct.iphdr** %14, align 8, !dbg !1214
  %141 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %6, align 8, !dbg !1218
  %142 = icmp ne %struct.sockaddr_storage* %141, null, !dbg !1218
  br i1 %142, label %162, label %143, !dbg !1220

; <label>:143:                                    ; preds = %136
  %144 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1221
  %145 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %144, i32 0, i32 78, !dbg !1224
  %146 = load i32, i32* %145, align 8, !dbg !1225
  %147 = add nsw i32 %146, 1, !dbg !1225
  store i32 %147, i32* %145, align 8, !dbg !1225
  %148 = icmp ne i32 %147, 0, !dbg !1225
  br i1 %148, label %154, label %149, !dbg !1226

; <label>:149:                                    ; preds = %143
  %150 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1227
  %151 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %150, i32 0, i32 78, !dbg !1228
  %152 = load i32, i32* %151, align 8, !dbg !1229
  %153 = add nsw i32 %152, 1, !dbg !1229
  store i32 %153, i32* %151, align 8, !dbg !1229
  br label %154, !dbg !1229

; <label>:154:                                    ; preds = %149, %143
  %155 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1230
  %156 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %155, i32 0, i32 78, !dbg !1231
  %157 = load i32, i32* %156, align 8, !dbg !1231
  %158 = trunc i32 %157 to i16, !dbg !1230
  %159 = call zeroext i16 @htons(i16 zeroext %158) #1, !dbg !1232
  %160 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1233
  %161 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %160, i32 0, i32 3, !dbg !1234
  store i16 %159, i16* %161, align 4, !dbg !1235
  br label %202, !dbg !1236

; <label>:162:                                    ; preds = %136
  %163 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1237
  %164 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %163, i32 0, i32 60, !dbg !1240
  %165 = load i32, i32* %164, align 4, !dbg !1240
  %166 = icmp eq i32 %165, 2, !dbg !1241
  br i1 %166, label %167, label %172, !dbg !1242

; <label>:167:                                    ; preds = %162
  %168 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %6, align 8, !dbg !1243
  %169 = call i32 @inet_sockaddrip4(%struct.sockaddr_storage* %168), !dbg !1244
  %170 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1245
  %171 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %170, i32 0, i32 9, !dbg !1246
  store i32 %169, i32* %171, align 4, !dbg !1247
  br label %201, !dbg !1245

; <label>:172:                                    ; preds = %162
  %173 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %6, align 8, !dbg !1248
  %174 = call i32 @inet_sockaddrip4(%struct.sockaddr_storage* %173), !dbg !1250
  store i32 %174, i32* %11, align 4, !dbg !1251
  %175 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1252
  %176 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %175, i32 0, i32 9, !dbg !1254
  %177 = load i32, i32* %176, align 4, !dbg !1254
  %178 = load i32, i32* %11, align 4, !dbg !1255
  %179 = icmp ne i32 %177, %178, !dbg !1256
  br i1 %179, label %180, label %200, !dbg !1257

; <label>:180:                                    ; preds = %172
  %181 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1258
  %182 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %181, i32 0, i32 21, !dbg !1261
  %183 = load i32, i32* %182, align 8, !dbg !1261
  %184 = icmp ult i32 %183, 2, !dbg !1262
  br i1 %184, label %185, label %196, !dbg !1263

; <label>:185:                                    ; preds = %180
  %186 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1264
  %187 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %186, i32 0, i32 5, !dbg !1265
  %188 = load i16, i16* %187, align 2, !dbg !1265
  %189 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1266
  %190 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %189, i32 0, i32 9, !dbg !1267
  %191 = load i32, i32* %190, align 4, !dbg !1267
  %192 = load i32, i32* %11, align 4, !dbg !1268
  %193 = call zeroext i16 @csum_incremental_update32(i16 zeroext %188, i32 %191, i32 %192), !dbg !1269
  %194 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1270
  %195 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %194, i32 0, i32 5, !dbg !1271
  store i16 %193, i16* %195, align 2, !dbg !1272
  br label %196, !dbg !1270

; <label>:196:                                    ; preds = %185, %180
  %197 = load i32, i32* %11, align 4, !dbg !1273
  %198 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1274
  %199 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %198, i32 0, i32 9, !dbg !1275
  store i32 %197, i32* %199, align 4, !dbg !1276
  br label %200, !dbg !1277

; <label>:200:                                    ; preds = %196, %172
  br label %201

; <label>:201:                                    ; preds = %200, %167
  br label %202

; <label>:202:                                    ; preds = %201, %154
  %203 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1278
  %204 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %203, i32 0, i32 17, !dbg !1280
  %205 = load i8, i8* %204, align 8, !dbg !1280
  %206 = trunc i8 %205 to i1, !dbg !1280
  br i1 %206, label %253, label %207, !dbg !1281

; <label>:207:                                    ; preds = %202
  %208 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1282
  %209 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %208, i32 0, i32 8, !dbg !1283
  %210 = load i32, i32* %209, align 4, !dbg !1283
  %211 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1284
  %212 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %211, i32 0, i32 16, !dbg !1285
  %213 = bitcast %struct.sockaddr_storage* %212 to %struct.sockaddr_in*, !dbg !1286
  %214 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %213, i32 0, i32 2, !dbg !1286
  %215 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %214, i32 0, i32 0, !dbg !1287
  %216 = load i32, i32* %215, align 4, !dbg !1287
  %217 = icmp ne i32 %210, %216, !dbg !1288
  br i1 %217, label %218, label %253, !dbg !1289

; <label>:218:                                    ; preds = %207
  %219 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1291
  %220 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %219, i32 0, i32 60, !dbg !1294
  %221 = load i32, i32* %220, align 4, !dbg !1294
  %222 = icmp eq i32 %221, 2, !dbg !1295
  br i1 %222, label %223, label %232, !dbg !1296

; <label>:223:                                    ; preds = %218
  %224 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1297
  %225 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %224, i32 0, i32 16, !dbg !1298
  %226 = bitcast %struct.sockaddr_storage* %225 to %struct.sockaddr_in*, !dbg !1299
  %227 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %226, i32 0, i32 2, !dbg !1299
  %228 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %227, i32 0, i32 0, !dbg !1300
  %229 = load i32, i32* %228, align 4, !dbg !1300
  %230 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1301
  %231 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %230, i32 0, i32 8, !dbg !1302
  store i32 %229, i32* %231, align 4, !dbg !1303
  br label %252, !dbg !1301

; <label>:232:                                    ; preds = %218
  %233 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1304
  %234 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %233, i32 0, i32 16, !dbg !1306
  %235 = bitcast %struct.sockaddr_storage* %234 to %struct.sockaddr_in*, !dbg !1307
  %236 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %235, i32 0, i32 2, !dbg !1307
  %237 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %236, i32 0, i32 0, !dbg !1308
  %238 = load i32, i32* %237, align 4, !dbg !1308
  store i32 %238, i32* %10, align 4, !dbg !1309
  %239 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1310
  %240 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %239, i32 0, i32 5, !dbg !1311
  %241 = load i16, i16* %240, align 2, !dbg !1311
  %242 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1312
  %243 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %242, i32 0, i32 8, !dbg !1313
  %244 = load i32, i32* %243, align 4, !dbg !1313
  %245 = load i32, i32* %10, align 4, !dbg !1314
  %246 = call zeroext i16 @csum_incremental_update32(i16 zeroext %241, i32 %244, i32 %245), !dbg !1315
  %247 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !1316
  %248 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %247, i32 0, i32 5, !dbg !1317
  store i16 %246, i16* %248, align 2, !dbg !1318
  %249 = load i32, i32* %10, align 4, !dbg !1319
  %250 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1320
  %251 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %250, i32 0, i32 8, !dbg !1321
  store i32 %249, i32* %251, align 4, !dbg !1322
  br label %252

; <label>:252:                                    ; preds = %232, %223
  br label %253, !dbg !1323

; <label>:253:                                    ; preds = %252, %207, %202
  %254 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1324
  %255 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %254, i32 0, i32 75, !dbg !1326
  %256 = load i8, i8* %255, align 4, !dbg !1326
  %257 = zext i8 %256 to i32, !dbg !1324
  %258 = icmp eq i32 %257, 2, !dbg !1327
  br i1 %258, label %259, label %370, !dbg !1328

; <label>:259:                                    ; preds = %253
  call void @llvm.dbg.declare(metadata %struct.ICV_mutable_fields* %15, metadata !1329, metadata !793), !dbg !1337
  call void @llvm.dbg.declare(metadata [16 x i8]* %16, metadata !1338, metadata !793), !dbg !1340
  call void @llvm.dbg.declare(metadata %struct._ipsec_ah** %17, metadata !1341, metadata !793), !dbg !1342
  %260 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1343
  %261 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %260, i32 0, i32 72, !dbg !1344
  %262 = load i8*, i8** %261, align 8, !dbg !1344
  %263 = getelementptr inbounds i8, i8* %262, i64 20, !dbg !1345
  %264 = bitcast i8* %263 to %struct._ipsec_ah*, !dbg !1346
  store %struct._ipsec_ah* %264, %struct._ipsec_ah** %17, align 8, !dbg !1342
  %265 = load i32, i32* %10, align 4, !dbg !1347
  %266 = icmp ne i32 %265, 0, !dbg !1347
  br i1 %266, label %267, label %271, !dbg !1349

; <label>:267:                                    ; preds = %259
  %268 = load i32, i32* %10, align 4, !dbg !1350
  %269 = load %struct._ipsec_ah*, %struct._ipsec_ah** %17, align 8, !dbg !1351
  %270 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %269, i32 0, i32 3, !dbg !1352
  store i32 %268, i32* %270, align 4, !dbg !1353
  br label %271, !dbg !1351

; <label>:271:                                    ; preds = %267, %259
  %272 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %6, align 8, !dbg !1354
  %273 = icmp ne %struct.sockaddr_storage* %272, null, !dbg !1354
  br i1 %273, label %298, label %274, !dbg !1356

; <label>:274:                                    ; preds = %271
  %275 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1357
  %276 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %275, i32 0, i32 77, !dbg !1360
  %277 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %276, i32 0, i32 1, !dbg !1361
  %278 = load i32, i32* %277, align 4, !dbg !1361
  %279 = icmp ugt i32 %278, -3, !dbg !1362
  br i1 %279, label %280, label %284, !dbg !1363

; <label>:280:                                    ; preds = %274
  %281 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1364
  %282 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %281, i32 0, i32 77, !dbg !1366
  %283 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %282, i32 0, i32 0, !dbg !1367
  store i8 1, i8* %283, align 8, !dbg !1368
  br label %290, !dbg !1369

; <label>:284:                                    ; preds = %274
  %285 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1370
  %286 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %285, i32 0, i32 77, !dbg !1372
  %287 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %286, i32 0, i32 1, !dbg !1373
  %288 = load i32, i32* %287, align 4, !dbg !1374
  %289 = add i32 %288, 1, !dbg !1374
  store i32 %289, i32* %287, align 4, !dbg !1374
  br label %290

; <label>:290:                                    ; preds = %284, %280
  %291 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1375
  %292 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %291, i32 0, i32 77, !dbg !1376
  %293 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %292, i32 0, i32 1, !dbg !1377
  %294 = load i32, i32* %293, align 4, !dbg !1377
  %295 = call i32 @htonl(i32 %294) #1, !dbg !1378
  %296 = load %struct._ipsec_ah*, %struct._ipsec_ah** %17, align 8, !dbg !1379
  %297 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %296, i32 0, i32 4, !dbg !1380
  store i32 %295, i32* %297, align 4, !dbg !1381
  br label %298, !dbg !1382

; <label>:298:                                    ; preds = %290, %271
  %299 = load i8, i8* %9, align 1, !dbg !1383
  %300 = trunc i8 %299 to i1, !dbg !1383
  br i1 %300, label %301, label %369, !dbg !1385

; <label>:301:                                    ; preds = %298
  %302 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1386
  %303 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %302, i32 0, i32 1, !dbg !1388
  %304 = load i8, i8* %303, align 1, !dbg !1388
  %305 = getelementptr inbounds %struct.ICV_mutable_fields, %struct.ICV_mutable_fields* %15, i32 0, i32 0, !dbg !1389
  store i8 %304, i8* %305, align 2, !dbg !1390
  %306 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1391
  %307 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %306, i32 0, i32 5, !dbg !1392
  %308 = load i8, i8* %307, align 4, !dbg !1392
  %309 = getelementptr inbounds %struct.ICV_mutable_fields, %struct.ICV_mutable_fields* %15, i32 0, i32 1, !dbg !1393
  store i8 %308, i8* %309, align 1, !dbg !1394
  %310 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1395
  %311 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %310, i32 0, i32 4, !dbg !1396
  %312 = load i16, i16* %311, align 2, !dbg !1396
  %313 = getelementptr inbounds %struct.ICV_mutable_fields, %struct.ICV_mutable_fields* %15, i32 0, i32 2, !dbg !1397
  store i16 %312, i16* %313, align 2, !dbg !1398
  %314 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1399
  %315 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %314, i32 0, i32 1, !dbg !1400
  store i8 0, i8* %315, align 1, !dbg !1401
  %316 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1402
  %317 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %316, i32 0, i32 4, !dbg !1403
  store i16 0, i16* %317, align 2, !dbg !1404
  %318 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1405
  %319 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %318, i32 0, i32 20, !dbg !1407
  %320 = load %struct._list*, %struct._list** %319, align 8, !dbg !1407
  %321 = icmp eq %struct._list* %320, null, !dbg !1408
  br i1 %321, label %339, label %322, !dbg !1409

; <label>:322:                                    ; preds = %301
  %323 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1410
  %324 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %323, i32 0, i32 20, !dbg !1412
  %325 = load %struct._list*, %struct._list** %324, align 8, !dbg !1412
  %326 = getelementptr inbounds %struct._list, %struct._list* %325, i32 0, i32 0, !dbg !1413
  %327 = load %struct._element*, %struct._element** %326, align 8, !dbg !1413
  %328 = icmp eq %struct._element* %327, null, !dbg !1414
  br i1 %328, label %329, label %336, !dbg !1415

; <label>:329:                                    ; preds = %322
  %330 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1416
  %331 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %330, i32 0, i32 20, !dbg !1418
  %332 = load %struct._list*, %struct._list** %331, align 8, !dbg !1418
  %333 = getelementptr inbounds %struct._list, %struct._list* %332, i32 0, i32 1, !dbg !1419
  %334 = load %struct._element*, %struct._element** %333, align 8, !dbg !1419
  %335 = icmp eq %struct._element* %334, null, !dbg !1420
  br i1 %335, label %339, label %336, !dbg !1421

; <label>:336:                                    ; preds = %329, %322
  %337 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1422
  %338 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %337, i32 0, i32 5, !dbg !1423
  store i8 0, i8* %338, align 4, !dbg !1424
  br label %339, !dbg !1422

; <label>:339:                                    ; preds = %336, %329, %301
  %340 = load %struct._ipsec_ah*, %struct._ipsec_ah** %17, align 8, !dbg !1425
  %341 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %340, i32 0, i32 5, !dbg !1426
  %342 = bitcast [12 x i8]* %341 to i8*, !dbg !1427
  call void @llvm.memset.p0i8.i64(i8* %342, i8 0, i64 12, i32 4, i1 false), !dbg !1427
  %343 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1428
  %344 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %343, i32 0, i32 72, !dbg !1429
  %345 = load i8*, i8** %344, align 8, !dbg !1429
  %346 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1430
  %347 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %346, i32 0, i32 73, !dbg !1431
  %348 = load i64, i64* %347, align 8, !dbg !1431
  %349 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1432
  %350 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %349, i32 0, i32 76, !dbg !1433
  %351 = getelementptr inbounds [8 x i8], [8 x i8]* %350, i32 0, i32 0, !dbg !1432
  %352 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i32 0, i32 0, !dbg !1434
  call void @hmac_md5(i8* %345, i64 %348, i8* %351, i64 8, i8* %352), !dbg !1435
  %353 = load %struct._ipsec_ah*, %struct._ipsec_ah** %17, align 8, !dbg !1436
  %354 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %353, i32 0, i32 5, !dbg !1437
  %355 = getelementptr inbounds [12 x i8], [12 x i8]* %354, i32 0, i32 0, !dbg !1438
  %356 = getelementptr inbounds [16 x i8], [16 x i8]* %16, i32 0, i32 0, !dbg !1438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %355, i8* %356, i64 12, i32 4, i1 false), !dbg !1438
  %357 = getelementptr inbounds %struct.ICV_mutable_fields, %struct.ICV_mutable_fields* %15, i32 0, i32 0, !dbg !1439
  %358 = load i8, i8* %357, align 2, !dbg !1439
  %359 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1440
  %360 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %359, i32 0, i32 1, !dbg !1441
  store i8 %358, i8* %360, align 1, !dbg !1442
  %361 = getelementptr inbounds %struct.ICV_mutable_fields, %struct.ICV_mutable_fields* %15, i32 0, i32 2, !dbg !1443
  %362 = load i16, i16* %361, align 2, !dbg !1443
  %363 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1444
  %364 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %363, i32 0, i32 4, !dbg !1445
  store i16 %362, i16* %364, align 2, !dbg !1446
  %365 = getelementptr inbounds %struct.ICV_mutable_fields, %struct.ICV_mutable_fields* %15, i32 0, i32 1, !dbg !1447
  %366 = load i8, i8* %365, align 1, !dbg !1447
  %367 = load %struct.iphdr*, %struct.iphdr** %14, align 8, !dbg !1448
  %368 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %367, i32 0, i32 5, !dbg !1449
  store i8 %366, i8* %368, align 4, !dbg !1450
  br label %369, !dbg !1451

; <label>:369:                                    ; preds = %339, %298
  br label %370, !dbg !1452

; <label>:370:                                    ; preds = %369, %253
  br label %371, !dbg !1453

; <label>:371:                                    ; preds = %370, %130
  ret void, !dbg !1454
}

; Function Attrs: nounwind uwtable
define internal i64 @vrrp_send_pkt(%struct._vrrp_t*, %struct.sockaddr_storage*) #0 !dbg !1455 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca %struct.sockaddr_storage*, align 8
  %5 = alloca %struct.sockaddr_storage*, align 8
  %6 = alloca %struct.msghdr, align 8
  %7 = alloca %struct.iovec, align 8
  %8 = alloca [256 x i8], align 16
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !1460, metadata !793), !dbg !1461
  store %struct.sockaddr_storage* %1, %struct.sockaddr_storage** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %4, metadata !1462, metadata !793), !dbg !1463
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %5, metadata !1464, metadata !793), !dbg !1465
  %9 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1466
  %10 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %9, i32 0, i32 16, !dbg !1467
  store %struct.sockaddr_storage* %10, %struct.sockaddr_storage** %5, align 8, !dbg !1465
  call void @llvm.dbg.declare(metadata %struct.msghdr* %6, metadata !1468, metadata !793), !dbg !1486
  call void @llvm.dbg.declare(metadata %struct.iovec* %7, metadata !1487, metadata !793), !dbg !1488
  call void @llvm.dbg.declare(metadata [256 x i8]* %8, metadata !1489, metadata !793), !dbg !1493
  %11 = bitcast %struct.msghdr* %6 to i8*, !dbg !1494
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 56, i32 8, i1 false), !dbg !1494
  %12 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 2, !dbg !1495
  store %struct.iovec* %7, %struct.iovec** %12, align 8, !dbg !1496
  %13 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 3, !dbg !1497
  store i64 1, i64* %13, align 8, !dbg !1498
  %14 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1499
  %15 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %14, i32 0, i32 72, !dbg !1500
  %16 = load i8*, i8** %15, align 8, !dbg !1500
  %17 = getelementptr inbounds %struct.iovec, %struct.iovec* %7, i32 0, i32 0, !dbg !1501
  store i8* %16, i8** %17, align 8, !dbg !1502
  %18 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1503
  %19 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %18, i32 0, i32 73, !dbg !1504
  %20 = load i64, i64* %19, align 8, !dbg !1504
  %21 = getelementptr inbounds %struct.iovec, %struct.iovec* %7, i32 0, i32 1, !dbg !1505
  store i64 %20, i64* %21, align 8, !dbg !1506
  %22 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !1507
  %23 = icmp ne %struct.sockaddr_storage* %22, null, !dbg !1507
  br i1 %23, label %24, label %35, !dbg !1509

; <label>:24:                                     ; preds = %2
  %25 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !1510
  %26 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %25, i32 0, i32 0, !dbg !1512
  %27 = load i16, i16* %26, align 8, !dbg !1512
  %28 = zext i16 %27 to i32, !dbg !1510
  %29 = icmp eq i32 %28, 2, !dbg !1513
  br i1 %29, label %30, label %35, !dbg !1514

; <label>:30:                                     ; preds = %24
  %31 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !1515
  %32 = bitcast %struct.sockaddr_storage* %31 to i8*, !dbg !1515
  %33 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 0, !dbg !1517
  store i8* %32, i8** %33, align 8, !dbg !1518
  %34 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 1, !dbg !1519
  store i32 16, i32* %34, align 8, !dbg !1520
  br label %84, !dbg !1521

; <label>:35:                                     ; preds = %24, %2
  %36 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !1522
  %37 = icmp ne %struct.sockaddr_storage* %36, null, !dbg !1522
  br i1 %37, label %38, label %53, !dbg !1525

; <label>:38:                                     ; preds = %35
  %39 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !1526
  %40 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %39, i32 0, i32 0, !dbg !1528
  %41 = load i16, i16* %40, align 8, !dbg !1528
  %42 = zext i16 %41 to i32, !dbg !1526
  %43 = icmp eq i32 %42, 10, !dbg !1529
  br i1 %43, label %44, label %53, !dbg !1530

; <label>:44:                                     ; preds = %38
  %45 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !1531
  %46 = bitcast %struct.sockaddr_storage* %45 to i8*, !dbg !1531
  %47 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 0, !dbg !1533
  store i8* %46, i8** %47, align 8, !dbg !1534
  %48 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 1, !dbg !1535
  store i32 28, i32* %48, align 8, !dbg !1536
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i32 0, i32 0, !dbg !1537
  %50 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %5, align 8, !dbg !1538
  %51 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1539
  %52 = call i32 @vrrp_build_ancillary_data(%struct.msghdr* %6, i8* %49, %struct.sockaddr_storage* %50, %struct._vrrp_t* %51), !dbg !1540
  br label %83, !dbg !1541

; <label>:53:                                     ; preds = %38, %35
  %54 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1542
  %55 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %54, i32 0, i32 0, !dbg !1545
  %56 = load i16, i16* %55, align 8, !dbg !1545
  %57 = zext i16 %56 to i32, !dbg !1542
  %58 = icmp eq i32 %57, 2, !dbg !1546
  br i1 %58, label %59, label %65, !dbg !1542

; <label>:59:                                     ; preds = %53
  %60 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !1547
  %61 = getelementptr inbounds %struct._data, %struct._data* %60, i32 0, i32 22, !dbg !1549
  %62 = bitcast %struct.sockaddr_in* %61 to i8*, !dbg !1550
  %63 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 0, !dbg !1551
  store i8* %62, i8** %63, align 8, !dbg !1552
  %64 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 1, !dbg !1553
  store i32 16, i32* %64, align 8, !dbg !1554
  br label %82, !dbg !1555

; <label>:65:                                     ; preds = %53
  %66 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1556
  %67 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %66, i32 0, i32 0, !dbg !1559
  %68 = load i16, i16* %67, align 8, !dbg !1559
  %69 = zext i16 %68 to i32, !dbg !1556
  %70 = icmp eq i32 %69, 10, !dbg !1560
  br i1 %70, label %71, label %81, !dbg !1556

; <label>:71:                                     ; preds = %65
  %72 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !1561
  %73 = getelementptr inbounds %struct._data, %struct._data* %72, i32 0, i32 23, !dbg !1563
  %74 = bitcast %struct.sockaddr_in6* %73 to i8*, !dbg !1564
  %75 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 0, !dbg !1565
  store i8* %74, i8** %75, align 8, !dbg !1566
  %76 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i32 0, i32 1, !dbg !1567
  store i32 28, i32* %76, align 8, !dbg !1568
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i32 0, i32 0, !dbg !1569
  %78 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %5, align 8, !dbg !1570
  %79 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1571
  %80 = call i32 @vrrp_build_ancillary_data(%struct.msghdr* %6, i8* %77, %struct.sockaddr_storage* %78, %struct._vrrp_t* %79), !dbg !1572
  br label %81, !dbg !1573

; <label>:81:                                     ; preds = %71, %65
  br label %82

; <label>:82:                                     ; preds = %81, %59
  br label %83

; <label>:83:                                     ; preds = %82, %44
  br label %84

; <label>:84:                                     ; preds = %83, %30
  %85 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1574
  %86 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %85, i32 0, i32 58, !dbg !1575
  %87 = load %struct._sock*, %struct._sock** %86, align 8, !dbg !1575
  %88 = getelementptr inbounds %struct._sock, %struct._sock* %87, i32 0, i32 6, !dbg !1576
  %89 = load i32, i32* %88, align 8, !dbg !1576
  %90 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !1577
  %91 = icmp ne %struct.sockaddr_storage* %90, null, !dbg !1578
  %92 = select i1 %91, i32 0, i32 4, !dbg !1578
  %93 = call i64 @sendmsg(i32 %89, %struct.msghdr* %6, i32 %92), !dbg !1579
  ret i64 %93, !dbg !1580
}

declare void @log_message(i32, i8*, ...) #3

declare i8* @inet_sockaddrtos(%struct.sockaddr_storage*) #3

; Function Attrs: nounwind uwtable
define void @vrrp_send_link_update(%struct._vrrp_t*, i32) #0 !dbg !1581 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct._ip_address*, align 8
  %7 = alloca %struct._element*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !1584, metadata !793), !dbg !1585
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1586, metadata !793), !dbg !1587
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1588, metadata !793), !dbg !1589
  call void @llvm.dbg.declare(metadata %struct._ip_address** %6, metadata !1590, metadata !793), !dbg !1591
  call void @llvm.dbg.declare(metadata %struct._element** %7, metadata !1592, metadata !793), !dbg !1593
  %8 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1594
  %9 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %8, i32 0, i32 40, !dbg !1596
  %10 = load i8, i8* %9, align 4, !dbg !1596
  %11 = trunc i8 %10 to i1, !dbg !1596
  br i1 %11, label %13, label %12, !dbg !1597

; <label>:12:                                     ; preds = %2
  br label %133, !dbg !1598

; <label>:13:                                     ; preds = %2
  %14 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1599
  %15 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %14, i32 0, i32 4, !dbg !1601
  %16 = load %struct._interface*, %struct._interface** %15, align 8, !dbg !1601
  %17 = getelementptr inbounds %struct._interface, %struct._interface* %16, i32 0, i32 4, !dbg !1602
  %18 = load i32, i32* %17, align 8, !dbg !1602
  %19 = and i32 %18, 128, !dbg !1603
  %20 = icmp ne i32 %19, 0, !dbg !1603
  br i1 %20, label %21, label %22, !dbg !1604

; <label>:21:                                     ; preds = %13
  br label %133, !dbg !1605

; <label>:22:                                     ; preds = %13
  store i32 0, i32* %5, align 4, !dbg !1606
  br label %23, !dbg !1608

; <label>:23:                                     ; preds = %130, %22
  %24 = load i32, i32* %5, align 4, !dbg !1609
  %25 = load i32, i32* %4, align 4, !dbg !1612
  %26 = icmp ult i32 %24, %25, !dbg !1613
  br i1 %26, label %27, label %133, !dbg !1614

; <label>:27:                                     ; preds = %23
  %28 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1615
  %29 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %28, i32 0, i32 41, !dbg !1618
  %30 = load %struct._list*, %struct._list** %29, align 8, !dbg !1618
  %31 = icmp eq %struct._list* %30, null, !dbg !1619
  br i1 %31, label %78, label %32, !dbg !1620

; <label>:32:                                     ; preds = %27
  %33 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1621
  %34 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %33, i32 0, i32 41, !dbg !1623
  %35 = load %struct._list*, %struct._list** %34, align 8, !dbg !1623
  %36 = getelementptr inbounds %struct._list, %struct._list* %35, i32 0, i32 0, !dbg !1624
  %37 = load %struct._element*, %struct._element** %36, align 8, !dbg !1624
  %38 = icmp eq %struct._element* %37, null, !dbg !1625
  br i1 %38, label %39, label %46, !dbg !1626

; <label>:39:                                     ; preds = %32
  %40 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1627
  %41 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %40, i32 0, i32 41, !dbg !1629
  %42 = load %struct._list*, %struct._list** %41, align 8, !dbg !1629
  %43 = getelementptr inbounds %struct._list, %struct._list* %42, i32 0, i32 1, !dbg !1630
  %44 = load %struct._element*, %struct._element** %43, align 8, !dbg !1630
  %45 = icmp eq %struct._element* %44, null, !dbg !1631
  br i1 %45, label %78, label %46, !dbg !1632

; <label>:46:                                     ; preds = %39, %32
  %47 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1633
  %48 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %47, i32 0, i32 41, !dbg !1636
  %49 = load %struct._list*, %struct._list** %48, align 8, !dbg !1636
  %50 = icmp ne %struct._list* %49, null, !dbg !1637
  br i1 %50, label %52, label %51, !dbg !1638

; <label>:51:                                     ; preds = %46
  br label %58, !dbg !1639

; <label>:52:                                     ; preds = %46
  %53 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1641
  %54 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %53, i32 0, i32 41, !dbg !1643
  %55 = load %struct._list*, %struct._list** %54, align 8, !dbg !1643
  %56 = getelementptr inbounds %struct._list, %struct._list* %55, i32 0, i32 0, !dbg !1644
  %57 = load %struct._element*, %struct._element** %56, align 8, !dbg !1644
  br label %58, !dbg !1645

; <label>:58:                                     ; preds = %52, %51
  %59 = phi %struct._element* [ null, %51 ], [ %57, %52 ], !dbg !1646
  store %struct._element* %59, %struct._element** %7, align 8, !dbg !1648
  br label %60, !dbg !1649

; <label>:60:                                     ; preds = %73, %58
  %61 = load %struct._element*, %struct._element** %7, align 8, !dbg !1650
  %62 = icmp ne %struct._element* %61, null, !dbg !1653
  br i1 %62, label %63, label %77, !dbg !1653

; <label>:63:                                     ; preds = %60
  %64 = load %struct._element*, %struct._element** %7, align 8, !dbg !1654
  %65 = getelementptr inbounds %struct._element, %struct._element* %64, i32 0, i32 2, !dbg !1656
  %66 = load i8*, i8** %65, align 8, !dbg !1656
  %67 = bitcast i8* %66 to %struct._ip_address*, !dbg !1657
  store %struct._ip_address* %67, %struct._ip_address** %6, align 8, !dbg !1658
  %68 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1659
  %69 = load %struct._ip_address*, %struct._ip_address** %6, align 8, !dbg !1660
  %70 = load i32, i32* %5, align 4, !dbg !1661
  %71 = icmp ne i32 %70, 0, !dbg !1662
  %72 = xor i1 %71, true, !dbg !1662
  call void @vrrp_send_update(%struct._vrrp_t* %68, %struct._ip_address* %69, i1 zeroext %72), !dbg !1663
  br label %73, !dbg !1664

; <label>:73:                                     ; preds = %63
  %74 = load %struct._element*, %struct._element** %7, align 8, !dbg !1665
  %75 = getelementptr inbounds %struct._element, %struct._element* %74, i32 0, i32 0, !dbg !1667
  %76 = load %struct._element*, %struct._element** %75, align 8, !dbg !1667
  store %struct._element* %76, %struct._element** %7, align 8, !dbg !1668
  br label %60, !dbg !1669, !llvm.loop !1670

; <label>:77:                                     ; preds = %60
  br label %78, !dbg !1672

; <label>:78:                                     ; preds = %77, %39, %27
  %79 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1673
  %80 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %79, i32 0, i32 42, !dbg !1675
  %81 = load %struct._list*, %struct._list** %80, align 8, !dbg !1675
  %82 = icmp eq %struct._list* %81, null, !dbg !1676
  br i1 %82, label %129, label %83, !dbg !1677

; <label>:83:                                     ; preds = %78
  %84 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1678
  %85 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %84, i32 0, i32 42, !dbg !1680
  %86 = load %struct._list*, %struct._list** %85, align 8, !dbg !1680
  %87 = getelementptr inbounds %struct._list, %struct._list* %86, i32 0, i32 0, !dbg !1681
  %88 = load %struct._element*, %struct._element** %87, align 8, !dbg !1681
  %89 = icmp eq %struct._element* %88, null, !dbg !1682
  br i1 %89, label %90, label %97, !dbg !1683

; <label>:90:                                     ; preds = %83
  %91 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1684
  %92 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %91, i32 0, i32 42, !dbg !1686
  %93 = load %struct._list*, %struct._list** %92, align 8, !dbg !1686
  %94 = getelementptr inbounds %struct._list, %struct._list* %93, i32 0, i32 1, !dbg !1687
  %95 = load %struct._element*, %struct._element** %94, align 8, !dbg !1687
  %96 = icmp eq %struct._element* %95, null, !dbg !1688
  br i1 %96, label %129, label %97, !dbg !1689

; <label>:97:                                     ; preds = %90, %83
  %98 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1690
  %99 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %98, i32 0, i32 42, !dbg !1693
  %100 = load %struct._list*, %struct._list** %99, align 8, !dbg !1693
  %101 = icmp ne %struct._list* %100, null, !dbg !1694
  br i1 %101, label %103, label %102, !dbg !1695

; <label>:102:                                    ; preds = %97
  br label %109, !dbg !1696

; <label>:103:                                    ; preds = %97
  %104 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1698
  %105 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %104, i32 0, i32 42, !dbg !1700
  %106 = load %struct._list*, %struct._list** %105, align 8, !dbg !1700
  %107 = getelementptr inbounds %struct._list, %struct._list* %106, i32 0, i32 0, !dbg !1701
  %108 = load %struct._element*, %struct._element** %107, align 8, !dbg !1701
  br label %109, !dbg !1702

; <label>:109:                                    ; preds = %103, %102
  %110 = phi %struct._element* [ null, %102 ], [ %108, %103 ], !dbg !1703
  store %struct._element* %110, %struct._element** %7, align 8, !dbg !1705
  br label %111, !dbg !1706

; <label>:111:                                    ; preds = %124, %109
  %112 = load %struct._element*, %struct._element** %7, align 8, !dbg !1707
  %113 = icmp ne %struct._element* %112, null, !dbg !1710
  br i1 %113, label %114, label %128, !dbg !1710

; <label>:114:                                    ; preds = %111
  %115 = load %struct._element*, %struct._element** %7, align 8, !dbg !1711
  %116 = getelementptr inbounds %struct._element, %struct._element* %115, i32 0, i32 2, !dbg !1713
  %117 = load i8*, i8** %116, align 8, !dbg !1713
  %118 = bitcast i8* %117 to %struct._ip_address*, !dbg !1714
  store %struct._ip_address* %118, %struct._ip_address** %6, align 8, !dbg !1715
  %119 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !1716
  %120 = load %struct._ip_address*, %struct._ip_address** %6, align 8, !dbg !1717
  %121 = load i32, i32* %5, align 4, !dbg !1718
  %122 = icmp ne i32 %121, 0, !dbg !1719
  %123 = xor i1 %122, true, !dbg !1719
  call void @vrrp_send_update(%struct._vrrp_t* %119, %struct._ip_address* %120, i1 zeroext %123), !dbg !1720
  br label %124, !dbg !1721

; <label>:124:                                    ; preds = %114
  %125 = load %struct._element*, %struct._element** %7, align 8, !dbg !1722
  %126 = getelementptr inbounds %struct._element, %struct._element* %125, i32 0, i32 0, !dbg !1724
  %127 = load %struct._element*, %struct._element** %126, align 8, !dbg !1724
  store %struct._element* %127, %struct._element** %7, align 8, !dbg !1725
  br label %111, !dbg !1726, !llvm.loop !1727

; <label>:128:                                    ; preds = %111
  br label %129, !dbg !1729

; <label>:129:                                    ; preds = %128, %90, %78
  br label %130, !dbg !1730

; <label>:130:                                    ; preds = %129
  %131 = load i32, i32* %5, align 4, !dbg !1731
  %132 = add i32 %131, 1, !dbg !1731
  store i32 %132, i32* %5, align 4, !dbg !1731
  br label %23, !dbg !1733, !llvm.loop !1734

; <label>:133:                                    ; preds = %12, %21, %23
  ret void, !dbg !1736
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_send_update(%struct._vrrp_t*, %struct._ip_address*, i1 zeroext) #0 !dbg !1737 {
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca %struct._ip_address*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca [46 x i8], align 16
  store %struct._vrrp_t* %0, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !1740, metadata !793), !dbg !1741
  store %struct._ip_address* %1, %struct._ip_address** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._ip_address** %5, metadata !1742, metadata !793), !dbg !1743
  %9 = zext i1 %2 to i8
  store i8 %9, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !1744, metadata !793), !dbg !1745
  call void @llvm.dbg.declare(metadata i8** %7, metadata !1746, metadata !793), !dbg !1747
  call void @llvm.dbg.declare(metadata [46 x i8]* %8, metadata !1748, metadata !793), !dbg !1752
  %10 = load %struct._ip_address*, %struct._ip_address** %5, align 8, !dbg !1753
  %11 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %10, i32 0, i32 0, !dbg !1755
  %12 = getelementptr inbounds %struct.ifaddrmsg, %struct.ifaddrmsg* %11, i32 0, i32 0, !dbg !1756
  %13 = load i8, i8* %12, align 8, !dbg !1756
  %14 = zext i8 %13 to i32, !dbg !1757
  %15 = icmp eq i32 %14, 10, !dbg !1758
  br i1 %15, label %19, label %16, !dbg !1759

; <label>:16:                                     ; preds = %3
  %17 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1760
  %18 = load %struct._ip_address*, %struct._ip_address** %5, align 8, !dbg !1761
  call void @send_gratuitous_arp(%struct._vrrp_t* %17, %struct._ip_address* %18), !dbg !1762
  br label %22, !dbg !1762

; <label>:19:                                     ; preds = %3
  %20 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1763
  %21 = load %struct._ip_address*, %struct._ip_address** %5, align 8, !dbg !1764
  call void @ndisc_send_unsolicited_na(%struct._vrrp_t* %20, %struct._ip_address* %21), !dbg !1765
  br label %22

; <label>:22:                                     ; preds = %19, %16
  %23 = load i8, i8* %6, align 1, !dbg !1766
  %24 = trunc i8 %23 to i1, !dbg !1766
  br i1 %24, label %25, label %60, !dbg !1768

; <label>:25:                                     ; preds = %22
  %26 = call zeroext i1 @__test_bit(i32 7, i64* @debug), !dbg !1769
  br i1 %26, label %27, label %60, !dbg !1771

; <label>:27:                                     ; preds = %25
  %28 = load %struct._ip_address*, %struct._ip_address** %5, align 8, !dbg !1772
  %29 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %28, i32 0, i32 0, !dbg !1775
  %30 = getelementptr inbounds %struct.ifaddrmsg, %struct.ifaddrmsg* %29, i32 0, i32 0, !dbg !1776
  %31 = load i8, i8* %30, align 8, !dbg !1776
  %32 = zext i8 %31 to i32, !dbg !1777
  %33 = icmp eq i32 %32, 10, !dbg !1778
  br i1 %33, label %42, label %34, !dbg !1779

; <label>:34:                                     ; preds = %27
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i32 0, i32 0), i8** %7, align 8, !dbg !1780
  %35 = load %struct._ip_address*, %struct._ip_address** %5, align 8, !dbg !1782
  %36 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %35, i32 0, i32 1, !dbg !1783
  %37 = bitcast %union.anon.5* %36 to %struct.anon.6*, !dbg !1784
  %38 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %37, i32 0, i32 0, !dbg !1785
  %39 = bitcast %struct.in_addr* %38 to i8*, !dbg !1786
  %40 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i32 0, i32 0, !dbg !1787
  %41 = call i8* @inet_ntop(i32 2, i8* %39, i8* %40, i32 46) #8, !dbg !1788
  br label %49, !dbg !1789

; <label>:42:                                     ; preds = %27
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0), i8** %7, align 8, !dbg !1790
  %43 = load %struct._ip_address*, %struct._ip_address** %5, align 8, !dbg !1792
  %44 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %43, i32 0, i32 1, !dbg !1793
  %45 = bitcast %union.anon.5* %44 to %struct.in6_addr*, !dbg !1794
  %46 = bitcast %struct.in6_addr* %45 to i8*, !dbg !1795
  %47 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i32 0, i32 0, !dbg !1796
  %48 = call i8* @inet_ntop(i32 10, i8* %46, i8* %47, i32 46) #8, !dbg !1797
  br label %49

; <label>:49:                                     ; preds = %42, %34
  %50 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1798
  %51 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %50, i32 0, i32 1, !dbg !1799
  %52 = load i8*, i8** %51, align 8, !dbg !1799
  %53 = load i8*, i8** %7, align 8, !dbg !1800
  %54 = load %struct._ip_address*, %struct._ip_address** %5, align 8, !dbg !1801
  %55 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %54, i32 0, i32 2, !dbg !1802
  %56 = load %struct._interface*, %struct._interface** %55, align 8, !dbg !1802
  %57 = getelementptr inbounds %struct._interface, %struct._interface* %56, i32 0, i32 0, !dbg !1803
  %58 = getelementptr inbounds [16 x i8], [16 x i8]* %57, i32 0, i32 0, !dbg !1804
  %59 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i32 0, i32 0, !dbg !1805
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.42, i32 0, i32 0), i8* %52, i8* %53, i8* %58, i8* %59), !dbg !1806
  br label %60, !dbg !1807

; <label>:60:                                     ; preds = %49, %25, %22
  ret void, !dbg !1808
}

; Function Attrs: nounwind uwtable
define void @vrrp_state_goto_master(%struct._vrrp_t*) #0 !dbg !1809 {
  %2 = alloca %struct._vrrp_t*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !1812, metadata !793), !dbg !1813
  %3 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1814
  %4 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %3, i32 0, i32 2, !dbg !1816
  %5 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !1816
  %6 = icmp ne %struct._vrrp_sgroup* %5, null, !dbg !1814
  br i1 %6, label %7, label %13, !dbg !1817

; <label>:7:                                      ; preds = %1
  %8 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1818
  %9 = call zeroext i1 @vrrp_sync_can_goto_master(%struct._vrrp_t* %8), !dbg !1820
  br i1 %9, label %13, label %10, !dbg !1821

; <label>:10:                                     ; preds = %7
  %11 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1822
  %12 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %11, i32 0, i32 56, !dbg !1824
  store i32 2, i32* %12, align 4, !dbg !1825
  br label %31, !dbg !1826

; <label>:13:                                     ; preds = %7, %1
  %14 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1827
  %15 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %14, i32 0, i32 77, !dbg !1829
  %16 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %15, i32 0, i32 0, !dbg !1830
  %17 = load i8, i8* %16, align 8, !dbg !1830
  %18 = trunc i8 %17 to i1, !dbg !1830
  br i1 %18, label %19, label %26, !dbg !1831

; <label>:19:                                     ; preds = %13
  %20 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1832
  %21 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %20, i32 0, i32 77, !dbg !1834
  %22 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %21, i32 0, i32 0, !dbg !1835
  store i8 0, i8* %22, align 8, !dbg !1836
  %23 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1837
  %24 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %23, i32 0, i32 77, !dbg !1838
  %25 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %24, i32 0, i32 1, !dbg !1839
  store i32 0, i32* %25, align 4, !dbg !1840
  br label %26, !dbg !1841

; <label>:26:                                     ; preds = %19, %13
  %27 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1842
  %28 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %27, i32 0, i32 55, !dbg !1843
  store i32 2, i32* %28, align 8, !dbg !1844
  %29 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1845
  call void @vrrp_init_instance_sands(%struct._vrrp_t* %29), !dbg !1846
  %30 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1847
  call void @vrrp_state_master_tx(%struct._vrrp_t* %30), !dbg !1848
  br label %31, !dbg !1849

; <label>:31:                                     ; preds = %26, %10
  ret void, !dbg !1850
}

declare zeroext i1 @vrrp_sync_can_goto_master(%struct._vrrp_t*) #3

declare void @vrrp_init_instance_sands(%struct._vrrp_t*) #3

; Function Attrs: nounwind uwtable
define void @vrrp_state_master_tx(%struct._vrrp_t*) #0 !dbg !1852 {
  %2 = alloca %struct._vrrp_t*, align 8
  %3 = alloca %struct.timeval, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !1853, metadata !793), !dbg !1854
  %4 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1855
  %5 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %4, i32 0, i32 40, !dbg !1857
  %6 = load i8, i8* %5, align 4, !dbg !1857
  %7 = trunc i8 %6 to i1, !dbg !1857
  br i1 %7, label %27, label %8, !dbg !1858

; <label>:8:                                      ; preds = %1
  %9 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1859
  %10 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %9, i32 0, i32 1, !dbg !1861
  %11 = load i8*, i8** %10, align 8, !dbg !1861
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i32 0, i32 0), i8* %11), !dbg !1862
  %12 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1863
  call void @vrrp_state_become_master(%struct._vrrp_t* %12), !dbg !1864
  %13 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1865
  %14 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %13, i32 0, i32 25, !dbg !1867
  %15 = load i32, i32* %14, align 8, !dbg !1867
  %16 = icmp ne i32 %15, 0, !dbg !1865
  br i1 %16, label %17, label %26, !dbg !1868

; <label>:17:                                     ; preds = %8
  %18 = load %struct._thread_master*, %struct._thread_master** @master, align 8, !dbg !1869
  %19 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1870
  %20 = bitcast %struct._vrrp_t* %19 to i8*, !dbg !1870
  %21 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1871
  %22 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %21, i32 0, i32 25, !dbg !1872
  %23 = load i32, i32* %22, align 8, !dbg !1872
  %24 = zext i32 %23 to i64, !dbg !1871
  %25 = call %struct._thread* @thread_add_timer(%struct._thread_master* %18, i32 (%struct._thread*)* @vrrp_gratuitous_arp_thread, i8* %20, i64 %24), !dbg !1873
  br label %26, !dbg !1873

; <label>:26:                                     ; preds = %17, %8
  br label %83, !dbg !1874

; <label>:27:                                     ; preds = %1
  %28 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1875
  %29 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %28, i32 0, i32 26, !dbg !1878
  %30 = getelementptr inbounds %struct.timeval, %struct.timeval* %29, i32 0, i32 0, !dbg !1879
  %31 = load i64, i64* %30, align 8, !dbg !1879
  %32 = icmp ne i64 %31, 0, !dbg !1875
  br i1 %32, label %39, label %33, !dbg !1880

; <label>:33:                                     ; preds = %27
  %34 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1881
  %35 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %34, i32 0, i32 26, !dbg !1883
  %36 = getelementptr inbounds %struct.timeval, %struct.timeval* %35, i32 0, i32 1, !dbg !1884
  %37 = load i64, i64* %36, align 8, !dbg !1884
  %38 = icmp ne i64 %37, 0, !dbg !1885
  br i1 %38, label %39, label %82, !dbg !1886

; <label>:39:                                     ; preds = %33, %27
  %40 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @time_now, i32 0, i32 0), align 8, !dbg !1887
  %41 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1888
  %42 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %41, i32 0, i32 27, !dbg !1889
  %43 = getelementptr inbounds %struct.timeval, %struct.timeval* %42, i32 0, i32 0, !dbg !1887
  %44 = load i64, i64* %43, align 8, !dbg !1887
  %45 = icmp eq i64 %40, %44, !dbg !1890
  br i1 %45, label %46, label %53, !dbg !1891

; <label>:46:                                     ; preds = %39
  %47 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @time_now, i32 0, i32 1), align 8, !dbg !1893
  %48 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1894
  %49 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %48, i32 0, i32 27, !dbg !1895
  %50 = getelementptr inbounds %struct.timeval, %struct.timeval* %49, i32 0, i32 1, !dbg !1893
  %51 = load i64, i64* %50, align 8, !dbg !1893
  %52 = icmp sgt i64 %47, %51, !dbg !1896
  br i1 %52, label %60, label %82, !dbg !1894

; <label>:53:                                     ; preds = %39
  %54 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @time_now, i32 0, i32 0), align 8, !dbg !1897
  %55 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1898
  %56 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %55, i32 0, i32 27, !dbg !1899
  %57 = getelementptr inbounds %struct.timeval, %struct.timeval* %56, i32 0, i32 0, !dbg !1897
  %58 = load i64, i64* %57, align 8, !dbg !1897
  %59 = icmp sgt i64 %54, %58, !dbg !1900
  br i1 %59, label %60, label %82, !dbg !1901

; <label>:60:                                     ; preds = %53, %46
  %61 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1903
  %62 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1905
  %63 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %62, i32 0, i32 29, !dbg !1906
  %64 = load i32, i32* %63, align 4, !dbg !1906
  call void @vrrp_send_link_update(%struct._vrrp_t* %61, i32 %64), !dbg !1907
  %65 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1908
  %66 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %65, i32 0, i32 27, !dbg !1909
  %67 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1910
  %68 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %67, i32 0, i32 26, !dbg !1911
  %69 = bitcast %struct.timeval* %68 to { i64, i64 }*, !dbg !1912
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %69, i32 0, i32 0, !dbg !1912
  %71 = load i64, i64* %70, align 8, !dbg !1912
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %69, i32 0, i32 1, !dbg !1912
  %73 = load i64, i64* %72, align 8, !dbg !1912
  %74 = call { i64, i64 } @timer_add_now(i64 %71, i64 %73), !dbg !1912
  %75 = bitcast %struct.timeval* %3 to { i64, i64 }*, !dbg !1912
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %75, i32 0, i32 0, !dbg !1912
  %77 = extractvalue { i64, i64 } %74, 0, !dbg !1912
  store i64 %77, i64* %76, align 8, !dbg !1912
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %75, i32 0, i32 1, !dbg !1912
  %79 = extractvalue { i64, i64 } %74, 1, !dbg !1912
  store i64 %79, i64* %78, align 8, !dbg !1912
  %80 = bitcast %struct.timeval* %66 to i8*, !dbg !1912
  %81 = bitcast %struct.timeval* %3 to i8*, !dbg !1912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 16, i32 8, i1 false), !dbg !1913
  br label %82, !dbg !1915

; <label>:82:                                     ; preds = %60, %53, %46, %33
  br label %83

; <label>:83:                                     ; preds = %82, %26
  %84 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1916
  %85 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !1917
  %86 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %85, i32 0, i32 38, !dbg !1918
  %87 = load i8, i8* %86, align 2, !dbg !1918
  call void @vrrp_send_adv(%struct._vrrp_t* %84, i8 zeroext %87), !dbg !1919
  ret void, !dbg !1920
}

; Function Attrs: nounwind uwtable
define void @vrrp_restore_interface(%struct._vrrp_t*, i1 zeroext, i1 zeroext) #0 !dbg !1921 {
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct._vrrp_t* %0, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !1924, metadata !793), !dbg !1925
  %7 = zext i1 %1 to i8
  store i8 %7, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !1926, metadata !793), !dbg !1927
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !1928, metadata !793), !dbg !1929
  %9 = load i8, i8* %5, align 1, !dbg !1930
  %10 = trunc i8 %9 to i1, !dbg !1930
  br i1 %10, label %11, label %22, !dbg !1932

; <label>:11:                                     ; preds = %3
  %12 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1933
  call void @vrrp_send_adv(%struct._vrrp_t* %12, i8 zeroext 0), !dbg !1935
  %13 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1936
  %14 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %13, i32 0, i32 3, !dbg !1937
  %15 = load %struct._vrrp_stats*, %struct._vrrp_stats** %14, align 8, !dbg !1937
  %16 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %15, i32 0, i32 13, !dbg !1938
  %17 = load i64, i64* %16, align 8, !dbg !1939
  %18 = add i64 %17, 1, !dbg !1939
  store i64 %18, i64* %16, align 8, !dbg !1939
  %19 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1940
  %20 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %19, i32 0, i32 1, !dbg !1941
  %21 = load i8*, i8** %20, align 8, !dbg !1941
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0), i8* %21), !dbg !1942
  br label %22, !dbg !1943

; <label>:22:                                     ; preds = %11, %3
  %23 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1944
  %24 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %23, i32 0, i32 46, !dbg !1946
  %25 = load %struct._list*, %struct._list** %24, align 8, !dbg !1946
  %26 = icmp eq %struct._list* %25, null, !dbg !1947
  br i1 %26, label %45, label %27, !dbg !1948

; <label>:27:                                     ; preds = %22
  %28 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1949
  %29 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %28, i32 0, i32 46, !dbg !1951
  %30 = load %struct._list*, %struct._list** %29, align 8, !dbg !1951
  %31 = getelementptr inbounds %struct._list, %struct._list* %30, i32 0, i32 0, !dbg !1952
  %32 = load %struct._element*, %struct._element** %31, align 8, !dbg !1952
  %33 = icmp eq %struct._element* %32, null, !dbg !1953
  br i1 %33, label %34, label %41, !dbg !1954

; <label>:34:                                     ; preds = %27
  %35 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1955
  %36 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %35, i32 0, i32 46, !dbg !1957
  %37 = load %struct._list*, %struct._list** %36, align 8, !dbg !1957
  %38 = getelementptr inbounds %struct._list, %struct._list* %37, i32 0, i32 1, !dbg !1958
  %39 = load %struct._element*, %struct._element** %38, align 8, !dbg !1958
  %40 = icmp eq %struct._element* %39, null, !dbg !1959
  br i1 %40, label %45, label %41, !dbg !1960

; <label>:41:                                     ; preds = %34, %27
  %42 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1961
  %43 = load i8, i8* %6, align 1, !dbg !1962
  %44 = trunc i8 %43 to i1, !dbg !1962
  call void @vrrp_handle_iprules(%struct._vrrp_t* %42, i32 0, i1 zeroext %44), !dbg !1963
  br label %45, !dbg !1963

; <label>:45:                                     ; preds = %41, %34, %22
  %46 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1964
  %47 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %46, i32 0, i32 45, !dbg !1966
  %48 = load %struct._list*, %struct._list** %47, align 8, !dbg !1966
  %49 = icmp eq %struct._list* %48, null, !dbg !1967
  br i1 %49, label %66, label %50, !dbg !1968

; <label>:50:                                     ; preds = %45
  %51 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1969
  %52 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %51, i32 0, i32 45, !dbg !1971
  %53 = load %struct._list*, %struct._list** %52, align 8, !dbg !1971
  %54 = getelementptr inbounds %struct._list, %struct._list* %53, i32 0, i32 0, !dbg !1972
  %55 = load %struct._element*, %struct._element** %54, align 8, !dbg !1972
  %56 = icmp eq %struct._element* %55, null, !dbg !1973
  br i1 %56, label %57, label %64, !dbg !1974

; <label>:57:                                     ; preds = %50
  %58 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1975
  %59 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %58, i32 0, i32 45, !dbg !1977
  %60 = load %struct._list*, %struct._list** %59, align 8, !dbg !1977
  %61 = getelementptr inbounds %struct._list, %struct._list* %60, i32 0, i32 1, !dbg !1978
  %62 = load %struct._element*, %struct._element** %61, align 8, !dbg !1978
  %63 = icmp eq %struct._element* %62, null, !dbg !1979
  br i1 %63, label %66, label %64, !dbg !1980

; <label>:64:                                     ; preds = %57, %50
  %65 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1981
  call void @vrrp_handle_iproutes(%struct._vrrp_t* %65, i32 0), !dbg !1982
  br label %66, !dbg !1982

; <label>:66:                                     ; preds = %64, %57, %45
  %67 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1983
  call void @vrrp_remove_delayed_arp(%struct._vrrp_t* %67), !dbg !1984
  %68 = load i8, i8* %6, align 1, !dbg !1985
  %69 = trunc i8 %68 to i1, !dbg !1985
  br i1 %69, label %79, label %70, !dbg !1987

; <label>:70:                                     ; preds = %66
  %71 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1988
  %72 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %71, i32 0, i32 40, !dbg !1989
  %73 = load i8, i8* %72, align 4, !dbg !1989
  %74 = trunc i8 %73 to i1, !dbg !1989
  br i1 %74, label %79, label %75, !dbg !1990

; <label>:75:                                     ; preds = %70
  %76 = call zeroext i1 @__test_bit(i32 4, i64* @debug), !dbg !1991
  br i1 %76, label %79, label %77, !dbg !1992

; <label>:77:                                     ; preds = %75
  %78 = call zeroext i1 @__test_bit(i32 5, i64* @debug), !dbg !1993
  br i1 %78, label %79, label %133, !dbg !1994

; <label>:79:                                     ; preds = %77, %75, %70, %66
  %80 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !1996
  %81 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %80, i32 0, i32 41, !dbg !1999
  %82 = load %struct._list*, %struct._list** %81, align 8, !dbg !1999
  %83 = icmp eq %struct._list* %82, null, !dbg !2000
  br i1 %83, label %103, label %84, !dbg !2001

; <label>:84:                                     ; preds = %79
  %85 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2002
  %86 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %85, i32 0, i32 41, !dbg !2004
  %87 = load %struct._list*, %struct._list** %86, align 8, !dbg !2004
  %88 = getelementptr inbounds %struct._list, %struct._list* %87, i32 0, i32 0, !dbg !2005
  %89 = load %struct._element*, %struct._element** %88, align 8, !dbg !2005
  %90 = icmp eq %struct._element* %89, null, !dbg !2006
  br i1 %90, label %91, label %98, !dbg !2007

; <label>:91:                                     ; preds = %84
  %92 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2008
  %93 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %92, i32 0, i32 41, !dbg !2010
  %94 = load %struct._list*, %struct._list** %93, align 8, !dbg !2010
  %95 = getelementptr inbounds %struct._list, %struct._list* %94, i32 0, i32 1, !dbg !2011
  %96 = load %struct._element*, %struct._element** %95, align 8, !dbg !2011
  %97 = icmp eq %struct._element* %96, null, !dbg !2012
  br i1 %97, label %103, label %98, !dbg !2013

; <label>:98:                                     ; preds = %91, %84
  %99 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2014
  %100 = load i8, i8* %6, align 1, !dbg !2015
  %101 = trunc i8 %100 to i1, !dbg !2015
  %102 = call zeroext i1 @vrrp_handle_ipaddress(%struct._vrrp_t* %99, i32 0, i32 1, i1 zeroext %101), !dbg !2016
  br label %103, !dbg !2016

; <label>:103:                                    ; preds = %98, %91, %79
  %104 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2017
  %105 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %104, i32 0, i32 42, !dbg !2019
  %106 = load %struct._list*, %struct._list** %105, align 8, !dbg !2019
  %107 = icmp eq %struct._list* %106, null, !dbg !2020
  br i1 %107, label %127, label %108, !dbg !2021

; <label>:108:                                    ; preds = %103
  %109 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2022
  %110 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %109, i32 0, i32 42, !dbg !2024
  %111 = load %struct._list*, %struct._list** %110, align 8, !dbg !2024
  %112 = getelementptr inbounds %struct._list, %struct._list* %111, i32 0, i32 0, !dbg !2025
  %113 = load %struct._element*, %struct._element** %112, align 8, !dbg !2025
  %114 = icmp eq %struct._element* %113, null, !dbg !2026
  br i1 %114, label %115, label %122, !dbg !2027

; <label>:115:                                    ; preds = %108
  %116 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2028
  %117 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %116, i32 0, i32 42, !dbg !2030
  %118 = load %struct._list*, %struct._list** %117, align 8, !dbg !2030
  %119 = getelementptr inbounds %struct._list, %struct._list* %118, i32 0, i32 1, !dbg !2031
  %120 = load %struct._element*, %struct._element** %119, align 8, !dbg !2031
  %121 = icmp eq %struct._element* %120, null, !dbg !2032
  br i1 %121, label %127, label %122, !dbg !2033

; <label>:122:                                    ; preds = %115, %108
  %123 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2034
  %124 = load i8, i8* %6, align 1, !dbg !2035
  %125 = trunc i8 %124 to i1, !dbg !2035
  %126 = call zeroext i1 @vrrp_handle_ipaddress(%struct._vrrp_t* %123, i32 0, i32 2, i1 zeroext %125), !dbg !2036
  br label %127, !dbg !2036

; <label>:127:                                    ; preds = %122, %115, %103
  %128 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2037
  %129 = load i8, i8* %6, align 1, !dbg !2038
  %130 = trunc i8 %129 to i1, !dbg !2038
  call void @vrrp_handle_accept_mode(%struct._vrrp_t* %128, i32 0, i1 zeroext %130), !dbg !2039
  %131 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2040
  %132 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %131, i32 0, i32 40, !dbg !2041
  store i8 0, i8* %132, align 4, !dbg !2042
  br label %133, !dbg !2043

; <label>:133:                                    ; preds = %127, %77
  ret void, !dbg !2044
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_handle_iprules(%struct._vrrp_t*, i32, i1 zeroext) #0 !dbg !2045 {
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store %struct._vrrp_t* %0, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !2048, metadata !793), !dbg !2049
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2050, metadata !793), !dbg !2051
  %7 = zext i1 %2 to i8
  store i8 %7, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2052, metadata !793), !dbg !2053
  %8 = call zeroext i1 @__test_bit(i32 7, i64* @debug), !dbg !2054
  br i1 %8, label %9, label %16, !dbg !2056

; <label>:9:                                      ; preds = %3
  %10 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2057
  %11 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %10, i32 0, i32 1, !dbg !2058
  %12 = load i8*, i8** %11, align 8, !dbg !2058
  %13 = load i32, i32* %5, align 4, !dbg !2059
  %14 = icmp eq i32 %13, 1, !dbg !2060
  %15 = select i1 %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), !dbg !2061
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i8* %12, i8* %15), !dbg !2062
  br label %16, !dbg !2062

; <label>:16:                                     ; preds = %9, %3
  %17 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2063
  %18 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %17, i32 0, i32 46, !dbg !2064
  %19 = load %struct._list*, %struct._list** %18, align 8, !dbg !2064
  %20 = load i32, i32* %5, align 4, !dbg !2065
  %21 = load i8, i8* %6, align 1, !dbg !2066
  %22 = trunc i8 %21 to i1, !dbg !2066
  call void @netlink_rulelist(%struct._list* %19, i32 %20, i1 zeroext %22), !dbg !2067
  ret void, !dbg !2068
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_handle_iproutes(%struct._vrrp_t*, i32) #0 !dbg !2069 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca i32, align 4
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !2072, metadata !793), !dbg !2073
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2074, metadata !793), !dbg !2075
  %5 = call zeroext i1 @__test_bit(i32 7, i64* @debug), !dbg !2076
  br i1 %5, label %6, label %13, !dbg !2078

; <label>:6:                                      ; preds = %2
  %7 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2079
  %8 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %7, i32 0, i32 1, !dbg !2080
  %9 = load i8*, i8** %8, align 8, !dbg !2080
  %10 = load i32, i32* %4, align 4, !dbg !2081
  %11 = icmp eq i32 %10, 1, !dbg !2082
  %12 = select i1 %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), !dbg !2083
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i32 0, i32 0), i8* %9, i8* %12), !dbg !2084
  br label %13, !dbg !2084

; <label>:13:                                     ; preds = %6, %2
  %14 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2085
  %15 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %14, i32 0, i32 45, !dbg !2086
  %16 = load %struct._list*, %struct._list** %15, align 8, !dbg !2086
  %17 = load i32, i32* %4, align 4, !dbg !2087
  call void @netlink_rtlist(%struct._list* %16, i32 %17), !dbg !2088
  ret void, !dbg !2089
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_remove_delayed_arp(%struct._vrrp_t*) #0 !dbg !2090 {
  %2 = alloca %struct._vrrp_t*, align 8
  %3 = alloca %struct._ip_address*, align 8
  %4 = alloca %struct._element*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !2091, metadata !793), !dbg !2092
  call void @llvm.dbg.declare(metadata %struct._ip_address** %3, metadata !2093, metadata !793), !dbg !2094
  call void @llvm.dbg.declare(metadata %struct._element** %4, metadata !2095, metadata !793), !dbg !2096
  %5 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2097
  %6 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %5, i32 0, i32 41, !dbg !2099
  %7 = load %struct._list*, %struct._list** %6, align 8, !dbg !2099
  %8 = icmp eq %struct._list* %7, null, !dbg !2100
  br i1 %8, label %52, label %9, !dbg !2101

; <label>:9:                                      ; preds = %1
  %10 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2102
  %11 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %10, i32 0, i32 41, !dbg !2104
  %12 = load %struct._list*, %struct._list** %11, align 8, !dbg !2104
  %13 = getelementptr inbounds %struct._list, %struct._list* %12, i32 0, i32 0, !dbg !2105
  %14 = load %struct._element*, %struct._element** %13, align 8, !dbg !2105
  %15 = icmp eq %struct._element* %14, null, !dbg !2106
  br i1 %15, label %16, label %23, !dbg !2107

; <label>:16:                                     ; preds = %9
  %17 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2108
  %18 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %17, i32 0, i32 41, !dbg !2110
  %19 = load %struct._list*, %struct._list** %18, align 8, !dbg !2110
  %20 = getelementptr inbounds %struct._list, %struct._list* %19, i32 0, i32 1, !dbg !2111
  %21 = load %struct._element*, %struct._element** %20, align 8, !dbg !2111
  %22 = icmp eq %struct._element* %21, null, !dbg !2112
  br i1 %22, label %52, label %23, !dbg !2113

; <label>:23:                                     ; preds = %16, %9
  %24 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2114
  %25 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %24, i32 0, i32 41, !dbg !2117
  %26 = load %struct._list*, %struct._list** %25, align 8, !dbg !2117
  %27 = icmp ne %struct._list* %26, null, !dbg !2118
  br i1 %27, label %29, label %28, !dbg !2119

; <label>:28:                                     ; preds = %23
  br label %35, !dbg !2120

; <label>:29:                                     ; preds = %23
  %30 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2122
  %31 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %30, i32 0, i32 41, !dbg !2124
  %32 = load %struct._list*, %struct._list** %31, align 8, !dbg !2124
  %33 = getelementptr inbounds %struct._list, %struct._list* %32, i32 0, i32 0, !dbg !2125
  %34 = load %struct._element*, %struct._element** %33, align 8, !dbg !2125
  br label %35, !dbg !2126

; <label>:35:                                     ; preds = %29, %28
  %36 = phi %struct._element* [ null, %28 ], [ %34, %29 ], !dbg !2127
  store %struct._element* %36, %struct._element** %4, align 8, !dbg !2129
  br label %37, !dbg !2130

; <label>:37:                                     ; preds = %47, %35
  %38 = load %struct._element*, %struct._element** %4, align 8, !dbg !2131
  %39 = icmp ne %struct._element* %38, null, !dbg !2134
  br i1 %39, label %40, label %51, !dbg !2134

; <label>:40:                                     ; preds = %37
  %41 = load %struct._element*, %struct._element** %4, align 8, !dbg !2135
  %42 = getelementptr inbounds %struct._element, %struct._element* %41, i32 0, i32 2, !dbg !2137
  %43 = load i8*, i8** %42, align 8, !dbg !2137
  %44 = bitcast i8* %43 to %struct._ip_address*, !dbg !2138
  store %struct._ip_address* %44, %struct._ip_address** %3, align 8, !dbg !2139
  %45 = load %struct._ip_address*, %struct._ip_address** %3, align 8, !dbg !2140
  %46 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %45, i32 0, i32 12, !dbg !2141
  store i8 0, i8* %46, align 2, !dbg !2142
  br label %47, !dbg !2143

; <label>:47:                                     ; preds = %40
  %48 = load %struct._element*, %struct._element** %4, align 8, !dbg !2144
  %49 = getelementptr inbounds %struct._element, %struct._element* %48, i32 0, i32 0, !dbg !2146
  %50 = load %struct._element*, %struct._element** %49, align 8, !dbg !2146
  store %struct._element* %50, %struct._element** %4, align 8, !dbg !2147
  br label %37, !dbg !2148, !llvm.loop !2149

; <label>:51:                                     ; preds = %37
  br label %52, !dbg !2151

; <label>:52:                                     ; preds = %51, %16, %1
  %53 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2152
  %54 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %53, i32 0, i32 42, !dbg !2154
  %55 = load %struct._list*, %struct._list** %54, align 8, !dbg !2154
  %56 = icmp eq %struct._list* %55, null, !dbg !2155
  br i1 %56, label %100, label %57, !dbg !2156

; <label>:57:                                     ; preds = %52
  %58 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2157
  %59 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %58, i32 0, i32 42, !dbg !2159
  %60 = load %struct._list*, %struct._list** %59, align 8, !dbg !2159
  %61 = getelementptr inbounds %struct._list, %struct._list* %60, i32 0, i32 0, !dbg !2160
  %62 = load %struct._element*, %struct._element** %61, align 8, !dbg !2160
  %63 = icmp eq %struct._element* %62, null, !dbg !2161
  br i1 %63, label %64, label %71, !dbg !2162

; <label>:64:                                     ; preds = %57
  %65 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2163
  %66 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %65, i32 0, i32 42, !dbg !2165
  %67 = load %struct._list*, %struct._list** %66, align 8, !dbg !2165
  %68 = getelementptr inbounds %struct._list, %struct._list* %67, i32 0, i32 1, !dbg !2166
  %69 = load %struct._element*, %struct._element** %68, align 8, !dbg !2166
  %70 = icmp eq %struct._element* %69, null, !dbg !2167
  br i1 %70, label %100, label %71, !dbg !2168

; <label>:71:                                     ; preds = %64, %57
  %72 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2169
  %73 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %72, i32 0, i32 42, !dbg !2172
  %74 = load %struct._list*, %struct._list** %73, align 8, !dbg !2172
  %75 = icmp ne %struct._list* %74, null, !dbg !2173
  br i1 %75, label %77, label %76, !dbg !2174

; <label>:76:                                     ; preds = %71
  br label %83, !dbg !2175

; <label>:77:                                     ; preds = %71
  %78 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2177
  %79 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %78, i32 0, i32 42, !dbg !2179
  %80 = load %struct._list*, %struct._list** %79, align 8, !dbg !2179
  %81 = getelementptr inbounds %struct._list, %struct._list* %80, i32 0, i32 0, !dbg !2180
  %82 = load %struct._element*, %struct._element** %81, align 8, !dbg !2180
  br label %83, !dbg !2181

; <label>:83:                                     ; preds = %77, %76
  %84 = phi %struct._element* [ null, %76 ], [ %82, %77 ], !dbg !2182
  store %struct._element* %84, %struct._element** %4, align 8, !dbg !2184
  br label %85, !dbg !2185

; <label>:85:                                     ; preds = %95, %83
  %86 = load %struct._element*, %struct._element** %4, align 8, !dbg !2186
  %87 = icmp ne %struct._element* %86, null, !dbg !2189
  br i1 %87, label %88, label %99, !dbg !2189

; <label>:88:                                     ; preds = %85
  %89 = load %struct._element*, %struct._element** %4, align 8, !dbg !2190
  %90 = getelementptr inbounds %struct._element, %struct._element* %89, i32 0, i32 2, !dbg !2192
  %91 = load i8*, i8** %90, align 8, !dbg !2192
  %92 = bitcast i8* %91 to %struct._ip_address*, !dbg !2193
  store %struct._ip_address* %92, %struct._ip_address** %3, align 8, !dbg !2194
  %93 = load %struct._ip_address*, %struct._ip_address** %3, align 8, !dbg !2195
  %94 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %93, i32 0, i32 12, !dbg !2196
  store i8 0, i8* %94, align 2, !dbg !2197
  br label %95, !dbg !2198

; <label>:95:                                     ; preds = %88
  %96 = load %struct._element*, %struct._element** %4, align 8, !dbg !2199
  %97 = getelementptr inbounds %struct._element, %struct._element* %96, i32 0, i32 0, !dbg !2201
  %98 = load %struct._element*, %struct._element** %97, align 8, !dbg !2201
  store %struct._element* %98, %struct._element** %4, align 8, !dbg !2202
  br label %85, !dbg !2203, !llvm.loop !2204

; <label>:99:                                     ; preds = %85
  br label %100, !dbg !2206

; <label>:100:                                    ; preds = %99, %64, %52
  %101 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2207
  %102 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %101, i32 0, i32 31, !dbg !2208
  store i8 0, i8* %102, align 4, !dbg !2209
  %103 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2210
  %104 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %103, i32 0, i32 32, !dbg !2211
  store i8 0, i8* %104, align 1, !dbg !2212
  ret void, !dbg !2213
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @__test_bit(i32, i64*) #2 !dbg !2214 {
  %3 = alloca i32, align 4
  %4 = alloca i64*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2219, metadata !793), !dbg !2220
  store i64* %1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !2221, metadata !793), !dbg !2222
  %5 = load i32, i32* %3, align 4, !dbg !2223
  %6 = zext i32 %5 to i64, !dbg !2224
  %7 = udiv i64 %6, 64, !dbg !2225
  %8 = load i64*, i64** %4, align 8, !dbg !2226
  %9 = getelementptr inbounds i64, i64* %8, i64 %7, !dbg !2226
  %10 = load i64, i64* %9, align 8, !dbg !2226
  %11 = load i32, i32* %3, align 4, !dbg !2227
  %12 = zext i32 %11 to i64, !dbg !2228
  %13 = urem i64 %12, 64, !dbg !2229
  %14 = shl i64 1, %13, !dbg !2230
  %15 = and i64 %10, %14, !dbg !2231
  %16 = icmp ne i64 %15, 0, !dbg !2232
  %17 = xor i1 %16, true, !dbg !2232
  %18 = xor i1 %17, true, !dbg !2233
  ret i1 %18, !dbg !2234
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @vrrp_handle_ipaddress(%struct._vrrp_t*, i32, i32, i1 zeroext) #0 !dbg !2235 {
  %5 = alloca %struct._vrrp_t*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  store %struct._vrrp_t* %0, %struct._vrrp_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %5, metadata !2238, metadata !793), !dbg !2239
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2240, metadata !793), !dbg !2241
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2242, metadata !793), !dbg !2243
  %9 = zext i1 %3 to i8
  store i8 %9, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !2244, metadata !793), !dbg !2245
  %10 = call zeroext i1 @__test_bit(i32 7, i64* @debug), !dbg !2246
  br i1 %10, label %11, label %21, !dbg !2248

; <label>:11:                                     ; preds = %4
  %12 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !2249
  %13 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %12, i32 0, i32 1, !dbg !2250
  %14 = load i8*, i8** %13, align 8, !dbg !2250
  %15 = load i32, i32* %6, align 4, !dbg !2251
  %16 = icmp eq i32 %15, 1, !dbg !2252
  %17 = select i1 %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), !dbg !2253
  %18 = load i32, i32* %7, align 4, !dbg !2254
  %19 = icmp eq i32 %18, 1, !dbg !2255
  %20 = select i1 %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), !dbg !2256
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i32 0, i32 0), i8* %14, i8* %17, i8* %20), !dbg !2257
  br label %21, !dbg !2257

; <label>:21:                                     ; preds = %11, %4
  %22 = load i32, i32* %7, align 4, !dbg !2258
  %23 = icmp eq i32 %22, 1, !dbg !2259
  br i1 %23, label %24, label %28, !dbg !2260

; <label>:24:                                     ; preds = %21
  %25 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !2261
  %26 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %25, i32 0, i32 41, !dbg !2263
  %27 = load %struct._list*, %struct._list** %26, align 8, !dbg !2263
  br label %32, !dbg !2264

; <label>:28:                                     ; preds = %21
  %29 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !2265
  %30 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %29, i32 0, i32 42, !dbg !2267
  %31 = load %struct._list*, %struct._list** %30, align 8, !dbg !2267
  br label %32, !dbg !2268

; <label>:32:                                     ; preds = %28, %24
  %33 = phi %struct._list* [ %27, %24 ], [ %31, %28 ], !dbg !2269
  %34 = load i32, i32* %6, align 4, !dbg !2271
  %35 = load i8, i8* %8, align 1, !dbg !2272
  %36 = trunc i8 %35 to i1, !dbg !2272
  %37 = call zeroext i1 @netlink_iplist(%struct._list* %33, i32 %34, i1 zeroext %36), !dbg !2273
  ret i1 %37, !dbg !2274
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_handle_accept_mode(%struct._vrrp_t*, i32, i1 zeroext) #0 !dbg !2275 {
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.ipt_handle*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !2276, metadata !793), !dbg !2277
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2278, metadata !793), !dbg !2279
  %10 = zext i1 %2 to i8
  store i8 %10, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2280, metadata !793), !dbg !2281
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2282, metadata !793), !dbg !2283
  store i32 0, i32* %7, align 4, !dbg !2283
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2284, metadata !793), !dbg !2285
  store i32 0, i32* %8, align 4, !dbg !2285
  call void @llvm.dbg.declare(metadata %struct.ipt_handle** %9, metadata !2286, metadata !793), !dbg !2289
  store %struct.ipt_handle* null, %struct.ipt_handle** %9, align 8, !dbg !2289
  %11 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2290
  %12 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %11, i32 0, i32 37, !dbg !2292
  %13 = load i8, i8* %12, align 1, !dbg !2292
  %14 = zext i8 %13 to i32, !dbg !2290
  %15 = icmp ne i32 %14, 255, !dbg !2293
  br i1 %15, label %16, label %104, !dbg !2294

; <label>:16:                                     ; preds = %3
  %17 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2295
  %18 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %17, i32 0, i32 49, !dbg !2297
  %19 = load i32, i32* %18, align 8, !dbg !2297
  %20 = icmp ne i32 %19, 0, !dbg !2295
  br i1 %20, label %104, label %21, !dbg !2298

; <label>:21:                                     ; preds = %16
  %22 = call zeroext i1 @__test_bit(i32 7, i64* @debug), !dbg !2299
  br i1 %22, label %23, label %30, !dbg !2302

; <label>:23:                                     ; preds = %21
  %24 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2303
  %25 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %24, i32 0, i32 1, !dbg !2304
  %26 = load i8*, i8** %25, align 8, !dbg !2304
  %27 = load i32, i32* %5, align 4, !dbg !2305
  %28 = icmp eq i32 %27, 1, !dbg !2306
  %29 = select i1 %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), !dbg !2307
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i32 0, i32 0), i8* %26, i8* %29, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i32 0, i32 0)), !dbg !2308
  br label %30, !dbg !2308

; <label>:30:                                     ; preds = %23, %21
  br label %31, !dbg !2309, !llvm.loop !2310

; <label>:31:                                     ; preds = %96, %30
  %32 = call %struct.ipt_handle* @iptables_open(), !dbg !2311
  store %struct.ipt_handle* %32, %struct.ipt_handle** %9, align 8, !dbg !2313
  %33 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2314
  %34 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %33, i32 0, i32 41, !dbg !2316
  %35 = load %struct._list*, %struct._list** %34, align 8, !dbg !2316
  %36 = icmp eq %struct._list* %35, null, !dbg !2317
  br i1 %36, label %59, label %37, !dbg !2318

; <label>:37:                                     ; preds = %31
  %38 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2319
  %39 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %38, i32 0, i32 41, !dbg !2321
  %40 = load %struct._list*, %struct._list** %39, align 8, !dbg !2321
  %41 = getelementptr inbounds %struct._list, %struct._list* %40, i32 0, i32 0, !dbg !2322
  %42 = load %struct._element*, %struct._element** %41, align 8, !dbg !2322
  %43 = icmp eq %struct._element* %42, null, !dbg !2323
  br i1 %43, label %44, label %51, !dbg !2324

; <label>:44:                                     ; preds = %37
  %45 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2325
  %46 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %45, i32 0, i32 41, !dbg !2327
  %47 = load %struct._list*, %struct._list** %46, align 8, !dbg !2327
  %48 = getelementptr inbounds %struct._list, %struct._list* %47, i32 0, i32 1, !dbg !2328
  %49 = load %struct._element*, %struct._element** %48, align 8, !dbg !2328
  %50 = icmp eq %struct._element* %49, null, !dbg !2329
  br i1 %50, label %59, label %51, !dbg !2330

; <label>:51:                                     ; preds = %44, %37
  %52 = load %struct.ipt_handle*, %struct.ipt_handle** %9, align 8, !dbg !2331
  %53 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2332
  %54 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %53, i32 0, i32 41, !dbg !2333
  %55 = load %struct._list*, %struct._list** %54, align 8, !dbg !2333
  %56 = load i32, i32* %5, align 4, !dbg !2334
  %57 = load i8, i8* %6, align 1, !dbg !2335
  %58 = trunc i8 %57 to i1, !dbg !2335
  call void @handle_iptable_rule_to_iplist(%struct.ipt_handle* %52, %struct._list* %55, i32 %56, i1 zeroext %58), !dbg !2336
  br label %59, !dbg !2336

; <label>:59:                                     ; preds = %51, %44, %31
  %60 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2337
  %61 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %60, i32 0, i32 42, !dbg !2339
  %62 = load %struct._list*, %struct._list** %61, align 8, !dbg !2339
  %63 = icmp eq %struct._list* %62, null, !dbg !2340
  br i1 %63, label %86, label %64, !dbg !2341

; <label>:64:                                     ; preds = %59
  %65 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2342
  %66 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %65, i32 0, i32 42, !dbg !2344
  %67 = load %struct._list*, %struct._list** %66, align 8, !dbg !2344
  %68 = getelementptr inbounds %struct._list, %struct._list* %67, i32 0, i32 0, !dbg !2345
  %69 = load %struct._element*, %struct._element** %68, align 8, !dbg !2345
  %70 = icmp eq %struct._element* %69, null, !dbg !2346
  br i1 %70, label %71, label %78, !dbg !2347

; <label>:71:                                     ; preds = %64
  %72 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2348
  %73 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %72, i32 0, i32 42, !dbg !2350
  %74 = load %struct._list*, %struct._list** %73, align 8, !dbg !2350
  %75 = getelementptr inbounds %struct._list, %struct._list* %74, i32 0, i32 1, !dbg !2351
  %76 = load %struct._element*, %struct._element** %75, align 8, !dbg !2351
  %77 = icmp eq %struct._element* %76, null, !dbg !2352
  br i1 %77, label %86, label %78, !dbg !2353

; <label>:78:                                     ; preds = %71, %64
  %79 = load %struct.ipt_handle*, %struct.ipt_handle** %9, align 8, !dbg !2354
  %80 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2355
  %81 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %80, i32 0, i32 42, !dbg !2356
  %82 = load %struct._list*, %struct._list** %81, align 8, !dbg !2356
  %83 = load i32, i32* %5, align 4, !dbg !2357
  %84 = load i8, i8* %6, align 1, !dbg !2358
  %85 = trunc i8 %84 to i1, !dbg !2358
  call void @handle_iptable_rule_to_iplist(%struct.ipt_handle* %79, %struct._list* %82, i32 %83, i1 zeroext %85), !dbg !2359
  br label %86, !dbg !2359

; <label>:86:                                     ; preds = %78, %71, %59
  %87 = load %struct.ipt_handle*, %struct.ipt_handle** %9, align 8, !dbg !2360
  %88 = call i32 @iptables_close(%struct.ipt_handle* %87), !dbg !2361
  store i32 %88, i32* %8, align 4, !dbg !2362
  br label %89, !dbg !2363

; <label>:89:                                     ; preds = %86
  %90 = load i32, i32* %8, align 4, !dbg !2364
  %91 = icmp eq i32 %90, 11, !dbg !2366
  br i1 %91, label %92, label %96, !dbg !2367

; <label>:92:                                     ; preds = %89
  %93 = load i32, i32* %7, align 4, !dbg !2368
  %94 = add nsw i32 %93, 1, !dbg !2368
  store i32 %94, i32* %7, align 4, !dbg !2368
  %95 = icmp slt i32 %94, 3, !dbg !2370
  br label %96

; <label>:96:                                     ; preds = %92, %89
  %97 = phi i1 [ false, %89 ], [ %95, %92 ]
  br i1 %97, label %31, label %98, !dbg !2371, !llvm.loop !2310

; <label>:98:                                     ; preds = %96
  %99 = load i32, i32* %5, align 4, !dbg !2373
  %100 = icmp eq i32 %99, 1, !dbg !2374
  %101 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2375
  %102 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %101, i32 0, i32 51, !dbg !2376
  %103 = zext i1 %100 to i8, !dbg !2377
  store i8 %103, i8* %102, align 8, !dbg !2377
  br label %104, !dbg !2378

; <label>:104:                                    ; preds = %98, %16, %3
  ret void, !dbg !2379
}

; Function Attrs: nounwind uwtable
define void @vrrp_state_leave_master(%struct._vrrp_t*, i1 zeroext) #0 !dbg !2380 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca i8, align 1
  %5 = alloca %struct.timeval, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !2383, metadata !793), !dbg !2384
  %6 = zext i1 %1 to i8
  store i8 %6, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !2385, metadata !793), !dbg !2386
  %7 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2387
  %8 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %7, i32 0, i32 40, !dbg !2389
  %9 = load i8, i8* %8, align 4, !dbg !2389
  %10 = trunc i8 %9 to i1, !dbg !2389
  br i1 %10, label %11, label %22, !dbg !2390

; <label>:11:                                     ; preds = %2
  %12 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !2391
  %13 = getelementptr inbounds %struct._data, %struct._data* %12, i32 0, i32 20, !dbg !2394
  %14 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %13, i32 0, i32 1, !dbg !2395
  %15 = load %struct._vrrp_t*, %struct._vrrp_t** %14, align 8, !dbg !2395
  %16 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2396
  %17 = icmp eq %struct._vrrp_t* %15, %16, !dbg !2397
  br i1 %17, label %18, label %21, !dbg !2398

; <label>:18:                                     ; preds = %11
  %19 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !2399
  %20 = getelementptr inbounds %struct._data, %struct._data* %19, i32 0, i32 20, !dbg !2400
  call void @ipvs_syncd_backup(%struct.lvs_syncd_config* %20), !dbg !2401
  br label %21, !dbg !2401

; <label>:21:                                     ; preds = %18, %11
  br label %22, !dbg !2402

; <label>:22:                                     ; preds = %21, %2
  %23 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2403
  %24 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %23, i32 0, i32 56, !dbg !2405
  %25 = load i32, i32* %24, align 4, !dbg !2405
  %26 = icmp eq i32 %25, 1, !dbg !2406
  br i1 %26, label %27, label %39, !dbg !2407

; <label>:27:                                     ; preds = %22
  %28 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2408
  %29 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %28, i32 0, i32 1, !dbg !2410
  %30 = load i8*, i8** %29, align 8, !dbg !2410
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i32 0, i32 0), i8* %30), !dbg !2411
  %31 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2412
  %32 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %31, i32 0, i32 54, !dbg !2413
  %33 = getelementptr inbounds %struct.timeval, %struct.timeval* %32, i32 0, i32 0, !dbg !2414
  store i64 0, i64* %33, align 8, !dbg !2415
  %34 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2416
  %35 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %34, i32 0, i32 47, !dbg !2417
  %36 = load i32, i32* %35, align 8, !dbg !2417
  %37 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2418
  %38 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %37, i32 0, i32 48, !dbg !2419
  store i32 %36, i32* %38, align 4, !dbg !2420
  br label %57, !dbg !2421

; <label>:39:                                     ; preds = %22
  %40 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2422
  %41 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %40, i32 0, i32 56, !dbg !2424
  %42 = load i32, i32* %41, align 4, !dbg !2424
  %43 = icmp eq i32 %42, 3, !dbg !2425
  br i1 %43, label %44, label %49, !dbg !2426

; <label>:44:                                     ; preds = %39
  %45 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2427
  %46 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %45, i32 0, i32 1, !dbg !2429
  %47 = load i8*, i8** %46, align 8, !dbg !2429
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i32 0, i32 0), i8* %47), !dbg !2430
  %48 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2431
  call void @vrrp_send_adv(%struct._vrrp_t* %48, i8 zeroext 0), !dbg !2432
  br label %56, !dbg !2433

; <label>:49:                                     ; preds = %39
  %50 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2434
  %51 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %50, i32 0, i32 1, !dbg !2436
  %52 = load i8*, i8** %51, align 8, !dbg !2436
  %53 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2437
  %54 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %53, i32 0, i32 56, !dbg !2438
  %55 = load i32, i32* %54, align 4, !dbg !2438
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i32 0, i32 0), i8* %52, i32 %55), !dbg !2439
  br label %118, !dbg !2440

; <label>:56:                                     ; preds = %44
  br label %57

; <label>:57:                                     ; preds = %56, %27
  %58 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2441
  %59 = load i8, i8* %4, align 1, !dbg !2442
  %60 = trunc i8 %59 to i1, !dbg !2442
  call void @vrrp_restore_interface(%struct._vrrp_t* %58, i1 zeroext %60, i1 zeroext false), !dbg !2443
  %61 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2444
  %62 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %61, i32 0, i32 56, !dbg !2445
  %63 = load i32, i32* %62, align 4, !dbg !2445
  %64 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2446
  %65 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %64, i32 0, i32 55, !dbg !2447
  store i32 %63, i32* %65, align 8, !dbg !2448
  %66 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2449
  call void @send_instance_notifies(%struct._vrrp_t* %66), !dbg !2450
  %67 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2451
  %68 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %67, i32 0, i32 48, !dbg !2452
  %69 = load i32, i32* %68, align 4, !dbg !2452
  %70 = mul i32 3, %69, !dbg !2453
  %71 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2454
  %72 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %71, i32 0, i32 60, !dbg !2455
  %73 = load i32, i32* %72, align 4, !dbg !2455
  %74 = icmp eq i32 %73, 3, !dbg !2456
  br i1 %74, label %75, label %88, !dbg !2457

; <label>:75:                                     ; preds = %57
  %76 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2458
  %77 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %76, i32 0, i32 38, !dbg !2460
  %78 = load i8, i8* %77, align 2, !dbg !2460
  %79 = zext i8 %78 to i32, !dbg !2461
  %80 = sub i32 256, %79, !dbg !2462
  %81 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2463
  %82 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %81, i32 0, i32 48, !dbg !2464
  %83 = load i32, i32* %82, align 4, !dbg !2464
  %84 = udiv i32 %83, 10000, !dbg !2465
  %85 = mul i32 %80, %84, !dbg !2466
  %86 = mul i32 %85, 625, !dbg !2467
  %87 = udiv i32 %86, 16, !dbg !2468
  br label %96, !dbg !2469

; <label>:88:                                     ; preds = %57
  %89 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2470
  %90 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %89, i32 0, i32 38, !dbg !2472
  %91 = load i8, i8* %90, align 2, !dbg !2472
  %92 = zext i8 %91 to i32, !dbg !2473
  %93 = sub i32 256, %92, !dbg !2474
  %94 = mul i32 %93, 1000000, !dbg !2475
  %95 = udiv i32 %94, 256, !dbg !2476
  br label %96, !dbg !2477

; <label>:96:                                     ; preds = %88, %75
  %97 = phi i32 [ %87, %75 ], [ %95, %88 ], !dbg !2478
  %98 = add i32 %70, %97, !dbg !2480
  %99 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2481
  %100 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %99, i32 0, i32 70, !dbg !2482
  store i32 %98, i32* %100, align 8, !dbg !2483
  %101 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2484
  call void @vrrp_init_instance_sands(%struct._vrrp_t* %101), !dbg !2485
  %102 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2486
  %103 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %102, i32 0, i32 3, !dbg !2487
  %104 = load %struct._vrrp_stats*, %struct._vrrp_stats** %103, align 8, !dbg !2487
  %105 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %104, i32 0, i32 3, !dbg !2488
  %106 = load i32, i32* %105, align 8, !dbg !2489
  %107 = add i32 %106, 1, !dbg !2489
  store i32 %107, i32* %105, align 8, !dbg !2489
  %108 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !2490
  %109 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %108, i32 0, i32 24, !dbg !2491
  %110 = call { i64, i64 } @timer_now(), !dbg !2492
  %111 = bitcast %struct.timeval* %5 to { i64, i64 }*, !dbg !2492
  %112 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %111, i32 0, i32 0, !dbg !2492
  %113 = extractvalue { i64, i64 } %110, 0, !dbg !2492
  store i64 %113, i64* %112, align 8, !dbg !2492
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %111, i32 0, i32 1, !dbg !2492
  %115 = extractvalue { i64, i64 } %110, 1, !dbg !2492
  store i64 %115, i64* %114, align 8, !dbg !2492
  %116 = bitcast %struct.timeval* %109 to i8*, !dbg !2492
  %117 = bitcast %struct.timeval* %5 to i8*, !dbg !2492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %116, i8* %117, i64 16, i32 8, i1 false), !dbg !2493
  br label %118, !dbg !2494

; <label>:118:                                    ; preds = %96, %49
  ret void, !dbg !2495
}

declare void @ipvs_syncd_backup(%struct.lvs_syncd_config*) #3

declare void @send_instance_notifies(%struct._vrrp_t*) #3

declare { i64, i64 } @timer_now() #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define void @vrrp_state_leave_fault(%struct._vrrp_t*) #0 !dbg !2496 {
  %2 = alloca %struct._vrrp_t*, align 8
  %3 = alloca %struct.timeval, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !2497, metadata !793), !dbg !2498
  %4 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2499
  %5 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %4, i32 0, i32 56, !dbg !2501
  %6 = load i32, i32* %5, align 4, !dbg !2501
  %7 = icmp eq i32 %6, 2, !dbg !2502
  br i1 %7, label %8, label %10, !dbg !2503

; <label>:8:                                      ; preds = %1
  %9 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2504
  call void @vrrp_state_goto_master(%struct._vrrp_t* %9), !dbg !2505
  br label %52, !dbg !2505

; <label>:10:                                     ; preds = %1
  %11 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2506
  %12 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %11, i32 0, i32 1, !dbg !2508
  %13 = load i8*, i8** %12, align 8, !dbg !2508
  %14 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2509
  %15 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %14, i32 0, i32 56, !dbg !2510
  %16 = load i32, i32* %15, align 4, !dbg !2510
  %17 = icmp eq i32 %16, 1, !dbg !2511
  %18 = select i1 %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), !dbg !2509
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i32 0, i32 0), i8* %13, i8* %18), !dbg !2512
  %19 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2513
  %20 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %19, i32 0, i32 56, !dbg !2515
  %21 = load i32, i32* %20, align 4, !dbg !2515
  %22 = icmp eq i32 %21, 3, !dbg !2516
  br i1 %22, label %23, label %31, !dbg !2517

; <label>:23:                                     ; preds = %10
  %24 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2518
  %25 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %24, i32 0, i32 55, !dbg !2520
  %26 = load i32, i32* %25, align 8, !dbg !2520
  %27 = icmp eq i32 %26, 2, !dbg !2521
  br i1 %27, label %28, label %31, !dbg !2522

; <label>:28:                                     ; preds = %23
  %29 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2523
  call void @vrrp_send_adv(%struct._vrrp_t* %29, i8 zeroext 0), !dbg !2525
  %30 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2526
  call void @vrrp_restore_interface(%struct._vrrp_t* %30, i1 zeroext false, i1 zeroext false), !dbg !2527
  br label %31, !dbg !2528

; <label>:31:                                     ; preds = %28, %23, %10
  %32 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2529
  %33 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %32, i32 0, i32 56, !dbg !2530
  %34 = load i32, i32* %33, align 4, !dbg !2530
  %35 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2531
  %36 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %35, i32 0, i32 55, !dbg !2532
  store i32 %34, i32* %36, align 8, !dbg !2533
  %37 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2534
  call void @send_instance_notifies(%struct._vrrp_t* %37), !dbg !2535
  %38 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2536
  %39 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %38, i32 0, i32 55, !dbg !2538
  %40 = load i32, i32* %39, align 8, !dbg !2538
  %41 = icmp eq i32 %40, 1, !dbg !2539
  br i1 %41, label %42, label %51, !dbg !2540

; <label>:42:                                     ; preds = %31
  %43 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2541
  %44 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %43, i32 0, i32 54, !dbg !2543
  %45 = getelementptr inbounds %struct.timeval, %struct.timeval* %44, i32 0, i32 0, !dbg !2544
  store i64 0, i64* %45, align 8, !dbg !2545
  %46 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2546
  %47 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %46, i32 0, i32 47, !dbg !2547
  %48 = load i32, i32* %47, align 8, !dbg !2547
  %49 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2548
  %50 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %49, i32 0, i32 48, !dbg !2549
  store i32 %48, i32* %50, align 4, !dbg !2550
  br label %51, !dbg !2551

; <label>:51:                                     ; preds = %42, %31
  br label %52

; <label>:52:                                     ; preds = %51, %8
  %53 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2552
  %54 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %53, i32 0, i32 47, !dbg !2553
  %55 = load i32, i32* %54, align 8, !dbg !2553
  %56 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2554
  %57 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %56, i32 0, i32 48, !dbg !2555
  store i32 %55, i32* %57, align 4, !dbg !2556
  %58 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2557
  %59 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %58, i32 0, i32 48, !dbg !2558
  %60 = load i32, i32* %59, align 4, !dbg !2558
  %61 = mul i32 3, %60, !dbg !2559
  %62 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2560
  %63 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %62, i32 0, i32 60, !dbg !2561
  %64 = load i32, i32* %63, align 4, !dbg !2561
  %65 = icmp eq i32 %64, 3, !dbg !2562
  br i1 %65, label %66, label %79, !dbg !2563

; <label>:66:                                     ; preds = %52
  %67 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2564
  %68 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %67, i32 0, i32 38, !dbg !2566
  %69 = load i8, i8* %68, align 2, !dbg !2566
  %70 = zext i8 %69 to i32, !dbg !2567
  %71 = sub i32 256, %70, !dbg !2568
  %72 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2569
  %73 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %72, i32 0, i32 48, !dbg !2570
  %74 = load i32, i32* %73, align 4, !dbg !2570
  %75 = udiv i32 %74, 10000, !dbg !2571
  %76 = mul i32 %71, %75, !dbg !2572
  %77 = mul i32 %76, 625, !dbg !2573
  %78 = udiv i32 %77, 16, !dbg !2574
  br label %87, !dbg !2575

; <label>:79:                                     ; preds = %52
  %80 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2576
  %81 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %80, i32 0, i32 38, !dbg !2578
  %82 = load i8, i8* %81, align 2, !dbg !2578
  %83 = zext i8 %82 to i32, !dbg !2579
  %84 = sub i32 256, %83, !dbg !2580
  %85 = mul i32 %84, 1000000, !dbg !2581
  %86 = udiv i32 %85, 256, !dbg !2582
  br label %87, !dbg !2583

; <label>:87:                                     ; preds = %79, %66
  %88 = phi i32 [ %78, %66 ], [ %86, %79 ], !dbg !2584
  %89 = add i32 %61, %88, !dbg !2586
  %90 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2587
  %91 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %90, i32 0, i32 70, !dbg !2588
  store i32 %89, i32* %91, align 8, !dbg !2589
  %92 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2590
  call void @vrrp_init_instance_sands(%struct._vrrp_t* %92), !dbg !2591
  %93 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !2592
  %94 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %93, i32 0, i32 24, !dbg !2593
  %95 = call { i64, i64 } @timer_now(), !dbg !2594
  %96 = bitcast %struct.timeval* %3 to { i64, i64 }*, !dbg !2594
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %96, i32 0, i32 0, !dbg !2594
  %98 = extractvalue { i64, i64 } %95, 0, !dbg !2594
  store i64 %98, i64* %97, align 8, !dbg !2594
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %96, i32 0, i32 1, !dbg !2594
  %100 = extractvalue { i64, i64 } %95, 1, !dbg !2594
  store i64 %100, i64* %99, align 8, !dbg !2594
  %101 = bitcast %struct.timeval* %94 to i8*, !dbg !2594
  %102 = bitcast %struct.timeval* %3 to i8*, !dbg !2594
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 16, i32 8, i1 false), !dbg !2595
  ret void, !dbg !2596
}

; Function Attrs: nounwind uwtable
define void @vrrp_state_backup(%struct._vrrp_t*, i8*, i64) #0 !dbg !2597 {
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct._vrrphdr*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca %struct.timeval, align 8
  %13 = alloca i8, align 1
  %14 = alloca %struct.in6_addr*, align 8
  %15 = alloca %struct.in6_addr*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.timeval, align 8
  %18 = alloca %struct.timeval, align 8
  %19 = alloca %struct.timeval, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !2600, metadata !793), !dbg !2601
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2602, metadata !793), !dbg !2603
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !2604, metadata !793), !dbg !2605
  call void @llvm.dbg.declare(metadata %struct._vrrphdr** %7, metadata !2606, metadata !793), !dbg !2607
  call void @llvm.dbg.declare(metadata i64* %8, metadata !2608, metadata !793), !dbg !2609
  store i64 0, i64* %8, align 8, !dbg !2609
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2610, metadata !793), !dbg !2611
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2612, metadata !793), !dbg !2613
  call void @llvm.dbg.declare(metadata i8* %11, metadata !2614, metadata !793), !dbg !2615
  store i8 0, i8* %11, align 1, !dbg !2615
  call void @llvm.dbg.declare(metadata %struct.timeval* %12, metadata !2616, metadata !793), !dbg !2617
  call void @llvm.dbg.declare(metadata i8* %13, metadata !2618, metadata !793), !dbg !2619
  store i8 0, i8* %13, align 1, !dbg !2619
  %20 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2620
  %21 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %20, i32 0, i32 0, !dbg !2621
  %22 = load i16, i16* %21, align 8, !dbg !2621
  %23 = load i8*, i8** %5, align 8, !dbg !2622
  %24 = call %struct._vrrphdr* @vrrp_get_header(i16 zeroext %22, i8* %23, i32* %10), !dbg !2623
  store %struct._vrrphdr* %24, %struct._vrrphdr** %7, align 8, !dbg !2624
  %25 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2625
  %26 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %25, i32 0, i32 7, !dbg !2627
  %27 = load i8, i8* %26, align 2, !dbg !2627
  %28 = trunc i8 %27 to i1, !dbg !2627
  br i1 %28, label %29, label %41, !dbg !2628

; <label>:29:                                     ; preds = %3
  %30 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2629
  %31 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %30, i32 0, i32 22, !dbg !2630
  %32 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %31, i32 0, i32 0, !dbg !2631
  %33 = load i16, i16* %32, align 8, !dbg !2631
  %34 = zext i16 %33 to i32, !dbg !2629
  %35 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2632
  %36 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %35, i32 0, i32 19, !dbg !2633
  %37 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %36, i32 0, i32 0, !dbg !2634
  %38 = load i16, i16* %37, align 8, !dbg !2634
  %39 = zext i16 %38 to i32, !dbg !2632
  %40 = icmp ne i32 %34, %39, !dbg !2635
  br i1 %40, label %41, label %42, !dbg !2636

; <label>:41:                                     ; preds = %29, %3
  store i8 1, i8* %11, align 1, !dbg !2638
  br label %129, !dbg !2639

; <label>:42:                                     ; preds = %29
  %43 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2640
  %44 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %43, i32 0, i32 19, !dbg !2643
  %45 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %44, i32 0, i32 0, !dbg !2644
  %46 = load i16, i16* %45, align 8, !dbg !2644
  %47 = zext i16 %46 to i32, !dbg !2640
  %48 = icmp eq i32 %47, 2, !dbg !2645
  br i1 %48, label %49, label %65, !dbg !2646

; <label>:49:                                     ; preds = %42
  %50 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2647
  %51 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %50, i32 0, i32 19, !dbg !2650
  %52 = bitcast %struct.sockaddr_storage* %51 to %struct.sockaddr_in*, !dbg !2651
  %53 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %52, i32 0, i32 2, !dbg !2651
  %54 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %53, i32 0, i32 0, !dbg !2652
  %55 = load i32, i32* %54, align 4, !dbg !2652
  %56 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2653
  %57 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %56, i32 0, i32 22, !dbg !2654
  %58 = bitcast %struct.sockaddr_storage* %57 to %struct.sockaddr_in*, !dbg !2655
  %59 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %58, i32 0, i32 2, !dbg !2655
  %60 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %59, i32 0, i32 0, !dbg !2656
  %61 = load i32, i32* %60, align 4, !dbg !2656
  %62 = icmp ne i32 %55, %61, !dbg !2657
  br i1 %62, label %63, label %64, !dbg !2658

; <label>:63:                                     ; preds = %49
  store i8 1, i8* %11, align 1, !dbg !2659
  br label %64, !dbg !2660

; <label>:64:                                     ; preds = %63, %49
  br label %128, !dbg !2661

; <label>:65:                                     ; preds = %42
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %14, metadata !2662, metadata !793), !dbg !2666
  %66 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2667
  %67 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %66, i32 0, i32 19, !dbg !2668
  %68 = bitcast %struct.sockaddr_storage* %67 to %struct.sockaddr_in6*, !dbg !2669
  %69 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %68, i32 0, i32 3, !dbg !2669
  store %struct.in6_addr* %69, %struct.in6_addr** %14, align 8, !dbg !2666
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %15, metadata !2670, metadata !793), !dbg !2671
  %70 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2667
  %71 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %70, i32 0, i32 22, !dbg !2668
  %72 = bitcast %struct.sockaddr_storage* %71 to %struct.sockaddr_in6*, !dbg !2672
  %73 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %72, i32 0, i32 3, !dbg !2672
  store %struct.in6_addr* %73, %struct.in6_addr** %15, align 8, !dbg !2671
  %74 = load %struct.in6_addr*, %struct.in6_addr** %14, align 8, !dbg !2673
  %75 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %74, i32 0, i32 0, !dbg !2674
  %76 = bitcast %union.anon* %75 to [4 x i32]*, !dbg !2675
  %77 = getelementptr inbounds [4 x i32], [4 x i32]* %76, i64 0, i64 0, !dbg !2673
  %78 = load i32, i32* %77, align 4, !dbg !2673
  %79 = load %struct.in6_addr*, %struct.in6_addr** %15, align 8, !dbg !2676
  %80 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %79, i32 0, i32 0, !dbg !2677
  %81 = bitcast %union.anon* %80 to [4 x i32]*, !dbg !2678
  %82 = getelementptr inbounds [4 x i32], [4 x i32]* %81, i64 0, i64 0, !dbg !2676
  %83 = load i32, i32* %82, align 4, !dbg !2676
  %84 = icmp eq i32 %78, %83, !dbg !2668
  br i1 %84, label %85, label %121, !dbg !2679

; <label>:85:                                     ; preds = %65
  %86 = load %struct.in6_addr*, %struct.in6_addr** %14, align 8, !dbg !2680
  %87 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %86, i32 0, i32 0, !dbg !2682
  %88 = bitcast %union.anon* %87 to [4 x i32]*, !dbg !2683
  %89 = getelementptr inbounds [4 x i32], [4 x i32]* %88, i64 0, i64 1, !dbg !2680
  %90 = load i32, i32* %89, align 4, !dbg !2680
  %91 = load %struct.in6_addr*, %struct.in6_addr** %15, align 8, !dbg !2684
  %92 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %91, i32 0, i32 0, !dbg !2685
  %93 = bitcast %union.anon* %92 to [4 x i32]*, !dbg !2686
  %94 = getelementptr inbounds [4 x i32], [4 x i32]* %93, i64 0, i64 1, !dbg !2684
  %95 = load i32, i32* %94, align 4, !dbg !2684
  %96 = icmp eq i32 %90, %95, !dbg !2687
  br i1 %96, label %97, label %121, !dbg !2688

; <label>:97:                                     ; preds = %85
  %98 = load %struct.in6_addr*, %struct.in6_addr** %14, align 8, !dbg !2689
  %99 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %98, i32 0, i32 0, !dbg !2691
  %100 = bitcast %union.anon* %99 to [4 x i32]*, !dbg !2692
  %101 = getelementptr inbounds [4 x i32], [4 x i32]* %100, i64 0, i64 2, !dbg !2689
  %102 = load i32, i32* %101, align 4, !dbg !2689
  %103 = load %struct.in6_addr*, %struct.in6_addr** %15, align 8, !dbg !2693
  %104 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %103, i32 0, i32 0, !dbg !2694
  %105 = bitcast %union.anon* %104 to [4 x i32]*, !dbg !2695
  %106 = getelementptr inbounds [4 x i32], [4 x i32]* %105, i64 0, i64 2, !dbg !2693
  %107 = load i32, i32* %106, align 4, !dbg !2693
  %108 = icmp eq i32 %102, %107, !dbg !2696
  br i1 %108, label %109, label %121, !dbg !2697

; <label>:109:                                    ; preds = %97
  %110 = load %struct.in6_addr*, %struct.in6_addr** %14, align 8, !dbg !2698
  %111 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %110, i32 0, i32 0, !dbg !2700
  %112 = bitcast %union.anon* %111 to [4 x i32]*, !dbg !2701
  %113 = getelementptr inbounds [4 x i32], [4 x i32]* %112, i64 0, i64 3, !dbg !2698
  %114 = load i32, i32* %113, align 4, !dbg !2698
  %115 = load %struct.in6_addr*, %struct.in6_addr** %15, align 8, !dbg !2702
  %116 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %115, i32 0, i32 0, !dbg !2703
  %117 = bitcast %union.anon* %116 to [4 x i32]*, !dbg !2704
  %118 = getelementptr inbounds [4 x i32], [4 x i32]* %117, i64 0, i64 3, !dbg !2702
  %119 = load i32, i32* %118, align 4, !dbg !2702
  %120 = icmp eq i32 %114, %119, !dbg !2705
  br label %121

; <label>:121:                                    ; preds = %109, %97, %85, %65
  %122 = phi i1 [ false, %97 ], [ false, %85 ], [ false, %65 ], [ %120, %109 ]
  %123 = zext i1 %122 to i32, !dbg !2706
  store i32 %123, i32* %16, align 4, !dbg !2708
  %124 = load i32, i32* %16, align 4, !dbg !2709
  %125 = icmp ne i32 %124, 0, !dbg !2710
  br i1 %125, label %127, label %126, !dbg !2711

; <label>:126:                                    ; preds = %121
  store i8 1, i8* %11, align 1, !dbg !2712
  br label %127, !dbg !2713

; <label>:127:                                    ; preds = %126, %121
  br label %128

; <label>:128:                                    ; preds = %127, %64
  br label %129

; <label>:129:                                    ; preds = %128, %41
  %130 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2714
  %131 = load i8*, i8** %5, align 8, !dbg !2715
  %132 = load i64, i64* %6, align 8, !dbg !2716
  %133 = load i8, i8* %11, align 1, !dbg !2717
  %134 = trunc i8 %133 to i1, !dbg !2717
  %135 = call i32 @vrrp_check_packet(%struct._vrrp_t* %130, i8* %131, i64 %132, i1 zeroext %134), !dbg !2718
  %136 = sext i32 %135 to i64, !dbg !2718
  store i64 %136, i64* %8, align 8, !dbg !2719
  %137 = load i64, i64* %8, align 8, !dbg !2720
  %138 = icmp ne i64 %137, 0, !dbg !2722
  br i1 %138, label %139, label %140, !dbg !2723

; <label>:139:                                    ; preds = %129
  store i8 1, i8* %13, align 1, !dbg !2724
  br label %394, !dbg !2725

; <label>:140:                                    ; preds = %129
  %141 = load %struct._vrrphdr*, %struct._vrrphdr** %7, align 8, !dbg !2726
  %142 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %141, i32 0, i32 2, !dbg !2728
  %143 = load i8, i8* %142, align 2, !dbg !2728
  %144 = zext i8 %143 to i32, !dbg !2726
  %145 = icmp eq i32 %144, 0, !dbg !2729
  br i1 %145, label %146, label %179, !dbg !2730

; <label>:146:                                    ; preds = %140
  %147 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2731
  %148 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %147, i32 0, i32 1, !dbg !2733
  %149 = load i8*, i8** %148, align 8, !dbg !2733
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8, i32 0, i32 0), i8* %149), !dbg !2734
  %150 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2735
  %151 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %150, i32 0, i32 60, !dbg !2736
  %152 = load i32, i32* %151, align 4, !dbg !2736
  %153 = icmp eq i32 %152, 3, !dbg !2737
  br i1 %153, label %154, label %167, !dbg !2738

; <label>:154:                                    ; preds = %146
  %155 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2739
  %156 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %155, i32 0, i32 38, !dbg !2741
  %157 = load i8, i8* %156, align 2, !dbg !2741
  %158 = zext i8 %157 to i32, !dbg !2742
  %159 = sub i32 256, %158, !dbg !2743
  %160 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2744
  %161 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %160, i32 0, i32 48, !dbg !2745
  %162 = load i32, i32* %161, align 4, !dbg !2745
  %163 = udiv i32 %162, 10000, !dbg !2746
  %164 = mul i32 %159, %163, !dbg !2747
  %165 = mul i32 %164, 625, !dbg !2748
  %166 = udiv i32 %165, 16, !dbg !2749
  br label %175, !dbg !2750

; <label>:167:                                    ; preds = %146
  %168 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2751
  %169 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %168, i32 0, i32 38, !dbg !2753
  %170 = load i8, i8* %169, align 2, !dbg !2753
  %171 = zext i8 %170 to i32, !dbg !2754
  %172 = sub i32 256, %171, !dbg !2755
  %173 = mul i32 %172, 1000000, !dbg !2756
  %174 = udiv i32 %173, 256, !dbg !2757
  br label %175, !dbg !2758

; <label>:175:                                    ; preds = %167, %154
  %176 = phi i32 [ %166, %154 ], [ %174, %167 ], !dbg !2759
  %177 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2761
  %178 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %177, i32 0, i32 70, !dbg !2762
  store i32 %176, i32* %178, align 8, !dbg !2763
  br label %393, !dbg !2764

; <label>:179:                                    ; preds = %140
  %180 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2765
  %181 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %180, i32 0, i32 52, !dbg !2768
  %182 = load i8, i8* %181, align 1, !dbg !2768
  %183 = trunc i8 %182 to i1, !dbg !2768
  br i1 %183, label %226, label %184, !dbg !2769

; <label>:184:                                    ; preds = %179
  %185 = load %struct._vrrphdr*, %struct._vrrphdr** %7, align 8, !dbg !2770
  %186 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %185, i32 0, i32 2, !dbg !2771
  %187 = load i8, i8* %186, align 2, !dbg !2771
  %188 = zext i8 %187 to i32, !dbg !2770
  %189 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2772
  %190 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %189, i32 0, i32 38, !dbg !2773
  %191 = load i8, i8* %190, align 2, !dbg !2773
  %192 = zext i8 %191 to i32, !dbg !2772
  %193 = icmp sge i32 %188, %192, !dbg !2774
  br i1 %193, label %226, label %194, !dbg !2775

; <label>:194:                                    ; preds = %184
  %195 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2776
  %196 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %195, i32 0, i32 53, !dbg !2777
  %197 = load i64, i64* %196, align 8, !dbg !2777
  %198 = icmp ne i64 %197, 0, !dbg !2776
  br i1 %198, label %199, label %375, !dbg !2778

; <label>:199:                                    ; preds = %194
  %200 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2779
  %201 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %200, i32 0, i32 54, !dbg !2780
  %202 = getelementptr inbounds %struct.timeval, %struct.timeval* %201, i32 0, i32 0, !dbg !2781
  %203 = load i64, i64* %202, align 8, !dbg !2781
  %204 = icmp ne i64 %203, 0, !dbg !2779
  br i1 %204, label %205, label %226, !dbg !2782

; <label>:205:                                    ; preds = %199
  %206 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2783
  %207 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %206, i32 0, i32 54, !dbg !2784
  %208 = getelementptr inbounds %struct.timeval, %struct.timeval* %207, i32 0, i32 0, !dbg !2785
  %209 = load i64, i64* %208, align 8, !dbg !2785
  %210 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @time_now, i32 0, i32 0), align 8, !dbg !2785
  %211 = icmp eq i64 %209, %210, !dbg !2786
  br i1 %211, label %212, label %219, !dbg !2787

; <label>:212:                                    ; preds = %205
  %213 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2789
  %214 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %213, i32 0, i32 54, !dbg !2790
  %215 = getelementptr inbounds %struct.timeval, %struct.timeval* %214, i32 0, i32 1, !dbg !2791
  %216 = load i64, i64* %215, align 8, !dbg !2791
  %217 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @time_now, i32 0, i32 1), align 8, !dbg !2791
  %218 = icmp sgt i64 %216, %217, !dbg !2792
  br i1 %218, label %226, label %375, !dbg !2789

; <label>:219:                                    ; preds = %205
  %220 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2793
  %221 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %220, i32 0, i32 54, !dbg !2795
  %222 = getelementptr inbounds %struct.timeval, %struct.timeval* %221, i32 0, i32 0, !dbg !2796
  %223 = load i64, i64* %222, align 8, !dbg !2796
  %224 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @time_now, i32 0, i32 0), align 8, !dbg !2796
  %225 = icmp sgt i64 %223, %224, !dbg !2797
  br i1 %225, label %226, label %375, !dbg !2798

; <label>:226:                                    ; preds = %219, %212, %199, %184, %179
  %227 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2800
  %228 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %227, i32 0, i32 60, !dbg !2803
  %229 = load i32, i32* %228, align 4, !dbg !2803
  %230 = icmp eq i32 %229, 3, !dbg !2804
  br i1 %230, label %231, label %260, !dbg !2805

; <label>:231:                                    ; preds = %226
  %232 = load %struct._vrrphdr*, %struct._vrrphdr** %7, align 8, !dbg !2806
  %233 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %232, i32 0, i32 4, !dbg !2808
  %234 = bitcast %union.anon.2* %233 to %struct.anon.4*, !dbg !2808
  %235 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %234, i32 0, i32 0, !dbg !2809
  %236 = load i16, i16* %235, align 2, !dbg !2809
  %237 = call zeroext i16 @ntohs(i16 zeroext %236) #1, !dbg !2810
  %238 = zext i16 %237 to i32, !dbg !2810
  %239 = and i32 %238, 4095, !dbg !2811
  %240 = mul i32 %239, 10000, !dbg !2812
  store i32 %240, i32* %9, align 4, !dbg !2813
  %241 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2814
  %242 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %241, i32 0, i32 48, !dbg !2816
  %243 = load i32, i32* %242, align 4, !dbg !2816
  %244 = load i32, i32* %9, align 4, !dbg !2817
  %245 = icmp ne i32 %243, %244, !dbg !2818
  br i1 %245, label %246, label %259, !dbg !2819

; <label>:246:                                    ; preds = %231
  %247 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2820
  %248 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %247, i32 0, i32 1, !dbg !2822
  %249 = load i8*, i8** %248, align 8, !dbg !2822
  %250 = load i32, i32* %9, align 4, !dbg !2823
  %251 = udiv i32 %250, 1000, !dbg !2824
  %252 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2825
  %253 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %252, i32 0, i32 48, !dbg !2826
  %254 = load i32, i32* %253, align 4, !dbg !2826
  %255 = udiv i32 %254, 1000, !dbg !2827
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i32 0, i32 0), i8* %249, i32 %251, i32 %255), !dbg !2828
  %256 = load i32, i32* %9, align 4, !dbg !2829
  %257 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2830
  %258 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %257, i32 0, i32 48, !dbg !2831
  store i32 %256, i32* %258, align 4, !dbg !2832
  br label %259, !dbg !2833

; <label>:259:                                    ; preds = %246, %231
  br label %260, !dbg !2834

; <label>:260:                                    ; preds = %259, %226
  %261 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2835
  %262 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %261, i32 0, i32 48, !dbg !2836
  %263 = load i32, i32* %262, align 4, !dbg !2836
  %264 = mul i32 3, %263, !dbg !2837
  %265 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2838
  %266 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %265, i32 0, i32 60, !dbg !2839
  %267 = load i32, i32* %266, align 4, !dbg !2839
  %268 = icmp eq i32 %267, 3, !dbg !2840
  br i1 %268, label %269, label %282, !dbg !2841

; <label>:269:                                    ; preds = %260
  %270 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2842
  %271 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %270, i32 0, i32 38, !dbg !2844
  %272 = load i8, i8* %271, align 2, !dbg !2844
  %273 = zext i8 %272 to i32, !dbg !2845
  %274 = sub i32 256, %273, !dbg !2846
  %275 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2847
  %276 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %275, i32 0, i32 48, !dbg !2848
  %277 = load i32, i32* %276, align 4, !dbg !2848
  %278 = udiv i32 %277, 10000, !dbg !2849
  %279 = mul i32 %274, %278, !dbg !2850
  %280 = mul i32 %279, 625, !dbg !2851
  %281 = udiv i32 %280, 16, !dbg !2852
  br label %290, !dbg !2853

; <label>:282:                                    ; preds = %260
  %283 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2854
  %284 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %283, i32 0, i32 38, !dbg !2856
  %285 = load i8, i8* %284, align 2, !dbg !2856
  %286 = zext i8 %285 to i32, !dbg !2857
  %287 = sub i32 256, %286, !dbg !2858
  %288 = mul i32 %287, 1000000, !dbg !2859
  %289 = udiv i32 %288, 256, !dbg !2860
  br label %290, !dbg !2861

; <label>:290:                                    ; preds = %282, %269
  %291 = phi i32 [ %281, %269 ], [ %289, %282 ], !dbg !2862
  %292 = add i32 %264, %291, !dbg !2864
  %293 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2865
  %294 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %293, i32 0, i32 70, !dbg !2866
  store i32 %292, i32* %294, align 8, !dbg !2867
  %295 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2868
  %296 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %295, i32 0, i32 22, !dbg !2869
  %297 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2870
  %298 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %297, i32 0, i32 19, !dbg !2871
  %299 = bitcast %struct.sockaddr_storage* %296 to i8*, !dbg !2871
  %300 = bitcast %struct.sockaddr_storage* %298 to i8*, !dbg !2871
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %299, i8* %300, i64 128, i32 8, i1 false), !dbg !2871
  %301 = load %struct._vrrphdr*, %struct._vrrphdr** %7, align 8, !dbg !2872
  %302 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %301, i32 0, i32 2, !dbg !2873
  %303 = load i8, i8* %302, align 2, !dbg !2873
  %304 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2874
  %305 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %304, i32 0, i32 23, !dbg !2875
  store i8 %303, i8* %305, align 8, !dbg !2876
  %306 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2877
  %307 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %306, i32 0, i32 53, !dbg !2879
  %308 = load i64, i64* %307, align 8, !dbg !2879
  %309 = icmp ne i64 %308, 0, !dbg !2877
  br i1 %309, label %310, label %374, !dbg !2880

; <label>:310:                                    ; preds = %290
  %311 = load %struct._vrrphdr*, %struct._vrrphdr** %7, align 8, !dbg !2881
  %312 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %311, i32 0, i32 2, !dbg !2884
  %313 = load i8, i8* %312, align 2, !dbg !2884
  %314 = zext i8 %313 to i32, !dbg !2881
  %315 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2885
  %316 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %315, i32 0, i32 38, !dbg !2886
  %317 = load i8, i8* %316, align 2, !dbg !2886
  %318 = zext i8 %317 to i32, !dbg !2885
  %319 = icmp sge i32 %314, %318, !dbg !2887
  br i1 %319, label %320, label %334, !dbg !2888

; <label>:320:                                    ; preds = %310
  %321 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2889
  %322 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %321, i32 0, i32 54, !dbg !2892
  %323 = getelementptr inbounds %struct.timeval, %struct.timeval* %322, i32 0, i32 0, !dbg !2893
  %324 = load i64, i64* %323, align 8, !dbg !2893
  %325 = icmp ne i64 %324, 0, !dbg !2889
  br i1 %325, label %326, label %333, !dbg !2894

; <label>:326:                                    ; preds = %320
  %327 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2895
  %328 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %327, i32 0, i32 1, !dbg !2897
  %329 = load i8*, i8** %328, align 8, !dbg !2897
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i32 0, i32 0), i8* %329), !dbg !2898
  %330 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2899
  %331 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %330, i32 0, i32 54, !dbg !2900
  %332 = getelementptr inbounds %struct.timeval, %struct.timeval* %331, i32 0, i32 0, !dbg !2901
  store i64 0, i64* %332, align 8, !dbg !2902
  br label %333, !dbg !2903

; <label>:333:                                    ; preds = %326, %320
  br label %373, !dbg !2904

; <label>:334:                                    ; preds = %310
  %335 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2905
  %336 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %335, i32 0, i32 54, !dbg !2908
  %337 = getelementptr inbounds %struct.timeval, %struct.timeval* %336, i32 0, i32 0, !dbg !2909
  %338 = load i64, i64* %337, align 8, !dbg !2909
  %339 = icmp ne i64 %338, 0, !dbg !2905
  br i1 %339, label %372, label %340, !dbg !2910

; <label>:340:                                    ; preds = %334
  %341 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2911
  %342 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %341, i32 0, i32 1, !dbg !2913
  %343 = load i8*, i8** %342, align 8, !dbg !2913
  %344 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2914
  %345 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %344, i32 0, i32 53, !dbg !2915
  %346 = load i64, i64* %345, align 8, !dbg !2915
  %347 = udiv i64 %346, 1000000, !dbg !2916
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i32 0, i32 0), i8* %343, i64 %347), !dbg !2917
  %348 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2918
  %349 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %348, i32 0, i32 54, !dbg !2919
  %350 = call { i64, i64 } @timer_now(), !dbg !2920
  %351 = bitcast %struct.timeval* %17 to { i64, i64 }*, !dbg !2920
  %352 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %351, i32 0, i32 0, !dbg !2920
  %353 = extractvalue { i64, i64 } %350, 0, !dbg !2920
  store i64 %353, i64* %352, align 8, !dbg !2920
  %354 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %351, i32 0, i32 1, !dbg !2920
  %355 = extractvalue { i64, i64 } %350, 1, !dbg !2920
  store i64 %355, i64* %354, align 8, !dbg !2920
  %356 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2921
  %357 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %356, i32 0, i32 53, !dbg !2922
  %358 = load i64, i64* %357, align 8, !dbg !2922
  %359 = bitcast %struct.timeval* %17 to { i64, i64 }*, !dbg !2923
  %360 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %359, i32 0, i32 0, !dbg !2923
  %361 = load i64, i64* %360, align 8, !dbg !2923
  %362 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %359, i32 0, i32 1, !dbg !2923
  %363 = load i64, i64* %362, align 8, !dbg !2923
  %364 = call { i64, i64 } @timer_add_long(i64 %361, i64 %363, i64 %358), !dbg !2924
  %365 = bitcast %struct.timeval* %18 to { i64, i64 }*, !dbg !2923
  %366 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %365, i32 0, i32 0, !dbg !2923
  %367 = extractvalue { i64, i64 } %364, 0, !dbg !2923
  store i64 %367, i64* %366, align 8, !dbg !2923
  %368 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %365, i32 0, i32 1, !dbg !2923
  %369 = extractvalue { i64, i64 } %364, 1, !dbg !2923
  store i64 %369, i64* %368, align 8, !dbg !2923
  %370 = bitcast %struct.timeval* %349 to i8*, !dbg !2923
  %371 = bitcast %struct.timeval* %18 to i8*, !dbg !2923
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %370, i8* %371, i64 16, i32 8, i1 false), !dbg !2926
  br label %372, !dbg !2928

; <label>:372:                                    ; preds = %340, %334
  br label %373

; <label>:373:                                    ; preds = %372, %333
  br label %374, !dbg !2929

; <label>:374:                                    ; preds = %373, %290
  br label %392, !dbg !2930

; <label>:375:                                    ; preds = %219, %212, %194
  %376 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2931
  %377 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %376, i32 0, i32 1, !dbg !2933
  %378 = load i8*, i8** %377, align 8, !dbg !2933
  %379 = load %struct._vrrphdr*, %struct._vrrphdr** %7, align 8, !dbg !2934
  %380 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %379, i32 0, i32 2, !dbg !2935
  %381 = load i8, i8* %380, align 2, !dbg !2935
  %382 = zext i8 %381 to i32, !dbg !2934
  %383 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2936
  %384 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %383, i32 0, i32 19, !dbg !2937
  %385 = call i8* @inet_sockaddrtos(%struct.sockaddr_storage* %384), !dbg !2938
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.13, i32 0, i32 0), i8* %378, i32 %382, i8* %385), !dbg !2939
  store i8 1, i8* %13, align 1, !dbg !2941
  %386 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2942
  %387 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %386, i32 0, i32 22, !dbg !2943
  %388 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2944
  %389 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %388, i32 0, i32 19, !dbg !2945
  %390 = bitcast %struct.sockaddr_storage* %387 to i8*, !dbg !2945
  %391 = bitcast %struct.sockaddr_storage* %389 to i8*, !dbg !2945
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %390, i8* %391, i64 128, i32 8, i1 false), !dbg !2945
  br label %392

; <label>:392:                                    ; preds = %375, %374
  br label %393

; <label>:393:                                    ; preds = %392, %175
  br label %394

; <label>:394:                                    ; preds = %393, %139
  %395 = load i8, i8* %13, align 1, !dbg !2946
  %396 = trunc i8 %395 to i1, !dbg !2946
  br i1 %396, label %397, label %447, !dbg !2948

; <label>:397:                                    ; preds = %394
  %398 = call { i64, i64 } @set_time_now(), !dbg !2949
  %399 = bitcast %struct.timeval* %19 to { i64, i64 }*, !dbg !2949
  %400 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %399, i32 0, i32 0, !dbg !2949
  %401 = extractvalue { i64, i64 } %398, 0, !dbg !2949
  store i64 %401, i64* %400, align 8, !dbg !2949
  %402 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %399, i32 0, i32 1, !dbg !2949
  %403 = extractvalue { i64, i64 } %398, 1, !dbg !2949
  store i64 %403, i64* %402, align 8, !dbg !2949
  br label %404, !dbg !2951, !llvm.loop !2952

; <label>:404:                                    ; preds = %397
  %405 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2953
  %406 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %405, i32 0, i32 71, !dbg !2956
  %407 = getelementptr inbounds %struct.timeval, %struct.timeval* %406, i32 0, i32 0, !dbg !2957
  %408 = load i64, i64* %407, align 8, !dbg !2957
  %409 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @time_now, i32 0, i32 0), align 8, !dbg !2957
  %410 = sub nsw i64 %408, %409, !dbg !2958
  %411 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0, !dbg !2957
  store i64 %410, i64* %411, align 8, !dbg !2958
  %412 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2953
  %413 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %412, i32 0, i32 71, !dbg !2956
  %414 = getelementptr inbounds %struct.timeval, %struct.timeval* %413, i32 0, i32 1, !dbg !2957
  %415 = load i64, i64* %414, align 8, !dbg !2957
  %416 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @time_now, i32 0, i32 1), align 8, !dbg !2957
  %417 = sub nsw i64 %415, %416, !dbg !2959
  %418 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1, !dbg !2957
  store i64 %417, i64* %418, align 8, !dbg !2959
  %419 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1, !dbg !2957
  %420 = load i64, i64* %419, align 8, !dbg !2957
  %421 = icmp slt i64 %420, 0, !dbg !2959
  br i1 %421, label %422, label %429, !dbg !2960

; <label>:422:                                    ; preds = %404
  %423 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0, !dbg !2961
  %424 = load i64, i64* %423, align 8, !dbg !2965
  %425 = add nsw i64 %424, -1, !dbg !2965
  store i64 %425, i64* %423, align 8, !dbg !2965
  %426 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1, !dbg !2961
  %427 = load i64, i64* %426, align 8, !dbg !2966
  %428 = add nsw i64 %427, 1000000, !dbg !2966
  store i64 %428, i64* %426, align 8, !dbg !2966
  br label %429, !dbg !2967

; <label>:429:                                    ; preds = %422, %404
  br label %430, !dbg !2968

; <label>:430:                                    ; preds = %429
  %431 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0, !dbg !2970
  %432 = load i64, i64* %431, align 8, !dbg !2970
  %433 = icmp slt i64 %432, 0, !dbg !2971
  br i1 %433, label %434, label %435, !dbg !2972

; <label>:434:                                    ; preds = %430
  br label %443, !dbg !2973

; <label>:435:                                    ; preds = %430
  %436 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0, !dbg !2975
  %437 = load i64, i64* %436, align 8, !dbg !2975
  %438 = mul nsw i64 %437, 1000000, !dbg !2977
  %439 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1, !dbg !2978
  %440 = load i64, i64* %439, align 8, !dbg !2978
  %441 = add nsw i64 %438, %440, !dbg !2979
  %442 = trunc i64 %441 to i32, !dbg !2980
  br label %443, !dbg !2981

; <label>:443:                                    ; preds = %435, %434
  %444 = phi i32 [ 0, %434 ], [ %442, %435 ], !dbg !2982
  %445 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !2984
  %446 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %445, i32 0, i32 70, !dbg !2985
  store i32 %444, i32* %446, align 8, !dbg !2986
  br label %447, !dbg !2987

; <label>:447:                                    ; preds = %443, %394
  ret void, !dbg !2988
}

; Function Attrs: nounwind uwtable
define internal i32 @vrrp_check_packet(%struct._vrrp_t*, i8*, i64, i1 zeroext) #0 !dbg !2989 {
  %5 = alloca i32, align 4
  %6 = alloca %struct._vrrp_t*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  store %struct._vrrp_t* %0, %struct._vrrp_t** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %6, metadata !2992, metadata !793), !dbg !2993
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2994, metadata !793), !dbg !2995
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !2996, metadata !793), !dbg !2997
  %10 = zext i1 %3 to i8
  store i8 %10, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !2998, metadata !793), !dbg !2999
  %11 = load i64, i64* %8, align 8, !dbg !3000
  %12 = icmp ne i64 %11, 0, !dbg !3000
  br i1 %12, label %14, label %13, !dbg !3002

; <label>:13:                                     ; preds = %4
  store i32 3, i32* %5, align 4, !dbg !3003
  br label %21, !dbg !3003

; <label>:14:                                     ; preds = %4
  %15 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !3004
  %16 = load i8*, i8** %7, align 8, !dbg !3005
  %17 = load i64, i64* %8, align 8, !dbg !3006
  %18 = load i8, i8* %9, align 1, !dbg !3007
  %19 = trunc i8 %18 to i1, !dbg !3007
  %20 = call i32 @vrrp_in_chk(%struct._vrrp_t* %15, i8* %16, i64 %17, i1 zeroext %19), !dbg !3008
  store i32 %20, i32* %5, align 4, !dbg !3009
  br label %21, !dbg !3009

; <label>:21:                                     ; preds = %14, %13
  %22 = load i32, i32* %5, align 4, !dbg !3010
  ret i32 %22, !dbg !3010
}

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #5

declare { i64, i64 } @timer_add_long(i64, i64, i64) #3

declare { i64, i64 } @set_time_now() #3

; Function Attrs: nounwind uwtable
define internal void @vrrp_state_become_master(%struct._vrrp_t*) #0 !dbg !3011 {
  %2 = alloca %struct._vrrp_t*, align 8
  %3 = alloca %struct._interface*, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = alloca %struct.timeval, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !3012, metadata !793), !dbg !3013
  call void @llvm.dbg.declare(metadata %struct._interface** %3, metadata !3014, metadata !793), !dbg !3015
  %6 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3016
  %7 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %6, i32 0, i32 3, !dbg !3017
  %8 = load %struct._vrrp_stats*, %struct._vrrp_stats** %7, align 8, !dbg !3017
  %9 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %8, i32 0, i32 2, !dbg !3018
  %10 = load i32, i32* %9, align 4, !dbg !3019
  %11 = add i32 %10, 1, !dbg !3019
  store i32 %11, i32* %9, align 4, !dbg !3019
  %12 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3020
  %13 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %12, i32 0, i32 60, !dbg !3022
  %14 = load i32, i32* %13, align 4, !dbg !3022
  %15 = icmp eq i32 %14, 3, !dbg !3023
  br i1 %15, label %16, label %24, !dbg !3024

; <label>:16:                                     ; preds = %1
  %17 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3025
  %18 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %17, i32 0, i32 1, !dbg !3026
  %19 = load i8*, i8** %18, align 8, !dbg !3026
  %20 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3027
  %21 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %20, i32 0, i32 47, !dbg !3028
  %22 = load i32, i32* %21, align 8, !dbg !3028
  %23 = udiv i32 %22, 1000, !dbg !3029
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0), i8* %19, i32 %23), !dbg !3030
  br label %24, !dbg !3030

; <label>:24:                                     ; preds = %16, %1
  %25 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3031
  call void @vrrp_handle_accept_mode(%struct._vrrp_t* %25, i32 1, i1 zeroext false), !dbg !3032
  %26 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3033
  %27 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %26, i32 0, i32 41, !dbg !3035
  %28 = load %struct._list*, %struct._list** %27, align 8, !dbg !3035
  %29 = icmp eq %struct._list* %28, null, !dbg !3036
  br i1 %29, label %47, label %30, !dbg !3037

; <label>:30:                                     ; preds = %24
  %31 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3038
  %32 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %31, i32 0, i32 41, !dbg !3040
  %33 = load %struct._list*, %struct._list** %32, align 8, !dbg !3040
  %34 = getelementptr inbounds %struct._list, %struct._list* %33, i32 0, i32 0, !dbg !3041
  %35 = load %struct._element*, %struct._element** %34, align 8, !dbg !3041
  %36 = icmp eq %struct._element* %35, null, !dbg !3042
  br i1 %36, label %37, label %44, !dbg !3043

; <label>:37:                                     ; preds = %30
  %38 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3044
  %39 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %38, i32 0, i32 41, !dbg !3046
  %40 = load %struct._list*, %struct._list** %39, align 8, !dbg !3046
  %41 = getelementptr inbounds %struct._list, %struct._list* %40, i32 0, i32 1, !dbg !3047
  %42 = load %struct._element*, %struct._element** %41, align 8, !dbg !3047
  %43 = icmp eq %struct._element* %42, null, !dbg !3048
  br i1 %43, label %47, label %44, !dbg !3049

; <label>:44:                                     ; preds = %37, %30
  %45 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3050
  %46 = call zeroext i1 @vrrp_handle_ipaddress(%struct._vrrp_t* %45, i32 1, i32 1, i1 zeroext false), !dbg !3051
  br label %47, !dbg !3051

; <label>:47:                                     ; preds = %44, %37, %24
  %48 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3052
  %49 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %48, i32 0, i32 42, !dbg !3054
  %50 = load %struct._list*, %struct._list** %49, align 8, !dbg !3054
  %51 = icmp eq %struct._list* %50, null, !dbg !3055
  br i1 %51, label %69, label %52, !dbg !3056

; <label>:52:                                     ; preds = %47
  %53 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3057
  %54 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %53, i32 0, i32 42, !dbg !3059
  %55 = load %struct._list*, %struct._list** %54, align 8, !dbg !3059
  %56 = getelementptr inbounds %struct._list, %struct._list* %55, i32 0, i32 0, !dbg !3060
  %57 = load %struct._element*, %struct._element** %56, align 8, !dbg !3060
  %58 = icmp eq %struct._element* %57, null, !dbg !3061
  br i1 %58, label %59, label %66, !dbg !3062

; <label>:59:                                     ; preds = %52
  %60 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3063
  %61 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %60, i32 0, i32 42, !dbg !3065
  %62 = load %struct._list*, %struct._list** %61, align 8, !dbg !3065
  %63 = getelementptr inbounds %struct._list, %struct._list* %62, i32 0, i32 1, !dbg !3066
  %64 = load %struct._element*, %struct._element** %63, align 8, !dbg !3066
  %65 = icmp eq %struct._element* %64, null, !dbg !3067
  br i1 %65, label %69, label %66, !dbg !3068

; <label>:66:                                     ; preds = %59, %52
  %67 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3069
  %68 = call zeroext i1 @vrrp_handle_ipaddress(%struct._vrrp_t* %67, i32 1, i32 2, i1 zeroext false), !dbg !3070
  br label %69, !dbg !3070

; <label>:69:                                     ; preds = %66, %59, %47
  %70 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3071
  %71 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %70, i32 0, i32 40, !dbg !3072
  store i8 1, i8* %71, align 4, !dbg !3073
  %72 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3074
  %73 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %72, i32 0, i32 45, !dbg !3076
  %74 = load %struct._list*, %struct._list** %73, align 8, !dbg !3076
  %75 = icmp eq %struct._list* %74, null, !dbg !3077
  br i1 %75, label %92, label %76, !dbg !3078

; <label>:76:                                     ; preds = %69
  %77 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3079
  %78 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %77, i32 0, i32 45, !dbg !3081
  %79 = load %struct._list*, %struct._list** %78, align 8, !dbg !3081
  %80 = getelementptr inbounds %struct._list, %struct._list* %79, i32 0, i32 0, !dbg !3082
  %81 = load %struct._element*, %struct._element** %80, align 8, !dbg !3082
  %82 = icmp eq %struct._element* %81, null, !dbg !3083
  br i1 %82, label %83, label %90, !dbg !3084

; <label>:83:                                     ; preds = %76
  %84 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3085
  %85 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %84, i32 0, i32 45, !dbg !3087
  %86 = load %struct._list*, %struct._list** %85, align 8, !dbg !3087
  %87 = getelementptr inbounds %struct._list, %struct._list* %86, i32 0, i32 1, !dbg !3088
  %88 = load %struct._element*, %struct._element** %87, align 8, !dbg !3088
  %89 = icmp eq %struct._element* %88, null, !dbg !3089
  br i1 %89, label %92, label %90, !dbg !3090

; <label>:90:                                     ; preds = %83, %76
  %91 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3091
  call void @vrrp_handle_iproutes(%struct._vrrp_t* %91, i32 1), !dbg !3092
  br label %92, !dbg !3092

; <label>:92:                                     ; preds = %90, %83, %69
  %93 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3093
  %94 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %93, i32 0, i32 46, !dbg !3095
  %95 = load %struct._list*, %struct._list** %94, align 8, !dbg !3095
  %96 = icmp eq %struct._list* %95, null, !dbg !3096
  br i1 %96, label %113, label %97, !dbg !3097

; <label>:97:                                     ; preds = %92
  %98 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3098
  %99 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %98, i32 0, i32 46, !dbg !3100
  %100 = load %struct._list*, %struct._list** %99, align 8, !dbg !3100
  %101 = getelementptr inbounds %struct._list, %struct._list* %100, i32 0, i32 0, !dbg !3101
  %102 = load %struct._element*, %struct._element** %101, align 8, !dbg !3101
  %103 = icmp eq %struct._element* %102, null, !dbg !3102
  br i1 %103, label %104, label %111, !dbg !3103

; <label>:104:                                    ; preds = %97
  %105 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3104
  %106 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %105, i32 0, i32 46, !dbg !3106
  %107 = load %struct._list*, %struct._list** %106, align 8, !dbg !3106
  %108 = getelementptr inbounds %struct._list, %struct._list* %107, i32 0, i32 1, !dbg !3107
  %109 = load %struct._element*, %struct._element** %108, align 8, !dbg !3107
  %110 = icmp eq %struct._element* %109, null, !dbg !3108
  br i1 %110, label %113, label %111, !dbg !3109

; <label>:111:                                    ; preds = %104, %97
  %112 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3110
  call void @vrrp_handle_iprules(%struct._vrrp_t* %112, i32 1, i1 zeroext false), !dbg !3111
  br label %113, !dbg !3111

; <label>:113:                                    ; preds = %111, %104, %92
  call void @kernel_netlink_poll(), !dbg !3112
  %114 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3113
  %115 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %114, i32 0, i32 0, !dbg !3115
  %116 = load i16, i16* %115, align 8, !dbg !3115
  %117 = zext i16 %116 to i32, !dbg !3113
  %118 = icmp eq i32 %117, 10, !dbg !3116
  br i1 %118, label %119, label %130, !dbg !3117

; <label>:119:                                    ; preds = %113
  %120 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3118
  %121 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %120, i32 0, i32 4, !dbg !3120
  %122 = load %struct._interface*, %struct._interface** %121, align 8, !dbg !3120
  %123 = getelementptr inbounds %struct._interface, %struct._interface* %122, i32 0, i32 14, !dbg !3121
  %124 = load %struct._interface*, %struct._interface** %123, align 8, !dbg !3121
  store %struct._interface* %124, %struct._interface** %3, align 8, !dbg !3122
  %125 = load %struct._interface*, %struct._interface** %3, align 8, !dbg !3123
  %126 = call zeroext i1 @get_ipv6_forwarding(%struct._interface* %125), !dbg !3124
  %127 = load %struct._interface*, %struct._interface** %3, align 8, !dbg !3125
  %128 = getelementptr inbounds %struct._interface, %struct._interface* %127, i32 0, i32 19, !dbg !3126
  %129 = zext i1 %126 to i8, !dbg !3127
  store i8 %129, i8* %128, align 8, !dbg !3127
  br label %130, !dbg !3128

; <label>:130:                                    ; preds = %119, %113
  %131 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3129
  %132 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3130
  %133 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %132, i32 0, i32 28, !dbg !3131
  %134 = load i32, i32* %133, align 8, !dbg !3131
  call void @vrrp_send_link_update(%struct._vrrp_t* %131, i32 %134), !dbg !3132
  %135 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3133
  %136 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %135, i32 0, i32 26, !dbg !3135
  %137 = getelementptr inbounds %struct.timeval, %struct.timeval* %136, i32 0, i32 0, !dbg !3136
  %138 = load i64, i64* %137, align 8, !dbg !3136
  %139 = icmp ne i64 %138, 0, !dbg !3133
  br i1 %139, label %146, label %140, !dbg !3137

; <label>:140:                                    ; preds = %130
  %141 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3138
  %142 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %141, i32 0, i32 26, !dbg !3140
  %143 = getelementptr inbounds %struct.timeval, %struct.timeval* %142, i32 0, i32 1, !dbg !3141
  %144 = load i64, i64* %143, align 8, !dbg !3141
  %145 = icmp ne i64 %144, 0, !dbg !3142
  br i1 %145, label %146, label %164, !dbg !3143

; <label>:146:                                    ; preds = %140, %130
  %147 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3144
  %148 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %147, i32 0, i32 27, !dbg !3146
  %149 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3147
  %150 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %149, i32 0, i32 26, !dbg !3148
  %151 = bitcast %struct.timeval* %150 to { i64, i64 }*, !dbg !3149
  %152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %151, i32 0, i32 0, !dbg !3149
  %153 = load i64, i64* %152, align 8, !dbg !3149
  %154 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %151, i32 0, i32 1, !dbg !3149
  %155 = load i64, i64* %154, align 8, !dbg !3149
  %156 = call { i64, i64 } @timer_add_now(i64 %153, i64 %155), !dbg !3149
  %157 = bitcast %struct.timeval* %4 to { i64, i64 }*, !dbg !3149
  %158 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %157, i32 0, i32 0, !dbg !3149
  %159 = extractvalue { i64, i64 } %156, 0, !dbg !3149
  store i64 %159, i64* %158, align 8, !dbg !3149
  %160 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %157, i32 0, i32 1, !dbg !3149
  %161 = extractvalue { i64, i64 } %156, 1, !dbg !3149
  store i64 %161, i64* %160, align 8, !dbg !3149
  %162 = bitcast %struct.timeval* %148 to i8*, !dbg !3149
  %163 = bitcast %struct.timeval* %4 to i8*, !dbg !3149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 16, i32 8, i1 false), !dbg !3150
  br label %164, !dbg !3152

; <label>:164:                                    ; preds = %146, %140
  %165 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3153
  call void @send_instance_notifies(%struct._vrrp_t* %165), !dbg !3154
  %166 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !3155
  %167 = getelementptr inbounds %struct._data, %struct._data* %166, i32 0, i32 20, !dbg !3157
  %168 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %167, i32 0, i32 1, !dbg !3158
  %169 = load %struct._vrrp_t*, %struct._vrrp_t** %168, align 8, !dbg !3158
  %170 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3159
  %171 = icmp eq %struct._vrrp_t* %169, %170, !dbg !3160
  br i1 %171, label %172, label %175, !dbg !3161

; <label>:172:                                    ; preds = %164
  %173 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !3162
  %174 = getelementptr inbounds %struct._data, %struct._data* %173, i32 0, i32 20, !dbg !3163
  call void @ipvs_syncd_master(%struct.lvs_syncd_config* %174), !dbg !3164
  br label %175, !dbg !3164

; <label>:175:                                    ; preds = %172, %164
  %176 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !3165
  %177 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %176, i32 0, i32 24, !dbg !3166
  %178 = call { i64, i64 } @timer_now(), !dbg !3167
  %179 = bitcast %struct.timeval* %5 to { i64, i64 }*, !dbg !3167
  %180 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %179, i32 0, i32 0, !dbg !3167
  %181 = extractvalue { i64, i64 } %178, 0, !dbg !3167
  store i64 %181, i64* %180, align 8, !dbg !3167
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %179, i32 0, i32 1, !dbg !3167
  %183 = extractvalue { i64, i64 } %178, 1, !dbg !3167
  store i64 %183, i64* %182, align 8, !dbg !3167
  %184 = bitcast %struct.timeval* %177 to i8*, !dbg !3167
  %185 = bitcast %struct.timeval* %5 to i8*, !dbg !3167
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %184, i8* %185, i64 16, i32 8, i1 false), !dbg !3168
  ret void, !dbg !3170
}

declare %struct._thread* @thread_add_timer(%struct._thread_master*, i32 (%struct._thread*)*, i8*, i64) #3

declare i32 @vrrp_gratuitous_arp_thread(%struct._thread*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @timer_add_now(i64, i64) #2 !dbg !3171 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = bitcast %struct.timeval* %4 to { i64, i64 }*
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval* %4, metadata !3174, metadata !793), !dbg !3175
  br label %8, !dbg !3176, !llvm.loop !3177

; <label>:8:                                      ; preds = %2
  %9 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @time_now, i32 0, i32 0), align 8, !dbg !3178
  %10 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 0, !dbg !3178
  %11 = load i64, i64* %10, align 8, !dbg !3178
  %12 = add nsw i64 %9, %11, !dbg !3181
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 0, !dbg !3178
  store i64 %12, i64* %13, align 8, !dbg !3181
  %14 = load i64, i64* getelementptr inbounds (%struct.timeval, %struct.timeval* @time_now, i32 0, i32 1), align 8, !dbg !3178
  %15 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 1, !dbg !3178
  %16 = load i64, i64* %15, align 8, !dbg !3178
  %17 = add nsw i64 %14, %16, !dbg !3182
  %18 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 1, !dbg !3178
  store i64 %17, i64* %18, align 8, !dbg !3182
  %19 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 1, !dbg !3178
  %20 = load i64, i64* %19, align 8, !dbg !3178
  %21 = icmp sge i64 %20, 1000000, !dbg !3182
  br i1 %21, label %22, label %29, !dbg !3183

; <label>:22:                                     ; preds = %8
  %23 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 0, !dbg !3184
  %24 = load i64, i64* %23, align 8, !dbg !3188
  %25 = add nsw i64 %24, 1, !dbg !3188
  store i64 %25, i64* %23, align 8, !dbg !3188
  %26 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 1, !dbg !3184
  %27 = load i64, i64* %26, align 8, !dbg !3189
  %28 = sub nsw i64 %27, 1000000, !dbg !3189
  store i64 %28, i64* %26, align 8, !dbg !3189
  br label %29, !dbg !3190

; <label>:29:                                     ; preds = %22, %8
  br label %30, !dbg !3191

; <label>:30:                                     ; preds = %29
  %31 = bitcast %struct.timeval* %3 to i8*, !dbg !3193
  %32 = bitcast %struct.timeval* %4 to i8*, !dbg !3193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 16, i32 8, i1 false), !dbg !3193
  %33 = bitcast %struct.timeval* %3 to { i64, i64 }*, !dbg !3194
  %34 = load { i64, i64 }, { i64, i64 }* %33, align 8, !dbg !3194
  ret { i64, i64 } %34, !dbg !3194
}

; Function Attrs: nounwind uwtable
define zeroext i1 @vrrp_state_master_rx(%struct._vrrp_t*, i8*, i64) #0 !dbg !3195 {
  %4 = alloca i1, align 1
  %5 = alloca %struct._vrrp_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct._vrrphdr*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct._ipsec_ah*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct._vrrp_t*, align 8
  %15 = alloca %struct._element*, align 8
  %16 = alloca %struct.timeval, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %5, metadata !3198, metadata !793), !dbg !3199
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3200, metadata !793), !dbg !3201
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !3202, metadata !793), !dbg !3203
  call void @llvm.dbg.declare(metadata %struct._vrrphdr** %8, metadata !3204, metadata !793), !dbg !3205
  call void @llvm.dbg.declare(metadata i64* %9, metadata !3206, metadata !793), !dbg !3207
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3208, metadata !793), !dbg !3209
  store i32 0, i32* %10, align 4, !dbg !3209
  call void @llvm.dbg.declare(metadata %struct._ipsec_ah** %11, metadata !3210, metadata !793), !dbg !3211
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3212, metadata !793), !dbg !3213
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3214, metadata !793), !dbg !3215
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %14, metadata !3216, metadata !793), !dbg !3217
  call void @llvm.dbg.declare(metadata %struct._element** %15, metadata !3218, metadata !793), !dbg !3219
  %17 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3220
  %18 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %17, i32 0, i32 56, !dbg !3222
  %19 = load i32, i32* %18, align 4, !dbg !3222
  %20 = icmp eq i32 %19, 3, !dbg !3223
  br i1 %20, label %21, label %74, !dbg !3224

; <label>:21:                                     ; preds = %3
  %22 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3225
  %23 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %22, i32 0, i32 47, !dbg !3227
  %24 = load i32, i32* %23, align 8, !dbg !3227
  %25 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3228
  %26 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %25, i32 0, i32 48, !dbg !3229
  store i32 %24, i32* %26, align 4, !dbg !3230
  %27 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3231
  %28 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %27, i32 0, i32 48, !dbg !3232
  %29 = load i32, i32* %28, align 4, !dbg !3232
  %30 = mul i32 3, %29, !dbg !3233
  %31 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3234
  %32 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %31, i32 0, i32 60, !dbg !3235
  %33 = load i32, i32* %32, align 4, !dbg !3235
  %34 = icmp eq i32 %33, 3, !dbg !3236
  br i1 %34, label %35, label %48, !dbg !3237

; <label>:35:                                     ; preds = %21
  %36 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3238
  %37 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %36, i32 0, i32 38, !dbg !3240
  %38 = load i8, i8* %37, align 2, !dbg !3240
  %39 = zext i8 %38 to i32, !dbg !3241
  %40 = sub i32 256, %39, !dbg !3242
  %41 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3243
  %42 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %41, i32 0, i32 48, !dbg !3244
  %43 = load i32, i32* %42, align 4, !dbg !3244
  %44 = udiv i32 %43, 10000, !dbg !3245
  %45 = mul i32 %40, %44, !dbg !3246
  %46 = mul i32 %45, 625, !dbg !3247
  %47 = udiv i32 %46, 16, !dbg !3248
  br label %56, !dbg !3249

; <label>:48:                                     ; preds = %21
  %49 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3250
  %50 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %49, i32 0, i32 38, !dbg !3252
  %51 = load i8, i8* %50, align 2, !dbg !3252
  %52 = zext i8 %51 to i32, !dbg !3253
  %53 = sub i32 256, %52, !dbg !3254
  %54 = mul i32 %53, 1000000, !dbg !3255
  %55 = udiv i32 %54, 256, !dbg !3256
  br label %56, !dbg !3257

; <label>:56:                                     ; preds = %48, %35
  %57 = phi i32 [ %47, %35 ], [ %55, %48 ], !dbg !3258
  %58 = add i32 %30, %57, !dbg !3260
  %59 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3261
  %60 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %59, i32 0, i32 70, !dbg !3262
  store i32 %58, i32* %60, align 8, !dbg !3263
  %61 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3264
  %62 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %61, i32 0, i32 55, !dbg !3265
  store i32 3, i32* %62, align 8, !dbg !3266
  %63 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3267
  call void @send_instance_notifies(%struct._vrrp_t* %63), !dbg !3268
  %64 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3269
  %65 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %64, i32 0, i32 24, !dbg !3270
  %66 = call { i64, i64 } @timer_now(), !dbg !3271
  %67 = bitcast %struct.timeval* %16 to { i64, i64 }*, !dbg !3271
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %67, i32 0, i32 0, !dbg !3271
  %69 = extractvalue { i64, i64 } %66, 0, !dbg !3271
  store i64 %69, i64* %68, align 8, !dbg !3271
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %67, i32 0, i32 1, !dbg !3271
  %71 = extractvalue { i64, i64 } %66, 1, !dbg !3271
  store i64 %71, i64* %70, align 8, !dbg !3271
  %72 = bitcast %struct.timeval* %65 to i8*, !dbg !3271
  %73 = bitcast %struct.timeval* %16 to i8*, !dbg !3271
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 16, i32 8, i1 false), !dbg !3272
  store i1 true, i1* %4, align 1, !dbg !3273
  br label %500, !dbg !3273

; <label>:74:                                     ; preds = %3
  %75 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3274
  %76 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %75, i32 0, i32 0, !dbg !3275
  %77 = load i16, i16* %76, align 8, !dbg !3275
  %78 = load i8*, i8** %6, align 8, !dbg !3276
  %79 = call %struct._vrrphdr* @vrrp_get_header(i16 zeroext %77, i8* %78, i32* %10), !dbg !3277
  store %struct._vrrphdr* %79, %struct._vrrphdr** %8, align 8, !dbg !3278
  %80 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3279
  %81 = load i8*, i8** %6, align 8, !dbg !3280
  %82 = load i64, i64* %7, align 8, !dbg !3281
  %83 = call i32 @vrrp_check_packet(%struct._vrrp_t* %80, i8* %81, i64 %82, i1 zeroext true), !dbg !3282
  %84 = sext i32 %83 to i64, !dbg !3282
  store i64 %84, i64* %9, align 8, !dbg !3283
  %85 = load i64, i64* %9, align 8, !dbg !3284
  %86 = icmp ne i64 %85, 0, !dbg !3286
  br i1 %86, label %87, label %88, !dbg !3287

; <label>:87:                                     ; preds = %74
  store i1 false, i1* %4, align 1, !dbg !3288
  br label %500, !dbg !3288

; <label>:88:                                     ; preds = %74
  %89 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3289
  %90 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %89, i32 0, i32 19, !dbg !3290
  %91 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3291
  %92 = call i32 @vrrp_saddr_cmp(%struct.sockaddr_storage* %90, %struct._vrrp_t* %91), !dbg !3292
  store i32 %92, i32* %13, align 4, !dbg !3293
  %93 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3294
  %94 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %93, i32 0, i32 2, !dbg !3296
  %95 = load i8, i8* %94, align 2, !dbg !3296
  %96 = zext i8 %95 to i32, !dbg !3294
  %97 = icmp eq i32 %96, 0, !dbg !3297
  br i1 %97, label %126, label %98, !dbg !3298

; <label>:98:                                     ; preds = %88
  %99 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3299
  %100 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %99, i32 0, i32 35, !dbg !3300
  %101 = load i32, i32* %100, align 8, !dbg !3300
  %102 = icmp ne i32 %101, 0, !dbg !3299
  br i1 %102, label %103, label %141, !dbg !3301

; <label>:103:                                    ; preds = %98
  %104 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3302
  %105 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %104, i32 0, i32 2, !dbg !3303
  %106 = load i8, i8* %105, align 2, !dbg !3303
  %107 = zext i8 %106 to i32, !dbg !3302
  %108 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3304
  %109 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %108, i32 0, i32 38, !dbg !3305
  %110 = load i8, i8* %109, align 2, !dbg !3305
  %111 = zext i8 %110 to i32, !dbg !3304
  %112 = icmp sgt i32 %107, %111, !dbg !3306
  br i1 %112, label %126, label %113, !dbg !3307

; <label>:113:                                    ; preds = %103
  %114 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3308
  %115 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %114, i32 0, i32 2, !dbg !3309
  %116 = load i8, i8* %115, align 2, !dbg !3309
  %117 = zext i8 %116 to i32, !dbg !3308
  %118 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3310
  %119 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %118, i32 0, i32 38, !dbg !3311
  %120 = load i8, i8* %119, align 2, !dbg !3311
  %121 = zext i8 %120 to i32, !dbg !3310
  %122 = icmp eq i32 %117, %121, !dbg !3312
  br i1 %122, label %123, label %141, !dbg !3313

; <label>:123:                                    ; preds = %113
  %124 = load i32, i32* %13, align 4, !dbg !3314
  %125 = icmp sgt i32 %124, 0, !dbg !3316
  br i1 %125, label %126, label %141, !dbg !3317

; <label>:126:                                    ; preds = %123, %103, %88
  %127 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3319
  %128 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %127, i32 0, i32 1, !dbg !3321
  %129 = load i8*, i8** %128, align 8, !dbg !3321
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.15, i32 0, i32 0), i8* %129), !dbg !3322
  %130 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3323
  %131 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3324
  %132 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %131, i32 0, i32 38, !dbg !3325
  %133 = load i8, i8* %132, align 2, !dbg !3325
  call void @vrrp_send_adv(%struct._vrrp_t* %130, i8 zeroext %133), !dbg !3326
  %134 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3327
  %135 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %134, i32 0, i32 2, !dbg !3329
  %136 = load i8, i8* %135, align 2, !dbg !3329
  %137 = zext i8 %136 to i32, !dbg !3327
  %138 = icmp eq i32 %137, 0, !dbg !3330
  br i1 %138, label %139, label %140, !dbg !3331

; <label>:139:                                    ; preds = %126
  store i1 false, i1* %4, align 1, !dbg !3332
  br label %500, !dbg !3332

; <label>:140:                                    ; preds = %126
  br label %141, !dbg !3333

; <label>:141:                                    ; preds = %140, %123, %113, %98
  %142 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3334
  %143 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %142, i32 0, i32 2, !dbg !3336
  %144 = load i8, i8* %143, align 2, !dbg !3336
  %145 = zext i8 %144 to i32, !dbg !3334
  %146 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3337
  %147 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %146, i32 0, i32 38, !dbg !3338
  %148 = load i8, i8* %147, align 2, !dbg !3338
  %149 = zext i8 %148 to i32, !dbg !3337
  %150 = icmp eq i32 %145, %149, !dbg !3339
  br i1 %150, label %151, label %174, !dbg !3340

; <label>:151:                                    ; preds = %141
  %152 = load i32, i32* %13, align 4, !dbg !3341
  %153 = icmp eq i32 %152, 0, !dbg !3344
  br i1 %153, label %154, label %158, !dbg !3345

; <label>:154:                                    ; preds = %151
  %155 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3346
  %156 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %155, i32 0, i32 1, !dbg !3347
  %157 = load i8*, i8** %156, align 8, !dbg !3347
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.16, i32 0, i32 0), i8* %157), !dbg !3348
  br label %173, !dbg !3348

; <label>:158:                                    ; preds = %151
  %159 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3349
  %160 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %159, i32 0, i32 38, !dbg !3351
  %161 = load i8, i8* %160, align 2, !dbg !3351
  %162 = zext i8 %161 to i32, !dbg !3349
  %163 = icmp eq i32 %162, 255, !dbg !3352
  br i1 %163, label %164, label %172, !dbg !3353

; <label>:164:                                    ; preds = %158
  %165 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3354
  %166 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %165, i32 0, i32 1, !dbg !3356
  %167 = load i8*, i8** %166, align 8, !dbg !3356
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.17, i32 0, i32 0), i8* %167), !dbg !3357
  %168 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3358
  %169 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %168, i32 0, i32 38, !dbg !3359
  store i8 -2, i8* %169, align 2, !dbg !3360
  %170 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3361
  %171 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %170, i32 0, i32 37, !dbg !3362
  store i8 -2, i8* %171, align 1, !dbg !3363
  br label %172, !dbg !3364

; <label>:172:                                    ; preds = %164, %158
  br label %173

; <label>:173:                                    ; preds = %172, %154
  br label %174, !dbg !3365

; <label>:174:                                    ; preds = %173, %141
  %175 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3366
  %176 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %175, i32 0, i32 2, !dbg !3368
  %177 = load i8, i8* %176, align 2, !dbg !3368
  %178 = zext i8 %177 to i32, !dbg !3366
  %179 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3369
  %180 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %179, i32 0, i32 38, !dbg !3370
  %181 = load i8, i8* %180, align 2, !dbg !3370
  %182 = zext i8 %181 to i32, !dbg !3369
  %183 = icmp slt i32 %178, %182, !dbg !3371
  br i1 %183, label %197, label %184, !dbg !3372

; <label>:184:                                    ; preds = %174
  %185 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3373
  %186 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %185, i32 0, i32 2, !dbg !3374
  %187 = load i8, i8* %186, align 2, !dbg !3374
  %188 = zext i8 %187 to i32, !dbg !3373
  %189 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3375
  %190 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %189, i32 0, i32 38, !dbg !3376
  %191 = load i8, i8* %190, align 2, !dbg !3376
  %192 = zext i8 %191 to i32, !dbg !3375
  %193 = icmp eq i32 %188, %192, !dbg !3377
  br i1 %193, label %194, label %352, !dbg !3378

; <label>:194:                                    ; preds = %184
  %195 = load i32, i32* %13, align 4, !dbg !3379
  %196 = icmp slt i32 %195, 0, !dbg !3380
  br i1 %196, label %197, label %352, !dbg !3381

; <label>:197:                                    ; preds = %194, %174
  %198 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3382
  %199 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %198, i32 0, i32 1, !dbg !3384
  %200 = load i8*, i8** %199, align 8, !dbg !3384
  %201 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3385
  %202 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %201, i32 0, i32 19, !dbg !3386
  %203 = call i8* @inet_sockaddrtos(%struct.sockaddr_storage* %202), !dbg !3387
  %204 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3388
  %205 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %204, i32 0, i32 2, !dbg !3389
  %206 = load i8, i8* %205, align 2, !dbg !3389
  %207 = zext i8 %206 to i32, !dbg !3388
  %208 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3390
  %209 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %208, i32 0, i32 38, !dbg !3391
  %210 = load i8, i8* %209, align 2, !dbg !3391
  %211 = zext i8 %210 to i32, !dbg !3390
  %212 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3392
  %213 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %212, i32 0, i32 34, !dbg !3393
  %214 = load i32, i32* %213, align 4, !dbg !3393
  %215 = icmp ne i32 %214, 0, !dbg !3394
  %216 = xor i1 %215, true, !dbg !3394
  %217 = select i1 %216, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0), !dbg !3394
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.18, i32 0, i32 0), i8* %200, i8* %203, i32 %207, i32 %211, i8* %217), !dbg !3395
  %218 = load i32, i32* %10, align 4, !dbg !3396
  %219 = icmp eq i32 %218, 51, !dbg !3398
  br i1 %219, label %220, label %238, !dbg !3399

; <label>:220:                                    ; preds = %197
  %221 = load i8*, i8** %6, align 8, !dbg !3400
  %222 = getelementptr inbounds i8, i8* %221, i64 20, !dbg !3402
  %223 = bitcast i8* %222 to %struct._ipsec_ah*, !dbg !3403
  store %struct._ipsec_ah* %223, %struct._ipsec_ah** %11, align 8, !dbg !3404
  %224 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3405
  %225 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %224, i32 0, i32 1, !dbg !3406
  %226 = load i8*, i8** %225, align 8, !dbg !3406
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.21, i32 0, i32 0), i8* %226), !dbg !3407
  %227 = load %struct._ipsec_ah*, %struct._ipsec_ah** %11, align 8, !dbg !3408
  %228 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %227, i32 0, i32 4, !dbg !3409
  %229 = load i32, i32* %228, align 4, !dbg !3409
  %230 = call i32 @ntohl(i32 %229) #1, !dbg !3410
  %231 = add i32 %230, 1, !dbg !3411
  %232 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3412
  %233 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %232, i32 0, i32 77, !dbg !3413
  %234 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %233, i32 0, i32 1, !dbg !3414
  store i32 %231, i32* %234, align 4, !dbg !3415
  %235 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3416
  %236 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %235, i32 0, i32 77, !dbg !3417
  %237 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %236, i32 0, i32 0, !dbg !3418
  store i8 0, i8* %237, align 8, !dbg !3419
  br label %238, !dbg !3420

; <label>:238:                                    ; preds = %220, %197
  %239 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3421
  %240 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %239, i32 0, i32 34, !dbg !3423
  %241 = load i32, i32* %240, align 4, !dbg !3423
  %242 = icmp ne i32 %241, 0, !dbg !3421
  br i1 %242, label %248, label %243, !dbg !3424

; <label>:243:                                    ; preds = %238
  %244 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3425
  %245 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3426
  %246 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %245, i32 0, i32 38, !dbg !3427
  %247 = load i8, i8* %246, align 2, !dbg !3427
  call void @vrrp_send_adv(%struct._vrrp_t* %244, i8 zeroext %247), !dbg !3428
  br label %248, !dbg !3428

; <label>:248:                                    ; preds = %243, %238
  %249 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3429
  %250 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %249, i32 0, i32 33, !dbg !3431
  %251 = load i32, i32* %250, align 8, !dbg !3431
  %252 = icmp ne i32 %251, 0, !dbg !3429
  br i1 %252, label %253, label %350, !dbg !3432

; <label>:253:                                    ; preds = %248
  %254 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3433
  %255 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3435
  %256 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %255, i32 0, i32 33, !dbg !3436
  %257 = load i32, i32* %256, align 8, !dbg !3436
  call void @vrrp_send_link_update(%struct._vrrp_t* %254, i32 %257), !dbg !3437
  %258 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3438
  %259 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %258, i32 0, i32 30, !dbg !3440
  %260 = load i32, i32* %259, align 8, !dbg !3440
  %261 = icmp ne i32 %260, 0, !dbg !3438
  br i1 %261, label %262, label %271, !dbg !3441

; <label>:262:                                    ; preds = %253
  %263 = load %struct._thread_master*, %struct._thread_master** @master, align 8, !dbg !3442
  %264 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3443
  %265 = bitcast %struct._vrrp_t* %264 to i8*, !dbg !3443
  %266 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3444
  %267 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %266, i32 0, i32 30, !dbg !3445
  %268 = load i32, i32* %267, align 8, !dbg !3445
  %269 = zext i32 %268 to i64, !dbg !3444
  %270 = call %struct._thread* @thread_add_timer(%struct._thread_master* %263, i32 (%struct._thread*)* @vrrp_lower_prio_gratuitous_arp_thread, i8* %265, i64 %269), !dbg !3446
  br label %271, !dbg !3446

; <label>:271:                                    ; preds = %262, %253
  %272 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3447
  %273 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %272, i32 0, i32 2, !dbg !3449
  %274 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %273, align 8, !dbg !3449
  %275 = icmp ne %struct._vrrp_sgroup* %274, null, !dbg !3447
  br i1 %275, label %276, label %349, !dbg !3450

; <label>:276:                                    ; preds = %271
  %277 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3451
  %278 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %277, i32 0, i32 2, !dbg !3454
  %279 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %278, align 8, !dbg !3454
  %280 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %279, i32 0, i32 2, !dbg !3455
  %281 = load %struct._list*, %struct._list** %280, align 8, !dbg !3455
  %282 = icmp ne %struct._list* %281, null, !dbg !3456
  br i1 %282, label %283, label %301, !dbg !3456

; <label>:283:                                    ; preds = %276
  %284 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3457
  %285 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %284, i32 0, i32 2, !dbg !3459
  %286 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %285, align 8, !dbg !3459
  %287 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %286, i32 0, i32 2, !dbg !3460
  %288 = load %struct._list*, %struct._list** %287, align 8, !dbg !3460
  %289 = icmp ne %struct._list* %288, null, !dbg !3461
  br i1 %289, label %291, label %290, !dbg !3462

; <label>:290:                                    ; preds = %283
  br label %299, !dbg !3463

; <label>:291:                                    ; preds = %283
  %292 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3465
  %293 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %292, i32 0, i32 2, !dbg !3467
  %294 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %293, align 8, !dbg !3467
  %295 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %294, i32 0, i32 2, !dbg !3468
  %296 = load %struct._list*, %struct._list** %295, align 8, !dbg !3468
  %297 = getelementptr inbounds %struct._list, %struct._list* %296, i32 0, i32 0, !dbg !3469
  %298 = load %struct._element*, %struct._element** %297, align 8, !dbg !3469
  br label %299, !dbg !3470

; <label>:299:                                    ; preds = %291, %290
  %300 = phi %struct._element* [ null, %290 ], [ %298, %291 ], !dbg !3471
  br label %302, !dbg !3473

; <label>:301:                                    ; preds = %276
  br label %302, !dbg !3474

; <label>:302:                                    ; preds = %301, %299
  %303 = phi %struct._element* [ %300, %299 ], [ null, %301 ], !dbg !3476
  store %struct._element* %303, %struct._element** %15, align 8, !dbg !3478
  br label %304, !dbg !3479

; <label>:304:                                    ; preds = %344, %302
  %305 = load %struct._element*, %struct._element** %15, align 8, !dbg !3480
  %306 = icmp ne %struct._element* %305, null, !dbg !3483
  br i1 %306, label %307, label %312, !dbg !3484

; <label>:307:                                    ; preds = %304
  %308 = load %struct._element*, %struct._element** %15, align 8, !dbg !3485
  %309 = getelementptr inbounds %struct._element, %struct._element* %308, i32 0, i32 2, !dbg !3487
  %310 = load i8*, i8** %309, align 8, !dbg !3487
  %311 = bitcast i8* %310 to %struct._vrrp_t*, !dbg !3488
  store %struct._vrrp_t* %311, %struct._vrrp_t** %14, align 8, !dbg !3489
  br label %312

; <label>:312:                                    ; preds = %307, %304
  %313 = phi i1 [ false, %304 ], [ true, %307 ]
  br i1 %313, label %314, label %348, !dbg !3490

; <label>:314:                                    ; preds = %312
  %315 = load %struct._vrrp_t*, %struct._vrrp_t** %14, align 8, !dbg !3492
  %316 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3495
  %317 = icmp eq %struct._vrrp_t* %315, %316, !dbg !3496
  br i1 %317, label %318, label %319, !dbg !3497

; <label>:318:                                    ; preds = %314
  br label %344, !dbg !3498

; <label>:319:                                    ; preds = %314
  %320 = load %struct._vrrp_t*, %struct._vrrp_t** %14, align 8, !dbg !3499
  %321 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %320, i32 0, i32 33, !dbg !3501
  %322 = load i32, i32* %321, align 8, !dbg !3501
  %323 = icmp ne i32 %322, 0, !dbg !3499
  br i1 %323, label %325, label %324, !dbg !3502

; <label>:324:                                    ; preds = %319
  br label %344, !dbg !3503

; <label>:325:                                    ; preds = %319
  %326 = load %struct._vrrp_t*, %struct._vrrp_t** %14, align 8, !dbg !3504
  %327 = load %struct._vrrp_t*, %struct._vrrp_t** %14, align 8, !dbg !3505
  %328 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %327, i32 0, i32 33, !dbg !3506
  %329 = load i32, i32* %328, align 8, !dbg !3506
  call void @vrrp_send_link_update(%struct._vrrp_t* %326, i32 %329), !dbg !3507
  %330 = load %struct._vrrp_t*, %struct._vrrp_t** %14, align 8, !dbg !3508
  %331 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %330, i32 0, i32 30, !dbg !3510
  %332 = load i32, i32* %331, align 8, !dbg !3510
  %333 = icmp ne i32 %332, 0, !dbg !3508
  br i1 %333, label %334, label %343, !dbg !3511

; <label>:334:                                    ; preds = %325
  %335 = load %struct._thread_master*, %struct._thread_master** @master, align 8, !dbg !3512
  %336 = load %struct._vrrp_t*, %struct._vrrp_t** %14, align 8, !dbg !3513
  %337 = bitcast %struct._vrrp_t* %336 to i8*, !dbg !3513
  %338 = load %struct._vrrp_t*, %struct._vrrp_t** %14, align 8, !dbg !3514
  %339 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %338, i32 0, i32 30, !dbg !3515
  %340 = load i32, i32* %339, align 8, !dbg !3515
  %341 = zext i32 %340 to i64, !dbg !3514
  %342 = call %struct._thread* @thread_add_timer(%struct._thread_master* %335, i32 (%struct._thread*)* @vrrp_lower_prio_gratuitous_arp_thread, i8* %337, i64 %341), !dbg !3516
  br label %343, !dbg !3516

; <label>:343:                                    ; preds = %334, %325
  br label %344, !dbg !3517

; <label>:344:                                    ; preds = %343, %324, %318
  %345 = load %struct._element*, %struct._element** %15, align 8, !dbg !3518
  %346 = getelementptr inbounds %struct._element, %struct._element* %345, i32 0, i32 0, !dbg !3520
  %347 = load %struct._element*, %struct._element** %346, align 8, !dbg !3520
  store %struct._element* %347, %struct._element** %15, align 8, !dbg !3521
  br label %304, !dbg !3522, !llvm.loop !3523

; <label>:348:                                    ; preds = %312
  br label %349, !dbg !3525

; <label>:349:                                    ; preds = %348, %271
  br label %350, !dbg !3526

; <label>:350:                                    ; preds = %349, %248
  %351 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3527
  call void @send_event_notify(%struct._vrrp_t* %351, i32 1000), !dbg !3528
  store i1 false, i1* %4, align 1, !dbg !3529
  br label %500, !dbg !3529

; <label>:352:                                    ; preds = %194, %184
  %353 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3530
  %354 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %353, i32 0, i32 2, !dbg !3532
  %355 = load i8, i8* %354, align 2, !dbg !3532
  %356 = zext i8 %355 to i32, !dbg !3530
  %357 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3533
  %358 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %357, i32 0, i32 38, !dbg !3534
  %359 = load i8, i8* %358, align 2, !dbg !3534
  %360 = zext i8 %359 to i32, !dbg !3533
  %361 = icmp sgt i32 %356, %360, !dbg !3535
  br i1 %361, label %375, label %362, !dbg !3536

; <label>:362:                                    ; preds = %352
  %363 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3537
  %364 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %363, i32 0, i32 2, !dbg !3538
  %365 = load i8, i8* %364, align 2, !dbg !3538
  %366 = zext i8 %365 to i32, !dbg !3537
  %367 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3539
  %368 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %367, i32 0, i32 38, !dbg !3540
  %369 = load i8, i8* %368, align 2, !dbg !3540
  %370 = zext i8 %369 to i32, !dbg !3539
  %371 = icmp eq i32 %366, %370, !dbg !3541
  br i1 %371, label %372, label %499, !dbg !3542

; <label>:372:                                    ; preds = %362
  %373 = load i32, i32* %13, align 4, !dbg !3543
  %374 = icmp sgt i32 %373, 0, !dbg !3545
  br i1 %374, label %375, label %499, !dbg !3546

; <label>:375:                                    ; preds = %372, %352
  %376 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3547
  %377 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %376, i32 0, i32 2, !dbg !3550
  %378 = load i8, i8* %377, align 2, !dbg !3550
  %379 = zext i8 %378 to i32, !dbg !3547
  %380 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3551
  %381 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %380, i32 0, i32 38, !dbg !3552
  %382 = load i8, i8* %381, align 2, !dbg !3552
  %383 = zext i8 %382 to i32, !dbg !3551
  %384 = icmp sgt i32 %379, %383, !dbg !3553
  br i1 %384, label %385, label %400, !dbg !3554

; <label>:385:                                    ; preds = %375
  %386 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3555
  %387 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %386, i32 0, i32 1, !dbg !3556
  %388 = load i8*, i8** %387, align 8, !dbg !3556
  %389 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3557
  %390 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %389, i32 0, i32 19, !dbg !3558
  %391 = call i8* @inet_sockaddrtos(%struct.sockaddr_storage* %390), !dbg !3559
  %392 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3560
  %393 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %392, i32 0, i32 2, !dbg !3561
  %394 = load i8, i8* %393, align 2, !dbg !3561
  %395 = zext i8 %394 to i32, !dbg !3560
  %396 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3562
  %397 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %396, i32 0, i32 38, !dbg !3563
  %398 = load i8, i8* %397, align 2, !dbg !3563
  %399 = zext i8 %398 to i32, !dbg !3562
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.22, i32 0, i32 0), i8* %388, i8* %391, i32 %395, i32 %399), !dbg !3564
  br label %411, !dbg !3564

; <label>:400:                                    ; preds = %375
  %401 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3565
  %402 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %401, i32 0, i32 1, !dbg !3566
  %403 = load i8*, i8** %402, align 8, !dbg !3566
  %404 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3567
  %405 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %404, i32 0, i32 19, !dbg !3568
  %406 = call i8* @inet_sockaddrtos(%struct.sockaddr_storage* %405), !dbg !3569
  %407 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3570
  %408 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %407, i32 0, i32 2, !dbg !3571
  %409 = load i8, i8* %408, align 2, !dbg !3571
  %410 = zext i8 %409 to i32, !dbg !3570
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.23, i32 0, i32 0), i8* %403, i8* %406, i32 %410), !dbg !3572
  br label %411

; <label>:411:                                    ; preds = %400, %385
  %412 = load i32, i32* %10, align 4, !dbg !3573
  %413 = icmp eq i32 %412, 51, !dbg !3575
  br i1 %413, label %414, label %421, !dbg !3576

; <label>:414:                                    ; preds = %411
  %415 = load i8*, i8** %6, align 8, !dbg !3577
  %416 = getelementptr inbounds i8, i8* %415, i64 20, !dbg !3579
  %417 = bitcast i8* %416 to %struct._ipsec_ah*, !dbg !3580
  store %struct._ipsec_ah* %417, %struct._ipsec_ah** %11, align 8, !dbg !3581
  %418 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3582
  %419 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %418, i32 0, i32 77, !dbg !3583
  %420 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %419, i32 0, i32 0, !dbg !3584
  store i8 0, i8* %420, align 8, !dbg !3585
  br label %421, !dbg !3586

; <label>:421:                                    ; preds = %414, %411
  %422 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3587
  %423 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %422, i32 0, i32 60, !dbg !3589
  %424 = load i32, i32* %423, align 4, !dbg !3589
  %425 = icmp eq i32 %424, 3, !dbg !3590
  br i1 %425, label %426, label %455, !dbg !3591

; <label>:426:                                    ; preds = %421
  %427 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3592
  %428 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %427, i32 0, i32 4, !dbg !3594
  %429 = bitcast %union.anon.2* %428 to %struct.anon.4*, !dbg !3594
  %430 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %429, i32 0, i32 0, !dbg !3595
  %431 = load i16, i16* %430, align 2, !dbg !3595
  %432 = call zeroext i16 @ntohs(i16 zeroext %431) #1, !dbg !3596
  %433 = zext i16 %432 to i32, !dbg !3596
  %434 = and i32 %433, 4095, !dbg !3597
  %435 = mul i32 %434, 10000, !dbg !3598
  store i32 %435, i32* %12, align 4, !dbg !3599
  %436 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3600
  %437 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %436, i32 0, i32 48, !dbg !3602
  %438 = load i32, i32* %437, align 4, !dbg !3602
  %439 = load i32, i32* %12, align 4, !dbg !3603
  %440 = icmp ne i32 %438, %439, !dbg !3604
  br i1 %440, label %441, label %454, !dbg !3605

; <label>:441:                                    ; preds = %426
  %442 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3606
  %443 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %442, i32 0, i32 1, !dbg !3608
  %444 = load i8*, i8** %443, align 8, !dbg !3608
  %445 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3609
  %446 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %445, i32 0, i32 48, !dbg !3610
  %447 = load i32, i32* %446, align 4, !dbg !3610
  %448 = udiv i32 %447, 1000, !dbg !3611
  %449 = load i32, i32* %12, align 4, !dbg !3612
  %450 = udiv i32 %449, 1000, !dbg !3613
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.24, i32 0, i32 0), i8* %444, i32 %448, i32 %450), !dbg !3614
  %451 = load i32, i32* %12, align 4, !dbg !3615
  %452 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3616
  %453 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %452, i32 0, i32 48, !dbg !3617
  store i32 %451, i32* %453, align 4, !dbg !3618
  br label %454, !dbg !3619

; <label>:454:                                    ; preds = %441, %426
  br label %455, !dbg !3620

; <label>:455:                                    ; preds = %454, %421
  %456 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3621
  %457 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %456, i32 0, i32 48, !dbg !3622
  %458 = load i32, i32* %457, align 4, !dbg !3622
  %459 = mul i32 3, %458, !dbg !3623
  %460 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3624
  %461 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %460, i32 0, i32 60, !dbg !3625
  %462 = load i32, i32* %461, align 4, !dbg !3625
  %463 = icmp eq i32 %462, 3, !dbg !3626
  br i1 %463, label %464, label %477, !dbg !3627

; <label>:464:                                    ; preds = %455
  %465 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3628
  %466 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %465, i32 0, i32 38, !dbg !3630
  %467 = load i8, i8* %466, align 2, !dbg !3630
  %468 = zext i8 %467 to i32, !dbg !3631
  %469 = sub i32 256, %468, !dbg !3632
  %470 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3633
  %471 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %470, i32 0, i32 48, !dbg !3634
  %472 = load i32, i32* %471, align 4, !dbg !3634
  %473 = udiv i32 %472, 10000, !dbg !3635
  %474 = mul i32 %469, %473, !dbg !3636
  %475 = mul i32 %474, 625, !dbg !3637
  %476 = udiv i32 %475, 16, !dbg !3638
  br label %485, !dbg !3639

; <label>:477:                                    ; preds = %455
  %478 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3640
  %479 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %478, i32 0, i32 38, !dbg !3642
  %480 = load i8, i8* %479, align 2, !dbg !3642
  %481 = zext i8 %480 to i32, !dbg !3643
  %482 = sub i32 256, %481, !dbg !3644
  %483 = mul i32 %482, 1000000, !dbg !3645
  %484 = udiv i32 %483, 256, !dbg !3646
  br label %485, !dbg !3647

; <label>:485:                                    ; preds = %477, %464
  %486 = phi i32 [ %476, %464 ], [ %484, %477 ], !dbg !3648
  %487 = add i32 %459, %486, !dbg !3650
  %488 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3651
  %489 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %488, i32 0, i32 70, !dbg !3652
  store i32 %487, i32* %489, align 8, !dbg !3653
  %490 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3654
  %491 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %490, i32 0, i32 2, !dbg !3655
  %492 = load i8, i8* %491, align 2, !dbg !3655
  %493 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3656
  %494 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %493, i32 0, i32 23, !dbg !3657
  store i8 %492, i8* %494, align 8, !dbg !3658
  %495 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3659
  %496 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %495, i32 0, i32 56, !dbg !3660
  store i32 1, i32* %496, align 4, !dbg !3661
  %497 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3662
  %498 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %497, i32 0, i32 55, !dbg !3663
  store i32 1, i32* %498, align 8, !dbg !3664
  store i1 true, i1* %4, align 1, !dbg !3665
  br label %500, !dbg !3665

; <label>:499:                                    ; preds = %372, %362
  store i1 false, i1* %4, align 1, !dbg !3666
  br label %500, !dbg !3666

; <label>:500:                                    ; preds = %499, %485, %350, %139, %87, %56
  %501 = load i1, i1* %4, align 1, !dbg !3667
  ret i1 %501, !dbg !3667
}

; Function Attrs: nounwind uwtable
define internal i32 @vrrp_saddr_cmp(%struct.sockaddr_storage*, %struct._vrrp_t*) #0 !dbg !3668 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.sockaddr_storage*, align 8
  %5 = alloca %struct._vrrp_t*, align 8
  %6 = alloca %struct._interface*, align 8
  store %struct.sockaddr_storage* %0, %struct.sockaddr_storage** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %4, metadata !3671, metadata !793), !dbg !3672
  store %struct._vrrp_t* %1, %struct._vrrp_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %5, metadata !3673, metadata !793), !dbg !3674
  call void @llvm.dbg.declare(metadata %struct._interface** %6, metadata !3675, metadata !793), !dbg !3676
  %7 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3677
  %8 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %7, i32 0, i32 4, !dbg !3678
  %9 = load %struct._interface*, %struct._interface** %8, align 8, !dbg !3678
  store %struct._interface* %9, %struct._interface** %6, align 8, !dbg !3676
  %10 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3679
  %11 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %10, i32 0, i32 16, !dbg !3681
  %12 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %11, i32 0, i32 0, !dbg !3682
  %13 = load i16, i16* %12, align 8, !dbg !3682
  %14 = zext i16 %13 to i32, !dbg !3679
  %15 = icmp ne i32 %14, 0, !dbg !3679
  br i1 %15, label %16, label %28, !dbg !3683

; <label>:16:                                     ; preds = %2
  %17 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !3684
  %18 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %17, i32 0, i32 0, !dbg !3686
  %19 = load i16, i16* %18, align 8, !dbg !3686
  %20 = zext i16 %19 to i32, !dbg !3684
  %21 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3687
  %22 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %21, i32 0, i32 16, !dbg !3688
  %23 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %22, i32 0, i32 0, !dbg !3689
  %24 = load i16, i16* %23, align 8, !dbg !3689
  %25 = zext i16 %24 to i32, !dbg !3687
  %26 = icmp ne i32 %20, %25, !dbg !3690
  br i1 %26, label %27, label %28, !dbg !3691

; <label>:27:                                     ; preds = %16
  store i32 0, i32* %3, align 4, !dbg !3692
  br label %78, !dbg !3692

; <label>:28:                                     ; preds = %16, %2
  %29 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3693
  %30 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %29, i32 0, i32 16, !dbg !3695
  %31 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %30, i32 0, i32 0, !dbg !3696
  %32 = load i16, i16* %31, align 8, !dbg !3696
  %33 = icmp ne i16 %32, 0, !dbg !3693
  br i1 %33, label %34, label %39, !dbg !3697

; <label>:34:                                     ; preds = %28
  %35 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !3698
  %36 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3699
  %37 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %36, i32 0, i32 16, !dbg !3700
  %38 = call i32 @inet_sockaddrcmp(%struct.sockaddr_storage* %35, %struct.sockaddr_storage* %37), !dbg !3701
  store i32 %38, i32* %3, align 4, !dbg !3702
  br label %78, !dbg !3702

; <label>:39:                                     ; preds = %28
  %40 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !3703
  %41 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %40, i32 0, i32 0, !dbg !3705
  %42 = load i16, i16* %41, align 8, !dbg !3705
  %43 = zext i16 %42 to i32, !dbg !3703
  %44 = icmp eq i32 %43, 2, !dbg !3706
  br i1 %44, label %45, label %58, !dbg !3707

; <label>:45:                                     ; preds = %39
  %46 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !3708
  %47 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %46, i32 0, i32 0, !dbg !3709
  %48 = load i16, i16* %47, align 8, !dbg !3709
  %49 = zext i16 %48 to i32, !dbg !3708
  %50 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !3710
  %51 = bitcast %struct.sockaddr_storage* %50 to %struct.sockaddr_in*, !dbg !3711
  %52 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %51, i32 0, i32 2, !dbg !3711
  %53 = bitcast %struct.in_addr* %52 to i8*, !dbg !3712
  %54 = load %struct._interface*, %struct._interface** %6, align 8, !dbg !3713
  %55 = getelementptr inbounds %struct._interface, %struct._interface* %54, i32 0, i32 2, !dbg !3714
  %56 = bitcast %struct.in_addr* %55 to i8*, !dbg !3715
  %57 = call i32 @inet_inaddrcmp(i32 %49, i8* %53, i8* %56), !dbg !3716
  store i32 %57, i32* %3, align 4, !dbg !3717
  br label %78, !dbg !3717

; <label>:58:                                     ; preds = %39
  %59 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !3718
  %60 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %59, i32 0, i32 0, !dbg !3720
  %61 = load i16, i16* %60, align 8, !dbg !3720
  %62 = zext i16 %61 to i32, !dbg !3718
  %63 = icmp eq i32 %62, 10, !dbg !3721
  br i1 %63, label %64, label %77, !dbg !3722

; <label>:64:                                     ; preds = %58
  %65 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !3723
  %66 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %65, i32 0, i32 0, !dbg !3724
  %67 = load i16, i16* %66, align 8, !dbg !3724
  %68 = zext i16 %67 to i32, !dbg !3723
  %69 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %4, align 8, !dbg !3725
  %70 = bitcast %struct.sockaddr_storage* %69 to %struct.sockaddr_in6*, !dbg !3726
  %71 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %70, i32 0, i32 3, !dbg !3726
  %72 = bitcast %struct.in6_addr* %71 to i8*, !dbg !3727
  %73 = load %struct._interface*, %struct._interface** %6, align 8, !dbg !3728
  %74 = getelementptr inbounds %struct._interface, %struct._interface* %73, i32 0, i32 3, !dbg !3729
  %75 = bitcast %struct.in6_addr* %74 to i8*, !dbg !3730
  %76 = call i32 @inet_inaddrcmp(i32 %68, i8* %72, i8* %75), !dbg !3731
  store i32 %76, i32* %3, align 4, !dbg !3732
  br label %78, !dbg !3732

; <label>:77:                                     ; preds = %58
  store i32 0, i32* %3, align 4, !dbg !3733
  br label %78, !dbg !3733

; <label>:78:                                     ; preds = %77, %64, %45, %34, %27
  %79 = load i32, i32* %3, align 4, !dbg !3734
  ret i32 %79, !dbg !3734
}

; Function Attrs: nounwind readnone
declare i32 @ntohl(i32) #5

declare i32 @vrrp_lower_prio_gratuitous_arp_thread(%struct._thread*) #3

declare void @send_event_notify(%struct._vrrp_t*, i32) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @vrrp_state_fault_rx(%struct._vrrp_t*, i8*, i64) #0 !dbg !3735 {
  %4 = alloca i1, align 1
  %5 = alloca %struct._vrrp_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct._vrrphdr*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store %struct._vrrp_t* %0, %struct._vrrp_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %5, metadata !3736, metadata !793), !dbg !3737
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3738, metadata !793), !dbg !3739
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !3740, metadata !793), !dbg !3741
  call void @llvm.dbg.declare(metadata %struct._vrrphdr** %8, metadata !3742, metadata !793), !dbg !3743
  call void @llvm.dbg.declare(metadata i64* %9, metadata !3744, metadata !793), !dbg !3745
  store i64 0, i64* %9, align 8, !dbg !3745
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3746, metadata !793), !dbg !3747
  %11 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3748
  %12 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %11, i32 0, i32 0, !dbg !3749
  %13 = load i16, i16* %12, align 8, !dbg !3749
  %14 = load i8*, i8** %6, align 8, !dbg !3750
  %15 = call %struct._vrrphdr* @vrrp_get_header(i16 zeroext %13, i8* %14, i32* %10), !dbg !3751
  store %struct._vrrphdr* %15, %struct._vrrphdr** %8, align 8, !dbg !3752
  %16 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3753
  %17 = load i8*, i8** %6, align 8, !dbg !3754
  %18 = load i64, i64* %7, align 8, !dbg !3755
  %19 = call i32 @vrrp_check_packet(%struct._vrrp_t* %16, i8* %17, i64 %18, i1 zeroext true), !dbg !3756
  %20 = sext i32 %19 to i64, !dbg !3756
  store i64 %20, i64* %9, align 8, !dbg !3757
  %21 = load i64, i64* %9, align 8, !dbg !3758
  %22 = icmp ne i64 %21, 0, !dbg !3760
  br i1 %22, label %23, label %24, !dbg !3761

; <label>:23:                                     ; preds = %3
  store i1 false, i1* %4, align 1, !dbg !3762
  br label %47, !dbg !3762

; <label>:24:                                     ; preds = %3
  %25 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3763
  %26 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %25, i32 0, i32 37, !dbg !3765
  %27 = load i8, i8* %26, align 1, !dbg !3765
  %28 = zext i8 %27 to i32, !dbg !3763
  %29 = icmp eq i32 %28, 255, !dbg !3766
  br i1 %29, label %45, label %30, !dbg !3767

; <label>:30:                                     ; preds = %24
  %31 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3768
  %32 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %31, i32 0, i32 38, !dbg !3769
  %33 = load i8, i8* %32, align 2, !dbg !3769
  %34 = zext i8 %33 to i32, !dbg !3768
  %35 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !3770
  %36 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %35, i32 0, i32 2, !dbg !3771
  %37 = load i8, i8* %36, align 2, !dbg !3771
  %38 = zext i8 %37 to i32, !dbg !3770
  %39 = icmp sgt i32 %34, %38, !dbg !3772
  br i1 %39, label %40, label %46, !dbg !3773

; <label>:40:                                     ; preds = %30
  %41 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !3774
  %42 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %41, i32 0, i32 52, !dbg !3776
  %43 = load i8, i8* %42, align 1, !dbg !3776
  %44 = trunc i8 %43 to i1, !dbg !3776
  br i1 %44, label %46, label %45, !dbg !3777

; <label>:45:                                     ; preds = %40, %24
  store i1 true, i1* %4, align 1, !dbg !3779
  br label %47, !dbg !3779

; <label>:46:                                     ; preds = %40, %30
  store i1 false, i1* %4, align 1, !dbg !3780
  br label %47, !dbg !3780

; <label>:47:                                     ; preds = %46, %45, %23
  %48 = load i1, i1* %4, align 1, !dbg !3781
  ret i1 %48, !dbg !3781
}

; Function Attrs: nounwind uwtable
define void @add_vrrp_to_interface(%struct._vrrp_t*, %struct._interface*, i32, i1 zeroext, i32) #0 !dbg !3782 {
  %6 = alloca %struct._vrrp_t*, align 8
  %7 = alloca %struct._interface*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %struct._tracking_vrrp*, align 8
  %12 = alloca %struct._element*, align 8
  %13 = alloca [46 x i8], align 16
  store %struct._vrrp_t* %0, %struct._vrrp_t** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %6, metadata !3786, metadata !793), !dbg !3787
  store %struct._interface* %1, %struct._interface** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._interface** %7, metadata !3788, metadata !793), !dbg !3789
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3790, metadata !793), !dbg !3791
  %14 = zext i1 %3 to i8
  store i8 %14, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !3792, metadata !793), !dbg !3793
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3794, metadata !793), !dbg !3795
  call void @llvm.dbg.declare(metadata %struct._tracking_vrrp** %11, metadata !3796, metadata !793), !dbg !3805
  store %struct._tracking_vrrp* null, %struct._tracking_vrrp** %11, align 8, !dbg !3805
  call void @llvm.dbg.declare(metadata %struct._element** %12, metadata !3806, metadata !793), !dbg !3807
  call void @llvm.dbg.declare(metadata [46 x i8]* %13, metadata !3808, metadata !793), !dbg !3809
  %15 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3810
  %16 = getelementptr inbounds %struct._interface, %struct._interface* %15, i32 0, i32 26, !dbg !3812
  %17 = load %struct._list*, %struct._list** %16, align 8, !dbg !3812
  %18 = icmp ne %struct._list* %17, null, !dbg !3813
  br i1 %18, label %63, label %19, !dbg !3814

; <label>:19:                                     ; preds = %5
  %20 = call %struct._list* @alloc_list(void (i8*)* @free_tracking_vrrp, void (%struct._IO_FILE*, i8*)* @dump_tracking_vrrp), !dbg !3815
  %21 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3817
  %22 = getelementptr inbounds %struct._interface, %struct._interface* %21, i32 0, i32 26, !dbg !3818
  store %struct._list* %20, %struct._list** %22, align 8, !dbg !3819
  %23 = load i8, i8* %9, align 1, !dbg !3820
  %24 = trunc i8 %23 to i1, !dbg !3820
  br i1 %24, label %25, label %62, !dbg !3822

; <label>:25:                                     ; preds = %19
  %26 = call zeroext i1 @__test_bit(i32 7, i64* @debug), !dbg !3823
  br i1 %26, label %27, label %62, !dbg !3825

; <label>:27:                                     ; preds = %25
  %28 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3826
  %29 = getelementptr inbounds %struct._interface, %struct._interface* %28, i32 0, i32 2, !dbg !3829
  %30 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %29, i32 0, i32 0, !dbg !3830
  %31 = load i32, i32* %30, align 4, !dbg !3830
  %32 = icmp ne i32 %31, 0, !dbg !3826
  br i1 %32, label %33, label %43, !dbg !3831

; <label>:33:                                     ; preds = %27
  %34 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3832
  %35 = getelementptr inbounds %struct._interface, %struct._interface* %34, i32 0, i32 2, !dbg !3834
  %36 = bitcast %struct.in_addr* %35 to i8*, !dbg !3835
  %37 = getelementptr inbounds [46 x i8], [46 x i8]* %13, i32 0, i32 0, !dbg !3836
  %38 = call i8* @inet_ntop(i32 2, i8* %36, i8* %37, i32 46) #8, !dbg !3837
  %39 = getelementptr inbounds [46 x i8], [46 x i8]* %13, i32 0, i32 0, !dbg !3838
  %40 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3839
  %41 = getelementptr inbounds %struct._interface, %struct._interface* %40, i32 0, i32 0, !dbg !3840
  %42 = getelementptr inbounds [16 x i8], [16 x i8]* %41, i32 0, i32 0, !dbg !3839
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i32 0, i32 0), i8* %39, i8* %42), !dbg !3841
  br label %43, !dbg !3842

; <label>:43:                                     ; preds = %33, %27
  %44 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3843
  %45 = getelementptr inbounds %struct._interface, %struct._interface* %44, i32 0, i32 3, !dbg !3845
  %46 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %45, i32 0, i32 0, !dbg !3846
  %47 = bitcast %union.anon* %46 to [4 x i32]*, !dbg !3847
  %48 = getelementptr inbounds [4 x i32], [4 x i32]* %47, i64 0, i64 0, !dbg !3843
  %49 = load i32, i32* %48, align 8, !dbg !3843
  %50 = icmp ne i32 %49, 0, !dbg !3843
  br i1 %50, label %51, label %61, !dbg !3848

; <label>:51:                                     ; preds = %43
  %52 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3849
  %53 = getelementptr inbounds %struct._interface, %struct._interface* %52, i32 0, i32 3, !dbg !3851
  %54 = bitcast %struct.in6_addr* %53 to i8*, !dbg !3852
  %55 = getelementptr inbounds [46 x i8], [46 x i8]* %13, i32 0, i32 0, !dbg !3853
  %56 = call i8* @inet_ntop(i32 10, i8* %54, i8* %55, i32 46) #8, !dbg !3854
  %57 = getelementptr inbounds [46 x i8], [46 x i8]* %13, i32 0, i32 0, !dbg !3855
  %58 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3856
  %59 = getelementptr inbounds %struct._interface, %struct._interface* %58, i32 0, i32 0, !dbg !3857
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %59, i32 0, i32 0, !dbg !3856
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i32 0, i32 0), i8* %57, i8* %60), !dbg !3858
  br label %61, !dbg !3859

; <label>:61:                                     ; preds = %51, %43
  br label %62, !dbg !3860

; <label>:62:                                     ; preds = %61, %25, %19
  br label %147, !dbg !3861

; <label>:63:                                     ; preds = %5
  %64 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3862
  %65 = getelementptr inbounds %struct._interface, %struct._interface* %64, i32 0, i32 26, !dbg !3865
  %66 = load %struct._list*, %struct._list** %65, align 8, !dbg !3865
  %67 = icmp ne %struct._list* %66, null, !dbg !3866
  br i1 %67, label %68, label %82, !dbg !3866

; <label>:68:                                     ; preds = %63
  %69 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3867
  %70 = getelementptr inbounds %struct._interface, %struct._interface* %69, i32 0, i32 26, !dbg !3869
  %71 = load %struct._list*, %struct._list** %70, align 8, !dbg !3869
  %72 = icmp ne %struct._list* %71, null, !dbg !3870
  br i1 %72, label %74, label %73, !dbg !3871

; <label>:73:                                     ; preds = %68
  br label %80, !dbg !3872

; <label>:74:                                     ; preds = %68
  %75 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3874
  %76 = getelementptr inbounds %struct._interface, %struct._interface* %75, i32 0, i32 26, !dbg !3876
  %77 = load %struct._list*, %struct._list** %76, align 8, !dbg !3876
  %78 = getelementptr inbounds %struct._list, %struct._list* %77, i32 0, i32 0, !dbg !3877
  %79 = load %struct._element*, %struct._element** %78, align 8, !dbg !3877
  br label %80, !dbg !3878

; <label>:80:                                     ; preds = %74, %73
  %81 = phi %struct._element* [ null, %73 ], [ %79, %74 ], !dbg !3879
  br label %83, !dbg !3881

; <label>:82:                                     ; preds = %63
  br label %83, !dbg !3882

; <label>:83:                                     ; preds = %82, %80
  %84 = phi %struct._element* [ %81, %80 ], [ null, %82 ], !dbg !3884
  store %struct._element* %84, %struct._element** %12, align 8, !dbg !3886
  br label %85, !dbg !3887

; <label>:85:                                     ; preds = %142, %83
  %86 = load %struct._element*, %struct._element** %12, align 8, !dbg !3888
  %87 = icmp ne %struct._element* %86, null, !dbg !3891
  br i1 %87, label %88, label %93, !dbg !3892

; <label>:88:                                     ; preds = %85
  %89 = load %struct._element*, %struct._element** %12, align 8, !dbg !3893
  %90 = getelementptr inbounds %struct._element, %struct._element* %89, i32 0, i32 2, !dbg !3895
  %91 = load i8*, i8** %90, align 8, !dbg !3895
  %92 = bitcast i8* %91 to %struct._tracking_vrrp*, !dbg !3896
  store %struct._tracking_vrrp* %92, %struct._tracking_vrrp** %11, align 8, !dbg !3897
  br label %93

; <label>:93:                                     ; preds = %88, %85
  %94 = phi i1 [ false, %85 ], [ true, %88 ]
  br i1 %94, label %95, label %146, !dbg !3898

; <label>:95:                                     ; preds = %93
  %96 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %11, align 8, !dbg !3900
  %97 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %96, i32 0, i32 1, !dbg !3903
  %98 = load %struct._vrrp_t*, %struct._vrrp_t** %97, align 8, !dbg !3903
  %99 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !3904
  %100 = icmp eq %struct._vrrp_t* %98, %99, !dbg !3905
  br i1 %100, label %101, label %141, !dbg !3906

; <label>:101:                                    ; preds = %95
  %102 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %11, align 8, !dbg !3907
  %103 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %102, i32 0, i32 2, !dbg !3910
  %104 = load i32, i32* %103, align 8, !dbg !3910
  %105 = and i32 %104, 7, !dbg !3911
  %106 = icmp ne i32 %105, 0, !dbg !3911
  br i1 %106, label %107, label %123, !dbg !3912

; <label>:107:                                    ; preds = %101
  %108 = load i32, i32* %10, align 4, !dbg !3913
  %109 = icmp eq i32 %108, 1, !dbg !3914
  br i1 %109, label %110, label %123, !dbg !3915

; <label>:110:                                    ; preds = %107
  %111 = load i32, i32* %10, align 4, !dbg !3916
  %112 = icmp eq i32 %111, 2, !dbg !3918
  br i1 %112, label %113, label %123, !dbg !3919

; <label>:113:                                    ; preds = %110
  %114 = load i32, i32* %10, align 4, !dbg !3920
  %115 = icmp eq i32 %114, 4, !dbg !3922
  br i1 %115, label %116, label %123, !dbg !3923

; <label>:116:                                    ; preds = %113
  %117 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !3925
  %118 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %117, i32 0, i32 1, !dbg !3926
  %119 = load i8*, i8** %118, align 8, !dbg !3926
  %120 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3927
  %121 = getelementptr inbounds %struct._interface, %struct._interface* %120, i32 0, i32 0, !dbg !3928
  %122 = getelementptr inbounds [16 x i8], [16 x i8]* %121, i32 0, i32 0, !dbg !3927
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.26, i32 0, i32 0), i8* %119, i8* %122), !dbg !3929
  br label %123, !dbg !3929

; <label>:123:                                    ; preds = %116, %113, %110, %107, %101
  %124 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %11, align 8, !dbg !3930
  %125 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %124, i32 0, i32 0, !dbg !3932
  %126 = load i32, i32* %125, align 8, !dbg !3932
  %127 = icmp ne i32 %126, 0, !dbg !3930
  br i1 %127, label %128, label %135, !dbg !3933

; <label>:128:                                    ; preds = %123
  %129 = load i32, i32* %8, align 4, !dbg !3934
  %130 = icmp ne i32 %129, 255, !dbg !3936
  br i1 %130, label %131, label %135, !dbg !3937

; <label>:131:                                    ; preds = %128
  %132 = load i32, i32* %8, align 4, !dbg !3938
  %133 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %11, align 8, !dbg !3939
  %134 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %133, i32 0, i32 0, !dbg !3940
  store i32 %132, i32* %134, align 8, !dbg !3941
  br label %135, !dbg !3939

; <label>:135:                                    ; preds = %131, %128, %123
  %136 = load i32, i32* %10, align 4, !dbg !3942
  %137 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %11, align 8, !dbg !3943
  %138 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %137, i32 0, i32 2, !dbg !3944
  %139 = load i32, i32* %138, align 8, !dbg !3945
  %140 = or i32 %139, %136, !dbg !3945
  store i32 %140, i32* %138, align 8, !dbg !3945
  br label %164, !dbg !3946

; <label>:141:                                    ; preds = %95
  br label %142, !dbg !3947

; <label>:142:                                    ; preds = %141
  %143 = load %struct._element*, %struct._element** %12, align 8, !dbg !3948
  %144 = getelementptr inbounds %struct._element, %struct._element* %143, i32 0, i32 0, !dbg !3950
  %145 = load %struct._element*, %struct._element** %144, align 8, !dbg !3950
  store %struct._element* %145, %struct._element** %12, align 8, !dbg !3951
  br label %85, !dbg !3952, !llvm.loop !3953

; <label>:146:                                    ; preds = %93
  br label %147

; <label>:147:                                    ; preds = %146, %62
  %148 = call i8* @zalloc(i64 24), !dbg !3955
  %149 = bitcast i8* %148 to %struct._tracking_vrrp*, !dbg !3956
  store %struct._tracking_vrrp* %149, %struct._tracking_vrrp** %11, align 8, !dbg !3957
  %150 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !3958
  %151 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %11, align 8, !dbg !3959
  %152 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %151, i32 0, i32 1, !dbg !3960
  store %struct._vrrp_t* %150, %struct._vrrp_t** %152, align 8, !dbg !3961
  %153 = load i32, i32* %8, align 4, !dbg !3962
  %154 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %11, align 8, !dbg !3963
  %155 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %154, i32 0, i32 0, !dbg !3964
  store i32 %153, i32* %155, align 8, !dbg !3965
  %156 = load i32, i32* %10, align 4, !dbg !3966
  %157 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %11, align 8, !dbg !3967
  %158 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %157, i32 0, i32 2, !dbg !3968
  store i32 %156, i32* %158, align 8, !dbg !3969
  %159 = load %struct._interface*, %struct._interface** %7, align 8, !dbg !3970
  %160 = getelementptr inbounds %struct._interface, %struct._interface* %159, i32 0, i32 26, !dbg !3971
  %161 = load %struct._list*, %struct._list** %160, align 8, !dbg !3971
  %162 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %11, align 8, !dbg !3972
  %163 = bitcast %struct._tracking_vrrp* %162 to i8*, !dbg !3972
  call void @list_add(%struct._list* %161, i8* %163), !dbg !3973
  br label %164, !dbg !3974

; <label>:164:                                    ; preds = %147, %135
  ret void, !dbg !3975
}

declare %struct._list* @alloc_list(void (i8*)*, void (%struct._IO_FILE*, i8*)*) #3

; Function Attrs: nounwind uwtable
define internal void @free_tracking_vrrp(i8*) #0 !dbg !3977 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3978, metadata !793), !dbg !3979
  %3 = load i8*, i8** %2, align 8, !dbg !3980
  call void @free(i8* %3) #8, !dbg !3981
  store i8* null, i8** %2, align 8, !dbg !3982
  ret void, !dbg !3983
}

declare void @dump_tracking_vrrp(%struct._IO_FILE*, i8*) #3

; Function Attrs: nounwind
declare i8* @inet_ntop(i32, i8*, i8*, i32) #6

declare i8* @zalloc(i64) #3

declare void @list_add(%struct._list*, i8*) #3

; Function Attrs: nounwind uwtable
define i32 @open_vrrp_send_socket(i16 zeroext, i32, %struct._interface*, i1 zeroext) #0 !dbg !3984 {
  %5 = alloca i32, align 4
  %6 = alloca i16, align 2
  %7 = alloca i32, align 4
  %8 = alloca %struct._interface*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i16 %0, i16* %6, align 2
  call void @llvm.dbg.declare(metadata i16* %6, metadata !3987, metadata !793), !dbg !3988
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3989, metadata !793), !dbg !3990
  store %struct._interface* %2, %struct._interface** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._interface** %8, metadata !3991, metadata !793), !dbg !3992
  %13 = zext i1 %3 to i8
  store i8 %13, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !3993, metadata !793), !dbg !3994
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3995, metadata !793), !dbg !3996
  store i32 -1, i32* %10, align 4, !dbg !3996
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3997, metadata !793), !dbg !3998
  store i32 0, i32* %11, align 4, !dbg !3998
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3999, metadata !793), !dbg !4000
  store i32 4, i32* %12, align 4, !dbg !4000
  %14 = load i16, i16* %6, align 2, !dbg !4001
  %15 = zext i16 %14 to i32, !dbg !4001
  %16 = icmp ne i32 %15, 2, !dbg !4003
  br i1 %16, label %17, label %24, !dbg !4004

; <label>:17:                                     ; preds = %4
  %18 = load i16, i16* %6, align 2, !dbg !4005
  %19 = zext i16 %18 to i32, !dbg !4005
  %20 = icmp ne i32 %19, 10, !dbg !4007
  br i1 %20, label %21, label %24, !dbg !4008

; <label>:21:                                     ; preds = %17
  %22 = load i16, i16* %6, align 2, !dbg !4009
  %23 = zext i16 %22 to i32, !dbg !4009
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i32 0, i32 0), i32 %23), !dbg !4011
  store i32 -1, i32* %5, align 4, !dbg !4012
  br label %89, !dbg !4012

; <label>:24:                                     ; preds = %17, %4
  %25 = load i16, i16* %6, align 2, !dbg !4013
  %26 = zext i16 %25 to i32, !dbg !4013
  %27 = load i32, i32* %7, align 4, !dbg !4014
  %28 = call i32 @socket(i32 %26, i32 524291, i32 %27) #8, !dbg !4015
  store i32 %28, i32* %10, align 4, !dbg !4016
  %29 = load i32, i32* %10, align 4, !dbg !4017
  %30 = icmp slt i32 %29, 0, !dbg !4019
  br i1 %30, label %31, label %34, !dbg !4020

; <label>:31:                                     ; preds = %24
  %32 = call i32* @__errno_location() #1, !dbg !4021
  %33 = load i32, i32* %32, align 4, !dbg !4023
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i32 0, i32 0), i32 %33), !dbg !4024
  store i32 -1, i32* %5, align 4, !dbg !4026
  br label %89, !dbg !4026

; <label>:34:                                     ; preds = %24
  %35 = load i32, i32* %10, align 4, !dbg !4027
  %36 = bitcast i32* %11 to i8*, !dbg !4029
  %37 = load i32, i32* %12, align 4, !dbg !4030
  %38 = call i32 @setsockopt(i32 %35, i32 1, i32 8, i8* %36, i32 %37) #8, !dbg !4031
  %39 = icmp ne i32 %38, 0, !dbg !4031
  br i1 %39, label %40, label %43, !dbg !4032

; <label>:40:                                     ; preds = %34
  %41 = call i32* @__errno_location() #1, !dbg !4033
  %42 = load i32, i32* %41, align 4, !dbg !4034
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29, i32 0, i32 0), i32 %42), !dbg !4035
  br label %43, !dbg !4037

; <label>:43:                                     ; preds = %40, %34
  %44 = load i16, i16* %6, align 2, !dbg !4038
  %45 = zext i16 %44 to i32, !dbg !4038
  %46 = icmp eq i32 %45, 2, !dbg !4040
  br i1 %46, label %47, label %57, !dbg !4041

; <label>:47:                                     ; preds = %43
  %48 = load i16, i16* %6, align 2, !dbg !4042
  %49 = call i32 @if_setsockopt_mcast_all(i16 zeroext %48, i32* %10), !dbg !4044
  %50 = call i32 @if_setsockopt_hdrincl(i32* %10), !dbg !4045
  %51 = load i8, i8* %9, align 1, !dbg !4046
  %52 = trunc i8 %51 to i1, !dbg !4046
  br i1 %52, label %53, label %56, !dbg !4048

; <label>:53:                                     ; preds = %47
  %54 = load %struct._interface*, %struct._interface** %8, align 8, !dbg !4049
  %55 = call i32 @if_setsockopt_bindtodevice(i32* %10, %struct._interface* %54), !dbg !4050
  br label %56, !dbg !4050

; <label>:56:                                     ; preds = %53, %47
  br label %70, !dbg !4051

; <label>:57:                                     ; preds = %43
  %58 = load i16, i16* %6, align 2, !dbg !4052
  %59 = zext i16 %58 to i32, !dbg !4052
  %60 = icmp eq i32 %59, 10, !dbg !4055
  br i1 %60, label %61, label %69, !dbg !4052

; <label>:61:                                     ; preds = %57
  %62 = call i32 @if_setsockopt_ipv6_checksum(i32* %10), !dbg !4056
  %63 = load i8, i8* %9, align 1, !dbg !4058
  %64 = trunc i8 %63 to i1, !dbg !4058
  br i1 %64, label %68, label %65, !dbg !4060

; <label>:65:                                     ; preds = %61
  %66 = load i16, i16* %6, align 2, !dbg !4061
  %67 = call i32 @if_setsockopt_mcast_hops(i16 zeroext %66, i32* %10), !dbg !4062
  br label %68, !dbg !4062

; <label>:68:                                     ; preds = %65, %61
  br label %69, !dbg !4063

; <label>:69:                                     ; preds = %68, %57
  br label %70

; <label>:70:                                     ; preds = %69, %56
  %71 = load i8, i8* %9, align 1, !dbg !4064
  %72 = trunc i8 %71 to i1, !dbg !4064
  br i1 %72, label %79, label %73, !dbg !4066

; <label>:73:                                     ; preds = %70
  %74 = load i16, i16* %6, align 2, !dbg !4067
  %75 = load %struct._interface*, %struct._interface** %8, align 8, !dbg !4069
  %76 = call i32 @if_setsockopt_mcast_if(i16 zeroext %74, i32* %10, %struct._interface* %75), !dbg !4070
  %77 = load i16, i16* %6, align 2, !dbg !4071
  %78 = call i32 @if_setsockopt_mcast_loop(i16 zeroext %77, i32* %10), !dbg !4072
  br label %79, !dbg !4073

; <label>:79:                                     ; preds = %73, %70
  %80 = load i16, i16* %6, align 2, !dbg !4074
  %81 = zext i16 %80 to i32, !dbg !4074
  %82 = call i32 @if_setsockopt_priority(i32* %10, i32 %81), !dbg !4075
  %83 = call i32 @if_setsockopt_no_receive(i32* %10), !dbg !4076
  %84 = load i32, i32* %10, align 4, !dbg !4077
  %85 = icmp slt i32 %84, 0, !dbg !4079
  br i1 %85, label %86, label %87, !dbg !4080

; <label>:86:                                     ; preds = %79
  store i32 -1, i32* %5, align 4, !dbg !4081
  br label %89, !dbg !4081

; <label>:87:                                     ; preds = %79
  %88 = load i32, i32* %10, align 4, !dbg !4082
  store i32 %88, i32* %5, align 4, !dbg !4083
  br label %89, !dbg !4083

; <label>:89:                                     ; preds = %87, %86, %31, %21
  %90 = load i32, i32* %5, align 4, !dbg !4084
  ret i32 %90, !dbg !4084
}

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #6

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #6

declare i32 @if_setsockopt_mcast_all(i16 zeroext, i32*) #3

declare i32 @if_setsockopt_hdrincl(i32*) #3

declare i32 @if_setsockopt_bindtodevice(i32*, %struct._interface*) #3

declare i32 @if_setsockopt_ipv6_checksum(i32*) #3

declare i32 @if_setsockopt_mcast_hops(i16 zeroext, i32*) #3

declare i32 @if_setsockopt_mcast_if(i16 zeroext, i32*, %struct._interface*) #3

declare i32 @if_setsockopt_mcast_loop(i16 zeroext, i32*) #3

declare i32 @if_setsockopt_priority(i32*, i32) #3

declare i32 @if_setsockopt_no_receive(i32*) #3

; Function Attrs: nounwind uwtable
define i32 @open_vrrp_read_socket(i16 zeroext, i32, %struct._interface*, i1 zeroext, i32) #0 !dbg !4085 {
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca %struct._interface*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i16 %0, i16* %7, align 2
  call void @llvm.dbg.declare(metadata i16* %7, metadata !4088, metadata !793), !dbg !4089
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4090, metadata !793), !dbg !4091
  store %struct._interface* %2, %struct._interface** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._interface** %9, metadata !4092, metadata !793), !dbg !4093
  %16 = zext i1 %3 to i8
  store i8 %16, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !4094, metadata !793), !dbg !4095
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4096, metadata !793), !dbg !4097
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4098, metadata !793), !dbg !4099
  store i32 -1, i32* %12, align 4, !dbg !4099
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4100, metadata !793), !dbg !4101
  %17 = load i32, i32* %11, align 4, !dbg !4102
  store i32 %17, i32* %13, align 4, !dbg !4101
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4103, metadata !793), !dbg !4104
  store i32 4, i32* %14, align 4, !dbg !4104
  %18 = load i16, i16* %7, align 2, !dbg !4105
  %19 = zext i16 %18 to i32, !dbg !4105
  %20 = load i32, i32* %8, align 4, !dbg !4106
  %21 = call i32 @socket(i32 %19, i32 524291, i32 %20) #8, !dbg !4107
  store i32 %21, i32* %12, align 4, !dbg !4108
  %22 = load i32, i32* %12, align 4, !dbg !4109
  %23 = icmp slt i32 %22, 0, !dbg !4111
  br i1 %23, label %24, label %28, !dbg !4112

; <label>:24:                                     ; preds = %5
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4113, metadata !793), !dbg !4115
  %25 = call i32* @__errno_location() #1, !dbg !4116
  %26 = load i32, i32* %25, align 4, !dbg !4117
  store i32 %26, i32* %15, align 4, !dbg !4115
  %27 = load i32, i32* %15, align 4, !dbg !4118
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i32 0, i32 0), i32 %27), !dbg !4119
  store i32 -1, i32* %6, align 4, !dbg !4120
  br label %69, !dbg !4120

; <label>:28:                                     ; preds = %5
  %29 = load i32, i32* %11, align 4, !dbg !4121
  %30 = icmp ne i32 %29, 0, !dbg !4121
  br i1 %30, label %31, label %41, !dbg !4123

; <label>:31:                                     ; preds = %28
  %32 = load i32, i32* %12, align 4, !dbg !4124
  %33 = bitcast i32* %13 to i8*, !dbg !4127
  %34 = load i32, i32* %14, align 4, !dbg !4128
  %35 = call i32 @setsockopt(i32 %32, i32 1, i32 8, i8* %33, i32 %34) #8, !dbg !4129
  %36 = icmp ne i32 %35, 0, !dbg !4129
  br i1 %36, label %37, label %40, !dbg !4130

; <label>:37:                                     ; preds = %31
  %38 = call i32* @__errno_location() #1, !dbg !4131
  %39 = load i32, i32* %38, align 4, !dbg !4132
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.30, i32 0, i32 0), i32 %39), !dbg !4133
  br label %40, !dbg !4135

; <label>:40:                                     ; preds = %37, %31
  br label %41, !dbg !4136

; <label>:41:                                     ; preds = %40, %28
  %42 = load i16, i16* %7, align 2, !dbg !4137
  %43 = zext i16 %42 to i32, !dbg !4137
  %44 = icmp eq i32 %43, 2, !dbg !4139
  br i1 %44, label %45, label %48, !dbg !4140

; <label>:45:                                     ; preds = %41
  %46 = load i16, i16* %7, align 2, !dbg !4141
  %47 = call i32 @if_setsockopt_mcast_all(i16 zeroext %46, i32* %12), !dbg !4142
  br label %48, !dbg !4142

; <label>:48:                                     ; preds = %45, %41
  %49 = load i8, i8* %10, align 1, !dbg !4143
  %50 = trunc i8 %49 to i1, !dbg !4143
  br i1 %50, label %55, label %51, !dbg !4145

; <label>:51:                                     ; preds = %48
  %52 = load i16, i16* %7, align 2, !dbg !4146
  %53 = load %struct._interface*, %struct._interface** %9, align 8, !dbg !4148
  %54 = call i32 @if_join_vrrp_group(i16 zeroext %52, i32* %12, %struct._interface* %53), !dbg !4149
  br label %55, !dbg !4150

; <label>:55:                                     ; preds = %51, %48
  %56 = load %struct._interface*, %struct._interface** %9, align 8, !dbg !4151
  %57 = call i32 @if_setsockopt_bindtodevice(i32* %12, %struct._interface* %56), !dbg !4152
  %58 = load i32, i32* %12, align 4, !dbg !4153
  %59 = icmp slt i32 %58, 0, !dbg !4155
  br i1 %59, label %60, label %61, !dbg !4156

; <label>:60:                                     ; preds = %55
  store i32 -1, i32* %6, align 4, !dbg !4157
  br label %69, !dbg !4157

; <label>:61:                                     ; preds = %55
  %62 = load i16, i16* %7, align 2, !dbg !4158
  %63 = zext i16 %62 to i32, !dbg !4158
  %64 = icmp eq i32 %63, 10, !dbg !4160
  br i1 %64, label %65, label %67, !dbg !4161

; <label>:65:                                     ; preds = %61
  %66 = call i32 @if_setsockopt_ipv6_checksum(i32* %12), !dbg !4162
  br label %67, !dbg !4164

; <label>:67:                                     ; preds = %65, %61
  %68 = load i32, i32* %12, align 4, !dbg !4165
  store i32 %68, i32* %6, align 4, !dbg !4166
  br label %69, !dbg !4166

; <label>:69:                                     ; preds = %67, %60, %24
  %70 = load i32, i32* %6, align 4, !dbg !4167
  ret i32 %70, !dbg !4167
}

declare i32 @if_join_vrrp_group(i16 zeroext, i32*, %struct._interface*) #3

; Function Attrs: nounwind uwtable
define void @restore_vrrp_interfaces() #0 !dbg !4168 {
  %1 = alloca %struct._element*, align 8
  %2 = alloca %struct._vrrp_t*, align 8
  call void @llvm.dbg.declare(metadata %struct._element** %1, metadata !4169, metadata !793), !dbg !4170
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !4171, metadata !793), !dbg !4172
  %3 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4173
  %4 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %3, i32 0, i32 5, !dbg !4175
  %5 = load %struct._list*, %struct._list** %4, align 8, !dbg !4175
  %6 = icmp ne %struct._list* %5, null, !dbg !4176
  br i1 %6, label %7, label %21, !dbg !4176

; <label>:7:                                      ; preds = %0
  %8 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4177
  %9 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %8, i32 0, i32 5, !dbg !4179
  %10 = load %struct._list*, %struct._list** %9, align 8, !dbg !4179
  %11 = icmp ne %struct._list* %10, null, !dbg !4180
  br i1 %11, label %13, label %12, !dbg !4181

; <label>:12:                                     ; preds = %7
  br label %19, !dbg !4182

; <label>:13:                                     ; preds = %7
  %14 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4184
  %15 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %14, i32 0, i32 5, !dbg !4186
  %16 = load %struct._list*, %struct._list** %15, align 8, !dbg !4186
  %17 = getelementptr inbounds %struct._list, %struct._list* %16, i32 0, i32 0, !dbg !4187
  %18 = load %struct._element*, %struct._element** %17, align 8, !dbg !4187
  br label %19, !dbg !4188

; <label>:19:                                     ; preds = %13, %12
  %20 = phi %struct._element* [ null, %12 ], [ %18, %13 ], !dbg !4189
  br label %22, !dbg !4191

; <label>:21:                                     ; preds = %0
  br label %22, !dbg !4192

; <label>:22:                                     ; preds = %21, %19
  %23 = phi %struct._element* [ %20, %19 ], [ null, %21 ], !dbg !4194
  store %struct._element* %23, %struct._element** %1, align 8, !dbg !4196
  br label %24, !dbg !4197

; <label>:24:                                     ; preds = %42, %22
  %25 = load %struct._element*, %struct._element** %1, align 8, !dbg !4198
  %26 = icmp ne %struct._element* %25, null, !dbg !4201
  br i1 %26, label %27, label %32, !dbg !4202

; <label>:27:                                     ; preds = %24
  %28 = load %struct._element*, %struct._element** %1, align 8, !dbg !4203
  %29 = getelementptr inbounds %struct._element, %struct._element* %28, i32 0, i32 2, !dbg !4205
  %30 = load i8*, i8** %29, align 8, !dbg !4205
  %31 = bitcast i8* %30 to %struct._vrrp_t*, !dbg !4206
  store %struct._vrrp_t* %31, %struct._vrrp_t** %2, align 8, !dbg !4207
  br label %32

; <label>:32:                                     ; preds = %27, %24
  %33 = phi i1 [ false, %24 ], [ true, %27 ]
  br i1 %33, label %34, label %46, !dbg !4208

; <label>:34:                                     ; preds = %32
  %35 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !4210
  %36 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %35, i32 0, i32 55, !dbg !4213
  %37 = load i32, i32* %36, align 8, !dbg !4213
  %38 = icmp eq i32 %37, 2, !dbg !4214
  br i1 %38, label %39, label %41, !dbg !4215

; <label>:39:                                     ; preds = %34
  %40 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !4216
  call void @vrrp_restore_interface(%struct._vrrp_t* %40, i1 zeroext true, i1 zeroext false), !dbg !4217
  br label %41, !dbg !4217

; <label>:41:                                     ; preds = %39, %34
  br label %42, !dbg !4218

; <label>:42:                                     ; preds = %41
  %43 = load %struct._element*, %struct._element** %1, align 8, !dbg !4219
  %44 = getelementptr inbounds %struct._element, %struct._element* %43, i32 0, i32 0, !dbg !4221
  %45 = load %struct._element*, %struct._element** %44, align 8, !dbg !4221
  store %struct._element* %45, %struct._element** %1, align 8, !dbg !4222
  br label %24, !dbg !4223, !llvm.loop !4224

; <label>:46:                                     ; preds = %32
  ret void, !dbg !4226
}

; Function Attrs: nounwind uwtable
define void @shutdown_vrrp_instances() #0 !dbg !4227 {
  %1 = alloca %struct._element*, align 8
  %2 = alloca %struct._vrrp_t*, align 8
  call void @llvm.dbg.declare(metadata %struct._element** %1, metadata !4228, metadata !793), !dbg !4229
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !4230, metadata !793), !dbg !4231
  call void @restore_rp_filter(), !dbg !4232
  %3 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4233
  %4 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %3, i32 0, i32 5, !dbg !4235
  %5 = load %struct._list*, %struct._list** %4, align 8, !dbg !4235
  %6 = icmp ne %struct._list* %5, null, !dbg !4236
  br i1 %6, label %7, label %21, !dbg !4236

; <label>:7:                                      ; preds = %0
  %8 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4237
  %9 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %8, i32 0, i32 5, !dbg !4239
  %10 = load %struct._list*, %struct._list** %9, align 8, !dbg !4239
  %11 = icmp ne %struct._list* %10, null, !dbg !4240
  br i1 %11, label %13, label %12, !dbg !4241

; <label>:12:                                     ; preds = %7
  br label %19, !dbg !4242

; <label>:13:                                     ; preds = %7
  %14 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4244
  %15 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %14, i32 0, i32 5, !dbg !4246
  %16 = load %struct._list*, %struct._list** %15, align 8, !dbg !4246
  %17 = getelementptr inbounds %struct._list, %struct._list* %16, i32 0, i32 0, !dbg !4247
  %18 = load %struct._element*, %struct._element** %17, align 8, !dbg !4247
  br label %19, !dbg !4248

; <label>:19:                                     ; preds = %13, %12
  %20 = phi %struct._element* [ null, %12 ], [ %18, %13 ], !dbg !4249
  br label %22, !dbg !4251

; <label>:21:                                     ; preds = %0
  br label %22, !dbg !4252

; <label>:22:                                     ; preds = %21, %19
  %23 = phi %struct._element* [ %20, %19 ], [ null, %21 ], !dbg !4254
  store %struct._element* %23, %struct._element** %1, align 8, !dbg !4256
  br label %24, !dbg !4257

; <label>:24:                                     ; preds = %80, %22
  %25 = load %struct._element*, %struct._element** %1, align 8, !dbg !4258
  %26 = icmp ne %struct._element* %25, null, !dbg !4261
  br i1 %26, label %27, label %32, !dbg !4262

; <label>:27:                                     ; preds = %24
  %28 = load %struct._element*, %struct._element** %1, align 8, !dbg !4263
  %29 = getelementptr inbounds %struct._element, %struct._element* %28, i32 0, i32 2, !dbg !4265
  %30 = load i8*, i8** %29, align 8, !dbg !4265
  %31 = bitcast i8* %30 to %struct._vrrp_t*, !dbg !4266
  store %struct._vrrp_t* %31, %struct._vrrp_t** %2, align 8, !dbg !4267
  br label %32

; <label>:32:                                     ; preds = %27, %24
  %33 = phi i1 [ false, %24 ], [ true, %27 ]
  br i1 %33, label %34, label %84, !dbg !4268

; <label>:34:                                     ; preds = %32
  %35 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !4270
  %36 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %35, i32 0, i32 4, !dbg !4273
  %37 = load %struct._interface*, %struct._interface** %36, align 8, !dbg !4273
  %38 = icmp ne %struct._interface* %37, null, !dbg !4270
  br i1 %38, label %39, label %64, !dbg !4274

; <label>:39:                                     ; preds = %34
  %40 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !4275
  %41 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %40, i32 0, i32 9, !dbg !4278
  %42 = call zeroext i1 @__test_bit(i32 0, i64* %41), !dbg !4279
  br i1 %42, label %43, label %52, !dbg !4280

; <label>:43:                                     ; preds = %39
  %44 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !4281
  %45 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %44, i32 0, i32 4, !dbg !4283
  %46 = load %struct._interface*, %struct._interface** %45, align 8, !dbg !4283
  %47 = getelementptr inbounds %struct._interface, %struct._interface* %46, i32 0, i32 12, !dbg !4284
  %48 = load i8, i8* %47, align 4, !dbg !4284
  %49 = trunc i8 %48 to i1, !dbg !4284
  br i1 %49, label %50, label %52, !dbg !4285

; <label>:50:                                     ; preds = %43
  %51 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !4286
  call void @netlink_link_del_vmac(%struct._vrrp_t* %51), !dbg !4287
  br label %52, !dbg !4287

; <label>:52:                                     ; preds = %50, %43, %39
  %53 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !4288
  %54 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %53, i32 0, i32 4, !dbg !4290
  %55 = load %struct._interface*, %struct._interface** %54, align 8, !dbg !4290
  %56 = getelementptr inbounds %struct._interface, %struct._interface* %55, i32 0, i32 23, !dbg !4291
  %57 = load i32, i32* %56, align 8, !dbg !4291
  %58 = icmp ne i32 %57, 0, !dbg !4288
  br i1 %58, label %59, label %63, !dbg !4292

; <label>:59:                                     ; preds = %52
  %60 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !4293
  %61 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %60, i32 0, i32 4, !dbg !4294
  %62 = load %struct._interface*, %struct._interface** %61, align 8, !dbg !4294
  call void @reset_promote_secondaries(%struct._interface* %62), !dbg !4295
  br label %63, !dbg !4295

; <label>:63:                                     ; preds = %59, %52
  br label %64, !dbg !4296

; <label>:64:                                     ; preds = %63, %34
  %65 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4297
  %66 = getelementptr inbounds %struct._data, %struct._data* %65, i32 0, i32 20, !dbg !4299
  %67 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %66, i32 0, i32 1, !dbg !4300
  %68 = load %struct._vrrp_t*, %struct._vrrp_t** %67, align 8, !dbg !4300
  %69 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !4301
  %70 = icmp eq %struct._vrrp_t* %68, %69, !dbg !4302
  br i1 %70, label %71, label %79, !dbg !4303

; <label>:71:                                     ; preds = %64
  %72 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4304
  %73 = getelementptr inbounds %struct._data, %struct._data* %72, i32 0, i32 20, !dbg !4305
  %74 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !4306
  %75 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %74, i32 0, i32 55, !dbg !4307
  %76 = load i32, i32* %75, align 8, !dbg !4307
  %77 = icmp eq i32 %76, 2, !dbg !4308
  %78 = select i1 %77, i32 1, i32 2, !dbg !4309
  call void @ipvs_syncd_cmd(i32 1164, %struct.lvs_syncd_config* %73, i32 %78, i1 zeroext true, i1 zeroext false), !dbg !4310
  br label %79, !dbg !4310

; <label>:79:                                     ; preds = %71, %64
  br label %80, !dbg !4311

; <label>:80:                                     ; preds = %79
  %81 = load %struct._element*, %struct._element** %1, align 8, !dbg !4312
  %82 = getelementptr inbounds %struct._element, %struct._element* %81, i32 0, i32 0, !dbg !4314
  %83 = load %struct._element*, %struct._element** %82, align 8, !dbg !4314
  store %struct._element* %83, %struct._element** %1, align 8, !dbg !4315
  br label %24, !dbg !4316, !llvm.loop !4317

; <label>:84:                                     ; preds = %32
  ret void, !dbg !4319
}

declare void @restore_rp_filter() #3

declare void @netlink_link_del_vmac(%struct._vrrp_t*) #3

declare void @reset_promote_secondaries(%struct._interface*) #3

declare void @ipvs_syncd_cmd(i32, %struct.lvs_syncd_config*, i32, i1 zeroext, i1 zeroext) #3

; Function Attrs: nounwind uwtable
define zeroext i1 @vrrp_complete_init() #0 !dbg !4320 {
  %1 = alloca i1, align 1
  %2 = alloca %struct._element*, align 8
  %3 = alloca %struct._element*, align 8
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca %struct._vrrp_t*, align 8
  %6 = alloca %struct._vrrp_sgroup*, align 8
  %7 = alloca %struct._list*, align 8
  %8 = alloca %struct._element*, align 8
  %9 = alloca %struct._element*, align 8
  %10 = alloca %struct._vrrp_t*, align 8
  %11 = alloca %struct._interface*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca %struct._vrrp_script*, align 8
  call void @llvm.dbg.declare(metadata %struct._element** %2, metadata !4323, metadata !793), !dbg !4324
  call void @llvm.dbg.declare(metadata %struct._element** %3, metadata !4325, metadata !793), !dbg !4326
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !4327, metadata !793), !dbg !4328
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %5, metadata !4329, metadata !793), !dbg !4330
  call void @llvm.dbg.declare(metadata %struct._vrrp_sgroup** %6, metadata !4331, metadata !793), !dbg !4332
  call void @llvm.dbg.declare(metadata %struct._list** %7, metadata !4333, metadata !793), !dbg !4334
  call void @llvm.dbg.declare(metadata %struct._element** %8, metadata !4335, metadata !793), !dbg !4336
  call void @llvm.dbg.declare(metadata %struct._element** %9, metadata !4337, metadata !793), !dbg !4338
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %10, metadata !4339, metadata !793), !dbg !4340
  call void @llvm.dbg.declare(metadata %struct._interface** %11, metadata !4341, metadata !793), !dbg !4342
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4343, metadata !793), !dbg !4344
  call void @llvm.dbg.declare(metadata i64* %13, metadata !4345, metadata !793), !dbg !4346
  store i64 0, i64* %13, align 8, !dbg !4346
  call void @llvm.dbg.declare(metadata i8* %14, metadata !4347, metadata !793), !dbg !4348
  call void @llvm.dbg.declare(metadata i8* %15, metadata !4349, metadata !793), !dbg !4350
  %17 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4351
  %18 = getelementptr inbounds %struct._data, %struct._data* %17, i32 0, i32 29, !dbg !4353
  %19 = load i32, i32* %18, align 4, !dbg !4353
  %20 = icmp eq i32 %19, -1, !dbg !4354
  br i1 %20, label %21, label %27, !dbg !4355

; <label>:21:                                     ; preds = %0
  %22 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4356
  %23 = getelementptr inbounds %struct._data, %struct._data* %22, i32 0, i32 26, !dbg !4357
  %24 = load i32, i32* %23, align 8, !dbg !4357
  %25 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4358
  %26 = getelementptr inbounds %struct._data, %struct._data* %25, i32 0, i32 29, !dbg !4359
  store i32 %24, i32* %26, align 4, !dbg !4360
  br label %27, !dbg !4358

; <label>:27:                                     ; preds = %21, %0
  %28 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4361
  %29 = getelementptr inbounds %struct._data, %struct._data* %28, i32 0, i32 28, !dbg !4363
  %30 = load i32, i32* %29, align 8, !dbg !4363
  %31 = icmp eq i32 %30, -1, !dbg !4364
  br i1 %31, label %32, label %38, !dbg !4365

; <label>:32:                                     ; preds = %27
  %33 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4366
  %34 = getelementptr inbounds %struct._data, %struct._data* %33, i32 0, i32 24, !dbg !4367
  %35 = load i32, i32* %34, align 8, !dbg !4367
  %36 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4368
  %37 = getelementptr inbounds %struct._data, %struct._data* %36, i32 0, i32 28, !dbg !4369
  store i32 %35, i32* %37, align 8, !dbg !4370
  br label %38, !dbg !4368

; <label>:38:                                     ; preds = %32, %27
  %39 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4371
  %40 = getelementptr inbounds %struct._data, %struct._data* %39, i32 0, i32 54, !dbg !4373
  %41 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %40, i32 0, i32 3, !dbg !4374
  %42 = load %struct._notify_script*, %struct._notify_script** %41, align 8, !dbg !4374
  %43 = icmp ne %struct._notify_script* %42, null, !dbg !4371
  br i1 %43, label %44, label %53, !dbg !4375

; <label>:44:                                     ; preds = %38
  %45 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4376
  %46 = getelementptr inbounds %struct._data, %struct._data* %45, i32 0, i32 54, !dbg !4377
  %47 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %46, i32 0, i32 3, !dbg !4378
  %48 = load %struct._notify_script*, %struct._notify_script** %47, align 8, !dbg !4378
  %49 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4379
  %50 = getelementptr inbounds %struct._data, %struct._data* %49, i32 0, i32 54, !dbg !4380
  %51 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %50, i32 0, i32 0, !dbg !4381
  %52 = load i8*, i8** %51, align 8, !dbg !4381
  call void @add_script_param(%struct._notify_script* %48, i8* %52), !dbg !4382
  br label %53, !dbg !4382

; <label>:53:                                     ; preds = %44, %38
  %54 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4383
  %55 = getelementptr inbounds %struct._data, %struct._data* %54, i32 0, i32 55, !dbg !4385
  %56 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %55, i32 0, i32 3, !dbg !4386
  %57 = load %struct._notify_script*, %struct._notify_script** %56, align 8, !dbg !4386
  %58 = icmp ne %struct._notify_script* %57, null, !dbg !4383
  br i1 %58, label %59, label %68, !dbg !4387

; <label>:59:                                     ; preds = %53
  %60 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4388
  %61 = getelementptr inbounds %struct._data, %struct._data* %60, i32 0, i32 55, !dbg !4389
  %62 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %61, i32 0, i32 3, !dbg !4390
  %63 = load %struct._notify_script*, %struct._notify_script** %62, align 8, !dbg !4390
  %64 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4391
  %65 = getelementptr inbounds %struct._data, %struct._data* %64, i32 0, i32 55, !dbg !4392
  %66 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %65, i32 0, i32 0, !dbg !4393
  %67 = load i8*, i8** %66, align 8, !dbg !4393
  call void @add_script_param(%struct._notify_script* %63, i8* %67), !dbg !4394
  br label %68, !dbg !4394

; <label>:68:                                     ; preds = %59, %53
  call void @check_vrrp_script_security(), !dbg !4395
  %69 = call zeroext i1 @running_checker(), !dbg !4396
  br i1 %69, label %70, label %74, !dbg !4398

; <label>:70:                                     ; preds = %68
  %71 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4399
  %72 = getelementptr inbounds %struct._data, %struct._data* %71, i32 0, i32 54, !dbg !4400
  %73 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %72, i32 0, i32 3, !dbg !4401
  call void @free_notify_script(%struct._notify_script** %73), !dbg !4402
  br label %74, !dbg !4402

; <label>:74:                                     ; preds = %70, %68
  %75 = call zeroext i1 @__test_bit(i32 11, i64* @debug), !dbg !4403
  br i1 %75, label %81, label %76, !dbg !4405

; <label>:76:                                     ; preds = %74
  %77 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4406
  %78 = getelementptr inbounds %struct._data, %struct._data* %77, i32 0, i32 54, !dbg !4407
  %79 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4408
  %80 = getelementptr inbounds %struct._data, %struct._data* %79, i32 0, i32 55, !dbg !4409
  call void @notify_fifo_open(%struct._notify_fifo* %78, %struct._notify_fifo* %80, i32 (%struct._thread*)* @vrrp_notify_fifo_script_exit, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0)), !dbg !4410
  br label %81, !dbg !4410

; <label>:81:                                     ; preds = %76, %74
  %82 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4411
  %83 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %82, i32 0, i32 5, !dbg !4413
  %84 = load %struct._list*, %struct._list** %83, align 8, !dbg !4413
  %85 = icmp ne %struct._list* %84, null, !dbg !4414
  br i1 %85, label %86, label %100, !dbg !4414

; <label>:86:                                     ; preds = %81
  %87 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4415
  %88 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %87, i32 0, i32 5, !dbg !4417
  %89 = load %struct._list*, %struct._list** %88, align 8, !dbg !4417
  %90 = icmp ne %struct._list* %89, null, !dbg !4418
  br i1 %90, label %92, label %91, !dbg !4419

; <label>:91:                                     ; preds = %86
  br label %98, !dbg !4420

; <label>:92:                                     ; preds = %86
  %93 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4422
  %94 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %93, i32 0, i32 5, !dbg !4424
  %95 = load %struct._list*, %struct._list** %94, align 8, !dbg !4424
  %96 = getelementptr inbounds %struct._list, %struct._list* %95, i32 0, i32 0, !dbg !4425
  %97 = load %struct._element*, %struct._element** %96, align 8, !dbg !4425
  br label %98, !dbg !4426

; <label>:98:                                     ; preds = %92, %91
  %99 = phi %struct._element* [ null, %91 ], [ %97, %92 ], !dbg !4427
  br label %101, !dbg !4429

; <label>:100:                                    ; preds = %81
  br label %101, !dbg !4430

; <label>:101:                                    ; preds = %100, %98
  %102 = phi %struct._element* [ %99, %98 ], [ null, %100 ], !dbg !4432
  store %struct._element* %102, %struct._element** %2, align 8, !dbg !4434
  br label %103, !dbg !4435

; <label>:103:                                    ; preds = %233, %101
  %104 = load %struct._element*, %struct._element** %2, align 8, !dbg !4436
  %105 = icmp ne %struct._element* %104, null, !dbg !4439
  br i1 %105, label %106, label %111, !dbg !4440

; <label>:106:                                    ; preds = %103
  %107 = load %struct._element*, %struct._element** %2, align 8, !dbg !4441
  %108 = getelementptr inbounds %struct._element, %struct._element* %107, i32 0, i32 2, !dbg !4443
  %109 = load i8*, i8** %108, align 8, !dbg !4443
  %110 = bitcast i8* %109 to %struct._vrrp_t*, !dbg !4444
  store %struct._vrrp_t* %110, %struct._vrrp_t** %4, align 8, !dbg !4445
  br label %111

; <label>:111:                                    ; preds = %106, %103
  %112 = phi i1 [ false, %103 ], [ true, %106 ]
  br i1 %112, label %113, label %237, !dbg !4446

; <label>:113:                                    ; preds = %111
  %114 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4448
  %115 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %114, i32 0, i32 36, !dbg !4450
  %116 = load i8, i8* %115, align 4, !dbg !4450
  %117 = zext i8 %116 to i64, !dbg !4451
  %118 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4451
  %119 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %118, i32 0, i32 6, !dbg !4452
  %120 = load %struct._list*, %struct._list** %119, align 8, !dbg !4452
  %121 = getelementptr inbounds %struct._list, %struct._list* %120, i64 %117, !dbg !4451
  store %struct._list* %121, %struct._list** %7, align 8, !dbg !4453
  %122 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4454
  %123 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %122, i32 0, i32 9, !dbg !4456
  %124 = call zeroext i1 @__test_bit(i32 0, i64* %123), !dbg !4457
  br i1 %124, label %125, label %131, !dbg !4458

; <label>:125:                                    ; preds = %113
  %126 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4459
  %127 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %126, i32 0, i32 4, !dbg !4460
  %128 = load %struct._interface*, %struct._interface** %127, align 8, !dbg !4460
  %129 = getelementptr inbounds %struct._interface, %struct._interface* %128, i32 0, i32 14, !dbg !4461
  %130 = load %struct._interface*, %struct._interface** %129, align 8, !dbg !4461
  store %struct._interface* %130, %struct._interface** %11, align 8, !dbg !4462
  br label %135, !dbg !4463

; <label>:131:                                    ; preds = %113
  %132 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4464
  %133 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %132, i32 0, i32 4, !dbg !4465
  %134 = load %struct._interface*, %struct._interface** %133, align 8, !dbg !4465
  store %struct._interface* %134, %struct._interface** %11, align 8, !dbg !4466
  br label %135

; <label>:135:                                    ; preds = %131, %125
  %136 = load %struct._list*, %struct._list** %7, align 8, !dbg !4467
  %137 = icmp eq %struct._list* %136, null, !dbg !4469
  br i1 %137, label %232, label %138, !dbg !4470

; <label>:138:                                    ; preds = %135
  %139 = load %struct._list*, %struct._list** %7, align 8, !dbg !4471
  %140 = getelementptr inbounds %struct._list, %struct._list* %139, i32 0, i32 0, !dbg !4473
  %141 = load %struct._element*, %struct._element** %140, align 8, !dbg !4473
  %142 = icmp eq %struct._element* %141, null, !dbg !4474
  br i1 %142, label %143, label %148, !dbg !4475

; <label>:143:                                    ; preds = %138
  %144 = load %struct._list*, %struct._list** %7, align 8, !dbg !4476
  %145 = getelementptr inbounds %struct._list, %struct._list* %144, i32 0, i32 1, !dbg !4478
  %146 = load %struct._element*, %struct._element** %145, align 8, !dbg !4478
  %147 = icmp eq %struct._element* %146, null, !dbg !4479
  br i1 %147, label %232, label %148, !dbg !4480

; <label>:148:                                    ; preds = %143, %138
  %149 = load %struct._list*, %struct._list** %7, align 8, !dbg !4481
  %150 = getelementptr inbounds %struct._list, %struct._list* %149, i32 0, i32 2, !dbg !4483
  %151 = load i32, i32* %150, align 8, !dbg !4483
  %152 = icmp ugt i32 %151, 1, !dbg !4484
  br i1 %152, label %153, label %232, !dbg !4485

; <label>:153:                                    ; preds = %148
  %154 = load %struct._list*, %struct._list** %7, align 8, !dbg !4486
  %155 = icmp ne %struct._list* %154, null, !dbg !4489
  br i1 %155, label %156, label %166, !dbg !4489

; <label>:156:                                    ; preds = %153
  %157 = load %struct._list*, %struct._list** %7, align 8, !dbg !4490
  %158 = icmp ne %struct._list* %157, null, !dbg !4492
  br i1 %158, label %160, label %159, !dbg !4493

; <label>:159:                                    ; preds = %156
  br label %164, !dbg !4494

; <label>:160:                                    ; preds = %156
  %161 = load %struct._list*, %struct._list** %7, align 8, !dbg !4496
  %162 = getelementptr inbounds %struct._list, %struct._list* %161, i32 0, i32 0, !dbg !4498
  %163 = load %struct._element*, %struct._element** %162, align 8, !dbg !4498
  br label %164, !dbg !4499

; <label>:164:                                    ; preds = %160, %159
  %165 = phi %struct._element* [ null, %159 ], [ %163, %160 ], !dbg !4500
  br label %167, !dbg !4502

; <label>:166:                                    ; preds = %153
  br label %167, !dbg !4503

; <label>:167:                                    ; preds = %166, %164
  %168 = phi %struct._element* [ %165, %164 ], [ null, %166 ], !dbg !4505
  store %struct._element* %168, %struct._element** %8, align 8, !dbg !4507
  br label %169, !dbg !4508

; <label>:169:                                    ; preds = %227, %167
  %170 = load %struct._element*, %struct._element** %8, align 8, !dbg !4509
  %171 = icmp ne %struct._element* %170, null, !dbg !4512
  br i1 %171, label %172, label %177, !dbg !4513

; <label>:172:                                    ; preds = %169
  %173 = load %struct._element*, %struct._element** %8, align 8, !dbg !4514
  %174 = getelementptr inbounds %struct._element, %struct._element* %173, i32 0, i32 2, !dbg !4516
  %175 = load i8*, i8** %174, align 8, !dbg !4516
  %176 = bitcast i8* %175 to %struct._vrrp_t*, !dbg !4517
  store %struct._vrrp_t* %176, %struct._vrrp_t** %10, align 8, !dbg !4518
  br label %177

; <label>:177:                                    ; preds = %172, %169
  %178 = phi i1 [ false, %169 ], [ true, %172 ]
  br i1 %178, label %179, label %231, !dbg !4519

; <label>:179:                                    ; preds = %177
  %180 = load %struct._vrrp_t*, %struct._vrrp_t** %10, align 8, !dbg !4521
  %181 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4524
  %182 = icmp ne %struct._vrrp_t* %180, %181, !dbg !4525
  br i1 %182, label %183, label %226, !dbg !4526

; <label>:183:                                    ; preds = %179
  %184 = load %struct._vrrp_t*, %struct._vrrp_t** %10, align 8, !dbg !4527
  %185 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %184, i32 0, i32 0, !dbg !4528
  %186 = load i16, i16* %185, align 8, !dbg !4528
  %187 = zext i16 %186 to i32, !dbg !4527
  %188 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4529
  %189 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %188, i32 0, i32 0, !dbg !4530
  %190 = load i16, i16* %189, align 8, !dbg !4530
  %191 = zext i16 %190 to i32, !dbg !4529
  %192 = icmp eq i32 %187, %191, !dbg !4531
  br i1 %192, label %193, label %226, !dbg !4532

; <label>:193:                                    ; preds = %183
  %194 = load %struct._vrrp_t*, %struct._vrrp_t** %10, align 8, !dbg !4534
  %195 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %194, i32 0, i32 9, !dbg !4537
  %196 = call zeroext i1 @__test_bit(i32 0, i64* %195), !dbg !4538
  br i1 %196, label %197, label %205, !dbg !4539

; <label>:197:                                    ; preds = %193
  %198 = load %struct._vrrp_t*, %struct._vrrp_t** %10, align 8, !dbg !4540
  %199 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %198, i32 0, i32 4, !dbg !4541
  %200 = load %struct._interface*, %struct._interface** %199, align 8, !dbg !4541
  %201 = getelementptr inbounds %struct._interface, %struct._interface* %200, i32 0, i32 14, !dbg !4542
  %202 = load %struct._interface*, %struct._interface** %201, align 8, !dbg !4542
  %203 = getelementptr inbounds %struct._interface, %struct._interface* %202, i32 0, i32 1, !dbg !4543
  %204 = load i32, i32* %203, align 8, !dbg !4543
  store i32 %204, i32* %12, align 4, !dbg !4544
  br label %211, !dbg !4545

; <label>:205:                                    ; preds = %193
  %206 = load %struct._vrrp_t*, %struct._vrrp_t** %10, align 8, !dbg !4546
  %207 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %206, i32 0, i32 4, !dbg !4547
  %208 = load %struct._interface*, %struct._interface** %207, align 8, !dbg !4547
  %209 = getelementptr inbounds %struct._interface, %struct._interface* %208, i32 0, i32 1, !dbg !4548
  %210 = load i32, i32* %209, align 8, !dbg !4548
  store i32 %210, i32* %12, align 4, !dbg !4549
  br label %211

; <label>:211:                                    ; preds = %205, %197
  %212 = load %struct._interface*, %struct._interface** %11, align 8, !dbg !4550
  %213 = getelementptr inbounds %struct._interface, %struct._interface* %212, i32 0, i32 1, !dbg !4552
  %214 = load i32, i32* %213, align 8, !dbg !4552
  %215 = load i32, i32* %12, align 4, !dbg !4553
  %216 = icmp eq i32 %214, %215, !dbg !4554
  br i1 %216, label %217, label %225, !dbg !4555

; <label>:217:                                    ; preds = %211
  %218 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4556
  %219 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %218, i32 0, i32 36, !dbg !4558
  %220 = load i8, i8* %219, align 4, !dbg !4558
  %221 = zext i8 %220 to i32, !dbg !4556
  %222 = load %struct._interface*, %struct._interface** %11, align 8, !dbg !4559
  %223 = getelementptr inbounds %struct._interface, %struct._interface* %222, i32 0, i32 0, !dbg !4560
  %224 = getelementptr inbounds [16 x i8], [16 x i8]* %223, i32 0, i32 0, !dbg !4559
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.32, i32 0, i32 0), i32 %221, i8* %224), !dbg !4561
  store i1 false, i1* %1, align 1, !dbg !4562
  br label %920, !dbg !4562

; <label>:225:                                    ; preds = %211
  br label %226, !dbg !4563

; <label>:226:                                    ; preds = %225, %183, %179
  br label %227, !dbg !4564

; <label>:227:                                    ; preds = %226
  %228 = load %struct._element*, %struct._element** %8, align 8, !dbg !4565
  %229 = getelementptr inbounds %struct._element, %struct._element* %228, i32 0, i32 0, !dbg !4567
  %230 = load %struct._element*, %struct._element** %229, align 8, !dbg !4567
  store %struct._element* %230, %struct._element** %8, align 8, !dbg !4568
  br label %169, !dbg !4569, !llvm.loop !4570

; <label>:231:                                    ; preds = %177
  br label %232, !dbg !4572

; <label>:232:                                    ; preds = %231, %148, %143, %135
  br label %233, !dbg !4573

; <label>:233:                                    ; preds = %232
  %234 = load %struct._element*, %struct._element** %2, align 8, !dbg !4574
  %235 = getelementptr inbounds %struct._element, %struct._element* %234, i32 0, i32 0, !dbg !4576
  %236 = load %struct._element*, %struct._element** %235, align 8, !dbg !4576
  store %struct._element* %236, %struct._element** %2, align 8, !dbg !4577
  br label %103, !dbg !4578, !llvm.loop !4579

; <label>:237:                                    ; preds = %111
  %238 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4581
  %239 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %238, i32 0, i32 4, !dbg !4583
  %240 = load %struct._list*, %struct._list** %239, align 8, !dbg !4583
  %241 = icmp ne %struct._list* %240, null, !dbg !4584
  br i1 %241, label %242, label %256, !dbg !4584

; <label>:242:                                    ; preds = %237
  %243 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4585
  %244 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %243, i32 0, i32 4, !dbg !4587
  %245 = load %struct._list*, %struct._list** %244, align 8, !dbg !4587
  %246 = icmp ne %struct._list* %245, null, !dbg !4588
  br i1 %246, label %248, label %247, !dbg !4589

; <label>:247:                                    ; preds = %242
  br label %254, !dbg !4590

; <label>:248:                                    ; preds = %242
  %249 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4592
  %250 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %249, i32 0, i32 4, !dbg !4594
  %251 = load %struct._list*, %struct._list** %250, align 8, !dbg !4594
  %252 = getelementptr inbounds %struct._list, %struct._list* %251, i32 0, i32 0, !dbg !4595
  %253 = load %struct._element*, %struct._element** %252, align 8, !dbg !4595
  br label %254, !dbg !4596

; <label>:254:                                    ; preds = %248, %247
  %255 = phi %struct._element* [ null, %247 ], [ %253, %248 ], !dbg !4597
  br label %257, !dbg !4599

; <label>:256:                                    ; preds = %237
  br label %257, !dbg !4600

; <label>:257:                                    ; preds = %256, %254
  %258 = phi %struct._element* [ %255, %254 ], [ null, %256 ], !dbg !4602
  store %struct._element* %258, %struct._element** %2, align 8, !dbg !4604
  br label %259, !dbg !4605

; <label>:259:                                    ; preds = %297, %257
  %260 = load %struct._element*, %struct._element** %2, align 8, !dbg !4606
  %261 = icmp ne %struct._element* %260, null, !dbg !4609
  br i1 %261, label %262, label %270, !dbg !4610

; <label>:262:                                    ; preds = %259
  %263 = load %struct._element*, %struct._element** %2, align 8, !dbg !4611
  %264 = getelementptr inbounds %struct._element, %struct._element* %263, i32 0, i32 0, !dbg !4613
  %265 = load %struct._element*, %struct._element** %264, align 8, !dbg !4613
  store %struct._element* %265, %struct._element** %9, align 8, !dbg !4614
  %266 = load %struct._element*, %struct._element** %2, align 8, !dbg !4615
  %267 = getelementptr inbounds %struct._element, %struct._element* %266, i32 0, i32 2, !dbg !4616
  %268 = load i8*, i8** %267, align 8, !dbg !4616
  %269 = bitcast i8* %268 to %struct._vrrp_sgroup*, !dbg !4617
  store %struct._vrrp_sgroup* %269, %struct._vrrp_sgroup** %6, align 8, !dbg !4618
  br label %270

; <label>:270:                                    ; preds = %262, %259
  %271 = phi i1 [ false, %259 ], [ true, %262 ]
  br i1 %271, label %272, label %299, !dbg !4619

; <label>:272:                                    ; preds = %270
  %273 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %6, align 8, !dbg !4621
  %274 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %273, i32 0, i32 1, !dbg !4624
  %275 = load %struct._vector*, %struct._vector** %274, align 8, !dbg !4624
  %276 = icmp ne %struct._vector* %275, null, !dbg !4621
  br i1 %276, label %285, label %277, !dbg !4625

; <label>:277:                                    ; preds = %272
  %278 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %6, align 8, !dbg !4626
  %279 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %278, i32 0, i32 0, !dbg !4628
  %280 = load i8*, i8** %279, align 8, !dbg !4628
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.33, i32 0, i32 0), i8* %280), !dbg !4629
  %281 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4630
  %282 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %281, i32 0, i32 4, !dbg !4631
  %283 = load %struct._list*, %struct._list** %282, align 8, !dbg !4631
  %284 = load %struct._element*, %struct._element** %2, align 8, !dbg !4632
  call void @free_list_element(%struct._list* %283, %struct._element* %284), !dbg !4633
  br label %297, !dbg !4634

; <label>:285:                                    ; preds = %272
  %286 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %6, align 8, !dbg !4635
  call void @vrrp_sync_set_group(%struct._vrrp_sgroup* %286), !dbg !4636
  %287 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %6, align 8, !dbg !4637
  %288 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %287, i32 0, i32 2, !dbg !4639
  %289 = load %struct._list*, %struct._list** %288, align 8, !dbg !4639
  %290 = icmp ne %struct._list* %289, null, !dbg !4637
  br i1 %290, label %296, label %291, !dbg !4640

; <label>:291:                                    ; preds = %285
  %292 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4641
  %293 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %292, i32 0, i32 4, !dbg !4643
  %294 = load %struct._list*, %struct._list** %293, align 8, !dbg !4643
  %295 = load %struct._element*, %struct._element** %2, align 8, !dbg !4644
  call void @free_list_element(%struct._list* %294, %struct._element* %295), !dbg !4645
  br label %297, !dbg !4646

; <label>:296:                                    ; preds = %285
  br label %297, !dbg !4647

; <label>:297:                                    ; preds = %296, %291, %277
  %298 = load %struct._element*, %struct._element** %9, align 8, !dbg !4648
  store %struct._element* %298, %struct._element** %2, align 8, !dbg !4650
  br label %259, !dbg !4651, !llvm.loop !4652

; <label>:299:                                    ; preds = %270
  %300 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4654
  %301 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %300, i32 0, i32 5, !dbg !4656
  %302 = load %struct._list*, %struct._list** %301, align 8, !dbg !4656
  %303 = icmp ne %struct._list* %302, null, !dbg !4657
  br i1 %303, label %304, label %318, !dbg !4657

; <label>:304:                                    ; preds = %299
  %305 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4658
  %306 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %305, i32 0, i32 5, !dbg !4660
  %307 = load %struct._list*, %struct._list** %306, align 8, !dbg !4660
  %308 = icmp ne %struct._list* %307, null, !dbg !4661
  br i1 %308, label %310, label %309, !dbg !4662

; <label>:309:                                    ; preds = %304
  br label %316, !dbg !4663

; <label>:310:                                    ; preds = %304
  %311 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4665
  %312 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %311, i32 0, i32 5, !dbg !4667
  %313 = load %struct._list*, %struct._list** %312, align 8, !dbg !4667
  %314 = getelementptr inbounds %struct._list, %struct._list* %313, i32 0, i32 0, !dbg !4668
  %315 = load %struct._element*, %struct._element** %314, align 8, !dbg !4668
  br label %316, !dbg !4669

; <label>:316:                                    ; preds = %310, %309
  %317 = phi %struct._element* [ null, %309 ], [ %315, %310 ], !dbg !4670
  br label %319, !dbg !4672

; <label>:318:                                    ; preds = %299
  br label %319, !dbg !4673

; <label>:319:                                    ; preds = %318, %316
  %320 = phi %struct._element* [ %317, %316 ], [ null, %318 ], !dbg !4675
  store %struct._element* %320, %struct._element** %2, align 8, !dbg !4677
  br label %321, !dbg !4678

; <label>:321:                                    ; preds = %352, %319
  %322 = load %struct._element*, %struct._element** %2, align 8, !dbg !4679
  %323 = icmp ne %struct._element* %322, null, !dbg !4682
  br i1 %323, label %324, label %329, !dbg !4683

; <label>:324:                                    ; preds = %321
  %325 = load %struct._element*, %struct._element** %2, align 8, !dbg !4684
  %326 = getelementptr inbounds %struct._element, %struct._element* %325, i32 0, i32 2, !dbg !4686
  %327 = load i8*, i8** %326, align 8, !dbg !4686
  %328 = bitcast i8* %327 to %struct._vrrp_t*, !dbg !4687
  store %struct._vrrp_t* %328, %struct._vrrp_t** %4, align 8, !dbg !4688
  br label %329

; <label>:329:                                    ; preds = %324, %321
  %330 = phi i1 [ false, %321 ], [ true, %324 ]
  br i1 %330, label %331, label %356, !dbg !4689

; <label>:331:                                    ; preds = %329
  %332 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4691
  %333 = call zeroext i1 @vrrp_complete_instance(%struct._vrrp_t* %332), !dbg !4694
  br i1 %333, label %335, label %334, !dbg !4695

; <label>:334:                                    ; preds = %331
  store i1 false, i1* %1, align 1, !dbg !4696
  br label %920, !dbg !4696

; <label>:335:                                    ; preds = %331
  %336 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4697
  %337 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %336, i32 0, i32 4, !dbg !4699
  %338 = load %struct._interface*, %struct._interface** %337, align 8, !dbg !4699
  %339 = getelementptr inbounds %struct._interface, %struct._interface* %338, i32 0, i32 6, !dbg !4700
  %340 = load i32, i32* %339, align 8, !dbg !4700
  %341 = zext i32 %340 to i64, !dbg !4697
  %342 = load i64, i64* %13, align 8, !dbg !4701
  %343 = icmp ugt i64 %341, %342, !dbg !4702
  br i1 %343, label %344, label %351, !dbg !4703

; <label>:344:                                    ; preds = %335
  %345 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4704
  %346 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %345, i32 0, i32 4, !dbg !4705
  %347 = load %struct._interface*, %struct._interface** %346, align 8, !dbg !4705
  %348 = getelementptr inbounds %struct._interface, %struct._interface* %347, i32 0, i32 6, !dbg !4706
  %349 = load i32, i32* %348, align 8, !dbg !4706
  %350 = zext i32 %349 to i64, !dbg !4704
  store i64 %350, i64* %13, align 8, !dbg !4707
  br label %351, !dbg !4708

; <label>:351:                                    ; preds = %344, %335
  br label %352, !dbg !4709

; <label>:352:                                    ; preds = %351
  %353 = load %struct._element*, %struct._element** %2, align 8, !dbg !4710
  %354 = getelementptr inbounds %struct._element, %struct._element* %353, i32 0, i32 0, !dbg !4712
  %355 = load %struct._element*, %struct._element** %354, align 8, !dbg !4712
  store %struct._element* %355, %struct._element** %2, align 8, !dbg !4713
  br label %321, !dbg !4714, !llvm.loop !4715

; <label>:356:                                    ; preds = %329
  call void @static_track_group_init(), !dbg !4717
  call void @sync_group_tracking_init(), !dbg !4718
  %357 = call zeroext i1 @__test_bit(i32 11, i64* @debug), !dbg !4719
  br i1 %357, label %358, label %359, !dbg !4721

; <label>:358:                                    ; preds = %356
  store i1 true, i1* %1, align 1, !dbg !4722
  br label %920, !dbg !4722

; <label>:359:                                    ; preds = %356
  %360 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4723
  %361 = getelementptr inbounds %struct._data, %struct._data* %360, i32 0, i32 30, !dbg !4725
  %362 = load i32, i32* %361, align 8, !dbg !4725
  %363 = icmp ne i32 %362, 0, !dbg !4723
  br i1 %363, label %369, label %364, !dbg !4726

; <label>:364:                                    ; preds = %359
  %365 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !4727
  %366 = getelementptr inbounds %struct._data, %struct._data* %365, i32 0, i32 31, !dbg !4729
  %367 = load i32, i32* %366, align 4, !dbg !4729
  %368 = icmp ne i32 %367, 0, !dbg !4727
  br i1 %368, label %369, label %370, !dbg !4730

; <label>:369:                                    ; preds = %364, %359
  call void @set_default_garp_delay(), !dbg !4731
  br label %370, !dbg !4731

; <label>:370:                                    ; preds = %369, %364
  call void @process_static_entries(), !dbg !4732
  %371 = load i8, i8* @monitor_ipv4_routes, align 1, !dbg !4733
  %372 = trunc i8 %371 to i1, !dbg !4733
  %373 = load i8, i8* @monitor_ipv6_routes, align 1, !dbg !4734
  %374 = trunc i8 %373 to i1, !dbg !4734
  %375 = load i8, i8* @monitor_ipv4_rules, align 1, !dbg !4735
  %376 = trunc i8 %375 to i1, !dbg !4735
  %377 = load i8, i8* @monitor_ipv6_rules, align 1, !dbg !4736
  %378 = trunc i8 %377 to i1, !dbg !4736
  call void @set_extra_netlink_monitoring(i1 zeroext %372, i1 zeroext %374, i1 zeroext %376, i1 zeroext %378), !dbg !4737
  %379 = load i8, i8* @reload, align 1, !dbg !4738
  %380 = trunc i8 %379 to i1, !dbg !4738
  br i1 %380, label %382, label %381, !dbg !4740

; <label>:381:                                    ; preds = %370
  call void @iptables_cleanup(), !dbg !4741
  br label %382, !dbg !4741

; <label>:382:                                    ; preds = %381, %370
  call void @init_interface_linkbeat(), !dbg !4742
  call void @initialise_interface_tracking_priorities(), !dbg !4743
  %383 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4744
  %384 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %383, i32 0, i32 5, !dbg !4746
  %385 = load %struct._list*, %struct._list** %384, align 8, !dbg !4746
  %386 = icmp ne %struct._list* %385, null, !dbg !4747
  br i1 %386, label %387, label %401, !dbg !4747

; <label>:387:                                    ; preds = %382
  %388 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4748
  %389 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %388, i32 0, i32 5, !dbg !4750
  %390 = load %struct._list*, %struct._list** %389, align 8, !dbg !4750
  %391 = icmp ne %struct._list* %390, null, !dbg !4751
  br i1 %391, label %393, label %392, !dbg !4752

; <label>:392:                                    ; preds = %387
  br label %399, !dbg !4753

; <label>:393:                                    ; preds = %387
  %394 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4755
  %395 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %394, i32 0, i32 5, !dbg !4757
  %396 = load %struct._list*, %struct._list** %395, align 8, !dbg !4757
  %397 = getelementptr inbounds %struct._list, %struct._list* %396, i32 0, i32 0, !dbg !4758
  %398 = load %struct._element*, %struct._element** %397, align 8, !dbg !4758
  br label %399, !dbg !4759

; <label>:399:                                    ; preds = %393, %392
  %400 = phi %struct._element* [ null, %392 ], [ %398, %393 ], !dbg !4760
  br label %402, !dbg !4762

; <label>:401:                                    ; preds = %382
  br label %402, !dbg !4763

; <label>:402:                                    ; preds = %401, %399
  %403 = phi %struct._element* [ %400, %399 ], [ null, %401 ], !dbg !4765
  store %struct._element* %403, %struct._element** %2, align 8, !dbg !4767
  br label %404, !dbg !4768

; <label>:404:                                    ; preds = %475, %402
  %405 = load %struct._element*, %struct._element** %2, align 8, !dbg !4769
  %406 = icmp ne %struct._element* %405, null, !dbg !4772
  br i1 %406, label %407, label %412, !dbg !4773

; <label>:407:                                    ; preds = %404
  %408 = load %struct._element*, %struct._element** %2, align 8, !dbg !4774
  %409 = getelementptr inbounds %struct._element, %struct._element* %408, i32 0, i32 2, !dbg !4776
  %410 = load i8*, i8** %409, align 8, !dbg !4776
  %411 = bitcast i8* %410 to %struct._vrrp_t*, !dbg !4777
  store %struct._vrrp_t* %411, %struct._vrrp_t** %4, align 8, !dbg !4778
  br label %412

; <label>:412:                                    ; preds = %407, %404
  %413 = phi i1 [ false, %404 ], [ true, %407 ]
  br i1 %413, label %414, label %479, !dbg !4779

; <label>:414:                                    ; preds = %412
  %415 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4781
  call void @initialise_tracking_priorities(%struct._vrrp_t* %415), !dbg !4783
  %416 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4784
  %417 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %416, i32 0, i32 2, !dbg !4786
  %418 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %417, align 8, !dbg !4786
  %419 = icmp ne %struct._vrrp_sgroup* %418, null, !dbg !4784
  br i1 %419, label %420, label %474, !dbg !4787

; <label>:420:                                    ; preds = %414
  %421 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4788
  %422 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %421, i32 0, i32 55, !dbg !4791
  %423 = load i32, i32* %422, align 8, !dbg !4791
  %424 = icmp eq i32 %423, 3, !dbg !4792
  br i1 %424, label %425, label %449, !dbg !4793

; <label>:425:                                    ; preds = %420
  %426 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4794
  %427 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %426, i32 0, i32 2, !dbg !4797
  %428 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %427, align 8, !dbg !4797
  %429 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %428, i32 0, i32 5, !dbg !4798
  %430 = load i32, i32* %429, align 8, !dbg !4798
  %431 = icmp ne i32 %430, 3, !dbg !4799
  br i1 %431, label %432, label %442, !dbg !4800

; <label>:432:                                    ; preds = %425
  %433 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4801
  %434 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %433, i32 0, i32 2, !dbg !4803
  %435 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %434, align 8, !dbg !4803
  %436 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %435, i32 0, i32 5, !dbg !4804
  store i32 3, i32* %436, align 8, !dbg !4805
  %437 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4806
  %438 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %437, i32 0, i32 2, !dbg !4807
  %439 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %438, align 8, !dbg !4807
  %440 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %439, i32 0, i32 0, !dbg !4808
  %441 = load i8*, i8** %440, align 8, !dbg !4808
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.34, i32 0, i32 0), i8* %441), !dbg !4809
  br label %442, !dbg !4810

; <label>:442:                                    ; preds = %432, %425
  %443 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4811
  %444 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %443, i32 0, i32 2, !dbg !4812
  %445 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %444, align 8, !dbg !4812
  %446 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %445, i32 0, i32 3, !dbg !4813
  %447 = load i32, i32* %446, align 8, !dbg !4814
  %448 = add i32 %447, 1, !dbg !4814
  store i32 %448, i32* %446, align 8, !dbg !4814
  br label %449, !dbg !4815

; <label>:449:                                    ; preds = %442, %420
  %450 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4816
  %451 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %450, i32 0, i32 15, !dbg !4818
  %452 = load i32, i32* %451, align 4, !dbg !4818
  %453 = icmp ne i32 %452, 0, !dbg !4816
  br i1 %453, label %454, label %473, !dbg !4819

; <label>:454:                                    ; preds = %449
  %455 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4820
  %456 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %455, i32 0, i32 2, !dbg !4822
  %457 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %456, align 8, !dbg !4822
  %458 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %457, i32 0, i32 4, !dbg !4823
  %459 = load i32, i32* %458, align 4, !dbg !4824
  %460 = add i32 %459, 1, !dbg !4824
  store i32 %460, i32* %458, align 4, !dbg !4824
  %461 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4825
  %462 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %461, i32 0, i32 2, !dbg !4827
  %463 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %462, align 8, !dbg !4827
  %464 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %463, i32 0, i32 5, !dbg !4828
  %465 = load i32, i32* %464, align 8, !dbg !4828
  %466 = icmp ne i32 %465, 3, !dbg !4829
  br i1 %466, label %467, label %472, !dbg !4830

; <label>:467:                                    ; preds = %454
  %468 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4831
  %469 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %468, i32 0, i32 2, !dbg !4832
  %470 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %469, align 8, !dbg !4832
  %471 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %470, i32 0, i32 5, !dbg !4833
  store i32 0, i32* %471, align 8, !dbg !4834
  br label %472, !dbg !4831

; <label>:472:                                    ; preds = %467, %454
  br label %473, !dbg !4835

; <label>:473:                                    ; preds = %472, %449
  br label %474, !dbg !4836

; <label>:474:                                    ; preds = %473, %414
  br label %475, !dbg !4837

; <label>:475:                                    ; preds = %474
  %476 = load %struct._element*, %struct._element** %2, align 8, !dbg !4838
  %477 = getelementptr inbounds %struct._element, %struct._element* %476, i32 0, i32 0, !dbg !4840
  %478 = load %struct._element*, %struct._element** %477, align 8, !dbg !4840
  store %struct._element* %478, %struct._element** %2, align 8, !dbg !4841
  br label %404, !dbg !4842, !llvm.loop !4843

; <label>:479:                                    ; preds = %412
  %480 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4845
  %481 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %480, i32 0, i32 4, !dbg !4847
  %482 = load %struct._list*, %struct._list** %481, align 8, !dbg !4847
  %483 = icmp ne %struct._list* %482, null, !dbg !4848
  br i1 %483, label %484, label %498, !dbg !4848

; <label>:484:                                    ; preds = %479
  %485 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4849
  %486 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %485, i32 0, i32 4, !dbg !4851
  %487 = load %struct._list*, %struct._list** %486, align 8, !dbg !4851
  %488 = icmp ne %struct._list* %487, null, !dbg !4852
  br i1 %488, label %490, label %489, !dbg !4853

; <label>:489:                                    ; preds = %484
  br label %496, !dbg !4854

; <label>:490:                                    ; preds = %484
  %491 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !4856
  %492 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %491, i32 0, i32 4, !dbg !4858
  %493 = load %struct._list*, %struct._list** %492, align 8, !dbg !4858
  %494 = getelementptr inbounds %struct._list, %struct._list* %493, i32 0, i32 0, !dbg !4859
  %495 = load %struct._element*, %struct._element** %494, align 8, !dbg !4859
  br label %496, !dbg !4860

; <label>:496:                                    ; preds = %490, %489
  %497 = phi %struct._element* [ null, %489 ], [ %495, %490 ], !dbg !4861
  br label %499, !dbg !4863

; <label>:498:                                    ; preds = %479
  br label %499, !dbg !4864

; <label>:499:                                    ; preds = %498, %496
  %500 = phi %struct._element* [ %497, %496 ], [ null, %498 ], !dbg !4866
  store %struct._element* %500, %struct._element** %3, align 8, !dbg !4868
  br label %501, !dbg !4869

; <label>:501:                                    ; preds = %619, %499
  %502 = load %struct._element*, %struct._element** %3, align 8, !dbg !4870
  %503 = icmp ne %struct._element* %502, null, !dbg !4873
  br i1 %503, label %504, label %509, !dbg !4874

; <label>:504:                                    ; preds = %501
  %505 = load %struct._element*, %struct._element** %3, align 8, !dbg !4875
  %506 = getelementptr inbounds %struct._element, %struct._element* %505, i32 0, i32 2, !dbg !4877
  %507 = load i8*, i8** %506, align 8, !dbg !4877
  %508 = bitcast i8* %507 to %struct._vrrp_sgroup*, !dbg !4878
  store %struct._vrrp_sgroup* %508, %struct._vrrp_sgroup** %6, align 8, !dbg !4879
  br label %509

; <label>:509:                                    ; preds = %504, %501
  %510 = phi i1 [ false, %501 ], [ true, %504 ]
  br i1 %510, label %511, label %623, !dbg !4880

; <label>:511:                                    ; preds = %509
  store i8 0, i8* %15, align 1, !dbg !4882
  store i8 0, i8* %14, align 1, !dbg !4884
  %512 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %6, align 8, !dbg !4885
  %513 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %512, i32 0, i32 2, !dbg !4887
  %514 = load %struct._list*, %struct._list** %513, align 8, !dbg !4887
  %515 = icmp ne %struct._list* %514, null, !dbg !4888
  br i1 %515, label %516, label %530, !dbg !4888

; <label>:516:                                    ; preds = %511
  %517 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %6, align 8, !dbg !4889
  %518 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %517, i32 0, i32 2, !dbg !4891
  %519 = load %struct._list*, %struct._list** %518, align 8, !dbg !4891
  %520 = icmp ne %struct._list* %519, null, !dbg !4892
  br i1 %520, label %522, label %521, !dbg !4893

; <label>:521:                                    ; preds = %516
  br label %528, !dbg !4894

; <label>:522:                                    ; preds = %516
  %523 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %6, align 8, !dbg !4896
  %524 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %523, i32 0, i32 2, !dbg !4898
  %525 = load %struct._list*, %struct._list** %524, align 8, !dbg !4898
  %526 = getelementptr inbounds %struct._list, %struct._list* %525, i32 0, i32 0, !dbg !4899
  %527 = load %struct._element*, %struct._element** %526, align 8, !dbg !4899
  br label %528, !dbg !4900

; <label>:528:                                    ; preds = %522, %521
  %529 = phi %struct._element* [ null, %521 ], [ %527, %522 ], !dbg !4901
  br label %531, !dbg !4903

; <label>:530:                                    ; preds = %511
  br label %531, !dbg !4904

; <label>:531:                                    ; preds = %530, %528
  %532 = phi %struct._element* [ %529, %528 ], [ null, %530 ], !dbg !4906
  store %struct._element* %532, %struct._element** %2, align 8, !dbg !4908
  br label %533, !dbg !4909

; <label>:533:                                    ; preds = %614, %531
  %534 = load %struct._element*, %struct._element** %2, align 8, !dbg !4910
  %535 = icmp ne %struct._element* %534, null, !dbg !4913
  br i1 %535, label %536, label %541, !dbg !4914

; <label>:536:                                    ; preds = %533
  %537 = load %struct._element*, %struct._element** %2, align 8, !dbg !4915
  %538 = getelementptr inbounds %struct._element, %struct._element* %537, i32 0, i32 2, !dbg !4917
  %539 = load i8*, i8** %538, align 8, !dbg !4917
  %540 = bitcast i8* %539 to %struct._vrrp_t*, !dbg !4918
  store %struct._vrrp_t* %540, %struct._vrrp_t** %4, align 8, !dbg !4919
  br label %541

; <label>:541:                                    ; preds = %536, %533
  %542 = phi i1 [ false, %533 ], [ true, %536 ]
  br i1 %542, label %543, label %618, !dbg !4920

; <label>:543:                                    ; preds = %541
  %544 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4922
  %545 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %544, i32 0, i32 56, !dbg !4925
  %546 = load i32, i32* %545, align 4, !dbg !4925
  %547 = icmp eq i32 %546, 1, !dbg !4926
  br i1 %547, label %554, label %548, !dbg !4927

; <label>:548:                                    ; preds = %543
  %549 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4928
  %550 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %549, i32 0, i32 37, !dbg !4930
  %551 = load i8, i8* %550, align 1, !dbg !4930
  %552 = zext i8 %551 to i32, !dbg !4928
  %553 = icmp ne i32 %552, 255, !dbg !4931
  br i1 %553, label %554, label %555, !dbg !4932

; <label>:554:                                    ; preds = %548, %543
  store i8 1, i8* %15, align 1, !dbg !4933
  br label %555, !dbg !4934

; <label>:555:                                    ; preds = %554, %548
  %556 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4935
  %557 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %556, i32 0, i32 56, !dbg !4937
  %558 = load i32, i32* %557, align 4, !dbg !4937
  %559 = icmp eq i32 %558, 2, !dbg !4938
  br i1 %559, label %560, label %561, !dbg !4939

; <label>:560:                                    ; preds = %555
  store i8 1, i8* %14, align 1, !dbg !4940
  br label %561, !dbg !4941

; <label>:561:                                    ; preds = %560, %555
  %562 = load i8, i8* %14, align 1, !dbg !4942
  %563 = trunc i8 %562 to i1, !dbg !4942
  br i1 %563, label %564, label %613, !dbg !4944

; <label>:564:                                    ; preds = %561
  %565 = load i8, i8* %15, align 1, !dbg !4945
  %566 = trunc i8 %565 to i1, !dbg !4945
  br i1 %566, label %567, label %613, !dbg !4947

; <label>:567:                                    ; preds = %564
  %568 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %6, align 8, !dbg !4948
  %569 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %568, i32 0, i32 2, !dbg !4951
  %570 = load %struct._list*, %struct._list** %569, align 8, !dbg !4951
  %571 = icmp ne %struct._list* %570, null, !dbg !4952
  br i1 %571, label %572, label %586, !dbg !4952

; <label>:572:                                    ; preds = %567
  %573 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %6, align 8, !dbg !4953
  %574 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %573, i32 0, i32 2, !dbg !4955
  %575 = load %struct._list*, %struct._list** %574, align 8, !dbg !4955
  %576 = icmp ne %struct._list* %575, null, !dbg !4956
  br i1 %576, label %578, label %577, !dbg !4957

; <label>:577:                                    ; preds = %572
  br label %584, !dbg !4958

; <label>:578:                                    ; preds = %572
  %579 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %6, align 8, !dbg !4960
  %580 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %579, i32 0, i32 2, !dbg !4962
  %581 = load %struct._list*, %struct._list** %580, align 8, !dbg !4962
  %582 = getelementptr inbounds %struct._list, %struct._list* %581, i32 0, i32 0, !dbg !4963
  %583 = load %struct._element*, %struct._element** %582, align 8, !dbg !4963
  br label %584, !dbg !4964

; <label>:584:                                    ; preds = %578, %577
  %585 = phi %struct._element* [ null, %577 ], [ %583, %578 ], !dbg !4965
  br label %587, !dbg !4967

; <label>:586:                                    ; preds = %567
  br label %587, !dbg !4968

; <label>:587:                                    ; preds = %586, %584
  %588 = phi %struct._element* [ %585, %584 ], [ null, %586 ], !dbg !4970
  store %struct._element* %588, %struct._element** %2, align 8, !dbg !4972
  br label %589, !dbg !4973

; <label>:589:                                    ; preds = %608, %587
  %590 = load %struct._element*, %struct._element** %2, align 8, !dbg !4974
  %591 = icmp ne %struct._element* %590, null, !dbg !4977
  br i1 %591, label %592, label %597, !dbg !4978

; <label>:592:                                    ; preds = %589
  %593 = load %struct._element*, %struct._element** %2, align 8, !dbg !4979
  %594 = getelementptr inbounds %struct._element, %struct._element* %593, i32 0, i32 2, !dbg !4981
  %595 = load i8*, i8** %594, align 8, !dbg !4981
  %596 = bitcast i8* %595 to %struct._vrrp_t*, !dbg !4982
  store %struct._vrrp_t* %596, %struct._vrrp_t** %4, align 8, !dbg !4983
  br label %597

; <label>:597:                                    ; preds = %592, %589
  %598 = phi i1 [ false, %589 ], [ true, %592 ]
  br i1 %598, label %599, label %612, !dbg !4984

; <label>:599:                                    ; preds = %597
  %600 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4986
  %601 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %600, i32 0, i32 56, !dbg !4989
  %602 = load i32, i32* %601, align 4, !dbg !4989
  %603 = icmp eq i32 %602, 2, !dbg !4990
  br i1 %603, label %604, label %607, !dbg !4991

; <label>:604:                                    ; preds = %599
  %605 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !4992
  %606 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %605, i32 0, i32 56, !dbg !4993
  store i32 1, i32* %606, align 4, !dbg !4994
  br label %607, !dbg !4992

; <label>:607:                                    ; preds = %604, %599
  br label %608, !dbg !4995

; <label>:608:                                    ; preds = %607
  %609 = load %struct._element*, %struct._element** %2, align 8, !dbg !4996
  %610 = getelementptr inbounds %struct._element, %struct._element* %609, i32 0, i32 0, !dbg !4998
  %611 = load %struct._element*, %struct._element** %610, align 8, !dbg !4998
  store %struct._element* %611, %struct._element** %2, align 8, !dbg !4999
  br label %589, !dbg !5000, !llvm.loop !5001

; <label>:612:                                    ; preds = %597
  br label %618, !dbg !5003

; <label>:613:                                    ; preds = %564, %561
  br label %614, !dbg !5004

; <label>:614:                                    ; preds = %613
  %615 = load %struct._element*, %struct._element** %2, align 8, !dbg !5005
  %616 = getelementptr inbounds %struct._element, %struct._element* %615, i32 0, i32 0, !dbg !5007
  %617 = load %struct._element*, %struct._element** %616, align 8, !dbg !5007
  store %struct._element* %617, %struct._element** %2, align 8, !dbg !5008
  br label %533, !dbg !5009, !llvm.loop !5010

; <label>:618:                                    ; preds = %612, %541
  br label %619, !dbg !5012

; <label>:619:                                    ; preds = %618
  %620 = load %struct._element*, %struct._element** %3, align 8, !dbg !5013
  %621 = getelementptr inbounds %struct._element, %struct._element* %620, i32 0, i32 0, !dbg !5015
  %622 = load %struct._element*, %struct._element** %621, align 8, !dbg !5015
  store %struct._element* %622, %struct._element** %3, align 8, !dbg !5016
  br label %501, !dbg !5017, !llvm.loop !5018

; <label>:623:                                    ; preds = %509
  %624 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5020
  %625 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %624, i32 0, i32 5, !dbg !5022
  %626 = load %struct._list*, %struct._list** %625, align 8, !dbg !5022
  %627 = icmp ne %struct._list* %626, null, !dbg !5023
  br i1 %627, label %629, label %628, !dbg !5024

; <label>:628:                                    ; preds = %623
  br label %635, !dbg !5025

; <label>:629:                                    ; preds = %623
  %630 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5027
  %631 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %630, i32 0, i32 5, !dbg !5029
  %632 = load %struct._list*, %struct._list** %631, align 8, !dbg !5029
  %633 = getelementptr inbounds %struct._list, %struct._list* %632, i32 0, i32 0, !dbg !5030
  %634 = load %struct._element*, %struct._element** %633, align 8, !dbg !5030
  br label %635, !dbg !5031

; <label>:635:                                    ; preds = %629, %628
  %636 = phi %struct._element* [ null, %628 ], [ %634, %629 ], !dbg !5032
  store %struct._element* %636, %struct._element** %2, align 8, !dbg !5034
  br label %637, !dbg !5035

; <label>:637:                                    ; preds = %669, %635
  %638 = load %struct._element*, %struct._element** %2, align 8, !dbg !5036
  %639 = icmp ne %struct._element* %638, null, !dbg !5039
  br i1 %639, label %640, label %673, !dbg !5039

; <label>:640:                                    ; preds = %637
  %641 = load %struct._element*, %struct._element** %2, align 8, !dbg !5040
  %642 = getelementptr inbounds %struct._element, %struct._element* %641, i32 0, i32 2, !dbg !5042
  %643 = load i8*, i8** %642, align 8, !dbg !5042
  %644 = bitcast i8* %643 to %struct._vrrp_t*, !dbg !5043
  store %struct._vrrp_t* %644, %struct._vrrp_t** %4, align 8, !dbg !5044
  %645 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5045
  %646 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %645, i32 0, i32 55, !dbg !5047
  %647 = load i32, i32* %646, align 8, !dbg !5047
  %648 = icmp eq i32 %647, 3, !dbg !5048
  br i1 %648, label %661, label %649, !dbg !5049

; <label>:649:                                    ; preds = %640
  %650 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5050
  %651 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %650, i32 0, i32 2, !dbg !5051
  %652 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %651, align 8, !dbg !5051
  %653 = icmp ne %struct._vrrp_sgroup* %652, null, !dbg !5050
  br i1 %653, label %654, label %668, !dbg !5052

; <label>:654:                                    ; preds = %649
  %655 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5053
  %656 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %655, i32 0, i32 2, !dbg !5055
  %657 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %656, align 8, !dbg !5055
  %658 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %657, i32 0, i32 5, !dbg !5056
  %659 = load i32, i32* %658, align 8, !dbg !5056
  %660 = icmp eq i32 %659, 3, !dbg !5057
  br i1 %660, label %661, label %668, !dbg !5058

; <label>:661:                                    ; preds = %654, %640
  %662 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5060
  %663 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %662, i32 0, i32 55, !dbg !5062
  store i32 3, i32* %663, align 8, !dbg !5063
  %664 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5064
  %665 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %664, i32 0, i32 1, !dbg !5065
  %666 = load i8*, i8** %665, align 8, !dbg !5065
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i32 0, i32 0), i8* %666), !dbg !5066
  %667 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5067
  call void @send_instance_notifies(%struct._vrrp_t* %667), !dbg !5068
  br label %668, !dbg !5069

; <label>:668:                                    ; preds = %661, %654, %649
  br label %669, !dbg !5070

; <label>:669:                                    ; preds = %668
  %670 = load %struct._element*, %struct._element** %2, align 8, !dbg !5071
  %671 = getelementptr inbounds %struct._element, %struct._element* %670, i32 0, i32 0, !dbg !5073
  %672 = load %struct._element*, %struct._element** %671, align 8, !dbg !5073
  store %struct._element* %672, %struct._element** %2, align 8, !dbg !5074
  br label %637, !dbg !5075, !llvm.loop !5076

; <label>:673:                                    ; preds = %637
  %674 = load i8, i8* @reload, align 1, !dbg !5078
  %675 = trunc i8 %674 to i1, !dbg !5078
  br i1 %675, label %676, label %730, !dbg !5080

; <label>:676:                                    ; preds = %673
  %677 = load %struct._vrrp_data*, %struct._vrrp_data** @old_vrrp_data, align 8, !dbg !5081
  %678 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %677, i32 0, i32 5, !dbg !5084
  %679 = load %struct._list*, %struct._list** %678, align 8, !dbg !5084
  %680 = icmp ne %struct._list* %679, null, !dbg !5085
  br i1 %680, label %682, label %681, !dbg !5086

; <label>:681:                                    ; preds = %676
  br label %688, !dbg !5087

; <label>:682:                                    ; preds = %676
  %683 = load %struct._vrrp_data*, %struct._vrrp_data** @old_vrrp_data, align 8, !dbg !5089
  %684 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %683, i32 0, i32 5, !dbg !5091
  %685 = load %struct._list*, %struct._list** %684, align 8, !dbg !5091
  %686 = getelementptr inbounds %struct._list, %struct._list* %685, i32 0, i32 0, !dbg !5092
  %687 = load %struct._element*, %struct._element** %686, align 8, !dbg !5092
  br label %688, !dbg !5093

; <label>:688:                                    ; preds = %682, %681
  %689 = phi %struct._element* [ null, %681 ], [ %687, %682 ], !dbg !5094
  store %struct._element* %689, %struct._element** %2, align 8, !dbg !5096
  br label %690, !dbg !5097

; <label>:690:                                    ; preds = %725, %688
  %691 = load %struct._element*, %struct._element** %2, align 8, !dbg !5098
  %692 = icmp ne %struct._element* %691, null, !dbg !5101
  br i1 %692, label %693, label %729, !dbg !5101

; <label>:693:                                    ; preds = %690
  %694 = load %struct._element*, %struct._element** %2, align 8, !dbg !5102
  %695 = getelementptr inbounds %struct._element, %struct._element* %694, i32 0, i32 2, !dbg !5104
  %696 = load i8*, i8** %695, align 8, !dbg !5104
  %697 = bitcast i8* %696 to %struct._vrrp_t*, !dbg !5105
  store %struct._vrrp_t* %697, %struct._vrrp_t** %5, align 8, !dbg !5106
  %698 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !5107
  %699 = call %struct._vrrp_t* @vrrp_exist(%struct._vrrp_t* %698), !dbg !5108
  store %struct._vrrp_t* %699, %struct._vrrp_t** %4, align 8, !dbg !5109
  %700 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5110
  %701 = icmp ne %struct._vrrp_t* %700, null, !dbg !5110
  br i1 %701, label %702, label %724, !dbg !5112

; <label>:702:                                    ; preds = %693
  %703 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5113
  %704 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %703, i32 0, i32 55, !dbg !5116
  %705 = load i32, i32* %704, align 8, !dbg !5116
  %706 = icmp eq i32 %705, 3, !dbg !5117
  br i1 %706, label %712, label %707, !dbg !5118

; <label>:707:                                    ; preds = %702
  %708 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5119
  %709 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %708, i32 0, i32 15, !dbg !5121
  %710 = load i32, i32* %709, align 4, !dbg !5121
  %711 = icmp ne i32 %710, 0, !dbg !5119
  br i1 %711, label %712, label %713, !dbg !5122

; <label>:712:                                    ; preds = %707, %702
  br label %725, !dbg !5123

; <label>:713:                                    ; preds = %707
  %714 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !5124
  %715 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %714, i32 0, i32 55, !dbg !5125
  %716 = load i32, i32* %715, align 8, !dbg !5125
  %717 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5126
  %718 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %717, i32 0, i32 55, !dbg !5127
  store i32 %716, i32* %718, align 8, !dbg !5128
  %719 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !5129
  %720 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %719, i32 0, i32 55, !dbg !5130
  %721 = load i32, i32* %720, align 8, !dbg !5130
  %722 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5131
  %723 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %722, i32 0, i32 56, !dbg !5132
  store i32 %721, i32* %723, align 4, !dbg !5133
  br label %724, !dbg !5134

; <label>:724:                                    ; preds = %713, %693
  br label %725, !dbg !5135

; <label>:725:                                    ; preds = %724, %712
  %726 = load %struct._element*, %struct._element** %2, align 8, !dbg !5136
  %727 = getelementptr inbounds %struct._element, %struct._element* %726, i32 0, i32 0, !dbg !5138
  %728 = load %struct._element*, %struct._element** %727, align 8, !dbg !5138
  store %struct._element* %728, %struct._element** %2, align 8, !dbg !5139
  br label %690, !dbg !5140, !llvm.loop !5141

; <label>:729:                                    ; preds = %690
  br label %730, !dbg !5143

; <label>:730:                                    ; preds = %729, %673
  %731 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5144
  %732 = getelementptr inbounds %struct._data, %struct._data* %731, i32 0, i32 20, !dbg !5146
  %733 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %732, i32 0, i32 7, !dbg !5147
  %734 = load i8*, i8** %733, align 8, !dbg !5147
  %735 = icmp ne i8* %734, null, !dbg !5144
  br i1 %735, label %736, label %844, !dbg !5148

; <label>:736:                                    ; preds = %730
  %737 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5149
  %738 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %737, i32 0, i32 5, !dbg !5152
  %739 = load %struct._list*, %struct._list** %738, align 8, !dbg !5152
  %740 = icmp ne %struct._list* %739, null, !dbg !5153
  br i1 %740, label %742, label %741, !dbg !5154

; <label>:741:                                    ; preds = %736
  br label %748, !dbg !5155

; <label>:742:                                    ; preds = %736
  %743 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5157
  %744 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %743, i32 0, i32 5, !dbg !5159
  %745 = load %struct._list*, %struct._list** %744, align 8, !dbg !5159
  %746 = getelementptr inbounds %struct._list, %struct._list* %745, i32 0, i32 0, !dbg !5160
  %747 = load %struct._element*, %struct._element** %746, align 8, !dbg !5160
  br label %748, !dbg !5161

; <label>:748:                                    ; preds = %742, %741
  %749 = phi %struct._element* [ null, %741 ], [ %747, %742 ], !dbg !5162
  store %struct._element* %749, %struct._element** %2, align 8, !dbg !5164
  br label %750, !dbg !5165

; <label>:750:                                    ; preds = %773, %748
  %751 = load %struct._element*, %struct._element** %2, align 8, !dbg !5166
  %752 = icmp ne %struct._element* %751, null, !dbg !5169
  br i1 %752, label %753, label %777, !dbg !5169

; <label>:753:                                    ; preds = %750
  %754 = load %struct._element*, %struct._element** %2, align 8, !dbg !5170
  %755 = getelementptr inbounds %struct._element, %struct._element* %754, i32 0, i32 2, !dbg !5172
  %756 = load i8*, i8** %755, align 8, !dbg !5172
  %757 = bitcast i8* %756 to %struct._vrrp_t*, !dbg !5173
  store %struct._vrrp_t* %757, %struct._vrrp_t** %4, align 8, !dbg !5174
  %758 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5175
  %759 = getelementptr inbounds %struct._data, %struct._data* %758, i32 0, i32 20, !dbg !5177
  %760 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %759, i32 0, i32 7, !dbg !5178
  %761 = load i8*, i8** %760, align 8, !dbg !5178
  %762 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5179
  %763 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %762, i32 0, i32 1, !dbg !5180
  %764 = load i8*, i8** %763, align 8, !dbg !5180
  %765 = call i32 @strcmp(i8* %761, i8* %764) #9, !dbg !5181
  %766 = icmp ne i32 %765, 0, !dbg !5181
  br i1 %766, label %772, label %767, !dbg !5182

; <label>:767:                                    ; preds = %753
  %768 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5183
  %769 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5185
  %770 = getelementptr inbounds %struct._data, %struct._data* %769, i32 0, i32 20, !dbg !5186
  %771 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %770, i32 0, i32 1, !dbg !5187
  store %struct._vrrp_t* %768, %struct._vrrp_t** %771, align 8, !dbg !5188
  br label %777, !dbg !5189

; <label>:772:                                    ; preds = %753
  br label %773, !dbg !5190

; <label>:773:                                    ; preds = %772
  %774 = load %struct._element*, %struct._element** %2, align 8, !dbg !5191
  %775 = getelementptr inbounds %struct._element, %struct._element* %774, i32 0, i32 0, !dbg !5193
  %776 = load %struct._element*, %struct._element** %775, align 8, !dbg !5193
  store %struct._element* %776, %struct._element** %2, align 8, !dbg !5194
  br label %750, !dbg !5195, !llvm.loop !5196

; <label>:777:                                    ; preds = %767, %750
  %778 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5198
  %779 = getelementptr inbounds %struct._data, %struct._data* %778, i32 0, i32 20, !dbg !5200
  %780 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %779, i32 0, i32 1, !dbg !5201
  %781 = load %struct._vrrp_t*, %struct._vrrp_t** %780, align 8, !dbg !5201
  %782 = icmp ne %struct._vrrp_t* %781, null, !dbg !5198
  br i1 %782, label %808, label %783, !dbg !5202

; <label>:783:                                    ; preds = %777
  %784 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5203
  %785 = getelementptr inbounds %struct._data, %struct._data* %784, i32 0, i32 20, !dbg !5205
  %786 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %785, i32 0, i32 7, !dbg !5206
  %787 = load i8*, i8** %786, align 8, !dbg !5206
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.36, i32 0, i32 0), i8* %787), !dbg !5207
  %788 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5208
  %789 = getelementptr inbounds %struct._data, %struct._data* %788, i32 0, i32 20, !dbg !5211
  %790 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %789, i32 0, i32 0, !dbg !5212
  %791 = load i8*, i8** %790, align 8, !dbg !5212
  %792 = icmp ne i8* %791, null, !dbg !5208
  br i1 %792, label %793, label %801, !dbg !5213

; <label>:793:                                    ; preds = %783
  %794 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5214
  %795 = getelementptr inbounds %struct._data, %struct._data* %794, i32 0, i32 20, !dbg !5217
  %796 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %795, i32 0, i32 0, !dbg !5218
  %797 = load i8*, i8** %796, align 8, !dbg !5218
  call void @free(i8* %797) #8, !dbg !5219
  %798 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5220
  %799 = getelementptr inbounds %struct._data, %struct._data* %798, i32 0, i32 20, !dbg !5221
  %800 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %799, i32 0, i32 0, !dbg !5222
  store i8* null, i8** %800, align 8, !dbg !5223
  br label %801, !dbg !5224

; <label>:801:                                    ; preds = %793, %783
  %802 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5225
  %803 = getelementptr inbounds %struct._data, %struct._data* %802, i32 0, i32 20, !dbg !5226
  %804 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %803, i32 0, i32 0, !dbg !5227
  store i8* null, i8** %804, align 8, !dbg !5228
  %805 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5229
  %806 = getelementptr inbounds %struct._data, %struct._data* %805, i32 0, i32 20, !dbg !5230
  %807 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %806, i32 0, i32 2, !dbg !5231
  store i32 -1, i32* %807, align 8, !dbg !5232
  br label %826, !dbg !5233

; <label>:808:                                    ; preds = %777
  %809 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5234
  %810 = getelementptr inbounds %struct._data, %struct._data* %809, i32 0, i32 20, !dbg !5236
  %811 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %810, i32 0, i32 2, !dbg !5237
  %812 = load i32, i32* %811, align 8, !dbg !5237
  %813 = icmp eq i32 %812, -1, !dbg !5238
  br i1 %813, label %814, label %825, !dbg !5239

; <label>:814:                                    ; preds = %808
  %815 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5240
  %816 = getelementptr inbounds %struct._data, %struct._data* %815, i32 0, i32 20, !dbg !5242
  %817 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %816, i32 0, i32 1, !dbg !5243
  %818 = load %struct._vrrp_t*, %struct._vrrp_t** %817, align 8, !dbg !5243
  %819 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %818, i32 0, i32 36, !dbg !5244
  %820 = load i8, i8* %819, align 4, !dbg !5244
  %821 = zext i8 %820 to i32, !dbg !5240
  %822 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5245
  %823 = getelementptr inbounds %struct._data, %struct._data* %822, i32 0, i32 20, !dbg !5246
  %824 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %823, i32 0, i32 2, !dbg !5247
  store i32 %821, i32* %824, align 8, !dbg !5248
  br label %825, !dbg !5249

; <label>:825:                                    ; preds = %814, %808
  br label %826

; <label>:826:                                    ; preds = %825, %801
  %827 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5250
  %828 = getelementptr inbounds %struct._data, %struct._data* %827, i32 0, i32 20, !dbg !5253
  %829 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %828, i32 0, i32 7, !dbg !5254
  %830 = load i8*, i8** %829, align 8, !dbg !5254
  %831 = icmp ne i8* %830, null, !dbg !5250
  br i1 %831, label %832, label %840, !dbg !5255

; <label>:832:                                    ; preds = %826
  %833 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5256
  %834 = getelementptr inbounds %struct._data, %struct._data* %833, i32 0, i32 20, !dbg !5259
  %835 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %834, i32 0, i32 7, !dbg !5260
  %836 = load i8*, i8** %835, align 8, !dbg !5260
  call void @free(i8* %836) #8, !dbg !5261
  %837 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5262
  %838 = getelementptr inbounds %struct._data, %struct._data* %837, i32 0, i32 20, !dbg !5263
  %839 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %838, i32 0, i32 7, !dbg !5264
  store i8* null, i8** %839, align 8, !dbg !5265
  br label %840, !dbg !5266

; <label>:840:                                    ; preds = %832, %826
  %841 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5267
  %842 = getelementptr inbounds %struct._data, %struct._data* %841, i32 0, i32 20, !dbg !5268
  %843 = getelementptr inbounds %struct.lvs_syncd_config, %struct.lvs_syncd_config* %842, i32 0, i32 7, !dbg !5269
  store i8* null, i8** %843, align 8, !dbg !5270
  br label %844, !dbg !5271

; <label>:844:                                    ; preds = %840, %730
  %845 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5272
  %846 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %845, i32 0, i32 9, !dbg !5274
  %847 = load %struct._list*, %struct._list** %846, align 8, !dbg !5274
  %848 = icmp eq %struct._list* %847, null, !dbg !5275
  br i1 %848, label %918, label %849, !dbg !5276

; <label>:849:                                    ; preds = %844
  %850 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5277
  %851 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %850, i32 0, i32 9, !dbg !5279
  %852 = load %struct._list*, %struct._list** %851, align 8, !dbg !5279
  %853 = getelementptr inbounds %struct._list, %struct._list* %852, i32 0, i32 0, !dbg !5280
  %854 = load %struct._element*, %struct._element** %853, align 8, !dbg !5280
  %855 = icmp eq %struct._element* %854, null, !dbg !5281
  br i1 %855, label %856, label %863, !dbg !5282

; <label>:856:                                    ; preds = %849
  %857 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5283
  %858 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %857, i32 0, i32 9, !dbg !5285
  %859 = load %struct._list*, %struct._list** %858, align 8, !dbg !5285
  %860 = getelementptr inbounds %struct._list, %struct._list* %859, i32 0, i32 1, !dbg !5286
  %861 = load %struct._element*, %struct._element** %860, align 8, !dbg !5286
  %862 = icmp eq %struct._element* %861, null, !dbg !5287
  br i1 %862, label %918, label %863, !dbg !5288

; <label>:863:                                    ; preds = %856, %849
  %864 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5289
  %865 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %864, i32 0, i32 9, !dbg !5292
  %866 = load %struct._list*, %struct._list** %865, align 8, !dbg !5292
  %867 = icmp ne %struct._list* %866, null, !dbg !5293
  br i1 %867, label %869, label %868, !dbg !5294

; <label>:868:                                    ; preds = %863
  br label %875, !dbg !5295

; <label>:869:                                    ; preds = %863
  %870 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5297
  %871 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %870, i32 0, i32 9, !dbg !5299
  %872 = load %struct._list*, %struct._list** %871, align 8, !dbg !5299
  %873 = getelementptr inbounds %struct._list, %struct._list* %872, i32 0, i32 0, !dbg !5300
  %874 = load %struct._element*, %struct._element** %873, align 8, !dbg !5300
  br label %875, !dbg !5301

; <label>:875:                                    ; preds = %869, %868
  %876 = phi %struct._element* [ null, %868 ], [ %874, %869 ], !dbg !5302
  store %struct._element* %876, %struct._element** %2, align 8, !dbg !5304
  br label %877, !dbg !5305

; <label>:877:                                    ; preds = %915, %875
  %878 = load %struct._element*, %struct._element** %2, align 8, !dbg !5306
  %879 = icmp ne %struct._element* %878, null, !dbg !5309
  br i1 %879, label %880, label %917, !dbg !5309

; <label>:880:                                    ; preds = %877
  %881 = load %struct._element*, %struct._element** %2, align 8, !dbg !5310
  %882 = getelementptr inbounds %struct._element, %struct._element* %881, i32 0, i32 0, !dbg !5312
  %883 = load %struct._element*, %struct._element** %882, align 8, !dbg !5312
  store %struct._element* %883, %struct._element** %9, align 8, !dbg !5313
  call void @llvm.dbg.declare(metadata %struct._vrrp_script** %16, metadata !5314, metadata !793), !dbg !5334
  %884 = load %struct._element*, %struct._element** %2, align 8, !dbg !5335
  %885 = getelementptr inbounds %struct._element, %struct._element* %884, i32 0, i32 2, !dbg !5336
  %886 = load i8*, i8** %885, align 8, !dbg !5336
  %887 = bitcast i8* %886 to %struct._vrrp_script*, !dbg !5337
  store %struct._vrrp_script* %887, %struct._vrrp_script** %16, align 8, !dbg !5334
  %888 = load %struct._vrrp_script*, %struct._vrrp_script** %16, align 8, !dbg !5338
  %889 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %888, i32 0, i32 8, !dbg !5340
  %890 = load %struct._list*, %struct._list** %889, align 8, !dbg !5340
  %891 = icmp eq %struct._list* %890, null, !dbg !5341
  br i1 %891, label %906, label %892, !dbg !5342

; <label>:892:                                    ; preds = %880
  %893 = load %struct._vrrp_script*, %struct._vrrp_script** %16, align 8, !dbg !5343
  %894 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %893, i32 0, i32 8, !dbg !5345
  %895 = load %struct._list*, %struct._list** %894, align 8, !dbg !5345
  %896 = getelementptr inbounds %struct._list, %struct._list* %895, i32 0, i32 0, !dbg !5346
  %897 = load %struct._element*, %struct._element** %896, align 8, !dbg !5346
  %898 = icmp eq %struct._element* %897, null, !dbg !5347
  br i1 %898, label %899, label %914, !dbg !5348

; <label>:899:                                    ; preds = %892
  %900 = load %struct._vrrp_script*, %struct._vrrp_script** %16, align 8, !dbg !5349
  %901 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %900, i32 0, i32 8, !dbg !5351
  %902 = load %struct._list*, %struct._list** %901, align 8, !dbg !5351
  %903 = getelementptr inbounds %struct._list, %struct._list* %902, i32 0, i32 1, !dbg !5352
  %904 = load %struct._element*, %struct._element** %903, align 8, !dbg !5352
  %905 = icmp eq %struct._element* %904, null, !dbg !5353
  br i1 %905, label %906, label %914, !dbg !5354

; <label>:906:                                    ; preds = %899, %880
  %907 = load %struct._vrrp_script*, %struct._vrrp_script** %16, align 8, !dbg !5355
  %908 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %907, i32 0, i32 0, !dbg !5357
  %909 = load i8*, i8** %908, align 8, !dbg !5357
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), i8* %909), !dbg !5358
  %910 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5359
  %911 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %910, i32 0, i32 9, !dbg !5360
  %912 = load %struct._list*, %struct._list** %911, align 8, !dbg !5360
  %913 = load %struct._element*, %struct._element** %2, align 8, !dbg !5361
  call void @free_list_element(%struct._list* %912, %struct._element* %913), !dbg !5362
  br label %914, !dbg !5363

; <label>:914:                                    ; preds = %906, %899, %892
  br label %915, !dbg !5364

; <label>:915:                                    ; preds = %914
  %916 = load %struct._element*, %struct._element** %9, align 8, !dbg !5365
  store %struct._element* %916, %struct._element** %2, align 8, !dbg !5367
  br label %877, !dbg !5368, !llvm.loop !5369

; <label>:917:                                    ; preds = %877
  br label %918, !dbg !5371

; <label>:918:                                    ; preds = %917, %856, %844
  %919 = load i64, i64* %13, align 8, !dbg !5372
  call void @alloc_vrrp_buffer(i64 %919), !dbg !5373
  store i1 true, i1* %1, align 1, !dbg !5374
  br label %920, !dbg !5374

; <label>:920:                                    ; preds = %918, %358, %334, %217
  %921 = load i1, i1* %1, align 1, !dbg !5375
  ret i1 %921, !dbg !5375
}

declare void @add_script_param(%struct._notify_script*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @check_vrrp_script_security() #0 !dbg !5376 {
  %1 = alloca %struct._element*, align 8
  %2 = alloca %struct._element*, align 8
  %3 = alloca %struct._element*, align 8
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca %struct._vrrp_sgroup*, align 8
  %6 = alloca %struct._tracked_sc*, align 8
  %7 = alloca %struct._vrrp_script*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.magic_set*, align 8
  call void @llvm.dbg.declare(metadata %struct._element** %1, metadata !5377, metadata !793), !dbg !5378
  call void @llvm.dbg.declare(metadata %struct._element** %2, metadata !5379, metadata !793), !dbg !5380
  call void @llvm.dbg.declare(metadata %struct._element** %3, metadata !5381, metadata !793), !dbg !5382
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !5383, metadata !793), !dbg !5384
  call void @llvm.dbg.declare(metadata %struct._vrrp_sgroup** %5, metadata !5385, metadata !793), !dbg !5386
  call void @llvm.dbg.declare(metadata %struct._tracked_sc** %6, metadata !5387, metadata !793), !dbg !5394
  call void @llvm.dbg.declare(metadata %struct._vrrp_script** %7, metadata !5395, metadata !793), !dbg !5396
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5397, metadata !793), !dbg !5398
  store i32 0, i32* %8, align 4, !dbg !5398
  call void @llvm.dbg.declare(metadata %struct.magic_set** %9, metadata !5399, metadata !793), !dbg !5404
  %10 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5405
  %11 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %10, i32 0, i32 5, !dbg !5407
  %12 = load %struct._list*, %struct._list** %11, align 8, !dbg !5407
  %13 = icmp eq %struct._list* %12, null, !dbg !5408
  br i1 %13, label %28, label %14, !dbg !5409

; <label>:14:                                     ; preds = %0
  %15 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5410
  %16 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %15, i32 0, i32 5, !dbg !5412
  %17 = load %struct._list*, %struct._list** %16, align 8, !dbg !5412
  %18 = getelementptr inbounds %struct._list, %struct._list* %17, i32 0, i32 0, !dbg !5413
  %19 = load %struct._element*, %struct._element** %18, align 8, !dbg !5413
  %20 = icmp eq %struct._element* %19, null, !dbg !5414
  br i1 %20, label %21, label %29, !dbg !5415

; <label>:21:                                     ; preds = %14
  %22 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5416
  %23 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %22, i32 0, i32 5, !dbg !5418
  %24 = load %struct._list*, %struct._list** %23, align 8, !dbg !5418
  %25 = getelementptr inbounds %struct._list, %struct._list* %24, i32 0, i32 1, !dbg !5419
  %26 = load %struct._element*, %struct._element** %25, align 8, !dbg !5419
  %27 = icmp eq %struct._element* %26, null, !dbg !5420
  br i1 %27, label %28, label %29, !dbg !5421

; <label>:28:                                     ; preds = %21, %0
  br label %399, !dbg !5422

; <label>:29:                                     ; preds = %21, %14
  %30 = call %struct.magic_set* @ka_magic_open(), !dbg !5423
  store %struct.magic_set* %30, %struct.magic_set** %9, align 8, !dbg !5424
  %31 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5425
  %32 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %31, i32 0, i32 9, !dbg !5427
  %33 = load %struct._list*, %struct._list** %32, align 8, !dbg !5427
  %34 = icmp eq %struct._list* %33, null, !dbg !5428
  br i1 %34, label %81, label %35, !dbg !5429

; <label>:35:                                     ; preds = %29
  %36 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5430
  %37 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %36, i32 0, i32 9, !dbg !5432
  %38 = load %struct._list*, %struct._list** %37, align 8, !dbg !5432
  %39 = getelementptr inbounds %struct._list, %struct._list* %38, i32 0, i32 0, !dbg !5433
  %40 = load %struct._element*, %struct._element** %39, align 8, !dbg !5433
  %41 = icmp eq %struct._element* %40, null, !dbg !5434
  br i1 %41, label %42, label %49, !dbg !5435

; <label>:42:                                     ; preds = %35
  %43 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5436
  %44 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %43, i32 0, i32 9, !dbg !5438
  %45 = load %struct._list*, %struct._list** %44, align 8, !dbg !5438
  %46 = getelementptr inbounds %struct._list, %struct._list* %45, i32 0, i32 1, !dbg !5439
  %47 = load %struct._element*, %struct._element** %46, align 8, !dbg !5439
  %48 = icmp eq %struct._element* %47, null, !dbg !5440
  br i1 %48, label %81, label %49, !dbg !5441

; <label>:49:                                     ; preds = %42, %35
  %50 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5442
  %51 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %50, i32 0, i32 9, !dbg !5445
  %52 = load %struct._list*, %struct._list** %51, align 8, !dbg !5445
  %53 = icmp ne %struct._list* %52, null, !dbg !5446
  br i1 %53, label %55, label %54, !dbg !5447

; <label>:54:                                     ; preds = %49
  br label %61, !dbg !5448

; <label>:55:                                     ; preds = %49
  %56 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5450
  %57 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %56, i32 0, i32 9, !dbg !5452
  %58 = load %struct._list*, %struct._list** %57, align 8, !dbg !5452
  %59 = getelementptr inbounds %struct._list, %struct._list* %58, i32 0, i32 0, !dbg !5453
  %60 = load %struct._element*, %struct._element** %59, align 8, !dbg !5453
  br label %61, !dbg !5454

; <label>:61:                                     ; preds = %55, %54
  %62 = phi %struct._element* [ null, %54 ], [ %60, %55 ], !dbg !5455
  store %struct._element* %62, %struct._element** %1, align 8, !dbg !5457
  br label %63, !dbg !5458

; <label>:63:                                     ; preds = %76, %61
  %64 = load %struct._element*, %struct._element** %1, align 8, !dbg !5459
  %65 = icmp ne %struct._element* %64, null, !dbg !5462
  br i1 %65, label %66, label %80, !dbg !5462

; <label>:66:                                     ; preds = %63
  %67 = load %struct._element*, %struct._element** %1, align 8, !dbg !5463
  %68 = getelementptr inbounds %struct._element, %struct._element* %67, i32 0, i32 2, !dbg !5465
  %69 = load i8*, i8** %68, align 8, !dbg !5465
  %70 = bitcast i8* %69 to %struct._vrrp_script*, !dbg !5466
  store %struct._vrrp_script* %70, %struct._vrrp_script** %7, align 8, !dbg !5467
  %71 = load %struct._vrrp_script*, %struct._vrrp_script** %7, align 8, !dbg !5468
  %72 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5469
  %73 = call i32 @check_track_script_secure(%struct._vrrp_script* %71, %struct.magic_set* %72), !dbg !5470
  %74 = load i32, i32* %8, align 4, !dbg !5471
  %75 = or i32 %74, %73, !dbg !5471
  store i32 %75, i32* %8, align 4, !dbg !5471
  br label %76, !dbg !5472

; <label>:76:                                     ; preds = %66
  %77 = load %struct._element*, %struct._element** %1, align 8, !dbg !5473
  %78 = getelementptr inbounds %struct._element, %struct._element* %77, i32 0, i32 0, !dbg !5475
  %79 = load %struct._element*, %struct._element** %78, align 8, !dbg !5475
  store %struct._element* %79, %struct._element** %1, align 8, !dbg !5476
  br label %63, !dbg !5477, !llvm.loop !5478

; <label>:80:                                     ; preds = %63
  br label %81, !dbg !5480

; <label>:81:                                     ; preds = %80, %42, %29
  %82 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5481
  %83 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %82, i32 0, i32 5, !dbg !5483
  %84 = load %struct._list*, %struct._list** %83, align 8, !dbg !5483
  %85 = icmp ne %struct._list* %84, null, !dbg !5484
  br i1 %85, label %87, label %86, !dbg !5485

; <label>:86:                                     ; preds = %81
  br label %93, !dbg !5486

; <label>:87:                                     ; preds = %81
  %88 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5488
  %89 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %88, i32 0, i32 5, !dbg !5490
  %90 = load %struct._list*, %struct._list** %89, align 8, !dbg !5490
  %91 = getelementptr inbounds %struct._list, %struct._list* %90, i32 0, i32 0, !dbg !5491
  %92 = load %struct._element*, %struct._element** %91, align 8, !dbg !5491
  br label %93, !dbg !5492

; <label>:93:                                     ; preds = %87, %86
  %94 = phi %struct._element* [ null, %86 ], [ %92, %87 ], !dbg !5493
  store %struct._element* %94, %struct._element** %1, align 8, !dbg !5495
  br label %95, !dbg !5496

; <label>:95:                                     ; preds = %198, %93
  %96 = load %struct._element*, %struct._element** %1, align 8, !dbg !5497
  %97 = icmp ne %struct._element* %96, null, !dbg !5500
  br i1 %97, label %98, label %202, !dbg !5500

; <label>:98:                                     ; preds = %95
  %99 = load %struct._element*, %struct._element** %1, align 8, !dbg !5501
  %100 = getelementptr inbounds %struct._element, %struct._element* %99, i32 0, i32 2, !dbg !5503
  %101 = load i8*, i8** %100, align 8, !dbg !5503
  %102 = bitcast i8* %101 to %struct._vrrp_t*, !dbg !5504
  store %struct._vrrp_t* %102, %struct._vrrp_t** %4, align 8, !dbg !5505
  %103 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5506
  %104 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %103, i32 0, i32 64, !dbg !5507
  %105 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5508
  %106 = call i32 @check_notify_script_secure(%struct._notify_script** %104, %struct.magic_set* %105), !dbg !5509
  %107 = load i32, i32* %8, align 4, !dbg !5510
  %108 = or i32 %107, %106, !dbg !5510
  store i32 %108, i32* %8, align 4, !dbg !5510
  %109 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5511
  %110 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %109, i32 0, i32 65, !dbg !5512
  %111 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5513
  %112 = call i32 @check_notify_script_secure(%struct._notify_script** %110, %struct.magic_set* %111), !dbg !5514
  %113 = load i32, i32* %8, align 4, !dbg !5515
  %114 = or i32 %113, %112, !dbg !5515
  store i32 %114, i32* %8, align 4, !dbg !5515
  %115 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5516
  %116 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %115, i32 0, i32 66, !dbg !5517
  %117 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5518
  %118 = call i32 @check_notify_script_secure(%struct._notify_script** %116, %struct.magic_set* %117), !dbg !5519
  %119 = load i32, i32* %8, align 4, !dbg !5520
  %120 = or i32 %119, %118, !dbg !5520
  store i32 %120, i32* %8, align 4, !dbg !5520
  %121 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5521
  %122 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %121, i32 0, i32 67, !dbg !5522
  %123 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5523
  %124 = call i32 @check_notify_script_secure(%struct._notify_script** %122, %struct.magic_set* %123), !dbg !5524
  %125 = load i32, i32* %8, align 4, !dbg !5525
  %126 = or i32 %125, %124, !dbg !5525
  store i32 %126, i32* %8, align 4, !dbg !5525
  %127 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5526
  %128 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %127, i32 0, i32 69, !dbg !5527
  %129 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5528
  %130 = call i32 @check_notify_script_secure(%struct._notify_script** %128, %struct.magic_set* %129), !dbg !5529
  %131 = load i32, i32* %8, align 4, !dbg !5530
  %132 = or i32 %131, %130, !dbg !5530
  store i32 %132, i32* %8, align 4, !dbg !5530
  %133 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5531
  %134 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %133, i32 0, i32 68, !dbg !5532
  %135 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5533
  %136 = call i32 @check_notify_script_secure(%struct._notify_script** %134, %struct.magic_set* %135), !dbg !5534
  %137 = load i32, i32* %8, align 4, !dbg !5535
  %138 = or i32 %137, %136, !dbg !5535
  store i32 %138, i32* %8, align 4, !dbg !5535
  %139 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5536
  %140 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %139, i32 0, i32 12, !dbg !5538
  %141 = load %struct._list*, %struct._list** %140, align 8, !dbg !5538
  %142 = icmp eq %struct._list* %141, null, !dbg !5539
  br i1 %142, label %157, label %143, !dbg !5540

; <label>:143:                                    ; preds = %98
  %144 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5541
  %145 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %144, i32 0, i32 12, !dbg !5543
  %146 = load %struct._list*, %struct._list** %145, align 8, !dbg !5543
  %147 = getelementptr inbounds %struct._list, %struct._list* %146, i32 0, i32 0, !dbg !5544
  %148 = load %struct._element*, %struct._element** %147, align 8, !dbg !5544
  %149 = icmp eq %struct._element* %148, null, !dbg !5545
  br i1 %149, label %150, label %158, !dbg !5546

; <label>:150:                                    ; preds = %143
  %151 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5547
  %152 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %151, i32 0, i32 12, !dbg !5549
  %153 = load %struct._list*, %struct._list** %152, align 8, !dbg !5549
  %154 = getelementptr inbounds %struct._list, %struct._list* %153, i32 0, i32 1, !dbg !5550
  %155 = load %struct._element*, %struct._element** %154, align 8, !dbg !5550
  %156 = icmp eq %struct._element* %155, null, !dbg !5551
  br i1 %156, label %157, label %158, !dbg !5552

; <label>:157:                                    ; preds = %150, %98
  br label %198, !dbg !5553

; <label>:158:                                    ; preds = %150, %143
  %159 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5554
  %160 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %159, i32 0, i32 12, !dbg !5556
  %161 = load %struct._list*, %struct._list** %160, align 8, !dbg !5556
  %162 = icmp ne %struct._list* %161, null, !dbg !5557
  br i1 %162, label %164, label %163, !dbg !5558

; <label>:163:                                    ; preds = %158
  br label %170, !dbg !5559

; <label>:164:                                    ; preds = %158
  %165 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5561
  %166 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %165, i32 0, i32 12, !dbg !5563
  %167 = load %struct._list*, %struct._list** %166, align 8, !dbg !5563
  %168 = getelementptr inbounds %struct._list, %struct._list* %167, i32 0, i32 0, !dbg !5564
  %169 = load %struct._element*, %struct._element** %168, align 8, !dbg !5564
  br label %170, !dbg !5565

; <label>:170:                                    ; preds = %164, %163
  %171 = phi %struct._element* [ null, %163 ], [ %169, %164 ], !dbg !5566
  store %struct._element* %171, %struct._element** %2, align 8, !dbg !5568
  br label %172, !dbg !5569

; <label>:172:                                    ; preds = %195, %170
  %173 = load %struct._element*, %struct._element** %2, align 8, !dbg !5570
  %174 = icmp ne %struct._element* %173, null, !dbg !5573
  br i1 %174, label %175, label %197, !dbg !5573

; <label>:175:                                    ; preds = %172
  %176 = load %struct._element*, %struct._element** %2, align 8, !dbg !5574
  %177 = getelementptr inbounds %struct._element, %struct._element* %176, i32 0, i32 0, !dbg !5576
  %178 = load %struct._element*, %struct._element** %177, align 8, !dbg !5576
  store %struct._element* %178, %struct._element** %3, align 8, !dbg !5577
  %179 = load %struct._element*, %struct._element** %2, align 8, !dbg !5578
  %180 = getelementptr inbounds %struct._element, %struct._element* %179, i32 0, i32 2, !dbg !5579
  %181 = load i8*, i8** %180, align 8, !dbg !5579
  %182 = bitcast i8* %181 to %struct._tracked_sc*, !dbg !5580
  store %struct._tracked_sc* %182, %struct._tracked_sc** %6, align 8, !dbg !5581
  %183 = load %struct._tracked_sc*, %struct._tracked_sc** %6, align 8, !dbg !5582
  %184 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %183, i32 0, i32 0, !dbg !5584
  %185 = load %struct._vrrp_script*, %struct._vrrp_script** %184, align 8, !dbg !5584
  %186 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %185, i32 0, i32 12, !dbg !5585
  %187 = load i8, i8* %186, align 4, !dbg !5585
  %188 = trunc i8 %187 to i1, !dbg !5585
  br i1 %188, label %189, label %194, !dbg !5586

; <label>:189:                                    ; preds = %175
  %190 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !5587
  %191 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %190, i32 0, i32 12, !dbg !5589
  %192 = load %struct._list*, %struct._list** %191, align 8, !dbg !5589
  %193 = load %struct._element*, %struct._element** %2, align 8, !dbg !5590
  call void @free_list_element(%struct._list* %192, %struct._element* %193), !dbg !5591
  br label %194, !dbg !5592

; <label>:194:                                    ; preds = %189, %175
  br label %195, !dbg !5593

; <label>:195:                                    ; preds = %194
  %196 = load %struct._element*, %struct._element** %3, align 8, !dbg !5594
  store %struct._element* %196, %struct._element** %2, align 8, !dbg !5596
  br label %172, !dbg !5597, !llvm.loop !5598

; <label>:197:                                    ; preds = %172
  br label %198, !dbg !5600

; <label>:198:                                    ; preds = %197, %157
  %199 = load %struct._element*, %struct._element** %1, align 8, !dbg !5601
  %200 = getelementptr inbounds %struct._element, %struct._element* %199, i32 0, i32 0, !dbg !5603
  %201 = load %struct._element*, %struct._element** %200, align 8, !dbg !5603
  store %struct._element* %201, %struct._element** %1, align 8, !dbg !5604
  br label %95, !dbg !5605, !llvm.loop !5606

; <label>:202:                                    ; preds = %95
  %203 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5608
  %204 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %203, i32 0, i32 4, !dbg !5610
  %205 = load %struct._list*, %struct._list** %204, align 8, !dbg !5610
  %206 = icmp eq %struct._list* %205, null, !dbg !5611
  br i1 %206, label %317, label %207, !dbg !5612

; <label>:207:                                    ; preds = %202
  %208 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5613
  %209 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %208, i32 0, i32 4, !dbg !5615
  %210 = load %struct._list*, %struct._list** %209, align 8, !dbg !5615
  %211 = getelementptr inbounds %struct._list, %struct._list* %210, i32 0, i32 0, !dbg !5616
  %212 = load %struct._element*, %struct._element** %211, align 8, !dbg !5616
  %213 = icmp eq %struct._element* %212, null, !dbg !5617
  br i1 %213, label %214, label %221, !dbg !5618

; <label>:214:                                    ; preds = %207
  %215 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5619
  %216 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %215, i32 0, i32 4, !dbg !5621
  %217 = load %struct._list*, %struct._list** %216, align 8, !dbg !5621
  %218 = getelementptr inbounds %struct._list, %struct._list* %217, i32 0, i32 1, !dbg !5622
  %219 = load %struct._element*, %struct._element** %218, align 8, !dbg !5622
  %220 = icmp eq %struct._element* %219, null, !dbg !5623
  br i1 %220, label %317, label %221, !dbg !5624

; <label>:221:                                    ; preds = %214, %207
  %222 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5625
  %223 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %222, i32 0, i32 4, !dbg !5628
  %224 = load %struct._list*, %struct._list** %223, align 8, !dbg !5628
  %225 = icmp ne %struct._list* %224, null, !dbg !5629
  br i1 %225, label %227, label %226, !dbg !5630

; <label>:226:                                    ; preds = %221
  br label %233, !dbg !5631

; <label>:227:                                    ; preds = %221
  %228 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5633
  %229 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %228, i32 0, i32 4, !dbg !5635
  %230 = load %struct._list*, %struct._list** %229, align 8, !dbg !5635
  %231 = getelementptr inbounds %struct._list, %struct._list* %230, i32 0, i32 0, !dbg !5636
  %232 = load %struct._element*, %struct._element** %231, align 8, !dbg !5636
  br label %233, !dbg !5637

; <label>:233:                                    ; preds = %227, %226
  %234 = phi %struct._element* [ null, %226 ], [ %232, %227 ], !dbg !5638
  store %struct._element* %234, %struct._element** %1, align 8, !dbg !5640
  br label %235, !dbg !5641

; <label>:235:                                    ; preds = %312, %233
  %236 = load %struct._element*, %struct._element** %1, align 8, !dbg !5642
  %237 = icmp ne %struct._element* %236, null, !dbg !5645
  br i1 %237, label %238, label %316, !dbg !5645

; <label>:238:                                    ; preds = %235
  %239 = load %struct._element*, %struct._element** %1, align 8, !dbg !5646
  %240 = getelementptr inbounds %struct._element, %struct._element* %239, i32 0, i32 2, !dbg !5648
  %241 = load i8*, i8** %240, align 8, !dbg !5648
  %242 = bitcast i8* %241 to %struct._vrrp_sgroup*, !dbg !5649
  store %struct._vrrp_sgroup* %242, %struct._vrrp_sgroup** %5, align 8, !dbg !5650
  %243 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %5, align 8, !dbg !5651
  %244 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %243, i32 0, i32 12, !dbg !5652
  %245 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5653
  %246 = call i32 @check_notify_script_secure(%struct._notify_script** %244, %struct.magic_set* %245), !dbg !5654
  %247 = load i32, i32* %8, align 4, !dbg !5655
  %248 = or i32 %247, %246, !dbg !5655
  store i32 %248, i32* %8, align 4, !dbg !5655
  %249 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %5, align 8, !dbg !5656
  %250 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %249, i32 0, i32 13, !dbg !5657
  %251 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5658
  %252 = call i32 @check_notify_script_secure(%struct._notify_script** %250, %struct.magic_set* %251), !dbg !5659
  %253 = load i32, i32* %8, align 4, !dbg !5660
  %254 = or i32 %253, %252, !dbg !5660
  store i32 %254, i32* %8, align 4, !dbg !5660
  %255 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %5, align 8, !dbg !5661
  %256 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %255, i32 0, i32 14, !dbg !5662
  %257 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5663
  %258 = call i32 @check_notify_script_secure(%struct._notify_script** %256, %struct.magic_set* %257), !dbg !5664
  %259 = load i32, i32* %8, align 4, !dbg !5665
  %260 = or i32 %259, %258, !dbg !5665
  store i32 %260, i32* %8, align 4, !dbg !5665
  %261 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %5, align 8, !dbg !5666
  %262 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %261, i32 0, i32 15, !dbg !5667
  %263 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5668
  %264 = call i32 @check_notify_script_secure(%struct._notify_script** %262, %struct.magic_set* %263), !dbg !5669
  %265 = load i32, i32* %8, align 4, !dbg !5670
  %266 = or i32 %265, %264, !dbg !5670
  store i32 %266, i32* %8, align 4, !dbg !5670
  %267 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %5, align 8, !dbg !5671
  %268 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %267, i32 0, i32 16, !dbg !5672
  %269 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5673
  %270 = call i32 @check_notify_script_secure(%struct._notify_script** %268, %struct.magic_set* %269), !dbg !5674
  %271 = load i32, i32* %8, align 4, !dbg !5675
  %272 = or i32 %271, %270, !dbg !5675
  store i32 %272, i32* %8, align 4, !dbg !5675
  %273 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %5, align 8, !dbg !5676
  %274 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %273, i32 0, i32 8, !dbg !5678
  %275 = load %struct._list*, %struct._list** %274, align 8, !dbg !5678
  %276 = icmp ne %struct._list* %275, null, !dbg !5679
  br i1 %276, label %278, label %277, !dbg !5680

; <label>:277:                                    ; preds = %238
  br label %284, !dbg !5681

; <label>:278:                                    ; preds = %238
  %279 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %5, align 8, !dbg !5683
  %280 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %279, i32 0, i32 8, !dbg !5685
  %281 = load %struct._list*, %struct._list** %280, align 8, !dbg !5685
  %282 = getelementptr inbounds %struct._list, %struct._list* %281, i32 0, i32 0, !dbg !5686
  %283 = load %struct._element*, %struct._element** %282, align 8, !dbg !5686
  br label %284, !dbg !5687

; <label>:284:                                    ; preds = %278, %277
  %285 = phi %struct._element* [ null, %277 ], [ %283, %278 ], !dbg !5688
  store %struct._element* %285, %struct._element** %2, align 8, !dbg !5690
  br label %286, !dbg !5691

; <label>:286:                                    ; preds = %309, %284
  %287 = load %struct._element*, %struct._element** %2, align 8, !dbg !5692
  %288 = icmp ne %struct._element* %287, null, !dbg !5695
  br i1 %288, label %289, label %311, !dbg !5695

; <label>:289:                                    ; preds = %286
  %290 = load %struct._element*, %struct._element** %2, align 8, !dbg !5696
  %291 = getelementptr inbounds %struct._element, %struct._element* %290, i32 0, i32 0, !dbg !5698
  %292 = load %struct._element*, %struct._element** %291, align 8, !dbg !5698
  store %struct._element* %292, %struct._element** %3, align 8, !dbg !5699
  %293 = load %struct._element*, %struct._element** %2, align 8, !dbg !5700
  %294 = getelementptr inbounds %struct._element, %struct._element* %293, i32 0, i32 2, !dbg !5701
  %295 = load i8*, i8** %294, align 8, !dbg !5701
  %296 = bitcast i8* %295 to %struct._tracked_sc*, !dbg !5702
  store %struct._tracked_sc* %296, %struct._tracked_sc** %6, align 8, !dbg !5703
  %297 = load %struct._tracked_sc*, %struct._tracked_sc** %6, align 8, !dbg !5704
  %298 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %297, i32 0, i32 0, !dbg !5706
  %299 = load %struct._vrrp_script*, %struct._vrrp_script** %298, align 8, !dbg !5706
  %300 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %299, i32 0, i32 12, !dbg !5707
  %301 = load i8, i8* %300, align 4, !dbg !5707
  %302 = trunc i8 %301 to i1, !dbg !5707
  br i1 %302, label %303, label %308, !dbg !5708

; <label>:303:                                    ; preds = %289
  %304 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %5, align 8, !dbg !5709
  %305 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %304, i32 0, i32 8, !dbg !5711
  %306 = load %struct._list*, %struct._list** %305, align 8, !dbg !5711
  %307 = load %struct._element*, %struct._element** %2, align 8, !dbg !5712
  call void @free_list_element(%struct._list* %306, %struct._element* %307), !dbg !5713
  br label %308, !dbg !5714

; <label>:308:                                    ; preds = %303, %289
  br label %309, !dbg !5715

; <label>:309:                                    ; preds = %308
  %310 = load %struct._element*, %struct._element** %3, align 8, !dbg !5716
  store %struct._element* %310, %struct._element** %2, align 8, !dbg !5718
  br label %286, !dbg !5719, !llvm.loop !5720

; <label>:311:                                    ; preds = %286
  br label %312, !dbg !5722

; <label>:312:                                    ; preds = %311
  %313 = load %struct._element*, %struct._element** %1, align 8, !dbg !5723
  %314 = getelementptr inbounds %struct._element, %struct._element* %313, i32 0, i32 0, !dbg !5725
  %315 = load %struct._element*, %struct._element** %314, align 8, !dbg !5725
  store %struct._element* %315, %struct._element** %1, align 8, !dbg !5726
  br label %235, !dbg !5727, !llvm.loop !5728

; <label>:316:                                    ; preds = %235
  br label %317, !dbg !5730

; <label>:317:                                    ; preds = %316, %214, %202
  %318 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5731
  %319 = getelementptr inbounds %struct._data, %struct._data* %318, i32 0, i32 54, !dbg !5733
  %320 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %319, i32 0, i32 3, !dbg !5734
  %321 = load %struct._notify_script*, %struct._notify_script** %320, align 8, !dbg !5734
  %322 = icmp ne %struct._notify_script* %321, null, !dbg !5731
  br i1 %322, label %323, label %331, !dbg !5735

; <label>:323:                                    ; preds = %317
  %324 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5736
  %325 = getelementptr inbounds %struct._data, %struct._data* %324, i32 0, i32 54, !dbg !5737
  %326 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %325, i32 0, i32 3, !dbg !5738
  %327 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5739
  %328 = call i32 @check_notify_script_secure(%struct._notify_script** %326, %struct.magic_set* %327), !dbg !5740
  %329 = load i32, i32* %8, align 4, !dbg !5741
  %330 = or i32 %329, %328, !dbg !5741
  store i32 %330, i32* %8, align 4, !dbg !5741
  br label %331, !dbg !5742

; <label>:331:                                    ; preds = %323, %317
  %332 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5743
  %333 = getelementptr inbounds %struct._data, %struct._data* %332, i32 0, i32 55, !dbg !5745
  %334 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %333, i32 0, i32 3, !dbg !5746
  %335 = load %struct._notify_script*, %struct._notify_script** %334, align 8, !dbg !5746
  %336 = icmp ne %struct._notify_script* %335, null, !dbg !5743
  br i1 %336, label %337, label %345, !dbg !5747

; <label>:337:                                    ; preds = %331
  %338 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !5748
  %339 = getelementptr inbounds %struct._data, %struct._data* %338, i32 0, i32 55, !dbg !5749
  %340 = getelementptr inbounds %struct._notify_fifo, %struct._notify_fifo* %339, i32 0, i32 3, !dbg !5750
  %341 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5751
  %342 = call i32 @check_notify_script_secure(%struct._notify_script** %340, %struct.magic_set* %341), !dbg !5752
  %343 = load i32, i32* %8, align 4, !dbg !5753
  %344 = or i32 %343, %342, !dbg !5753
  store i32 %344, i32* %8, align 4, !dbg !5753
  br label %345, !dbg !5754

; <label>:345:                                    ; preds = %337, %331
  %346 = load i8, i8* @script_security, align 1, !dbg !5755
  %347 = trunc i8 %346 to i1, !dbg !5755
  br i1 %347, label %357, label %348, !dbg !5757

; <label>:348:                                    ; preds = %345
  %349 = load i32, i32* %8, align 4, !dbg !5758
  %350 = and i32 %349, 2, !dbg !5760
  %351 = icmp ne i32 %350, 0, !dbg !5760
  br i1 %351, label %352, label %357, !dbg !5761

; <label>:352:                                    ; preds = %348
  %353 = load i32, i32* %8, align 4, !dbg !5762
  %354 = and i32 %353, 1, !dbg !5764
  %355 = icmp ne i32 %354, 0, !dbg !5762
  %356 = select i1 %355, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0), !dbg !5762
  call void (i32, i8*, ...) @report_config_error(i32 12, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.77, i32 0, i32 0), i8* %356), !dbg !5765
  br label %357, !dbg !5766

; <label>:357:                                    ; preds = %352, %348, %345
  %358 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5767
  %359 = icmp ne %struct.magic_set* %358, null, !dbg !5767
  br i1 %359, label %360, label %362, !dbg !5769

; <label>:360:                                    ; preds = %357
  %361 = load %struct.magic_set*, %struct.magic_set** %9, align 8, !dbg !5770
  call void @ka_magic_close(%struct.magic_set* %361), !dbg !5771
  br label %362, !dbg !5771

; <label>:362:                                    ; preds = %360, %357
  %363 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5772
  %364 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %363, i32 0, i32 9, !dbg !5774
  %365 = load %struct._list*, %struct._list** %364, align 8, !dbg !5774
  %366 = icmp ne %struct._list* %365, null, !dbg !5775
  br i1 %366, label %368, label %367, !dbg !5776

; <label>:367:                                    ; preds = %362
  br label %374, !dbg !5777

; <label>:368:                                    ; preds = %362
  %369 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5779
  %370 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %369, i32 0, i32 9, !dbg !5781
  %371 = load %struct._list*, %struct._list** %370, align 8, !dbg !5781
  %372 = getelementptr inbounds %struct._list, %struct._list* %371, i32 0, i32 0, !dbg !5782
  %373 = load %struct._element*, %struct._element** %372, align 8, !dbg !5782
  br label %374, !dbg !5783

; <label>:374:                                    ; preds = %368, %367
  %375 = phi %struct._element* [ null, %367 ], [ %373, %368 ], !dbg !5784
  store %struct._element* %375, %struct._element** %1, align 8, !dbg !5786
  br label %376, !dbg !5787

; <label>:376:                                    ; preds = %397, %374
  %377 = load %struct._element*, %struct._element** %1, align 8, !dbg !5788
  %378 = icmp ne %struct._element* %377, null, !dbg !5791
  br i1 %378, label %379, label %399, !dbg !5791

; <label>:379:                                    ; preds = %376
  %380 = load %struct._element*, %struct._element** %1, align 8, !dbg !5792
  %381 = getelementptr inbounds %struct._element, %struct._element* %380, i32 0, i32 0, !dbg !5794
  %382 = load %struct._element*, %struct._element** %381, align 8, !dbg !5794
  store %struct._element* %382, %struct._element** %3, align 8, !dbg !5795
  %383 = load %struct._element*, %struct._element** %1, align 8, !dbg !5796
  %384 = getelementptr inbounds %struct._element, %struct._element* %383, i32 0, i32 2, !dbg !5797
  %385 = load i8*, i8** %384, align 8, !dbg !5797
  %386 = bitcast i8* %385 to %struct._vrrp_script*, !dbg !5798
  store %struct._vrrp_script* %386, %struct._vrrp_script** %7, align 8, !dbg !5799
  %387 = load %struct._vrrp_script*, %struct._vrrp_script** %7, align 8, !dbg !5800
  %388 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %387, i32 0, i32 12, !dbg !5802
  %389 = load i8, i8* %388, align 4, !dbg !5802
  %390 = trunc i8 %389 to i1, !dbg !5802
  br i1 %390, label %391, label %396, !dbg !5803

; <label>:391:                                    ; preds = %379
  %392 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !5804
  %393 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %392, i32 0, i32 9, !dbg !5805
  %394 = load %struct._list*, %struct._list** %393, align 8, !dbg !5805
  %395 = load %struct._element*, %struct._element** %1, align 8, !dbg !5806
  call void @free_list_element(%struct._list* %394, %struct._element* %395), !dbg !5807
  br label %396, !dbg !5807

; <label>:396:                                    ; preds = %391, %379
  br label %397, !dbg !5808

; <label>:397:                                    ; preds = %396
  %398 = load %struct._element*, %struct._element** %3, align 8, !dbg !5809
  store %struct._element* %398, %struct._element** %1, align 8, !dbg !5811
  br label %376, !dbg !5812, !llvm.loop !5813

; <label>:399:                                    ; preds = %28, %376
  ret void, !dbg !5815
}

declare zeroext i1 @running_checker() #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @free_notify_script(%struct._notify_script**) #2 !dbg !5816 {
  %2 = alloca %struct._notify_script**, align 8
  store %struct._notify_script** %0, %struct._notify_script*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._notify_script*** %2, metadata !5820, metadata !793), !dbg !5821
  %3 = load %struct._notify_script**, %struct._notify_script*** %2, align 8, !dbg !5822
  %4 = load %struct._notify_script*, %struct._notify_script** %3, align 8, !dbg !5824
  %5 = icmp ne %struct._notify_script* %4, null, !dbg !5824
  br i1 %5, label %7, label %6, !dbg !5825

; <label>:6:                                      ; preds = %1
  br label %33, !dbg !5826

; <label>:7:                                      ; preds = %1
  %8 = load %struct._notify_script**, %struct._notify_script*** %2, align 8, !dbg !5827
  %9 = load %struct._notify_script*, %struct._notify_script** %8, align 8, !dbg !5830
  %10 = getelementptr inbounds %struct._notify_script, %struct._notify_script* %9, i32 0, i32 0, !dbg !5831
  %11 = load i8**, i8*** %10, align 8, !dbg !5831
  %12 = icmp ne i8** %11, null, !dbg !5832
  br i1 %12, label %13, label %22, !dbg !5833

; <label>:13:                                     ; preds = %7
  %14 = load %struct._notify_script**, %struct._notify_script*** %2, align 8, !dbg !5834
  %15 = load %struct._notify_script*, %struct._notify_script** %14, align 8, !dbg !5837
  %16 = getelementptr inbounds %struct._notify_script, %struct._notify_script* %15, i32 0, i32 0, !dbg !5838
  %17 = load i8**, i8*** %16, align 8, !dbg !5838
  %18 = bitcast i8** %17 to i8*, !dbg !5839
  call void @free(i8* %18) #8, !dbg !5840
  %19 = load %struct._notify_script**, %struct._notify_script*** %2, align 8, !dbg !5841
  %20 = load %struct._notify_script*, %struct._notify_script** %19, align 8, !dbg !5842
  %21 = getelementptr inbounds %struct._notify_script, %struct._notify_script* %20, i32 0, i32 0, !dbg !5843
  store i8** null, i8*** %21, align 8, !dbg !5844
  br label %22, !dbg !5845

; <label>:22:                                     ; preds = %13, %7
  %23 = load %struct._notify_script**, %struct._notify_script*** %2, align 8, !dbg !5846
  %24 = load %struct._notify_script*, %struct._notify_script** %23, align 8, !dbg !5849
  %25 = icmp ne %struct._notify_script* %24, null, !dbg !5849
  br i1 %25, label %26, label %31, !dbg !5850

; <label>:26:                                     ; preds = %22
  %27 = load %struct._notify_script**, %struct._notify_script*** %2, align 8, !dbg !5851
  %28 = load %struct._notify_script*, %struct._notify_script** %27, align 8, !dbg !5854
  %29 = bitcast %struct._notify_script* %28 to i8*, !dbg !5854
  call void @free(i8* %29) #8, !dbg !5855
  %30 = load %struct._notify_script**, %struct._notify_script*** %2, align 8, !dbg !5856
  store %struct._notify_script* null, %struct._notify_script** %30, align 8, !dbg !5857
  br label %31, !dbg !5858

; <label>:31:                                     ; preds = %26, %22
  %32 = load %struct._notify_script**, %struct._notify_script*** %2, align 8, !dbg !5859
  store %struct._notify_script* null, %struct._notify_script** %32, align 8, !dbg !5860
  br label %33, !dbg !5861

; <label>:33:                                     ; preds = %31, %6
  ret void, !dbg !5862
}

declare void @notify_fifo_open(%struct._notify_fifo*, %struct._notify_fifo*, i32 (%struct._thread*)*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @vrrp_notify_fifo_script_exit(%struct._thread*) #0 !dbg !5864 {
  %2 = alloca %struct._thread*, align 8
  store %struct._thread* %0, %struct._thread** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._thread** %2, metadata !5867, metadata !793), !dbg !5868
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.83, i32 0, i32 0)), !dbg !5869
  ret i32 0, !dbg !5870
}

declare void @report_config_error(i32, i8*, ...) #3

declare void @free_list_element(%struct._list*, %struct._element*) #3

declare void @vrrp_sync_set_group(%struct._vrrp_sgroup*) #3

; Function Attrs: nounwind uwtable
define internal zeroext i1 @vrrp_complete_instance(%struct._vrrp_t*) #0 !dbg !5871 {
  %2 = alloca i1, align 1
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca [16 x i8], align 16
  %5 = alloca %struct._interface*, align 8
  %6 = alloca %struct._element*, align 8
  %7 = alloca %struct._ip_address*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct._element*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %struct._tracked_sc*, align 8
  %14 = alloca %struct._tracked_if*, align 8
  %15 = alloca %struct._tracked_file*, align 8
  %16 = alloca %struct._ip_route*, align 8
  %17 = alloca %struct._ip_rule*, align 8
  %18 = alloca %struct.in6_addr*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct._list*, align 8
  %21 = alloca i16, align 2
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca %struct._vrrp_script*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !5874, metadata !793), !dbg !5875
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !5876, metadata !793), !dbg !5877
  call void @llvm.dbg.declare(metadata %struct._interface** %5, metadata !5878, metadata !793), !dbg !5879
  call void @llvm.dbg.declare(metadata %struct._element** %6, metadata !5880, metadata !793), !dbg !5881
  call void @llvm.dbg.declare(metadata %struct._ip_address** %7, metadata !5882, metadata !793), !dbg !5883
  call void @llvm.dbg.declare(metadata i64* %8, metadata !5884, metadata !793), !dbg !5885
  call void @llvm.dbg.declare(metadata i64* %9, metadata !5886, metadata !793), !dbg !5887
  call void @llvm.dbg.declare(metadata i64* %10, metadata !5888, metadata !793), !dbg !5889
  call void @llvm.dbg.declare(metadata %struct._element** %11, metadata !5890, metadata !793), !dbg !5891
  call void @llvm.dbg.declare(metadata i8* %12, metadata !5892, metadata !793), !dbg !5893
  store i8 0, i8* %12, align 1, !dbg !5893
  call void @llvm.dbg.declare(metadata %struct._tracked_sc** %13, metadata !5894, metadata !793), !dbg !5895
  call void @llvm.dbg.declare(metadata %struct._tracked_if** %14, metadata !5896, metadata !793), !dbg !5903
  call void @llvm.dbg.declare(metadata %struct._tracked_file** %15, metadata !5904, metadata !793), !dbg !5922
  call void @llvm.dbg.declare(metadata %struct._ip_route** %16, metadata !5923, metadata !793), !dbg !6016
  call void @llvm.dbg.declare(metadata %struct._ip_rule** %17, metadata !6017, metadata !793), !dbg !6045
  %25 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6046
  %26 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %25, i32 0, i32 8, !dbg !6048
  %27 = load i32, i32* %26, align 4, !dbg !6048
  %28 = icmp eq i32 %27, -1, !dbg !6049
  br i1 %28, label %29, label %37, !dbg !6050

; <label>:29:                                     ; preds = %1
  %30 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !6051
  %31 = getelementptr inbounds %struct._data, %struct._data* %30, i32 0, i32 43, !dbg !6052
  %32 = load i8, i8* %31, align 1, !dbg !6052
  %33 = trunc i8 %32 to i1, !dbg !6052
  %34 = zext i1 %33 to i32, !dbg !6051
  %35 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6053
  %36 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %35, i32 0, i32 8, !dbg !6054
  store i32 %34, i32* %36, align 4, !dbg !6055
  br label %37, !dbg !6053

; <label>:37:                                     ; preds = %29, %1
  %38 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6056
  %39 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %38, i32 0, i32 0, !dbg !6058
  %40 = load i16, i16* %39, align 8, !dbg !6058
  %41 = zext i16 %40 to i32, !dbg !6056
  %42 = icmp eq i32 %41, 10, !dbg !6059
  br i1 %42, label %43, label %69, !dbg !6060

; <label>:43:                                     ; preds = %37
  %44 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6061
  %45 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %44, i32 0, i32 60, !dbg !6064
  %46 = load i32, i32* %45, align 4, !dbg !6064
  %47 = icmp eq i32 %46, 2, !dbg !6065
  br i1 %47, label %48, label %59, !dbg !6066

; <label>:48:                                     ; preds = %43
  %49 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6067
  %50 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %49, i32 0, i32 8, !dbg !6069
  %51 = load i32, i32* %50, align 4, !dbg !6069
  %52 = icmp ne i32 %51, 0, !dbg !6067
  br i1 %52, label %53, label %59, !dbg !6070

; <label>:53:                                     ; preds = %48
  %54 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6071
  %55 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %54, i32 0, i32 1, !dbg !6073
  %56 = load i8*, i8** %55, align 8, !dbg !6073
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.84, i32 0, i32 0), i8* %56), !dbg !6074
  %57 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6075
  %58 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %57, i32 0, i32 60, !dbg !6076
  store i32 3, i32* %58, align 4, !dbg !6077
  br label %68, !dbg !6078

; <label>:59:                                     ; preds = %48, %43
  %60 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6079
  %61 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %60, i32 0, i32 60, !dbg !6081
  %62 = load i32, i32* %61, align 4, !dbg !6081
  %63 = icmp ne i32 %62, 0, !dbg !6079
  br i1 %63, label %67, label %64, !dbg !6082

; <label>:64:                                     ; preds = %59
  %65 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6083
  %66 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %65, i32 0, i32 60, !dbg !6084
  store i32 3, i32* %66, align 4, !dbg !6085
  br label %67, !dbg !6083

; <label>:67:                                     ; preds = %64, %59
  br label %68

; <label>:68:                                     ; preds = %67, %53
  br label %69, !dbg !6086

; <label>:69:                                     ; preds = %68, %37
  %70 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6087
  %71 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %70, i32 0, i32 0, !dbg !6089
  %72 = load i16, i16* %71, align 8, !dbg !6089
  %73 = zext i16 %72 to i32, !dbg !6087
  %74 = icmp eq i32 %73, 0, !dbg !6090
  br i1 %74, label %75, label %78, !dbg !6091

; <label>:75:                                     ; preds = %69
  %76 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6092
  %77 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %76, i32 0, i32 0, !dbg !6093
  store i16 2, i16* %77, align 8, !dbg !6094
  br label %78, !dbg !6092

; <label>:78:                                     ; preds = %75, %69
  %79 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6095
  %80 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %79, i32 0, i32 0, !dbg !6097
  %81 = load i16, i16* %80, align 8, !dbg !6097
  %82 = zext i16 %81 to i32, !dbg !6095
  %83 = icmp eq i32 %82, 2, !dbg !6098
  br i1 %83, label %84, label %85, !dbg !6099

; <label>:84:                                     ; preds = %78
  store i8 1, i8* @have_ipv4_instance, align 1, !dbg !6100
  br label %86, !dbg !6101

; <label>:85:                                     ; preds = %78
  store i8 1, i8* @have_ipv6_instance, align 1, !dbg !6102
  br label %86

; <label>:86:                                     ; preds = %85, %84
  %87 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6103
  %88 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %87, i32 0, i32 60, !dbg !6105
  %89 = load i32, i32* %88, align 4, !dbg !6105
  %90 = icmp eq i32 %89, 0, !dbg !6106
  br i1 %90, label %91, label %107, !dbg !6107

; <label>:91:                                     ; preds = %86
  %92 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6108
  %93 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %92, i32 0, i32 0, !dbg !6111
  %94 = load i16, i16* %93, align 8, !dbg !6111
  %95 = zext i16 %94 to i32, !dbg !6108
  %96 = icmp eq i32 %95, 10, !dbg !6112
  br i1 %96, label %97, label %100, !dbg !6113

; <label>:97:                                     ; preds = %91
  %98 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6114
  %99 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %98, i32 0, i32 60, !dbg !6115
  store i32 3, i32* %99, align 4, !dbg !6116
  br label %106, !dbg !6114

; <label>:100:                                    ; preds = %91
  %101 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !6117
  %102 = getelementptr inbounds %struct._data, %struct._data* %101, i32 0, i32 34, !dbg !6118
  %103 = load i32, i32* %102, align 4, !dbg !6118
  %104 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6119
  %105 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %104, i32 0, i32 60, !dbg !6120
  store i32 %103, i32* %105, align 4, !dbg !6121
  br label %106

; <label>:106:                                    ; preds = %100, %97
  br label %107, !dbg !6122

; <label>:107:                                    ; preds = %106, %86
  %108 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6123
  %109 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %108, i32 0, i32 41, !dbg !6125
  %110 = load %struct._list*, %struct._list** %109, align 8, !dbg !6125
  %111 = icmp eq %struct._list* %110, null, !dbg !6126
  br i1 %111, label %126, label %112, !dbg !6127

; <label>:112:                                    ; preds = %107
  %113 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6128
  %114 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %113, i32 0, i32 41, !dbg !6130
  %115 = load %struct._list*, %struct._list** %114, align 8, !dbg !6130
  %116 = getelementptr inbounds %struct._list, %struct._list* %115, i32 0, i32 0, !dbg !6131
  %117 = load %struct._element*, %struct._element** %116, align 8, !dbg !6131
  %118 = icmp eq %struct._element* %117, null, !dbg !6132
  br i1 %118, label %119, label %146, !dbg !6133

; <label>:119:                                    ; preds = %112
  %120 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6134
  %121 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %120, i32 0, i32 41, !dbg !6136
  %122 = load %struct._list*, %struct._list** %121, align 8, !dbg !6136
  %123 = getelementptr inbounds %struct._list, %struct._list* %122, i32 0, i32 1, !dbg !6137
  %124 = load %struct._element*, %struct._element** %123, align 8, !dbg !6137
  %125 = icmp eq %struct._element* %124, null, !dbg !6138
  br i1 %125, label %126, label %146, !dbg !6139

; <label>:126:                                    ; preds = %119, %107
  %127 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6140
  %128 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %127, i32 0, i32 60, !dbg !6142
  %129 = load i32, i32* %128, align 4, !dbg !6142
  %130 = icmp eq i32 %129, 3, !dbg !6143
  br i1 %130, label %142, label %131, !dbg !6144

; <label>:131:                                    ; preds = %126
  %132 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6145
  %133 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %132, i32 0, i32 0, !dbg !6147
  %134 = load i16, i16* %133, align 8, !dbg !6147
  %135 = zext i16 %134 to i32, !dbg !6145
  %136 = icmp eq i32 %135, 10, !dbg !6148
  br i1 %136, label %142, label %137, !dbg !6149

; <label>:137:                                    ; preds = %131
  %138 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6150
  %139 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %138, i32 0, i32 8, !dbg !6152
  %140 = load i32, i32* %139, align 4, !dbg !6152
  %141 = icmp ne i32 %140, 0, !dbg !6150
  br i1 %141, label %142, label %146, !dbg !6153

; <label>:142:                                    ; preds = %137, %131, %126
  %143 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6154
  %144 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %143, i32 0, i32 1, !dbg !6156
  %145 = load i8*, i8** %144, align 8, !dbg !6156
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.85, i32 0, i32 0), i8* %145), !dbg !6157
  store i1 false, i1* %2, align 1, !dbg !6158
  br label %2477, !dbg !6158

; <label>:146:                                    ; preds = %137, %119, %112
  %147 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6159
  %148 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %147, i32 0, i32 37, !dbg !6161
  %149 = load i8, i8* %148, align 1, !dbg !6161
  %150 = zext i8 %149 to i32, !dbg !6159
  %151 = icmp eq i32 %150, 0, !dbg !6162
  br i1 %151, label %152, label %164, !dbg !6163

; <label>:152:                                    ; preds = %146
  %153 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6164
  %154 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %153, i32 0, i32 56, !dbg !6167
  %155 = load i32, i32* %154, align 4, !dbg !6167
  %156 = icmp eq i32 %155, 2, !dbg !6168
  br i1 %156, label %157, label %160, !dbg !6169

; <label>:157:                                    ; preds = %152
  %158 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6170
  %159 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %158, i32 0, i32 37, !dbg !6171
  store i8 -1, i8* %159, align 1, !dbg !6172
  br label %163, !dbg !6170

; <label>:160:                                    ; preds = %152
  %161 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6173
  %162 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %161, i32 0, i32 37, !dbg !6174
  store i8 100, i8* %162, align 1, !dbg !6175
  br label %163

; <label>:163:                                    ; preds = %160, %157
  br label %164, !dbg !6176

; <label>:164:                                    ; preds = %163, %146
  %165 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6177
  %166 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %165, i32 0, i32 56, !dbg !6179
  %167 = load i32, i32* %166, align 4, !dbg !6179
  %168 = icmp eq i32 %167, 0, !dbg !6180
  br i1 %168, label %169, label %178, !dbg !6181

; <label>:169:                                    ; preds = %164
  %170 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6182
  %171 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %170, i32 0, i32 37, !dbg !6183
  %172 = load i8, i8* %171, align 1, !dbg !6183
  %173 = zext i8 %172 to i32, !dbg !6182
  %174 = icmp eq i32 %173, 255, !dbg !6184
  %175 = select i1 %174, i32 2, i32 1, !dbg !6182
  %176 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6185
  %177 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %176, i32 0, i32 56, !dbg !6186
  store i32 %175, i32* %177, align 4, !dbg !6187
  br label %209, !dbg !6185

; <label>:178:                                    ; preds = %164
  %179 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6188
  %180 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %179, i32 0, i32 8, !dbg !6190
  %181 = load i32, i32* %180, align 4, !dbg !6190
  %182 = icmp ne i32 %181, 0, !dbg !6188
  br i1 %182, label %183, label %208, !dbg !6191

; <label>:183:                                    ; preds = %178
  %184 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6192
  %185 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %184, i32 0, i32 56, !dbg !6193
  %186 = load i32, i32* %185, align 4, !dbg !6193
  %187 = icmp eq i32 %186, 2, !dbg !6194
  %188 = zext i1 %187 to i32, !dbg !6194
  %189 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6195
  %190 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %189, i32 0, i32 37, !dbg !6196
  %191 = load i8, i8* %190, align 1, !dbg !6196
  %192 = zext i8 %191 to i32, !dbg !6195
  %193 = icmp eq i32 %192, 255, !dbg !6197
  %194 = zext i1 %193 to i32, !dbg !6197
  %195 = icmp ne i32 %188, %194, !dbg !6198
  br i1 %195, label %196, label %208, !dbg !6199

; <label>:196:                                    ; preds = %183
  %197 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6201
  %198 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %197, i32 0, i32 1, !dbg !6203
  %199 = load i8*, i8** %198, align 8, !dbg !6203
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.86, i32 0, i32 0), i8* %199), !dbg !6204
  %200 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6205
  %201 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %200, i32 0, i32 37, !dbg !6206
  %202 = load i8, i8* %201, align 1, !dbg !6206
  %203 = zext i8 %202 to i32, !dbg !6205
  %204 = icmp eq i32 %203, 255, !dbg !6207
  %205 = select i1 %204, i32 2, i32 1, !dbg !6205
  %206 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6208
  %207 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %206, i32 0, i32 56, !dbg !6209
  store i32 %205, i32* %207, align 4, !dbg !6210
  br label %208, !dbg !6211

; <label>:208:                                    ; preds = %196, %183, %178
  br label %209

; <label>:209:                                    ; preds = %208, %169
  %210 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6212
  %211 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %210, i32 0, i32 8, !dbg !6214
  %212 = load i32, i32* %211, align 4, !dbg !6214
  %213 = icmp ne i32 %212, 0, !dbg !6212
  br i1 %213, label %214, label %226, !dbg !6215

; <label>:214:                                    ; preds = %209
  %215 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6216
  %216 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %215, i32 0, i32 75, !dbg !6218
  %217 = load i8, i8* %216, align 4, !dbg !6218
  %218 = zext i8 %217 to i32, !dbg !6216
  %219 = icmp ne i32 %218, 0, !dbg !6219
  br i1 %219, label %220, label %226, !dbg !6220

; <label>:220:                                    ; preds = %214
  %221 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6221
  %222 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %221, i32 0, i32 1, !dbg !6223
  %223 = load i8*, i8** %222, align 8, !dbg !6223
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.87, i32 0, i32 0), i8* %223), !dbg !6224
  %224 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6225
  %225 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %224, i32 0, i32 75, !dbg !6226
  store i8 0, i8* %225, align 4, !dbg !6227
  br label %306, !dbg !6228

; <label>:226:                                    ; preds = %214, %209
  %227 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6229
  %228 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %227, i32 0, i32 60, !dbg !6231
  %229 = load i32, i32* %228, align 4, !dbg !6231
  %230 = icmp eq i32 %229, 3, !dbg !6232
  br i1 %230, label %231, label %243, !dbg !6233

; <label>:231:                                    ; preds = %226
  %232 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6234
  %233 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %232, i32 0, i32 75, !dbg !6236
  %234 = load i8, i8* %233, align 4, !dbg !6236
  %235 = zext i8 %234 to i32, !dbg !6234
  %236 = icmp ne i32 %235, 0, !dbg !6237
  br i1 %236, label %237, label %243, !dbg !6238

; <label>:237:                                    ; preds = %231
  %238 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6239
  %239 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %238, i32 0, i32 1, !dbg !6241
  %240 = load i8*, i8** %239, align 8, !dbg !6241
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.88, i32 0, i32 0), i8* %240), !dbg !6242
  %241 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6243
  %242 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %241, i32 0, i32 75, !dbg !6244
  store i8 0, i8* %242, align 4, !dbg !6245
  br label %305, !dbg !6246

; <label>:243:                                    ; preds = %231, %226
  %244 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6247
  %245 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %244, i32 0, i32 75, !dbg !6249
  %246 = load i8, i8* %245, align 4, !dbg !6249
  %247 = zext i8 %246 to i32, !dbg !6247
  %248 = icmp ne i32 %247, 0, !dbg !6250
  br i1 %248, label %249, label %261, !dbg !6251

; <label>:249:                                    ; preds = %243
  %250 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6252
  %251 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %250, i32 0, i32 76, !dbg !6254
  %252 = getelementptr inbounds [8 x i8], [8 x i8]* %251, i64 0, i64 0, !dbg !6252
  %253 = load i8, i8* %252, align 1, !dbg !6252
  %254 = icmp ne i8 %253, 0, !dbg !6252
  br i1 %254, label %261, label %255, !dbg !6255

; <label>:255:                                    ; preds = %249
  %256 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6256
  %257 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %256, i32 0, i32 1, !dbg !6258
  %258 = load i8*, i8** %257, align 8, !dbg !6258
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.89, i32 0, i32 0), i8* %258), !dbg !6259
  %259 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6260
  %260 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %259, i32 0, i32 75, !dbg !6261
  store i8 0, i8* %260, align 4, !dbg !6262
  br label %304, !dbg !6263

; <label>:261:                                    ; preds = %249, %243
  %262 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6264
  %263 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %262, i32 0, i32 0, !dbg !6266
  %264 = load i16, i16* %263, align 8, !dbg !6266
  %265 = zext i16 %264 to i32, !dbg !6264
  %266 = icmp eq i32 %265, 10, !dbg !6267
  br i1 %266, label %267, label %279, !dbg !6268

; <label>:267:                                    ; preds = %261
  %268 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6269
  %269 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %268, i32 0, i32 75, !dbg !6271
  %270 = load i8, i8* %269, align 4, !dbg !6271
  %271 = zext i8 %270 to i32, !dbg !6269
  %272 = icmp eq i32 %271, 2, !dbg !6272
  br i1 %272, label %273, label %279, !dbg !6273

; <label>:273:                                    ; preds = %267
  %274 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6274
  %275 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %274, i32 0, i32 1, !dbg !6276
  %276 = load i8*, i8** %275, align 8, !dbg !6276
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.90, i32 0, i32 0), i8* %276), !dbg !6277
  %277 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6278
  %278 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %277, i32 0, i32 75, !dbg !6279
  store i8 0, i8* %278, align 4, !dbg !6280
  br label %303, !dbg !6281

; <label>:279:                                    ; preds = %267, %261
  %280 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6282
  %281 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %280, i32 0, i32 75, !dbg !6284
  %282 = load i8, i8* %281, align 4, !dbg !6284
  %283 = zext i8 %282 to i32, !dbg !6282
  %284 = icmp eq i32 %283, 2, !dbg !6285
  br i1 %284, label %285, label %302, !dbg !6286

; <label>:285:                                    ; preds = %279
  %286 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6287
  %287 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %286, i32 0, i32 56, !dbg !6289
  %288 = load i32, i32* %287, align 4, !dbg !6289
  %289 = icmp eq i32 %288, 2, !dbg !6290
  br i1 %289, label %290, label %302, !dbg !6291

; <label>:290:                                    ; preds = %285
  %291 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6292
  %292 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %291, i32 0, i32 37, !dbg !6294
  %293 = load i8, i8* %292, align 1, !dbg !6294
  %294 = zext i8 %293 to i32, !dbg !6292
  %295 = icmp ne i32 %294, 255, !dbg !6295
  br i1 %295, label %296, label %302, !dbg !6296

; <label>:296:                                    ; preds = %290
  %297 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6297
  %298 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %297, i32 0, i32 1, !dbg !6299
  %299 = load i8*, i8** %298, align 8, !dbg !6299
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.91, i32 0, i32 0), i8* %299), !dbg !6300
  %300 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6301
  %301 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %300, i32 0, i32 56, !dbg !6302
  store i32 1, i32* %301, align 4, !dbg !6303
  br label %302, !dbg !6304

; <label>:302:                                    ; preds = %296, %290, %285, %279
  br label %303

; <label>:303:                                    ; preds = %302, %273
  br label %304

; <label>:304:                                    ; preds = %303, %255
  br label %305

; <label>:305:                                    ; preds = %304, %237
  br label %306

; <label>:306:                                    ; preds = %305, %220
  %307 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6305
  %308 = call zeroext i1 @chk_min_cfg(%struct._vrrp_t* %307), !dbg !6307
  br i1 %308, label %310, label %309, !dbg !6308

; <label>:309:                                    ; preds = %306
  store i1 false, i1* %2, align 1, !dbg !6309
  br label %2477, !dbg !6309

; <label>:310:                                    ; preds = %306
  %311 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6310
  %312 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %311, i32 0, i32 8, !dbg !6312
  %313 = load i32, i32* %312, align 4, !dbg !6312
  %314 = icmp ne i32 %313, 0, !dbg !6310
  br i1 %314, label %315, label %353, !dbg !6313

; <label>:315:                                    ; preds = %310
  %316 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6314
  %317 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %316, i32 0, i32 4, !dbg !6316
  %318 = load %struct._interface*, %struct._interface** %317, align 8, !dbg !6316
  %319 = getelementptr inbounds %struct._interface, %struct._interface* %318, i32 0, i32 1, !dbg !6317
  %320 = load i32, i32* %319, align 8, !dbg !6317
  %321 = icmp ne i32 %320, 0, !dbg !6314
  br i1 %321, label %322, label %353, !dbg !6318

; <label>:322:                                    ; preds = %315
  %323 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6319
  %324 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %323, i32 0, i32 4, !dbg !6321
  %325 = load %struct._interface*, %struct._interface** %324, align 8, !dbg !6321
  %326 = getelementptr inbounds %struct._interface, %struct._interface* %325, i32 0, i32 4, !dbg !6322
  %327 = load i32, i32* %326, align 8, !dbg !6322
  %328 = and i32 %327, 4096, !dbg !6323
  %329 = icmp ne i32 %328, 0, !dbg !6323
  br i1 %329, label %330, label %353, !dbg !6324

; <label>:330:                                    ; preds = %322
  %331 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6325
  %332 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %331, i32 0, i32 20, !dbg !6327
  %333 = load %struct._list*, %struct._list** %332, align 8, !dbg !6327
  %334 = icmp eq %struct._list* %333, null, !dbg !6328
  br i1 %334, label %353, label %335, !dbg !6329

; <label>:335:                                    ; preds = %330
  %336 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6330
  %337 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %336, i32 0, i32 20, !dbg !6332
  %338 = load %struct._list*, %struct._list** %337, align 8, !dbg !6332
  %339 = getelementptr inbounds %struct._list, %struct._list* %338, i32 0, i32 0, !dbg !6333
  %340 = load %struct._element*, %struct._element** %339, align 8, !dbg !6333
  %341 = icmp eq %struct._element* %340, null, !dbg !6334
  br i1 %341, label %342, label %349, !dbg !6335

; <label>:342:                                    ; preds = %335
  %343 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6336
  %344 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %343, i32 0, i32 20, !dbg !6338
  %345 = load %struct._list*, %struct._list** %344, align 8, !dbg !6338
  %346 = getelementptr inbounds %struct._list, %struct._list* %345, i32 0, i32 1, !dbg !6339
  %347 = load %struct._element*, %struct._element** %346, align 8, !dbg !6339
  %348 = icmp eq %struct._element* %347, null, !dbg !6340
  br i1 %348, label %353, label %349, !dbg !6341

; <label>:349:                                    ; preds = %342, %335
  %350 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6342
  %351 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %350, i32 0, i32 1, !dbg !6344
  %352 = load i8*, i8** %351, align 8, !dbg !6344
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.92, i32 0, i32 0), i8* %352), !dbg !6345
  store i1 false, i1* %2, align 1, !dbg !6346
  br label %2477, !dbg !6346

; <label>:353:                                    ; preds = %342, %330, %322, %315, %310
  %354 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6347
  %355 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %354, i32 0, i32 9, !dbg !6349
  %356 = call zeroext i1 @__test_bit(i32 0, i64* %355), !dbg !6350
  br i1 %356, label %357, label %401, !dbg !6351

; <label>:357:                                    ; preds = %353
  %358 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6352
  %359 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %358, i32 0, i32 4, !dbg !6354
  %360 = load %struct._interface*, %struct._interface** %359, align 8, !dbg !6354
  %361 = getelementptr inbounds %struct._interface, %struct._interface* %360, i32 0, i32 1, !dbg !6355
  %362 = load i32, i32* %361, align 8, !dbg !6355
  %363 = icmp ne i32 %362, 0, !dbg !6352
  br i1 %363, label %364, label %401, !dbg !6356

; <label>:364:                                    ; preds = %357
  %365 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6357
  %366 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %365, i32 0, i32 4, !dbg !6360
  %367 = load %struct._interface*, %struct._interface** %366, align 8, !dbg !6360
  %368 = getelementptr inbounds %struct._interface, %struct._interface* %367, i32 0, i32 12, !dbg !6361
  %369 = load i8, i8* %368, align 4, !dbg !6361
  %370 = trunc i8 %369 to i1, !dbg !6361
  br i1 %370, label %371, label %382, !dbg !6362

; <label>:371:                                    ; preds = %364
  %372 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6363
  %373 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %372, i32 0, i32 1, !dbg !6365
  %374 = load i8*, i8** %373, align 8, !dbg !6365
  %375 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6366
  %376 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %375, i32 0, i32 4, !dbg !6367
  %377 = load %struct._interface*, %struct._interface** %376, align 8, !dbg !6367
  %378 = getelementptr inbounds %struct._interface, %struct._interface* %377, i32 0, i32 14, !dbg !6368
  %379 = load %struct._interface*, %struct._interface** %378, align 8, !dbg !6368
  %380 = getelementptr inbounds %struct._interface, %struct._interface* %379, i32 0, i32 0, !dbg !6369
  %381 = getelementptr inbounds [16 x i8], [16 x i8]* %380, i32 0, i32 0, !dbg !6366
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.93, i32 0, i32 0), i8* %374, i8* %381), !dbg !6370
  store i1 false, i1* %2, align 1, !dbg !6371
  br label %2477, !dbg !6371

; <label>:382:                                    ; preds = %364
  %383 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6372
  %384 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %383, i32 0, i32 4, !dbg !6374
  %385 = load %struct._interface*, %struct._interface** %384, align 8, !dbg !6374
  %386 = getelementptr inbounds %struct._interface, %struct._interface* %385, i32 0, i32 7, !dbg !6375
  %387 = load i16, i16* %386, align 4, !dbg !6375
  %388 = zext i16 %387 to i32, !dbg !6372
  %389 = icmp ne i32 %388, 1, !dbg !6376
  br i1 %389, label %390, label %400, !dbg !6377

; <label>:390:                                    ; preds = %382
  %391 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6378
  %392 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %391, i32 0, i32 9, !dbg !6380
  call void @__clear_bit(i32 0, i64* %392), !dbg !6381
  %393 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6382
  %394 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %393, i32 0, i32 1, !dbg !6383
  %395 = load i8*, i8** %394, align 8, !dbg !6383
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.94, i32 0, i32 0), i8* %395), !dbg !6384
  %396 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6385
  %397 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %396, i32 0, i32 14, !dbg !6386
  %398 = load i32, i32* %397, align 8, !dbg !6387
  %399 = add i32 %398, 1, !dbg !6387
  store i32 %399, i32* %397, align 8, !dbg !6387
  br label %400, !dbg !6388

; <label>:400:                                    ; preds = %390, %382
  br label %401, !dbg !6389

; <label>:401:                                    ; preds = %400, %357, %353
  %402 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6390
  %403 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %402, i32 0, i32 4, !dbg !6392
  %404 = load %struct._interface*, %struct._interface** %403, align 8, !dbg !6392
  %405 = getelementptr inbounds %struct._interface, %struct._interface* %404, i32 0, i32 1, !dbg !6393
  %406 = load i32, i32* %405, align 8, !dbg !6393
  %407 = icmp ne i32 %406, 0, !dbg !6390
  br i1 %407, label %408, label %448, !dbg !6394

; <label>:408:                                    ; preds = %401
  %409 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6395
  %410 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %409, i32 0, i32 4, !dbg !6397
  %411 = load %struct._interface*, %struct._interface** %410, align 8, !dbg !6397
  %412 = getelementptr inbounds %struct._interface, %struct._interface* %411, i32 0, i32 4, !dbg !6398
  %413 = load i32, i32* %412, align 8, !dbg !6398
  %414 = and i32 %413, 4096, !dbg !6399
  %415 = icmp ne i32 %414, 0, !dbg !6399
  br i1 %415, label %448, label %416, !dbg !6400

; <label>:416:                                    ; preds = %408
  %417 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6401
  %418 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %417, i32 0, i32 20, !dbg !6403
  %419 = load %struct._list*, %struct._list** %418, align 8, !dbg !6403
  %420 = icmp eq %struct._list* %419, null, !dbg !6404
  br i1 %420, label %435, label %421, !dbg !6405

; <label>:421:                                    ; preds = %416
  %422 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6406
  %423 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %422, i32 0, i32 20, !dbg !6408
  %424 = load %struct._list*, %struct._list** %423, align 8, !dbg !6408
  %425 = getelementptr inbounds %struct._list, %struct._list* %424, i32 0, i32 0, !dbg !6409
  %426 = load %struct._element*, %struct._element** %425, align 8, !dbg !6409
  %427 = icmp eq %struct._element* %426, null, !dbg !6410
  br i1 %427, label %428, label %448, !dbg !6411

; <label>:428:                                    ; preds = %421
  %429 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6412
  %430 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %429, i32 0, i32 20, !dbg !6414
  %431 = load %struct._list*, %struct._list** %430, align 8, !dbg !6414
  %432 = getelementptr inbounds %struct._list, %struct._list* %431, i32 0, i32 1, !dbg !6415
  %433 = load %struct._element*, %struct._element** %432, align 8, !dbg !6415
  %434 = icmp eq %struct._element* %433, null, !dbg !6416
  br i1 %434, label %435, label %448, !dbg !6417

; <label>:435:                                    ; preds = %428, %416
  %436 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6418
  %437 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %436, i32 0, i32 1, !dbg !6420
  %438 = load i8*, i8** %437, align 8, !dbg !6420
  %439 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6421
  %440 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %439, i32 0, i32 4, !dbg !6422
  %441 = load %struct._interface*, %struct._interface** %440, align 8, !dbg !6422
  %442 = getelementptr inbounds %struct._interface, %struct._interface* %441, i32 0, i32 0, !dbg !6423
  %443 = getelementptr inbounds [16 x i8], [16 x i8]* %442, i32 0, i32 0, !dbg !6421
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.95, i32 0, i32 0), i8* %438, i8* %443), !dbg !6424
  %444 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6425
  %445 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %444, i32 0, i32 14, !dbg !6426
  %446 = load i32, i32* %445, align 8, !dbg !6427
  %447 = add i32 %446, 1, !dbg !6427
  store i32 %447, i32* %445, align 8, !dbg !6427
  br label %448, !dbg !6428

; <label>:448:                                    ; preds = %435, %428, %421, %408, %401
  %449 = call zeroext i1 @__test_bit(i32 7, i64* @debug), !dbg !6429
  br i1 %449, label %450, label %477, !dbg !6431

; <label>:450:                                    ; preds = %448
  %451 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6432
  %452 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %451, i32 0, i32 4, !dbg !6433
  %453 = load %struct._interface*, %struct._interface** %452, align 8, !dbg !6433
  %454 = getelementptr inbounds %struct._interface, %struct._interface* %453, i32 0, i32 1, !dbg !6434
  %455 = load i32, i32* %454, align 8, !dbg !6434
  %456 = icmp ne i32 %455, 0, !dbg !6432
  br i1 %456, label %457, label %477, !dbg !6435

; <label>:457:                                    ; preds = %450
  %458 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6436
  %459 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %458, i32 0, i32 4, !dbg !6437
  %460 = load %struct._interface*, %struct._interface** %459, align 8, !dbg !6437
  %461 = getelementptr inbounds %struct._interface, %struct._interface* %460, i32 0, i32 4, !dbg !6438
  %462 = load i32, i32* %461, align 8, !dbg !6438
  %463 = and i32 %462, 128, !dbg !6439
  %464 = icmp ne i32 %463, 0, !dbg !6439
  br i1 %464, label %465, label %477, !dbg !6440

; <label>:465:                                    ; preds = %457
  %466 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6441
  %467 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %466, i32 0, i32 4, !dbg !6442
  %468 = load %struct._interface*, %struct._interface** %467, align 8, !dbg !6442
  %469 = getelementptr inbounds %struct._interface, %struct._interface* %468, i32 0, i32 4, !dbg !6443
  %470 = load i32, i32* %469, align 8, !dbg !6443
  %471 = and i32 %470, 16, !dbg !6444
  %472 = icmp ne i32 %471, 0, !dbg !6444
  br i1 %472, label %477, label %473, !dbg !6445

; <label>:473:                                    ; preds = %465
  %474 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6447
  %475 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %474, i32 0, i32 1, !dbg !6448
  %476 = load i8*, i8** %475, align 8, !dbg !6448
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.96, i32 0, i32 0), i8* %476), !dbg !6449
  br label %477, !dbg !6449

; <label>:477:                                    ; preds = %473, %465, %457, %450, %448
  %478 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6450
  %479 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %478, i32 0, i32 0, !dbg !6452
  %480 = load i16, i16* %479, align 8, !dbg !6452
  %481 = zext i16 %480 to i32, !dbg !6450
  %482 = icmp eq i32 %481, 10, !dbg !6453
  br i1 %482, label %483, label %537, !dbg !6454

; <label>:483:                                    ; preds = %477
  %484 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6455
  %485 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %484, i32 0, i32 20, !dbg !6457
  %486 = load %struct._list*, %struct._list** %485, align 8, !dbg !6457
  %487 = icmp eq %struct._list* %486, null, !dbg !6458
  br i1 %487, label %502, label %488, !dbg !6459

; <label>:488:                                    ; preds = %483
  %489 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6460
  %490 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %489, i32 0, i32 20, !dbg !6462
  %491 = load %struct._list*, %struct._list** %490, align 8, !dbg !6462
  %492 = getelementptr inbounds %struct._list, %struct._list* %491, i32 0, i32 0, !dbg !6463
  %493 = load %struct._element*, %struct._element** %492, align 8, !dbg !6463
  %494 = icmp eq %struct._element* %493, null, !dbg !6464
  br i1 %494, label %495, label %537, !dbg !6465

; <label>:495:                                    ; preds = %488
  %496 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6466
  %497 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %496, i32 0, i32 20, !dbg !6468
  %498 = load %struct._list*, %struct._list** %497, align 8, !dbg !6468
  %499 = getelementptr inbounds %struct._list, %struct._list* %498, i32 0, i32 1, !dbg !6469
  %500 = load %struct._element*, %struct._element** %499, align 8, !dbg !6469
  %501 = icmp eq %struct._element* %500, null, !dbg !6470
  br i1 %501, label %502, label %537, !dbg !6471

; <label>:502:                                    ; preds = %495, %483
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %18, metadata !6472, metadata !793), !dbg !6474
  %503 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6475
  %504 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %503, i32 0, i32 41, !dbg !6476
  %505 = load %struct._list*, %struct._list** %504, align 8, !dbg !6476
  %506 = icmp ne %struct._list* %505, null, !dbg !6477
  br i1 %506, label %508, label %507, !dbg !6478

; <label>:507:                                    ; preds = %502
  br label %514, !dbg !6479

; <label>:508:                                    ; preds = %502
  %509 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6481
  %510 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %509, i32 0, i32 41, !dbg !6483
  %511 = load %struct._list*, %struct._list** %510, align 8, !dbg !6483
  %512 = getelementptr inbounds %struct._list, %struct._list* %511, i32 0, i32 0, !dbg !6484
  %513 = load %struct._element*, %struct._element** %512, align 8, !dbg !6484
  br label %514, !dbg !6485

; <label>:514:                                    ; preds = %508, %507
  %515 = phi %struct._element* [ null, %507 ], [ %513, %508 ], !dbg !6486
  %516 = getelementptr inbounds %struct._element, %struct._element* %515, i32 0, i32 2, !dbg !6488
  %517 = load i8*, i8** %516, align 8, !dbg !6488
  %518 = bitcast i8* %517 to %struct._ip_address*, !dbg !6489
  %519 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %518, i32 0, i32 1, !dbg !6490
  %520 = bitcast %union.anon.5* %519 to %struct.in6_addr*, !dbg !6491
  store %struct.in6_addr* %520, %struct.in6_addr** %18, align 8, !dbg !6492
  %521 = load %struct.in6_addr*, %struct.in6_addr** %18, align 8, !dbg !6493
  %522 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %521, i32 0, i32 0, !dbg !6494
  %523 = bitcast %union.anon* %522 to [4 x i32]*, !dbg !6495
  %524 = getelementptr inbounds [4 x i32], [4 x i32]* %523, i64 0, i64 0, !dbg !6493
  %525 = load i32, i32* %524, align 4, !dbg !6493
  %526 = call i32 @htonl(i32 -4194304) #1, !dbg !6496
  %527 = and i32 %525, %526, !dbg !6497
  %528 = call i32 @htonl(i32 -25165824) #1, !dbg !6498
  %529 = icmp eq i32 %527, %528, !dbg !6500
  %530 = zext i1 %529 to i32, !dbg !6500
  store i32 %530, i32* %19, align 4, !dbg !6501
  %531 = load i32, i32* %19, align 4, !dbg !6502
  %532 = icmp ne i32 %531, 0, !dbg !6503
  br i1 %532, label %537, label %533, !dbg !6504

; <label>:533:                                    ; preds = %514
  %534 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6506
  %535 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %534, i32 0, i32 1, !dbg !6508
  %536 = load i8*, i8** %535, align 8, !dbg !6508
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.97, i32 0, i32 0), i8* %536), !dbg !6509
  br label %537, !dbg !6510

; <label>:537:                                    ; preds = %533, %514, %495, %488, %477
  %538 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6511
  %539 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %538, i32 0, i32 0, !dbg !6513
  %540 = load i16, i16* %539, align 8, !dbg !6513
  %541 = zext i16 %540 to i32, !dbg !6511
  %542 = icmp eq i32 %541, 2, !dbg !6514
  br i1 %542, label %543, label %571, !dbg !6515

; <label>:543:                                    ; preds = %537
  store i64 42, i64* %8, align 8, !dbg !6516
  %544 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6518
  %545 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %544, i32 0, i32 60, !dbg !6520
  %546 = load i32, i32* %545, align 4, !dbg !6520
  %547 = icmp eq i32 %546, 2, !dbg !6521
  br i1 %547, label %548, label %561, !dbg !6522

; <label>:548:                                    ; preds = %543
  %549 = load i64, i64* %8, align 8, !dbg !6523
  %550 = add i64 %549, 8, !dbg !6523
  store i64 %550, i64* %8, align 8, !dbg !6523
  %551 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6525
  %552 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %551, i32 0, i32 75, !dbg !6527
  %553 = load i8, i8* %552, align 4, !dbg !6527
  %554 = zext i8 %553 to i32, !dbg !6525
  %555 = icmp eq i32 %554, 2, !dbg !6528
  br i1 %555, label %556, label %560, !dbg !6529

; <label>:556:                                    ; preds = %548
  %557 = call i64 @vrrp_ipsecah_len(), !dbg !6530
  %558 = load i64, i64* %8, align 8, !dbg !6531
  %559 = add i64 %558, %557, !dbg !6531
  store i64 %559, i64* %8, align 8, !dbg !6531
  br label %560, !dbg !6532

; <label>:560:                                    ; preds = %556, %548
  br label %561, !dbg !6533

; <label>:561:                                    ; preds = %560, %543
  %562 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6534
  %563 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %562, i32 0, i32 4, !dbg !6535
  %564 = load %struct._interface*, %struct._interface** %563, align 8, !dbg !6535
  %565 = getelementptr inbounds %struct._interface, %struct._interface* %564, i32 0, i32 6, !dbg !6536
  %566 = load i32, i32* %565, align 8, !dbg !6536
  %567 = zext i32 %566 to i64, !dbg !6534
  %568 = load i64, i64* %8, align 8, !dbg !6537
  %569 = sub i64 %567, %568, !dbg !6538
  %570 = udiv i64 %569, 4, !dbg !6539
  store i64 %570, i64* %9, align 8, !dbg !6540
  br label %581, !dbg !6541

; <label>:571:                                    ; preds = %537
  store i64 62, i64* %8, align 8, !dbg !6542
  %572 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6544
  %573 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %572, i32 0, i32 4, !dbg !6545
  %574 = load %struct._interface*, %struct._interface** %573, align 8, !dbg !6545
  %575 = getelementptr inbounds %struct._interface, %struct._interface* %574, i32 0, i32 6, !dbg !6546
  %576 = load i32, i32* %575, align 8, !dbg !6546
  %577 = zext i32 %576 to i64, !dbg !6544
  %578 = load i64, i64* %8, align 8, !dbg !6547
  %579 = sub i64 %577, %578, !dbg !6548
  %580 = udiv i64 %579, 16, !dbg !6549
  store i64 %580, i64* %9, align 8, !dbg !6550
  br label %581

; <label>:581:                                    ; preds = %571, %561
  %582 = load i64, i64* %9, align 8, !dbg !6551
  %583 = icmp ugt i64 %582, 255, !dbg !6553
  br i1 %583, label %584, label %585, !dbg !6554

; <label>:584:                                    ; preds = %581
  store i64 255, i64* %9, align 8, !dbg !6555
  br label %585, !dbg !6556

; <label>:585:                                    ; preds = %584, %581
  %586 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6557
  %587 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %586, i32 0, i32 41, !dbg !6559
  %588 = load %struct._list*, %struct._list** %587, align 8, !dbg !6559
  %589 = icmp eq %struct._list* %588, null, !dbg !6560
  br i1 %589, label %676, label %590, !dbg !6561

; <label>:590:                                    ; preds = %585
  %591 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6562
  %592 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %591, i32 0, i32 41, !dbg !6564
  %593 = load %struct._list*, %struct._list** %592, align 8, !dbg !6564
  %594 = getelementptr inbounds %struct._list, %struct._list* %593, i32 0, i32 0, !dbg !6565
  %595 = load %struct._element*, %struct._element** %594, align 8, !dbg !6565
  %596 = icmp eq %struct._element* %595, null, !dbg !6566
  br i1 %596, label %597, label %604, !dbg !6567

; <label>:597:                                    ; preds = %590
  %598 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6568
  %599 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %598, i32 0, i32 41, !dbg !6570
  %600 = load %struct._list*, %struct._list** %599, align 8, !dbg !6570
  %601 = getelementptr inbounds %struct._list, %struct._list* %600, i32 0, i32 1, !dbg !6571
  %602 = load %struct._element*, %struct._element** %601, align 8, !dbg !6571
  %603 = icmp eq %struct._element* %602, null, !dbg !6572
  br i1 %603, label %676, label %604, !dbg !6573

; <label>:604:                                    ; preds = %597, %590
  %605 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6574
  %606 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %605, i32 0, i32 41, !dbg !6576
  %607 = load %struct._list*, %struct._list** %606, align 8, !dbg !6576
  %608 = getelementptr inbounds %struct._list, %struct._list* %607, i32 0, i32 2, !dbg !6577
  %609 = load i32, i32* %608, align 8, !dbg !6577
  %610 = zext i32 %609 to i64, !dbg !6578
  %611 = load i64, i64* %9, align 8, !dbg !6579
  %612 = icmp ugt i64 %610, %611, !dbg !6580
  br i1 %612, label %613, label %676, !dbg !6581

; <label>:613:                                    ; preds = %604
  %614 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6582
  %615 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %614, i32 0, i32 1, !dbg !6584
  %616 = load i8*, i8** %615, align 8, !dbg !6584
  %617 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6585
  %618 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %617, i32 0, i32 41, !dbg !6586
  %619 = load %struct._list*, %struct._list** %618, align 8, !dbg !6586
  %620 = getelementptr inbounds %struct._list, %struct._list* %619, i32 0, i32 2, !dbg !6587
  %621 = load i32, i32* %620, align 8, !dbg !6587
  %622 = load i64, i64* %9, align 8, !dbg !6588
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.98, i32 0, i32 0), i8* %616, i32 %621, i64 %622), !dbg !6589
  store i64 0, i64* %10, align 8, !dbg !6590
  %623 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6592
  %624 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %623, i32 0, i32 41, !dbg !6593
  %625 = load %struct._list*, %struct._list** %624, align 8, !dbg !6593
  %626 = icmp ne %struct._list* %625, null, !dbg !6594
  br i1 %626, label %628, label %627, !dbg !6595

; <label>:627:                                    ; preds = %613
  br label %634, !dbg !6596

; <label>:628:                                    ; preds = %613
  %629 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6598
  %630 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %629, i32 0, i32 41, !dbg !6600
  %631 = load %struct._list*, %struct._list** %630, align 8, !dbg !6600
  %632 = getelementptr inbounds %struct._list, %struct._list* %631, i32 0, i32 0, !dbg !6601
  %633 = load %struct._element*, %struct._element** %632, align 8, !dbg !6601
  br label %634, !dbg !6602

; <label>:634:                                    ; preds = %628, %627
  %635 = phi %struct._element* [ null, %627 ], [ %633, %628 ], !dbg !6603
  store %struct._element* %635, %struct._element** %6, align 8, !dbg !6605
  br label %636, !dbg !6606

; <label>:636:                                    ; preds = %671, %634
  %637 = load %struct._element*, %struct._element** %6, align 8, !dbg !6607
  %638 = icmp ne %struct._element* %637, null, !dbg !6610
  br i1 %638, label %639, label %675, !dbg !6610

; <label>:639:                                    ; preds = %636
  %640 = load %struct._element*, %struct._element** %6, align 8, !dbg !6611
  %641 = getelementptr inbounds %struct._element, %struct._element* %640, i32 0, i32 0, !dbg !6613
  %642 = load %struct._element*, %struct._element** %641, align 8, !dbg !6613
  store %struct._element* %642, %struct._element** %11, align 8, !dbg !6614
  %643 = load i64, i64* %10, align 8, !dbg !6615
  %644 = load i64, i64* %9, align 8, !dbg !6617
  %645 = icmp ult i64 %643, %644, !dbg !6618
  br i1 %645, label %646, label %647, !dbg !6619

; <label>:646:                                    ; preds = %639
  br label %671, !dbg !6620

; <label>:647:                                    ; preds = %639
  %648 = load %struct._element*, %struct._element** %6, align 8, !dbg !6621
  %649 = getelementptr inbounds %struct._element, %struct._element* %648, i32 0, i32 2, !dbg !6622
  %650 = load i8*, i8** %649, align 8, !dbg !6622
  %651 = bitcast i8* %650 to %struct._ip_address*, !dbg !6623
  store %struct._ip_address* %651, %struct._ip_address** %7, align 8, !dbg !6624
  %652 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6625
  %653 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %652, i32 0, i32 41, !dbg !6626
  %654 = load %struct._list*, %struct._list** %653, align 8, !dbg !6626
  %655 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !6627
  %656 = bitcast %struct._ip_address* %655 to i8*, !dbg !6627
  call void @list_del(%struct._list* %654, i8* %656), !dbg !6628
  %657 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6629
  %658 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %657, i32 0, i32 42, !dbg !6631
  %659 = load %struct._list*, %struct._list** %658, align 8, !dbg !6631
  %660 = icmp ne %struct._list* %659, null, !dbg !6632
  br i1 %660, label %665, label %661, !dbg !6633

; <label>:661:                                    ; preds = %647
  %662 = call %struct._list* @alloc_list(void (i8*)* @free_ipaddress, void (%struct._IO_FILE*, i8*)* @dump_ipaddress), !dbg !6634
  %663 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6635
  %664 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %663, i32 0, i32 42, !dbg !6636
  store %struct._list* %662, %struct._list** %664, align 8, !dbg !6637
  br label %665, !dbg !6635

; <label>:665:                                    ; preds = %661, %647
  %666 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6638
  %667 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %666, i32 0, i32 42, !dbg !6639
  %668 = load %struct._list*, %struct._list** %667, align 8, !dbg !6639
  %669 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !6640
  %670 = bitcast %struct._ip_address* %669 to i8*, !dbg !6640
  call void @list_add(%struct._list* %668, i8* %670), !dbg !6641
  br label %671, !dbg !6642

; <label>:671:                                    ; preds = %665, %646
  %672 = load i64, i64* %10, align 8, !dbg !6643
  %673 = add i64 %672, 1, !dbg !6643
  store i64 %673, i64* %10, align 8, !dbg !6643
  %674 = load %struct._element*, %struct._element** %11, align 8, !dbg !6645
  store %struct._element* %674, %struct._element** %6, align 8, !dbg !6646
  br label %636, !dbg !6647, !llvm.loop !6648

; <label>:675:                                    ; preds = %636
  br label %676, !dbg !6650

; <label>:676:                                    ; preds = %675, %604, %597, %585
  %677 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6651
  %678 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %677, i32 0, i32 37, !dbg !6653
  %679 = load i8, i8* %678, align 1, !dbg !6653
  %680 = zext i8 %679 to i32, !dbg !6651
  %681 = icmp eq i32 %680, 255, !dbg !6654
  br i1 %681, label %682, label %693, !dbg !6655

; <label>:682:                                    ; preds = %676
  %683 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6656
  %684 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %683, i32 0, i32 52, !dbg !6658
  %685 = load i8, i8* %684, align 1, !dbg !6658
  %686 = trunc i8 %685 to i1, !dbg !6658
  br i1 %686, label %687, label %693, !dbg !6659

; <label>:687:                                    ; preds = %682
  %688 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6660
  %689 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %688, i32 0, i32 1, !dbg !6662
  %690 = load i8*, i8** %689, align 8, !dbg !6662
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.99, i32 0, i32 0), i8* %690, i32 255), !dbg !6663
  %691 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6664
  %692 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %691, i32 0, i32 52, !dbg !6665
  store i8 0, i8* %692, align 1, !dbg !6666
  br label %693, !dbg !6667

; <label>:693:                                    ; preds = %687, %682, %676
  %694 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6668
  %695 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %694, i32 0, i32 37, !dbg !6669
  %696 = load i8, i8* %695, align 1, !dbg !6669
  %697 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6670
  %698 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %697, i32 0, i32 38, !dbg !6671
  store i8 %696, i8* %698, align 2, !dbg !6672
  %699 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6673
  %700 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %699, i32 0, i32 37, !dbg !6674
  %701 = load i8, i8* %700, align 1, !dbg !6674
  %702 = zext i8 %701 to i32, !dbg !6673
  %703 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6675
  %704 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %703, i32 0, i32 39, !dbg !6676
  store i32 %702, i32* %704, align 8, !dbg !6677
  %705 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6678
  %706 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %705, i32 0, i32 56, !dbg !6680
  %707 = load i32, i32* %706, align 4, !dbg !6680
  %708 = icmp eq i32 %707, 2, !dbg !6681
  br i1 %708, label %709, label %732, !dbg !6682

; <label>:709:                                    ; preds = %693
  %710 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6683
  %711 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %710, i32 0, i32 52, !dbg !6686
  %712 = load i8, i8* %711, align 1, !dbg !6686
  %713 = trunc i8 %712 to i1, !dbg !6686
  br i1 %713, label %714, label %720, !dbg !6687

; <label>:714:                                    ; preds = %709
  %715 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6688
  %716 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %715, i32 0, i32 1, !dbg !6690
  %717 = load i8*, i8** %716, align 8, !dbg !6690
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.100, i32 0, i32 0), i8* %717), !dbg !6691
  %718 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6692
  %719 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %718, i32 0, i32 52, !dbg !6693
  store i8 0, i8* %719, align 1, !dbg !6694
  br label %720, !dbg !6695

; <label>:720:                                    ; preds = %714, %709
  %721 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6696
  %722 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %721, i32 0, i32 53, !dbg !6698
  %723 = load i64, i64* %722, align 8, !dbg !6698
  %724 = icmp ne i64 %723, 0, !dbg !6696
  br i1 %724, label %725, label %731, !dbg !6699

; <label>:725:                                    ; preds = %720
  %726 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6700
  %727 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %726, i32 0, i32 1, !dbg !6702
  %728 = load i8*, i8** %727, align 8, !dbg !6702
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.101, i32 0, i32 0), i8* %728), !dbg !6703
  %729 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6704
  %730 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %729, i32 0, i32 53, !dbg !6705
  store i64 0, i64* %730, align 8, !dbg !6706
  br label %731, !dbg !6707

; <label>:731:                                    ; preds = %725, %720
  br label %732, !dbg !6708

; <label>:732:                                    ; preds = %731, %693
  %733 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6709
  %734 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %733, i32 0, i32 53, !dbg !6711
  %735 = load i64, i64* %734, align 8, !dbg !6711
  %736 = icmp ne i64 %735, 0, !dbg !6709
  br i1 %736, label %737, label %760, !dbg !6712

; <label>:737:                                    ; preds = %732
  %738 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6713
  %739 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %738, i32 0, i32 8, !dbg !6716
  %740 = load i32, i32* %739, align 4, !dbg !6716
  %741 = icmp ne i32 %740, 0, !dbg !6713
  br i1 %741, label %742, label %748, !dbg !6717

; <label>:742:                                    ; preds = %737
  %743 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6718
  %744 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %743, i32 0, i32 1, !dbg !6720
  %745 = load i8*, i8** %744, align 8, !dbg !6720
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.102, i32 0, i32 0), i8* %745), !dbg !6721
  %746 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6722
  %747 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %746, i32 0, i32 53, !dbg !6723
  store i64 0, i64* %747, align 8, !dbg !6724
  br label %748, !dbg !6725

; <label>:748:                                    ; preds = %742, %737
  %749 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6726
  %750 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %749, i32 0, i32 52, !dbg !6728
  %751 = load i8, i8* %750, align 1, !dbg !6728
  %752 = trunc i8 %751 to i1, !dbg !6728
  br i1 %752, label %753, label %759, !dbg !6729

; <label>:753:                                    ; preds = %748
  %754 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6730
  %755 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %754, i32 0, i32 1, !dbg !6732
  %756 = load i8*, i8** %755, align 8, !dbg !6732
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.103, i32 0, i32 0), i8* %756), !dbg !6733
  %757 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6734
  %758 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %757, i32 0, i32 53, !dbg !6735
  store i64 0, i64* %758, align 8, !dbg !6736
  br label %759, !dbg !6737

; <label>:759:                                    ; preds = %753, %748
  br label %760, !dbg !6738

; <label>:760:                                    ; preds = %759, %732
  %761 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6739
  %762 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %761, i32 0, i32 55, !dbg !6740
  store i32 0, i32* %762, align 8, !dbg !6741
  %763 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6742
  %764 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %763, i32 0, i32 49, !dbg !6744
  %765 = load i32, i32* %764, align 8, !dbg !6744
  %766 = icmp eq i32 %765, -1, !dbg !6745
  br i1 %766, label %767, label %776, !dbg !6746

; <label>:767:                                    ; preds = %760
  %768 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6747
  %769 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %768, i32 0, i32 8, !dbg !6748
  %770 = load i32, i32* %769, align 4, !dbg !6748
  %771 = icmp ne i32 %770, 0, !dbg !6749
  %772 = xor i1 %771, true, !dbg !6749
  %773 = zext i1 %772 to i32, !dbg !6749
  %774 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6750
  %775 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %774, i32 0, i32 49, !dbg !6751
  store i32 %773, i32* %775, align 8, !dbg !6752
  br label %776, !dbg !6750

; <label>:776:                                    ; preds = %767, %760
  %777 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6753
  %778 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %777, i32 0, i32 49, !dbg !6755
  %779 = load i32, i32* %778, align 8, !dbg !6755
  %780 = icmp ne i32 %779, 0, !dbg !6753
  br i1 %780, label %781, label %803, !dbg !6756

; <label>:781:                                    ; preds = %776
  %782 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6757
  %783 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %782, i32 0, i32 37, !dbg !6758
  %784 = load i8, i8* %783, align 1, !dbg !6758
  %785 = zext i8 %784 to i32, !dbg !6757
  %786 = icmp ne i32 %785, 255, !dbg !6759
  br i1 %786, label %787, label %803, !dbg !6760

; <label>:787:                                    ; preds = %781
  %788 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6761
  %789 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %788, i32 0, i32 8, !dbg !6762
  %790 = load i32, i32* %789, align 4, !dbg !6762
  %791 = icmp ne i32 %790, 0, !dbg !6761
  br i1 %791, label %792, label %803, !dbg !6763

; <label>:792:                                    ; preds = %787
  %793 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6764
  %794 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %793, i32 0, i32 60, !dbg !6765
  %795 = load i32, i32* %794, align 4, !dbg !6765
  %796 = icmp eq i32 %795, 2, !dbg !6766
  br i1 %796, label %797, label %803, !dbg !6767

; <label>:797:                                    ; preds = %792
  %798 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6768
  %799 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %798, i32 0, i32 1, !dbg !6770
  %800 = load i8*, i8** %799, align 8, !dbg !6770
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.104, i32 0, i32 0), i8* %800), !dbg !6771
  %801 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6772
  %802 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %801, i32 0, i32 49, !dbg !6773
  store i32 0, i32* %802, align 8, !dbg !6774
  br label %803, !dbg !6775

; <label>:803:                                    ; preds = %797, %792, %787, %781, %776
  %804 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6776
  %805 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %804, i32 0, i32 33, !dbg !6778
  %806 = load i32, i32* %805, align 8, !dbg !6778
  %807 = icmp eq i32 %806, -1, !dbg !6779
  br i1 %807, label %808, label %822, !dbg !6780

; <label>:808:                                    ; preds = %803
  %809 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6781
  %810 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %809, i32 0, i32 8, !dbg !6782
  %811 = load i32, i32* %810, align 4, !dbg !6782
  %812 = icmp ne i32 %811, 0, !dbg !6781
  br i1 %812, label %813, label %814, !dbg !6781

; <label>:813:                                    ; preds = %808
  br label %818, !dbg !6783

; <label>:814:                                    ; preds = %808
  %815 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !6785
  %816 = getelementptr inbounds %struct._data, %struct._data* %815, i32 0, i32 29, !dbg !6787
  %817 = load i32, i32* %816, align 4, !dbg !6787
  br label %818, !dbg !6788

; <label>:818:                                    ; preds = %814, %813
  %819 = phi i32 [ 0, %813 ], [ %817, %814 ], !dbg !6789
  %820 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6791
  %821 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %820, i32 0, i32 33, !dbg !6792
  store i32 %819, i32* %821, align 8, !dbg !6793
  br label %839, !dbg !6791

; <label>:822:                                    ; preds = %803
  %823 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6794
  %824 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %823, i32 0, i32 8, !dbg !6796
  %825 = load i32, i32* %824, align 4, !dbg !6796
  %826 = icmp ne i32 %825, 0, !dbg !6794
  br i1 %826, label %827, label %838, !dbg !6797

; <label>:827:                                    ; preds = %822
  %828 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6798
  %829 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %828, i32 0, i32 33, !dbg !6800
  %830 = load i32, i32* %829, align 8, !dbg !6800
  %831 = icmp ne i32 %830, 0, !dbg !6798
  br i1 %831, label %832, label %838, !dbg !6801

; <label>:832:                                    ; preds = %827
  %833 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6802
  %834 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %833, i32 0, i32 1, !dbg !6804
  %835 = load i8*, i8** %834, align 8, !dbg !6804
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.105, i32 0, i32 0), i8* %835), !dbg !6805
  %836 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6806
  %837 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %836, i32 0, i32 33, !dbg !6807
  store i32 0, i32* %837, align 8, !dbg !6808
  br label %838, !dbg !6809

; <label>:838:                                    ; preds = %832, %827, %822
  br label %839

; <label>:839:                                    ; preds = %838, %818
  %840 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6810
  %841 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %840, i32 0, i32 30, !dbg !6812
  %842 = load i32, i32* %841, align 8, !dbg !6812
  %843 = icmp eq i32 %842, -1, !dbg !6813
  br i1 %843, label %844, label %858, !dbg !6814

; <label>:844:                                    ; preds = %839
  %845 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6815
  %846 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %845, i32 0, i32 8, !dbg !6816
  %847 = load i32, i32* %846, align 4, !dbg !6816
  %848 = icmp ne i32 %847, 0, !dbg !6815
  br i1 %848, label %849, label %850, !dbg !6815

; <label>:849:                                    ; preds = %844
  br label %854, !dbg !6817

; <label>:850:                                    ; preds = %844
  %851 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !6819
  %852 = getelementptr inbounds %struct._data, %struct._data* %851, i32 0, i32 28, !dbg !6821
  %853 = load i32, i32* %852, align 8, !dbg !6821
  br label %854, !dbg !6822

; <label>:854:                                    ; preds = %850, %849
  %855 = phi i32 [ 0, %849 ], [ %853, %850 ], !dbg !6823
  %856 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6825
  %857 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %856, i32 0, i32 30, !dbg !6826
  store i32 %855, i32* %857, align 8, !dbg !6827
  br label %875, !dbg !6825

; <label>:858:                                    ; preds = %839
  %859 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6828
  %860 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %859, i32 0, i32 8, !dbg !6830
  %861 = load i32, i32* %860, align 4, !dbg !6830
  %862 = icmp ne i32 %861, 0, !dbg !6828
  br i1 %862, label %863, label %874, !dbg !6831

; <label>:863:                                    ; preds = %858
  %864 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6832
  %865 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %864, i32 0, i32 30, !dbg !6834
  %866 = load i32, i32* %865, align 8, !dbg !6834
  %867 = icmp ne i32 %866, 0, !dbg !6832
  br i1 %867, label %868, label %874, !dbg !6835

; <label>:868:                                    ; preds = %863
  %869 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6836
  %870 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %869, i32 0, i32 1, !dbg !6838
  %871 = load i8*, i8** %870, align 8, !dbg !6838
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.106, i32 0, i32 0), i8* %871), !dbg !6839
  %872 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6840
  %873 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %872, i32 0, i32 30, !dbg !6841
  store i32 0, i32* %873, align 8, !dbg !6842
  br label %874, !dbg !6843

; <label>:874:                                    ; preds = %868, %863, %858
  br label %875

; <label>:875:                                    ; preds = %874, %854
  %876 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6844
  %877 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %876, i32 0, i32 34, !dbg !6846
  %878 = load i32, i32* %877, align 4, !dbg !6846
  %879 = icmp eq i32 %878, -1, !dbg !6847
  br i1 %879, label %880, label %896, !dbg !6848

; <label>:880:                                    ; preds = %875
  %881 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6849
  %882 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %881, i32 0, i32 8, !dbg !6850
  %883 = load i32, i32* %882, align 4, !dbg !6850
  %884 = icmp ne i32 %883, 0, !dbg !6849
  br i1 %884, label %885, label %886, !dbg !6849

; <label>:885:                                    ; preds = %880
  br label %892, !dbg !6851

; <label>:886:                                    ; preds = %880
  %887 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !6853
  %888 = getelementptr inbounds %struct._data, %struct._data* %887, i32 0, i32 32, !dbg !6855
  %889 = load i8, i8* %888, align 8, !dbg !6855
  %890 = trunc i8 %889 to i1, !dbg !6855
  %891 = zext i1 %890 to i32, !dbg !6853
  br label %892, !dbg !6856

; <label>:892:                                    ; preds = %886, %885
  %893 = phi i32 [ 1, %885 ], [ %891, %886 ], !dbg !6857
  %894 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6859
  %895 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %894, i32 0, i32 34, !dbg !6860
  store i32 %893, i32* %895, align 4, !dbg !6861
  br label %913, !dbg !6859

; <label>:896:                                    ; preds = %875
  %897 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6862
  %898 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %897, i32 0, i32 8, !dbg !6864
  %899 = load i32, i32* %898, align 4, !dbg !6864
  %900 = icmp ne i32 %899, 0, !dbg !6862
  br i1 %900, label %901, label %912, !dbg !6865

; <label>:901:                                    ; preds = %896
  %902 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6866
  %903 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %902, i32 0, i32 34, !dbg !6868
  %904 = load i32, i32* %903, align 4, !dbg !6868
  %905 = icmp ne i32 %904, 0, !dbg !6866
  br i1 %905, label %912, label %906, !dbg !6869

; <label>:906:                                    ; preds = %901
  %907 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6870
  %908 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %907, i32 0, i32 1, !dbg !6872
  %909 = load i8*, i8** %908, align 8, !dbg !6872
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.107, i32 0, i32 0), i8* %909), !dbg !6873
  %910 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6874
  %911 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %910, i32 0, i32 34, !dbg !6875
  store i32 1, i32* %911, align 4, !dbg !6876
  br label %912, !dbg !6877

; <label>:912:                                    ; preds = %906, %901, %896
  br label %913

; <label>:913:                                    ; preds = %912, %892
  %914 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6878
  %915 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %914, i32 0, i32 35, !dbg !6880
  %916 = load i32, i32* %915, align 8, !dbg !6880
  %917 = icmp eq i32 %916, -1, !dbg !6881
  br i1 %917, label %918, label %934, !dbg !6882

; <label>:918:                                    ; preds = %913
  %919 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6883
  %920 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %919, i32 0, i32 8, !dbg !6884
  %921 = load i32, i32* %920, align 4, !dbg !6884
  %922 = icmp ne i32 %921, 0, !dbg !6883
  br i1 %922, label %923, label %924, !dbg !6883

; <label>:923:                                    ; preds = %918
  br label %930, !dbg !6885

; <label>:924:                                    ; preds = %918
  %925 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !6887
  %926 = getelementptr inbounds %struct._data, %struct._data* %925, i32 0, i32 33, !dbg !6889
  %927 = load i8, i8* %926, align 1, !dbg !6889
  %928 = trunc i8 %927 to i1, !dbg !6889
  %929 = zext i1 %928 to i32, !dbg !6887
  br label %930, !dbg !6890

; <label>:930:                                    ; preds = %924, %923
  %931 = phi i32 [ 0, %923 ], [ %929, %924 ], !dbg !6891
  %932 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6893
  %933 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %932, i32 0, i32 35, !dbg !6894
  store i32 %931, i32* %933, align 8, !dbg !6895
  br label %951, !dbg !6893

; <label>:934:                                    ; preds = %913
  %935 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6896
  %936 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %935, i32 0, i32 8, !dbg !6898
  %937 = load i32, i32* %936, align 4, !dbg !6898
  %938 = icmp ne i32 %937, 0, !dbg !6896
  br i1 %938, label %939, label %950, !dbg !6899

; <label>:939:                                    ; preds = %934
  %940 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6900
  %941 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %940, i32 0, i32 35, !dbg !6902
  %942 = load i32, i32* %941, align 8, !dbg !6902
  %943 = icmp ne i32 %942, 0, !dbg !6900
  br i1 %943, label %944, label %950, !dbg !6903

; <label>:944:                                    ; preds = %939
  %945 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6904
  %946 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %945, i32 0, i32 1, !dbg !6906
  %947 = load i8*, i8** %946, align 8, !dbg !6906
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.108, i32 0, i32 0), i8* %947), !dbg !6907
  %948 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6908
  %949 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %948, i32 0, i32 35, !dbg !6909
  store i32 0, i32* %949, align 8, !dbg !6910
  br label %950, !dbg !6911

; <label>:950:                                    ; preds = %944, %939, %934
  br label %951

; <label>:951:                                    ; preds = %950, %930
  %952 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6912
  %953 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %952, i32 0, i32 61, !dbg !6914
  %954 = load i32, i32* %953, align 8, !dbg !6914
  %955 = icmp eq i32 %954, -1, !dbg !6915
  br i1 %955, label %956, label %983, !dbg !6916

; <label>:956:                                    ; preds = %951
  %957 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !6917
  %958 = getelementptr inbounds %struct._data, %struct._data* %957, i32 0, i32 13, !dbg !6920
  %959 = load i32, i32* %958, align 8, !dbg !6920
  %960 = icmp ne i32 %959, -1, !dbg !6921
  br i1 %960, label %961, label %967, !dbg !6922

; <label>:961:                                    ; preds = %956
  %962 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !6923
  %963 = getelementptr inbounds %struct._data, %struct._data* %962, i32 0, i32 13, !dbg !6924
  %964 = load i32, i32* %963, align 8, !dbg !6924
  %965 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6925
  %966 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %965, i32 0, i32 61, !dbg !6926
  store i32 %964, i32* %966, align 8, !dbg !6927
  br label %982, !dbg !6925

; <label>:967:                                    ; preds = %956
  %968 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !6928
  %969 = getelementptr inbounds %struct._data, %struct._data* %968, i32 0, i32 10, !dbg !6930
  %970 = load i32, i32* %969, align 8, !dbg !6930
  %971 = icmp ne i32 %970, -1, !dbg !6931
  br i1 %971, label %972, label %978, !dbg !6932

; <label>:972:                                    ; preds = %967
  %973 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !6933
  %974 = getelementptr inbounds %struct._data, %struct._data* %973, i32 0, i32 10, !dbg !6934
  %975 = load i32, i32* %974, align 8, !dbg !6934
  %976 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6935
  %977 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %976, i32 0, i32 61, !dbg !6936
  store i32 %975, i32* %977, align 8, !dbg !6937
  br label %981, !dbg !6935

; <label>:978:                                    ; preds = %967
  %979 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6938
  %980 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %979, i32 0, i32 61, !dbg !6939
  store i32 0, i32* %980, align 8, !dbg !6940
  br label %981

; <label>:981:                                    ; preds = %978, %972
  br label %982

; <label>:982:                                    ; preds = %981, %961
  br label %983, !dbg !6941

; <label>:983:                                    ; preds = %982, %951
  %984 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6942
  %985 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %984, i32 0, i32 47, !dbg !6944
  %986 = load i32, i32* %985, align 8, !dbg !6944
  %987 = icmp ne i32 %986, 0, !dbg !6942
  br i1 %987, label %991, label %988, !dbg !6945

; <label>:988:                                    ; preds = %983
  %989 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6946
  %990 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %989, i32 0, i32 47, !dbg !6947
  store i32 1000000, i32* %990, align 8, !dbg !6948
  br label %991, !dbg !6946

; <label>:991:                                    ; preds = %988, %983
  %992 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6949
  %993 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %992, i32 0, i32 60, !dbg !6951
  %994 = load i32, i32* %993, align 4, !dbg !6951
  %995 = icmp eq i32 %994, 2, !dbg !6952
  br i1 %995, label %996, label %1053, !dbg !6953

; <label>:996:                                    ; preds = %991
  %997 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6954
  %998 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %997, i32 0, i32 47, !dbg !6957
  %999 = load i32, i32* %998, align 8, !dbg !6957
  %1000 = icmp uge i32 %999, 256000000, !dbg !6958
  br i1 %1000, label %1001, label %1013, !dbg !6959

; <label>:1001:                                   ; preds = %996
  %1002 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6960
  %1003 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1002, i32 0, i32 1, !dbg !6962
  %1004 = load i8*, i8** %1003, align 8, !dbg !6962
  %1005 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6963
  %1006 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1005, i32 0, i32 47, !dbg !6964
  %1007 = load i32, i32* %1006, align 8, !dbg !6964
  %1008 = uitofp i32 %1007 to float, !dbg !6965
  %1009 = fdiv float %1008, 1.000000e+06, !dbg !6966
  %1010 = fpext float %1009 to double, !dbg !6965
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.109, i32 0, i32 0), i8* %1004, double %1010, i32 256, i32 255), !dbg !6967
  %1011 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6968
  %1012 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1011, i32 0, i32 47, !dbg !6969
  store i32 255000000, i32* %1012, align 8, !dbg !6970
  br label %1052, !dbg !6971

; <label>:1013:                                   ; preds = %996
  %1014 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6972
  %1015 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1014, i32 0, i32 47, !dbg !6974
  %1016 = load i32, i32* %1015, align 8, !dbg !6974
  %1017 = urem i32 %1016, 1000000, !dbg !6975
  %1018 = icmp ne i32 %1017, 0, !dbg !6975
  br i1 %1018, label %1019, label %1051, !dbg !6976

; <label>:1019:                                   ; preds = %1013
  %1020 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6977
  %1021 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1020, i32 0, i32 1, !dbg !6979
  %1022 = load i8*, i8** %1021, align 8, !dbg !6979
  %1023 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6980
  %1024 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1023, i32 0, i32 47, !dbg !6981
  %1025 = load i32, i32* %1024, align 8, !dbg !6981
  %1026 = uitofp i32 %1025 to float, !dbg !6982
  %1027 = fdiv float %1026, 1.000000e+06, !dbg !6983
  %1028 = fpext float %1027 to double, !dbg !6982
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.110, i32 0, i32 0), i8* %1022, double %1028), !dbg !6984
  %1029 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6985
  %1030 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1029, i32 0, i32 47, !dbg !6986
  %1031 = load i32, i32* %1030, align 8, !dbg !6986
  %1032 = add i32 %1031, 500000, !dbg !6987
  %1033 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6988
  %1034 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1033, i32 0, i32 47, !dbg !6989
  store i32 %1032, i32* %1034, align 8, !dbg !6990
  %1035 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6991
  %1036 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1035, i32 0, i32 47, !dbg !6992
  %1037 = load i32, i32* %1036, align 8, !dbg !6992
  %1038 = urem i32 %1037, 1000000, !dbg !6993
  %1039 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6994
  %1040 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1039, i32 0, i32 47, !dbg !6995
  %1041 = load i32, i32* %1040, align 8, !dbg !6996
  %1042 = sub i32 %1041, %1038, !dbg !6996
  store i32 %1042, i32* %1040, align 8, !dbg !6996
  %1043 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !6997
  %1044 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1043, i32 0, i32 47, !dbg !6999
  %1045 = load i32, i32* %1044, align 8, !dbg !6999
  %1046 = icmp eq i32 %1045, 0, !dbg !7000
  br i1 %1046, label %1047, label %1050, !dbg !7001

; <label>:1047:                                   ; preds = %1019
  %1048 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7002
  %1049 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1048, i32 0, i32 47, !dbg !7003
  store i32 1000000, i32* %1049, align 8, !dbg !7004
  br label %1050, !dbg !7002

; <label>:1050:                                   ; preds = %1047, %1019
  br label %1051, !dbg !7005

; <label>:1051:                                   ; preds = %1050, %1013
  br label %1052

; <label>:1052:                                   ; preds = %1051, %1001
  br label %1110, !dbg !7006

; <label>:1053:                                   ; preds = %991
  %1054 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7007
  %1055 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1054, i32 0, i32 47, !dbg !7010
  %1056 = load i32, i32* %1055, align 8, !dbg !7010
  %1057 = icmp uge i32 %1056, 40960000, !dbg !7011
  br i1 %1057, label %1058, label %1070, !dbg !7012

; <label>:1058:                                   ; preds = %1053
  %1059 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7013
  %1060 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1059, i32 0, i32 1, !dbg !7015
  %1061 = load i8*, i8** %1060, align 8, !dbg !7015
  %1062 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7016
  %1063 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1062, i32 0, i32 47, !dbg !7017
  %1064 = load i32, i32* %1063, align 8, !dbg !7017
  %1065 = uitofp i32 %1064 to float, !dbg !7018
  %1066 = fdiv float %1065, 1.000000e+06, !dbg !7019
  %1067 = fpext float %1066 to double, !dbg !7018
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.111, i32 0, i32 0), i8* %1061, double %1067, double 0x40447AE140000000, double 0x40447999A0000000), !dbg !7020
  %1068 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7021
  %1069 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1068, i32 0, i32 47, !dbg !7022
  store i32 40950000, i32* %1069, align 8, !dbg !7023
  br label %1109, !dbg !7024

; <label>:1070:                                   ; preds = %1053
  %1071 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7025
  %1072 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1071, i32 0, i32 47, !dbg !7027
  %1073 = load i32, i32* %1072, align 8, !dbg !7027
  %1074 = urem i32 %1073, 10000, !dbg !7028
  %1075 = icmp ne i32 %1074, 0, !dbg !7028
  br i1 %1075, label %1076, label %1108, !dbg !7029

; <label>:1076:                                   ; preds = %1070
  %1077 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7030
  %1078 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1077, i32 0, i32 1, !dbg !7032
  %1079 = load i8*, i8** %1078, align 8, !dbg !7032
  %1080 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7033
  %1081 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1080, i32 0, i32 47, !dbg !7034
  %1082 = load i32, i32* %1081, align 8, !dbg !7034
  %1083 = uitofp i32 %1082 to float, !dbg !7035
  %1084 = fdiv float %1083, 1.000000e+06, !dbg !7036
  %1085 = fpext float %1084 to double, !dbg !7035
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.112, i32 0, i32 0), i8* %1079, double %1085), !dbg !7037
  %1086 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7038
  %1087 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1086, i32 0, i32 47, !dbg !7039
  %1088 = load i32, i32* %1087, align 8, !dbg !7039
  %1089 = add i32 %1088, 5000, !dbg !7040
  %1090 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7041
  %1091 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1090, i32 0, i32 47, !dbg !7042
  store i32 %1089, i32* %1091, align 8, !dbg !7043
  %1092 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7044
  %1093 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1092, i32 0, i32 47, !dbg !7045
  %1094 = load i32, i32* %1093, align 8, !dbg !7045
  %1095 = urem i32 %1094, 10000, !dbg !7046
  %1096 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7047
  %1097 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1096, i32 0, i32 47, !dbg !7048
  %1098 = load i32, i32* %1097, align 8, !dbg !7049
  %1099 = sub i32 %1098, %1095, !dbg !7049
  store i32 %1099, i32* %1097, align 8, !dbg !7049
  %1100 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7050
  %1101 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1100, i32 0, i32 47, !dbg !7052
  %1102 = load i32, i32* %1101, align 8, !dbg !7052
  %1103 = icmp eq i32 %1102, 0, !dbg !7053
  br i1 %1103, label %1104, label %1107, !dbg !7054

; <label>:1104:                                   ; preds = %1076
  %1105 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7055
  %1106 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1105, i32 0, i32 47, !dbg !7056
  store i32 10000, i32* %1106, align 8, !dbg !7057
  br label %1107, !dbg !7055

; <label>:1107:                                   ; preds = %1104, %1076
  br label %1108, !dbg !7058

; <label>:1108:                                   ; preds = %1107, %1070
  br label %1109

; <label>:1109:                                   ; preds = %1108, %1058
  br label %1110

; <label>:1110:                                   ; preds = %1109, %1052
  %1111 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7059
  %1112 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1111, i32 0, i32 47, !dbg !7060
  %1113 = load i32, i32* %1112, align 8, !dbg !7060
  %1114 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7061
  %1115 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1114, i32 0, i32 48, !dbg !7062
  store i32 %1113, i32* %1115, align 4, !dbg !7063
  %1116 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7064
  %1117 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1116, i32 0, i32 6, !dbg !7066
  %1118 = load i8, i8* %1117, align 1, !dbg !7066
  %1119 = trunc i8 %1118 to i1, !dbg !7066
  br i1 %1119, label %1125, label %1120, !dbg !7067

; <label>:1120:                                   ; preds = %1110
  %1121 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !7068
  %1122 = getelementptr inbounds %struct._data, %struct._data* %1121, i32 0, i32 3, !dbg !7070
  %1123 = load i8, i8* %1122, align 8, !dbg !7070
  %1124 = trunc i8 %1123 to i1, !dbg !7070
  br i1 %1124, label %1125, label %1130, !dbg !7071

; <label>:1125:                                   ; preds = %1120, %1110
  %1126 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7072
  %1127 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1126, i32 0, i32 4, !dbg !7073
  %1128 = load %struct._interface*, %struct._interface** %1127, align 8, !dbg !7073
  %1129 = getelementptr inbounds %struct._interface, %struct._interface* %1128, i32 0, i32 5, !dbg !7074
  store i8 1, i8* %1129, align 4, !dbg !7075
  br label %1130, !dbg !7072

; <label>:1130:                                   ; preds = %1125, %1120
  %1131 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7076
  %1132 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1131, i32 0, i32 17, !dbg !7078
  %1133 = load i8, i8* %1132, align 8, !dbg !7078
  %1134 = trunc i8 %1133 to i1, !dbg !7078
  br i1 %1134, label %1138, label %1135, !dbg !7079

; <label>:1135:                                   ; preds = %1130
  %1136 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7080
  %1137 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1136, i32 0, i32 18, !dbg !7081
  store i8 0, i8* %1137, align 1, !dbg !7082
  br label %1138, !dbg !7080

; <label>:1138:                                   ; preds = %1135, %1130
  %1139 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7083
  %1140 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1139, i32 0, i32 9, !dbg !7085
  %1141 = call zeroext i1 @__test_bit(i32 0, i64* %1140), !dbg !7086
  br i1 %1141, label %1142, label %1441, !dbg !7087

; <label>:1142:                                   ; preds = %1138
  call void @llvm.dbg.declare(metadata %struct._list** %20, metadata !7088, metadata !793), !dbg !7090
  %1143 = call %struct._list* @get_if_list(), !dbg !7091
  store %struct._list* %1143, %struct._list** %20, align 8, !dbg !7090
  %1144 = load %struct._list*, %struct._list** %20, align 8, !dbg !7092
  %1145 = icmp eq %struct._list* %1144, null, !dbg !7094
  br i1 %1145, label %1327, label %1146, !dbg !7095

; <label>:1146:                                   ; preds = %1142
  %1147 = load %struct._list*, %struct._list** %20, align 8, !dbg !7096
  %1148 = getelementptr inbounds %struct._list, %struct._list* %1147, i32 0, i32 0, !dbg !7098
  %1149 = load %struct._element*, %struct._element** %1148, align 8, !dbg !7098
  %1150 = icmp eq %struct._element* %1149, null, !dbg !7099
  br i1 %1150, label %1151, label %1156, !dbg !7100

; <label>:1151:                                   ; preds = %1146
  %1152 = load %struct._list*, %struct._list** %20, align 8, !dbg !7101
  %1153 = getelementptr inbounds %struct._list, %struct._list* %1152, i32 0, i32 1, !dbg !7103
  %1154 = load %struct._element*, %struct._element** %1153, align 8, !dbg !7103
  %1155 = icmp eq %struct._element* %1154, null, !dbg !7104
  br i1 %1155, label %1327, label %1156, !dbg !7105

; <label>:1156:                                   ; preds = %1151, %1146
  %1157 = load %struct._list*, %struct._list** %20, align 8, !dbg !7106
  %1158 = icmp ne %struct._list* %1157, null, !dbg !7109
  br i1 %1158, label %1160, label %1159, !dbg !7110

; <label>:1159:                                   ; preds = %1156
  br label %1164, !dbg !7111

; <label>:1160:                                   ; preds = %1156
  %1161 = load %struct._list*, %struct._list** %20, align 8, !dbg !7113
  %1162 = getelementptr inbounds %struct._list, %struct._list* %1161, i32 0, i32 0, !dbg !7115
  %1163 = load %struct._element*, %struct._element** %1162, align 8, !dbg !7115
  br label %1164, !dbg !7116

; <label>:1164:                                   ; preds = %1160, %1159
  %1165 = phi %struct._element* [ null, %1159 ], [ %1163, %1160 ], !dbg !7117
  store %struct._element* %1165, %struct._element** %6, align 8, !dbg !7119
  br label %1166, !dbg !7120

; <label>:1166:                                   ; preds = %1278, %1164
  %1167 = load %struct._element*, %struct._element** %6, align 8, !dbg !7121
  %1168 = icmp ne %struct._element* %1167, null, !dbg !7124
  br i1 %1168, label %1169, label %1282, !dbg !7124

; <label>:1169:                                   ; preds = %1166
  %1170 = load %struct._element*, %struct._element** %6, align 8, !dbg !7125
  %1171 = getelementptr inbounds %struct._element, %struct._element* %1170, i32 0, i32 2, !dbg !7127
  %1172 = load i8*, i8** %1171, align 8, !dbg !7127
  %1173 = bitcast i8* %1172 to %struct._interface*, !dbg !7128
  store %struct._interface* %1173, %struct._interface** %5, align 8, !dbg !7129
  %1174 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7130
  %1175 = getelementptr inbounds %struct._interface, %struct._interface* %1174, i32 0, i32 12, !dbg !7132
  %1176 = load i8, i8* %1175, align 4, !dbg !7132
  %1177 = trunc i8 %1176 to i1, !dbg !7132
  br i1 %1177, label %1178, label %1277, !dbg !7133

; <label>:1178:                                   ; preds = %1169
  %1179 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7134
  %1180 = getelementptr inbounds %struct._interface, %struct._interface* %1179, i32 0, i32 8, !dbg !7135
  %1181 = getelementptr inbounds [32 x i8], [32 x i8]* %1180, i32 0, i32 0, !dbg !7134
  %1182 = call i32 @memcmp(i8* %1181, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ll_addr, i32 0, i32 0), i64 4) #9, !dbg !7136
  %1183 = icmp ne i32 %1182, 0, !dbg !7136
  br i1 %1183, label %1277, label %1184, !dbg !7137

; <label>:1184:                                   ; preds = %1178
  %1185 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7138
  %1186 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1185, i32 0, i32 0, !dbg !7139
  %1187 = load i16, i16* %1186, align 8, !dbg !7139
  %1188 = zext i16 %1187 to i32, !dbg !7138
  %1189 = icmp eq i32 %1188, 2, !dbg !7140
  br i1 %1189, label %1190, label %1197, !dbg !7141

; <label>:1190:                                   ; preds = %1184
  %1191 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7142
  %1192 = getelementptr inbounds %struct._interface, %struct._interface* %1191, i32 0, i32 8, !dbg !7144
  %1193 = getelementptr inbounds [32 x i8], [32 x i8]* %1192, i64 0, i64 4, !dbg !7142
  %1194 = load i8, i8* %1193, align 2, !dbg !7142
  %1195 = zext i8 %1194 to i32, !dbg !7142
  %1196 = icmp eq i32 %1195, 1, !dbg !7145
  br i1 %1196, label %1210, label %1197, !dbg !7146

; <label>:1197:                                   ; preds = %1190, %1184
  %1198 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7147
  %1199 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1198, i32 0, i32 0, !dbg !7148
  %1200 = load i16, i16* %1199, align 8, !dbg !7148
  %1201 = zext i16 %1200 to i32, !dbg !7147
  %1202 = icmp eq i32 %1201, 10, !dbg !7149
  br i1 %1202, label %1203, label %1277, !dbg !7150

; <label>:1203:                                   ; preds = %1197
  %1204 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7151
  %1205 = getelementptr inbounds %struct._interface, %struct._interface* %1204, i32 0, i32 8, !dbg !7152
  %1206 = getelementptr inbounds [32 x i8], [32 x i8]* %1205, i64 0, i64 4, !dbg !7151
  %1207 = load i8, i8* %1206, align 2, !dbg !7151
  %1208 = zext i8 %1207 to i32, !dbg !7151
  %1209 = icmp eq i32 %1208, 2, !dbg !7153
  br i1 %1209, label %1210, label %1277, !dbg !7154

; <label>:1210:                                   ; preds = %1203, %1190
  %1211 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7155
  %1212 = getelementptr inbounds %struct._interface, %struct._interface* %1211, i32 0, i32 8, !dbg !7156
  %1213 = getelementptr inbounds [32 x i8], [32 x i8]* %1212, i64 0, i64 5, !dbg !7155
  %1214 = load i8, i8* %1213, align 1, !dbg !7155
  %1215 = zext i8 %1214 to i32, !dbg !7155
  %1216 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7157
  %1217 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1216, i32 0, i32 36, !dbg !7158
  %1218 = load i8, i8* %1217, align 4, !dbg !7158
  %1219 = zext i8 %1218 to i32, !dbg !7157
  %1220 = icmp eq i32 %1215, %1219, !dbg !7159
  br i1 %1220, label %1221, label %1277, !dbg !7160

; <label>:1221:                                   ; preds = %1210
  %1222 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7161
  %1223 = getelementptr inbounds %struct._interface, %struct._interface* %1222, i32 0, i32 14, !dbg !7162
  %1224 = load %struct._interface*, %struct._interface** %1223, align 8, !dbg !7162
  %1225 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7163
  %1226 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1225, i32 0, i32 4, !dbg !7164
  %1227 = load %struct._interface*, %struct._interface** %1226, align 8, !dbg !7164
  %1228 = icmp eq %struct._interface* %1224, %1227, !dbg !7165
  br i1 %1228, label %1229, label %1277, !dbg !7166

; <label>:1229:                                   ; preds = %1221
  %1230 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7168
  %1231 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1230, i32 0, i32 1, !dbg !7170
  %1232 = load i8*, i8** %1231, align 8, !dbg !7170
  %1233 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7171
  %1234 = getelementptr inbounds %struct._interface, %struct._interface* %1233, i32 0, i32 0, !dbg !7172
  %1235 = getelementptr inbounds [16 x i8], [16 x i8]* %1234, i32 0, i32 0, !dbg !7171
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.113, i32 0, i32 0), i8* %1232, i8* %1235), !dbg !7173
  %1236 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7174
  %1237 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1236, i32 0, i32 10, !dbg !7176
  %1238 = getelementptr inbounds [16 x i8], [16 x i8]* %1237, i64 0, i64 0, !dbg !7174
  %1239 = load i8, i8* %1238, align 8, !dbg !7174
  %1240 = sext i8 %1239 to i32, !dbg !7174
  %1241 = icmp ne i32 %1240, 0, !dbg !7174
  br i1 %1241, label %1242, label %1264, !dbg !7177

; <label>:1242:                                   ; preds = %1229
  %1243 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7178
  %1244 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1243, i32 0, i32 10, !dbg !7179
  %1245 = getelementptr inbounds [16 x i8], [16 x i8]* %1244, i32 0, i32 0, !dbg !7178
  %1246 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7180
  %1247 = getelementptr inbounds %struct._interface, %struct._interface* %1246, i32 0, i32 0, !dbg !7181
  %1248 = getelementptr inbounds [16 x i8], [16 x i8]* %1247, i32 0, i32 0, !dbg !7180
  %1249 = call i32 @strcmp(i8* %1245, i8* %1248) #9, !dbg !7182
  %1250 = icmp ne i32 %1249, 0, !dbg !7182
  br i1 %1250, label %1251, label %1264, !dbg !7183

; <label>:1251:                                   ; preds = %1242
  %1252 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7185
  %1253 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1252, i32 0, i32 1, !dbg !7186
  %1254 = load i8*, i8** %1253, align 8, !dbg !7186
  %1255 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7187
  %1256 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1255, i32 0, i32 10, !dbg !7188
  %1257 = getelementptr inbounds [16 x i8], [16 x i8]* %1256, i32 0, i32 0, !dbg !7187
  %1258 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7189
  %1259 = getelementptr inbounds %struct._interface, %struct._interface* %1258, i32 0, i32 0, !dbg !7190
  %1260 = getelementptr inbounds [16 x i8], [16 x i8]* %1259, i32 0, i32 0, !dbg !7189
  %1261 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7191
  %1262 = getelementptr inbounds %struct._interface, %struct._interface* %1261, i32 0, i32 0, !dbg !7192
  %1263 = getelementptr inbounds [16 x i8], [16 x i8]* %1262, i32 0, i32 0, !dbg !7191
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.114, i32 0, i32 0), i8* %1254, i8* %1257, i8* %1260, i8* %1263), !dbg !7193
  br label %1264, !dbg !7193

; <label>:1264:                                   ; preds = %1251, %1242, %1229
  %1265 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7194
  %1266 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1265, i32 0, i32 10, !dbg !7195
  %1267 = getelementptr inbounds [16 x i8], [16 x i8]* %1266, i32 0, i32 0, !dbg !7194
  %1268 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7196
  %1269 = getelementptr inbounds %struct._interface, %struct._interface* %1268, i32 0, i32 0, !dbg !7197
  %1270 = getelementptr inbounds [16 x i8], [16 x i8]* %1269, i32 0, i32 0, !dbg !7196
  %1271 = call i8* @strcpy(i8* %1267, i8* %1270) #8, !dbg !7198
  %1272 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7199
  %1273 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7200
  %1274 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1273, i32 0, i32 4, !dbg !7201
  store %struct._interface* %1272, %struct._interface** %1274, align 8, !dbg !7202
  %1275 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7203
  %1276 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1275, i32 0, i32 9, !dbg !7204
  call void @__set_bit(i32 1, i64* %1276), !dbg !7205
  store i8 1, i8* %12, align 1, !dbg !7206
  br label %1282, !dbg !7207

; <label>:1277:                                   ; preds = %1221, %1210, %1203, %1197, %1178, %1169
  br label %1278, !dbg !7208

; <label>:1278:                                   ; preds = %1277
  %1279 = load %struct._element*, %struct._element** %6, align 8, !dbg !7209
  %1280 = getelementptr inbounds %struct._element, %struct._element* %1279, i32 0, i32 0, !dbg !7211
  %1281 = load %struct._element*, %struct._element** %1280, align 8, !dbg !7211
  store %struct._element* %1281, %struct._element** %6, align 8, !dbg !7212
  br label %1166, !dbg !7213, !llvm.loop !7214

; <label>:1282:                                   ; preds = %1264, %1166
  %1283 = load i8, i8* %12, align 1, !dbg !7216
  %1284 = trunc i8 %1283 to i1, !dbg !7216
  br i1 %1284, label %1326, label %1285, !dbg !7218

; <label>:1285:                                   ; preds = %1282
  %1286 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7219
  %1287 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1286, i32 0, i32 10, !dbg !7220
  %1288 = getelementptr inbounds [16 x i8], [16 x i8]* %1287, i64 0, i64 0, !dbg !7219
  %1289 = load i8, i8* %1288, align 8, !dbg !7219
  %1290 = sext i8 %1289 to i32, !dbg !7219
  %1291 = icmp ne i32 %1290, 0, !dbg !7219
  br i1 %1291, label %1292, label %1326, !dbg !7221

; <label>:1292:                                   ; preds = %1285
  %1293 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7222
  %1294 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1293, i32 0, i32 10, !dbg !7223
  %1295 = getelementptr inbounds [16 x i8], [16 x i8]* %1294, i32 0, i32 0, !dbg !7222
  %1296 = call %struct._interface* @if_get_by_ifname(i8* %1295, i32 0), !dbg !7224
  store %struct._interface* %1296, %struct._interface** %5, align 8, !dbg !7225
  %1297 = icmp ne %struct._interface* %1296, null, !dbg !7225
  br i1 %1297, label %1298, label %1326, !dbg !7226

; <label>:1298:                                   ; preds = %1292
  %1299 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7227
  %1300 = getelementptr inbounds %struct._interface, %struct._interface* %1299, i32 0, i32 1, !dbg !7228
  %1301 = load i32, i32* %1300, align 8, !dbg !7228
  %1302 = icmp ne i32 %1301, 0, !dbg !7227
  br i1 %1302, label %1303, label %1326, !dbg !7229

; <label>:1303:                                   ; preds = %1298
  %1304 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7231
  %1305 = getelementptr inbounds %struct._interface, %struct._interface* %1304, i32 0, i32 12, !dbg !7234
  %1306 = load i8, i8* %1305, align 4, !dbg !7234
  %1307 = trunc i8 %1306 to i1, !dbg !7234
  br i1 %1307, label %1308, label %1315, !dbg !7235

; <label>:1308:                                   ; preds = %1303
  %1309 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7236
  %1310 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1309, i32 0, i32 1, !dbg !7237
  %1311 = load i8*, i8** %1310, align 8, !dbg !7237
  %1312 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7238
  %1313 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1312, i32 0, i32 10, !dbg !7239
  %1314 = getelementptr inbounds [16 x i8], [16 x i8]* %1313, i32 0, i32 0, !dbg !7238
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.115, i32 0, i32 0), i8* %1311, i8* %1314), !dbg !7240
  br label %1325, !dbg !7240

; <label>:1315:                                   ; preds = %1303
  %1316 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7241
  %1317 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1316, i32 0, i32 1, !dbg !7243
  %1318 = load i8*, i8** %1317, align 8, !dbg !7243
  %1319 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7244
  %1320 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1319, i32 0, i32 10, !dbg !7245
  %1321 = getelementptr inbounds [16 x i8], [16 x i8]* %1320, i32 0, i32 0, !dbg !7244
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.116, i32 0, i32 0), i8* %1318, i8* %1321), !dbg !7246
  %1322 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7247
  %1323 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1322, i32 0, i32 10, !dbg !7248
  %1324 = getelementptr inbounds [16 x i8], [16 x i8]* %1323, i64 0, i64 0, !dbg !7247
  store i8 0, i8* %1324, align 8, !dbg !7249
  br label %1325

; <label>:1325:                                   ; preds = %1315, %1308
  br label %1326, !dbg !7250

; <label>:1326:                                   ; preds = %1325, %1298, %1292, %1285, %1282
  br label %1327, !dbg !7251

; <label>:1327:                                   ; preds = %1326, %1151, %1142
  %1328 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7252
  %1329 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1328, i32 0, i32 10, !dbg !7254
  %1330 = getelementptr inbounds [16 x i8], [16 x i8]* %1329, i64 0, i64 0, !dbg !7252
  %1331 = load i8, i8* %1330, align 8, !dbg !7252
  %1332 = icmp ne i8 %1331, 0, !dbg !7252
  br i1 %1332, label %1398, label %1333, !dbg !7255

; <label>:1333:                                   ; preds = %1327
  call void @llvm.dbg.declare(metadata i16* %21, metadata !7256, metadata !793), !dbg !7258
  store i16 0, i16* %21, align 2, !dbg !7258
  %1334 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7259
  %1335 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7260
  %1336 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1335, i32 0, i32 36, !dbg !7261
  %1337 = load i8, i8* %1336, align 4, !dbg !7261
  %1338 = zext i8 %1337 to i32, !dbg !7260
  %1339 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1334, i64 16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117, i32 0, i32 0), i32 %1338) #8, !dbg !7262
  br label %1340, !dbg !7263

; <label>:1340:                                   ; preds = %1333, %1383
  %1341 = load %struct._element*, %struct._element** %6, align 8, !dbg !7264
  %1342 = icmp ne %struct._element* %1341, null, !dbg !7264
  br i1 %1342, label %1353, label %1343, !dbg !7267

; <label>:1343:                                   ; preds = %1340
  %1344 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7268
  %1345 = call %struct._interface* @if_get_by_ifname(i8* %1344, i32 0), !dbg !7270
  store %struct._interface* %1345, %struct._interface** %5, align 8, !dbg !7271
  %1346 = icmp ne %struct._interface* %1345, null, !dbg !7271
  br i1 %1346, label %1347, label %1352, !dbg !7272

; <label>:1347:                                   ; preds = %1343
  %1348 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7273
  %1349 = getelementptr inbounds %struct._interface, %struct._interface* %1348, i32 0, i32 1, !dbg !7275
  %1350 = load i32, i32* %1349, align 8, !dbg !7275
  %1351 = icmp ne i32 %1350, 0, !dbg !7273
  br i1 %1351, label %1353, label %1352, !dbg !7276

; <label>:1352:                                   ; preds = %1347, %1343
  br label %1392, !dbg !7277

; <label>:1353:                                   ; preds = %1347, %1340
  %1354 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7278
  %1355 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1354, i32 0, i32 0, !dbg !7280
  %1356 = load i16, i16* %1355, align 8, !dbg !7280
  %1357 = zext i16 %1356 to i32, !dbg !7278
  %1358 = icmp eq i32 %1357, 10, !dbg !7281
  br i1 %1358, label %1359, label %1380, !dbg !7282

; <label>:1359:                                   ; preds = %1353
  %1360 = load i16, i16* %21, align 2, !dbg !7283
  %1361 = zext i16 %1360 to i32, !dbg !7283
  %1362 = icmp eq i32 %1361, 0, !dbg !7286
  br i1 %1362, label %1363, label %1364, !dbg !7287

; <label>:1363:                                   ; preds = %1359
  store i16 6, i16* %21, align 2, !dbg !7288
  br label %1379, !dbg !7289

; <label>:1364:                                   ; preds = %1359
  %1365 = load i16, i16* %21, align 2, !dbg !7290
  %1366 = zext i16 %1365 to i32, !dbg !7290
  %1367 = icmp eq i32 %1366, 6, !dbg !7292
  br i1 %1367, label %1368, label %1369, !dbg !7293

; <label>:1368:                                   ; preds = %1364
  store i16 1, i16* %21, align 2, !dbg !7294
  br label %1378, !dbg !7295

; <label>:1369:                                   ; preds = %1364
  %1370 = load i16, i16* %21, align 2, !dbg !7296
  %1371 = add i16 %1370, 1, !dbg !7296
  store i16 %1371, i16* %21, align 2, !dbg !7296
  %1372 = zext i16 %1371 to i32, !dbg !7296
  %1373 = icmp eq i32 %1372, 6, !dbg !7298
  br i1 %1373, label %1374, label %1377, !dbg !7299

; <label>:1374:                                   ; preds = %1369
  %1375 = load i16, i16* %21, align 2, !dbg !7300
  %1376 = add i16 %1375, 1, !dbg !7300
  store i16 %1376, i16* %21, align 2, !dbg !7300
  br label %1377, !dbg !7301

; <label>:1377:                                   ; preds = %1374, %1369
  br label %1378

; <label>:1378:                                   ; preds = %1377, %1368
  br label %1379

; <label>:1379:                                   ; preds = %1378, %1363
  br label %1383, !dbg !7302

; <label>:1380:                                   ; preds = %1353
  %1381 = load i16, i16* %21, align 2, !dbg !7303
  %1382 = add i16 %1381, 1, !dbg !7303
  store i16 %1382, i16* %21, align 2, !dbg !7303
  br label %1383

; <label>:1383:                                   ; preds = %1380, %1379
  %1384 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7304
  %1385 = load i16, i16* %21, align 2, !dbg !7305
  %1386 = zext i16 %1385 to i32, !dbg !7305
  %1387 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7306
  %1388 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1387, i32 0, i32 36, !dbg !7307
  %1389 = load i8, i8* %1388, align 4, !dbg !7307
  %1390 = zext i8 %1389 to i32, !dbg !7306
  %1391 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1384, i64 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.118, i32 0, i32 0), i32 %1386, i32 %1390) #8, !dbg !7308
  br label %1340, !dbg !7309, !llvm.loop !7311

; <label>:1392:                                   ; preds = %1352
  %1393 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7312
  %1394 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1393, i32 0, i32 10, !dbg !7313
  %1395 = getelementptr inbounds [16 x i8], [16 x i8]* %1394, i32 0, i32 0, !dbg !7312
  %1396 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7314
  %1397 = call i8* @strncpy(i8* %1395, i8* %1396, i64 16) #8, !dbg !7315
  br label %1398, !dbg !7316

; <label>:1398:                                   ; preds = %1392, %1327
  %1399 = load i8, i8* %12, align 1, !dbg !7317
  %1400 = trunc i8 %1399 to i1, !dbg !7317
  br i1 %1400, label %1414, label %1401, !dbg !7319

; <label>:1401:                                   ; preds = %1398
  %1402 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7320
  %1403 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1402, i32 0, i32 10, !dbg !7322
  %1404 = getelementptr inbounds [16 x i8], [16 x i8]* %1403, i32 0, i32 0, !dbg !7320
  %1405 = call %struct._interface* @if_get_by_ifname(i8* %1404, i32 2), !dbg !7323
  store %struct._interface* %1405, %struct._interface** %5, align 8, !dbg !7324
  %1406 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7325
  %1407 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1406, i32 0, i32 4, !dbg !7326
  %1408 = load %struct._interface*, %struct._interface** %1407, align 8, !dbg !7326
  %1409 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7327
  %1410 = getelementptr inbounds %struct._interface, %struct._interface* %1409, i32 0, i32 14, !dbg !7328
  store %struct._interface* %1408, %struct._interface** %1410, align 8, !dbg !7329
  %1411 = load %struct._interface*, %struct._interface** %5, align 8, !dbg !7330
  %1412 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7331
  %1413 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1412, i32 0, i32 4, !dbg !7332
  store %struct._interface* %1411, %struct._interface** %1413, align 8, !dbg !7333
  br label %1414, !dbg !7334

; <label>:1414:                                   ; preds = %1401, %1398
  %1415 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7335
  %1416 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1415, i32 0, i32 8, !dbg !7337
  %1417 = load i32, i32* %1416, align 4, !dbg !7337
  %1418 = icmp ne i32 %1417, 0, !dbg !7335
  br i1 %1418, label %1419, label %1429, !dbg !7338

; <label>:1419:                                   ; preds = %1414
  %1420 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7339
  %1421 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1420, i32 0, i32 9, !dbg !7341
  %1422 = call zeroext i1 @__test_bit(i32 2, i64* %1421), !dbg !7342
  br i1 %1422, label %1423, label %1429, !dbg !7343

; <label>:1423:                                   ; preds = %1419
  %1424 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7344
  %1425 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1424, i32 0, i32 1, !dbg !7346
  %1426 = load i8*, i8** %1425, align 8, !dbg !7346
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.119, i32 0, i32 0), i8* %1426), !dbg !7347
  %1427 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7348
  %1428 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1427, i32 0, i32 9, !dbg !7349
  call void @__clear_bit(i32 2, i64* %1428), !dbg !7350
  br label %1429, !dbg !7351

; <label>:1429:                                   ; preds = %1423, %1419, %1414
  %1430 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7352
  %1431 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1430, i32 0, i32 43, !dbg !7354
  %1432 = load i8, i8* %1431, align 8, !dbg !7354
  %1433 = trunc i8 %1432 to i1, !dbg !7354
  br i1 %1433, label %1434, label %1440, !dbg !7355

; <label>:1434:                                   ; preds = %1429
  %1435 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7356
  %1436 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1435, i32 0, i32 1, !dbg !7358
  %1437 = load i8*, i8** %1436, align 8, !dbg !7358
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.120, i32 0, i32 0), i8* %1437), !dbg !7359
  %1438 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7360
  %1439 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1438, i32 0, i32 43, !dbg !7361
  store i8 0, i8* %1439, align 8, !dbg !7362
  br label %1440, !dbg !7363

; <label>:1440:                                   ; preds = %1434, %1429
  br label %1442, !dbg !7364

; <label>:1441:                                   ; preds = %1138
  store i8 1, i8* %12, align 1, !dbg !7365
  br label %1442

; <label>:1442:                                   ; preds = %1441, %1440
  %1443 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7367
  %1444 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1443, i32 0, i32 4, !dbg !7369
  %1445 = load %struct._interface*, %struct._interface** %1444, align 8, !dbg !7369
  %1446 = getelementptr inbounds %struct._interface, %struct._interface* %1445, i32 0, i32 14, !dbg !7370
  %1447 = load %struct._interface*, %struct._interface** %1446, align 8, !dbg !7370
  %1448 = getelementptr inbounds %struct._interface, %struct._interface* %1447, i32 0, i32 1, !dbg !7371
  %1449 = load i32, i32* %1448, align 8, !dbg !7371
  %1450 = icmp ne i32 %1449, 0, !dbg !7367
  br i1 %1450, label %1451, label %1542, !dbg !7372

; <label>:1451:                                   ; preds = %1442
  %1452 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7373
  %1453 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1452, i32 0, i32 16, !dbg !7375
  %1454 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %1453, i32 0, i32 0, !dbg !7376
  %1455 = load i16, i16* %1454, align 8, !dbg !7376
  %1456 = zext i16 %1455 to i32, !dbg !7373
  %1457 = icmp eq i32 %1456, 0, !dbg !7377
  br i1 %1457, label %1458, label %1542, !dbg !7378

; <label>:1458:                                   ; preds = %1451
  call void @llvm.dbg.declare(metadata i8* %22, metadata !7379, metadata !793), !dbg !7381
  store i8 0, i8* %22, align 1, !dbg !7381
  %1459 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7382
  %1460 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1459, i32 0, i32 0, !dbg !7384
  %1461 = load i16, i16* %1460, align 8, !dbg !7384
  %1462 = zext i16 %1461 to i32, !dbg !7382
  %1463 = icmp eq i32 %1462, 2, !dbg !7385
  br i1 %1463, label %1464, label %1476, !dbg !7386

; <label>:1464:                                   ; preds = %1458
  %1465 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7387
  %1466 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1465, i32 0, i32 4, !dbg !7390
  %1467 = load %struct._interface*, %struct._interface** %1466, align 8, !dbg !7390
  %1468 = getelementptr inbounds %struct._interface, %struct._interface* %1467, i32 0, i32 14, !dbg !7391
  %1469 = load %struct._interface*, %struct._interface** %1468, align 8, !dbg !7391
  %1470 = getelementptr inbounds %struct._interface, %struct._interface* %1469, i32 0, i32 2, !dbg !7392
  %1471 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %1470, i32 0, i32 0, !dbg !7393
  %1472 = load i32, i32* %1471, align 4, !dbg !7393
  %1473 = icmp ne i32 %1472, 0, !dbg !7394
  br i1 %1473, label %1475, label %1474, !dbg !7395

; <label>:1474:                                   ; preds = %1464
  store i8 1, i8* %22, align 1, !dbg !7396
  br label %1475, !dbg !7397

; <label>:1475:                                   ; preds = %1474, %1464
  br label %1495, !dbg !7398

; <label>:1476:                                   ; preds = %1458
  %1477 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7399
  %1478 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1477, i32 0, i32 9, !dbg !7402
  %1479 = call zeroext i1 @__test_bit(i32 0, i64* %1478), !dbg !7403
  br i1 %1479, label %1494, label %1480, !dbg !7404

; <label>:1480:                                   ; preds = %1476
  %1481 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7405
  %1482 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1481, i32 0, i32 4, !dbg !7407
  %1483 = load %struct._interface*, %struct._interface** %1482, align 8, !dbg !7407
  %1484 = getelementptr inbounds %struct._interface, %struct._interface* %1483, i32 0, i32 14, !dbg !7408
  %1485 = load %struct._interface*, %struct._interface** %1484, align 8, !dbg !7408
  %1486 = getelementptr inbounds %struct._interface, %struct._interface* %1485, i32 0, i32 3, !dbg !7409
  %1487 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %1486, i32 0, i32 0, !dbg !7410
  %1488 = bitcast %union.anon* %1487 to [4 x i32]*, !dbg !7411
  %1489 = getelementptr inbounds [4 x i32], [4 x i32]* %1488, i64 0, i64 0, !dbg !7412
  %1490 = load i32, i32* %1489, align 8, !dbg !7412
  %1491 = icmp ne i32 %1490, 0, !dbg !7412
  br i1 %1491, label %1493, label %1492, !dbg !7413

; <label>:1492:                                   ; preds = %1480
  store i8 1, i8* %22, align 1, !dbg !7414
  br label %1493, !dbg !7415

; <label>:1493:                                   ; preds = %1492, %1480
  br label %1494, !dbg !7416

; <label>:1494:                                   ; preds = %1493, %1476
  br label %1495

; <label>:1495:                                   ; preds = %1494, %1475
  %1496 = load i8, i8* %22, align 1, !dbg !7418
  %1497 = trunc i8 %1496 to i1, !dbg !7418
  br i1 %1497, label %1498, label %1509, !dbg !7420

; <label>:1498:                                   ; preds = %1495
  %1499 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7421
  %1500 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1499, i32 0, i32 1, !dbg !7423
  %1501 = load i8*, i8** %1500, align 8, !dbg !7423
  %1502 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7424
  %1503 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1502, i32 0, i32 4, !dbg !7425
  %1504 = load %struct._interface*, %struct._interface** %1503, align 8, !dbg !7425
  %1505 = getelementptr inbounds %struct._interface, %struct._interface* %1504, i32 0, i32 14, !dbg !7426
  %1506 = load %struct._interface*, %struct._interface** %1505, align 8, !dbg !7426
  %1507 = getelementptr inbounds %struct._interface, %struct._interface* %1506, i32 0, i32 0, !dbg !7427
  %1508 = getelementptr inbounds [16 x i8], [16 x i8]* %1507, i32 0, i32 0, !dbg !7428
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i8* %1501, i8* %1508), !dbg !7429
  br label %1541, !dbg !7430

; <label>:1509:                                   ; preds = %1495
  %1510 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7431
  %1511 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1510, i32 0, i32 0, !dbg !7433
  %1512 = load i16, i16* %1511, align 8, !dbg !7433
  %1513 = zext i16 %1512 to i32, !dbg !7431
  %1514 = icmp eq i32 %1513, 2, !dbg !7434
  br i1 %1514, label %1515, label %1524, !dbg !7435

; <label>:1515:                                   ; preds = %1509
  %1516 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7436
  %1517 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1516, i32 0, i32 4, !dbg !7437
  %1518 = load %struct._interface*, %struct._interface** %1517, align 8, !dbg !7437
  %1519 = getelementptr inbounds %struct._interface, %struct._interface* %1518, i32 0, i32 14, !dbg !7438
  %1520 = load %struct._interface*, %struct._interface** %1519, align 8, !dbg !7438
  %1521 = getelementptr inbounds %struct._interface, %struct._interface* %1520, i32 0, i32 2, !dbg !7439
  %1522 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7440
  %1523 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1522, i32 0, i32 16, !dbg !7441
  call void @inet_ip4tosockaddr(%struct.in_addr* %1521, %struct.sockaddr_storage* %1523), !dbg !7442
  br label %1540, !dbg !7442

; <label>:1524:                                   ; preds = %1509
  %1525 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7443
  %1526 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1525, i32 0, i32 0, !dbg !7445
  %1527 = load i16, i16* %1526, align 8, !dbg !7445
  %1528 = zext i16 %1527 to i32, !dbg !7443
  %1529 = icmp eq i32 %1528, 10, !dbg !7446
  br i1 %1529, label %1530, label %1539, !dbg !7447

; <label>:1530:                                   ; preds = %1524
  %1531 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7448
  %1532 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1531, i32 0, i32 4, !dbg !7449
  %1533 = load %struct._interface*, %struct._interface** %1532, align 8, !dbg !7449
  %1534 = getelementptr inbounds %struct._interface, %struct._interface* %1533, i32 0, i32 14, !dbg !7450
  %1535 = load %struct._interface*, %struct._interface** %1534, align 8, !dbg !7450
  %1536 = getelementptr inbounds %struct._interface, %struct._interface* %1535, i32 0, i32 3, !dbg !7451
  %1537 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7452
  %1538 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1537, i32 0, i32 16, !dbg !7453
  call void @inet_ip6tosockaddr(%struct.in6_addr* %1536, %struct.sockaddr_storage* %1538), !dbg !7454
  br label %1539, !dbg !7454

; <label>:1539:                                   ; preds = %1530, %1524
  br label %1540

; <label>:1540:                                   ; preds = %1539, %1515
  br label %1541

; <label>:1541:                                   ; preds = %1540, %1498
  br label %1542, !dbg !7455

; <label>:1542:                                   ; preds = %1541, %1451, %1442
  %1543 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7456
  %1544 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1543, i32 0, i32 11, !dbg !7458
  %1545 = load %struct._list*, %struct._list** %1544, align 8, !dbg !7458
  %1546 = icmp ne %struct._list* %1545, null, !dbg !7459
  br i1 %1546, label %1547, label %1561, !dbg !7459

; <label>:1547:                                   ; preds = %1542
  %1548 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7460
  %1549 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1548, i32 0, i32 11, !dbg !7462
  %1550 = load %struct._list*, %struct._list** %1549, align 8, !dbg !7462
  %1551 = icmp ne %struct._list* %1550, null, !dbg !7463
  br i1 %1551, label %1553, label %1552, !dbg !7464

; <label>:1552:                                   ; preds = %1547
  br label %1559, !dbg !7465

; <label>:1553:                                   ; preds = %1547
  %1554 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7467
  %1555 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1554, i32 0, i32 11, !dbg !7469
  %1556 = load %struct._list*, %struct._list** %1555, align 8, !dbg !7469
  %1557 = getelementptr inbounds %struct._list, %struct._list* %1556, i32 0, i32 0, !dbg !7470
  %1558 = load %struct._element*, %struct._element** %1557, align 8, !dbg !7470
  br label %1559, !dbg !7471

; <label>:1559:                                   ; preds = %1553, %1552
  %1560 = phi %struct._element* [ null, %1552 ], [ %1558, %1553 ], !dbg !7472
  br label %1562, !dbg !7474

; <label>:1561:                                   ; preds = %1542
  br label %1562, !dbg !7475

; <label>:1562:                                   ; preds = %1561, %1559
  %1563 = phi %struct._element* [ %1560, %1559 ], [ null, %1561 ], !dbg !7477
  store %struct._element* %1563, %struct._element** %6, align 8, !dbg !7479
  br label %1564, !dbg !7480

; <label>:1564:                                   ; preds = %1611, %1562
  %1565 = load %struct._element*, %struct._element** %6, align 8, !dbg !7481
  %1566 = icmp ne %struct._element* %1565, null, !dbg !7484
  br i1 %1566, label %1567, label %1575, !dbg !7485

; <label>:1567:                                   ; preds = %1564
  %1568 = load %struct._element*, %struct._element** %6, align 8, !dbg !7486
  %1569 = getelementptr inbounds %struct._element, %struct._element* %1568, i32 0, i32 0, !dbg !7488
  %1570 = load %struct._element*, %struct._element** %1569, align 8, !dbg !7488
  store %struct._element* %1570, %struct._element** %11, align 8, !dbg !7489
  %1571 = load %struct._element*, %struct._element** %6, align 8, !dbg !7490
  %1572 = getelementptr inbounds %struct._element, %struct._element* %1571, i32 0, i32 2, !dbg !7491
  %1573 = load i8*, i8** %1572, align 8, !dbg !7491
  %1574 = bitcast i8* %1573 to %struct._tracked_if*, !dbg !7492
  store %struct._tracked_if* %1574, %struct._tracked_if** %14, align 8, !dbg !7493
  br label %1575

; <label>:1575:                                   ; preds = %1567, %1564
  %1576 = phi i1 [ false, %1564 ], [ true, %1567 ]
  br i1 %1576, label %1577, label %1613, !dbg !7494

; <label>:1577:                                   ; preds = %1575
  %1578 = load %struct._tracked_if*, %struct._tracked_if** %14, align 8, !dbg !7496
  %1579 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %1578, i32 0, i32 1, !dbg !7499
  %1580 = load %struct._interface*, %struct._interface** %1579, align 8, !dbg !7499
  %1581 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7500
  %1582 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1581, i32 0, i32 4, !dbg !7501
  %1583 = load %struct._interface*, %struct._interface** %1582, align 8, !dbg !7501
  %1584 = getelementptr inbounds %struct._interface, %struct._interface* %1583, i32 0, i32 14, !dbg !7502
  %1585 = load %struct._interface*, %struct._interface** %1584, align 8, !dbg !7502
  %1586 = icmp eq %struct._interface* %1580, %1585, !dbg !7503
  br i1 %1586, label %1587, label %1602, !dbg !7504

; <label>:1587:                                   ; preds = %1577
  %1588 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7505
  %1589 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1588, i32 0, i32 1, !dbg !7507
  %1590 = load i8*, i8** %1589, align 8, !dbg !7507
  %1591 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7508
  %1592 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1591, i32 0, i32 4, !dbg !7509
  %1593 = load %struct._interface*, %struct._interface** %1592, align 8, !dbg !7509
  %1594 = getelementptr inbounds %struct._interface, %struct._interface* %1593, i32 0, i32 14, !dbg !7510
  %1595 = load %struct._interface*, %struct._interface** %1594, align 8, !dbg !7510
  %1596 = getelementptr inbounds %struct._interface, %struct._interface* %1595, i32 0, i32 0, !dbg !7511
  %1597 = getelementptr inbounds [16 x i8], [16 x i8]* %1596, i32 0, i32 0, !dbg !7512
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.122, i32 0, i32 0), i8* %1590, i8* %1597), !dbg !7513
  %1598 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7514
  %1599 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1598, i32 0, i32 11, !dbg !7515
  %1600 = load %struct._list*, %struct._list** %1599, align 8, !dbg !7515
  %1601 = load %struct._element*, %struct._element** %6, align 8, !dbg !7516
  call void @free_list_element(%struct._list* %1600, %struct._element* %1601), !dbg !7517
  br label %1610, !dbg !7518

; <label>:1602:                                   ; preds = %1577
  %1603 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7519
  %1604 = load %struct._tracked_if*, %struct._tracked_if** %14, align 8, !dbg !7520
  %1605 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %1604, i32 0, i32 1, !dbg !7521
  %1606 = load %struct._interface*, %struct._interface** %1605, align 8, !dbg !7521
  %1607 = load %struct._tracked_if*, %struct._tracked_if** %14, align 8, !dbg !7522
  %1608 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %1607, i32 0, i32 0, !dbg !7523
  %1609 = load i32, i32* %1608, align 8, !dbg !7523
  call void @add_vrrp_to_interface(%struct._vrrp_t* %1603, %struct._interface* %1606, i32 %1609, i1 zeroext false, i32 2), !dbg !7524
  br label %1610

; <label>:1610:                                   ; preds = %1602, %1587
  br label %1611, !dbg !7525

; <label>:1611:                                   ; preds = %1610
  %1612 = load %struct._element*, %struct._element** %11, align 8, !dbg !7526
  store %struct._element* %1612, %struct._element** %6, align 8, !dbg !7528
  br label %1564, !dbg !7529, !llvm.loop !7530

; <label>:1613:                                   ; preds = %1575
  %1614 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7532
  %1615 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7533
  %1616 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1615, i32 0, i32 4, !dbg !7534
  %1617 = load %struct._interface*, %struct._interface** %1616, align 8, !dbg !7534
  %1618 = getelementptr inbounds %struct._interface, %struct._interface* %1617, i32 0, i32 14, !dbg !7535
  %1619 = load %struct._interface*, %struct._interface** %1618, align 8, !dbg !7535
  %1620 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7536
  %1621 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1620, i32 0, i32 5, !dbg !7537
  %1622 = load i8, i8* %1621, align 8, !dbg !7537
  %1623 = trunc i8 %1622 to i1, !dbg !7537
  %1624 = select i1 %1623, i32 255, i32 0, !dbg !7536
  call void @add_vrrp_to_interface(%struct._vrrp_t* %1614, %struct._interface* %1619, i32 %1624, i1 zeroext true, i32 1), !dbg !7538
  %1625 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7539
  %1626 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1625, i32 0, i32 9, !dbg !7541
  %1627 = call zeroext i1 @__test_bit(i32 2, i64* %1626), !dbg !7542
  br i1 %1627, label %1628, label %1638, !dbg !7543

; <label>:1628:                                   ; preds = %1613
  %1629 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7544
  %1630 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1629, i32 0, i32 9, !dbg !7545
  %1631 = call zeroext i1 @__test_bit(i32 0, i64* %1630), !dbg !7546
  br i1 %1631, label %1638, label %1632, !dbg !7547

; <label>:1632:                                   ; preds = %1628
  %1633 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7548
  %1634 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1633, i32 0, i32 1, !dbg !7550
  %1635 = load i8*, i8** %1634, align 8, !dbg !7550
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.123, i32 0, i32 0), i8* %1635), !dbg !7551
  %1636 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7552
  %1637 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1636, i32 0, i32 9, !dbg !7553
  call void @__clear_bit(i32 2, i64* %1637), !dbg !7554
  br label %1638, !dbg !7555

; <label>:1638:                                   ; preds = %1632, %1628, %1613
  %1639 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7556
  %1640 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1639, i32 0, i32 9, !dbg !7558
  %1641 = call zeroext i1 @__test_bit(i32 0, i64* %1640), !dbg !7559
  br i1 %1641, label %1642, label %1732, !dbg !7560

; <label>:1642:                                   ; preds = %1638
  %1643 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7561
  %1644 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1643, i32 0, i32 0, !dbg !7564
  %1645 = load i16, i16* %1644, align 8, !dbg !7564
  %1646 = zext i16 %1645 to i32, !dbg !7561
  %1647 = icmp eq i32 %1646, 2, !dbg !7565
  br i1 %1647, label %1648, label %1704, !dbg !7566

; <label>:1648:                                   ; preds = %1642
  %1649 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7567
  %1650 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1649, i32 0, i32 42, !dbg !7569
  %1651 = load %struct._list*, %struct._list** %1650, align 8, !dbg !7569
  %1652 = icmp eq %struct._list* %1651, null, !dbg !7570
  br i1 %1652, label %1704, label %1653, !dbg !7571

; <label>:1653:                                   ; preds = %1648
  %1654 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7572
  %1655 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1654, i32 0, i32 42, !dbg !7574
  %1656 = load %struct._list*, %struct._list** %1655, align 8, !dbg !7574
  %1657 = getelementptr inbounds %struct._list, %struct._list* %1656, i32 0, i32 0, !dbg !7575
  %1658 = load %struct._element*, %struct._element** %1657, align 8, !dbg !7575
  %1659 = icmp eq %struct._element* %1658, null, !dbg !7576
  br i1 %1659, label %1660, label %1667, !dbg !7577

; <label>:1660:                                   ; preds = %1653
  %1661 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7578
  %1662 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1661, i32 0, i32 42, !dbg !7580
  %1663 = load %struct._list*, %struct._list** %1662, align 8, !dbg !7580
  %1664 = getelementptr inbounds %struct._list, %struct._list* %1663, i32 0, i32 1, !dbg !7581
  %1665 = load %struct._element*, %struct._element** %1664, align 8, !dbg !7581
  %1666 = icmp eq %struct._element* %1665, null, !dbg !7582
  br i1 %1666, label %1704, label %1667, !dbg !7583

; <label>:1667:                                   ; preds = %1660, %1653
  %1668 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7584
  %1669 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1668, i32 0, i32 42, !dbg !7587
  %1670 = load %struct._list*, %struct._list** %1669, align 8, !dbg !7587
  %1671 = icmp ne %struct._list* %1670, null, !dbg !7588
  br i1 %1671, label %1673, label %1672, !dbg !7589

; <label>:1672:                                   ; preds = %1667
  br label %1679, !dbg !7590

; <label>:1673:                                   ; preds = %1667
  %1674 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7592
  %1675 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1674, i32 0, i32 42, !dbg !7594
  %1676 = load %struct._list*, %struct._list** %1675, align 8, !dbg !7594
  %1677 = getelementptr inbounds %struct._list, %struct._list* %1676, i32 0, i32 0, !dbg !7595
  %1678 = load %struct._element*, %struct._element** %1677, align 8, !dbg !7595
  br label %1679, !dbg !7596

; <label>:1679:                                   ; preds = %1673, %1672
  %1680 = phi %struct._element* [ null, %1672 ], [ %1678, %1673 ], !dbg !7597
  store %struct._element* %1680, %struct._element** %6, align 8, !dbg !7599
  br label %1681, !dbg !7600

; <label>:1681:                                   ; preds = %1699, %1679
  %1682 = load %struct._element*, %struct._element** %6, align 8, !dbg !7601
  %1683 = icmp ne %struct._element* %1682, null, !dbg !7604
  br i1 %1683, label %1684, label %1703, !dbg !7604

; <label>:1684:                                   ; preds = %1681
  %1685 = load %struct._element*, %struct._element** %6, align 8, !dbg !7605
  %1686 = getelementptr inbounds %struct._element, %struct._element* %1685, i32 0, i32 2, !dbg !7607
  %1687 = load i8*, i8** %1686, align 8, !dbg !7607
  %1688 = bitcast i8* %1687 to %struct._ip_address*, !dbg !7608
  store %struct._ip_address* %1688, %struct._ip_address** %7, align 8, !dbg !7609
  %1689 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !7610
  %1690 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %1689, i32 0, i32 0, !dbg !7612
  %1691 = getelementptr inbounds %struct.ifaddrmsg, %struct.ifaddrmsg* %1690, i32 0, i32 0, !dbg !7613
  %1692 = load i8, i8* %1691, align 8, !dbg !7613
  %1693 = zext i8 %1692 to i32, !dbg !7610
  %1694 = icmp eq i32 %1693, 10, !dbg !7614
  br i1 %1694, label %1695, label %1698, !dbg !7615

; <label>:1695:                                   ; preds = %1684
  %1696 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7616
  %1697 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1696, i32 0, i32 44, !dbg !7618
  store i8 1, i8* %1697, align 1, !dbg !7619
  br label %1703, !dbg !7620

; <label>:1698:                                   ; preds = %1684
  br label %1699, !dbg !7621

; <label>:1699:                                   ; preds = %1698
  %1700 = load %struct._element*, %struct._element** %6, align 8, !dbg !7622
  %1701 = getelementptr inbounds %struct._element, %struct._element* %1700, i32 0, i32 0, !dbg !7624
  %1702 = load %struct._element*, %struct._element** %1701, align 8, !dbg !7624
  store %struct._element* %1702, %struct._element** %6, align 8, !dbg !7625
  br label %1681, !dbg !7626, !llvm.loop !7627

; <label>:1703:                                   ; preds = %1695, %1681
  br label %1704, !dbg !7629

; <label>:1704:                                   ; preds = %1703, %1660, %1648, %1642
  %1705 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7630
  %1706 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1705, i32 0, i32 4, !dbg !7632
  %1707 = load %struct._interface*, %struct._interface** %1706, align 8, !dbg !7632
  %1708 = getelementptr inbounds %struct._interface, %struct._interface* %1707, i32 0, i32 14, !dbg !7633
  %1709 = load %struct._interface*, %struct._interface** %1708, align 8, !dbg !7633
  %1710 = getelementptr inbounds %struct._interface, %struct._interface* %1709, i32 0, i32 1, !dbg !7634
  %1711 = load i32, i32* %1710, align 8, !dbg !7634
  %1712 = icmp ne i32 %1711, 0, !dbg !7630
  br i1 %1712, label %1713, label %1722, !dbg !7635

; <label>:1713:                                   ; preds = %1704
  %1714 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7636
  %1715 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1714, i32 0, i32 9, !dbg !7637
  %1716 = call zeroext i1 @__test_bit(i32 1, i64* %1715), !dbg !7638
  br i1 %1716, label %1722, label %1717, !dbg !7639

; <label>:1717:                                   ; preds = %1713
  %1718 = call zeroext i1 @__test_bit(i32 11, i64* @debug), !dbg !7640
  br i1 %1718, label %1722, label %1719, !dbg !7641

; <label>:1719:                                   ; preds = %1717
  %1720 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7643
  %1721 = call zeroext i1 @netlink_link_add_vmac(%struct._vrrp_t* %1720), !dbg !7644
  br label %1722, !dbg !7644

; <label>:1722:                                   ; preds = %1719, %1717, %1713, %1704
  %1723 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7645
  %1724 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7646
  %1725 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1724, i32 0, i32 4, !dbg !7647
  %1726 = load %struct._interface*, %struct._interface** %1725, align 8, !dbg !7647
  %1727 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7648
  %1728 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1727, i32 0, i32 5, !dbg !7649
  %1729 = load i8, i8* %1728, align 8, !dbg !7649
  %1730 = trunc i8 %1729 to i1, !dbg !7649
  %1731 = select i1 %1730, i32 255, i32 0, !dbg !7648
  call void @add_vrrp_to_interface(%struct._vrrp_t* %1723, %struct._interface* %1726, i32 %1731, i1 zeroext true, i32 1), !dbg !7650
  br label %1732, !dbg !7651

; <label>:1732:                                   ; preds = %1722, %1638
  %1733 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7652
  %1734 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1733, i32 0, i32 37, !dbg !7654
  %1735 = load i8, i8* %1734, align 1, !dbg !7654
  %1736 = zext i8 %1735 to i32, !dbg !7652
  %1737 = icmp ne i32 %1736, 255, !dbg !7655
  br i1 %1737, label %1738, label %1763, !dbg !7656

; <label>:1738:                                   ; preds = %1732
  %1739 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7657
  %1740 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1739, i32 0, i32 49, !dbg !7659
  %1741 = load i32, i32* %1740, align 8, !dbg !7659
  %1742 = icmp ne i32 %1741, 0, !dbg !7657
  br i1 %1742, label %1763, label %1743, !dbg !7660

; <label>:1743:                                   ; preds = %1738
  %1744 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !7661
  %1745 = getelementptr inbounds %struct._data, %struct._data* %1744, i32 0, i32 35, !dbg !7664
  %1746 = getelementptr inbounds [29 x i8], [29 x i8]* %1745, i64 0, i64 0, !dbg !7661
  %1747 = load i8, i8* %1746, align 8, !dbg !7661
  %1748 = icmp ne i8 %1747, 0, !dbg !7661
  br i1 %1748, label %1753, label %1749, !dbg !7665

; <label>:1749:                                   ; preds = %1743
  %1750 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7666
  %1751 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1750, i32 0, i32 1, !dbg !7667
  %1752 = load i8*, i8** %1751, align 8, !dbg !7667
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.124, i32 0, i32 0), i8* %1752), !dbg !7668
  br label %1762, !dbg !7668

; <label>:1753:                                   ; preds = %1743
  %1754 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7669
  %1755 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1754, i32 0, i32 0, !dbg !7671
  %1756 = load i16, i16* %1755, align 8, !dbg !7671
  %1757 = zext i16 %1756 to i32, !dbg !7669
  %1758 = icmp eq i32 %1757, 2, !dbg !7672
  br i1 %1758, label %1759, label %1760, !dbg !7673

; <label>:1759:                                   ; preds = %1753
  store i8 1, i8* @block_ipv4, align 1, !dbg !7674
  br label %1761, !dbg !7675

; <label>:1760:                                   ; preds = %1753
  store i8 1, i8* @block_ipv6, align 1, !dbg !7676
  br label %1761

; <label>:1761:                                   ; preds = %1760, %1759
  br label %1762

; <label>:1762:                                   ; preds = %1761, %1749
  br label %1763, !dbg !7677

; <label>:1763:                                   ; preds = %1762, %1738, %1732
  %1764 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7678
  %1765 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1764, i32 0, i32 41, !dbg !7680
  %1766 = load %struct._list*, %struct._list** %1765, align 8, !dbg !7680
  %1767 = icmp ne %struct._list* %1766, null, !dbg !7681
  br i1 %1767, label %1768, label %1782, !dbg !7681

; <label>:1768:                                   ; preds = %1763
  %1769 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7682
  %1770 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1769, i32 0, i32 41, !dbg !7684
  %1771 = load %struct._list*, %struct._list** %1770, align 8, !dbg !7684
  %1772 = icmp ne %struct._list* %1771, null, !dbg !7685
  br i1 %1772, label %1774, label %1773, !dbg !7686

; <label>:1773:                                   ; preds = %1768
  br label %1780, !dbg !7687

; <label>:1774:                                   ; preds = %1768
  %1775 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7689
  %1776 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1775, i32 0, i32 41, !dbg !7691
  %1777 = load %struct._list*, %struct._list** %1776, align 8, !dbg !7691
  %1778 = getelementptr inbounds %struct._list, %struct._list* %1777, i32 0, i32 0, !dbg !7692
  %1779 = load %struct._element*, %struct._element** %1778, align 8, !dbg !7692
  br label %1780, !dbg !7693

; <label>:1780:                                   ; preds = %1774, %1773
  %1781 = phi %struct._element* [ null, %1773 ], [ %1779, %1774 ], !dbg !7694
  br label %1783, !dbg !7696

; <label>:1782:                                   ; preds = %1763
  br label %1783, !dbg !7697

; <label>:1783:                                   ; preds = %1782, %1780
  %1784 = phi %struct._element* [ %1781, %1780 ], [ null, %1782 ], !dbg !7699
  store %struct._element* %1784, %struct._element** %6, align 8, !dbg !7701
  br label %1785, !dbg !7702

; <label>:1785:                                   ; preds = %1817, %1783
  %1786 = load %struct._element*, %struct._element** %6, align 8, !dbg !7703
  %1787 = icmp ne %struct._element* %1786, null, !dbg !7706
  br i1 %1787, label %1788, label %1793, !dbg !7707

; <label>:1788:                                   ; preds = %1785
  %1789 = load %struct._element*, %struct._element** %6, align 8, !dbg !7708
  %1790 = getelementptr inbounds %struct._element, %struct._element* %1789, i32 0, i32 2, !dbg !7710
  %1791 = load i8*, i8** %1790, align 8, !dbg !7710
  %1792 = bitcast i8* %1791 to %struct._ip_address*, !dbg !7711
  store %struct._ip_address* %1792, %struct._ip_address** %7, align 8, !dbg !7712
  br label %1793

; <label>:1793:                                   ; preds = %1788, %1785
  %1794 = phi i1 [ false, %1785 ], [ true, %1788 ]
  br i1 %1794, label %1795, label %1821, !dbg !7713

; <label>:1795:                                   ; preds = %1793
  %1796 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !7715
  %1797 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %1796, i32 0, i32 2, !dbg !7718
  %1798 = load %struct._interface*, %struct._interface** %1797, align 8, !dbg !7718
  %1799 = icmp ne %struct._interface* %1798, null, !dbg !7715
  br i1 %1799, label %1806, label %1800, !dbg !7719

; <label>:1800:                                   ; preds = %1795
  %1801 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7720
  %1802 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1801, i32 0, i32 4, !dbg !7721
  %1803 = load %struct._interface*, %struct._interface** %1802, align 8, !dbg !7721
  %1804 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !7722
  %1805 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %1804, i32 0, i32 2, !dbg !7723
  store %struct._interface* %1803, %struct._interface** %1805, align 8, !dbg !7724
  br label %1806, !dbg !7722

; <label>:1806:                                   ; preds = %1800, %1795
  %1807 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !7725
  %1808 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %1807, i32 0, i32 8, !dbg !7727
  %1809 = load i8, i8* %1808, align 4, !dbg !7727
  %1810 = trunc i8 %1809 to i1, !dbg !7727
  br i1 %1810, label %1816, label %1811, !dbg !7728

; <label>:1811:                                   ; preds = %1806
  %1812 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7729
  %1813 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !7730
  %1814 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %1813, i32 0, i32 2, !dbg !7731
  %1815 = load %struct._interface*, %struct._interface** %1814, align 8, !dbg !7731
  call void @add_vrrp_to_interface(%struct._vrrp_t* %1812, %struct._interface* %1815, i32 0, i1 zeroext false, i32 4), !dbg !7732
  br label %1816, !dbg !7732

; <label>:1816:                                   ; preds = %1811, %1806
  br label %1817, !dbg !7733

; <label>:1817:                                   ; preds = %1816
  %1818 = load %struct._element*, %struct._element** %6, align 8, !dbg !7734
  %1819 = getelementptr inbounds %struct._element, %struct._element* %1818, i32 0, i32 0, !dbg !7736
  %1820 = load %struct._element*, %struct._element** %1819, align 8, !dbg !7736
  store %struct._element* %1820, %struct._element** %6, align 8, !dbg !7737
  br label %1785, !dbg !7738, !llvm.loop !7739

; <label>:1821:                                   ; preds = %1793
  %1822 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7741
  %1823 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1822, i32 0, i32 42, !dbg !7743
  %1824 = load %struct._list*, %struct._list** %1823, align 8, !dbg !7743
  %1825 = icmp ne %struct._list* %1824, null, !dbg !7744
  br i1 %1825, label %1826, label %1840, !dbg !7744

; <label>:1826:                                   ; preds = %1821
  %1827 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7745
  %1828 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1827, i32 0, i32 42, !dbg !7747
  %1829 = load %struct._list*, %struct._list** %1828, align 8, !dbg !7747
  %1830 = icmp ne %struct._list* %1829, null, !dbg !7748
  br i1 %1830, label %1832, label %1831, !dbg !7749

; <label>:1831:                                   ; preds = %1826
  br label %1838, !dbg !7750

; <label>:1832:                                   ; preds = %1826
  %1833 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7752
  %1834 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1833, i32 0, i32 42, !dbg !7754
  %1835 = load %struct._list*, %struct._list** %1834, align 8, !dbg !7754
  %1836 = getelementptr inbounds %struct._list, %struct._list* %1835, i32 0, i32 0, !dbg !7755
  %1837 = load %struct._element*, %struct._element** %1836, align 8, !dbg !7755
  br label %1838, !dbg !7756

; <label>:1838:                                   ; preds = %1832, %1831
  %1839 = phi %struct._element* [ null, %1831 ], [ %1837, %1832 ], !dbg !7757
  br label %1841, !dbg !7759

; <label>:1840:                                   ; preds = %1821
  br label %1841, !dbg !7760

; <label>:1841:                                   ; preds = %1840, %1838
  %1842 = phi %struct._element* [ %1839, %1838 ], [ null, %1840 ], !dbg !7762
  store %struct._element* %1842, %struct._element** %6, align 8, !dbg !7764
  br label %1843, !dbg !7765

; <label>:1843:                                   ; preds = %1884, %1841
  %1844 = load %struct._element*, %struct._element** %6, align 8, !dbg !7766
  %1845 = icmp ne %struct._element* %1844, null, !dbg !7769
  br i1 %1845, label %1846, label %1851, !dbg !7770

; <label>:1846:                                   ; preds = %1843
  %1847 = load %struct._element*, %struct._element** %6, align 8, !dbg !7771
  %1848 = getelementptr inbounds %struct._element, %struct._element* %1847, i32 0, i32 2, !dbg !7773
  %1849 = load i8*, i8** %1848, align 8, !dbg !7773
  %1850 = bitcast i8* %1849 to %struct._ip_address*, !dbg !7774
  store %struct._ip_address* %1850, %struct._ip_address** %7, align 8, !dbg !7775
  br label %1851

; <label>:1851:                                   ; preds = %1846, %1843
  %1852 = phi i1 [ false, %1843 ], [ true, %1846 ]
  br i1 %1852, label %1853, label %1888, !dbg !7776

; <label>:1853:                                   ; preds = %1851
  %1854 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !7778
  %1855 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %1854, i32 0, i32 2, !dbg !7781
  %1856 = load %struct._interface*, %struct._interface** %1855, align 8, !dbg !7781
  %1857 = icmp ne %struct._interface* %1856, null, !dbg !7778
  br i1 %1857, label %1864, label %1858, !dbg !7782

; <label>:1858:                                   ; preds = %1853
  %1859 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7783
  %1860 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1859, i32 0, i32 4, !dbg !7784
  %1861 = load %struct._interface*, %struct._interface** %1860, align 8, !dbg !7784
  %1862 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !7785
  %1863 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %1862, i32 0, i32 2, !dbg !7786
  store %struct._interface* %1861, %struct._interface** %1863, align 8, !dbg !7787
  br label %1864, !dbg !7785

; <label>:1864:                                   ; preds = %1858, %1853
  %1865 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !7788
  %1866 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %1865, i32 0, i32 8, !dbg !7790
  %1867 = load i8, i8* %1866, align 4, !dbg !7790
  %1868 = trunc i8 %1867 to i1, !dbg !7790
  br i1 %1868, label %1874, label %1869, !dbg !7791

; <label>:1869:                                   ; preds = %1864
  %1870 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7792
  %1871 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !7793
  %1872 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %1871, i32 0, i32 2, !dbg !7794
  %1873 = load %struct._interface*, %struct._interface** %1872, align 8, !dbg !7794
  call void @add_vrrp_to_interface(%struct._vrrp_t* %1870, %struct._interface* %1873, i32 0, i1 zeroext false, i32 4), !dbg !7795
  br label %1874, !dbg !7795

; <label>:1874:                                   ; preds = %1869, %1864
  %1875 = load %struct._ip_address*, %struct._ip_address** %7, align 8, !dbg !7796
  %1876 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %1875, i32 0, i32 0, !dbg !7798
  %1877 = getelementptr inbounds %struct.ifaddrmsg, %struct.ifaddrmsg* %1876, i32 0, i32 0, !dbg !7799
  %1878 = load i8, i8* %1877, align 8, !dbg !7799
  %1879 = zext i8 %1878 to i32, !dbg !7796
  %1880 = icmp eq i32 %1879, 2, !dbg !7800
  br i1 %1880, label %1881, label %1882, !dbg !7801

; <label>:1881:                                   ; preds = %1874
  store i8 1, i8* @have_ipv4_instance, align 1, !dbg !7802
  br label %1883, !dbg !7803

; <label>:1882:                                   ; preds = %1874
  store i8 1, i8* @have_ipv6_instance, align 1, !dbg !7804
  br label %1883

; <label>:1883:                                   ; preds = %1882, %1881
  br label %1884, !dbg !7805

; <label>:1884:                                   ; preds = %1883
  %1885 = load %struct._element*, %struct._element** %6, align 8, !dbg !7806
  %1886 = getelementptr inbounds %struct._element, %struct._element* %1885, i32 0, i32 0, !dbg !7808
  %1887 = load %struct._element*, %struct._element** %1886, align 8, !dbg !7808
  store %struct._element* %1887, %struct._element** %6, align 8, !dbg !7809
  br label %1843, !dbg !7810, !llvm.loop !7811

; <label>:1888:                                   ; preds = %1851
  %1889 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7813
  %1890 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1889, i32 0, i32 2, !dbg !7815
  %1891 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %1890, align 8, !dbg !7815
  %1892 = icmp ne %struct._vrrp_sgroup* %1891, null, !dbg !7813
  br i1 %1892, label %1893, label %1900, !dbg !7816

; <label>:1893:                                   ; preds = %1888
  %1894 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7817
  %1895 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1894, i32 0, i32 2, !dbg !7819
  %1896 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %1895, align 8, !dbg !7819
  %1897 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %1896, i32 0, i32 6, !dbg !7820
  %1898 = load i8, i8* %1897, align 4, !dbg !7820
  %1899 = trunc i8 %1898 to i1, !dbg !7820
  br i1 %1899, label %1900, label %1906, !dbg !7821

; <label>:1900:                                   ; preds = %1893, %1888
  %1901 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7822
  %1902 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1901, i32 0, i32 37, !dbg !7823
  %1903 = load i8, i8* %1902, align 1, !dbg !7823
  %1904 = zext i8 %1903 to i32, !dbg !7822
  %1905 = icmp eq i32 %1904, 255, !dbg !7824
  br i1 %1905, label %1906, label %2203, !dbg !7825

; <label>:1906:                                   ; preds = %1900, %1893
  call void @llvm.dbg.declare(metadata i8* %23, metadata !7827, metadata !793), !dbg !7829
  %1907 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7830
  %1908 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1907, i32 0, i32 2, !dbg !7831
  %1909 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %1908, align 8, !dbg !7831
  %1910 = icmp ne %struct._vrrp_sgroup* %1909, null, !dbg !7830
  br i1 %1910, label %1911, label %1919, !dbg !7832

; <label>:1911:                                   ; preds = %1906
  %1912 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7833
  %1913 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1912, i32 0, i32 2, !dbg !7835
  %1914 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %1913, align 8, !dbg !7835
  %1915 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %1914, i32 0, i32 6, !dbg !7836
  %1916 = load i8, i8* %1915, align 4, !dbg !7836
  %1917 = trunc i8 %1916 to i1, !dbg !7836
  %1918 = xor i1 %1917, true, !dbg !7837
  br label %1919

; <label>:1919:                                   ; preds = %1911, %1906
  %1920 = phi i1 [ false, %1906 ], [ %1918, %1911 ]
  %1921 = zext i1 %1920 to i8, !dbg !7838
  store i8 %1921, i8* %23, align 1, !dbg !7838
  %1922 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7840
  %1923 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1922, i32 0, i32 11, !dbg !7842
  %1924 = load %struct._list*, %struct._list** %1923, align 8, !dbg !7842
  %1925 = icmp ne %struct._list* %1924, null, !dbg !7843
  br i1 %1925, label %1926, label %1940, !dbg !7843

; <label>:1926:                                   ; preds = %1919
  %1927 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7844
  %1928 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1927, i32 0, i32 11, !dbg !7846
  %1929 = load %struct._list*, %struct._list** %1928, align 8, !dbg !7846
  %1930 = icmp ne %struct._list* %1929, null, !dbg !7847
  br i1 %1930, label %1932, label %1931, !dbg !7848

; <label>:1931:                                   ; preds = %1926
  br label %1938, !dbg !7849

; <label>:1932:                                   ; preds = %1926
  %1933 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7851
  %1934 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1933, i32 0, i32 11, !dbg !7853
  %1935 = load %struct._list*, %struct._list** %1934, align 8, !dbg !7853
  %1936 = getelementptr inbounds %struct._list, %struct._list* %1935, i32 0, i32 0, !dbg !7854
  %1937 = load %struct._element*, %struct._element** %1936, align 8, !dbg !7854
  br label %1938, !dbg !7855

; <label>:1938:                                   ; preds = %1932, %1931
  %1939 = phi %struct._element* [ null, %1931 ], [ %1937, %1932 ], !dbg !7856
  br label %1941, !dbg !7858

; <label>:1940:                                   ; preds = %1919
  br label %1941, !dbg !7859

; <label>:1941:                                   ; preds = %1940, %1938
  %1942 = phi %struct._element* [ %1939, %1938 ], [ null, %1940 ], !dbg !7861
  store %struct._element* %1942, %struct._element** %6, align 8, !dbg !7863
  br label %1943, !dbg !7864

; <label>:1943:                                   ; preds = %1993, %1941
  %1944 = load %struct._element*, %struct._element** %6, align 8, !dbg !7865
  %1945 = icmp ne %struct._element* %1944, null, !dbg !7868
  br i1 %1945, label %1946, label %1954, !dbg !7869

; <label>:1946:                                   ; preds = %1943
  %1947 = load %struct._element*, %struct._element** %6, align 8, !dbg !7870
  %1948 = getelementptr inbounds %struct._element, %struct._element* %1947, i32 0, i32 0, !dbg !7872
  %1949 = load %struct._element*, %struct._element** %1948, align 8, !dbg !7872
  store %struct._element* %1949, %struct._element** %11, align 8, !dbg !7873
  %1950 = load %struct._element*, %struct._element** %6, align 8, !dbg !7874
  %1951 = getelementptr inbounds %struct._element, %struct._element* %1950, i32 0, i32 2, !dbg !7875
  %1952 = load i8*, i8** %1951, align 8, !dbg !7875
  %1953 = bitcast i8* %1952 to %struct._tracked_if*, !dbg !7876
  store %struct._tracked_if* %1953, %struct._tracked_if** %14, align 8, !dbg !7877
  br label %1954

; <label>:1954:                                   ; preds = %1946, %1943
  %1955 = phi i1 [ false, %1943 ], [ true, %1946 ]
  br i1 %1955, label %1956, label %1995, !dbg !7878

; <label>:1956:                                   ; preds = %1954
  %1957 = load %struct._tracked_if*, %struct._tracked_if** %14, align 8, !dbg !7880
  %1958 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %1957, i32 0, i32 0, !dbg !7883
  %1959 = load i32, i32* %1958, align 8, !dbg !7883
  %1960 = icmp ne i32 %1959, 0, !dbg !7880
  br i1 %1960, label %1961, label %1992, !dbg !7884

; <label>:1961:                                   ; preds = %1956
  %1962 = load %struct._tracked_if*, %struct._tracked_if** %14, align 8, !dbg !7885
  %1963 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %1962, i32 0, i32 0, !dbg !7887
  %1964 = load i32, i32* %1963, align 8, !dbg !7887
  %1965 = icmp ne i32 %1964, 255, !dbg !7888
  br i1 %1965, label %1966, label %1992, !dbg !7889

; <label>:1966:                                   ; preds = %1961
  %1967 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7890
  %1968 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1967, i32 0, i32 1, !dbg !7892
  %1969 = load i8*, i8** %1968, align 8, !dbg !7892
  %1970 = load %struct._tracked_if*, %struct._tracked_if** %14, align 8, !dbg !7893
  %1971 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %1970, i32 0, i32 1, !dbg !7894
  %1972 = load %struct._interface*, %struct._interface** %1971, align 8, !dbg !7894
  %1973 = getelementptr inbounds %struct._interface, %struct._interface* %1972, i32 0, i32 0, !dbg !7895
  %1974 = getelementptr inbounds [16 x i8], [16 x i8]* %1973, i32 0, i32 0, !dbg !7893
  %1975 = load i8, i8* %23, align 1, !dbg !7896
  %1976 = trunc i8 %1975 to i1, !dbg !7896
  %1977 = select i1 %1976, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0), !dbg !7896
  %1978 = load i8, i8* %23, align 1, !dbg !7897
  %1979 = trunc i8 %1978 to i1, !dbg !7897
  %1980 = select i1 %1979, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i32 0, i32 0), !dbg !7897
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.125, i32 0, i32 0), i8* %1969, i8* %1974, i8* %1977, i8* %1980), !dbg !7898
  %1981 = load i8, i8* %23, align 1, !dbg !7899
  %1982 = trunc i8 %1981 to i1, !dbg !7899
  br i1 %1982, label %1983, label %1986, !dbg !7901

; <label>:1983:                                   ; preds = %1966
  %1984 = load %struct._tracked_if*, %struct._tracked_if** %14, align 8, !dbg !7902
  %1985 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %1984, i32 0, i32 0, !dbg !7903
  store i32 0, i32* %1985, align 8, !dbg !7904
  br label %1991, !dbg !7902

; <label>:1986:                                   ; preds = %1966
  %1987 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7905
  %1988 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1987, i32 0, i32 11, !dbg !7906
  %1989 = load %struct._list*, %struct._list** %1988, align 8, !dbg !7906
  %1990 = load %struct._element*, %struct._element** %6, align 8, !dbg !7907
  call void @free_list_element(%struct._list* %1989, %struct._element* %1990), !dbg !7908
  br label %1991

; <label>:1991:                                   ; preds = %1986, %1983
  br label %1992, !dbg !7909

; <label>:1992:                                   ; preds = %1991, %1961, %1956
  br label %1993, !dbg !7910

; <label>:1993:                                   ; preds = %1992
  %1994 = load %struct._element*, %struct._element** %11, align 8, !dbg !7911
  store %struct._element* %1994, %struct._element** %6, align 8, !dbg !7913
  br label %1943, !dbg !7914, !llvm.loop !7915

; <label>:1995:                                   ; preds = %1954
  %1996 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7917
  %1997 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1996, i32 0, i32 11, !dbg !7919
  %1998 = load %struct._list*, %struct._list** %1997, align 8, !dbg !7919
  %1999 = icmp eq %struct._list* %1998, null, !dbg !7920
  br i1 %1999, label %2014, label %2000, !dbg !7921

; <label>:2000:                                   ; preds = %1995
  %2001 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7922
  %2002 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2001, i32 0, i32 11, !dbg !7924
  %2003 = load %struct._list*, %struct._list** %2002, align 8, !dbg !7924
  %2004 = getelementptr inbounds %struct._list, %struct._list* %2003, i32 0, i32 0, !dbg !7925
  %2005 = load %struct._element*, %struct._element** %2004, align 8, !dbg !7925
  %2006 = icmp eq %struct._element* %2005, null, !dbg !7926
  br i1 %2006, label %2007, label %2017, !dbg !7927

; <label>:2007:                                   ; preds = %2000
  %2008 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7928
  %2009 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2008, i32 0, i32 11, !dbg !7930
  %2010 = load %struct._list*, %struct._list** %2009, align 8, !dbg !7930
  %2011 = getelementptr inbounds %struct._list, %struct._list* %2010, i32 0, i32 1, !dbg !7931
  %2012 = load %struct._element*, %struct._element** %2011, align 8, !dbg !7931
  %2013 = icmp eq %struct._element* %2012, null, !dbg !7932
  br i1 %2013, label %2014, label %2017, !dbg !7933

; <label>:2014:                                   ; preds = %2007, %1995
  %2015 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7934
  %2016 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2015, i32 0, i32 11, !dbg !7935
  call void @free_list(%struct._list** %2016), !dbg !7936
  br label %2017, !dbg !7936

; <label>:2017:                                   ; preds = %2014, %2007, %2000
  %2018 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7937
  %2019 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2018, i32 0, i32 12, !dbg !7939
  %2020 = load %struct._list*, %struct._list** %2019, align 8, !dbg !7939
  %2021 = icmp ne %struct._list* %2020, null, !dbg !7940
  br i1 %2021, label %2022, label %2036, !dbg !7940

; <label>:2022:                                   ; preds = %2017
  %2023 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7941
  %2024 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2023, i32 0, i32 12, !dbg !7943
  %2025 = load %struct._list*, %struct._list** %2024, align 8, !dbg !7943
  %2026 = icmp ne %struct._list* %2025, null, !dbg !7944
  br i1 %2026, label %2028, label %2027, !dbg !7945

; <label>:2027:                                   ; preds = %2022
  br label %2034, !dbg !7946

; <label>:2028:                                   ; preds = %2022
  %2029 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7948
  %2030 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2029, i32 0, i32 12, !dbg !7950
  %2031 = load %struct._list*, %struct._list** %2030, align 8, !dbg !7950
  %2032 = getelementptr inbounds %struct._list, %struct._list* %2031, i32 0, i32 0, !dbg !7951
  %2033 = load %struct._element*, %struct._element** %2032, align 8, !dbg !7951
  br label %2034, !dbg !7952

; <label>:2034:                                   ; preds = %2028, %2027
  %2035 = phi %struct._element* [ null, %2027 ], [ %2033, %2028 ], !dbg !7953
  br label %2037, !dbg !7955

; <label>:2036:                                   ; preds = %2017
  br label %2037, !dbg !7956

; <label>:2037:                                   ; preds = %2036, %2034
  %2038 = phi %struct._element* [ %2035, %2034 ], [ null, %2036 ], !dbg !7958
  store %struct._element* %2038, %struct._element** %6, align 8, !dbg !7960
  br label %2039, !dbg !7961

; <label>:2039:                                   ; preds = %2074, %2037
  %2040 = load %struct._element*, %struct._element** %6, align 8, !dbg !7962
  %2041 = icmp ne %struct._element* %2040, null, !dbg !7965
  br i1 %2041, label %2042, label %2050, !dbg !7966

; <label>:2042:                                   ; preds = %2039
  %2043 = load %struct._element*, %struct._element** %6, align 8, !dbg !7967
  %2044 = getelementptr inbounds %struct._element, %struct._element* %2043, i32 0, i32 0, !dbg !7969
  %2045 = load %struct._element*, %struct._element** %2044, align 8, !dbg !7969
  store %struct._element* %2045, %struct._element** %11, align 8, !dbg !7970
  %2046 = load %struct._element*, %struct._element** %6, align 8, !dbg !7971
  %2047 = getelementptr inbounds %struct._element, %struct._element* %2046, i32 0, i32 2, !dbg !7972
  %2048 = load i8*, i8** %2047, align 8, !dbg !7972
  %2049 = bitcast i8* %2048 to %struct._tracked_sc*, !dbg !7973
  store %struct._tracked_sc* %2049, %struct._tracked_sc** %13, align 8, !dbg !7974
  br label %2050

; <label>:2050:                                   ; preds = %2042, %2039
  %2051 = phi i1 [ false, %2039 ], [ true, %2042 ]
  br i1 %2051, label %2052, label %2076, !dbg !7975

; <label>:2052:                                   ; preds = %2050
  %2053 = load %struct._tracked_sc*, %struct._tracked_sc** %13, align 8, !dbg !7977
  %2054 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %2053, i32 0, i32 1, !dbg !7980
  %2055 = load i32, i32* %2054, align 8, !dbg !7980
  %2056 = icmp ne i32 %2055, 0, !dbg !7977
  br i1 %2056, label %2057, label %2073, !dbg !7981

; <label>:2057:                                   ; preds = %2052
  %2058 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7982
  %2059 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2058, i32 0, i32 1, !dbg !7984
  %2060 = load i8*, i8** %2059, align 8, !dbg !7984
  %2061 = load %struct._tracked_sc*, %struct._tracked_sc** %13, align 8, !dbg !7985
  %2062 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %2061, i32 0, i32 0, !dbg !7986
  %2063 = load %struct._vrrp_script*, %struct._vrrp_script** %2062, align 8, !dbg !7986
  %2064 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %2063, i32 0, i32 0, !dbg !7987
  %2065 = load i8*, i8** %2064, align 8, !dbg !7987
  %2066 = load i8, i8* %23, align 1, !dbg !7988
  %2067 = trunc i8 %2066 to i1, !dbg !7988
  %2068 = select i1 %2067, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.130, i32 0, i32 0), !dbg !7988
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.129, i32 0, i32 0), i8* %2060, i8* %2065, i8* %2068), !dbg !7989
  %2069 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !7990
  %2070 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2069, i32 0, i32 12, !dbg !7991
  %2071 = load %struct._list*, %struct._list** %2070, align 8, !dbg !7991
  %2072 = load %struct._element*, %struct._element** %6, align 8, !dbg !7992
  call void @free_list_element(%struct._list* %2071, %struct._element* %2072), !dbg !7993
  br label %2073, !dbg !7994

; <label>:2073:                                   ; preds = %2057, %2052
  br label %2074, !dbg !7995

; <label>:2074:                                   ; preds = %2073
  %2075 = load %struct._element*, %struct._element** %11, align 8, !dbg !7996
  store %struct._element* %2075, %struct._element** %6, align 8, !dbg !7998
  br label %2039, !dbg !7999, !llvm.loop !8000

; <label>:2076:                                   ; preds = %2050
  %2077 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8002
  %2078 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2077, i32 0, i32 12, !dbg !8004
  %2079 = load %struct._list*, %struct._list** %2078, align 8, !dbg !8004
  %2080 = icmp eq %struct._list* %2079, null, !dbg !8005
  br i1 %2080, label %2095, label %2081, !dbg !8006

; <label>:2081:                                   ; preds = %2076
  %2082 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8007
  %2083 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2082, i32 0, i32 12, !dbg !8009
  %2084 = load %struct._list*, %struct._list** %2083, align 8, !dbg !8009
  %2085 = getelementptr inbounds %struct._list, %struct._list* %2084, i32 0, i32 0, !dbg !8010
  %2086 = load %struct._element*, %struct._element** %2085, align 8, !dbg !8010
  %2087 = icmp eq %struct._element* %2086, null, !dbg !8011
  br i1 %2087, label %2088, label %2098, !dbg !8012

; <label>:2088:                                   ; preds = %2081
  %2089 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8013
  %2090 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2089, i32 0, i32 12, !dbg !8015
  %2091 = load %struct._list*, %struct._list** %2090, align 8, !dbg !8015
  %2092 = getelementptr inbounds %struct._list, %struct._list* %2091, i32 0, i32 1, !dbg !8016
  %2093 = load %struct._element*, %struct._element** %2092, align 8, !dbg !8016
  %2094 = icmp eq %struct._element* %2093, null, !dbg !8017
  br i1 %2094, label %2095, label %2098, !dbg !8018

; <label>:2095:                                   ; preds = %2088, %2076
  %2096 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8019
  %2097 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2096, i32 0, i32 12, !dbg !8020
  call void @free_list(%struct._list** %2097), !dbg !8021
  br label %2098, !dbg !8021

; <label>:2098:                                   ; preds = %2095, %2088, %2081
  %2099 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8022
  %2100 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2099, i32 0, i32 13, !dbg !8024
  %2101 = load %struct._list*, %struct._list** %2100, align 8, !dbg !8024
  %2102 = icmp ne %struct._list* %2101, null, !dbg !8025
  br i1 %2102, label %2103, label %2117, !dbg !8025

; <label>:2103:                                   ; preds = %2098
  %2104 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8026
  %2105 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2104, i32 0, i32 13, !dbg !8028
  %2106 = load %struct._list*, %struct._list** %2105, align 8, !dbg !8028
  %2107 = icmp ne %struct._list* %2106, null, !dbg !8029
  br i1 %2107, label %2109, label %2108, !dbg !8030

; <label>:2108:                                   ; preds = %2103
  br label %2115, !dbg !8031

; <label>:2109:                                   ; preds = %2103
  %2110 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8033
  %2111 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2110, i32 0, i32 13, !dbg !8035
  %2112 = load %struct._list*, %struct._list** %2111, align 8, !dbg !8035
  %2113 = getelementptr inbounds %struct._list, %struct._list* %2112, i32 0, i32 0, !dbg !8036
  %2114 = load %struct._element*, %struct._element** %2113, align 8, !dbg !8036
  br label %2115, !dbg !8037

; <label>:2115:                                   ; preds = %2109, %2108
  %2116 = phi %struct._element* [ null, %2108 ], [ %2114, %2109 ], !dbg !8038
  br label %2118, !dbg !8040

; <label>:2117:                                   ; preds = %2098
  br label %2118, !dbg !8041

; <label>:2118:                                   ; preds = %2117, %2115
  %2119 = phi %struct._element* [ %2116, %2115 ], [ null, %2117 ], !dbg !8043
  store %struct._element* %2119, %struct._element** %6, align 8, !dbg !8045
  br label %2120, !dbg !8046

; <label>:2120:                                   ; preds = %2178, %2118
  %2121 = load %struct._element*, %struct._element** %6, align 8, !dbg !8047
  %2122 = icmp ne %struct._element* %2121, null, !dbg !8050
  br i1 %2122, label %2123, label %2131, !dbg !8051

; <label>:2123:                                   ; preds = %2120
  %2124 = load %struct._element*, %struct._element** %6, align 8, !dbg !8052
  %2125 = getelementptr inbounds %struct._element, %struct._element* %2124, i32 0, i32 0, !dbg !8054
  %2126 = load %struct._element*, %struct._element** %2125, align 8, !dbg !8054
  store %struct._element* %2126, %struct._element** %11, align 8, !dbg !8055
  %2127 = load %struct._element*, %struct._element** %6, align 8, !dbg !8056
  %2128 = getelementptr inbounds %struct._element, %struct._element* %2127, i32 0, i32 2, !dbg !8057
  %2129 = load i8*, i8** %2128, align 8, !dbg !8057
  %2130 = bitcast i8* %2129 to %struct._tracked_file*, !dbg !8058
  store %struct._tracked_file* %2130, %struct._tracked_file** %15, align 8, !dbg !8059
  br label %2131

; <label>:2131:                                   ; preds = %2123, %2120
  %2132 = phi i1 [ false, %2120 ], [ true, %2123 ]
  br i1 %2132, label %2133, label %2180, !dbg !8060

; <label>:2133:                                   ; preds = %2131
  %2134 = load %struct._tracked_file*, %struct._tracked_file** %15, align 8, !dbg !8062
  %2135 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %2134, i32 0, i32 1, !dbg !8065
  %2136 = load i32, i32* %2135, align 8, !dbg !8065
  %2137 = icmp eq i32 %2136, 1, !dbg !8066
  br i1 %2137, label %2138, label %2152, !dbg !8067

; <label>:2138:                                   ; preds = %2133
  %2139 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8068
  %2140 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2139, i32 0, i32 1, !dbg !8070
  %2141 = load i8*, i8** %2140, align 8, !dbg !8070
  %2142 = load %struct._tracked_file*, %struct._tracked_file** %15, align 8, !dbg !8071
  %2143 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %2142, i32 0, i32 0, !dbg !8072
  %2144 = load %struct._vrrp_file*, %struct._vrrp_file** %2143, align 8, !dbg !8072
  %2145 = getelementptr inbounds %struct._vrrp_file, %struct._vrrp_file* %2144, i32 0, i32 0, !dbg !8073
  %2146 = load i8*, i8** %2145, align 8, !dbg !8073
  %2147 = load i8, i8* %23, align 1, !dbg !8074
  %2148 = trunc i8 %2147 to i1, !dbg !8074
  %2149 = select i1 %2148, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.130, i32 0, i32 0), !dbg !8074
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.131, i32 0, i32 0), i8* %2141, i8* %2146, i8* %2149), !dbg !8075
  %2150 = load %struct._tracked_file*, %struct._tracked_file** %15, align 8, !dbg !8076
  %2151 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %2150, i32 0, i32 1, !dbg !8077
  store i32 0, i32* %2151, align 8, !dbg !8078
  br label %2177, !dbg !8079

; <label>:2152:                                   ; preds = %2133
  %2153 = load %struct._tracked_file*, %struct._tracked_file** %15, align 8, !dbg !8080
  %2154 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %2153, i32 0, i32 1, !dbg !8082
  %2155 = load i32, i32* %2154, align 8, !dbg !8082
  %2156 = icmp ne i32 %2155, 0, !dbg !8080
  br i1 %2156, label %2157, label %2176, !dbg !8083

; <label>:2157:                                   ; preds = %2152
  %2158 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8084
  %2159 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2158, i32 0, i32 1, !dbg !8086
  %2160 = load i8*, i8** %2159, align 8, !dbg !8086
  %2161 = load %struct._tracked_file*, %struct._tracked_file** %15, align 8, !dbg !8087
  %2162 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %2161, i32 0, i32 0, !dbg !8088
  %2163 = load %struct._vrrp_file*, %struct._vrrp_file** %2162, align 8, !dbg !8088
  %2164 = getelementptr inbounds %struct._vrrp_file, %struct._vrrp_file* %2163, i32 0, i32 0, !dbg !8089
  %2165 = load i8*, i8** %2164, align 8, !dbg !8089
  %2166 = load %struct._tracked_file*, %struct._tracked_file** %15, align 8, !dbg !8090
  %2167 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %2166, i32 0, i32 1, !dbg !8091
  %2168 = load i32, i32* %2167, align 8, !dbg !8091
  %2169 = load i8, i8* %23, align 1, !dbg !8092
  %2170 = trunc i8 %2169 to i1, !dbg !8092
  %2171 = select i1 %2170, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.130, i32 0, i32 0), !dbg !8092
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.132, i32 0, i32 0), i8* %2160, i8* %2165, i32 %2168, i8* %2171), !dbg !8093
  %2172 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8094
  %2173 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2172, i32 0, i32 13, !dbg !8095
  %2174 = load %struct._list*, %struct._list** %2173, align 8, !dbg !8095
  %2175 = load %struct._element*, %struct._element** %6, align 8, !dbg !8096
  call void @free_list_element(%struct._list* %2174, %struct._element* %2175), !dbg !8097
  br label %2176, !dbg !8098

; <label>:2176:                                   ; preds = %2157, %2152
  br label %2177

; <label>:2177:                                   ; preds = %2176, %2138
  br label %2178, !dbg !8099

; <label>:2178:                                   ; preds = %2177
  %2179 = load %struct._element*, %struct._element** %11, align 8, !dbg !8100
  store %struct._element* %2179, %struct._element** %6, align 8, !dbg !8102
  br label %2120, !dbg !8103, !llvm.loop !8104

; <label>:2180:                                   ; preds = %2131
  %2181 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8106
  %2182 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2181, i32 0, i32 13, !dbg !8108
  %2183 = load %struct._list*, %struct._list** %2182, align 8, !dbg !8108
  %2184 = icmp eq %struct._list* %2183, null, !dbg !8109
  br i1 %2184, label %2199, label %2185, !dbg !8110

; <label>:2185:                                   ; preds = %2180
  %2186 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8111
  %2187 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2186, i32 0, i32 13, !dbg !8113
  %2188 = load %struct._list*, %struct._list** %2187, align 8, !dbg !8113
  %2189 = getelementptr inbounds %struct._list, %struct._list* %2188, i32 0, i32 0, !dbg !8114
  %2190 = load %struct._element*, %struct._element** %2189, align 8, !dbg !8114
  %2191 = icmp eq %struct._element* %2190, null, !dbg !8115
  br i1 %2191, label %2192, label %2202, !dbg !8116

; <label>:2192:                                   ; preds = %2185
  %2193 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8117
  %2194 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2193, i32 0, i32 13, !dbg !8119
  %2195 = load %struct._list*, %struct._list** %2194, align 8, !dbg !8119
  %2196 = getelementptr inbounds %struct._list, %struct._list* %2195, i32 0, i32 1, !dbg !8120
  %2197 = load %struct._element*, %struct._element** %2196, align 8, !dbg !8120
  %2198 = icmp eq %struct._element* %2197, null, !dbg !8121
  br i1 %2198, label %2199, label %2202, !dbg !8122

; <label>:2199:                                   ; preds = %2192, %2180
  %2200 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8123
  %2201 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2200, i32 0, i32 13, !dbg !8124
  call void @free_list(%struct._list** %2201), !dbg !8125
  br label %2202, !dbg !8125

; <label>:2202:                                   ; preds = %2199, %2192, %2185
  br label %2203, !dbg !8126

; <label>:2203:                                   ; preds = %2202, %1900
  %2204 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8127
  %2205 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2204, i32 0, i32 12, !dbg !8129
  %2206 = load %struct._list*, %struct._list** %2205, align 8, !dbg !8129
  %2207 = icmp ne %struct._list* %2206, null, !dbg !8130
  br i1 %2207, label %2208, label %2222, !dbg !8130

; <label>:2208:                                   ; preds = %2203
  %2209 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8131
  %2210 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2209, i32 0, i32 12, !dbg !8133
  %2211 = load %struct._list*, %struct._list** %2210, align 8, !dbg !8133
  %2212 = icmp ne %struct._list* %2211, null, !dbg !8134
  br i1 %2212, label %2214, label %2213, !dbg !8135

; <label>:2213:                                   ; preds = %2208
  br label %2220, !dbg !8136

; <label>:2214:                                   ; preds = %2208
  %2215 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8138
  %2216 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2215, i32 0, i32 12, !dbg !8140
  %2217 = load %struct._list*, %struct._list** %2216, align 8, !dbg !8140
  %2218 = getelementptr inbounds %struct._list, %struct._list* %2217, i32 0, i32 0, !dbg !8141
  %2219 = load %struct._element*, %struct._element** %2218, align 8, !dbg !8141
  br label %2220, !dbg !8142

; <label>:2220:                                   ; preds = %2214, %2213
  %2221 = phi %struct._element* [ null, %2213 ], [ %2219, %2214 ], !dbg !8143
  br label %2223, !dbg !8145

; <label>:2222:                                   ; preds = %2203
  br label %2223, !dbg !8146

; <label>:2223:                                   ; preds = %2222, %2220
  %2224 = phi %struct._element* [ %2221, %2220 ], [ null, %2222 ], !dbg !8148
  store %struct._element* %2224, %struct._element** %6, align 8, !dbg !8150
  br label %2225, !dbg !8151

; <label>:2225:                                   ; preds = %2267, %2223
  %2226 = load %struct._element*, %struct._element** %6, align 8, !dbg !8152
  %2227 = icmp ne %struct._element* %2226, null, !dbg !8155
  br i1 %2227, label %2228, label %2236, !dbg !8156

; <label>:2228:                                   ; preds = %2225
  %2229 = load %struct._element*, %struct._element** %6, align 8, !dbg !8157
  %2230 = getelementptr inbounds %struct._element, %struct._element* %2229, i32 0, i32 0, !dbg !8159
  %2231 = load %struct._element*, %struct._element** %2230, align 8, !dbg !8159
  store %struct._element* %2231, %struct._element** %11, align 8, !dbg !8160
  %2232 = load %struct._element*, %struct._element** %6, align 8, !dbg !8161
  %2233 = getelementptr inbounds %struct._element, %struct._element* %2232, i32 0, i32 2, !dbg !8162
  %2234 = load i8*, i8** %2233, align 8, !dbg !8162
  %2235 = bitcast i8* %2234 to %struct._tracked_sc*, !dbg !8163
  store %struct._tracked_sc* %2235, %struct._tracked_sc** %13, align 8, !dbg !8164
  br label %2236

; <label>:2236:                                   ; preds = %2228, %2225
  %2237 = phi i1 [ false, %2225 ], [ true, %2228 ]
  br i1 %2237, label %2238, label %2269, !dbg !8165

; <label>:2238:                                   ; preds = %2236
  call void @llvm.dbg.declare(metadata %struct._vrrp_script** %24, metadata !8167, metadata !793), !dbg !8169
  %2239 = load %struct._tracked_sc*, %struct._tracked_sc** %13, align 8, !dbg !8170
  %2240 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %2239, i32 0, i32 0, !dbg !8171
  %2241 = load %struct._vrrp_script*, %struct._vrrp_script** %2240, align 8, !dbg !8171
  store %struct._vrrp_script* %2241, %struct._vrrp_script** %24, align 8, !dbg !8169
  %2242 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8172
  %2243 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2242, i32 0, i32 37, !dbg !8174
  %2244 = load i8, i8* %2243, align 1, !dbg !8174
  %2245 = zext i8 %2244 to i32, !dbg !8172
  %2246 = icmp eq i32 %2245, 255, !dbg !8175
  br i1 %2246, label %2247, label %2264, !dbg !8176

; <label>:2247:                                   ; preds = %2238
  %2248 = load %struct._tracked_sc*, %struct._tracked_sc** %13, align 8, !dbg !8177
  %2249 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %2248, i32 0, i32 1, !dbg !8179
  %2250 = load i32, i32* %2249, align 8, !dbg !8179
  %2251 = icmp ne i32 %2250, 0, !dbg !8177
  br i1 %2251, label %2252, label %2264, !dbg !8180

; <label>:2252:                                   ; preds = %2247
  %2253 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8181
  %2254 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2253, i32 0, i32 1, !dbg !8183
  %2255 = load i8*, i8** %2254, align 8, !dbg !8183
  %2256 = load %struct._vrrp_script*, %struct._vrrp_script** %24, align 8, !dbg !8184
  %2257 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %2256, i32 0, i32 0, !dbg !8185
  %2258 = load i8*, i8** %2257, align 8, !dbg !8185
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.133, i32 0, i32 0), i8* %2255, i8* %2258, i32 255), !dbg !8186
  %2259 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8187
  %2260 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2259, i32 0, i32 12, !dbg !8188
  %2261 = load %struct._list*, %struct._list** %2260, align 8, !dbg !8188
  %2262 = load %struct._tracked_sc*, %struct._tracked_sc** %13, align 8, !dbg !8189
  %2263 = bitcast %struct._tracked_sc* %2262 to i8*, !dbg !8189
  call void @list_del(%struct._list* %2261, i8* %2263), !dbg !8190
  br label %2267, !dbg !8191

; <label>:2264:                                   ; preds = %2247, %2238
  %2265 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8192
  %2266 = load %struct._tracked_sc*, %struct._tracked_sc** %13, align 8, !dbg !8193
  call void @add_vrrp_to_track_script(%struct._vrrp_t* %2265, %struct._tracked_sc* %2266), !dbg !8194
  br label %2267, !dbg !8195

; <label>:2267:                                   ; preds = %2264, %2252
  %2268 = load %struct._element*, %struct._element** %11, align 8, !dbg !8196
  store %struct._element* %2268, %struct._element** %6, align 8, !dbg !8198
  br label %2225, !dbg !8199, !llvm.loop !8200

; <label>:2269:                                   ; preds = %2236
  %2270 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8202
  %2271 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2270, i32 0, i32 13, !dbg !8204
  %2272 = load %struct._list*, %struct._list** %2271, align 8, !dbg !8204
  %2273 = icmp ne %struct._list* %2272, null, !dbg !8205
  br i1 %2273, label %2274, label %2288, !dbg !8205

; <label>:2274:                                   ; preds = %2269
  %2275 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8206
  %2276 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2275, i32 0, i32 13, !dbg !8208
  %2277 = load %struct._list*, %struct._list** %2276, align 8, !dbg !8208
  %2278 = icmp ne %struct._list* %2277, null, !dbg !8209
  br i1 %2278, label %2280, label %2279, !dbg !8210

; <label>:2279:                                   ; preds = %2274
  br label %2286, !dbg !8211

; <label>:2280:                                   ; preds = %2274
  %2281 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8213
  %2282 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2281, i32 0, i32 13, !dbg !8215
  %2283 = load %struct._list*, %struct._list** %2282, align 8, !dbg !8215
  %2284 = getelementptr inbounds %struct._list, %struct._list* %2283, i32 0, i32 0, !dbg !8216
  %2285 = load %struct._element*, %struct._element** %2284, align 8, !dbg !8216
  br label %2286, !dbg !8217

; <label>:2286:                                   ; preds = %2280, %2279
  %2287 = phi %struct._element* [ null, %2279 ], [ %2285, %2280 ], !dbg !8218
  br label %2289, !dbg !8220

; <label>:2288:                                   ; preds = %2269
  br label %2289, !dbg !8221

; <label>:2289:                                   ; preds = %2288, %2286
  %2290 = phi %struct._element* [ %2287, %2286 ], [ null, %2288 ], !dbg !8223
  store %struct._element* %2290, %struct._element** %6, align 8, !dbg !8225
  br label %2291, !dbg !8226

; <label>:2291:                                   ; preds = %2304, %2289
  %2292 = load %struct._element*, %struct._element** %6, align 8, !dbg !8227
  %2293 = icmp ne %struct._element* %2292, null, !dbg !8230
  br i1 %2293, label %2294, label %2299, !dbg !8231

; <label>:2294:                                   ; preds = %2291
  %2295 = load %struct._element*, %struct._element** %6, align 8, !dbg !8232
  %2296 = getelementptr inbounds %struct._element, %struct._element* %2295, i32 0, i32 2, !dbg !8234
  %2297 = load i8*, i8** %2296, align 8, !dbg !8234
  %2298 = bitcast i8* %2297 to %struct._tracked_file*, !dbg !8235
  store %struct._tracked_file* %2298, %struct._tracked_file** %15, align 8, !dbg !8236
  br label %2299

; <label>:2299:                                   ; preds = %2294, %2291
  %2300 = phi i1 [ false, %2291 ], [ true, %2294 ]
  br i1 %2300, label %2301, label %2308, !dbg !8237

; <label>:2301:                                   ; preds = %2299
  %2302 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8239
  %2303 = load %struct._tracked_file*, %struct._tracked_file** %15, align 8, !dbg !8240
  call void @add_vrrp_to_track_file(%struct._vrrp_t* %2302, %struct._tracked_file* %2303), !dbg !8241
  br label %2304, !dbg !8241

; <label>:2304:                                   ; preds = %2301
  %2305 = load %struct._element*, %struct._element** %6, align 8, !dbg !8242
  %2306 = getelementptr inbounds %struct._element, %struct._element* %2305, i32 0, i32 0, !dbg !8244
  %2307 = load %struct._element*, %struct._element** %2306, align 8, !dbg !8244
  store %struct._element* %2307, %struct._element** %6, align 8, !dbg !8245
  br label %2291, !dbg !8246, !llvm.loop !8247

; <label>:2308:                                   ; preds = %2299
  %2309 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8249
  %2310 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2309, i32 0, i32 4, !dbg !8251
  %2311 = load %struct._interface*, %struct._interface** %2310, align 8, !dbg !8251
  %2312 = getelementptr inbounds %struct._interface, %struct._interface* %2311, i32 0, i32 1, !dbg !8252
  %2313 = load i32, i32* %2312, align 8, !dbg !8252
  %2314 = icmp ne i32 %2313, 0, !dbg !8249
  br i1 %2314, label %2315, label %2343, !dbg !8253

; <label>:2315:                                   ; preds = %2308
  %2316 = load i8, i8* @reload, align 1, !dbg !8254
  %2317 = trunc i8 %2316 to i1, !dbg !8254
  br i1 %2317, label %2324, label %2318, !dbg !8257

; <label>:2318:                                   ; preds = %2315
  %2319 = load i8, i8* %12, align 1, !dbg !8258
  %2320 = trunc i8 %2319 to i1, !dbg !8258
  br i1 %2320, label %2321, label %2324, !dbg !8260

; <label>:2321:                                   ; preds = %2318
  %2322 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8261
  %2323 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2322, i32 0, i32 40, !dbg !8263
  store i8 1, i8* %2323, align 4, !dbg !8264
  br label %2324, !dbg !8265

; <label>:2324:                                   ; preds = %2321, %2318, %2315
  %2325 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8266
  %2326 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2325, i32 0, i32 43, !dbg !8268
  %2327 = load i8, i8* %2326, align 8, !dbg !8268
  %2328 = trunc i8 %2327 to i1, !dbg !8268
  br i1 %2328, label %2329, label %2342, !dbg !8269

; <label>:2329:                                   ; preds = %2324
  %2330 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8270
  %2331 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2330, i32 0, i32 4, !dbg !8271
  %2332 = load %struct._interface*, %struct._interface** %2331, align 8, !dbg !8271
  %2333 = getelementptr inbounds %struct._interface, %struct._interface* %2332, i32 0, i32 25, !dbg !8272
  %2334 = load i8, i8* %2333, align 8, !dbg !8272
  %2335 = trunc i8 %2334 to i1, !dbg !8272
  br i1 %2335, label %2342, label %2336, !dbg !8273

; <label>:2336:                                   ; preds = %2329
  %2337 = call zeroext i1 @__test_bit(i32 11, i64* @debug), !dbg !8274
  br i1 %2337, label %2342, label %2338, !dbg !8275

; <label>:2338:                                   ; preds = %2336
  %2339 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8277
  %2340 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2339, i32 0, i32 4, !dbg !8278
  %2341 = load %struct._interface*, %struct._interface** %2340, align 8, !dbg !8278
  call void @set_promote_secondaries(%struct._interface* %2341), !dbg !8279
  br label %2342, !dbg !8279

; <label>:2342:                                   ; preds = %2338, %2336, %2329, %2324
  br label %2343, !dbg !8280

; <label>:2343:                                   ; preds = %2342, %2308
  %2344 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8281
  %2345 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2344, i32 0, i32 45, !dbg !8283
  %2346 = load %struct._list*, %struct._list** %2345, align 8, !dbg !8283
  %2347 = icmp ne %struct._list* %2346, null, !dbg !8284
  br i1 %2347, label %2348, label %2362, !dbg !8284

; <label>:2348:                                   ; preds = %2343
  %2349 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8285
  %2350 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2349, i32 0, i32 45, !dbg !8287
  %2351 = load %struct._list*, %struct._list** %2350, align 8, !dbg !8287
  %2352 = icmp ne %struct._list* %2351, null, !dbg !8288
  br i1 %2352, label %2354, label %2353, !dbg !8289

; <label>:2353:                                   ; preds = %2348
  br label %2360, !dbg !8290

; <label>:2354:                                   ; preds = %2348
  %2355 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8292
  %2356 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2355, i32 0, i32 45, !dbg !8294
  %2357 = load %struct._list*, %struct._list** %2356, align 8, !dbg !8294
  %2358 = getelementptr inbounds %struct._list, %struct._list* %2357, i32 0, i32 0, !dbg !8295
  %2359 = load %struct._element*, %struct._element** %2358, align 8, !dbg !8295
  br label %2360, !dbg !8296

; <label>:2360:                                   ; preds = %2354, %2353
  %2361 = phi %struct._element* [ null, %2353 ], [ %2359, %2354 ], !dbg !8297
  br label %2363, !dbg !8299

; <label>:2362:                                   ; preds = %2343
  br label %2363, !dbg !8300

; <label>:2363:                                   ; preds = %2362, %2360
  %2364 = phi %struct._element* [ %2361, %2360 ], [ null, %2362 ], !dbg !8302
  store %struct._element* %2364, %struct._element** %6, align 8, !dbg !8304
  br label %2365, !dbg !8305

; <label>:2365:                                   ; preds = %2400, %2363
  %2366 = load %struct._element*, %struct._element** %6, align 8, !dbg !8306
  %2367 = icmp ne %struct._element* %2366, null, !dbg !8309
  br i1 %2367, label %2368, label %2373, !dbg !8310

; <label>:2368:                                   ; preds = %2365
  %2369 = load %struct._element*, %struct._element** %6, align 8, !dbg !8311
  %2370 = getelementptr inbounds %struct._element, %struct._element* %2369, i32 0, i32 2, !dbg !8313
  %2371 = load i8*, i8** %2370, align 8, !dbg !8313
  %2372 = bitcast i8* %2371 to %struct._ip_route*, !dbg !8314
  store %struct._ip_route* %2372, %struct._ip_route** %16, align 8, !dbg !8315
  br label %2373

; <label>:2373:                                   ; preds = %2368, %2365
  %2374 = phi i1 [ false, %2365 ], [ true, %2368 ]
  br i1 %2374, label %2375, label %2404, !dbg !8316

; <label>:2375:                                   ; preds = %2373
  %2376 = load %struct._ip_route*, %struct._ip_route** %16, align 8, !dbg !8318
  %2377 = getelementptr inbounds %struct._ip_route, %struct._ip_route* %2376, i32 0, i32 34, !dbg !8321
  %2378 = load i8, i8* %2377, align 4, !dbg !8321
  %2379 = trunc i8 %2378 to i1, !dbg !8321
  br i1 %2379, label %2399, label %2380, !dbg !8322

; <label>:2380:                                   ; preds = %2375
  %2381 = load %struct._ip_route*, %struct._ip_route** %16, align 8, !dbg !8323
  %2382 = getelementptr inbounds %struct._ip_route, %struct._ip_route* %2381, i32 0, i32 3, !dbg !8326
  %2383 = load i8, i8* %2382, align 8, !dbg !8326
  %2384 = zext i8 %2383 to i32, !dbg !8323
  %2385 = icmp eq i32 %2384, 2, !dbg !8327
  br i1 %2385, label %2386, label %2387, !dbg !8328

; <label>:2386:                                   ; preds = %2380
  store i8 1, i8* @monitor_ipv4_routes, align 1, !dbg !8329
  br label %2388, !dbg !8330

; <label>:2387:                                   ; preds = %2380
  store i8 1, i8* @monitor_ipv6_routes, align 1, !dbg !8331
  br label %2388

; <label>:2388:                                   ; preds = %2387, %2386
  %2389 = load %struct._ip_route*, %struct._ip_route** %16, align 8, !dbg !8332
  %2390 = getelementptr inbounds %struct._ip_route, %struct._ip_route* %2389, i32 0, i32 10, !dbg !8334
  %2391 = load %struct._interface*, %struct._interface** %2390, align 8, !dbg !8334
  %2392 = icmp ne %struct._interface* %2391, null, !dbg !8332
  br i1 %2392, label %2393, label %2398, !dbg !8335

; <label>:2393:                                   ; preds = %2388
  %2394 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8336
  %2395 = load %struct._ip_route*, %struct._ip_route** %16, align 8, !dbg !8337
  %2396 = getelementptr inbounds %struct._ip_route, %struct._ip_route* %2395, i32 0, i32 10, !dbg !8338
  %2397 = load %struct._interface*, %struct._interface** %2396, align 8, !dbg !8338
  call void @add_vrrp_to_interface(%struct._vrrp_t* %2394, %struct._interface* %2397, i32 0, i1 zeroext false, i32 8), !dbg !8339
  br label %2398, !dbg !8339

; <label>:2398:                                   ; preds = %2393, %2388
  br label %2399, !dbg !8340

; <label>:2399:                                   ; preds = %2398, %2375
  br label %2400, !dbg !8341

; <label>:2400:                                   ; preds = %2399
  %2401 = load %struct._element*, %struct._element** %6, align 8, !dbg !8342
  %2402 = getelementptr inbounds %struct._element, %struct._element* %2401, i32 0, i32 0, !dbg !8344
  %2403 = load %struct._element*, %struct._element** %2402, align 8, !dbg !8344
  store %struct._element* %2403, %struct._element** %6, align 8, !dbg !8345
  br label %2365, !dbg !8346, !llvm.loop !8347

; <label>:2404:                                   ; preds = %2373
  %2405 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8349
  %2406 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2405, i32 0, i32 46, !dbg !8351
  %2407 = load %struct._list*, %struct._list** %2406, align 8, !dbg !8351
  %2408 = icmp ne %struct._list* %2407, null, !dbg !8352
  br i1 %2408, label %2409, label %2423, !dbg !8352

; <label>:2409:                                   ; preds = %2404
  %2410 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8353
  %2411 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2410, i32 0, i32 46, !dbg !8355
  %2412 = load %struct._list*, %struct._list** %2411, align 8, !dbg !8355
  %2413 = icmp ne %struct._list* %2412, null, !dbg !8356
  br i1 %2413, label %2415, label %2414, !dbg !8357

; <label>:2414:                                   ; preds = %2409
  br label %2421, !dbg !8358

; <label>:2415:                                   ; preds = %2409
  %2416 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8360
  %2417 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %2416, i32 0, i32 46, !dbg !8362
  %2418 = load %struct._list*, %struct._list** %2417, align 8, !dbg !8362
  %2419 = getelementptr inbounds %struct._list, %struct._list* %2418, i32 0, i32 0, !dbg !8363
  %2420 = load %struct._element*, %struct._element** %2419, align 8, !dbg !8363
  br label %2421, !dbg !8364

; <label>:2421:                                   ; preds = %2415, %2414
  %2422 = phi %struct._element* [ null, %2414 ], [ %2420, %2415 ], !dbg !8365
  br label %2424, !dbg !8367

; <label>:2423:                                   ; preds = %2404
  br label %2424, !dbg !8368

; <label>:2424:                                   ; preds = %2423, %2421
  %2425 = phi %struct._element* [ %2422, %2421 ], [ null, %2423 ], !dbg !8370
  store %struct._element* %2425, %struct._element** %6, align 8, !dbg !8372
  br label %2426, !dbg !8373

; <label>:2426:                                   ; preds = %2470, %2424
  %2427 = load %struct._element*, %struct._element** %6, align 8, !dbg !8374
  %2428 = icmp ne %struct._element* %2427, null, !dbg !8377
  br i1 %2428, label %2429, label %2434, !dbg !8378

; <label>:2429:                                   ; preds = %2426
  %2430 = load %struct._element*, %struct._element** %6, align 8, !dbg !8379
  %2431 = getelementptr inbounds %struct._element, %struct._element* %2430, i32 0, i32 2, !dbg !8381
  %2432 = load i8*, i8** %2431, align 8, !dbg !8381
  %2433 = bitcast i8* %2432 to %struct._ip_rule*, !dbg !8382
  store %struct._ip_rule* %2433, %struct._ip_rule** %17, align 8, !dbg !8383
  br label %2434

; <label>:2434:                                   ; preds = %2429, %2426
  %2435 = phi i1 [ false, %2426 ], [ true, %2429 ]
  br i1 %2435, label %2436, label %2474, !dbg !8384

; <label>:2436:                                   ; preds = %2434
  %2437 = load %struct._ip_rule*, %struct._ip_rule** %17, align 8, !dbg !8386
  %2438 = getelementptr inbounds %struct._ip_rule, %struct._ip_rule* %2437, i32 0, i32 18, !dbg !8389
  %2439 = load i8, i8* %2438, align 8, !dbg !8389
  %2440 = trunc i8 %2439 to i1, !dbg !8389
  br i1 %2440, label %2469, label %2441, !dbg !8390

; <label>:2441:                                   ; preds = %2436
  %2442 = load %struct._ip_rule*, %struct._ip_rule** %17, align 8, !dbg !8391
  %2443 = getelementptr inbounds %struct._ip_rule, %struct._ip_rule* %2442, i32 0, i32 2, !dbg !8394
  %2444 = load i32, i32* %2443, align 8, !dbg !8394
  %2445 = icmp eq i32 %2444, 2, !dbg !8395
  br i1 %2445, label %2446, label %2447, !dbg !8396

; <label>:2446:                                   ; preds = %2441
  store i8 1, i8* @monitor_ipv4_rules, align 1, !dbg !8397
  br label %2448, !dbg !8398

; <label>:2447:                                   ; preds = %2441
  store i8 1, i8* @monitor_ipv6_rules, align 1, !dbg !8399
  br label %2448

; <label>:2448:                                   ; preds = %2447, %2446
  %2449 = load %struct._ip_rule*, %struct._ip_rule** %17, align 8, !dbg !8400
  %2450 = getelementptr inbounds %struct._ip_rule, %struct._ip_rule* %2449, i32 0, i32 12, !dbg !8402
  %2451 = load %struct._interface*, %struct._interface** %2450, align 8, !dbg !8402
  %2452 = icmp ne %struct._interface* %2451, null, !dbg !8400
  br i1 %2452, label %2453, label %2458, !dbg !8403

; <label>:2453:                                   ; preds = %2448
  %2454 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8404
  %2455 = load %struct._ip_rule*, %struct._ip_rule** %17, align 8, !dbg !8405
  %2456 = getelementptr inbounds %struct._ip_rule, %struct._ip_rule* %2455, i32 0, i32 12, !dbg !8406
  %2457 = load %struct._interface*, %struct._interface** %2456, align 8, !dbg !8406
  call void @add_vrrp_to_interface(%struct._vrrp_t* %2454, %struct._interface* %2457, i32 0, i1 zeroext false, i32 16), !dbg !8407
  br label %2458, !dbg !8407

; <label>:2458:                                   ; preds = %2453, %2448
  %2459 = load %struct._ip_rule*, %struct._ip_rule** %17, align 8, !dbg !8408
  %2460 = getelementptr inbounds %struct._ip_rule, %struct._ip_rule* %2459, i32 0, i32 13, !dbg !8410
  %2461 = load %struct._interface*, %struct._interface** %2460, align 8, !dbg !8410
  %2462 = icmp ne %struct._interface* %2461, null, !dbg !8408
  br i1 %2462, label %2463, label %2468, !dbg !8411

; <label>:2463:                                   ; preds = %2458
  %2464 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8412
  %2465 = load %struct._ip_rule*, %struct._ip_rule** %17, align 8, !dbg !8413
  %2466 = getelementptr inbounds %struct._ip_rule, %struct._ip_rule* %2465, i32 0, i32 13, !dbg !8414
  %2467 = load %struct._interface*, %struct._interface** %2466, align 8, !dbg !8414
  call void @add_vrrp_to_interface(%struct._vrrp_t* %2464, %struct._interface* %2467, i32 0, i1 zeroext false, i32 16), !dbg !8415
  br label %2468, !dbg !8415

; <label>:2468:                                   ; preds = %2463, %2458
  br label %2469, !dbg !8416

; <label>:2469:                                   ; preds = %2468, %2436
  br label %2470, !dbg !8417

; <label>:2470:                                   ; preds = %2469
  %2471 = load %struct._element*, %struct._element** %6, align 8, !dbg !8418
  %2472 = getelementptr inbounds %struct._element, %struct._element* %2471, i32 0, i32 0, !dbg !8420
  %2473 = load %struct._element*, %struct._element** %2472, align 8, !dbg !8420
  store %struct._element* %2473, %struct._element** %6, align 8, !dbg !8421
  br label %2426, !dbg !8422, !llvm.loop !8423

; <label>:2474:                                   ; preds = %2434
  %2475 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8425
  call void @vrrp_alloc_send_buffer(%struct._vrrp_t* %2475), !dbg !8426
  %2476 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !8427
  call void @vrrp_build_pkt(%struct._vrrp_t* %2476), !dbg !8428
  store i1 true, i1* %2, align 1, !dbg !8429
  br label %2477, !dbg !8429

; <label>:2477:                                   ; preds = %2474, %371, %349, %309, %142
  %2478 = load i1, i1* %2, align 1, !dbg !8430
  ret i1 %2478, !dbg !8430
}

declare void @static_track_group_init() #3

; Function Attrs: nounwind uwtable
define internal void @sync_group_tracking_init() #0 !dbg !8431 {
  %1 = alloca %struct._element*, align 8
  %2 = alloca %struct._element*, align 8
  %3 = alloca %struct._element*, align 8
  %4 = alloca %struct._vrrp_sgroup*, align 8
  %5 = alloca %struct._tracked_sc*, align 8
  %6 = alloca %struct._vrrp_script*, align 8
  %7 = alloca %struct._tracked_if*, align 8
  %8 = alloca %struct._tracked_file*, align 8
  %9 = alloca %struct._vrrp_t*, align 8
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %struct._element** %1, metadata !8432, metadata !793), !dbg !8433
  call void @llvm.dbg.declare(metadata %struct._element** %2, metadata !8434, metadata !793), !dbg !8435
  call void @llvm.dbg.declare(metadata %struct._element** %3, metadata !8436, metadata !793), !dbg !8437
  call void @llvm.dbg.declare(metadata %struct._vrrp_sgroup** %4, metadata !8438, metadata !793), !dbg !8439
  call void @llvm.dbg.declare(metadata %struct._tracked_sc** %5, metadata !8440, metadata !793), !dbg !8441
  call void @llvm.dbg.declare(metadata %struct._vrrp_script** %6, metadata !8442, metadata !793), !dbg !8443
  call void @llvm.dbg.declare(metadata %struct._tracked_if** %7, metadata !8444, metadata !793), !dbg !8445
  call void @llvm.dbg.declare(metadata %struct._tracked_file** %8, metadata !8446, metadata !793), !dbg !8447
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %9, metadata !8448, metadata !793), !dbg !8449
  call void @llvm.dbg.declare(metadata i8* %10, metadata !8450, metadata !793), !dbg !8451
  %11 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !8452
  %12 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %11, i32 0, i32 4, !dbg !8454
  %13 = load %struct._list*, %struct._list** %12, align 8, !dbg !8454
  %14 = icmp eq %struct._list* %13, null, !dbg !8455
  br i1 %14, label %29, label %15, !dbg !8456

; <label>:15:                                     ; preds = %0
  %16 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !8457
  %17 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %16, i32 0, i32 4, !dbg !8459
  %18 = load %struct._list*, %struct._list** %17, align 8, !dbg !8459
  %19 = getelementptr inbounds %struct._list, %struct._list* %18, i32 0, i32 0, !dbg !8460
  %20 = load %struct._element*, %struct._element** %19, align 8, !dbg !8460
  %21 = icmp eq %struct._element* %20, null, !dbg !8461
  br i1 %21, label %22, label %30, !dbg !8462

; <label>:22:                                     ; preds = %15
  %23 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !8463
  %24 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %23, i32 0, i32 4, !dbg !8465
  %25 = load %struct._list*, %struct._list** %24, align 8, !dbg !8465
  %26 = getelementptr inbounds %struct._list, %struct._list* %25, i32 0, i32 1, !dbg !8466
  %27 = load %struct._element*, %struct._element** %26, align 8, !dbg !8466
  %28 = icmp eq %struct._element* %27, null, !dbg !8467
  br i1 %28, label %29, label %30, !dbg !8468

; <label>:29:                                     ; preds = %22, %0
  br label %454, !dbg !8469

; <label>:30:                                     ; preds = %22, %15
  %31 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !8470
  %32 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %31, i32 0, i32 4, !dbg !8472
  %33 = load %struct._list*, %struct._list** %32, align 8, !dbg !8472
  %34 = icmp ne %struct._list* %33, null, !dbg !8473
  br i1 %34, label %35, label %49, !dbg !8473

; <label>:35:                                     ; preds = %30
  %36 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !8474
  %37 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %36, i32 0, i32 4, !dbg !8476
  %38 = load %struct._list*, %struct._list** %37, align 8, !dbg !8476
  %39 = icmp ne %struct._list* %38, null, !dbg !8477
  br i1 %39, label %41, label %40, !dbg !8478

; <label>:40:                                     ; preds = %35
  br label %47, !dbg !8479

; <label>:41:                                     ; preds = %35
  %42 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !8481
  %43 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %42, i32 0, i32 4, !dbg !8483
  %44 = load %struct._list*, %struct._list** %43, align 8, !dbg !8483
  %45 = getelementptr inbounds %struct._list, %struct._list* %44, i32 0, i32 0, !dbg !8484
  %46 = load %struct._element*, %struct._element** %45, align 8, !dbg !8484
  br label %47, !dbg !8485

; <label>:47:                                     ; preds = %41, %40
  %48 = phi %struct._element* [ null, %40 ], [ %46, %41 ], !dbg !8486
  br label %50, !dbg !8488

; <label>:49:                                     ; preds = %30
  br label %50, !dbg !8489

; <label>:50:                                     ; preds = %49, %47
  %51 = phi %struct._element* [ %48, %47 ], [ null, %49 ], !dbg !8491
  store %struct._element* %51, %struct._element** %1, align 8, !dbg !8493
  br label %52, !dbg !8494

; <label>:52:                                     ; preds = %450, %50
  %53 = load %struct._element*, %struct._element** %1, align 8, !dbg !8495
  %54 = icmp ne %struct._element* %53, null, !dbg !8498
  br i1 %54, label %55, label %60, !dbg !8499

; <label>:55:                                     ; preds = %52
  %56 = load %struct._element*, %struct._element** %1, align 8, !dbg !8500
  %57 = getelementptr inbounds %struct._element, %struct._element* %56, i32 0, i32 2, !dbg !8502
  %58 = load i8*, i8** %57, align 8, !dbg !8502
  %59 = bitcast i8* %58 to %struct._vrrp_sgroup*, !dbg !8503
  store %struct._vrrp_sgroup* %59, %struct._vrrp_sgroup** %4, align 8, !dbg !8504
  br label %60

; <label>:60:                                     ; preds = %55, %52
  %61 = phi i1 [ false, %52 ], [ true, %55 ]
  br i1 %61, label %62, label %454, !dbg !8505

; <label>:62:                                     ; preds = %60
  %63 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8507
  %64 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %63, i32 0, i32 2, !dbg !8510
  %65 = load %struct._list*, %struct._list** %64, align 8, !dbg !8510
  %66 = icmp eq %struct._list* %65, null, !dbg !8511
  br i1 %66, label %81, label %67, !dbg !8512

; <label>:67:                                     ; preds = %62
  %68 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8513
  %69 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %68, i32 0, i32 2, !dbg !8515
  %70 = load %struct._list*, %struct._list** %69, align 8, !dbg !8515
  %71 = getelementptr inbounds %struct._list, %struct._list* %70, i32 0, i32 0, !dbg !8516
  %72 = load %struct._element*, %struct._element** %71, align 8, !dbg !8516
  %73 = icmp eq %struct._element* %72, null, !dbg !8517
  br i1 %73, label %74, label %82, !dbg !8518

; <label>:74:                                     ; preds = %67
  %75 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8519
  %76 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %75, i32 0, i32 2, !dbg !8521
  %77 = load %struct._list*, %struct._list** %76, align 8, !dbg !8521
  %78 = getelementptr inbounds %struct._list, %struct._list* %77, i32 0, i32 1, !dbg !8522
  %79 = load %struct._element*, %struct._element** %78, align 8, !dbg !8522
  %80 = icmp eq %struct._element* %79, null, !dbg !8523
  br i1 %80, label %81, label %82, !dbg !8524

; <label>:81:                                     ; preds = %74, %62
  br label %450, !dbg !8525

; <label>:82:                                     ; preds = %74, %67
  store i8 0, i8* %10, align 1, !dbg !8526
  %83 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8527
  %84 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %83, i32 0, i32 2, !dbg !8529
  %85 = load %struct._list*, %struct._list** %84, align 8, !dbg !8529
  %86 = icmp ne %struct._list* %85, null, !dbg !8530
  br i1 %86, label %87, label %101, !dbg !8530

; <label>:87:                                     ; preds = %82
  %88 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8531
  %89 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %88, i32 0, i32 2, !dbg !8533
  %90 = load %struct._list*, %struct._list** %89, align 8, !dbg !8533
  %91 = icmp ne %struct._list* %90, null, !dbg !8534
  br i1 %91, label %93, label %92, !dbg !8535

; <label>:92:                                     ; preds = %87
  br label %99, !dbg !8536

; <label>:93:                                     ; preds = %87
  %94 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8538
  %95 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %94, i32 0, i32 2, !dbg !8540
  %96 = load %struct._list*, %struct._list** %95, align 8, !dbg !8540
  %97 = getelementptr inbounds %struct._list, %struct._list* %96, i32 0, i32 0, !dbg !8541
  %98 = load %struct._element*, %struct._element** %97, align 8, !dbg !8541
  br label %99, !dbg !8542

; <label>:99:                                     ; preds = %93, %92
  %100 = phi %struct._element* [ null, %92 ], [ %98, %93 ], !dbg !8543
  br label %102, !dbg !8545

; <label>:101:                                    ; preds = %82
  br label %102, !dbg !8546

; <label>:102:                                    ; preds = %101, %99
  %103 = phi %struct._element* [ %100, %99 ], [ null, %101 ], !dbg !8548
  store %struct._element* %103, %struct._element** %2, align 8, !dbg !8550
  br label %104, !dbg !8551

; <label>:104:                                    ; preds = %122, %102
  %105 = load %struct._element*, %struct._element** %2, align 8, !dbg !8552
  %106 = icmp ne %struct._element* %105, null, !dbg !8555
  br i1 %106, label %107, label %112, !dbg !8556

; <label>:107:                                    ; preds = %104
  %108 = load %struct._element*, %struct._element** %2, align 8, !dbg !8557
  %109 = getelementptr inbounds %struct._element, %struct._element* %108, i32 0, i32 2, !dbg !8559
  %110 = load i8*, i8** %109, align 8, !dbg !8559
  %111 = bitcast i8* %110 to %struct._vrrp_t*, !dbg !8560
  store %struct._vrrp_t* %111, %struct._vrrp_t** %9, align 8, !dbg !8561
  br label %112

; <label>:112:                                    ; preds = %107, %104
  %113 = phi i1 [ false, %104 ], [ true, %107 ]
  br i1 %113, label %114, label %126, !dbg !8562

; <label>:114:                                    ; preds = %112
  %115 = load %struct._vrrp_t*, %struct._vrrp_t** %9, align 8, !dbg !8564
  %116 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %115, i32 0, i32 37, !dbg !8567
  %117 = load i8, i8* %116, align 1, !dbg !8567
  %118 = zext i8 %117 to i32, !dbg !8564
  %119 = icmp eq i32 %118, 255, !dbg !8568
  br i1 %119, label %120, label %121, !dbg !8569

; <label>:120:                                    ; preds = %114
  store i8 1, i8* %10, align 1, !dbg !8570
  br label %126, !dbg !8572

; <label>:121:                                    ; preds = %114
  br label %122, !dbg !8573

; <label>:122:                                    ; preds = %121
  %123 = load %struct._element*, %struct._element** %2, align 8, !dbg !8574
  %124 = getelementptr inbounds %struct._element, %struct._element* %123, i32 0, i32 0, !dbg !8576
  %125 = load %struct._element*, %struct._element** %124, align 8, !dbg !8576
  store %struct._element* %125, %struct._element** %2, align 8, !dbg !8577
  br label %104, !dbg !8578, !llvm.loop !8579

; <label>:126:                                    ; preds = %120, %112
  %127 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8581
  %128 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %127, i32 0, i32 8, !dbg !8583
  %129 = load %struct._list*, %struct._list** %128, align 8, !dbg !8583
  %130 = icmp ne %struct._list* %129, null, !dbg !8584
  br i1 %130, label %131, label %145, !dbg !8584

; <label>:131:                                    ; preds = %126
  %132 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8585
  %133 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %132, i32 0, i32 8, !dbg !8587
  %134 = load %struct._list*, %struct._list** %133, align 8, !dbg !8587
  %135 = icmp ne %struct._list* %134, null, !dbg !8588
  br i1 %135, label %137, label %136, !dbg !8589

; <label>:136:                                    ; preds = %131
  br label %143, !dbg !8590

; <label>:137:                                    ; preds = %131
  %138 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8592
  %139 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %138, i32 0, i32 8, !dbg !8594
  %140 = load %struct._list*, %struct._list** %139, align 8, !dbg !8594
  %141 = getelementptr inbounds %struct._list, %struct._list* %140, i32 0, i32 0, !dbg !8595
  %142 = load %struct._element*, %struct._element** %141, align 8, !dbg !8595
  br label %143, !dbg !8596

; <label>:143:                                    ; preds = %137, %136
  %144 = phi %struct._element* [ null, %136 ], [ %142, %137 ], !dbg !8597
  br label %146, !dbg !8599

; <label>:145:                                    ; preds = %126
  br label %146, !dbg !8600

; <label>:146:                                    ; preds = %145, %143
  %147 = phi %struct._element* [ %144, %143 ], [ null, %145 ], !dbg !8602
  store %struct._element* %147, %struct._element** %2, align 8, !dbg !8604
  br label %148, !dbg !8605

; <label>:148:                                    ; preds = %218, %146
  %149 = load %struct._element*, %struct._element** %2, align 8, !dbg !8606
  %150 = icmp ne %struct._element* %149, null, !dbg !8609
  br i1 %150, label %151, label %156, !dbg !8610

; <label>:151:                                    ; preds = %148
  %152 = load %struct._element*, %struct._element** %2, align 8, !dbg !8611
  %153 = getelementptr inbounds %struct._element, %struct._element* %152, i32 0, i32 2, !dbg !8613
  %154 = load i8*, i8** %153, align 8, !dbg !8613
  %155 = bitcast i8* %154 to %struct._tracked_sc*, !dbg !8614
  store %struct._tracked_sc* %155, %struct._tracked_sc** %5, align 8, !dbg !8615
  br label %156

; <label>:156:                                    ; preds = %151, %148
  %157 = phi i1 [ false, %148 ], [ true, %151 ]
  br i1 %157, label %158, label %222, !dbg !8616

; <label>:158:                                    ; preds = %156
  %159 = load %struct._tracked_sc*, %struct._tracked_sc** %5, align 8, !dbg !8618
  %160 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %159, i32 0, i32 0, !dbg !8620
  %161 = load %struct._vrrp_script*, %struct._vrrp_script** %160, align 8, !dbg !8620
  store %struct._vrrp_script* %161, %struct._vrrp_script** %6, align 8, !dbg !8621
  %162 = load i8, i8* %10, align 1, !dbg !8622
  %163 = trunc i8 %162 to i1, !dbg !8622
  br i1 %163, label %164, label %178, !dbg !8624

; <label>:164:                                    ; preds = %158
  %165 = load %struct._tracked_sc*, %struct._tracked_sc** %5, align 8, !dbg !8625
  %166 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %165, i32 0, i32 1, !dbg !8627
  %167 = load i32, i32* %166, align 8, !dbg !8627
  %168 = icmp ne i32 %167, 0, !dbg !8625
  br i1 %168, label %169, label %178, !dbg !8628

; <label>:169:                                    ; preds = %164
  %170 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8629
  %171 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %170, i32 0, i32 0, !dbg !8631
  %172 = load i8*, i8** %171, align 8, !dbg !8631
  %173 = load %struct._vrrp_script*, %struct._vrrp_script** %6, align 8, !dbg !8632
  %174 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %173, i32 0, i32 0, !dbg !8633
  %175 = load i8*, i8** %174, align 8, !dbg !8633
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.138, i32 0, i32 0), i8* %172, i8* %175, i32 255), !dbg !8634
  %176 = load %struct._tracked_sc*, %struct._tracked_sc** %5, align 8, !dbg !8635
  %177 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %176, i32 0, i32 1, !dbg !8636
  store i32 0, i32* %177, align 8, !dbg !8637
  br label %178, !dbg !8638

; <label>:178:                                    ; preds = %169, %164, %158
  %179 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8639
  %180 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %179, i32 0, i32 2, !dbg !8641
  %181 = load %struct._list*, %struct._list** %180, align 8, !dbg !8641
  %182 = icmp ne %struct._list* %181, null, !dbg !8642
  br i1 %182, label %183, label %197, !dbg !8642

; <label>:183:                                    ; preds = %178
  %184 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8643
  %185 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %184, i32 0, i32 2, !dbg !8645
  %186 = load %struct._list*, %struct._list** %185, align 8, !dbg !8645
  %187 = icmp ne %struct._list* %186, null, !dbg !8646
  br i1 %187, label %189, label %188, !dbg !8647

; <label>:188:                                    ; preds = %183
  br label %195, !dbg !8648

; <label>:189:                                    ; preds = %183
  %190 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8650
  %191 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %190, i32 0, i32 2, !dbg !8652
  %192 = load %struct._list*, %struct._list** %191, align 8, !dbg !8652
  %193 = getelementptr inbounds %struct._list, %struct._list* %192, i32 0, i32 0, !dbg !8653
  %194 = load %struct._element*, %struct._element** %193, align 8, !dbg !8653
  br label %195, !dbg !8654

; <label>:195:                                    ; preds = %189, %188
  %196 = phi %struct._element* [ null, %188 ], [ %194, %189 ], !dbg !8655
  br label %198, !dbg !8657

; <label>:197:                                    ; preds = %178
  br label %198, !dbg !8658

; <label>:198:                                    ; preds = %197, %195
  %199 = phi %struct._element* [ %196, %195 ], [ null, %197 ], !dbg !8660
  store %struct._element* %199, %struct._element** %3, align 8, !dbg !8662
  br label %200, !dbg !8663

; <label>:200:                                    ; preds = %213, %198
  %201 = load %struct._element*, %struct._element** %3, align 8, !dbg !8664
  %202 = icmp ne %struct._element* %201, null, !dbg !8667
  br i1 %202, label %203, label %208, !dbg !8668

; <label>:203:                                    ; preds = %200
  %204 = load %struct._element*, %struct._element** %3, align 8, !dbg !8669
  %205 = getelementptr inbounds %struct._element, %struct._element* %204, i32 0, i32 2, !dbg !8671
  %206 = load i8*, i8** %205, align 8, !dbg !8671
  %207 = bitcast i8* %206 to %struct._vrrp_t*, !dbg !8672
  store %struct._vrrp_t* %207, %struct._vrrp_t** %9, align 8, !dbg !8673
  br label %208

; <label>:208:                                    ; preds = %203, %200
  %209 = phi i1 [ false, %200 ], [ true, %203 ]
  br i1 %209, label %210, label %217, !dbg !8674

; <label>:210:                                    ; preds = %208
  %211 = load %struct._vrrp_t*, %struct._vrrp_t** %9, align 8, !dbg !8676
  %212 = load %struct._tracked_sc*, %struct._tracked_sc** %5, align 8, !dbg !8677
  call void @add_vrrp_to_track_script(%struct._vrrp_t* %211, %struct._tracked_sc* %212), !dbg !8678
  br label %213, !dbg !8678

; <label>:213:                                    ; preds = %210
  %214 = load %struct._element*, %struct._element** %3, align 8, !dbg !8679
  %215 = getelementptr inbounds %struct._element, %struct._element* %214, i32 0, i32 0, !dbg !8681
  %216 = load %struct._element*, %struct._element** %215, align 8, !dbg !8681
  store %struct._element* %216, %struct._element** %3, align 8, !dbg !8682
  br label %200, !dbg !8683, !llvm.loop !8684

; <label>:217:                                    ; preds = %208
  br label %218, !dbg !8686

; <label>:218:                                    ; preds = %217
  %219 = load %struct._element*, %struct._element** %2, align 8, !dbg !8687
  %220 = getelementptr inbounds %struct._element, %struct._element* %219, i32 0, i32 0, !dbg !8689
  %221 = load %struct._element*, %struct._element** %220, align 8, !dbg !8689
  store %struct._element* %221, %struct._element** %2, align 8, !dbg !8690
  br label %148, !dbg !8691, !llvm.loop !8692

; <label>:222:                                    ; preds = %156
  %223 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8694
  %224 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %223, i32 0, i32 9, !dbg !8696
  %225 = load %struct._list*, %struct._list** %224, align 8, !dbg !8696
  %226 = icmp ne %struct._list* %225, null, !dbg !8697
  br i1 %226, label %227, label %241, !dbg !8697

; <label>:227:                                    ; preds = %222
  %228 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8698
  %229 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %228, i32 0, i32 9, !dbg !8700
  %230 = load %struct._list*, %struct._list** %229, align 8, !dbg !8700
  %231 = icmp ne %struct._list* %230, null, !dbg !8701
  br i1 %231, label %233, label %232, !dbg !8702

; <label>:232:                                    ; preds = %227
  br label %239, !dbg !8703

; <label>:233:                                    ; preds = %227
  %234 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8705
  %235 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %234, i32 0, i32 9, !dbg !8707
  %236 = load %struct._list*, %struct._list** %235, align 8, !dbg !8707
  %237 = getelementptr inbounds %struct._list, %struct._list* %236, i32 0, i32 0, !dbg !8708
  %238 = load %struct._element*, %struct._element** %237, align 8, !dbg !8708
  br label %239, !dbg !8709

; <label>:239:                                    ; preds = %233, %232
  %240 = phi %struct._element* [ null, %232 ], [ %238, %233 ], !dbg !8710
  br label %242, !dbg !8712

; <label>:241:                                    ; preds = %222
  br label %242, !dbg !8713

; <label>:242:                                    ; preds = %241, %239
  %243 = phi %struct._element* [ %240, %239 ], [ null, %241 ], !dbg !8715
  store %struct._element* %243, %struct._element** %2, align 8, !dbg !8717
  br label %244, !dbg !8718

; <label>:244:                                    ; preds = %313, %242
  %245 = load %struct._element*, %struct._element** %2, align 8, !dbg !8719
  %246 = icmp ne %struct._element* %245, null, !dbg !8722
  br i1 %246, label %247, label %252, !dbg !8723

; <label>:247:                                    ; preds = %244
  %248 = load %struct._element*, %struct._element** %2, align 8, !dbg !8724
  %249 = getelementptr inbounds %struct._element, %struct._element* %248, i32 0, i32 2, !dbg !8726
  %250 = load i8*, i8** %249, align 8, !dbg !8726
  %251 = bitcast i8* %250 to %struct._tracked_file*, !dbg !8727
  store %struct._tracked_file* %251, %struct._tracked_file** %8, align 8, !dbg !8728
  br label %252

; <label>:252:                                    ; preds = %247, %244
  %253 = phi i1 [ false, %244 ], [ true, %247 ]
  br i1 %253, label %254, label %317, !dbg !8729

; <label>:254:                                    ; preds = %252
  %255 = load i8, i8* %10, align 1, !dbg !8731
  %256 = trunc i8 %255 to i1, !dbg !8731
  br i1 %256, label %257, label %273, !dbg !8734

; <label>:257:                                    ; preds = %254
  %258 = load %struct._tracked_file*, %struct._tracked_file** %8, align 8, !dbg !8735
  %259 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %258, i32 0, i32 1, !dbg !8737
  %260 = load i32, i32* %259, align 8, !dbg !8737
  %261 = icmp ne i32 %260, 0, !dbg !8735
  br i1 %261, label %262, label %273, !dbg !8738

; <label>:262:                                    ; preds = %257
  %263 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8739
  %264 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %263, i32 0, i32 0, !dbg !8741
  %265 = load i8*, i8** %264, align 8, !dbg !8741
  %266 = load %struct._tracked_file*, %struct._tracked_file** %8, align 8, !dbg !8742
  %267 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %266, i32 0, i32 0, !dbg !8743
  %268 = load %struct._vrrp_file*, %struct._vrrp_file** %267, align 8, !dbg !8743
  %269 = getelementptr inbounds %struct._vrrp_file, %struct._vrrp_file* %268, i32 0, i32 0, !dbg !8744
  %270 = load i8*, i8** %269, align 8, !dbg !8744
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.139, i32 0, i32 0), i8* %265, i8* %270, i32 255), !dbg !8745
  %271 = load %struct._tracked_file*, %struct._tracked_file** %8, align 8, !dbg !8746
  %272 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %271, i32 0, i32 1, !dbg !8747
  store i32 0, i32* %272, align 8, !dbg !8748
  br label %273, !dbg !8749

; <label>:273:                                    ; preds = %262, %257, %254
  %274 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8750
  %275 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %274, i32 0, i32 2, !dbg !8752
  %276 = load %struct._list*, %struct._list** %275, align 8, !dbg !8752
  %277 = icmp ne %struct._list* %276, null, !dbg !8753
  br i1 %277, label %278, label %292, !dbg !8753

; <label>:278:                                    ; preds = %273
  %279 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8754
  %280 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %279, i32 0, i32 2, !dbg !8756
  %281 = load %struct._list*, %struct._list** %280, align 8, !dbg !8756
  %282 = icmp ne %struct._list* %281, null, !dbg !8757
  br i1 %282, label %284, label %283, !dbg !8758

; <label>:283:                                    ; preds = %278
  br label %290, !dbg !8759

; <label>:284:                                    ; preds = %278
  %285 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8761
  %286 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %285, i32 0, i32 2, !dbg !8763
  %287 = load %struct._list*, %struct._list** %286, align 8, !dbg !8763
  %288 = getelementptr inbounds %struct._list, %struct._list* %287, i32 0, i32 0, !dbg !8764
  %289 = load %struct._element*, %struct._element** %288, align 8, !dbg !8764
  br label %290, !dbg !8765

; <label>:290:                                    ; preds = %284, %283
  %291 = phi %struct._element* [ null, %283 ], [ %289, %284 ], !dbg !8766
  br label %293, !dbg !8768

; <label>:292:                                    ; preds = %273
  br label %293, !dbg !8769

; <label>:293:                                    ; preds = %292, %290
  %294 = phi %struct._element* [ %291, %290 ], [ null, %292 ], !dbg !8771
  store %struct._element* %294, %struct._element** %3, align 8, !dbg !8773
  br label %295, !dbg !8774

; <label>:295:                                    ; preds = %308, %293
  %296 = load %struct._element*, %struct._element** %3, align 8, !dbg !8775
  %297 = icmp ne %struct._element* %296, null, !dbg !8778
  br i1 %297, label %298, label %303, !dbg !8779

; <label>:298:                                    ; preds = %295
  %299 = load %struct._element*, %struct._element** %3, align 8, !dbg !8780
  %300 = getelementptr inbounds %struct._element, %struct._element* %299, i32 0, i32 2, !dbg !8782
  %301 = load i8*, i8** %300, align 8, !dbg !8782
  %302 = bitcast i8* %301 to %struct._vrrp_t*, !dbg !8783
  store %struct._vrrp_t* %302, %struct._vrrp_t** %9, align 8, !dbg !8784
  br label %303

; <label>:303:                                    ; preds = %298, %295
  %304 = phi i1 [ false, %295 ], [ true, %298 ]
  br i1 %304, label %305, label %312, !dbg !8785

; <label>:305:                                    ; preds = %303
  %306 = load %struct._vrrp_t*, %struct._vrrp_t** %9, align 8, !dbg !8787
  %307 = load %struct._tracked_file*, %struct._tracked_file** %8, align 8, !dbg !8788
  call void @add_vrrp_to_track_file(%struct._vrrp_t* %306, %struct._tracked_file* %307), !dbg !8789
  br label %308, !dbg !8789

; <label>:308:                                    ; preds = %305
  %309 = load %struct._element*, %struct._element** %3, align 8, !dbg !8790
  %310 = getelementptr inbounds %struct._element, %struct._element* %309, i32 0, i32 0, !dbg !8792
  %311 = load %struct._element*, %struct._element** %310, align 8, !dbg !8792
  store %struct._element* %311, %struct._element** %3, align 8, !dbg !8793
  br label %295, !dbg !8794, !llvm.loop !8795

; <label>:312:                                    ; preds = %303
  br label %313, !dbg !8797

; <label>:313:                                    ; preds = %312
  %314 = load %struct._element*, %struct._element** %2, align 8, !dbg !8798
  %315 = getelementptr inbounds %struct._element, %struct._element* %314, i32 0, i32 0, !dbg !8800
  %316 = load %struct._element*, %struct._element** %315, align 8, !dbg !8800
  store %struct._element* %316, %struct._element** %2, align 8, !dbg !8801
  br label %244, !dbg !8802, !llvm.loop !8803

; <label>:317:                                    ; preds = %252
  %318 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8805
  %319 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %318, i32 0, i32 7, !dbg !8807
  %320 = load %struct._list*, %struct._list** %319, align 8, !dbg !8807
  %321 = icmp ne %struct._list* %320, null, !dbg !8808
  br i1 %321, label %322, label %336, !dbg !8808

; <label>:322:                                    ; preds = %317
  %323 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8809
  %324 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %323, i32 0, i32 7, !dbg !8811
  %325 = load %struct._list*, %struct._list** %324, align 8, !dbg !8811
  %326 = icmp ne %struct._list* %325, null, !dbg !8812
  br i1 %326, label %328, label %327, !dbg !8813

; <label>:327:                                    ; preds = %322
  br label %334, !dbg !8814

; <label>:328:                                    ; preds = %322
  %329 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8816
  %330 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %329, i32 0, i32 7, !dbg !8818
  %331 = load %struct._list*, %struct._list** %330, align 8, !dbg !8818
  %332 = getelementptr inbounds %struct._list, %struct._list* %331, i32 0, i32 0, !dbg !8819
  %333 = load %struct._element*, %struct._element** %332, align 8, !dbg !8819
  br label %334, !dbg !8820

; <label>:334:                                    ; preds = %328, %327
  %335 = phi %struct._element* [ null, %327 ], [ %333, %328 ], !dbg !8821
  br label %337, !dbg !8823

; <label>:336:                                    ; preds = %317
  br label %337, !dbg !8824

; <label>:337:                                    ; preds = %336, %334
  %338 = phi %struct._element* [ %335, %334 ], [ null, %336 ], !dbg !8826
  store %struct._element* %338, %struct._element** %2, align 8, !dbg !8828
  br label %339, !dbg !8829

; <label>:339:                                    ; preds = %413, %337
  %340 = load %struct._element*, %struct._element** %2, align 8, !dbg !8830
  %341 = icmp ne %struct._element* %340, null, !dbg !8833
  br i1 %341, label %342, label %347, !dbg !8834

; <label>:342:                                    ; preds = %339
  %343 = load %struct._element*, %struct._element** %2, align 8, !dbg !8835
  %344 = getelementptr inbounds %struct._element, %struct._element* %343, i32 0, i32 2, !dbg !8837
  %345 = load i8*, i8** %344, align 8, !dbg !8837
  %346 = bitcast i8* %345 to %struct._tracked_if*, !dbg !8838
  store %struct._tracked_if* %346, %struct._tracked_if** %7, align 8, !dbg !8839
  br label %347

; <label>:347:                                    ; preds = %342, %339
  %348 = phi i1 [ false, %339 ], [ true, %342 ]
  br i1 %348, label %349, label %417, !dbg !8840

; <label>:349:                                    ; preds = %347
  %350 = load i8, i8* %10, align 1, !dbg !8842
  %351 = trunc i8 %350 to i1, !dbg !8842
  br i1 %351, label %352, label %368, !dbg !8845

; <label>:352:                                    ; preds = %349
  %353 = load %struct._tracked_if*, %struct._tracked_if** %7, align 8, !dbg !8846
  %354 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %353, i32 0, i32 0, !dbg !8848
  %355 = load i32, i32* %354, align 8, !dbg !8848
  %356 = icmp ne i32 %355, 0, !dbg !8846
  br i1 %356, label %357, label %368, !dbg !8849

; <label>:357:                                    ; preds = %352
  %358 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8850
  %359 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %358, i32 0, i32 0, !dbg !8852
  %360 = load i8*, i8** %359, align 8, !dbg !8852
  %361 = load %struct._tracked_if*, %struct._tracked_if** %7, align 8, !dbg !8853
  %362 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %361, i32 0, i32 1, !dbg !8854
  %363 = load %struct._interface*, %struct._interface** %362, align 8, !dbg !8854
  %364 = getelementptr inbounds %struct._interface, %struct._interface* %363, i32 0, i32 0, !dbg !8855
  %365 = getelementptr inbounds [16 x i8], [16 x i8]* %364, i32 0, i32 0, !dbg !8853
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.140, i32 0, i32 0), i8* %360, i8* %365, i32 255), !dbg !8856
  %366 = load %struct._tracked_if*, %struct._tracked_if** %7, align 8, !dbg !8857
  %367 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %366, i32 0, i32 0, !dbg !8858
  store i32 0, i32* %367, align 8, !dbg !8859
  br label %368, !dbg !8860

; <label>:368:                                    ; preds = %357, %352, %349
  %369 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8861
  %370 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %369, i32 0, i32 2, !dbg !8863
  %371 = load %struct._list*, %struct._list** %370, align 8, !dbg !8863
  %372 = icmp ne %struct._list* %371, null, !dbg !8864
  br i1 %372, label %373, label %387, !dbg !8864

; <label>:373:                                    ; preds = %368
  %374 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8865
  %375 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %374, i32 0, i32 2, !dbg !8867
  %376 = load %struct._list*, %struct._list** %375, align 8, !dbg !8867
  %377 = icmp ne %struct._list* %376, null, !dbg !8868
  br i1 %377, label %379, label %378, !dbg !8869

; <label>:378:                                    ; preds = %373
  br label %385, !dbg !8870

; <label>:379:                                    ; preds = %373
  %380 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8872
  %381 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %380, i32 0, i32 2, !dbg !8874
  %382 = load %struct._list*, %struct._list** %381, align 8, !dbg !8874
  %383 = getelementptr inbounds %struct._list, %struct._list* %382, i32 0, i32 0, !dbg !8875
  %384 = load %struct._element*, %struct._element** %383, align 8, !dbg !8875
  br label %385, !dbg !8876

; <label>:385:                                    ; preds = %379, %378
  %386 = phi %struct._element* [ null, %378 ], [ %384, %379 ], !dbg !8877
  br label %388, !dbg !8879

; <label>:387:                                    ; preds = %368
  br label %388, !dbg !8880

; <label>:388:                                    ; preds = %387, %385
  %389 = phi %struct._element* [ %386, %385 ], [ null, %387 ], !dbg !8882
  store %struct._element* %389, %struct._element** %3, align 8, !dbg !8884
  br label %390, !dbg !8885

; <label>:390:                                    ; preds = %408, %388
  %391 = load %struct._element*, %struct._element** %3, align 8, !dbg !8886
  %392 = icmp ne %struct._element* %391, null, !dbg !8889
  br i1 %392, label %393, label %398, !dbg !8890

; <label>:393:                                    ; preds = %390
  %394 = load %struct._element*, %struct._element** %3, align 8, !dbg !8891
  %395 = getelementptr inbounds %struct._element, %struct._element* %394, i32 0, i32 2, !dbg !8893
  %396 = load i8*, i8** %395, align 8, !dbg !8893
  %397 = bitcast i8* %396 to %struct._vrrp_t*, !dbg !8894
  store %struct._vrrp_t* %397, %struct._vrrp_t** %9, align 8, !dbg !8895
  br label %398

; <label>:398:                                    ; preds = %393, %390
  %399 = phi i1 [ false, %390 ], [ true, %393 ]
  br i1 %399, label %400, label %412, !dbg !8896

; <label>:400:                                    ; preds = %398
  %401 = load %struct._vrrp_t*, %struct._vrrp_t** %9, align 8, !dbg !8898
  %402 = load %struct._tracked_if*, %struct._tracked_if** %7, align 8, !dbg !8899
  %403 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %402, i32 0, i32 1, !dbg !8900
  %404 = load %struct._interface*, %struct._interface** %403, align 8, !dbg !8900
  %405 = load %struct._tracked_if*, %struct._tracked_if** %7, align 8, !dbg !8901
  %406 = getelementptr inbounds %struct._tracked_if, %struct._tracked_if* %405, i32 0, i32 0, !dbg !8902
  %407 = load i32, i32* %406, align 8, !dbg !8902
  call void @add_vrrp_to_interface(%struct._vrrp_t* %401, %struct._interface* %404, i32 %407, i1 zeroext true, i32 4), !dbg !8903
  br label %408, !dbg !8903

; <label>:408:                                    ; preds = %400
  %409 = load %struct._element*, %struct._element** %3, align 8, !dbg !8904
  %410 = getelementptr inbounds %struct._element, %struct._element* %409, i32 0, i32 0, !dbg !8906
  %411 = load %struct._element*, %struct._element** %410, align 8, !dbg !8906
  store %struct._element* %411, %struct._element** %3, align 8, !dbg !8907
  br label %390, !dbg !8908, !llvm.loop !8909

; <label>:412:                                    ; preds = %398
  br label %413, !dbg !8911

; <label>:413:                                    ; preds = %412
  %414 = load %struct._element*, %struct._element** %2, align 8, !dbg !8912
  %415 = getelementptr inbounds %struct._element, %struct._element* %414, i32 0, i32 0, !dbg !8914
  %416 = load %struct._element*, %struct._element** %415, align 8, !dbg !8914
  store %struct._element* %416, %struct._element** %2, align 8, !dbg !8915
  br label %339, !dbg !8916, !llvm.loop !8917

; <label>:417:                                    ; preds = %347
  %418 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8919
  %419 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %418, i32 0, i32 17, !dbg !8921
  %420 = load i32, i32* %419, align 8, !dbg !8921
  %421 = icmp eq i32 %420, -1, !dbg !8922
  br i1 %421, label %422, label %449, !dbg !8923

; <label>:422:                                    ; preds = %417
  %423 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !8924
  %424 = getelementptr inbounds %struct._data, %struct._data* %423, i32 0, i32 13, !dbg !8927
  %425 = load i32, i32* %424, align 8, !dbg !8927
  %426 = icmp ne i32 %425, -1, !dbg !8928
  br i1 %426, label %427, label %433, !dbg !8929

; <label>:427:                                    ; preds = %422
  %428 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !8930
  %429 = getelementptr inbounds %struct._data, %struct._data* %428, i32 0, i32 13, !dbg !8931
  %430 = load i32, i32* %429, align 8, !dbg !8931
  %431 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8932
  %432 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %431, i32 0, i32 17, !dbg !8933
  store i32 %430, i32* %432, align 8, !dbg !8934
  br label %448, !dbg !8932

; <label>:433:                                    ; preds = %422
  %434 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !8935
  %435 = getelementptr inbounds %struct._data, %struct._data* %434, i32 0, i32 10, !dbg !8937
  %436 = load i32, i32* %435, align 8, !dbg !8937
  %437 = icmp ne i32 %436, -1, !dbg !8938
  br i1 %437, label %438, label %444, !dbg !8939

; <label>:438:                                    ; preds = %433
  %439 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !8940
  %440 = getelementptr inbounds %struct._data, %struct._data* %439, i32 0, i32 10, !dbg !8941
  %441 = load i32, i32* %440, align 8, !dbg !8941
  %442 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8942
  %443 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %442, i32 0, i32 17, !dbg !8943
  store i32 %441, i32* %443, align 8, !dbg !8944
  br label %447, !dbg !8942

; <label>:444:                                    ; preds = %433
  %445 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %4, align 8, !dbg !8945
  %446 = getelementptr inbounds %struct._vrrp_sgroup, %struct._vrrp_sgroup* %445, i32 0, i32 17, !dbg !8946
  store i32 0, i32* %446, align 8, !dbg !8947
  br label %447

; <label>:447:                                    ; preds = %444, %438
  br label %448

; <label>:448:                                    ; preds = %447, %427
  br label %449, !dbg !8948

; <label>:449:                                    ; preds = %448, %417
  br label %450, !dbg !8949

; <label>:450:                                    ; preds = %449, %81
  %451 = load %struct._element*, %struct._element** %1, align 8, !dbg !8950
  %452 = getelementptr inbounds %struct._element, %struct._element* %451, i32 0, i32 0, !dbg !8952
  %453 = load %struct._element*, %struct._element** %452, align 8, !dbg !8952
  store %struct._element* %453, %struct._element** %1, align 8, !dbg !8953
  br label %52, !dbg !8954, !llvm.loop !8955

; <label>:454:                                    ; preds = %29, %60
  ret void, !dbg !8957
}

declare void @set_default_garp_delay() #3

; Function Attrs: nounwind uwtable
define internal void @process_static_entries() #0 !dbg !8958 {
  %1 = alloca %struct._element*, align 8
  %2 = alloca %struct._ip_route*, align 8
  %3 = alloca %struct._ip_rule*, align 8
  call void @llvm.dbg.declare(metadata %struct._element** %1, metadata !8959, metadata !793), !dbg !8960
  call void @llvm.dbg.declare(metadata %struct._ip_route** %2, metadata !8961, metadata !793), !dbg !8962
  call void @llvm.dbg.declare(metadata %struct._ip_rule** %3, metadata !8963, metadata !793), !dbg !8964
  %4 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !8965
  %5 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %4, i32 0, i32 2, !dbg !8967
  %6 = load %struct._list*, %struct._list** %5, align 8, !dbg !8967
  %7 = icmp ne %struct._list* %6, null, !dbg !8968
  br i1 %7, label %8, label %22, !dbg !8968

; <label>:8:                                      ; preds = %0
  %9 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !8969
  %10 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %9, i32 0, i32 2, !dbg !8971
  %11 = load %struct._list*, %struct._list** %10, align 8, !dbg !8971
  %12 = icmp ne %struct._list* %11, null, !dbg !8972
  br i1 %12, label %14, label %13, !dbg !8973

; <label>:13:                                     ; preds = %8
  br label %20, !dbg !8974

; <label>:14:                                     ; preds = %8
  %15 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !8976
  %16 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %15, i32 0, i32 2, !dbg !8978
  %17 = load %struct._list*, %struct._list** %16, align 8, !dbg !8978
  %18 = getelementptr inbounds %struct._list, %struct._list* %17, i32 0, i32 0, !dbg !8979
  %19 = load %struct._element*, %struct._element** %18, align 8, !dbg !8979
  br label %20, !dbg !8980

; <label>:20:                                     ; preds = %14, %13
  %21 = phi %struct._element* [ null, %13 ], [ %19, %14 ], !dbg !8981
  br label %23, !dbg !8983

; <label>:22:                                     ; preds = %0
  br label %23, !dbg !8984

; <label>:23:                                     ; preds = %22, %20
  %24 = phi %struct._element* [ %21, %20 ], [ null, %22 ], !dbg !8986
  store %struct._element* %24, %struct._element** %1, align 8, !dbg !8988
  br label %25, !dbg !8989

; <label>:25:                                     ; preds = %50, %23
  %26 = load %struct._element*, %struct._element** %1, align 8, !dbg !8990
  %27 = icmp ne %struct._element* %26, null, !dbg !8993
  br i1 %27, label %28, label %33, !dbg !8994

; <label>:28:                                     ; preds = %25
  %29 = load %struct._element*, %struct._element** %1, align 8, !dbg !8995
  %30 = getelementptr inbounds %struct._element, %struct._element* %29, i32 0, i32 2, !dbg !8997
  %31 = load i8*, i8** %30, align 8, !dbg !8997
  %32 = bitcast i8* %31 to %struct._ip_route*, !dbg !8998
  store %struct._ip_route* %32, %struct._ip_route** %2, align 8, !dbg !8999
  br label %33

; <label>:33:                                     ; preds = %28, %25
  %34 = phi i1 [ false, %25 ], [ true, %28 ]
  br i1 %34, label %35, label %54, !dbg !9000

; <label>:35:                                     ; preds = %33
  %36 = load %struct._ip_route*, %struct._ip_route** %2, align 8, !dbg !9002
  %37 = getelementptr inbounds %struct._ip_route, %struct._ip_route* %36, i32 0, i32 35, !dbg !9005
  %38 = load %struct._static_track_group*, %struct._static_track_group** %37, align 8, !dbg !9005
  %39 = icmp ne %struct._static_track_group* %38, null, !dbg !9002
  br i1 %39, label %41, label %40, !dbg !9006

; <label>:40:                                     ; preds = %35
  br label %50, !dbg !9007

; <label>:41:                                     ; preds = %35
  %42 = load %struct._ip_route*, %struct._ip_route** %2, align 8, !dbg !9008
  %43 = getelementptr inbounds %struct._ip_route, %struct._ip_route* %42, i32 0, i32 3, !dbg !9010
  %44 = load i8, i8* %43, align 8, !dbg !9010
  %45 = zext i8 %44 to i32, !dbg !9008
  %46 = icmp eq i32 %45, 2, !dbg !9011
  br i1 %46, label %47, label %48, !dbg !9012

; <label>:47:                                     ; preds = %41
  store i8 1, i8* @monitor_ipv4_routes, align 1, !dbg !9013
  br label %49, !dbg !9014

; <label>:48:                                     ; preds = %41
  store i8 1, i8* @monitor_ipv6_routes, align 1, !dbg !9015
  br label %49

; <label>:49:                                     ; preds = %48, %47
  br label %50, !dbg !9016

; <label>:50:                                     ; preds = %49, %40
  %51 = load %struct._element*, %struct._element** %1, align 8, !dbg !9017
  %52 = getelementptr inbounds %struct._element, %struct._element* %51, i32 0, i32 0, !dbg !9019
  %53 = load %struct._element*, %struct._element** %52, align 8, !dbg !9019
  store %struct._element* %53, %struct._element** %1, align 8, !dbg !9020
  br label %25, !dbg !9021, !llvm.loop !9022

; <label>:54:                                     ; preds = %33
  %55 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !9024
  %56 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %55, i32 0, i32 3, !dbg !9026
  %57 = load %struct._list*, %struct._list** %56, align 8, !dbg !9026
  %58 = icmp ne %struct._list* %57, null, !dbg !9027
  br i1 %58, label %59, label %73, !dbg !9027

; <label>:59:                                     ; preds = %54
  %60 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !9028
  %61 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %60, i32 0, i32 3, !dbg !9030
  %62 = load %struct._list*, %struct._list** %61, align 8, !dbg !9030
  %63 = icmp ne %struct._list* %62, null, !dbg !9031
  br i1 %63, label %65, label %64, !dbg !9032

; <label>:64:                                     ; preds = %59
  br label %71, !dbg !9033

; <label>:65:                                     ; preds = %59
  %66 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !9035
  %67 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %66, i32 0, i32 3, !dbg !9037
  %68 = load %struct._list*, %struct._list** %67, align 8, !dbg !9037
  %69 = getelementptr inbounds %struct._list, %struct._list* %68, i32 0, i32 0, !dbg !9038
  %70 = load %struct._element*, %struct._element** %69, align 8, !dbg !9038
  br label %71, !dbg !9039

; <label>:71:                                     ; preds = %65, %64
  %72 = phi %struct._element* [ null, %64 ], [ %70, %65 ], !dbg !9040
  br label %74, !dbg !9042

; <label>:73:                                     ; preds = %54
  br label %74, !dbg !9043

; <label>:74:                                     ; preds = %73, %71
  %75 = phi %struct._element* [ %72, %71 ], [ null, %73 ], !dbg !9045
  store %struct._element* %75, %struct._element** %1, align 8, !dbg !9047
  br label %76, !dbg !9048

; <label>:76:                                     ; preds = %100, %74
  %77 = load %struct._element*, %struct._element** %1, align 8, !dbg !9049
  %78 = icmp ne %struct._element* %77, null, !dbg !9052
  br i1 %78, label %79, label %84, !dbg !9053

; <label>:79:                                     ; preds = %76
  %80 = load %struct._element*, %struct._element** %1, align 8, !dbg !9054
  %81 = getelementptr inbounds %struct._element, %struct._element* %80, i32 0, i32 2, !dbg !9056
  %82 = load i8*, i8** %81, align 8, !dbg !9056
  %83 = bitcast i8* %82 to %struct._ip_rule*, !dbg !9057
  store %struct._ip_rule* %83, %struct._ip_rule** %3, align 8, !dbg !9058
  br label %84

; <label>:84:                                     ; preds = %79, %76
  %85 = phi i1 [ false, %76 ], [ true, %79 ]
  br i1 %85, label %86, label %104, !dbg !9059

; <label>:86:                                     ; preds = %84
  %87 = load %struct._ip_rule*, %struct._ip_rule** %3, align 8, !dbg !9061
  %88 = getelementptr inbounds %struct._ip_rule, %struct._ip_rule* %87, i32 0, i32 19, !dbg !9064
  %89 = load %struct._static_track_group*, %struct._static_track_group** %88, align 8, !dbg !9064
  %90 = icmp ne %struct._static_track_group* %89, null, !dbg !9061
  br i1 %90, label %92, label %91, !dbg !9065

; <label>:91:                                     ; preds = %86
  br label %100, !dbg !9066

; <label>:92:                                     ; preds = %86
  %93 = load %struct._ip_rule*, %struct._ip_rule** %3, align 8, !dbg !9067
  %94 = getelementptr inbounds %struct._ip_rule, %struct._ip_rule* %93, i32 0, i32 2, !dbg !9069
  %95 = load i32, i32* %94, align 8, !dbg !9069
  %96 = icmp eq i32 %95, 2, !dbg !9070
  br i1 %96, label %97, label %98, !dbg !9071

; <label>:97:                                     ; preds = %92
  store i8 1, i8* @monitor_ipv4_rules, align 1, !dbg !9072
  br label %99, !dbg !9073

; <label>:98:                                     ; preds = %92
  store i8 1, i8* @monitor_ipv6_rules, align 1, !dbg !9074
  br label %99

; <label>:99:                                     ; preds = %98, %97
  br label %100, !dbg !9075

; <label>:100:                                    ; preds = %99, %91
  %101 = load %struct._element*, %struct._element** %1, align 8, !dbg !9076
  %102 = getelementptr inbounds %struct._element, %struct._element* %101, i32 0, i32 0, !dbg !9078
  %103 = load %struct._element*, %struct._element** %102, align 8, !dbg !9078
  store %struct._element* %103, %struct._element** %1, align 8, !dbg !9079
  br label %76, !dbg !9080, !llvm.loop !9081

; <label>:104:                                    ; preds = %84
  ret void, !dbg !9083
}

declare void @set_extra_netlink_monitoring(i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) #3

declare void @iptables_cleanup() #3

declare void @init_interface_linkbeat() #3

declare void @initialise_interface_tracking_priorities() #3

declare void @initialise_tracking_priorities(%struct._vrrp_t*) #3

; Function Attrs: nounwind uwtable
define internal %struct._vrrp_t* @vrrp_exist(%struct._vrrp_t*) #0 !dbg !9084 {
  %2 = alloca %struct._vrrp_t*, align 8
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca %struct._element*, align 8
  %5 = alloca %struct._vrrp_t*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !9087, metadata !793), !dbg !9088
  call void @llvm.dbg.declare(metadata %struct._element** %4, metadata !9089, metadata !793), !dbg !9090
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %5, metadata !9091, metadata !793), !dbg !9092
  %6 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !9093
  %7 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %6, i32 0, i32 5, !dbg !9095
  %8 = load %struct._list*, %struct._list** %7, align 8, !dbg !9095
  %9 = icmp eq %struct._list* %8, null, !dbg !9096
  br i1 %9, label %24, label %10, !dbg !9097

; <label>:10:                                     ; preds = %1
  %11 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !9098
  %12 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %11, i32 0, i32 5, !dbg !9100
  %13 = load %struct._list*, %struct._list** %12, align 8, !dbg !9100
  %14 = getelementptr inbounds %struct._list, %struct._list* %13, i32 0, i32 0, !dbg !9101
  %15 = load %struct._element*, %struct._element** %14, align 8, !dbg !9101
  %16 = icmp eq %struct._element* %15, null, !dbg !9102
  br i1 %16, label %17, label %25, !dbg !9103

; <label>:17:                                     ; preds = %10
  %18 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !9104
  %19 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %18, i32 0, i32 5, !dbg !9106
  %20 = load %struct._list*, %struct._list** %19, align 8, !dbg !9106
  %21 = getelementptr inbounds %struct._list, %struct._list* %20, i32 0, i32 1, !dbg !9107
  %22 = load %struct._element*, %struct._element** %21, align 8, !dbg !9107
  %23 = icmp eq %struct._element* %22, null, !dbg !9108
  br i1 %23, label %24, label %25, !dbg !9109

; <label>:24:                                     ; preds = %17, %1
  store %struct._vrrp_t* null, %struct._vrrp_t** %2, align 8, !dbg !9110
  br label %121, !dbg !9110

; <label>:25:                                     ; preds = %17, %10
  %26 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !9111
  %27 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %26, i32 0, i32 5, !dbg !9113
  %28 = load %struct._list*, %struct._list** %27, align 8, !dbg !9113
  %29 = icmp ne %struct._list* %28, null, !dbg !9114
  br i1 %29, label %31, label %30, !dbg !9115

; <label>:30:                                     ; preds = %25
  br label %37, !dbg !9116

; <label>:31:                                     ; preds = %25
  %32 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !9118
  %33 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %32, i32 0, i32 5, !dbg !9120
  %34 = load %struct._list*, %struct._list** %33, align 8, !dbg !9120
  %35 = getelementptr inbounds %struct._list, %struct._list* %34, i32 0, i32 0, !dbg !9121
  %36 = load %struct._element*, %struct._element** %35, align 8, !dbg !9121
  br label %37, !dbg !9122

; <label>:37:                                     ; preds = %31, %30
  %38 = phi %struct._element* [ null, %30 ], [ %36, %31 ], !dbg !9123
  store %struct._element* %38, %struct._element** %4, align 8, !dbg !9125
  br label %39, !dbg !9126

; <label>:39:                                     ; preds = %116, %37
  %40 = load %struct._element*, %struct._element** %4, align 8, !dbg !9127
  %41 = icmp ne %struct._element* %40, null, !dbg !9130
  br i1 %41, label %42, label %120, !dbg !9130

; <label>:42:                                     ; preds = %39
  %43 = load %struct._element*, %struct._element** %4, align 8, !dbg !9131
  %44 = getelementptr inbounds %struct._element, %struct._element* %43, i32 0, i32 2, !dbg !9133
  %45 = load i8*, i8** %44, align 8, !dbg !9133
  %46 = bitcast i8* %45 to %struct._vrrp_t*, !dbg !9134
  store %struct._vrrp_t* %46, %struct._vrrp_t** %5, align 8, !dbg !9135
  %47 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !9136
  %48 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %47, i32 0, i32 36, !dbg !9138
  %49 = load i8, i8* %48, align 4, !dbg !9138
  %50 = zext i8 %49 to i32, !dbg !9136
  %51 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9139
  %52 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %51, i32 0, i32 36, !dbg !9140
  %53 = load i8, i8* %52, align 4, !dbg !9140
  %54 = zext i8 %53 to i32, !dbg !9139
  %55 = icmp ne i32 %50, %54, !dbg !9141
  br i1 %55, label %66, label %56, !dbg !9142

; <label>:56:                                     ; preds = %42
  %57 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !9143
  %58 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %57, i32 0, i32 0, !dbg !9144
  %59 = load i16, i16* %58, align 8, !dbg !9144
  %60 = zext i16 %59 to i32, !dbg !9143
  %61 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9145
  %62 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %61, i32 0, i32 0, !dbg !9146
  %63 = load i16, i16* %62, align 8, !dbg !9146
  %64 = zext i16 %63 to i32, !dbg !9145
  %65 = icmp ne i32 %60, %64, !dbg !9147
  br i1 %65, label %66, label %67, !dbg !9148

; <label>:66:                                     ; preds = %56, %42
  br label %116, !dbg !9150

; <label>:67:                                     ; preds = %56
  %68 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !9151
  %69 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %68, i32 0, i32 9, !dbg !9153
  %70 = call zeroext i1 @__test_bit(i32 0, i64* %69), !dbg !9154
  %71 = zext i1 %70 to i32, !dbg !9154
  %72 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9155
  %73 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %72, i32 0, i32 9, !dbg !9156
  %74 = call zeroext i1 @__test_bit(i32 0, i64* %73), !dbg !9157
  %75 = zext i1 %74 to i32, !dbg !9159
  %76 = icmp ne i32 %71, %75, !dbg !9160
  br i1 %76, label %77, label %78, !dbg !9161

; <label>:77:                                     ; preds = %67
  br label %116, !dbg !9162

; <label>:78:                                     ; preds = %67
  %79 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !9163
  %80 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %79, i32 0, i32 9, !dbg !9165
  %81 = call zeroext i1 @__test_bit(i32 0, i64* %80), !dbg !9166
  br i1 %81, label %97, label %82, !dbg !9167

; <label>:82:                                     ; preds = %78
  %83 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !9168
  %84 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %83, i32 0, i32 4, !dbg !9171
  %85 = load %struct._interface*, %struct._interface** %84, align 8, !dbg !9171
  %86 = getelementptr inbounds %struct._interface, %struct._interface* %85, i32 0, i32 1, !dbg !9172
  %87 = load i32, i32* %86, align 8, !dbg !9172
  %88 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9173
  %89 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %88, i32 0, i32 4, !dbg !9174
  %90 = load %struct._interface*, %struct._interface** %89, align 8, !dbg !9174
  %91 = getelementptr inbounds %struct._interface, %struct._interface* %90, i32 0, i32 1, !dbg !9175
  %92 = load i32, i32* %91, align 8, !dbg !9175
  %93 = icmp eq i32 %87, %92, !dbg !9176
  br i1 %93, label %94, label %96, !dbg !9177

; <label>:94:                                     ; preds = %82
  %95 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !9178
  store %struct._vrrp_t* %95, %struct._vrrp_t** %2, align 8, !dbg !9179
  br label %121, !dbg !9179

; <label>:96:                                     ; preds = %82
  br label %116, !dbg !9180

; <label>:97:                                     ; preds = %78
  %98 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !9181
  %99 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %98, i32 0, i32 4, !dbg !9183
  %100 = load %struct._interface*, %struct._interface** %99, align 8, !dbg !9183
  %101 = getelementptr inbounds %struct._interface, %struct._interface* %100, i32 0, i32 14, !dbg !9184
  %102 = load %struct._interface*, %struct._interface** %101, align 8, !dbg !9184
  %103 = getelementptr inbounds %struct._interface, %struct._interface* %102, i32 0, i32 1, !dbg !9185
  %104 = load i32, i32* %103, align 8, !dbg !9185
  %105 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9186
  %106 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %105, i32 0, i32 4, !dbg !9187
  %107 = load %struct._interface*, %struct._interface** %106, align 8, !dbg !9187
  %108 = getelementptr inbounds %struct._interface, %struct._interface* %107, i32 0, i32 14, !dbg !9188
  %109 = load %struct._interface*, %struct._interface** %108, align 8, !dbg !9188
  %110 = getelementptr inbounds %struct._interface, %struct._interface* %109, i32 0, i32 1, !dbg !9189
  %111 = load i32, i32* %110, align 8, !dbg !9189
  %112 = icmp eq i32 %104, %111, !dbg !9190
  br i1 %112, label %113, label %115, !dbg !9191

; <label>:113:                                    ; preds = %97
  %114 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !9192
  store %struct._vrrp_t* %114, %struct._vrrp_t** %2, align 8, !dbg !9193
  br label %121, !dbg !9193

; <label>:115:                                    ; preds = %97
  br label %116, !dbg !9194

; <label>:116:                                    ; preds = %115, %96, %77, %66
  %117 = load %struct._element*, %struct._element** %4, align 8, !dbg !9195
  %118 = getelementptr inbounds %struct._element, %struct._element* %117, i32 0, i32 0, !dbg !9197
  %119 = load %struct._element*, %struct._element** %118, align 8, !dbg !9197
  store %struct._element* %119, %struct._element** %4, align 8, !dbg !9198
  br label %39, !dbg !9199, !llvm.loop !9200

; <label>:120:                                    ; preds = %39
  store %struct._vrrp_t* null, %struct._vrrp_t** %2, align 8, !dbg !9202
  br label %121, !dbg !9202

; <label>:121:                                    ; preds = %120, %113, %94, %24
  %122 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !9203
  ret %struct._vrrp_t* %122, !dbg !9203
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare void @free(i8*) #6

declare void @alloc_vrrp_buffer(i64) #3

; Function Attrs: nounwind uwtable
define void @vrrp_restore_interfaces_startup() #0 !dbg !9204 {
  %1 = alloca %struct._element*, align 8
  %2 = alloca %struct._vrrp_t*, align 8
  call void @llvm.dbg.declare(metadata %struct._element** %1, metadata !9205, metadata !793), !dbg !9206
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !9207, metadata !793), !dbg !9208
  %3 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !9209
  %4 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %3, i32 0, i32 5, !dbg !9211
  %5 = load %struct._list*, %struct._list** %4, align 8, !dbg !9211
  %6 = icmp ne %struct._list* %5, null, !dbg !9212
  br i1 %6, label %8, label %7, !dbg !9213

; <label>:7:                                      ; preds = %0
  br label %14, !dbg !9214

; <label>:8:                                      ; preds = %0
  %9 = load %struct._vrrp_data*, %struct._vrrp_data** @vrrp_data, align 8, !dbg !9216
  %10 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %9, i32 0, i32 5, !dbg !9218
  %11 = load %struct._list*, %struct._list** %10, align 8, !dbg !9218
  %12 = getelementptr inbounds %struct._list, %struct._list* %11, i32 0, i32 0, !dbg !9219
  %13 = load %struct._element*, %struct._element** %12, align 8, !dbg !9219
  br label %14, !dbg !9220

; <label>:14:                                     ; preds = %8, %7
  %15 = phi %struct._element* [ null, %7 ], [ %13, %8 ], !dbg !9221
  store %struct._element* %15, %struct._element** %1, align 8, !dbg !9223
  br label %16, !dbg !9224

; <label>:16:                                     ; preds = %31, %14
  %17 = load %struct._element*, %struct._element** %1, align 8, !dbg !9225
  %18 = icmp ne %struct._element* %17, null, !dbg !9228
  br i1 %18, label %19, label %35, !dbg !9228

; <label>:19:                                     ; preds = %16
  %20 = load %struct._element*, %struct._element** %1, align 8, !dbg !9229
  %21 = getelementptr inbounds %struct._element, %struct._element* %20, i32 0, i32 2, !dbg !9231
  %22 = load i8*, i8** %21, align 8, !dbg !9231
  %23 = bitcast i8* %22 to %struct._vrrp_t*, !dbg !9232
  store %struct._vrrp_t* %23, %struct._vrrp_t** %2, align 8, !dbg !9233
  %24 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !9234
  %25 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %24, i32 0, i32 40, !dbg !9236
  %26 = load i8, i8* %25, align 4, !dbg !9236
  %27 = trunc i8 %26 to i1, !dbg !9236
  br i1 %27, label %28, label %30, !dbg !9237

; <label>:28:                                     ; preds = %19
  %29 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !9238
  call void @vrrp_restore_interface(%struct._vrrp_t* %29, i1 zeroext false, i1 zeroext true), !dbg !9239
  br label %30, !dbg !9239

; <label>:30:                                     ; preds = %28, %19
  br label %31, !dbg !9240

; <label>:31:                                     ; preds = %30
  %32 = load %struct._element*, %struct._element** %1, align 8, !dbg !9241
  %33 = getelementptr inbounds %struct._element, %struct._element* %32, i32 0, i32 0, !dbg !9243
  %34 = load %struct._element*, %struct._element** %33, align 8, !dbg !9243
  store %struct._element* %34, %struct._element** %1, align 8, !dbg !9244
  br label %16, !dbg !9245, !llvm.loop !9246

; <label>:35:                                     ; preds = %16
  ret void, !dbg !9248
}

; Function Attrs: nounwind uwtable
define void @clear_diff_vrrp() #0 !dbg !9249 {
  %1 = alloca %struct._element*, align 8
  %2 = alloca %struct._list*, align 8
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct._element** %1, metadata !9250, metadata !793), !dbg !9251
  call void @llvm.dbg.declare(metadata %struct._list** %2, metadata !9252, metadata !793), !dbg !9253
  %6 = load %struct._vrrp_data*, %struct._vrrp_data** @old_vrrp_data, align 8, !dbg !9254
  %7 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %6, i32 0, i32 5, !dbg !9255
  %8 = load %struct._list*, %struct._list** %7, align 8, !dbg !9255
  store %struct._list* %8, %struct._list** %2, align 8, !dbg !9253
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !9256, metadata !793), !dbg !9257
  %9 = load %struct._list*, %struct._list** %2, align 8, !dbg !9258
  %10 = icmp eq %struct._list* %9, null, !dbg !9260
  br i1 %10, label %21, label %11, !dbg !9261

; <label>:11:                                     ; preds = %0
  %12 = load %struct._list*, %struct._list** %2, align 8, !dbg !9262
  %13 = getelementptr inbounds %struct._list, %struct._list* %12, i32 0, i32 0, !dbg !9264
  %14 = load %struct._element*, %struct._element** %13, align 8, !dbg !9264
  %15 = icmp eq %struct._element* %14, null, !dbg !9265
  br i1 %15, label %16, label %22, !dbg !9266

; <label>:16:                                     ; preds = %11
  %17 = load %struct._list*, %struct._list** %2, align 8, !dbg !9267
  %18 = getelementptr inbounds %struct._list, %struct._list* %17, i32 0, i32 1, !dbg !9269
  %19 = load %struct._element*, %struct._element** %18, align 8, !dbg !9269
  %20 = icmp eq %struct._element* %19, null, !dbg !9270
  br i1 %20, label %21, label %22, !dbg !9271

; <label>:21:                                     ; preds = %16, %0
  br label %113, !dbg !9272

; <label>:22:                                     ; preds = %16, %11
  %23 = load %struct._list*, %struct._list** %2, align 8, !dbg !9273
  %24 = icmp ne %struct._list* %23, null, !dbg !9275
  br i1 %24, label %26, label %25, !dbg !9276

; <label>:25:                                     ; preds = %22
  br label %30, !dbg !9277

; <label>:26:                                     ; preds = %22
  %27 = load %struct._list*, %struct._list** %2, align 8, !dbg !9279
  %28 = getelementptr inbounds %struct._list, %struct._list* %27, i32 0, i32 0, !dbg !9281
  %29 = load %struct._element*, %struct._element** %28, align 8, !dbg !9281
  br label %30, !dbg !9282

; <label>:30:                                     ; preds = %26, %25
  %31 = phi %struct._element* [ null, %25 ], [ %29, %26 ], !dbg !9283
  store %struct._element* %31, %struct._element** %1, align 8, !dbg !9285
  br label %32, !dbg !9286

; <label>:32:                                     ; preds = %109, %30
  %33 = load %struct._element*, %struct._element** %1, align 8, !dbg !9287
  %34 = icmp ne %struct._element* %33, null, !dbg !9290
  br i1 %34, label %35, label %113, !dbg !9290

; <label>:35:                                     ; preds = %32
  %36 = load %struct._element*, %struct._element** %1, align 8, !dbg !9291
  %37 = getelementptr inbounds %struct._element, %struct._element* %36, i32 0, i32 2, !dbg !9293
  %38 = load i8*, i8** %37, align 8, !dbg !9293
  %39 = bitcast i8* %38 to %struct._vrrp_t*, !dbg !9294
  store %struct._vrrp_t* %39, %struct._vrrp_t** %3, align 8, !dbg !9295
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !9296, metadata !793), !dbg !9297
  %40 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9298
  %41 = call %struct._vrrp_t* @vrrp_exist(%struct._vrrp_t* %40), !dbg !9299
  store %struct._vrrp_t* %41, %struct._vrrp_t** %4, align 8, !dbg !9300
  %42 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9301
  %43 = icmp ne %struct._vrrp_t* %42, null, !dbg !9301
  br i1 %43, label %52, label %44, !dbg !9303

; <label>:44:                                     ; preds = %35
  %45 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9304
  call void @vrrp_restore_interface(%struct._vrrp_t* %45, i1 zeroext true, i1 zeroext false), !dbg !9306
  %46 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9307
  %47 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %46, i32 0, i32 9, !dbg !9309
  %48 = call zeroext i1 @__test_bit(i32 0, i64* %47), !dbg !9310
  br i1 %48, label %49, label %51, !dbg !9311

; <label>:49:                                     ; preds = %44
  %50 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9312
  call void @netlink_link_del_vmac(%struct._vrrp_t* %50), !dbg !9313
  br label %51, !dbg !9313

; <label>:51:                                     ; preds = %49, %44
  br label %108, !dbg !9314

; <label>:52:                                     ; preds = %35
  %53 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9315
  %54 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9317
  call void @clear_diff_vrrp_vip(%struct._vrrp_t* %53, %struct._vrrp_t* %54), !dbg !9318
  %55 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9319
  %56 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9320
  call void @clear_diff_vrrp_vroutes(%struct._vrrp_t* %55, %struct._vrrp_t* %56), !dbg !9321
  %57 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9322
  %58 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9323
  call void @clear_diff_vrrp_vrules(%struct._vrrp_t* %57, %struct._vrrp_t* %58), !dbg !9324
  %59 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9325
  %60 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %59, i32 0, i32 9, !dbg !9327
  %61 = call zeroext i1 @__test_bit(i32 0, i64* %60), !dbg !9328
  br i1 %61, label %62, label %68, !dbg !9329

; <label>:62:                                     ; preds = %52
  %63 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9330
  %64 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %63, i32 0, i32 9, !dbg !9331
  %65 = call zeroext i1 @__test_bit(i32 0, i64* %64), !dbg !9332
  br i1 %65, label %68, label %66, !dbg !9333

; <label>:66:                                     ; preds = %62
  %67 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9335
  call void @netlink_link_del_vmac(%struct._vrrp_t* %67), !dbg !9337
  br label %68, !dbg !9338

; <label>:68:                                     ; preds = %66, %62, %52
  %69 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9339
  %70 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9341
  %71 = call zeroext i1 @restore_vrrp_state(%struct._vrrp_t* %69, %struct._vrrp_t* %70), !dbg !9342
  br i1 %71, label %72, label %107, !dbg !9343

; <label>:72:                                     ; preds = %68
  %73 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9344
  %74 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9346
  %75 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %74, i32 0, i32 28, !dbg !9347
  %76 = load i32, i32* %75, align 8, !dbg !9347
  call void @vrrp_send_link_update(%struct._vrrp_t* %73, i32 %76), !dbg !9348
  %77 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9349
  %78 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %77, i32 0, i32 26, !dbg !9351
  %79 = getelementptr inbounds %struct.timeval, %struct.timeval* %78, i32 0, i32 0, !dbg !9352
  %80 = load i64, i64* %79, align 8, !dbg !9352
  %81 = icmp ne i64 %80, 0, !dbg !9349
  br i1 %81, label %88, label %82, !dbg !9353

; <label>:82:                                     ; preds = %72
  %83 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9354
  %84 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %83, i32 0, i32 26, !dbg !9356
  %85 = getelementptr inbounds %struct.timeval, %struct.timeval* %84, i32 0, i32 1, !dbg !9357
  %86 = load i64, i64* %85, align 8, !dbg !9357
  %87 = icmp ne i64 %86, 0, !dbg !9358
  br i1 %87, label %88, label %106, !dbg !9359

; <label>:88:                                     ; preds = %82, %72
  %89 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9360
  %90 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %89, i32 0, i32 27, !dbg !9361
  %91 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9362
  %92 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %91, i32 0, i32 26, !dbg !9363
  %93 = bitcast %struct.timeval* %92 to { i64, i64 }*, !dbg !9364
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %93, i32 0, i32 0, !dbg !9364
  %95 = load i64, i64* %94, align 8, !dbg !9364
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %93, i32 0, i32 1, !dbg !9364
  %97 = load i64, i64* %96, align 8, !dbg !9364
  %98 = call { i64, i64 } @timer_add_now(i64 %95, i64 %97), !dbg !9364
  %99 = bitcast %struct.timeval* %5 to { i64, i64 }*, !dbg !9364
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %99, i32 0, i32 0, !dbg !9364
  %101 = extractvalue { i64, i64 } %98, 0, !dbg !9364
  store i64 %101, i64* %100, align 8, !dbg !9364
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %99, i32 0, i32 1, !dbg !9364
  %103 = extractvalue { i64, i64 } %98, 1, !dbg !9364
  store i64 %103, i64* %102, align 8, !dbg !9364
  %104 = bitcast %struct.timeval* %90 to i8*, !dbg !9364
  %105 = bitcast %struct.timeval* %5 to i8*, !dbg !9364
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 16, i32 8, i1 false), !dbg !9365
  br label %106, !dbg !9360

; <label>:106:                                    ; preds = %88, %82
  br label %107, !dbg !9366

; <label>:107:                                    ; preds = %106, %68
  br label %108

; <label>:108:                                    ; preds = %107, %51
  br label %109, !dbg !9367

; <label>:109:                                    ; preds = %108
  %110 = load %struct._element*, %struct._element** %1, align 8, !dbg !9368
  %111 = getelementptr inbounds %struct._element, %struct._element* %110, i32 0, i32 0, !dbg !9370
  %112 = load %struct._element*, %struct._element** %111, align 8, !dbg !9370
  store %struct._element* %112, %struct._element** %1, align 8, !dbg !9371
  br label %32, !dbg !9372, !llvm.loop !9373

; <label>:113:                                    ; preds = %21, %32
  ret void, !dbg !9375
}

; Function Attrs: nounwind uwtable
define internal void @clear_diff_vrrp_vip(%struct._vrrp_t*, %struct._vrrp_t*) #0 !dbg !9376 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.ipt_handle*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !9379, metadata !793), !dbg !9380
  store %struct._vrrp_t* %1, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !9381, metadata !793), !dbg !9382
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9383, metadata !793), !dbg !9384
  store i32 0, i32* %5, align 4, !dbg !9384
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9385, metadata !793), !dbg !9386
  store i32 0, i32* %6, align 4, !dbg !9386
  call void @llvm.dbg.declare(metadata %struct.ipt_handle** %7, metadata !9387, metadata !793), !dbg !9388
  store %struct.ipt_handle* null, %struct.ipt_handle** %7, align 8, !dbg !9388
  %8 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9389
  %9 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %8, i32 0, i32 40, !dbg !9391
  %10 = load i8, i8* %9, align 4, !dbg !9391
  %11 = trunc i8 %10 to i1, !dbg !9391
  br i1 %11, label %13, label %12, !dbg !9392

; <label>:12:                                     ; preds = %2
  br label %43, !dbg !9393

; <label>:13:                                     ; preds = %2
  br label %14, !dbg !9394, !llvm.loop !9395

; <label>:14:                                     ; preds = %41, %13
  %15 = call %struct.ipt_handle* @iptables_open(), !dbg !9396
  store %struct.ipt_handle* %15, %struct.ipt_handle** %7, align 8, !dbg !9398
  %16 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9399
  %17 = load %struct.ipt_handle*, %struct.ipt_handle** %7, align 8, !dbg !9400
  %18 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9401
  %19 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %18, i32 0, i32 41, !dbg !9402
  %20 = load %struct._list*, %struct._list** %19, align 8, !dbg !9402
  %21 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9403
  %22 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %21, i32 0, i32 41, !dbg !9404
  %23 = load %struct._list*, %struct._list** %22, align 8, !dbg !9404
  call void @clear_diff_vrrp_vip_list(%struct._vrrp_t* %16, %struct.ipt_handle* %17, %struct._list* %20, %struct._list* %23), !dbg !9405
  %24 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9406
  %25 = load %struct.ipt_handle*, %struct.ipt_handle** %7, align 8, !dbg !9407
  %26 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9408
  %27 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %26, i32 0, i32 42, !dbg !9409
  %28 = load %struct._list*, %struct._list** %27, align 8, !dbg !9409
  %29 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9410
  %30 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %29, i32 0, i32 42, !dbg !9411
  %31 = load %struct._list*, %struct._list** %30, align 8, !dbg !9411
  call void @clear_diff_vrrp_vip_list(%struct._vrrp_t* %24, %struct.ipt_handle* %25, %struct._list* %28, %struct._list* %31), !dbg !9412
  %32 = load %struct.ipt_handle*, %struct.ipt_handle** %7, align 8, !dbg !9413
  %33 = call i32 @iptables_close(%struct.ipt_handle* %32), !dbg !9414
  store i32 %33, i32* %6, align 4, !dbg !9415
  br label %34, !dbg !9416

; <label>:34:                                     ; preds = %14
  %35 = load i32, i32* %6, align 4, !dbg !9417
  %36 = icmp eq i32 %35, 11, !dbg !9419
  br i1 %36, label %37, label %41, !dbg !9420

; <label>:37:                                     ; preds = %34
  %38 = load i32, i32* %5, align 4, !dbg !9421
  %39 = add nsw i32 %38, 1, !dbg !9421
  store i32 %39, i32* %5, align 4, !dbg !9421
  %40 = icmp slt i32 %39, 3, !dbg !9423
  br label %41

; <label>:41:                                     ; preds = %37, %34
  %42 = phi i1 [ false, %34 ], [ %40, %37 ]
  br i1 %42, label %14, label %43, !dbg !9424, !llvm.loop !9395

; <label>:43:                                     ; preds = %12, %41
  ret void, !dbg !9426
}

; Function Attrs: nounwind uwtable
define internal void @clear_diff_vrrp_vroutes(%struct._vrrp_t*, %struct._vrrp_t*) #0 !dbg !9427 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca %struct._vrrp_t*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !9428, metadata !793), !dbg !9429
  store %struct._vrrp_t* %1, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !9430, metadata !793), !dbg !9431
  %5 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9432
  %6 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %5, i32 0, i32 45, !dbg !9433
  %7 = load %struct._list*, %struct._list** %6, align 8, !dbg !9433
  %8 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9434
  %9 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %8, i32 0, i32 45, !dbg !9435
  %10 = load %struct._list*, %struct._list** %9, align 8, !dbg !9435
  call void @clear_diff_routes(%struct._list* %7, %struct._list* %10), !dbg !9436
  ret void, !dbg !9437
}

; Function Attrs: nounwind uwtable
define internal void @clear_diff_vrrp_vrules(%struct._vrrp_t*, %struct._vrrp_t*) #0 !dbg !9438 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca %struct._vrrp_t*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !9439, metadata !793), !dbg !9440
  store %struct._vrrp_t* %1, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !9441, metadata !793), !dbg !9442
  %5 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9443
  %6 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %5, i32 0, i32 46, !dbg !9444
  %7 = load %struct._list*, %struct._list** %6, align 8, !dbg !9444
  %8 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9445
  %9 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %8, i32 0, i32 46, !dbg !9446
  %10 = load %struct._list*, %struct._list** %9, align 8, !dbg !9446
  call void @clear_diff_rules(%struct._list* %7, %struct._list* %10), !dbg !9447
  ret void, !dbg !9448
}

; Function Attrs: nounwind uwtable
define internal zeroext i1 @restore_vrrp_state(%struct._vrrp_t*, %struct._vrrp_t*) #0 !dbg !9449 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i8, align 1
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !9452, metadata !793), !dbg !9453
  store %struct._vrrp_t* %1, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !9454, metadata !793), !dbg !9455
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9456, metadata !793), !dbg !9457
  store i8 0, i8* %5, align 1, !dbg !9457
  %6 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9458
  %7 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %6, i32 0, i32 55, !dbg !9459
  %8 = load i32, i32* %7, align 8, !dbg !9459
  %9 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9460
  %10 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %9, i32 0, i32 55, !dbg !9461
  store i32 %8, i32* %10, align 8, !dbg !9462
  %11 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9463
  %12 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %11, i32 0, i32 55, !dbg !9464
  %13 = load i32, i32* %12, align 8, !dbg !9464
  %14 = icmp eq i32 %13, 2, !dbg !9465
  %15 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9466
  %16 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %15, i32 0, i32 57, !dbg !9467
  %17 = zext i1 %14 to i8, !dbg !9468
  store i8 %17, i8* %16, align 8, !dbg !9468
  %18 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9469
  %19 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %18, i32 0, i32 56, !dbg !9470
  %20 = load i32, i32* %19, align 4, !dbg !9470
  %21 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9471
  %22 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %21, i32 0, i32 56, !dbg !9472
  store i32 %20, i32* %22, align 4, !dbg !9473
  %23 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9474
  %24 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %23, i32 0, i32 2, !dbg !9476
  %25 = load %struct._vrrp_sgroup*, %struct._vrrp_sgroup** %24, align 8, !dbg !9476
  %26 = icmp ne %struct._vrrp_sgroup* %25, null, !dbg !9474
  br i1 %26, label %73, label %27, !dbg !9477

; <label>:27:                                     ; preds = %2
  %28 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9478
  %29 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %28, i32 0, i32 37, !dbg !9480
  %30 = load i8, i8* %29, align 1, !dbg !9480
  %31 = zext i8 %30 to i32, !dbg !9478
  %32 = icmp ne i32 %31, 255, !dbg !9481
  br i1 %32, label %33, label %73, !dbg !9482

; <label>:33:                                     ; preds = %27
  %34 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9483
  %35 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %34, i32 0, i32 39, !dbg !9485
  %36 = load i32, i32* %35, align 8, !dbg !9485
  %37 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9486
  %38 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %37, i32 0, i32 37, !dbg !9487
  %39 = load i8, i8* %38, align 1, !dbg !9487
  %40 = zext i8 %39 to i32, !dbg !9486
  %41 = add nsw i32 %36, %40, !dbg !9488
  %42 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9489
  %43 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %42, i32 0, i32 37, !dbg !9490
  %44 = load i8, i8* %43, align 1, !dbg !9490
  %45 = zext i8 %44 to i32, !dbg !9489
  %46 = sub nsw i32 %41, %45, !dbg !9491
  %47 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9492
  %48 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %47, i32 0, i32 39, !dbg !9493
  store i32 %46, i32* %48, align 8, !dbg !9494
  %49 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9495
  %50 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %49, i32 0, i32 39, !dbg !9496
  %51 = load i32, i32* %50, align 8, !dbg !9496
  %52 = icmp slt i32 %51, 0, !dbg !9497
  br i1 %52, label %53, label %54, !dbg !9498

; <label>:53:                                     ; preds = %33
  br label %68, !dbg !9499

; <label>:54:                                     ; preds = %33
  %55 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9501
  %56 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %55, i32 0, i32 39, !dbg !9502
  %57 = load i32, i32* %56, align 8, !dbg !9502
  %58 = icmp sge i32 %57, 255, !dbg !9503
  br i1 %58, label %59, label %60, !dbg !9504

; <label>:59:                                     ; preds = %54
  br label %66, !dbg !9505

; <label>:60:                                     ; preds = %54
  %61 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9506
  %62 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %61, i32 0, i32 39, !dbg !9507
  %63 = load i32, i32* %62, align 8, !dbg !9507
  %64 = trunc i32 %63 to i8, !dbg !9508
  %65 = zext i8 %64 to i32, !dbg !9508
  br label %66, !dbg !9509

; <label>:66:                                     ; preds = %60, %59
  %67 = phi i32 [ 254, %59 ], [ %65, %60 ], !dbg !9511
  br label %68, !dbg !9513

; <label>:68:                                     ; preds = %66, %53
  %69 = phi i32 [ 0, %53 ], [ %67, %66 ], !dbg !9514
  %70 = trunc i32 %69 to i8, !dbg !9514
  %71 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9515
  %72 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %71, i32 0, i32 38, !dbg !9516
  store i8 %70, i8* %72, align 2, !dbg !9517
  br label %73, !dbg !9518

; <label>:73:                                     ; preds = %68, %27, %2
  %74 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9519
  %75 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %74, i32 0, i32 3, !dbg !9520
  %76 = load %struct._vrrp_stats*, %struct._vrrp_stats** %75, align 8, !dbg !9520
  %77 = bitcast %struct._vrrp_stats* %76 to i8*, !dbg !9521
  %78 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9522
  %79 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %78, i32 0, i32 3, !dbg !9523
  %80 = load %struct._vrrp_stats*, %struct._vrrp_stats** %79, align 8, !dbg !9523
  %81 = bitcast %struct._vrrp_stats* %80 to i8*, !dbg !9521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %81, i64 96, i32 8, i1 false), !dbg !9521
  %82 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9524
  %83 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %82, i32 0, i32 77, !dbg !9525
  %84 = bitcast %struct._seq_counter* %83 to i8*, !dbg !9526
  %85 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9527
  %86 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %85, i32 0, i32 77, !dbg !9528
  %87 = bitcast %struct._seq_counter* %86 to i8*, !dbg !9526
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %87, i64 8, i32 8, i1 false), !dbg !9526
  %88 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !9529
  %89 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %88, i32 0, i32 40, !dbg !9530
  %90 = load i8, i8* %89, align 4, !dbg !9530
  %91 = trunc i8 %90 to i1, !dbg !9530
  %92 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9531
  %93 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %92, i32 0, i32 40, !dbg !9532
  %94 = zext i1 %91 to i8, !dbg !9533
  store i8 %94, i8* %93, align 4, !dbg !9533
  %95 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9534
  %96 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %95, i32 0, i32 40, !dbg !9536
  %97 = load i8, i8* %96, align 4, !dbg !9536
  %98 = trunc i8 %97 to i1, !dbg !9536
  br i1 %98, label %99, label %190, !dbg !9537

; <label>:99:                                     ; preds = %73
  %100 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9538
  call void @vrrp_handle_accept_mode(%struct._vrrp_t* %100, i32 1, i1 zeroext false), !dbg !9540
  %101 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9541
  %102 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %101, i32 0, i32 41, !dbg !9543
  %103 = load %struct._list*, %struct._list** %102, align 8, !dbg !9543
  %104 = icmp eq %struct._list* %103, null, !dbg !9544
  br i1 %104, label %123, label %105, !dbg !9545

; <label>:105:                                    ; preds = %99
  %106 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9546
  %107 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %106, i32 0, i32 41, !dbg !9548
  %108 = load %struct._list*, %struct._list** %107, align 8, !dbg !9548
  %109 = getelementptr inbounds %struct._list, %struct._list* %108, i32 0, i32 0, !dbg !9549
  %110 = load %struct._element*, %struct._element** %109, align 8, !dbg !9549
  %111 = icmp eq %struct._element* %110, null, !dbg !9550
  br i1 %111, label %112, label %119, !dbg !9551

; <label>:112:                                    ; preds = %105
  %113 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9552
  %114 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %113, i32 0, i32 41, !dbg !9554
  %115 = load %struct._list*, %struct._list** %114, align 8, !dbg !9554
  %116 = getelementptr inbounds %struct._list, %struct._list* %115, i32 0, i32 1, !dbg !9555
  %117 = load %struct._element*, %struct._element** %116, align 8, !dbg !9555
  %118 = icmp eq %struct._element* %117, null, !dbg !9556
  br i1 %118, label %123, label %119, !dbg !9557

; <label>:119:                                    ; preds = %112, %105
  %120 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9558
  %121 = call zeroext i1 @vrrp_handle_ipaddress(%struct._vrrp_t* %120, i32 1, i32 1, i1 zeroext false), !dbg !9559
  %122 = zext i1 %121 to i8, !dbg !9560
  store i8 %122, i8* %5, align 1, !dbg !9560
  br label %123, !dbg !9561

; <label>:123:                                    ; preds = %119, %112, %99
  %124 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9562
  %125 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %124, i32 0, i32 42, !dbg !9564
  %126 = load %struct._list*, %struct._list** %125, align 8, !dbg !9564
  %127 = icmp eq %struct._list* %126, null, !dbg !9565
  br i1 %127, label %147, label %128, !dbg !9566

; <label>:128:                                    ; preds = %123
  %129 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9567
  %130 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %129, i32 0, i32 42, !dbg !9569
  %131 = load %struct._list*, %struct._list** %130, align 8, !dbg !9569
  %132 = getelementptr inbounds %struct._list, %struct._list* %131, i32 0, i32 0, !dbg !9570
  %133 = load %struct._element*, %struct._element** %132, align 8, !dbg !9570
  %134 = icmp eq %struct._element* %133, null, !dbg !9571
  br i1 %134, label %135, label %142, !dbg !9572

; <label>:135:                                    ; preds = %128
  %136 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9573
  %137 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %136, i32 0, i32 42, !dbg !9575
  %138 = load %struct._list*, %struct._list** %137, align 8, !dbg !9575
  %139 = getelementptr inbounds %struct._list, %struct._list* %138, i32 0, i32 1, !dbg !9576
  %140 = load %struct._element*, %struct._element** %139, align 8, !dbg !9576
  %141 = icmp eq %struct._element* %140, null, !dbg !9577
  br i1 %141, label %147, label %142, !dbg !9578

; <label>:142:                                    ; preds = %135, %128
  %143 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9579
  %144 = call zeroext i1 @vrrp_handle_ipaddress(%struct._vrrp_t* %143, i32 1, i32 2, i1 zeroext false), !dbg !9582
  br i1 %144, label %145, label %146, !dbg !9583

; <label>:145:                                    ; preds = %142
  store i8 1, i8* %5, align 1, !dbg !9584
  br label %146, !dbg !9585

; <label>:146:                                    ; preds = %145, %142
  br label %147, !dbg !9586

; <label>:147:                                    ; preds = %146, %135, %123
  %148 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9587
  %149 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %148, i32 0, i32 45, !dbg !9589
  %150 = load %struct._list*, %struct._list** %149, align 8, !dbg !9589
  %151 = icmp eq %struct._list* %150, null, !dbg !9590
  br i1 %151, label %168, label %152, !dbg !9591

; <label>:152:                                    ; preds = %147
  %153 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9592
  %154 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %153, i32 0, i32 45, !dbg !9594
  %155 = load %struct._list*, %struct._list** %154, align 8, !dbg !9594
  %156 = getelementptr inbounds %struct._list, %struct._list* %155, i32 0, i32 0, !dbg !9595
  %157 = load %struct._element*, %struct._element** %156, align 8, !dbg !9595
  %158 = icmp eq %struct._element* %157, null, !dbg !9596
  br i1 %158, label %159, label %166, !dbg !9597

; <label>:159:                                    ; preds = %152
  %160 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9598
  %161 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %160, i32 0, i32 45, !dbg !9600
  %162 = load %struct._list*, %struct._list** %161, align 8, !dbg !9600
  %163 = getelementptr inbounds %struct._list, %struct._list* %162, i32 0, i32 1, !dbg !9601
  %164 = load %struct._element*, %struct._element** %163, align 8, !dbg !9601
  %165 = icmp eq %struct._element* %164, null, !dbg !9602
  br i1 %165, label %168, label %166, !dbg !9603

; <label>:166:                                    ; preds = %159, %152
  %167 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9604
  call void @vrrp_handle_iproutes(%struct._vrrp_t* %167, i32 1), !dbg !9605
  br label %168, !dbg !9605

; <label>:168:                                    ; preds = %166, %159, %147
  %169 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9606
  %170 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %169, i32 0, i32 46, !dbg !9608
  %171 = load %struct._list*, %struct._list** %170, align 8, !dbg !9608
  %172 = icmp eq %struct._list* %171, null, !dbg !9609
  br i1 %172, label %189, label %173, !dbg !9610

; <label>:173:                                    ; preds = %168
  %174 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9611
  %175 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %174, i32 0, i32 46, !dbg !9613
  %176 = load %struct._list*, %struct._list** %175, align 8, !dbg !9613
  %177 = getelementptr inbounds %struct._list, %struct._list* %176, i32 0, i32 0, !dbg !9614
  %178 = load %struct._element*, %struct._element** %177, align 8, !dbg !9614
  %179 = icmp eq %struct._element* %178, null, !dbg !9615
  br i1 %179, label %180, label %187, !dbg !9616

; <label>:180:                                    ; preds = %173
  %181 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9617
  %182 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %181, i32 0, i32 46, !dbg !9619
  %183 = load %struct._list*, %struct._list** %182, align 8, !dbg !9619
  %184 = getelementptr inbounds %struct._list, %struct._list* %183, i32 0, i32 1, !dbg !9620
  %185 = load %struct._element*, %struct._element** %184, align 8, !dbg !9620
  %186 = icmp eq %struct._element* %185, null, !dbg !9621
  br i1 %186, label %189, label %187, !dbg !9622

; <label>:187:                                    ; preds = %180, %173
  %188 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !9623
  call void @vrrp_handle_iprules(%struct._vrrp_t* %188, i32 1, i1 zeroext false), !dbg !9624
  br label %189, !dbg !9624

; <label>:189:                                    ; preds = %187, %180, %168
  br label %190, !dbg !9625

; <label>:190:                                    ; preds = %189, %73
  %191 = load i8, i8* %5, align 1, !dbg !9626
  %192 = trunc i8 %191 to i1, !dbg !9626
  ret i1 %192, !dbg !9627
}

; Function Attrs: nounwind uwtable
define void @clear_diff_script() #0 !dbg !9628 {
  %1 = alloca %struct._element*, align 8
  %2 = alloca %struct._vrrp_script*, align 8
  %3 = alloca %struct._vrrp_script*, align 8
  call void @llvm.dbg.declare(metadata %struct._element** %1, metadata !9629, metadata !793), !dbg !9630
  call void @llvm.dbg.declare(metadata %struct._vrrp_script** %2, metadata !9631, metadata !793), !dbg !9632
  call void @llvm.dbg.declare(metadata %struct._vrrp_script** %3, metadata !9633, metadata !793), !dbg !9634
  %4 = load %struct._vrrp_data*, %struct._vrrp_data** @old_vrrp_data, align 8, !dbg !9635
  %5 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %4, i32 0, i32 9, !dbg !9637
  %6 = load %struct._list*, %struct._list** %5, align 8, !dbg !9637
  %7 = icmp ne %struct._list* %6, null, !dbg !9638
  br i1 %7, label %8, label %22, !dbg !9638

; <label>:8:                                      ; preds = %0
  %9 = load %struct._vrrp_data*, %struct._vrrp_data** @old_vrrp_data, align 8, !dbg !9639
  %10 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %9, i32 0, i32 9, !dbg !9641
  %11 = load %struct._list*, %struct._list** %10, align 8, !dbg !9641
  %12 = icmp ne %struct._list* %11, null, !dbg !9642
  br i1 %12, label %14, label %13, !dbg !9643

; <label>:13:                                     ; preds = %8
  br label %20, !dbg !9644

; <label>:14:                                     ; preds = %8
  %15 = load %struct._vrrp_data*, %struct._vrrp_data** @old_vrrp_data, align 8, !dbg !9646
  %16 = getelementptr inbounds %struct._vrrp_data, %struct._vrrp_data* %15, i32 0, i32 9, !dbg !9648
  %17 = load %struct._list*, %struct._list** %16, align 8, !dbg !9648
  %18 = getelementptr inbounds %struct._list, %struct._list* %17, i32 0, i32 0, !dbg !9649
  %19 = load %struct._element*, %struct._element** %18, align 8, !dbg !9649
  br label %20, !dbg !9650

; <label>:20:                                     ; preds = %14, %13
  %21 = phi %struct._element* [ null, %13 ], [ %19, %14 ], !dbg !9651
  br label %23, !dbg !9653

; <label>:22:                                     ; preds = %0
  br label %23, !dbg !9654

; <label>:23:                                     ; preds = %22, %20
  %24 = phi %struct._element* [ %21, %20 ], [ null, %22 ], !dbg !9656
  store %struct._element* %24, %struct._element** %1, align 8, !dbg !9658
  br label %25, !dbg !9659

; <label>:25:                                     ; preds = %158, %23
  %26 = load %struct._element*, %struct._element** %1, align 8, !dbg !9660
  %27 = icmp ne %struct._element* %26, null, !dbg !9663
  br i1 %27, label %28, label %33, !dbg !9664

; <label>:28:                                     ; preds = %25
  %29 = load %struct._element*, %struct._element** %1, align 8, !dbg !9665
  %30 = getelementptr inbounds %struct._element, %struct._element* %29, i32 0, i32 2, !dbg !9667
  %31 = load i8*, i8** %30, align 8, !dbg !9667
  %32 = bitcast i8* %31 to %struct._vrrp_script*, !dbg !9668
  store %struct._vrrp_script* %32, %struct._vrrp_script** %2, align 8, !dbg !9669
  br label %33

; <label>:33:                                     ; preds = %28, %25
  %34 = phi i1 [ false, %25 ], [ true, %28 ]
  br i1 %34, label %35, label %162, !dbg !9670

; <label>:35:                                     ; preds = %33
  %36 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9672
  %37 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %36, i32 0, i32 0, !dbg !9674
  %38 = load i8*, i8** %37, align 8, !dbg !9674
  %39 = call %struct._vrrp_script* @find_script_by_name(i8* %38), !dbg !9675
  store %struct._vrrp_script* %39, %struct._vrrp_script** %3, align 8, !dbg !9676
  %40 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9677
  %41 = icmp ne %struct._vrrp_script* %40, null, !dbg !9677
  br i1 %41, label %42, label %157, !dbg !9679

; <label>:42:                                     ; preds = %35
  %43 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9680
  %44 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %43, i32 0, i32 5, !dbg !9683
  %45 = load i32, i32* %44, align 4, !dbg !9683
  %46 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9684
  %47 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %46, i32 0, i32 6, !dbg !9685
  %48 = load i32, i32* %47, align 8, !dbg !9685
  %49 = icmp slt i32 %45, %48, !dbg !9686
  br i1 %49, label %50, label %84, !dbg !9687

; <label>:50:                                     ; preds = %42
  %51 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9688
  %52 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %51, i32 0, i32 5, !dbg !9691
  %53 = load i32, i32* %52, align 4, !dbg !9691
  %54 = icmp ne i32 %53, 0, !dbg !9688
  br i1 %54, label %58, label %55, !dbg !9692

; <label>:55:                                     ; preds = %50
  %56 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9693
  %57 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %56, i32 0, i32 5, !dbg !9694
  store i32 0, i32* %57, align 4, !dbg !9695
  br label %80, !dbg !9693

; <label>:58:                                     ; preds = %50
  %59 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9696
  %60 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %59, i32 0, i32 6, !dbg !9698
  %61 = load i32, i32* %60, align 8, !dbg !9698
  %62 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9699
  %63 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %62, i32 0, i32 6, !dbg !9700
  %64 = load i32, i32* %63, align 8, !dbg !9700
  %65 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9701
  %66 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %65, i32 0, i32 5, !dbg !9702
  %67 = load i32, i32* %66, align 4, !dbg !9702
  %68 = sub nsw i32 %64, %67, !dbg !9703
  %69 = sub nsw i32 %61, %68, !dbg !9704
  %70 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9705
  %71 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %70, i32 0, i32 5, !dbg !9706
  store i32 %69, i32* %71, align 4, !dbg !9707
  %72 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9708
  %73 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %72, i32 0, i32 5, !dbg !9710
  %74 = load i32, i32* %73, align 4, !dbg !9710
  %75 = icmp slt i32 %74, 0, !dbg !9711
  br i1 %75, label %76, label %79, !dbg !9712

; <label>:76:                                     ; preds = %58
  %77 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9713
  %78 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %77, i32 0, i32 5, !dbg !9714
  store i32 0, i32* %78, align 4, !dbg !9715
  br label %79, !dbg !9713

; <label>:79:                                     ; preds = %76, %58
  br label %80

; <label>:80:                                     ; preds = %79, %55
  %81 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9716
  %82 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %81, i32 0, i32 0, !dbg !9717
  %83 = load i8*, i8** %82, align 8, !dbg !9717
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.38, i32 0, i32 0), i8* %83), !dbg !9718
  br label %149, !dbg !9719

; <label>:84:                                     ; preds = %42
  %85 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9720
  %86 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %85, i32 0, i32 5, !dbg !9723
  %87 = load i32, i32* %86, align 4, !dbg !9723
  %88 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9724
  %89 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %88, i32 0, i32 6, !dbg !9725
  %90 = load i32, i32* %89, align 8, !dbg !9725
  %91 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9726
  %92 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %91, i32 0, i32 7, !dbg !9727
  %93 = load i32, i32* %92, align 4, !dbg !9727
  %94 = add nsw i32 %90, %93, !dbg !9728
  %95 = sub nsw i32 %94, 1, !dbg !9729
  %96 = icmp eq i32 %87, %95, !dbg !9730
  br i1 %96, label %97, label %108, !dbg !9731

; <label>:97:                                     ; preds = %84
  %98 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9732
  %99 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %98, i32 0, i32 6, !dbg !9733
  %100 = load i32, i32* %99, align 8, !dbg !9733
  %101 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9734
  %102 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %101, i32 0, i32 7, !dbg !9735
  %103 = load i32, i32* %102, align 4, !dbg !9735
  %104 = add nsw i32 %100, %103, !dbg !9736
  %105 = sub nsw i32 %104, 1, !dbg !9737
  %106 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9738
  %107 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %106, i32 0, i32 5, !dbg !9739
  store i32 %105, i32* %107, align 4, !dbg !9740
  br label %145, !dbg !9738

; <label>:108:                                    ; preds = %84
  %109 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9741
  %110 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %109, i32 0, i32 6, !dbg !9743
  %111 = load i32, i32* %110, align 8, !dbg !9743
  %112 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9744
  %113 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %112, i32 0, i32 5, !dbg !9745
  %114 = load i32, i32* %113, align 4, !dbg !9745
  %115 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9746
  %116 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %115, i32 0, i32 6, !dbg !9747
  %117 = load i32, i32* %116, align 8, !dbg !9747
  %118 = sub nsw i32 %114, %117, !dbg !9748
  %119 = add nsw i32 %111, %118, !dbg !9749
  %120 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9750
  %121 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %120, i32 0, i32 5, !dbg !9751
  store i32 %119, i32* %121, align 4, !dbg !9752
  %122 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9753
  %123 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %122, i32 0, i32 5, !dbg !9755
  %124 = load i32, i32* %123, align 4, !dbg !9755
  %125 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9756
  %126 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %125, i32 0, i32 6, !dbg !9757
  %127 = load i32, i32* %126, align 8, !dbg !9757
  %128 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9758
  %129 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %128, i32 0, i32 7, !dbg !9759
  %130 = load i32, i32* %129, align 4, !dbg !9759
  %131 = add nsw i32 %127, %130, !dbg !9760
  %132 = icmp sge i32 %124, %131, !dbg !9761
  br i1 %132, label %133, label %144, !dbg !9762

; <label>:133:                                    ; preds = %108
  %134 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9763
  %135 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %134, i32 0, i32 6, !dbg !9764
  %136 = load i32, i32* %135, align 8, !dbg !9764
  %137 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9765
  %138 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %137, i32 0, i32 7, !dbg !9766
  %139 = load i32, i32* %138, align 4, !dbg !9766
  %140 = add nsw i32 %136, %139, !dbg !9767
  %141 = sub nsw i32 %140, 1, !dbg !9768
  %142 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9769
  %143 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %142, i32 0, i32 5, !dbg !9770
  store i32 %141, i32* %143, align 4, !dbg !9771
  br label %144, !dbg !9769

; <label>:144:                                    ; preds = %133, %108
  br label %145

; <label>:145:                                    ; preds = %144, %97
  %146 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9772
  %147 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %146, i32 0, i32 0, !dbg !9773
  %148 = load i8*, i8** %147, align 8, !dbg !9773
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.39, i32 0, i32 0), i8* %148), !dbg !9774
  br label %149

; <label>:149:                                    ; preds = %145, %80
  %150 = load %struct._vrrp_script*, %struct._vrrp_script** %2, align 8, !dbg !9775
  %151 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %150, i32 0, i32 9, !dbg !9776
  %152 = load i32, i32* %151, align 8, !dbg !9776
  %153 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9777
  %154 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %153, i32 0, i32 9, !dbg !9778
  store i32 %152, i32* %154, align 8, !dbg !9779
  %155 = load %struct._vrrp_script*, %struct._vrrp_script** %3, align 8, !dbg !9780
  %156 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %155, i32 0, i32 11, !dbg !9781
  store i32 0, i32* %156, align 8, !dbg !9782
  br label %157, !dbg !9783

; <label>:157:                                    ; preds = %149, %35
  br label %158, !dbg !9784

; <label>:158:                                    ; preds = %157
  %159 = load %struct._element*, %struct._element** %1, align 8, !dbg !9785
  %160 = getelementptr inbounds %struct._element, %struct._element* %159, i32 0, i32 0, !dbg !9787
  %161 = load %struct._element*, %struct._element** %160, align 8, !dbg !9787
  store %struct._element* %161, %struct._element** %1, align 8, !dbg !9788
  br label %25, !dbg !9789, !llvm.loop !9790

; <label>:162:                                    ; preds = %33
  ret void, !dbg !9792
}

declare %struct._vrrp_script* @find_script_by_name(i8*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @csum_incremental_update16(i16 zeroext, i16 zeroext, i16 zeroext) #2 !dbg !9793 {
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  store i16 %0, i16* %5, align 2
  call void @llvm.dbg.declare(metadata i16* %5, metadata !9798, metadata !793), !dbg !9799
  store i16 %1, i16* %6, align 2
  call void @llvm.dbg.declare(metadata i16* %6, metadata !9800, metadata !793), !dbg !9801
  store i16 %2, i16* %7, align 2
  call void @llvm.dbg.declare(metadata i16* %7, metadata !9802, metadata !793), !dbg !9803
  %9 = load i16, i16* %6, align 2, !dbg !9804
  %10 = zext i16 %9 to i32, !dbg !9804
  %11 = load i16, i16* %7, align 2, !dbg !9806
  %12 = zext i16 %11 to i32, !dbg !9806
  %13 = icmp eq i32 %10, %12, !dbg !9807
  br i1 %13, label %14, label %16, !dbg !9808

; <label>:14:                                     ; preds = %3
  %15 = load i16, i16* %5, align 2, !dbg !9809
  store i16 %15, i16* %4, align 2, !dbg !9810
  br label %43, !dbg !9810

; <label>:16:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9811, metadata !793), !dbg !9812
  %17 = load i16, i16* %5, align 2, !dbg !9813
  %18 = zext i16 %17 to i32, !dbg !9813
  %19 = xor i32 %18, -1, !dbg !9814
  %20 = and i32 %19, 65535, !dbg !9815
  %21 = load i16, i16* %6, align 2, !dbg !9816
  %22 = zext i16 %21 to i32, !dbg !9816
  %23 = xor i32 %22, -1, !dbg !9817
  %24 = and i32 %23, 65535, !dbg !9818
  %25 = add nsw i32 %20, %24, !dbg !9819
  store i32 %25, i32* %8, align 4, !dbg !9812
  %26 = load i16, i16* %7, align 2, !dbg !9820
  %27 = zext i16 %26 to i32, !dbg !9820
  %28 = load i32, i32* %8, align 4, !dbg !9821
  %29 = add i32 %28, %27, !dbg !9821
  store i32 %29, i32* %8, align 4, !dbg !9821
  %30 = load i32, i32* %8, align 4, !dbg !9822
  %31 = and i32 %30, 65535, !dbg !9823
  %32 = load i32, i32* %8, align 4, !dbg !9824
  %33 = lshr i32 %32, 16, !dbg !9825
  %34 = add i32 %31, %33, !dbg !9826
  store i32 %34, i32* %8, align 4, !dbg !9827
  %35 = load i32, i32* %8, align 4, !dbg !9828
  %36 = lshr i32 %35, 16, !dbg !9829
  %37 = load i32, i32* %8, align 4, !dbg !9830
  %38 = add i32 %37, %36, !dbg !9830
  store i32 %38, i32* %8, align 4, !dbg !9830
  %39 = load i32, i32* %8, align 4, !dbg !9831
  %40 = xor i32 %39, -1, !dbg !9832
  %41 = and i32 %40, 65535, !dbg !9833
  %42 = trunc i32 %41 to i16, !dbg !9832
  store i16 %42, i16* %4, align 2, !dbg !9834
  br label %43, !dbg !9834

; <label>:43:                                     ; preds = %16, %14
  %44 = load i16, i16* %4, align 2, !dbg !9835
  ret i16 %44, !dbg !9835
}

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #5

declare i32 @inet_sockaddrip4(%struct.sockaddr_storage*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @csum_incremental_update32(i16 zeroext, i32, i32) #2 !dbg !9836 {
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i16 %0, i16* %5, align 2
  call void @llvm.dbg.declare(metadata i16* %5, metadata !9840, metadata !793), !dbg !9841
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9842, metadata !793), !dbg !9843
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9844, metadata !793), !dbg !9845
  %9 = load i32, i32* %6, align 4, !dbg !9846
  %10 = load i32, i32* %7, align 4, !dbg !9848
  %11 = icmp eq i32 %9, %10, !dbg !9849
  br i1 %11, label %12, label %14, !dbg !9850

; <label>:12:                                     ; preds = %3
  %13 = load i16, i16* %5, align 2, !dbg !9851
  store i16 %13, i16* %4, align 2, !dbg !9852
  br label %48, !dbg !9852

; <label>:14:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9853, metadata !793), !dbg !9854
  %15 = load i16, i16* %5, align 2, !dbg !9855
  %16 = zext i16 %15 to i32, !dbg !9855
  %17 = xor i32 %16, -1, !dbg !9856
  %18 = and i32 %17, 65535, !dbg !9857
  %19 = load i32, i32* %6, align 4, !dbg !9858
  %20 = lshr i32 %19, 16, !dbg !9859
  %21 = xor i32 %20, -1, !dbg !9860
  %22 = and i32 %21, 65535, !dbg !9861
  %23 = add i32 %18, %22, !dbg !9862
  %24 = load i32, i32* %6, align 4, !dbg !9863
  %25 = xor i32 %24, -1, !dbg !9864
  %26 = and i32 %25, 65535, !dbg !9865
  %27 = add i32 %23, %26, !dbg !9866
  store i32 %27, i32* %8, align 4, !dbg !9854
  %28 = load i32, i32* %7, align 4, !dbg !9867
  %29 = lshr i32 %28, 16, !dbg !9868
  %30 = load i32, i32* %7, align 4, !dbg !9869
  %31 = and i32 %30, 65535, !dbg !9870
  %32 = add i32 %29, %31, !dbg !9871
  %33 = load i32, i32* %8, align 4, !dbg !9872
  %34 = add i32 %33, %32, !dbg !9872
  store i32 %34, i32* %8, align 4, !dbg !9872
  %35 = load i32, i32* %8, align 4, !dbg !9873
  %36 = and i32 %35, 65535, !dbg !9874
  %37 = load i32, i32* %8, align 4, !dbg !9875
  %38 = lshr i32 %37, 16, !dbg !9876
  %39 = add i32 %36, %38, !dbg !9877
  store i32 %39, i32* %8, align 4, !dbg !9878
  %40 = load i32, i32* %8, align 4, !dbg !9879
  %41 = lshr i32 %40, 16, !dbg !9880
  %42 = load i32, i32* %8, align 4, !dbg !9881
  %43 = add i32 %42, %41, !dbg !9881
  store i32 %43, i32* %8, align 4, !dbg !9881
  %44 = load i32, i32* %8, align 4, !dbg !9882
  %45 = xor i32 %44, -1, !dbg !9883
  %46 = and i32 %45, 65535, !dbg !9884
  %47 = trunc i32 %46 to i16, !dbg !9883
  store i16 %47, i16* %4, align 2, !dbg !9885
  br label %48, !dbg !9885

; <label>:48:                                     ; preds = %14, %12
  %49 = load i16, i16* %4, align 2, !dbg !9886
  ret i16 %49, !dbg !9886
}

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

declare void @hmac_md5(i8*, i64, i8*, i64, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @vrrp_build_ancillary_data(%struct.msghdr*, i8*, %struct.sockaddr_storage*, %struct._vrrp_t*) #0 !dbg !9887 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.msghdr*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.sockaddr_storage*, align 8
  %9 = alloca %struct._vrrp_t*, align 8
  %10 = alloca %struct.cmsghdr*, align 8
  %11 = alloca %struct.in6_pktinfo*, align 8
  store %struct.msghdr* %0, %struct.msghdr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.msghdr** %6, metadata !9893, metadata !793), !dbg !9894
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9895, metadata !793), !dbg !9896
  store %struct.sockaddr_storage* %2, %struct.sockaddr_storage** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %8, metadata !9897, metadata !793), !dbg !9898
  store %struct._vrrp_t* %3, %struct._vrrp_t** %9, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %9, metadata !9899, metadata !793), !dbg !9900
  call void @llvm.dbg.declare(metadata %struct.cmsghdr** %10, metadata !9901, metadata !793), !dbg !9902
  call void @llvm.dbg.declare(metadata %struct.in6_pktinfo** %11, metadata !9903, metadata !793), !dbg !9904
  %12 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %8, align 8, !dbg !9905
  %13 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %12, i32 0, i32 0, !dbg !9907
  %14 = load i16, i16* %13, align 8, !dbg !9907
  %15 = zext i16 %14 to i32, !dbg !9905
  %16 = icmp ne i32 %15, 10, !dbg !9908
  br i1 %16, label %17, label %18, !dbg !9909

; <label>:17:                                     ; preds = %4
  store i32 -1, i32* %5, align 4, !dbg !9910
  br label %77, !dbg !9910

; <label>:18:                                     ; preds = %4
  %19 = load i8*, i8** %7, align 8, !dbg !9911
  %20 = load %struct.msghdr*, %struct.msghdr** %6, align 8, !dbg !9912
  %21 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %20, i32 0, i32 4, !dbg !9913
  store i8* %19, i8** %21, align 8, !dbg !9914
  %22 = load %struct.msghdr*, %struct.msghdr** %6, align 8, !dbg !9915
  %23 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %22, i32 0, i32 5, !dbg !9916
  store i64 40, i64* %23, align 8, !dbg !9917
  %24 = load %struct.msghdr*, %struct.msghdr** %6, align 8, !dbg !9918
  %25 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %24, i32 0, i32 5, !dbg !9919
  %26 = load i64, i64* %25, align 8, !dbg !9919
  %27 = icmp uge i64 %26, 16, !dbg !9920
  br i1 %27, label %28, label %33, !dbg !9921

; <label>:28:                                     ; preds = %18
  %29 = load %struct.msghdr*, %struct.msghdr** %6, align 8, !dbg !9922
  %30 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %29, i32 0, i32 4, !dbg !9924
  %31 = load i8*, i8** %30, align 8, !dbg !9924
  %32 = bitcast i8* %31 to %struct.cmsghdr*, !dbg !9925
  br label %34, !dbg !9926

; <label>:33:                                     ; preds = %18
  br label %34, !dbg !9927

; <label>:34:                                     ; preds = %33, %28
  %35 = phi %struct.cmsghdr* [ %32, %28 ], [ null, %33 ], !dbg !9929
  store %struct.cmsghdr* %35, %struct.cmsghdr** %10, align 8, !dbg !9931
  %36 = load %struct.cmsghdr*, %struct.cmsghdr** %10, align 8, !dbg !9932
  %37 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %36, i32 0, i32 1, !dbg !9933
  store i32 41, i32* %37, align 8, !dbg !9934
  %38 = load %struct.cmsghdr*, %struct.cmsghdr** %10, align 8, !dbg !9935
  %39 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %38, i32 0, i32 2, !dbg !9936
  store i32 50, i32* %39, align 4, !dbg !9937
  %40 = load %struct.cmsghdr*, %struct.cmsghdr** %10, align 8, !dbg !9938
  %41 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %40, i32 0, i32 0, !dbg !9939
  store i64 36, i64* %41, align 8, !dbg !9940
  %42 = load %struct.cmsghdr*, %struct.cmsghdr** %10, align 8, !dbg !9941
  %43 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %42, i32 0, i32 3, !dbg !9942
  %44 = getelementptr inbounds [0 x i8], [0 x i8]* %43, i32 0, i32 0, !dbg !9941
  %45 = bitcast i8* %44 to %struct.in6_pktinfo*, !dbg !9943
  store %struct.in6_pktinfo* %45, %struct.in6_pktinfo** %11, align 8, !dbg !9944
  %46 = load %struct.in6_pktinfo*, %struct.in6_pktinfo** %11, align 8, !dbg !9945
  %47 = bitcast %struct.in6_pktinfo* %46 to i8*, !dbg !9946
  call void @llvm.memset.p0i8.i64(i8* %47, i8 0, i64 20, i32 4, i1 false), !dbg !9946
  %48 = load %struct.in6_pktinfo*, %struct.in6_pktinfo** %11, align 8, !dbg !9947
  %49 = getelementptr inbounds %struct.in6_pktinfo, %struct.in6_pktinfo* %48, i32 0, i32 0, !dbg !9948
  %50 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %8, align 8, !dbg !9949
  %51 = bitcast %struct.sockaddr_storage* %50 to %struct.sockaddr_in6*, !dbg !9950
  %52 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %51, i32 0, i32 3, !dbg !9950
  %53 = bitcast %struct.in6_addr* %49 to i8*, !dbg !9950
  %54 = bitcast %struct.in6_addr* %52 to i8*, !dbg !9950
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 4, i1 false), !dbg !9950
  %55 = load %struct._vrrp_t*, %struct._vrrp_t** %9, align 8, !dbg !9951
  %56 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %55, i32 0, i32 9, !dbg !9953
  %57 = call zeroext i1 @__test_bit(i32 2, i64* %56), !dbg !9954
  br i1 %57, label %58, label %68, !dbg !9955

; <label>:58:                                     ; preds = %34
  %59 = load %struct._vrrp_t*, %struct._vrrp_t** %9, align 8, !dbg !9956
  %60 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %59, i32 0, i32 4, !dbg !9957
  %61 = load %struct._interface*, %struct._interface** %60, align 8, !dbg !9957
  %62 = getelementptr inbounds %struct._interface, %struct._interface* %61, i32 0, i32 14, !dbg !9958
  %63 = load %struct._interface*, %struct._interface** %62, align 8, !dbg !9958
  %64 = getelementptr inbounds %struct._interface, %struct._interface* %63, i32 0, i32 1, !dbg !9959
  %65 = load i32, i32* %64, align 8, !dbg !9959
  %66 = load %struct.in6_pktinfo*, %struct.in6_pktinfo** %11, align 8, !dbg !9960
  %67 = getelementptr inbounds %struct.in6_pktinfo, %struct.in6_pktinfo* %66, i32 0, i32 1, !dbg !9961
  store i32 %65, i32* %67, align 4, !dbg !9962
  br label %76, !dbg !9960

; <label>:68:                                     ; preds = %34
  %69 = load %struct._vrrp_t*, %struct._vrrp_t** %9, align 8, !dbg !9963
  %70 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %69, i32 0, i32 4, !dbg !9964
  %71 = load %struct._interface*, %struct._interface** %70, align 8, !dbg !9964
  %72 = getelementptr inbounds %struct._interface, %struct._interface* %71, i32 0, i32 1, !dbg !9965
  %73 = load i32, i32* %72, align 8, !dbg !9965
  %74 = load %struct.in6_pktinfo*, %struct.in6_pktinfo** %11, align 8, !dbg !9966
  %75 = getelementptr inbounds %struct.in6_pktinfo, %struct.in6_pktinfo* %74, i32 0, i32 1, !dbg !9967
  store i32 %73, i32* %75, align 4, !dbg !9968
  br label %76

; <label>:76:                                     ; preds = %68, %58
  store i32 0, i32* %5, align 4, !dbg !9969
  br label %77, !dbg !9969

; <label>:77:                                     ; preds = %76, %17
  %78 = load i32, i32* %5, align 4, !dbg !9970
  ret i32 %78, !dbg !9970
}

declare i64 @sendmsg(i32, %struct.msghdr*, i32) #3

declare void @send_gratuitous_arp(%struct._vrrp_t*, %struct._ip_address*) #3

declare void @ndisc_send_unsolicited_na(%struct._vrrp_t*, %struct._ip_address*) #3

declare void @netlink_rulelist(%struct._list*, i32, i1 zeroext) #3

declare void @netlink_rtlist(%struct._list*, i32) #3

declare zeroext i1 @netlink_iplist(%struct._list*, i32, i1 zeroext) #3

declare %struct.ipt_handle* @iptables_open() #3

declare void @handle_iptable_rule_to_iplist(%struct.ipt_handle*, %struct._list*, i32, i1 zeroext) #3

declare i32 @iptables_close(%struct.ipt_handle*) #3

; Function Attrs: nounwind uwtable
define internal i32 @vrrp_in_chk(%struct._vrrp_t*, i8*, i64, i1 zeroext) #0 !dbg !9971 {
  %5 = alloca i32, align 4
  %6 = alloca %struct._vrrp_t*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.iphdr*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct._ipsec_ah*, align 8
  %15 = alloca %struct._vrrphdr*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca %struct._ip_address*, align 8
  %18 = alloca %struct._element*, align 8
  %19 = alloca [46 x i8], align 16
  %20 = alloca %struct.ipv4_phdr_t, align 4
  %21 = alloca i32, align 4
  %22 = alloca %struct.sockaddr_storage*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8*, align 8
  %27 = alloca %struct.in6_addr*, align 8
  %28 = alloca %struct.in6_addr*, align 8
  %29 = alloca i32, align 4
  store %struct._vrrp_t* %0, %struct._vrrp_t** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %6, metadata !9972, metadata !793), !dbg !9973
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9974, metadata !793), !dbg !9975
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !9976, metadata !793), !dbg !9977
  %30 = zext i1 %3 to i8
  store i8 %30, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !9978, metadata !793), !dbg !9979
  call void @llvm.dbg.declare(metadata %struct.iphdr** %10, metadata !9980, metadata !793), !dbg !9981
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9982, metadata !793), !dbg !9983
  call void @llvm.dbg.declare(metadata i64* %12, metadata !9984, metadata !793), !dbg !9985
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9986, metadata !793), !dbg !9987
  store i32 0, i32* %13, align 4, !dbg !9987
  call void @llvm.dbg.declare(metadata %struct._ipsec_ah** %14, metadata !9988, metadata !793), !dbg !9989
  call void @llvm.dbg.declare(metadata %struct._vrrphdr** %15, metadata !9990, metadata !793), !dbg !9991
  call void @llvm.dbg.declare(metadata i8** %16, metadata !9992, metadata !793), !dbg !9993
  call void @llvm.dbg.declare(metadata %struct._ip_address** %17, metadata !9994, metadata !793), !dbg !9995
  call void @llvm.dbg.declare(metadata %struct._element** %18, metadata !9996, metadata !793), !dbg !9997
  call void @llvm.dbg.declare(metadata [46 x i8]* %19, metadata !9998, metadata !793), !dbg !9999
  call void @llvm.dbg.declare(metadata %struct.ipv4_phdr_t* %20, metadata !10000, metadata !793), !dbg !10009
  call void @llvm.dbg.declare(metadata i32* %21, metadata !10010, metadata !793), !dbg !10011
  store i32 0, i32* %21, align 4, !dbg !10011
  store %struct.iphdr* null, %struct.iphdr** %10, align 8, !dbg !10012
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %22, metadata !10013, metadata !793), !dbg !10014
  call void @llvm.dbg.declare(metadata i64* %23, metadata !10015, metadata !793), !dbg !10016
  call void @llvm.dbg.declare(metadata i64* %24, metadata !10017, metadata !793), !dbg !10018
  call void @llvm.dbg.declare(metadata i8* %25, metadata !10019, metadata !793), !dbg !10020
  %31 = load i64, i64* %8, align 8, !dbg !10021
  %32 = icmp slt i64 %31, 0, !dbg !10023
  br i1 %32, label %33, label %35, !dbg !10024

; <label>:33:                                     ; preds = %4
  %34 = load i64, i64* %8, align 8, !dbg !10025
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51, i32 0, i32 0), i64 %34), !dbg !10027
  store i32 1, i32* %5, align 4, !dbg !10028
  br label %1164, !dbg !10028

; <label>:35:                                     ; preds = %4
  %36 = load i64, i64* %8, align 8, !dbg !10029
  store i64 %36, i64* %23, align 8, !dbg !10030
  %37 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10031
  %38 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %37, i32 0, i32 0, !dbg !10033
  %39 = load i16, i16* %38, align 8, !dbg !10033
  %40 = zext i16 %39 to i32, !dbg !10031
  %41 = icmp eq i32 %40, 2, !dbg !10034
  br i1 %41, label %42, label %146, !dbg !10035

; <label>:42:                                     ; preds = %35
  %43 = call i64 @vrrp_iphdr_len(), !dbg !10036
  %44 = add i64 %43, 8, !dbg !10038
  store i64 %44, i64* %24, align 8, !dbg !10039
  %45 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10040
  %46 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %45, i32 0, i32 75, !dbg !10042
  %47 = load i8, i8* %46, align 4, !dbg !10042
  %48 = zext i8 %47 to i32, !dbg !10040
  %49 = icmp eq i32 %48, 2, !dbg !10043
  br i1 %49, label %50, label %54, !dbg !10044

; <label>:50:                                     ; preds = %42
  %51 = call i64 @vrrp_ipsecah_len(), !dbg !10045
  %52 = load i64, i64* %24, align 8, !dbg !10046
  %53 = add i64 %52, %51, !dbg !10046
  store i64 %53, i64* %24, align 8, !dbg !10046
  br label %54, !dbg !10047

; <label>:54:                                     ; preds = %50, %42
  %55 = load i64, i64* %23, align 8, !dbg !10048
  %56 = load i64, i64* %24, align 8, !dbg !10050
  %57 = icmp ult i64 %55, %56, !dbg !10051
  br i1 %57, label %58, label %70, !dbg !10052

; <label>:58:                                     ; preds = %54
  %59 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10053
  %60 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %59, i32 0, i32 1, !dbg !10055
  %61 = load i8*, i8** %60, align 8, !dbg !10055
  %62 = load i64, i64* %23, align 8, !dbg !10056
  %63 = load i64, i64* %24, align 8, !dbg !10057
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.52, i32 0, i32 0), i8* %61, i64 %62, i64 %63), !dbg !10058
  %64 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10059
  %65 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %64, i32 0, i32 3, !dbg !10060
  %66 = load %struct._vrrp_stats*, %struct._vrrp_stats** %65, align 8, !dbg !10060
  %67 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %66, i32 0, i32 4, !dbg !10061
  %68 = load i64, i64* %67, align 8, !dbg !10062
  %69 = add i64 %68, 1, !dbg !10062
  store i64 %69, i64* %67, align 8, !dbg !10062
  store i32 1, i32* %5, align 4, !dbg !10063
  br label %1164, !dbg !10063

; <label>:70:                                     ; preds = %54
  %71 = load i8*, i8** %7, align 8, !dbg !10064
  %72 = bitcast i8* %71 to %struct.iphdr*, !dbg !10065
  store %struct.iphdr* %72, %struct.iphdr** %10, align 8, !dbg !10066
  %73 = load %struct.iphdr*, %struct.iphdr** %10, align 8, !dbg !10067
  %74 = bitcast %struct.iphdr* %73 to i8*, !dbg !10068
  %75 = load i8, i8* %74, align 4, !dbg !10068
  %76 = and i8 %75, 15, !dbg !10068
  %77 = zext i8 %76 to i32, !dbg !10068
  %78 = shl i32 %77, 2, !dbg !10069
  store i32 %78, i32* %11, align 4, !dbg !10070
  %79 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10071
  %80 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %79, i32 0, i32 75, !dbg !10073
  %81 = load i8, i8* %80, align 4, !dbg !10073
  %82 = zext i8 %81 to i32, !dbg !10071
  %83 = icmp eq i32 %82, 2, !dbg !10074
  br i1 %83, label %84, label %95, !dbg !10075

; <label>:84:                                     ; preds = %70
  %85 = load i8*, i8** %7, align 8, !dbg !10076
  %86 = load i32, i32* %11, align 4, !dbg !10078
  %87 = sext i32 %86 to i64, !dbg !10079
  %88 = getelementptr inbounds i8, i8* %85, i64 %87, !dbg !10079
  %89 = bitcast i8* %88 to %struct._ipsec_ah*, !dbg !10080
  store %struct._ipsec_ah* %89, %struct._ipsec_ah** %14, align 8, !dbg !10081
  %90 = load %struct._ipsec_ah*, %struct._ipsec_ah** %14, align 8, !dbg !10082
  %91 = bitcast %struct._ipsec_ah* %90 to i8*, !dbg !10083
  %92 = call i64 @vrrp_ipsecah_len(), !dbg !10084
  %93 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !10085
  %94 = bitcast i8* %93 to %struct._vrrphdr*, !dbg !10086
  store %struct._vrrphdr* %94, %struct._vrrphdr** %15, align 8, !dbg !10087
  br label %101, !dbg !10088

; <label>:95:                                     ; preds = %70
  %96 = load i8*, i8** %7, align 8, !dbg !10089
  %97 = load i32, i32* %11, align 4, !dbg !10090
  %98 = sext i32 %97 to i64, !dbg !10091
  %99 = getelementptr inbounds i8, i8* %96, i64 %98, !dbg !10091
  %100 = bitcast i8* %99 to %struct._vrrphdr*, !dbg !10092
  store %struct._vrrphdr* %100, %struct._vrrphdr** %15, align 8, !dbg !10093
  br label %101

; <label>:101:                                    ; preds = %95, %84
  %102 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10094
  %103 = call i64 @vrrp_pkt_len(%struct._vrrp_t* %102), !dbg !10095
  %104 = sub i64 %103, 8, !dbg !10096
  %105 = load i64, i64* %24, align 8, !dbg !10097
  %106 = add i64 %105, %104, !dbg !10097
  store i64 %106, i64* %24, align 8, !dbg !10097
  %107 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10098
  %108 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %107, i32 0, i32 20, !dbg !10100
  %109 = load %struct._list*, %struct._list** %108, align 8, !dbg !10100
  %110 = icmp eq %struct._list* %109, null, !dbg !10101
  br i1 %110, label %125, label %111, !dbg !10102

; <label>:111:                                    ; preds = %101
  %112 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10103
  %113 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %112, i32 0, i32 20, !dbg !10105
  %114 = load %struct._list*, %struct._list** %113, align 8, !dbg !10105
  %115 = getelementptr inbounds %struct._list, %struct._list* %114, i32 0, i32 0, !dbg !10106
  %116 = load %struct._element*, %struct._element** %115, align 8, !dbg !10106
  %117 = icmp eq %struct._element* %116, null, !dbg !10107
  br i1 %117, label %118, label %145, !dbg !10108

; <label>:118:                                    ; preds = %111
  %119 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10109
  %120 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %119, i32 0, i32 20, !dbg !10111
  %121 = load %struct._list*, %struct._list** %120, align 8, !dbg !10111
  %122 = getelementptr inbounds %struct._list, %struct._list* %121, i32 0, i32 1, !dbg !10112
  %123 = load %struct._element*, %struct._element** %122, align 8, !dbg !10112
  %124 = icmp eq %struct._element* %123, null, !dbg !10113
  br i1 %124, label %125, label %145, !dbg !10114

; <label>:125:                                    ; preds = %118, %101
  %126 = load %struct.iphdr*, %struct.iphdr** %10, align 8, !dbg !10115
  %127 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %126, i32 0, i32 5, !dbg !10117
  %128 = load i8, i8* %127, align 4, !dbg !10117
  %129 = zext i8 %128 to i32, !dbg !10115
  %130 = icmp ne i32 %129, 255, !dbg !10118
  br i1 %130, label %131, label %145, !dbg !10119

; <label>:131:                                    ; preds = %125
  %132 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10120
  %133 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %132, i32 0, i32 1, !dbg !10122
  %134 = load i8*, i8** %133, align 8, !dbg !10122
  %135 = load %struct.iphdr*, %struct.iphdr** %10, align 8, !dbg !10123
  %136 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %135, i32 0, i32 5, !dbg !10124
  %137 = load i8, i8* %136, align 4, !dbg !10124
  %138 = zext i8 %137 to i32, !dbg !10123
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53, i32 0, i32 0), i8* %134, i32 %138, i32 255), !dbg !10125
  %139 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10126
  %140 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %139, i32 0, i32 3, !dbg !10127
  %141 = load %struct._vrrp_stats*, %struct._vrrp_stats** %140, align 8, !dbg !10127
  %142 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %141, i32 0, i32 6, !dbg !10128
  %143 = load i64, i64* %142, align 8, !dbg !10129
  %144 = add i64 %143, 1, !dbg !10129
  store i64 %144, i64* %142, align 8, !dbg !10129
  store i32 1, i32* %5, align 4, !dbg !10130
  br label %1164, !dbg !10130

; <label>:145:                                    ; preds = %125, %118, %111
  br label %208, !dbg !10131

; <label>:146:                                    ; preds = %35
  %147 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10132
  %148 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %147, i32 0, i32 0, !dbg !10135
  %149 = load i16, i16* %148, align 8, !dbg !10135
  %150 = zext i16 %149 to i32, !dbg !10132
  %151 = icmp eq i32 %150, 10, !dbg !10136
  br i1 %151, label %152, label %199, !dbg !10132

; <label>:152:                                    ; preds = %146
  %153 = load i64, i64* %23, align 8, !dbg !10137
  %154 = icmp ult i64 %153, 8, !dbg !10140
  br i1 %154, label %155, label %166, !dbg !10141

; <label>:155:                                    ; preds = %152
  %156 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10142
  %157 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %156, i32 0, i32 1, !dbg !10144
  %158 = load i8*, i8** %157, align 8, !dbg !10144
  %159 = load i64, i64* %23, align 8, !dbg !10145
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.54, i32 0, i32 0), i8* %158, i64 %159, i64 8), !dbg !10146
  %160 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10147
  %161 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %160, i32 0, i32 3, !dbg !10148
  %162 = load %struct._vrrp_stats*, %struct._vrrp_stats** %161, align 8, !dbg !10148
  %163 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %162, i32 0, i32 4, !dbg !10149
  %164 = load i64, i64* %163, align 8, !dbg !10150
  %165 = add i64 %164, 1, !dbg !10150
  store i64 %165, i64* %163, align 8, !dbg !10150
  store i32 1, i32* %5, align 4, !dbg !10151
  br label %1164, !dbg !10151

; <label>:166:                                    ; preds = %152
  %167 = load i8*, i8** %7, align 8, !dbg !10152
  %168 = bitcast i8* %167 to %struct._vrrphdr*, !dbg !10153
  store %struct._vrrphdr* %168, %struct._vrrphdr** %15, align 8, !dbg !10154
  %169 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10155
  %170 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %169, i32 0, i32 41, !dbg !10156
  %171 = load %struct._list*, %struct._list** %170, align 8, !dbg !10156
  %172 = icmp eq %struct._list* %171, null, !dbg !10157
  br i1 %172, label %187, label %173, !dbg !10158

; <label>:173:                                    ; preds = %166
  %174 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10159
  %175 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %174, i32 0, i32 41, !dbg !10161
  %176 = load %struct._list*, %struct._list** %175, align 8, !dbg !10161
  %177 = getelementptr inbounds %struct._list, %struct._list* %176, i32 0, i32 0, !dbg !10162
  %178 = load %struct._element*, %struct._element** %177, align 8, !dbg !10162
  %179 = icmp eq %struct._element* %178, null, !dbg !10163
  br i1 %179, label %180, label %188, !dbg !10164

; <label>:180:                                    ; preds = %173
  %181 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10165
  %182 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %181, i32 0, i32 41, !dbg !10167
  %183 = load %struct._list*, %struct._list** %182, align 8, !dbg !10167
  %184 = getelementptr inbounds %struct._list, %struct._list* %183, i32 0, i32 1, !dbg !10168
  %185 = load %struct._element*, %struct._element** %184, align 8, !dbg !10168
  %186 = icmp eq %struct._element* %185, null, !dbg !10169
  br i1 %186, label %187, label %188, !dbg !10170

; <label>:187:                                    ; preds = %180, %166
  br label %194, !dbg !10171

; <label>:188:                                    ; preds = %180, %173
  %189 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10173
  %190 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %189, i32 0, i32 41, !dbg !10175
  %191 = load %struct._list*, %struct._list** %190, align 8, !dbg !10175
  %192 = getelementptr inbounds %struct._list, %struct._list* %191, i32 0, i32 2, !dbg !10176
  %193 = load i32, i32* %192, align 8, !dbg !10176
  br label %194, !dbg !10177

; <label>:194:                                    ; preds = %188, %187
  %195 = phi i32 [ 0, %187 ], [ %193, %188 ], !dbg !10178
  %196 = zext i32 %195 to i64, !dbg !10180
  %197 = mul i64 %196, 16, !dbg !10181
  %198 = add i64 8, %197, !dbg !10182
  store i64 %198, i64* %24, align 8, !dbg !10183
  br label %207, !dbg !10184

; <label>:199:                                    ; preds = %146
  %200 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10185
  %201 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %200, i32 0, i32 1, !dbg !10187
  %202 = load i8*, i8** %201, align 8, !dbg !10187
  %203 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10188
  %204 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %203, i32 0, i32 0, !dbg !10189
  %205 = load i16, i16* %204, align 8, !dbg !10189
  %206 = zext i16 %205 to i32, !dbg !10188
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.55, i32 0, i32 0), i8* %202, i32 %206), !dbg !10190
  store i32 1, i32* %5, align 4, !dbg !10191
  br label %1164, !dbg !10191

; <label>:207:                                    ; preds = %194
  br label %208

; <label>:208:                                    ; preds = %207, %145
  %209 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10192
  %210 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %209, i32 0, i32 60, !dbg !10194
  %211 = load i32, i32* %210, align 4, !dbg !10194
  %212 = icmp eq i32 %211, 2, !dbg !10195
  br i1 %212, label %213, label %382, !dbg !10196

; <label>:213:                                    ; preds = %208
  %214 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10197
  %215 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %214, i32 0, i32 4, !dbg !10200
  %216 = bitcast %union.anon.2* %215 to %struct.anon.3*, !dbg !10200
  %217 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %216, i32 0, i32 0, !dbg !10201
  %218 = load i8, i8* %217, align 2, !dbg !10201
  %219 = zext i8 %218 to i32, !dbg !10197
  %220 = icmp ne i32 %219, 2, !dbg !10202
  br i1 %220, label %221, label %253, !dbg !10203

; <label>:221:                                    ; preds = %213
  %222 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10204
  %223 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %222, i32 0, i32 4, !dbg !10205
  %224 = bitcast %union.anon.2* %223 to %struct.anon.3*, !dbg !10205
  %225 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %224, i32 0, i32 0, !dbg !10206
  %226 = load i8, i8* %225, align 2, !dbg !10206
  %227 = zext i8 %226 to i32, !dbg !10204
  %228 = icmp ne i32 %227, 1, !dbg !10207
  br i1 %228, label %229, label %253, !dbg !10208

; <label>:229:                                    ; preds = %221
  %230 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10209
  %231 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %230, i32 0, i32 4, !dbg !10210
  %232 = bitcast %union.anon.2* %231 to %struct.anon.3*, !dbg !10210
  %233 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %232, i32 0, i32 0, !dbg !10211
  %234 = load i8, i8* %233, align 2, !dbg !10211
  %235 = zext i8 %234 to i32, !dbg !10209
  %236 = icmp ne i32 %235, 0, !dbg !10212
  br i1 %236, label %237, label %253, !dbg !10213

; <label>:237:                                    ; preds = %229
  %238 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10215
  %239 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %238, i32 0, i32 1, !dbg !10217
  %240 = load i8*, i8** %239, align 8, !dbg !10217
  %241 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10218
  %242 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %241, i32 0, i32 4, !dbg !10219
  %243 = bitcast %union.anon.2* %242 to %struct.anon.3*, !dbg !10219
  %244 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %243, i32 0, i32 0, !dbg !10220
  %245 = load i8, i8* %244, align 2, !dbg !10220
  %246 = zext i8 %245 to i32, !dbg !10218
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i32 0, i32 0), i8* %240, i32 %246), !dbg !10221
  %247 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10222
  %248 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %247, i32 0, i32 3, !dbg !10223
  %249 = load %struct._vrrp_stats*, %struct._vrrp_stats** %248, align 8, !dbg !10223
  %250 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %249, i32 0, i32 9, !dbg !10224
  %251 = load i32, i32* %250, align 8, !dbg !10225
  %252 = add i32 %251, 1, !dbg !10225
  store i32 %252, i32* %250, align 8, !dbg !10225
  store i32 1, i32* %5, align 4, !dbg !10226
  br label %1164, !dbg !10226

; <label>:253:                                    ; preds = %229, %221, %213
  %254 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10227
  %255 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %254, i32 0, i32 75, !dbg !10229
  %256 = load i8, i8* %255, align 4, !dbg !10229
  %257 = zext i8 %256 to i32, !dbg !10227
  %258 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10230
  %259 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %258, i32 0, i32 4, !dbg !10231
  %260 = bitcast %union.anon.2* %259 to %struct.anon.3*, !dbg !10231
  %261 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %260, i32 0, i32 0, !dbg !10232
  %262 = load i8, i8* %261, align 2, !dbg !10232
  %263 = zext i8 %262 to i32, !dbg !10230
  %264 = icmp ne i32 %257, %263, !dbg !10233
  br i1 %264, label %265, label %285, !dbg !10234

; <label>:265:                                    ; preds = %253
  %266 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10235
  %267 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %266, i32 0, i32 1, !dbg !10237
  %268 = load i8*, i8** %267, align 8, !dbg !10237
  %269 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10238
  %270 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %269, i32 0, i32 4, !dbg !10239
  %271 = bitcast %union.anon.2* %270 to %struct.anon.3*, !dbg !10239
  %272 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %271, i32 0, i32 0, !dbg !10240
  %273 = load i8, i8* %272, align 2, !dbg !10240
  %274 = zext i8 %273 to i32, !dbg !10238
  %275 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10241
  %276 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %275, i32 0, i32 75, !dbg !10242
  %277 = load i8, i8* %276, align 4, !dbg !10242
  %278 = zext i8 %277 to i32, !dbg !10241
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.57, i32 0, i32 0), i8* %268, i32 %274, i32 %278), !dbg !10243
  %279 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10244
  %280 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %279, i32 0, i32 3, !dbg !10245
  %281 = load %struct._vrrp_stats*, %struct._vrrp_stats** %280, align 8, !dbg !10245
  %282 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %281, i32 0, i32 10, !dbg !10246
  %283 = load i32, i32* %282, align 4, !dbg !10247
  %284 = add i32 %283, 1, !dbg !10247
  store i32 %284, i32* %282, align 4, !dbg !10247
  store i32 1, i32* %5, align 4, !dbg !10248
  br label %1164, !dbg !10248

; <label>:285:                                    ; preds = %253
  %286 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10249
  %287 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %286, i32 0, i32 75, !dbg !10251
  %288 = load i8, i8* %287, align 4, !dbg !10251
  %289 = zext i8 %288 to i32, !dbg !10249
  %290 = icmp eq i32 %289, 1, !dbg !10252
  br i1 %290, label %291, label %319, !dbg !10253

; <label>:291:                                    ; preds = %285
  call void @llvm.dbg.declare(metadata i8** %26, metadata !10254, metadata !793), !dbg !10256
  %292 = load %struct.iphdr*, %struct.iphdr** %10, align 8, !dbg !10257
  %293 = bitcast %struct.iphdr* %292 to i8*, !dbg !10258
  %294 = load %struct.iphdr*, %struct.iphdr** %10, align 8, !dbg !10259
  %295 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %294, i32 0, i32 2, !dbg !10260
  %296 = load i16, i16* %295, align 2, !dbg !10260
  %297 = call zeroext i16 @ntohs(i16 zeroext %296) #1, !dbg !10261
  %298 = zext i16 %297 to i32, !dbg !10261
  %299 = sext i32 %298 to i64, !dbg !10262
  %300 = getelementptr inbounds i8, i8* %293, i64 %299, !dbg !10262
  %301 = getelementptr inbounds i8, i8* %300, i64 -8, !dbg !10263
  store i8* %301, i8** %26, align 8, !dbg !10256
  %302 = load i8*, i8** %26, align 8, !dbg !10264
  %303 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10266
  %304 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %303, i32 0, i32 76, !dbg !10267
  %305 = getelementptr inbounds [8 x i8], [8 x i8]* %304, i32 0, i32 0, !dbg !10266
  %306 = call i32 @memcmp(i8* %302, i8* %305, i64 8) #9, !dbg !10268
  %307 = icmp ne i32 %306, 0, !dbg !10269
  br i1 %307, label %308, label %318, !dbg !10270

; <label>:308:                                    ; preds = %291
  %309 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10271
  %310 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %309, i32 0, i32 1, !dbg !10273
  %311 = load i8*, i8** %310, align 8, !dbg !10273
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.58, i32 0, i32 0), i8* %311), !dbg !10274
  %312 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10275
  %313 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %312, i32 0, i32 3, !dbg !10276
  %314 = load %struct._vrrp_stats*, %struct._vrrp_stats** %313, align 8, !dbg !10276
  %315 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %314, i32 0, i32 11, !dbg !10277
  %316 = load i32, i32* %315, align 8, !dbg !10278
  %317 = add i32 %316, 1, !dbg !10278
  store i32 %317, i32* %315, align 8, !dbg !10278
  store i32 1, i32* %5, align 4, !dbg !10279
  br label %1164, !dbg !10279

; <label>:318:                                    ; preds = %291
  br label %359, !dbg !10280

; <label>:319:                                    ; preds = %285
  %320 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10281
  %321 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %320, i32 0, i32 4, !dbg !10283
  %322 = bitcast %union.anon.2* %321 to %struct.anon.3*, !dbg !10283
  %323 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %322, i32 0, i32 0, !dbg !10284
  %324 = load i8, i8* %323, align 2, !dbg !10284
  %325 = zext i8 %324 to i32, !dbg !10281
  %326 = icmp eq i32 %325, 2, !dbg !10285
  br i1 %326, label %327, label %358, !dbg !10286

; <label>:327:                                    ; preds = %319
  %328 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10287
  %329 = load i8*, i8** %7, align 8, !dbg !10290
  %330 = call zeroext i1 @vrrp_in_chk_ipsecah(%struct._vrrp_t* %328, i8* %329), !dbg !10291
  br i1 %330, label %331, label %338, !dbg !10292

; <label>:331:                                    ; preds = %327
  %332 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10293
  %333 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %332, i32 0, i32 3, !dbg !10295
  %334 = load %struct._vrrp_stats*, %struct._vrrp_stats** %333, align 8, !dbg !10295
  %335 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %334, i32 0, i32 11, !dbg !10296
  %336 = load i32, i32* %335, align 8, !dbg !10297
  %337 = add i32 %336, 1, !dbg !10297
  store i32 %337, i32* %335, align 8, !dbg !10297
  store i32 1, i32* %5, align 4, !dbg !10298
  br label %1164, !dbg !10298

; <label>:338:                                    ; preds = %327
  %339 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10299
  %340 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %339, i32 0, i32 55, !dbg !10301
  %341 = load i32, i32* %340, align 8, !dbg !10301
  %342 = icmp eq i32 %341, 1, !dbg !10302
  br i1 %342, label %343, label %357, !dbg !10303

; <label>:343:                                    ; preds = %338
  %344 = load %struct._ipsec_ah*, %struct._ipsec_ah** %14, align 8, !dbg !10304
  %345 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %344, i32 0, i32 4, !dbg !10305
  %346 = load i32, i32* %345, align 4, !dbg !10305
  %347 = call i32 @ntohl(i32 %346) #1, !dbg !10306
  %348 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10307
  %349 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %348, i32 0, i32 77, !dbg !10308
  %350 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %349, i32 0, i32 1, !dbg !10309
  %351 = load i32, i32* %350, align 4, !dbg !10309
  %352 = icmp uge i32 %347, %351, !dbg !10310
  br i1 %352, label %353, label %357, !dbg !10311

; <label>:353:                                    ; preds = %343
  %354 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10313
  %355 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %354, i32 0, i32 77, !dbg !10314
  %356 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %355, i32 0, i32 0, !dbg !10315
  store i8 0, i8* %356, align 8, !dbg !10316
  br label %357, !dbg !10313

; <label>:357:                                    ; preds = %353, %343, %338
  br label %358, !dbg !10317

; <label>:358:                                    ; preds = %357, %319
  br label %359

; <label>:359:                                    ; preds = %358, %318
  %360 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10318
  %361 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %360, i32 0, i32 47, !dbg !10320
  %362 = load i32, i32* %361, align 8, !dbg !10320
  %363 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10321
  %364 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %363, i32 0, i32 4, !dbg !10322
  %365 = bitcast %union.anon.2* %364 to %struct.anon.3*, !dbg !10322
  %366 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %365, i32 0, i32 1, !dbg !10323
  %367 = load i8, i8* %366, align 1, !dbg !10323
  %368 = zext i8 %367 to i32, !dbg !10321
  %369 = mul i32 %368, 1000000, !dbg !10324
  %370 = icmp ne i32 %362, %369, !dbg !10325
  br i1 %370, label %371, label %381, !dbg !10326

; <label>:371:                                    ; preds = %359
  %372 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10327
  %373 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %372, i32 0, i32 1, !dbg !10329
  %374 = load i8*, i8** %373, align 8, !dbg !10329
  %375 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10330
  %376 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %375, i32 0, i32 47, !dbg !10331
  %377 = load i32, i32* %376, align 8, !dbg !10331
  %378 = udiv i32 %377, 1000000, !dbg !10332
  %379 = load i32, i32* %13, align 4, !dbg !10333
  %380 = udiv i32 %379, 1000000, !dbg !10334
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.59, i32 0, i32 0), i8* %374, i32 %378, i32 %380), !dbg !10335
  store i32 2, i32* %5, align 4, !dbg !10336
  br label %1164, !dbg !10336

; <label>:381:                                    ; preds = %359
  br label %382, !dbg !10337

; <label>:382:                                    ; preds = %381, %208
  %383 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10338
  %384 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %383, i32 0, i32 0, !dbg !10340
  %385 = load i8, i8* %384, align 2, !dbg !10340
  %386 = zext i8 %385 to i32, !dbg !10338
  %387 = ashr i32 %386, 4, !dbg !10341
  %388 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10342
  %389 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %388, i32 0, i32 60, !dbg !10343
  %390 = load i32, i32* %389, align 4, !dbg !10343
  %391 = icmp ne i32 %387, %390, !dbg !10344
  br i1 %391, label %392, label %404, !dbg !10345

; <label>:392:                                    ; preds = %382
  %393 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10346
  %394 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %393, i32 0, i32 1, !dbg !10348
  %395 = load i8*, i8** %394, align 8, !dbg !10348
  %396 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10349
  %397 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %396, i32 0, i32 0, !dbg !10350
  %398 = load i8, i8* %397, align 2, !dbg !10350
  %399 = zext i8 %398 to i32, !dbg !10349
  %400 = ashr i32 %399, 4, !dbg !10351
  %401 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10352
  %402 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %401, i32 0, i32 60, !dbg !10353
  %403 = load i32, i32* %402, align 4, !dbg !10353
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.60, i32 0, i32 0), i8* %395, i32 %400, i32 %403), !dbg !10354
  store i32 1, i32* %5, align 4, !dbg !10355
  br label %1164, !dbg !10355

; <label>:404:                                    ; preds = %382
  %405 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10356
  %406 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %405, i32 0, i32 0, !dbg !10358
  %407 = load i8, i8* %406, align 2, !dbg !10358
  %408 = zext i8 %407 to i32, !dbg !10356
  %409 = and i32 %408, 15, !dbg !10359
  %410 = icmp ne i32 %409, 1, !dbg !10360
  br i1 %410, label %411, label %426, !dbg !10361

; <label>:411:                                    ; preds = %404
  %412 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10362
  %413 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %412, i32 0, i32 1, !dbg !10364
  %414 = load i8*, i8** %413, align 8, !dbg !10364
  %415 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10365
  %416 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %415, i32 0, i32 0, !dbg !10366
  %417 = load i8, i8* %416, align 2, !dbg !10366
  %418 = zext i8 %417 to i32, !dbg !10365
  %419 = and i32 %418, 15, !dbg !10367
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.61, i32 0, i32 0), i8* %414, i32 %419, i32 1), !dbg !10368
  %420 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10369
  %421 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %420, i32 0, i32 3, !dbg !10370
  %422 = load %struct._vrrp_stats*, %struct._vrrp_stats** %421, align 8, !dbg !10370
  %423 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %422, i32 0, i32 7, !dbg !10371
  %424 = load i64, i64* %423, align 8, !dbg !10372
  %425 = add i64 %424, 1, !dbg !10372
  store i64 %425, i64* %423, align 8, !dbg !10372
  store i32 1, i32* %5, align 4, !dbg !10373
  br label %1164, !dbg !10373

; <label>:426:                                    ; preds = %404
  %427 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10374
  %428 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %427, i32 0, i32 36, !dbg !10376
  %429 = load i8, i8* %428, align 4, !dbg !10376
  %430 = zext i8 %429 to i32, !dbg !10374
  %431 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10377
  %432 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %431, i32 0, i32 1, !dbg !10378
  %433 = load i8, i8* %432, align 1, !dbg !10378
  %434 = zext i8 %433 to i32, !dbg !10377
  %435 = icmp ne i32 %430, %434, !dbg !10379
  br i1 %435, label %436, label %448, !dbg !10380

; <label>:436:                                    ; preds = %426
  %437 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10381
  %438 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %437, i32 0, i32 1, !dbg !10383
  %439 = load i8*, i8** %438, align 8, !dbg !10383
  %440 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10384
  %441 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %440, i32 0, i32 1, !dbg !10385
  %442 = load i8, i8* %441, align 1, !dbg !10385
  %443 = zext i8 %442 to i32, !dbg !10384
  %444 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10386
  %445 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %444, i32 0, i32 36, !dbg !10387
  %446 = load i8, i8* %445, align 4, !dbg !10387
  %447 = zext i8 %446 to i32, !dbg !10386
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.62, i32 0, i32 0), i8* %439, i32 %443, i32 %447), !dbg !10388
  store i32 4, i32* %5, align 4, !dbg !10389
  br label %1164, !dbg !10389

; <label>:448:                                    ; preds = %426
  %449 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10390
  %450 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %449, i32 0, i32 41, !dbg !10392
  %451 = load %struct._list*, %struct._list** %450, align 8, !dbg !10392
  %452 = icmp eq %struct._list* %451, null, !dbg !10393
  br i1 %452, label %467, label %453, !dbg !10394

; <label>:453:                                    ; preds = %448
  %454 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10395
  %455 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %454, i32 0, i32 41, !dbg !10397
  %456 = load %struct._list*, %struct._list** %455, align 8, !dbg !10397
  %457 = getelementptr inbounds %struct._list, %struct._list* %456, i32 0, i32 0, !dbg !10398
  %458 = load %struct._element*, %struct._element** %457, align 8, !dbg !10398
  %459 = icmp eq %struct._element* %458, null, !dbg !10399
  br i1 %459, label %460, label %473, !dbg !10400

; <label>:460:                                    ; preds = %453
  %461 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10401
  %462 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %461, i32 0, i32 41, !dbg !10403
  %463 = load %struct._list*, %struct._list** %462, align 8, !dbg !10403
  %464 = getelementptr inbounds %struct._list, %struct._list* %463, i32 0, i32 1, !dbg !10404
  %465 = load %struct._element*, %struct._element** %464, align 8, !dbg !10404
  %466 = icmp eq %struct._element* %465, null, !dbg !10405
  br i1 %466, label %467, label %473, !dbg !10406

; <label>:467:                                    ; preds = %460, %448
  %468 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10407
  %469 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %468, i32 0, i32 3, !dbg !10409
  %470 = load i8, i8* %469, align 1, !dbg !10409
  %471 = zext i8 %470 to i32, !dbg !10407
  %472 = icmp sgt i32 %471, 0, !dbg !10410
  br i1 %472, label %503, label %473, !dbg !10411

; <label>:473:                                    ; preds = %467, %460, %453
  %474 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10412
  %475 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %474, i32 0, i32 41, !dbg !10413
  %476 = load %struct._list*, %struct._list** %475, align 8, !dbg !10413
  %477 = icmp eq %struct._list* %476, null, !dbg !10414
  br i1 %477, label %544, label %478, !dbg !10415

; <label>:478:                                    ; preds = %473
  %479 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10416
  %480 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %479, i32 0, i32 41, !dbg !10417
  %481 = load %struct._list*, %struct._list** %480, align 8, !dbg !10417
  %482 = getelementptr inbounds %struct._list, %struct._list* %481, i32 0, i32 0, !dbg !10418
  %483 = load %struct._element*, %struct._element** %482, align 8, !dbg !10418
  %484 = icmp eq %struct._element* %483, null, !dbg !10419
  br i1 %484, label %485, label %492, !dbg !10420

; <label>:485:                                    ; preds = %478
  %486 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10421
  %487 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %486, i32 0, i32 41, !dbg !10422
  %488 = load %struct._list*, %struct._list** %487, align 8, !dbg !10422
  %489 = getelementptr inbounds %struct._list, %struct._list* %488, i32 0, i32 1, !dbg !10423
  %490 = load %struct._element*, %struct._element** %489, align 8, !dbg !10423
  %491 = icmp eq %struct._element* %490, null, !dbg !10424
  br i1 %491, label %544, label %492, !dbg !10425

; <label>:492:                                    ; preds = %485, %478
  %493 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10426
  %494 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %493, i32 0, i32 41, !dbg !10427
  %495 = load %struct._list*, %struct._list** %494, align 8, !dbg !10427
  %496 = getelementptr inbounds %struct._list, %struct._list* %495, i32 0, i32 2, !dbg !10428
  %497 = load i32, i32* %496, align 8, !dbg !10428
  %498 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10429
  %499 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %498, i32 0, i32 3, !dbg !10430
  %500 = load i8, i8* %499, align 1, !dbg !10430
  %501 = zext i8 %500 to i32, !dbg !10429
  %502 = icmp ne i32 %497, %501, !dbg !10431
  br i1 %502, label %503, label %544, !dbg !10432

; <label>:503:                                    ; preds = %492, %467
  %504 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10434
  %505 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %504, i32 0, i32 1, !dbg !10436
  %506 = load i8*, i8** %505, align 8, !dbg !10436
  %507 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10437
  %508 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %507, i32 0, i32 3, !dbg !10438
  %509 = load i8, i8* %508, align 1, !dbg !10438
  %510 = zext i8 %509 to i32, !dbg !10437
  %511 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10439
  %512 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %511, i32 0, i32 41, !dbg !10440
  %513 = load %struct._list*, %struct._list** %512, align 8, !dbg !10440
  %514 = icmp eq %struct._list* %513, null, !dbg !10441
  br i1 %514, label %529, label %515, !dbg !10442

; <label>:515:                                    ; preds = %503
  %516 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10443
  %517 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %516, i32 0, i32 41, !dbg !10445
  %518 = load %struct._list*, %struct._list** %517, align 8, !dbg !10445
  %519 = getelementptr inbounds %struct._list, %struct._list* %518, i32 0, i32 0, !dbg !10446
  %520 = load %struct._element*, %struct._element** %519, align 8, !dbg !10446
  %521 = icmp eq %struct._element* %520, null, !dbg !10447
  br i1 %521, label %522, label %530, !dbg !10448

; <label>:522:                                    ; preds = %515
  %523 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10449
  %524 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %523, i32 0, i32 41, !dbg !10451
  %525 = load %struct._list*, %struct._list** %524, align 8, !dbg !10451
  %526 = getelementptr inbounds %struct._list, %struct._list* %525, i32 0, i32 1, !dbg !10452
  %527 = load %struct._element*, %struct._element** %526, align 8, !dbg !10452
  %528 = icmp eq %struct._element* %527, null, !dbg !10453
  br i1 %528, label %529, label %530, !dbg !10454

; <label>:529:                                    ; preds = %522, %503
  br label %536, !dbg !10455

; <label>:530:                                    ; preds = %522, %515
  %531 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10457
  %532 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %531, i32 0, i32 41, !dbg !10459
  %533 = load %struct._list*, %struct._list** %532, align 8, !dbg !10459
  %534 = getelementptr inbounds %struct._list, %struct._list* %533, i32 0, i32 2, !dbg !10460
  %535 = load i32, i32* %534, align 8, !dbg !10460
  br label %536, !dbg !10461

; <label>:536:                                    ; preds = %530, %529
  %537 = phi i32 [ 0, %529 ], [ %535, %530 ], !dbg !10462
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.63, i32 0, i32 0), i8* %506, i32 %510, i32 %537), !dbg !10464
  %538 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10465
  %539 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %538, i32 0, i32 3, !dbg !10466
  %540 = load %struct._vrrp_stats*, %struct._vrrp_stats** %539, align 8, !dbg !10466
  %541 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %540, i32 0, i32 8, !dbg !10467
  %542 = load i64, i64* %541, align 8, !dbg !10468
  %543 = add i64 %542, 1, !dbg !10468
  store i64 %543, i64* %541, align 8, !dbg !10468
  store i32 1, i32* %5, align 4, !dbg !10469
  br label %1164, !dbg !10469

; <label>:544:                                    ; preds = %492, %485, %473
  %545 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10470
  %546 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %545, i32 0, i32 0, !dbg !10472
  %547 = load i16, i16* %546, align 8, !dbg !10472
  %548 = zext i16 %547 to i32, !dbg !10470
  %549 = icmp eq i32 %548, 2, !dbg !10473
  br i1 %549, label %550, label %574, !dbg !10474

; <label>:550:                                    ; preds = %544
  %551 = load %struct.iphdr*, %struct.iphdr** %10, align 8, !dbg !10475
  %552 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %551, i32 0, i32 2, !dbg !10477
  %553 = load i16, i16* %552, align 2, !dbg !10477
  %554 = call zeroext i16 @ntohs(i16 zeroext %553) #1, !dbg !10478
  %555 = zext i16 %554 to i64, !dbg !10478
  %556 = load i64, i64* %23, align 8, !dbg !10479
  %557 = icmp ne i64 %555, %556, !dbg !10480
  br i1 %557, label %558, label %574, !dbg !10481

; <label>:558:                                    ; preds = %550
  %559 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10482
  %560 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %559, i32 0, i32 1, !dbg !10484
  %561 = load i8*, i8** %560, align 8, !dbg !10484
  %562 = load %struct.iphdr*, %struct.iphdr** %10, align 8, !dbg !10485
  %563 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %562, i32 0, i32 2, !dbg !10486
  %564 = load i16, i16* %563, align 2, !dbg !10486
  %565 = call zeroext i16 @ntohs(i16 zeroext %564) #1, !dbg !10487
  %566 = zext i16 %565 to i32, !dbg !10487
  %567 = load i64, i64* %23, align 8, !dbg !10488
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.64, i32 0, i32 0), i8* %561, i32 %566, i64 %567), !dbg !10489
  %568 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10490
  %569 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %568, i32 0, i32 3, !dbg !10491
  %570 = load %struct._vrrp_stats*, %struct._vrrp_stats** %569, align 8, !dbg !10491
  %571 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %570, i32 0, i32 4, !dbg !10492
  %572 = load i64, i64* %571, align 8, !dbg !10493
  %573 = add i64 %572, 1, !dbg !10493
  store i64 %573, i64* %571, align 8, !dbg !10493
  store i32 1, i32* %5, align 4, !dbg !10494
  br label %1164, !dbg !10494

; <label>:574:                                    ; preds = %550, %544
  %575 = load i64, i64* %24, align 8, !dbg !10495
  %576 = load i64, i64* %23, align 8, !dbg !10497
  %577 = icmp ne i64 %575, %576, !dbg !10498
  br i1 %577, label %578, label %590, !dbg !10499

; <label>:578:                                    ; preds = %574
  %579 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10500
  %580 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %579, i32 0, i32 1, !dbg !10502
  %581 = load i8*, i8** %580, align 8, !dbg !10502
  %582 = load i64, i64* %23, align 8, !dbg !10503
  %583 = load i64, i64* %24, align 8, !dbg !10504
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.65, i32 0, i32 0), i8* %581, i64 %582, i64 %583), !dbg !10505
  %584 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10506
  %585 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %584, i32 0, i32 3, !dbg !10507
  %586 = load %struct._vrrp_stats*, %struct._vrrp_stats** %585, align 8, !dbg !10507
  %587 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %586, i32 0, i32 4, !dbg !10508
  %588 = load i64, i64* %587, align 8, !dbg !10509
  %589 = add i64 %588, 1, !dbg !10509
  store i64 %589, i64* %587, align 8, !dbg !10509
  store i32 1, i32* %5, align 4, !dbg !10510
  br label %1164, !dbg !10510

; <label>:590:                                    ; preds = %574
  %591 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10511
  %592 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %591, i32 0, i32 0, !dbg !10513
  %593 = load i16, i16* %592, align 8, !dbg !10513
  %594 = zext i16 %593 to i32, !dbg !10511
  %595 = icmp eq i32 %594, 2, !dbg !10514
  br i1 %595, label %596, label %722, !dbg !10515

; <label>:596:                                    ; preds = %590
  %597 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10516
  %598 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %597, i32 0, i32 3, !dbg !10518
  %599 = load i8, i8* %598, align 1, !dbg !10518
  %600 = zext i8 %599 to i64, !dbg !10516
  %601 = mul i64 %600, 4, !dbg !10519
  %602 = add i64 8, %601, !dbg !10520
  store i64 %602, i64* %12, align 8, !dbg !10521
  %603 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10522
  %604 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %603, i32 0, i32 60, !dbg !10524
  %605 = load i32, i32* %604, align 4, !dbg !10524
  %606 = icmp eq i32 %605, 3, !dbg !10525
  br i1 %606, label %607, label %708, !dbg !10526

; <label>:607:                                    ; preds = %596
  %608 = load %struct.iphdr*, %struct.iphdr** %10, align 8, !dbg !10527
  %609 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %608, i32 0, i32 8, !dbg !10529
  %610 = load i32, i32* %609, align 4, !dbg !10529
  %611 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %20, i32 0, i32 0, !dbg !10530
  store i32 %610, i32* %611, align 4, !dbg !10531
  %612 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10532
  %613 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %612, i32 0, i32 21, !dbg !10533
  %614 = load i32, i32* %613, align 8, !dbg !10533
  %615 = icmp ule i32 %614, 2, !dbg !10534
  br i1 %615, label %616, label %620, !dbg !10532

; <label>:616:                                    ; preds = %607
  %617 = load %struct.iphdr*, %struct.iphdr** %10, align 8, !dbg !10535
  %618 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %617, i32 0, i32 9, !dbg !10536
  %619 = load i32, i32* %618, align 4, !dbg !10536
  br label %626, !dbg !10537

; <label>:620:                                    ; preds = %607
  %621 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !10539
  %622 = getelementptr inbounds %struct._data, %struct._data* %621, i32 0, i32 22, !dbg !10540
  %623 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %622, i32 0, i32 2, !dbg !10541
  %624 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %623, i32 0, i32 0, !dbg !10542
  %625 = load i32, i32* %624, align 4, !dbg !10542
  br label %626, !dbg !10543

; <label>:626:                                    ; preds = %620, %616
  %627 = phi i32 [ %619, %616 ], [ %625, %620 ], !dbg !10545
  %628 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %20, i32 0, i32 1, !dbg !10547
  store i32 %627, i32* %628, align 4, !dbg !10548
  %629 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %20, i32 0, i32 2, !dbg !10549
  store i8 0, i8* %629, align 4, !dbg !10550
  %630 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %20, i32 0, i32 3, !dbg !10551
  store i8 112, i8* %630, align 1, !dbg !10552
  %631 = load i64, i64* %12, align 8, !dbg !10553
  %632 = trunc i64 %631 to i16, !dbg !10553
  %633 = call zeroext i16 @htons(i16 zeroext %632) #1, !dbg !10554
  %634 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %20, i32 0, i32 4, !dbg !10555
  store i16 %633, i16* %634, align 2, !dbg !10556
  %635 = bitcast %struct.ipv4_phdr_t* %20 to i16*, !dbg !10557
  %636 = call zeroext i16 @in_csum(i16* %635, i64 12, i32 0, i32* %21), !dbg !10558
  %637 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10559
  %638 = bitcast %struct._vrrphdr* %637 to i16*, !dbg !10561
  %639 = load i64, i64* %12, align 8, !dbg !10562
  %640 = load i32, i32* %21, align 4, !dbg !10563
  %641 = call zeroext i16 @in_csum(i16* %638, i64 %639, i32 %640, i32* null), !dbg !10564
  %642 = icmp ne i16 %641, 0, !dbg !10564
  br i1 %642, label %643, label %707, !dbg !10565

; <label>:643:                                    ; preds = %626
  store i8 1, i8* %25, align 1, !dbg !10566
  %644 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10568
  %645 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %644, i32 0, i32 20, !dbg !10570
  %646 = load %struct._list*, %struct._list** %645, align 8, !dbg !10570
  %647 = icmp eq %struct._list* %646, null, !dbg !10571
  br i1 %647, label %699, label %648, !dbg !10572

; <label>:648:                                    ; preds = %643
  %649 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10573
  %650 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %649, i32 0, i32 20, !dbg !10575
  %651 = load %struct._list*, %struct._list** %650, align 8, !dbg !10575
  %652 = getelementptr inbounds %struct._list, %struct._list* %651, i32 0, i32 0, !dbg !10576
  %653 = load %struct._element*, %struct._element** %652, align 8, !dbg !10576
  %654 = icmp eq %struct._element* %653, null, !dbg !10577
  br i1 %654, label %655, label %662, !dbg !10578

; <label>:655:                                    ; preds = %648
  %656 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10579
  %657 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %656, i32 0, i32 20, !dbg !10581
  %658 = load %struct._list*, %struct._list** %657, align 8, !dbg !10581
  %659 = getelementptr inbounds %struct._list, %struct._list* %658, i32 0, i32 1, !dbg !10582
  %660 = load %struct._element*, %struct._element** %659, align 8, !dbg !10582
  %661 = icmp eq %struct._element* %660, null, !dbg !10583
  br i1 %661, label %699, label %662, !dbg !10584

; <label>:662:                                    ; preds = %655, %648
  %663 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10585
  %664 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %663, i32 0, i32 21, !dbg !10586
  %665 = load i32, i32* %664, align 8, !dbg !10586
  %666 = icmp eq i32 %665, 0, !dbg !10587
  br i1 %666, label %667, label %699, !dbg !10588

; <label>:667:                                    ; preds = %662
  %668 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %20, i32 0, i32 1, !dbg !10589
  %669 = load i32, i32* %668, align 4, !dbg !10589
  %670 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !10590
  %671 = getelementptr inbounds %struct._data, %struct._data* %670, i32 0, i32 22, !dbg !10591
  %672 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %671, i32 0, i32 2, !dbg !10592
  %673 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %672, i32 0, i32 0, !dbg !10593
  %674 = load i32, i32* %673, align 4, !dbg !10593
  %675 = icmp ne i32 %669, %674, !dbg !10594
  br i1 %675, label %676, label %699, !dbg !10595

; <label>:676:                                    ; preds = %667
  %677 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !10597
  %678 = getelementptr inbounds %struct._data, %struct._data* %677, i32 0, i32 22, !dbg !10599
  %679 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %678, i32 0, i32 2, !dbg !10600
  %680 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %679, i32 0, i32 0, !dbg !10601
  %681 = load i32, i32* %680, align 4, !dbg !10601
  %682 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %20, i32 0, i32 1, !dbg !10602
  store i32 %681, i32* %682, align 4, !dbg !10603
  %683 = bitcast %struct.ipv4_phdr_t* %20 to i16*, !dbg !10604
  %684 = call zeroext i16 @in_csum(i16* %683, i64 12, i32 0, i32* %21), !dbg !10605
  %685 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10606
  %686 = bitcast %struct._vrrphdr* %685 to i16*, !dbg !10608
  %687 = load i64, i64* %12, align 8, !dbg !10609
  %688 = load i32, i32* %21, align 4, !dbg !10610
  %689 = call zeroext i16 @in_csum(i16* %686, i64 %687, i32 %688, i32* null), !dbg !10611
  %690 = icmp ne i16 %689, 0, !dbg !10611
  br i1 %690, label %698, label %691, !dbg !10612

; <label>:691:                                    ; preds = %676
  %692 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10613
  call void @vrrp_csum_mcast(%struct._vrrp_t* %692), !dbg !10615
  %693 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10616
  %694 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %693, i32 0, i32 21, !dbg !10617
  store i32 4, i32* %694, align 8, !dbg !10618
  %695 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10619
  %696 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %695, i32 0, i32 1, !dbg !10620
  %697 = load i8*, i8** %696, align 8, !dbg !10620
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.66, i32 0, i32 0), i8* %697), !dbg !10621
  store i8 0, i8* %25, align 1, !dbg !10622
  br label %698, !dbg !10623

; <label>:698:                                    ; preds = %691, %676
  br label %699, !dbg !10624

; <label>:699:                                    ; preds = %698, %667, %662, %655, %643
  %700 = load i8, i8* %25, align 1, !dbg !10625
  %701 = trunc i8 %700 to i1, !dbg !10625
  br i1 %701, label %702, label %706, !dbg !10627

; <label>:702:                                    ; preds = %699
  %703 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10628
  %704 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %703, i32 0, i32 1, !dbg !10630
  %705 = load i8*, i8** %704, align 8, !dbg !10630
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* %705), !dbg !10631
  store i32 1, i32* %5, align 4, !dbg !10632
  br label %1164, !dbg !10632

; <label>:706:                                    ; preds = %699
  br label %707, !dbg !10633

; <label>:707:                                    ; preds = %706, %626
  br label %721, !dbg !10634

; <label>:708:                                    ; preds = %596
  %709 = load i64, i64* %12, align 8, !dbg !10635
  %710 = add i64 %709, 8, !dbg !10635
  store i64 %710, i64* %12, align 8, !dbg !10635
  %711 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10637
  %712 = bitcast %struct._vrrphdr* %711 to i16*, !dbg !10639
  %713 = load i64, i64* %12, align 8, !dbg !10640
  %714 = call zeroext i16 @in_csum(i16* %712, i64 %713, i32 0, i32* null), !dbg !10641
  %715 = icmp ne i16 %714, 0, !dbg !10641
  br i1 %715, label %716, label %720, !dbg !10642

; <label>:716:                                    ; preds = %708
  %717 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10643
  %718 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %717, i32 0, i32 1, !dbg !10645
  %719 = load i8*, i8** %718, align 8, !dbg !10645
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i32 0, i32 0), i8* %719), !dbg !10646
  store i32 1, i32* %5, align 4, !dbg !10647
  br label %1164, !dbg !10647

; <label>:720:                                    ; preds = %708
  br label %721

; <label>:721:                                    ; preds = %720, %707
  br label %722, !dbg !10648

; <label>:722:                                    ; preds = %721, %590
  %723 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10649
  %724 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %723, i32 0, i32 3, !dbg !10650
  %725 = load %struct._vrrp_stats*, %struct._vrrp_stats** %724, align 8, !dbg !10650
  %726 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %725, i32 0, i32 0, !dbg !10651
  %727 = load i64, i64* %726, align 8, !dbg !10652
  %728 = add i64 %727, 1, !dbg !10652
  store i64 %728, i64* %726, align 8, !dbg !10652
  %729 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10653
  %730 = bitcast %struct._vrrphdr* %729 to i8*, !dbg !10654
  %731 = getelementptr inbounds i8, i8* %730, i64 8, !dbg !10655
  store i8* %731, i8** %16, align 8, !dbg !10656
  %732 = load i8, i8* %9, align 1, !dbg !10657
  %733 = trunc i8 %732 to i1, !dbg !10657
  br i1 %733, label %734, label %1114, !dbg !10659

; <label>:734:                                    ; preds = %722
  %735 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10660
  %736 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %735, i32 0, i32 0, !dbg !10663
  %737 = load i16, i16* %736, align 8, !dbg !10663
  %738 = zext i16 %737 to i32, !dbg !10660
  %739 = icmp eq i32 %738, 2, !dbg !10664
  br i1 %739, label %740, label %893, !dbg !10665

; <label>:740:                                    ; preds = %734
  %741 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10666
  %742 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %741, i32 0, i32 41, !dbg !10669
  %743 = load %struct._list*, %struct._list** %742, align 8, !dbg !10669
  %744 = icmp eq %struct._list* %743, null, !dbg !10670
  br i1 %744, label %813, label %745, !dbg !10671

; <label>:745:                                    ; preds = %740
  %746 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10672
  %747 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %746, i32 0, i32 41, !dbg !10674
  %748 = load %struct._list*, %struct._list** %747, align 8, !dbg !10674
  %749 = getelementptr inbounds %struct._list, %struct._list* %748, i32 0, i32 0, !dbg !10675
  %750 = load %struct._element*, %struct._element** %749, align 8, !dbg !10675
  %751 = icmp eq %struct._element* %750, null, !dbg !10676
  br i1 %751, label %752, label %759, !dbg !10677

; <label>:752:                                    ; preds = %745
  %753 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10678
  %754 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %753, i32 0, i32 41, !dbg !10680
  %755 = load %struct._list*, %struct._list** %754, align 8, !dbg !10680
  %756 = getelementptr inbounds %struct._list, %struct._list* %755, i32 0, i32 1, !dbg !10681
  %757 = load %struct._element*, %struct._element** %756, align 8, !dbg !10681
  %758 = icmp eq %struct._element* %757, null, !dbg !10682
  br i1 %758, label %813, label %759, !dbg !10683

; <label>:759:                                    ; preds = %752, %745
  %760 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10684
  %761 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %760, i32 0, i32 41, !dbg !10687
  %762 = load %struct._list*, %struct._list** %761, align 8, !dbg !10687
  %763 = icmp ne %struct._list* %762, null, !dbg !10688
  br i1 %763, label %765, label %764, !dbg !10689

; <label>:764:                                    ; preds = %759
  br label %771, !dbg !10690

; <label>:765:                                    ; preds = %759
  %766 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10692
  %767 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %766, i32 0, i32 41, !dbg !10694
  %768 = load %struct._list*, %struct._list** %767, align 8, !dbg !10694
  %769 = getelementptr inbounds %struct._list, %struct._list* %768, i32 0, i32 0, !dbg !10695
  %770 = load %struct._element*, %struct._element** %769, align 8, !dbg !10695
  br label %771, !dbg !10696

; <label>:771:                                    ; preds = %765, %764
  %772 = phi %struct._element* [ null, %764 ], [ %770, %765 ], !dbg !10697
  store %struct._element* %772, %struct._element** %18, align 8, !dbg !10699
  br label %773, !dbg !10700

; <label>:773:                                    ; preds = %808, %771
  %774 = load %struct._element*, %struct._element** %18, align 8, !dbg !10701
  %775 = icmp ne %struct._element* %774, null, !dbg !10704
  br i1 %775, label %776, label %812, !dbg !10704

; <label>:776:                                    ; preds = %773
  %777 = load %struct._element*, %struct._element** %18, align 8, !dbg !10705
  %778 = getelementptr inbounds %struct._element, %struct._element* %777, i32 0, i32 2, !dbg !10707
  %779 = load i8*, i8** %778, align 8, !dbg !10707
  %780 = bitcast i8* %779 to %struct._ip_address*, !dbg !10708
  store %struct._ip_address* %780, %struct._ip_address** %17, align 8, !dbg !10709
  %781 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10710
  %782 = load %struct._ip_address*, %struct._ip_address** %17, align 8, !dbg !10712
  %783 = load i8*, i8** %16, align 8, !dbg !10713
  %784 = call i32 @vrrp_in_chk_vips(%struct._vrrp_t* %781, %struct._ip_address* %782, i8* %783), !dbg !10714
  %785 = icmp ne i32 %784, 0, !dbg !10714
  br i1 %785, label %807, label %786, !dbg !10715

; <label>:786:                                    ; preds = %776
  %787 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10716
  %788 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %787, i32 0, i32 1, !dbg !10718
  %789 = load i8*, i8** %788, align 8, !dbg !10718
  %790 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10719
  %791 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %790, i32 0, i32 36, !dbg !10720
  %792 = load i8, i8* %791, align 4, !dbg !10720
  %793 = zext i8 %792 to i32, !dbg !10719
  %794 = load %struct._ip_address*, %struct._ip_address** %17, align 8, !dbg !10721
  %795 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %794, i32 0, i32 1, !dbg !10722
  %796 = bitcast %union.anon.5* %795 to %struct.anon.6*, !dbg !10723
  %797 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %796, i32 0, i32 0, !dbg !10724
  %798 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %797, i32 0, i32 0, !dbg !10725
  %799 = load i32, i32* %798, align 8, !dbg !10725
  %800 = call i8* @inet_ntop2(i32 %799), !dbg !10726
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.69, i32 0, i32 0), i8* %789, i32 %793, i8* %800), !dbg !10727
  %801 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10728
  %802 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %801, i32 0, i32 3, !dbg !10729
  %803 = load %struct._vrrp_stats*, %struct._vrrp_stats** %802, align 8, !dbg !10729
  %804 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %803, i32 0, i32 8, !dbg !10730
  %805 = load i64, i64* %804, align 8, !dbg !10731
  %806 = add i64 %805, 1, !dbg !10731
  store i64 %806, i64* %804, align 8, !dbg !10731
  store i32 1, i32* %5, align 4, !dbg !10732
  br label %1164, !dbg !10732

; <label>:807:                                    ; preds = %776
  br label %808, !dbg !10733

; <label>:808:                                    ; preds = %807
  %809 = load %struct._element*, %struct._element** %18, align 8, !dbg !10734
  %810 = getelementptr inbounds %struct._element, %struct._element* %809, i32 0, i32 0, !dbg !10736
  %811 = load %struct._element*, %struct._element** %810, align 8, !dbg !10736
  store %struct._element* %811, %struct._element** %18, align 8, !dbg !10737
  br label %773, !dbg !10738, !llvm.loop !10739

; <label>:812:                                    ; preds = %773
  br label %813, !dbg !10741

; <label>:813:                                    ; preds = %812, %752, %740
  %814 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !10742
  %815 = getelementptr inbounds %struct._data, %struct._data* %814, i32 0, i32 41, !dbg !10744
  %816 = load i8, i8* %815, align 1, !dbg !10744
  %817 = trunc i8 %816 to i1, !dbg !10744
  br i1 %817, label %818, label %892, !dbg !10745

; <label>:818:                                    ; preds = %813
  %819 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10746
  %820 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %819, i32 0, i32 20, !dbg !10748
  %821 = load %struct._list*, %struct._list** %820, align 8, !dbg !10748
  %822 = icmp eq %struct._list* %821, null, !dbg !10749
  br i1 %822, label %892, label %823, !dbg !10750

; <label>:823:                                    ; preds = %818
  %824 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10751
  %825 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %824, i32 0, i32 20, !dbg !10753
  %826 = load %struct._list*, %struct._list** %825, align 8, !dbg !10753
  %827 = getelementptr inbounds %struct._list, %struct._list* %826, i32 0, i32 0, !dbg !10754
  %828 = load %struct._element*, %struct._element** %827, align 8, !dbg !10754
  %829 = icmp eq %struct._element* %828, null, !dbg !10755
  br i1 %829, label %830, label %837, !dbg !10756

; <label>:830:                                    ; preds = %823
  %831 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10757
  %832 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %831, i32 0, i32 20, !dbg !10759
  %833 = load %struct._list*, %struct._list** %832, align 8, !dbg !10759
  %834 = getelementptr inbounds %struct._list, %struct._list* %833, i32 0, i32 1, !dbg !10760
  %835 = load %struct._element*, %struct._element** %834, align 8, !dbg !10760
  %836 = icmp eq %struct._element* %835, null, !dbg !10761
  br i1 %836, label %892, label %837, !dbg !10762

; <label>:837:                                    ; preds = %830, %823
  %838 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10763
  %839 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %838, i32 0, i32 20, !dbg !10766
  %840 = load %struct._list*, %struct._list** %839, align 8, !dbg !10766
  %841 = icmp ne %struct._list* %840, null, !dbg !10767
  br i1 %841, label %843, label %842, !dbg !10768

; <label>:842:                                    ; preds = %837
  br label %849, !dbg !10769

; <label>:843:                                    ; preds = %837
  %844 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10771
  %845 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %844, i32 0, i32 20, !dbg !10773
  %846 = load %struct._list*, %struct._list** %845, align 8, !dbg !10773
  %847 = getelementptr inbounds %struct._list, %struct._list* %846, i32 0, i32 0, !dbg !10774
  %848 = load %struct._element*, %struct._element** %847, align 8, !dbg !10774
  br label %849, !dbg !10775

; <label>:849:                                    ; preds = %843, %842
  %850 = phi %struct._element* [ null, %842 ], [ %848, %843 ], !dbg !10776
  store %struct._element* %850, %struct._element** %18, align 8, !dbg !10778
  br label %851, !dbg !10779

; <label>:851:                                    ; preds = %873, %849
  %852 = load %struct._element*, %struct._element** %18, align 8, !dbg !10780
  %853 = icmp ne %struct._element* %852, null, !dbg !10783
  br i1 %853, label %854, label %877, !dbg !10783

; <label>:854:                                    ; preds = %851
  %855 = load %struct._element*, %struct._element** %18, align 8, !dbg !10784
  %856 = getelementptr inbounds %struct._element, %struct._element* %855, i32 0, i32 2, !dbg !10786
  %857 = load i8*, i8** %856, align 8, !dbg !10786
  %858 = bitcast i8* %857 to %struct.sockaddr_storage*, !dbg !10787
  store %struct.sockaddr_storage* %858, %struct.sockaddr_storage** %22, align 8, !dbg !10788
  %859 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10789
  %860 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %859, i32 0, i32 19, !dbg !10791
  %861 = bitcast %struct.sockaddr_storage* %860 to %struct.sockaddr_in*, !dbg !10792
  %862 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %861, i32 0, i32 2, !dbg !10792
  %863 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %862, i32 0, i32 0, !dbg !10793
  %864 = load i32, i32* %863, align 4, !dbg !10793
  %865 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %22, align 8, !dbg !10794
  %866 = bitcast %struct.sockaddr_storage* %865 to %struct.sockaddr_in*, !dbg !10795
  %867 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %866, i32 0, i32 2, !dbg !10795
  %868 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %867, i32 0, i32 0, !dbg !10796
  %869 = load i32, i32* %868, align 4, !dbg !10796
  %870 = icmp eq i32 %864, %869, !dbg !10797
  br i1 %870, label %871, label %872, !dbg !10798

; <label>:871:                                    ; preds = %854
  br label %877, !dbg !10799

; <label>:872:                                    ; preds = %854
  br label %873, !dbg !10800

; <label>:873:                                    ; preds = %872
  %874 = load %struct._element*, %struct._element** %18, align 8, !dbg !10801
  %875 = getelementptr inbounds %struct._element, %struct._element* %874, i32 0, i32 0, !dbg !10803
  %876 = load %struct._element*, %struct._element** %875, align 8, !dbg !10803
  store %struct._element* %876, %struct._element** %18, align 8, !dbg !10804
  br label %851, !dbg !10805, !llvm.loop !10806

; <label>:877:                                    ; preds = %871, %851
  %878 = load %struct._element*, %struct._element** %18, align 8, !dbg !10808
  %879 = icmp ne %struct._element* %878, null, !dbg !10808
  br i1 %879, label %891, label %880, !dbg !10810

; <label>:880:                                    ; preds = %877
  %881 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10811
  %882 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %881, i32 0, i32 1, !dbg !10813
  %883 = load i8*, i8** %882, align 8, !dbg !10813
  %884 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10814
  %885 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %884, i32 0, i32 19, !dbg !10815
  %886 = bitcast %struct.sockaddr_storage* %885 to %struct.sockaddr_in*, !dbg !10816
  %887 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %886, i32 0, i32 2, !dbg !10816
  %888 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %887, i32 0, i32 0, !dbg !10817
  %889 = load i32, i32* %888, align 4, !dbg !10817
  %890 = call i8* @inet_ntop2(i32 %889), !dbg !10818
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.70, i32 0, i32 0), i8* %883, i8* %890), !dbg !10819
  store i32 1, i32* %5, align 4, !dbg !10820
  br label %1164, !dbg !10820

; <label>:891:                                    ; preds = %877
  br label %892, !dbg !10821

; <label>:892:                                    ; preds = %891, %830, %818, %813
  br label %1113, !dbg !10822

; <label>:893:                                    ; preds = %734
  %894 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10823
  %895 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %894, i32 0, i32 41, !dbg !10826
  %896 = load %struct._list*, %struct._list** %895, align 8, !dbg !10826
  %897 = icmp eq %struct._list* %896, null, !dbg !10827
  br i1 %897, label %986, label %898, !dbg !10828

; <label>:898:                                    ; preds = %893
  %899 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10829
  %900 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %899, i32 0, i32 41, !dbg !10831
  %901 = load %struct._list*, %struct._list** %900, align 8, !dbg !10831
  %902 = getelementptr inbounds %struct._list, %struct._list* %901, i32 0, i32 0, !dbg !10832
  %903 = load %struct._element*, %struct._element** %902, align 8, !dbg !10832
  %904 = icmp eq %struct._element* %903, null, !dbg !10833
  br i1 %904, label %905, label %912, !dbg !10834

; <label>:905:                                    ; preds = %898
  %906 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10835
  %907 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %906, i32 0, i32 41, !dbg !10837
  %908 = load %struct._list*, %struct._list** %907, align 8, !dbg !10837
  %909 = getelementptr inbounds %struct._list, %struct._list* %908, i32 0, i32 1, !dbg !10838
  %910 = load %struct._element*, %struct._element** %909, align 8, !dbg !10838
  %911 = icmp eq %struct._element* %910, null, !dbg !10839
  br i1 %911, label %986, label %912, !dbg !10840

; <label>:912:                                    ; preds = %905, %898
  %913 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !10841
  %914 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %913, i32 0, i32 3, !dbg !10844
  %915 = load i8, i8* %914, align 1, !dbg !10844
  %916 = zext i8 %915 to i32, !dbg !10841
  %917 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10845
  %918 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %917, i32 0, i32 41, !dbg !10846
  %919 = load %struct._list*, %struct._list** %918, align 8, !dbg !10846
  %920 = getelementptr inbounds %struct._list, %struct._list* %919, i32 0, i32 2, !dbg !10847
  %921 = load i32, i32* %920, align 8, !dbg !10847
  %922 = icmp ne i32 %916, %921, !dbg !10848
  br i1 %922, label %923, label %933, !dbg !10849

; <label>:923:                                    ; preds = %912
  %924 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10850
  %925 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %924, i32 0, i32 1, !dbg !10852
  %926 = load i8*, i8** %925, align 8, !dbg !10852
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.71, i32 0, i32 0), i8* %926), !dbg !10853
  %927 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10854
  %928 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %927, i32 0, i32 3, !dbg !10855
  %929 = load %struct._vrrp_stats*, %struct._vrrp_stats** %928, align 8, !dbg !10855
  %930 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %929, i32 0, i32 8, !dbg !10856
  %931 = load i64, i64* %930, align 8, !dbg !10857
  %932 = add i64 %931, 1, !dbg !10857
  store i64 %932, i64* %930, align 8, !dbg !10857
  store i32 1, i32* %5, align 4, !dbg !10858
  br label %1164, !dbg !10858

; <label>:933:                                    ; preds = %912
  %934 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10859
  %935 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %934, i32 0, i32 41, !dbg !10861
  %936 = load %struct._list*, %struct._list** %935, align 8, !dbg !10861
  %937 = icmp ne %struct._list* %936, null, !dbg !10862
  br i1 %937, label %939, label %938, !dbg !10863

; <label>:938:                                    ; preds = %933
  br label %945, !dbg !10864

; <label>:939:                                    ; preds = %933
  %940 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10866
  %941 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %940, i32 0, i32 41, !dbg !10868
  %942 = load %struct._list*, %struct._list** %941, align 8, !dbg !10868
  %943 = getelementptr inbounds %struct._list, %struct._list* %942, i32 0, i32 0, !dbg !10869
  %944 = load %struct._element*, %struct._element** %943, align 8, !dbg !10869
  br label %945, !dbg !10870

; <label>:945:                                    ; preds = %939, %938
  %946 = phi %struct._element* [ null, %938 ], [ %944, %939 ], !dbg !10871
  store %struct._element* %946, %struct._element** %18, align 8, !dbg !10873
  br label %947, !dbg !10874

; <label>:947:                                    ; preds = %981, %945
  %948 = load %struct._element*, %struct._element** %18, align 8, !dbg !10875
  %949 = icmp ne %struct._element* %948, null, !dbg !10878
  br i1 %949, label %950, label %985, !dbg !10878

; <label>:950:                                    ; preds = %947
  %951 = load %struct._element*, %struct._element** %18, align 8, !dbg !10879
  %952 = getelementptr inbounds %struct._element, %struct._element* %951, i32 0, i32 2, !dbg !10881
  %953 = load i8*, i8** %952, align 8, !dbg !10881
  %954 = bitcast i8* %953 to %struct._ip_address*, !dbg !10882
  store %struct._ip_address* %954, %struct._ip_address** %17, align 8, !dbg !10883
  %955 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10884
  %956 = load %struct._ip_address*, %struct._ip_address** %17, align 8, !dbg !10886
  %957 = load i8*, i8** %16, align 8, !dbg !10887
  %958 = call i32 @vrrp_in_chk_vips(%struct._vrrp_t* %955, %struct._ip_address* %956, i8* %957), !dbg !10888
  %959 = icmp ne i32 %958, 0, !dbg !10888
  br i1 %959, label %980, label %960, !dbg !10889

; <label>:960:                                    ; preds = %950
  %961 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10890
  %962 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %961, i32 0, i32 1, !dbg !10892
  %963 = load i8*, i8** %962, align 8, !dbg !10892
  %964 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10893
  %965 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %964, i32 0, i32 36, !dbg !10894
  %966 = load i8, i8* %965, align 4, !dbg !10894
  %967 = zext i8 %966 to i32, !dbg !10893
  %968 = load %struct._ip_address*, %struct._ip_address** %17, align 8, !dbg !10895
  %969 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %968, i32 0, i32 1, !dbg !10896
  %970 = bitcast %union.anon.5* %969 to %struct.in6_addr*, !dbg !10897
  %971 = bitcast %struct.in6_addr* %970 to i8*, !dbg !10898
  %972 = getelementptr inbounds [46 x i8], [46 x i8]* %19, i32 0, i32 0, !dbg !10899
  %973 = call i8* @inet_ntop(i32 10, i8* %971, i8* %972, i32 46) #8, !dbg !10900
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.69, i32 0, i32 0), i8* %963, i32 %967, i8* %973), !dbg !10901
  %974 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10902
  %975 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %974, i32 0, i32 3, !dbg !10903
  %976 = load %struct._vrrp_stats*, %struct._vrrp_stats** %975, align 8, !dbg !10903
  %977 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %976, i32 0, i32 8, !dbg !10904
  %978 = load i64, i64* %977, align 8, !dbg !10905
  %979 = add i64 %978, 1, !dbg !10905
  store i64 %979, i64* %977, align 8, !dbg !10905
  store i32 1, i32* %5, align 4, !dbg !10906
  br label %1164, !dbg !10906

; <label>:980:                                    ; preds = %950
  br label %981, !dbg !10907

; <label>:981:                                    ; preds = %980
  %982 = load %struct._element*, %struct._element** %18, align 8, !dbg !10908
  %983 = getelementptr inbounds %struct._element, %struct._element* %982, i32 0, i32 0, !dbg !10910
  %984 = load %struct._element*, %struct._element** %983, align 8, !dbg !10910
  store %struct._element* %984, %struct._element** %18, align 8, !dbg !10911
  br label %947, !dbg !10912, !llvm.loop !10913

; <label>:985:                                    ; preds = %947
  br label %986, !dbg !10915

; <label>:986:                                    ; preds = %985, %905, %893
  %987 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !10916
  %988 = getelementptr inbounds %struct._data, %struct._data* %987, i32 0, i32 41, !dbg !10918
  %989 = load i8, i8* %988, align 1, !dbg !10918
  %990 = trunc i8 %989 to i1, !dbg !10918
  br i1 %990, label %991, label %1112, !dbg !10919

; <label>:991:                                    ; preds = %986
  %992 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10920
  %993 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %992, i32 0, i32 20, !dbg !10922
  %994 = load %struct._list*, %struct._list** %993, align 8, !dbg !10922
  %995 = icmp eq %struct._list* %994, null, !dbg !10923
  br i1 %995, label %1112, label %996, !dbg !10924

; <label>:996:                                    ; preds = %991
  %997 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10925
  %998 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %997, i32 0, i32 20, !dbg !10927
  %999 = load %struct._list*, %struct._list** %998, align 8, !dbg !10927
  %1000 = getelementptr inbounds %struct._list, %struct._list* %999, i32 0, i32 0, !dbg !10928
  %1001 = load %struct._element*, %struct._element** %1000, align 8, !dbg !10928
  %1002 = icmp eq %struct._element* %1001, null, !dbg !10929
  br i1 %1002, label %1003, label %1010, !dbg !10930

; <label>:1003:                                   ; preds = %996
  %1004 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10931
  %1005 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1004, i32 0, i32 20, !dbg !10933
  %1006 = load %struct._list*, %struct._list** %1005, align 8, !dbg !10933
  %1007 = getelementptr inbounds %struct._list, %struct._list* %1006, i32 0, i32 1, !dbg !10934
  %1008 = load %struct._element*, %struct._element** %1007, align 8, !dbg !10934
  %1009 = icmp eq %struct._element* %1008, null, !dbg !10935
  br i1 %1009, label %1112, label %1010, !dbg !10936

; <label>:1010:                                   ; preds = %1003, %996
  %1011 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10937
  %1012 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1011, i32 0, i32 20, !dbg !10940
  %1013 = load %struct._list*, %struct._list** %1012, align 8, !dbg !10940
  %1014 = icmp ne %struct._list* %1013, null, !dbg !10941
  br i1 %1014, label %1016, label %1015, !dbg !10942

; <label>:1015:                                   ; preds = %1010
  br label %1022, !dbg !10943

; <label>:1016:                                   ; preds = %1010
  %1017 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10945
  %1018 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1017, i32 0, i32 20, !dbg !10947
  %1019 = load %struct._list*, %struct._list** %1018, align 8, !dbg !10947
  %1020 = getelementptr inbounds %struct._list, %struct._list* %1019, i32 0, i32 0, !dbg !10948
  %1021 = load %struct._element*, %struct._element** %1020, align 8, !dbg !10948
  br label %1022, !dbg !10949

; <label>:1022:                                   ; preds = %1016, %1015
  %1023 = phi %struct._element* [ null, %1015 ], [ %1021, %1016 ], !dbg !10950
  store %struct._element* %1023, %struct._element** %18, align 8, !dbg !10952
  br label %1024, !dbg !10953

; <label>:1024:                                   ; preds = %1093, %1022
  %1025 = load %struct._element*, %struct._element** %18, align 8, !dbg !10954
  %1026 = icmp ne %struct._element* %1025, null, !dbg !10957
  br i1 %1026, label %1027, label %1097, !dbg !10957

; <label>:1027:                                   ; preds = %1024
  %1028 = load %struct._element*, %struct._element** %18, align 8, !dbg !10958
  %1029 = getelementptr inbounds %struct._element, %struct._element* %1028, i32 0, i32 2, !dbg !10960
  %1030 = load i8*, i8** %1029, align 8, !dbg !10960
  %1031 = bitcast i8* %1030 to %struct.sockaddr_storage*, !dbg !10961
  store %struct.sockaddr_storage* %1031, %struct.sockaddr_storage** %22, align 8, !dbg !10962
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %27, metadata !10963, metadata !793), !dbg !10966
  %1032 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !10967
  %1033 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1032, i32 0, i32 19, !dbg !10968
  %1034 = bitcast %struct.sockaddr_storage* %1033 to %struct.sockaddr_in6*, !dbg !10969
  %1035 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %1034, i32 0, i32 3, !dbg !10969
  store %struct.in6_addr* %1035, %struct.in6_addr** %27, align 8, !dbg !10966
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %28, metadata !10970, metadata !793), !dbg !10967
  %1036 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %22, align 8, !dbg !10971
  %1037 = bitcast %struct.sockaddr_storage* %1036 to %struct.sockaddr_in6*, !dbg !10972
  %1038 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %1037, i32 0, i32 3, !dbg !10972
  store %struct.in6_addr* %1038, %struct.in6_addr** %28, align 8, !dbg !10967
  %1039 = load %struct.in6_addr*, %struct.in6_addr** %27, align 8, !dbg !10973
  %1040 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %1039, i32 0, i32 0, !dbg !10974
  %1041 = bitcast %union.anon* %1040 to [4 x i32]*, !dbg !10975
  %1042 = getelementptr inbounds [4 x i32], [4 x i32]* %1041, i64 0, i64 0, !dbg !10973
  %1043 = load i32, i32* %1042, align 4, !dbg !10973
  %1044 = load %struct.in6_addr*, %struct.in6_addr** %28, align 8, !dbg !10976
  %1045 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %1044, i32 0, i32 0, !dbg !10977
  %1046 = bitcast %union.anon* %1045 to [4 x i32]*, !dbg !10978
  %1047 = getelementptr inbounds [4 x i32], [4 x i32]* %1046, i64 0, i64 0, !dbg !10976
  %1048 = load i32, i32* %1047, align 4, !dbg !10976
  %1049 = icmp eq i32 %1043, %1048, !dbg !10979
  br i1 %1049, label %1050, label %1086, !dbg !10980

; <label>:1050:                                   ; preds = %1027
  %1051 = load %struct.in6_addr*, %struct.in6_addr** %27, align 8, !dbg !10981
  %1052 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %1051, i32 0, i32 0, !dbg !10983
  %1053 = bitcast %union.anon* %1052 to [4 x i32]*, !dbg !10984
  %1054 = getelementptr inbounds [4 x i32], [4 x i32]* %1053, i64 0, i64 1, !dbg !10981
  %1055 = load i32, i32* %1054, align 4, !dbg !10981
  %1056 = load %struct.in6_addr*, %struct.in6_addr** %28, align 8, !dbg !10985
  %1057 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %1056, i32 0, i32 0, !dbg !10986
  %1058 = bitcast %union.anon* %1057 to [4 x i32]*, !dbg !10987
  %1059 = getelementptr inbounds [4 x i32], [4 x i32]* %1058, i64 0, i64 1, !dbg !10985
  %1060 = load i32, i32* %1059, align 4, !dbg !10985
  %1061 = icmp eq i32 %1055, %1060, !dbg !10988
  br i1 %1061, label %1062, label %1086, !dbg !10989

; <label>:1062:                                   ; preds = %1050
  %1063 = load %struct.in6_addr*, %struct.in6_addr** %27, align 8, !dbg !10990
  %1064 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %1063, i32 0, i32 0, !dbg !10992
  %1065 = bitcast %union.anon* %1064 to [4 x i32]*, !dbg !10993
  %1066 = getelementptr inbounds [4 x i32], [4 x i32]* %1065, i64 0, i64 2, !dbg !10990
  %1067 = load i32, i32* %1066, align 4, !dbg !10990
  %1068 = load %struct.in6_addr*, %struct.in6_addr** %28, align 8, !dbg !10994
  %1069 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %1068, i32 0, i32 0, !dbg !10995
  %1070 = bitcast %union.anon* %1069 to [4 x i32]*, !dbg !10996
  %1071 = getelementptr inbounds [4 x i32], [4 x i32]* %1070, i64 0, i64 2, !dbg !10994
  %1072 = load i32, i32* %1071, align 4, !dbg !10994
  %1073 = icmp eq i32 %1067, %1072, !dbg !10997
  br i1 %1073, label %1074, label %1086, !dbg !10998

; <label>:1074:                                   ; preds = %1062
  %1075 = load %struct.in6_addr*, %struct.in6_addr** %27, align 8, !dbg !10999
  %1076 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %1075, i32 0, i32 0, !dbg !11001
  %1077 = bitcast %union.anon* %1076 to [4 x i32]*, !dbg !11002
  %1078 = getelementptr inbounds [4 x i32], [4 x i32]* %1077, i64 0, i64 3, !dbg !10999
  %1079 = load i32, i32* %1078, align 4, !dbg !10999
  %1080 = load %struct.in6_addr*, %struct.in6_addr** %28, align 8, !dbg !11003
  %1081 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %1080, i32 0, i32 0, !dbg !11004
  %1082 = bitcast %union.anon* %1081 to [4 x i32]*, !dbg !11005
  %1083 = getelementptr inbounds [4 x i32], [4 x i32]* %1082, i64 0, i64 3, !dbg !11003
  %1084 = load i32, i32* %1083, align 4, !dbg !11003
  %1085 = icmp eq i32 %1079, %1084, !dbg !11006
  br label %1086

; <label>:1086:                                   ; preds = %1074, %1062, %1050, %1027
  %1087 = phi i1 [ false, %1062 ], [ false, %1050 ], [ false, %1027 ], [ %1085, %1074 ]
  %1088 = zext i1 %1087 to i32, !dbg !11007
  store i32 %1088, i32* %29, align 4, !dbg !11009
  %1089 = load i32, i32* %29, align 4, !dbg !11010
  %1090 = icmp ne i32 %1089, 0, !dbg !11011
  br i1 %1090, label %1091, label %1092, !dbg !11012

; <label>:1091:                                   ; preds = %1086
  br label %1097, !dbg !11013

; <label>:1092:                                   ; preds = %1086
  br label %1093, !dbg !11014

; <label>:1093:                                   ; preds = %1092
  %1094 = load %struct._element*, %struct._element** %18, align 8, !dbg !11015
  %1095 = getelementptr inbounds %struct._element, %struct._element* %1094, i32 0, i32 0, !dbg !11017
  %1096 = load %struct._element*, %struct._element** %1095, align 8, !dbg !11017
  store %struct._element* %1096, %struct._element** %18, align 8, !dbg !11018
  br label %1024, !dbg !11019, !llvm.loop !11020

; <label>:1097:                                   ; preds = %1091, %1024
  %1098 = load %struct._element*, %struct._element** %18, align 8, !dbg !11022
  %1099 = icmp ne %struct._element* %1098, null, !dbg !11022
  br i1 %1099, label %1111, label %1100, !dbg !11024

; <label>:1100:                                   ; preds = %1097
  %1101 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !11025
  %1102 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1101, i32 0, i32 1, !dbg !11027
  %1103 = load i8*, i8** %1102, align 8, !dbg !11027
  %1104 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !11028
  %1105 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1104, i32 0, i32 19, !dbg !11029
  %1106 = bitcast %struct.sockaddr_storage* %1105 to %struct.sockaddr_in6*, !dbg !11030
  %1107 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %1106, i32 0, i32 3, !dbg !11030
  %1108 = bitcast %struct.in6_addr* %1107 to i8*, !dbg !11031
  %1109 = getelementptr inbounds [46 x i8], [46 x i8]* %19, i32 0, i32 0, !dbg !11032
  %1110 = call i8* @inet_ntop(i32 10, i8* %1108, i8* %1109, i32 46) #8, !dbg !11033
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.70, i32 0, i32 0), i8* %1103, i8* %1110), !dbg !11034
  store i32 1, i32* %5, align 4, !dbg !11035
  br label %1164, !dbg !11035

; <label>:1111:                                   ; preds = %1097
  br label %1112, !dbg !11036

; <label>:1112:                                   ; preds = %1111, %1003, %991, %986
  br label %1113

; <label>:1113:                                   ; preds = %1112, %892
  br label %1114, !dbg !11037

; <label>:1114:                                   ; preds = %1113, %722
  %1115 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !11038
  %1116 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %1115, i32 0, i32 2, !dbg !11040
  %1117 = load i8, i8* %1116, align 2, !dbg !11040
  %1118 = zext i8 %1117 to i32, !dbg !11038
  %1119 = icmp eq i32 %1118, 0, !dbg !11041
  br i1 %1119, label %1120, label %1127, !dbg !11042

; <label>:1120:                                   ; preds = %1114
  %1121 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !11043
  %1122 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1121, i32 0, i32 3, !dbg !11044
  %1123 = load %struct._vrrp_stats*, %struct._vrrp_stats** %1122, align 8, !dbg !11044
  %1124 = getelementptr inbounds %struct._vrrp_stats, %struct._vrrp_stats* %1123, i32 0, i32 12, !dbg !11045
  %1125 = load i64, i64* %1124, align 8, !dbg !11046
  %1126 = add i64 %1125, 1, !dbg !11046
  store i64 %1126, i64* %1124, align 8, !dbg !11046
  br label %1127, !dbg !11046

; <label>:1127:                                   ; preds = %1120, %1114
  %1128 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !11047
  %1129 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1128, i32 0, i32 60, !dbg !11049
  %1130 = load i32, i32* %1129, align 4, !dbg !11049
  %1131 = icmp eq i32 %1130, 3, !dbg !11050
  br i1 %1131, label %1132, label %1163, !dbg !11051

; <label>:1132:                                   ; preds = %1127
  %1133 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !11052
  %1134 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1133, i32 0, i32 55, !dbg !11054
  %1135 = load i32, i32* %1134, align 8, !dbg !11054
  %1136 = icmp eq i32 %1135, 1, !dbg !11055
  br i1 %1136, label %1137, label %1163, !dbg !11056

; <label>:1137:                                   ; preds = %1132
  %1138 = load %struct._vrrphdr*, %struct._vrrphdr** %15, align 8, !dbg !11057
  %1139 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %1138, i32 0, i32 4, !dbg !11059
  %1140 = bitcast %union.anon.2* %1139 to %struct.anon.4*, !dbg !11059
  %1141 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1140, i32 0, i32 0, !dbg !11060
  %1142 = load i16, i16* %1141, align 2, !dbg !11060
  %1143 = call zeroext i16 @ntohs(i16 zeroext %1142) #1, !dbg !11061
  %1144 = zext i16 %1143 to i32, !dbg !11061
  %1145 = and i32 %1144, 4095, !dbg !11062
  %1146 = mul i32 %1145, 10000, !dbg !11063
  store i32 %1146, i32* %13, align 4, !dbg !11064
  %1147 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !11065
  %1148 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1147, i32 0, i32 48, !dbg !11067
  %1149 = load i32, i32* %1148, align 4, !dbg !11067
  %1150 = load i32, i32* %13, align 4, !dbg !11068
  %1151 = icmp ne i32 %1149, %1150, !dbg !11069
  br i1 %1151, label %1152, label %1162, !dbg !11070

; <label>:1152:                                   ; preds = %1137
  %1153 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !11071
  %1154 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1153, i32 0, i32 1, !dbg !11073
  %1155 = load i8*, i8** %1154, align 8, !dbg !11073
  %1156 = load %struct._vrrp_t*, %struct._vrrp_t** %6, align 8, !dbg !11074
  %1157 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %1156, i32 0, i32 48, !dbg !11075
  %1158 = load i32, i32* %1157, align 4, !dbg !11075
  %1159 = udiv i32 %1158, 1000, !dbg !11076
  %1160 = load i32, i32* %13, align 4, !dbg !11077
  %1161 = udiv i32 %1160, 1000, !dbg !11078
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.72, i32 0, i32 0), i8* %1155, i32 %1159, i32 %1161), !dbg !11079
  br label %1162, !dbg !11080

; <label>:1162:                                   ; preds = %1152, %1137
  br label %1163, !dbg !11081

; <label>:1163:                                   ; preds = %1162, %1132, %1127
  store i32 0, i32* %5, align 4, !dbg !11082
  br label %1164, !dbg !11082

; <label>:1164:                                   ; preds = %1163, %1100, %960, %923, %880, %786, %716, %702, %578, %558, %536, %436, %411, %392, %371, %331, %308, %265, %237, %199, %155, %131, %58, %33
  %1165 = load i32, i32* %5, align 4, !dbg !11083
  ret i32 %1165, !dbg !11083
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: nounwind uwtable
define internal zeroext i1 @vrrp_in_chk_ipsecah(%struct._vrrp_t*, i8*) #0 !dbg !11084 {
  %3 = alloca i1, align 1
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.iphdr*, align 8
  %7 = alloca %struct._ipsec_ah*, align 8
  %8 = alloca [16 x i8], align 16
  %9 = alloca [12 x i8], align 1
  store %struct._vrrp_t* %0, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !11087, metadata !793), !dbg !11088
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11089, metadata !793), !dbg !11090
  call void @llvm.dbg.declare(metadata %struct.iphdr** %6, metadata !11091, metadata !793), !dbg !11092
  %10 = load i8*, i8** %5, align 8, !dbg !11093
  %11 = bitcast i8* %10 to %struct.iphdr*, !dbg !11094
  store %struct.iphdr* %11, %struct.iphdr** %6, align 8, !dbg !11092
  call void @llvm.dbg.declare(metadata %struct._ipsec_ah** %7, metadata !11095, metadata !793), !dbg !11096
  %12 = load %struct.iphdr*, %struct.iphdr** %6, align 8, !dbg !11097
  %13 = bitcast %struct.iphdr* %12 to i8*, !dbg !11098
  %14 = load %struct.iphdr*, %struct.iphdr** %6, align 8, !dbg !11099
  %15 = bitcast %struct.iphdr* %14 to i8*, !dbg !11100
  %16 = load i8, i8* %15, align 4, !dbg !11100
  %17 = and i8 %16, 15, !dbg !11100
  %18 = zext i8 %17 to i32, !dbg !11100
  %19 = shl i32 %18, 2, !dbg !11101
  %20 = sext i32 %19 to i64, !dbg !11102
  %21 = getelementptr inbounds i8, i8* %13, i64 %20, !dbg !11102
  %22 = bitcast i8* %21 to %struct._ipsec_ah*, !dbg !11103
  store %struct._ipsec_ah* %22, %struct._ipsec_ah** %7, align 8, !dbg !11096
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !11104, metadata !793), !dbg !11105
  call void @llvm.dbg.declare(metadata [12 x i8]* %9, metadata !11106, metadata !793), !dbg !11107
  %23 = load %struct.iphdr*, %struct.iphdr** %6, align 8, !dbg !11108
  %24 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %23, i32 0, i32 1, !dbg !11109
  store i8 0, i8* %24, align 1, !dbg !11110
  %25 = load %struct.iphdr*, %struct.iphdr** %6, align 8, !dbg !11111
  %26 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %25, i32 0, i32 4, !dbg !11112
  store i16 0, i16* %26, align 2, !dbg !11113
  %27 = load %struct.iphdr*, %struct.iphdr** %6, align 8, !dbg !11114
  %28 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %27, i32 0, i32 7, !dbg !11115
  store i16 0, i16* %28, align 2, !dbg !11116
  %29 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11117
  %30 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %29, i32 0, i32 20, !dbg !11119
  %31 = load %struct._list*, %struct._list** %30, align 8, !dbg !11119
  %32 = icmp eq %struct._list* %31, null, !dbg !11120
  br i1 %32, label %50, label %33, !dbg !11121

; <label>:33:                                     ; preds = %2
  %34 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11122
  %35 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %34, i32 0, i32 20, !dbg !11124
  %36 = load %struct._list*, %struct._list** %35, align 8, !dbg !11124
  %37 = getelementptr inbounds %struct._list, %struct._list* %36, i32 0, i32 0, !dbg !11125
  %38 = load %struct._element*, %struct._element** %37, align 8, !dbg !11125
  %39 = icmp eq %struct._element* %38, null, !dbg !11126
  br i1 %39, label %40, label %47, !dbg !11127

; <label>:40:                                     ; preds = %33
  %41 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11128
  %42 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %41, i32 0, i32 20, !dbg !11130
  %43 = load %struct._list*, %struct._list** %42, align 8, !dbg !11130
  %44 = getelementptr inbounds %struct._list, %struct._list* %43, i32 0, i32 1, !dbg !11131
  %45 = load %struct._element*, %struct._element** %44, align 8, !dbg !11131
  %46 = icmp eq %struct._element* %45, null, !dbg !11132
  br i1 %46, label %50, label %47, !dbg !11133

; <label>:47:                                     ; preds = %40, %33
  %48 = load %struct.iphdr*, %struct.iphdr** %6, align 8, !dbg !11134
  %49 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %48, i32 0, i32 5, !dbg !11135
  store i8 0, i8* %49, align 4, !dbg !11136
  br label %50, !dbg !11134

; <label>:50:                                     ; preds = %47, %40, %2
  %51 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i32 0, i32 0, !dbg !11137
  %52 = load %struct._ipsec_ah*, %struct._ipsec_ah** %7, align 8, !dbg !11138
  %53 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %52, i32 0, i32 5, !dbg !11139
  %54 = getelementptr inbounds [12 x i8], [12 x i8]* %53, i32 0, i32 0, !dbg !11137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %54, i64 12, i32 1, i1 false), !dbg !11137
  %55 = load %struct._ipsec_ah*, %struct._ipsec_ah** %7, align 8, !dbg !11140
  %56 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %55, i32 0, i32 5, !dbg !11141
  %57 = getelementptr inbounds [12 x i8], [12 x i8]* %56, i32 0, i32 0, !dbg !11142
  call void @llvm.memset.p0i8.i64(i8* %57, i8 0, i64 12, i32 4, i1 false), !dbg !11142
  %58 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !11143
  call void @llvm.memset.p0i8.i64(i8* %58, i8 0, i64 16, i32 16, i1 false), !dbg !11143
  %59 = load i8*, i8** %5, align 8, !dbg !11144
  %60 = call i64 @vrrp_iphdr_len(), !dbg !11145
  %61 = call i64 @vrrp_ipsecah_len(), !dbg !11146
  %62 = add i64 %60, %61, !dbg !11148
  %63 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11149
  %64 = call i64 @vrrp_pkt_len(%struct._vrrp_t* %63), !dbg !11150
  %65 = add i64 %62, %64, !dbg !11152
  %66 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11153
  %67 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %66, i32 0, i32 76, !dbg !11154
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %67, i32 0, i32 0, !dbg !11153
  %69 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !11155
  call void @hmac_md5(i8* %59, i64 %65, i8* %68, i64 8, i8* %69), !dbg !11156
  %70 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i32 0, i32 0, !dbg !11157
  %71 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !11159
  %72 = call i32 @memcmp(i8* %70, i8* %71, i64 12) #9, !dbg !11160
  %73 = icmp ne i32 %72, 0, !dbg !11161
  br i1 %73, label %74, label %78, !dbg !11162

; <label>:74:                                     ; preds = %50
  %75 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11163
  %76 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %75, i32 0, i32 1, !dbg !11165
  %77 = load i8*, i8** %76, align 8, !dbg !11165
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.73, i32 0, i32 0), i8* %77), !dbg !11166
  store i1 true, i1* %3, align 1, !dbg !11167
  br label %124, !dbg !11167

; <label>:78:                                     ; preds = %50
  %79 = load %struct._ipsec_ah*, %struct._ipsec_ah** %7, align 8, !dbg !11168
  %80 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %79, i32 0, i32 3, !dbg !11170
  %81 = load i32, i32* %80, align 4, !dbg !11170
  %82 = load %struct.iphdr*, %struct.iphdr** %6, align 8, !dbg !11171
  %83 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %82, i32 0, i32 8, !dbg !11172
  %84 = load i32, i32* %83, align 4, !dbg !11172
  %85 = icmp ne i32 %81, %84, !dbg !11173
  br i1 %85, label %86, label %93, !dbg !11174

; <label>:86:                                     ; preds = %78
  %87 = load %struct.iphdr*, %struct.iphdr** %6, align 8, !dbg !11175
  %88 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %87, i32 0, i32 8, !dbg !11177
  %89 = load i32, i32* %88, align 4, !dbg !11177
  %90 = load %struct._ipsec_ah*, %struct._ipsec_ah** %7, align 8, !dbg !11178
  %91 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %90, i32 0, i32 3, !dbg !11179
  %92 = load i32, i32* %91, align 4, !dbg !11179
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.74, i32 0, i32 0), i32 %89, i32 %92), !dbg !11180
  store i1 true, i1* %3, align 1, !dbg !11181
  br label %124, !dbg !11181

; <label>:93:                                     ; preds = %78
  %94 = load %struct._ipsec_ah*, %struct._ipsec_ah** %7, align 8, !dbg !11182
  %95 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %94, i32 0, i32 4, !dbg !11184
  %96 = load i32, i32* %95, align 4, !dbg !11184
  %97 = call i32 @ntohl(i32 %96) #1, !dbg !11185
  %98 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11186
  %99 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %98, i32 0, i32 77, !dbg !11187
  %100 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %99, i32 0, i32 1, !dbg !11188
  %101 = load i32, i32* %100, align 4, !dbg !11188
  %102 = icmp ugt i32 %97, %101, !dbg !11189
  br i1 %102, label %103, label %111, !dbg !11190

; <label>:103:                                    ; preds = %93
  %104 = load %struct._ipsec_ah*, %struct._ipsec_ah** %7, align 8, !dbg !11191
  %105 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %104, i32 0, i32 4, !dbg !11192
  %106 = load i32, i32* %105, align 4, !dbg !11192
  %107 = call i32 @ntohl(i32 %106) #1, !dbg !11193
  %108 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11194
  %109 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %108, i32 0, i32 77, !dbg !11195
  %110 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %109, i32 0, i32 1, !dbg !11196
  store i32 %107, i32* %110, align 4, !dbg !11197
  br label %123, !dbg !11194

; <label>:111:                                    ; preds = %93
  %112 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11198
  %113 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %112, i32 0, i32 1, !dbg !11200
  %114 = load i8*, i8** %113, align 8, !dbg !11200
  %115 = load %struct._ipsec_ah*, %struct._ipsec_ah** %7, align 8, !dbg !11201
  %116 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %115, i32 0, i32 4, !dbg !11202
  %117 = load i32, i32* %116, align 4, !dbg !11202
  %118 = call i32 @ntohl(i32 %117) #1, !dbg !11203
  %119 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11204
  %120 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %119, i32 0, i32 77, !dbg !11205
  %121 = getelementptr inbounds %struct._seq_counter, %struct._seq_counter* %120, i32 0, i32 1, !dbg !11206
  %122 = load i32, i32* %121, align 4, !dbg !11206
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.75, i32 0, i32 0), i8* %114, i32 %118, i32 %122), !dbg !11207
  store i1 true, i1* %3, align 1, !dbg !11208
  br label %124, !dbg !11208

; <label>:123:                                    ; preds = %103
  store i1 false, i1* %3, align 1, !dbg !11209
  br label %124, !dbg !11209

; <label>:124:                                    ; preds = %123, %111, %86, %74
  %125 = load i1, i1* %3, align 1, !dbg !11210
  ret i1 %125, !dbg !11210
}

declare zeroext i16 @in_csum(i16*, i64, i32, i32*) #3

; Function Attrs: nounwind uwtable
define internal void @vrrp_csum_mcast(%struct._vrrp_t*) #0 !dbg !11211 {
  %2 = alloca %struct._vrrp_t*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct._vrrphdr*, align 8
  %5 = alloca %struct.iphdr*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !11212, metadata !793), !dbg !11213
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11214, metadata !793), !dbg !11215
  %6 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11216
  %7 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %6, i32 0, i32 72, !dbg !11217
  %8 = load i8*, i8** %7, align 8, !dbg !11217
  store i8* %8, i8** %3, align 8, !dbg !11215
  call void @llvm.dbg.declare(metadata %struct._vrrphdr** %4, metadata !11218, metadata !793), !dbg !11219
  %9 = call i64 @vrrp_iphdr_len(), !dbg !11220
  %10 = load i8*, i8** %3, align 8, !dbg !11221
  %11 = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !11221
  store i8* %11, i8** %3, align 8, !dbg !11221
  %12 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11222
  %13 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %12, i32 0, i32 75, !dbg !11224
  %14 = load i8, i8* %13, align 4, !dbg !11224
  %15 = zext i8 %14 to i32, !dbg !11222
  %16 = icmp eq i32 %15, 2, !dbg !11225
  br i1 %16, label %17, label %21, !dbg !11226

; <label>:17:                                     ; preds = %1
  %18 = call i64 @vrrp_ipsecah_len(), !dbg !11227
  %19 = load i8*, i8** %3, align 8, !dbg !11228
  %20 = getelementptr inbounds i8, i8* %19, i64 %18, !dbg !11228
  store i8* %20, i8** %3, align 8, !dbg !11228
  br label %21, !dbg !11229

; <label>:21:                                     ; preds = %17, %1
  %22 = load i8*, i8** %3, align 8, !dbg !11230
  %23 = bitcast i8* %22 to %struct._vrrphdr*, !dbg !11231
  store %struct._vrrphdr* %23, %struct._vrrphdr** %4, align 8, !dbg !11232
  call void @llvm.dbg.declare(metadata %struct.iphdr** %5, metadata !11233, metadata !793), !dbg !11234
  %24 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11235
  %25 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %24, i32 0, i32 72, !dbg !11236
  %26 = load i8*, i8** %25, align 8, !dbg !11236
  %27 = bitcast i8* %26 to %struct.iphdr*, !dbg !11237
  store %struct.iphdr* %27, %struct.iphdr** %5, align 8, !dbg !11234
  %28 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11238
  %29 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %28, i32 0, i32 21, !dbg !11240
  %30 = load i32, i32* %29, align 8, !dbg !11240
  %31 = icmp eq i32 %30, 4, !dbg !11241
  br i1 %31, label %32, label %57, !dbg !11242

; <label>:32:                                     ; preds = %21
  %33 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11243
  %34 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %33, i32 0, i32 9, !dbg !11244
  %35 = load i32, i32* %34, align 4, !dbg !11244
  %36 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !11245
  %37 = getelementptr inbounds %struct._data, %struct._data* %36, i32 0, i32 22, !dbg !11246
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %37, i32 0, i32 2, !dbg !11247
  %39 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %38, i32 0, i32 0, !dbg !11248
  %40 = load i32, i32* %39, align 4, !dbg !11248
  %41 = icmp ne i32 %35, %40, !dbg !11249
  br i1 %41, label %42, label %57, !dbg !11250

; <label>:42:                                     ; preds = %32
  %43 = load %struct._vrrphdr*, %struct._vrrphdr** %4, align 8, !dbg !11252
  %44 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %43, i32 0, i32 5, !dbg !11254
  %45 = load i16, i16* %44, align 2, !dbg !11254
  %46 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11255
  %47 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %46, i32 0, i32 9, !dbg !11256
  %48 = load i32, i32* %47, align 4, !dbg !11256
  %49 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !11257
  %50 = getelementptr inbounds %struct._data, %struct._data* %49, i32 0, i32 22, !dbg !11258
  %51 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %50, i32 0, i32 2, !dbg !11259
  %52 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %51, i32 0, i32 0, !dbg !11260
  %53 = load i32, i32* %52, align 4, !dbg !11260
  %54 = call zeroext i16 @csum_incremental_update32(i16 zeroext %45, i32 %48, i32 %53), !dbg !11261
  %55 = load %struct._vrrphdr*, %struct._vrrphdr** %4, align 8, !dbg !11262
  %56 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %55, i32 0, i32 5, !dbg !11263
  store i16 %54, i16* %56, align 2, !dbg !11264
  br label %57, !dbg !11265

; <label>:57:                                     ; preds = %42, %32, %21
  ret void, !dbg !11266
}

; Function Attrs: nounwind uwtable
define internal i32 @vrrp_in_chk_vips(%struct._vrrp_t*, %struct._ip_address*, i8*) #0 !dbg !11267 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._vrrp_t*, align 8
  %6 = alloca %struct._ip_address*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %5, metadata !11270, metadata !793), !dbg !11271
  store %struct._ip_address* %1, %struct._ip_address** %6, align 8
  call void @llvm.dbg.declare(metadata %struct._ip_address** %6, metadata !11272, metadata !793), !dbg !11273
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11274, metadata !793), !dbg !11275
  call void @llvm.dbg.declare(metadata i64* %8, metadata !11276, metadata !793), !dbg !11277
  %9 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !11278
  %10 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %9, i32 0, i32 0, !dbg !11280
  %11 = load i16, i16* %10, align 8, !dbg !11280
  %12 = zext i16 %11 to i32, !dbg !11278
  %13 = icmp eq i32 %12, 2, !dbg !11281
  br i1 %13, label %14, label %43, !dbg !11282

; <label>:14:                                     ; preds = %3
  store i64 0, i64* %8, align 8, !dbg !11283
  br label %15, !dbg !11286

; <label>:15:                                     ; preds = %39, %14
  %16 = load i64, i64* %8, align 8, !dbg !11287
  %17 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !11290
  %18 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %17, i32 0, i32 41, !dbg !11291
  %19 = load %struct._list*, %struct._list** %18, align 8, !dbg !11291
  %20 = getelementptr inbounds %struct._list, %struct._list* %19, i32 0, i32 2, !dbg !11292
  %21 = load i32, i32* %20, align 8, !dbg !11292
  %22 = zext i32 %21 to i64, !dbg !11293
  %23 = icmp ult i64 %16, %22, !dbg !11294
  br i1 %23, label %24, label %42, !dbg !11295

; <label>:24:                                     ; preds = %15
  %25 = load %struct._ip_address*, %struct._ip_address** %6, align 8, !dbg !11296
  %26 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %25, i32 0, i32 1, !dbg !11299
  %27 = bitcast %union.anon.5* %26 to %struct.anon.6*, !dbg !11300
  %28 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %27, i32 0, i32 0, !dbg !11301
  %29 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %28, i32 0, i32 0, !dbg !11302
  %30 = bitcast i32* %29 to i8*, !dbg !11303
  %31 = load i8*, i8** %7, align 8, !dbg !11304
  %32 = load i64, i64* %8, align 8, !dbg !11305
  %33 = mul i64 %32, 4, !dbg !11306
  %34 = getelementptr inbounds i8, i8* %31, i64 %33, !dbg !11307
  %35 = call i32 @memcmp(i8* %30, i8* %34, i64 4) #9, !dbg !11308
  %36 = icmp ne i32 %35, 0, !dbg !11308
  br i1 %36, label %38, label %37, !dbg !11309

; <label>:37:                                     ; preds = %24
  store i32 1, i32* %4, align 4, !dbg !11310
  br label %78, !dbg !11310

; <label>:38:                                     ; preds = %24
  br label %39, !dbg !11311

; <label>:39:                                     ; preds = %38
  %40 = load i64, i64* %8, align 8, !dbg !11312
  %41 = add i64 %40, 1, !dbg !11312
  store i64 %41, i64* %8, align 8, !dbg !11312
  br label %15, !dbg !11314, !llvm.loop !11315

; <label>:42:                                     ; preds = %15
  br label %77, !dbg !11317

; <label>:43:                                     ; preds = %3
  %44 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !11318
  %45 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %44, i32 0, i32 0, !dbg !11321
  %46 = load i16, i16* %45, align 8, !dbg !11321
  %47 = zext i16 %46 to i32, !dbg !11318
  %48 = icmp eq i32 %47, 10, !dbg !11322
  br i1 %48, label %49, label %76, !dbg !11318

; <label>:49:                                     ; preds = %43
  store i64 0, i64* %8, align 8, !dbg !11323
  br label %50, !dbg !11326

; <label>:50:                                     ; preds = %72, %49
  %51 = load i64, i64* %8, align 8, !dbg !11327
  %52 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !11330
  %53 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %52, i32 0, i32 41, !dbg !11331
  %54 = load %struct._list*, %struct._list** %53, align 8, !dbg !11331
  %55 = getelementptr inbounds %struct._list, %struct._list* %54, i32 0, i32 2, !dbg !11332
  %56 = load i32, i32* %55, align 8, !dbg !11332
  %57 = zext i32 %56 to i64, !dbg !11333
  %58 = icmp ult i64 %51, %57, !dbg !11334
  br i1 %58, label %59, label %75, !dbg !11335

; <label>:59:                                     ; preds = %50
  %60 = load %struct._ip_address*, %struct._ip_address** %6, align 8, !dbg !11336
  %61 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %60, i32 0, i32 1, !dbg !11339
  %62 = bitcast %union.anon.5* %61 to %struct.in6_addr*, !dbg !11340
  %63 = bitcast %struct.in6_addr* %62 to i8*, !dbg !11341
  %64 = load i8*, i8** %7, align 8, !dbg !11342
  %65 = load i64, i64* %8, align 8, !dbg !11343
  %66 = mul i64 %65, 16, !dbg !11344
  %67 = getelementptr inbounds i8, i8* %64, i64 %66, !dbg !11345
  %68 = call i32 @memcmp(i8* %63, i8* %67, i64 16) #9, !dbg !11346
  %69 = icmp ne i32 %68, 0, !dbg !11346
  br i1 %69, label %71, label %70, !dbg !11347

; <label>:70:                                     ; preds = %59
  store i32 1, i32* %4, align 4, !dbg !11348
  br label %78, !dbg !11348

; <label>:71:                                     ; preds = %59
  br label %72, !dbg !11349

; <label>:72:                                     ; preds = %71
  %73 = load i64, i64* %8, align 8, !dbg !11350
  %74 = add i64 %73, 1, !dbg !11350
  store i64 %74, i64* %8, align 8, !dbg !11350
  br label %50, !dbg !11352, !llvm.loop !11353

; <label>:75:                                     ; preds = %50
  br label %76, !dbg !11355

; <label>:76:                                     ; preds = %75, %43
  br label %77

; <label>:77:                                     ; preds = %76, %42
  store i32 0, i32* %4, align 4, !dbg !11356
  br label %78, !dbg !11356

; <label>:78:                                     ; preds = %77, %70, %37
  %79 = load i32, i32* %4, align 4, !dbg !11357
  ret i32 %79, !dbg !11357
}

declare i8* @inet_ntop2(i32) #3

declare void @kernel_netlink_poll() #3

declare zeroext i1 @get_ipv6_forwarding(%struct._interface*) #3

declare void @ipvs_syncd_master(%struct.lvs_syncd_config*) #3

declare i32 @inet_sockaddrcmp(%struct.sockaddr_storage*, %struct.sockaddr_storage*) #3

declare i32 @inet_inaddrcmp(i32, i8*, i8*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.magic_set* @ka_magic_open() #2 !dbg !11358 {
  %1 = alloca %struct.magic_set*, align 8
  call void @llvm.dbg.declare(metadata %struct.magic_set** %1, metadata !11362, metadata !793), !dbg !11363
  %2 = call %struct.magic_set* @magic_open(i32 266880), !dbg !11364
  store %struct.magic_set* %2, %struct.magic_set** %1, align 8, !dbg !11363
  %3 = load %struct.magic_set*, %struct.magic_set** %1, align 8, !dbg !11365
  %4 = icmp ne %struct.magic_set* %3, null, !dbg !11365
  br i1 %4, label %6, label %5, !dbg !11367

; <label>:5:                                      ; preds = %0
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i32 0, i32 0)), !dbg !11368
  br label %13, !dbg !11368

; <label>:6:                                      ; preds = %0
  %7 = load %struct.magic_set*, %struct.magic_set** %1, align 8, !dbg !11369
  %8 = call i32 @magic_load(%struct.magic_set* %7, i8* null), !dbg !11371
  %9 = icmp ne i32 %8, 0, !dbg !11371
  br i1 %9, label %10, label %12, !dbg !11372

; <label>:10:                                     ; preds = %6
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i32 0, i32 0)), !dbg !11373
  %11 = load %struct.magic_set*, %struct.magic_set** %1, align 8, !dbg !11375
  call void @magic_close(%struct.magic_set* %11), !dbg !11376
  store %struct.magic_set* null, %struct.magic_set** %1, align 8, !dbg !11377
  br label %12, !dbg !11378

; <label>:12:                                     ; preds = %10, %6
  br label %13

; <label>:13:                                     ; preds = %12, %5
  %14 = load %struct.magic_set*, %struct.magic_set** %1, align 8, !dbg !11379
  ret %struct.magic_set* %14, !dbg !11380
}

; Function Attrs: nounwind uwtable
define internal i32 @check_track_script_secure(%struct._vrrp_script*, %struct.magic_set*) #0 !dbg !11381 {
  %3 = alloca i32, align 4
  %4 = alloca %struct._vrrp_script*, align 8
  %5 = alloca %struct.magic_set*, align 8
  %6 = alloca i32, align 4
  store %struct._vrrp_script* %0, %struct._vrrp_script** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_script** %4, metadata !11384, metadata !793), !dbg !11385
  store %struct.magic_set* %1, %struct.magic_set** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.magic_set** %5, metadata !11386, metadata !793), !dbg !11387
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11388, metadata !793), !dbg !11389
  %7 = load %struct._vrrp_script*, %struct._vrrp_script** %4, align 8, !dbg !11390
  %8 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %7, i32 0, i32 12, !dbg !11392
  %9 = load i8, i8* %8, align 4, !dbg !11392
  %10 = trunc i8 %9 to i1, !dbg !11392
  br i1 %10, label %11, label %12, !dbg !11393

; <label>:11:                                     ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !11394
  br label %47, !dbg !11394

; <label>:12:                                     ; preds = %2
  %13 = load %struct._vrrp_script*, %struct._vrrp_script** %4, align 8, !dbg !11395
  %14 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %13, i32 0, i32 1, !dbg !11396
  %15 = load %struct.magic_set*, %struct.magic_set** %5, align 8, !dbg !11397
  %16 = call i32 @check_script_secure(%struct._notify_script* %14, %struct.magic_set* %15), !dbg !11398
  store i32 %16, i32* %6, align 4, !dbg !11399
  %17 = load i32, i32* %6, align 4, !dbg !11400
  %18 = and i32 %17, 4, !dbg !11402
  %19 = icmp ne i32 %18, 0, !dbg !11402
  br i1 %19, label %20, label %26, !dbg !11403

; <label>:20:                                     ; preds = %12
  %21 = load %struct._vrrp_script*, %struct._vrrp_script** %4, align 8, !dbg !11404
  %22 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %21, i32 0, i32 0, !dbg !11406
  %23 = load i8*, i8** %22, align 8, !dbg !11406
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.81, i32 0, i32 0), i8* %23), !dbg !11407
  %24 = load %struct._vrrp_script*, %struct._vrrp_script** %4, align 8, !dbg !11408
  %25 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %24, i32 0, i32 12, !dbg !11409
  store i8 1, i8* %25, align 4, !dbg !11410
  br label %45, !dbg !11411

; <label>:26:                                     ; preds = %12
  %27 = load i32, i32* %6, align 4, !dbg !11412
  %28 = and i32 %27, 8, !dbg !11414
  %29 = icmp ne i32 %28, 0, !dbg !11414
  br i1 %29, label %30, label %36, !dbg !11415

; <label>:30:                                     ; preds = %26
  %31 = load %struct._vrrp_script*, %struct._vrrp_script** %4, align 8, !dbg !11416
  %32 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %31, i32 0, i32 0, !dbg !11418
  %33 = load i8*, i8** %32, align 8, !dbg !11418
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.82, i32 0, i32 0), i8* %33), !dbg !11419
  %34 = load %struct._vrrp_script*, %struct._vrrp_script** %4, align 8, !dbg !11420
  %35 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %34, i32 0, i32 12, !dbg !11421
  store i8 1, i8* %35, align 4, !dbg !11422
  br label %44, !dbg !11423

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* %6, align 4, !dbg !11424
  %38 = and i32 %37, 80, !dbg !11426
  %39 = icmp ne i32 %38, 0, !dbg !11426
  br i1 %39, label %43, label %40, !dbg !11427

; <label>:40:                                     ; preds = %36
  %41 = load %struct._vrrp_script*, %struct._vrrp_script** %4, align 8, !dbg !11428
  %42 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %41, i32 0, i32 12, !dbg !11429
  store i8 1, i8* %42, align 4, !dbg !11430
  br label %43, !dbg !11428

; <label>:43:                                     ; preds = %40, %36
  br label %44

; <label>:44:                                     ; preds = %43, %30
  br label %45

; <label>:45:                                     ; preds = %44, %20
  %46 = load i32, i32* %6, align 4, !dbg !11431
  store i32 %46, i32* %3, align 4, !dbg !11432
  br label %47, !dbg !11432

; <label>:47:                                     ; preds = %45, %11
  %48 = load i32, i32* %3, align 4, !dbg !11433
  ret i32 %48, !dbg !11433
}

declare i32 @check_notify_script_secure(%struct._notify_script**, %struct.magic_set*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @ka_magic_close(%struct.magic_set*) #2 !dbg !11434 {
  %2 = alloca %struct.magic_set*, align 8
  store %struct.magic_set* %0, %struct.magic_set** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.magic_set** %2, metadata !11437, metadata !793), !dbg !11438
  %3 = load %struct.magic_set*, %struct.magic_set** %2, align 8, !dbg !11439
  call void @magic_close(%struct.magic_set* %3), !dbg !11440
  ret void, !dbg !11441
}

declare %struct.magic_set* @magic_open(i32) #3

declare i32 @magic_load(%struct.magic_set*, i8*) #3

declare void @magic_close(%struct.magic_set*) #3

declare i32 @check_script_secure(%struct._notify_script*, %struct.magic_set*) #3

; Function Attrs: nounwind uwtable
define internal zeroext i1 @chk_min_cfg(%struct._vrrp_t*) #0 !dbg !11442 {
  %2 = alloca i1, align 1
  %3 = alloca %struct._vrrp_t*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !11443, metadata !793), !dbg !11444
  %4 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11445
  %5 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %4, i32 0, i32 36, !dbg !11447
  %6 = load i8, i8* %5, align 4, !dbg !11447
  %7 = zext i8 %6 to i32, !dbg !11445
  %8 = icmp eq i32 %7, 0, !dbg !11448
  br i1 %8, label %9, label %13, !dbg !11449

; <label>:9:                                      ; preds = %1
  %10 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11450
  %11 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %10, i32 0, i32 1, !dbg !11452
  %12 = load i8*, i8** %11, align 8, !dbg !11452
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.134, i32 0, i32 0), i8* %12), !dbg !11453
  store i1 false, i1* %2, align 1, !dbg !11454
  br label %23, !dbg !11454

; <label>:13:                                     ; preds = %1
  %14 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11455
  %15 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %14, i32 0, i32 4, !dbg !11457
  %16 = load %struct._interface*, %struct._interface** %15, align 8, !dbg !11457
  %17 = icmp ne %struct._interface* %16, null, !dbg !11455
  br i1 %17, label %22, label %18, !dbg !11458

; <label>:18:                                     ; preds = %13
  %19 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11459
  %20 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %19, i32 0, i32 1, !dbg !11461
  %21 = load i8*, i8** %20, align 8, !dbg !11461
  call void (i32, i8*, ...) @report_config_error(i32 11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.135, i32 0, i32 0), i8* %21), !dbg !11462
  store i1 false, i1* %2, align 1, !dbg !11463
  br label %23, !dbg !11463

; <label>:22:                                     ; preds = %13
  store i1 true, i1* %2, align 1, !dbg !11464
  br label %23, !dbg !11464

; <label>:23:                                     ; preds = %22, %18, %9
  %24 = load i1, i1* %2, align 1, !dbg !11465
  ret i1 %24, !dbg !11465
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__clear_bit(i32, i64*) #2 !dbg !11466 {
  %3 = alloca i32, align 4
  %4 = alloca i64*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11470, metadata !793), !dbg !11471
  store i64* %1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !11472, metadata !793), !dbg !11473
  %5 = load i32, i32* %3, align 4, !dbg !11474
  %6 = zext i32 %5 to i64, !dbg !11475
  %7 = urem i64 %6, 64, !dbg !11476
  %8 = shl i64 1, %7, !dbg !11477
  %9 = xor i64 %8, -1, !dbg !11478
  %10 = load i32, i32* %3, align 4, !dbg !11479
  %11 = zext i32 %10 to i64, !dbg !11480
  %12 = udiv i64 %11, 64, !dbg !11481
  %13 = load i64*, i64** %4, align 8, !dbg !11482
  %14 = getelementptr inbounds i64, i64* %13, i64 %12, !dbg !11482
  %15 = load i64, i64* %14, align 8, !dbg !11483
  %16 = and i64 %15, %9, !dbg !11483
  store i64 %16, i64* %14, align 8, !dbg !11483
  ret void, !dbg !11484
}

declare void @list_del(%struct._list*, i8*) #3

declare void @free_ipaddress(i8*) #3

declare void @dump_ipaddress(%struct._IO_FILE*, i8*) #3

declare %struct._list* @get_if_list() #3

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #6

; Function Attrs: inlinehint nounwind uwtable
define internal void @__set_bit(i32, i64*) #2 !dbg !11485 {
  %3 = alloca i32, align 4
  %4 = alloca i64*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11486, metadata !793), !dbg !11487
  store i64* %1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata i64** %4, metadata !11488, metadata !793), !dbg !11489
  %5 = load i32, i32* %3, align 4, !dbg !11490
  %6 = zext i32 %5 to i64, !dbg !11491
  %7 = urem i64 %6, 64, !dbg !11492
  %8 = shl i64 1, %7, !dbg !11493
  %9 = load i32, i32* %3, align 4, !dbg !11494
  %10 = zext i32 %9 to i64, !dbg !11495
  %11 = udiv i64 %10, 64, !dbg !11496
  %12 = load i64*, i64** %4, align 8, !dbg !11497
  %13 = getelementptr inbounds i64, i64* %12, i64 %11, !dbg !11497
  %14 = load i64, i64* %13, align 8, !dbg !11498
  %15 = or i64 %14, %8, !dbg !11498
  store i64 %15, i64* %13, align 8, !dbg !11498
  ret void, !dbg !11499
}

declare %struct._interface* @if_get_by_ifname(i8*, i32) #3

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #6

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #6

declare void @inet_ip4tosockaddr(%struct.in_addr*, %struct.sockaddr_storage*) #3

declare void @inet_ip6tosockaddr(%struct.in6_addr*, %struct.sockaddr_storage*) #3

declare zeroext i1 @netlink_link_add_vmac(%struct._vrrp_t*) #3

declare void @free_list(%struct._list**) #3

; Function Attrs: nounwind uwtable
define internal void @add_vrrp_to_track_script(%struct._vrrp_t*, %struct._tracked_sc*) #0 !dbg !11500 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca %struct._tracked_sc*, align 8
  %5 = alloca %struct._tracking_vrrp*, align 8
  %6 = alloca %struct._tracking_vrrp*, align 8
  %7 = alloca %struct._element*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !11503, metadata !793), !dbg !11504
  store %struct._tracked_sc* %1, %struct._tracked_sc** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._tracked_sc** %4, metadata !11505, metadata !793), !dbg !11506
  call void @llvm.dbg.declare(metadata %struct._tracking_vrrp** %5, metadata !11507, metadata !793), !dbg !11508
  call void @llvm.dbg.declare(metadata %struct._tracking_vrrp** %6, metadata !11509, metadata !793), !dbg !11510
  call void @llvm.dbg.declare(metadata %struct._element** %7, metadata !11511, metadata !793), !dbg !11512
  %8 = load %struct._tracked_sc*, %struct._tracked_sc** %4, align 8, !dbg !11513
  %9 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %8, i32 0, i32 0, !dbg !11515
  %10 = load %struct._vrrp_script*, %struct._vrrp_script** %9, align 8, !dbg !11515
  %11 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %10, i32 0, i32 8, !dbg !11516
  %12 = load %struct._list*, %struct._list** %11, align 8, !dbg !11516
  %13 = icmp ne %struct._list* %12, null, !dbg !11517
  br i1 %13, label %20, label %14, !dbg !11518

; <label>:14:                                     ; preds = %2
  %15 = call %struct._list* @alloc_list(void (i8*)* @free_tracking_vrrp, void (%struct._IO_FILE*, i8*)* @dump_tracking_vrrp), !dbg !11519
  %16 = load %struct._tracked_sc*, %struct._tracked_sc** %4, align 8, !dbg !11520
  %17 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %16, i32 0, i32 0, !dbg !11521
  %18 = load %struct._vrrp_script*, %struct._vrrp_script** %17, align 8, !dbg !11521
  %19 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %18, i32 0, i32 8, !dbg !11522
  store %struct._list* %15, %struct._list** %19, align 8, !dbg !11523
  br label %77, !dbg !11520

; <label>:20:                                     ; preds = %2
  %21 = load %struct._tracked_sc*, %struct._tracked_sc** %4, align 8, !dbg !11524
  %22 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %21, i32 0, i32 0, !dbg !11527
  %23 = load %struct._vrrp_script*, %struct._vrrp_script** %22, align 8, !dbg !11527
  %24 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %23, i32 0, i32 8, !dbg !11528
  %25 = load %struct._list*, %struct._list** %24, align 8, !dbg !11528
  %26 = icmp ne %struct._list* %25, null, !dbg !11529
  br i1 %26, label %28, label %27, !dbg !11530

; <label>:27:                                     ; preds = %20
  br label %36, !dbg !11531

; <label>:28:                                     ; preds = %20
  %29 = load %struct._tracked_sc*, %struct._tracked_sc** %4, align 8, !dbg !11533
  %30 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %29, i32 0, i32 0, !dbg !11535
  %31 = load %struct._vrrp_script*, %struct._vrrp_script** %30, align 8, !dbg !11535
  %32 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %31, i32 0, i32 8, !dbg !11536
  %33 = load %struct._list*, %struct._list** %32, align 8, !dbg !11536
  %34 = getelementptr inbounds %struct._list, %struct._list* %33, i32 0, i32 0, !dbg !11537
  %35 = load %struct._element*, %struct._element** %34, align 8, !dbg !11537
  br label %36, !dbg !11538

; <label>:36:                                     ; preds = %28, %27
  %37 = phi %struct._element* [ null, %27 ], [ %35, %28 ], !dbg !11539
  store %struct._element* %37, %struct._element** %7, align 8, !dbg !11541
  br label %38, !dbg !11542

; <label>:38:                                     ; preds = %72, %36
  %39 = load %struct._element*, %struct._element** %7, align 8, !dbg !11543
  %40 = icmp ne %struct._element* %39, null, !dbg !11546
  br i1 %40, label %41, label %76, !dbg !11546

; <label>:41:                                     ; preds = %38
  %42 = load %struct._element*, %struct._element** %7, align 8, !dbg !11547
  %43 = getelementptr inbounds %struct._element, %struct._element* %42, i32 0, i32 2, !dbg !11549
  %44 = load i8*, i8** %43, align 8, !dbg !11549
  %45 = bitcast i8* %44 to %struct._tracking_vrrp*, !dbg !11550
  store %struct._tracking_vrrp* %45, %struct._tracking_vrrp** %6, align 8, !dbg !11551
  %46 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %6, align 8, !dbg !11552
  %47 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %46, i32 0, i32 1, !dbg !11554
  %48 = load %struct._vrrp_t*, %struct._vrrp_t** %47, align 8, !dbg !11554
  %49 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11555
  %50 = icmp eq %struct._vrrp_t* %48, %49, !dbg !11556
  br i1 %50, label %51, label %71, !dbg !11557

; <label>:51:                                     ; preds = %41
  %52 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11558
  %53 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %52, i32 0, i32 1, !dbg !11560
  %54 = load i8*, i8** %53, align 8, !dbg !11560
  %55 = load %struct._tracked_sc*, %struct._tracked_sc** %4, align 8, !dbg !11561
  %56 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %55, i32 0, i32 0, !dbg !11562
  %57 = load %struct._vrrp_script*, %struct._vrrp_script** %56, align 8, !dbg !11562
  %58 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %57, i32 0, i32 0, !dbg !11563
  %59 = load i8*, i8** %58, align 8, !dbg !11563
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.136, i32 0, i32 0), i8* %54, i8* %59), !dbg !11564
  %60 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %6, align 8, !dbg !11565
  %61 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %60, i32 0, i32 0, !dbg !11567
  %62 = load i32, i32* %61, align 8, !dbg !11567
  %63 = icmp ne i32 %62, 0, !dbg !11565
  br i1 %63, label %64, label %70, !dbg !11568

; <label>:64:                                     ; preds = %51
  %65 = load %struct._tracked_sc*, %struct._tracked_sc** %4, align 8, !dbg !11569
  %66 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %65, i32 0, i32 1, !dbg !11570
  %67 = load i32, i32* %66, align 8, !dbg !11570
  %68 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %6, align 8, !dbg !11571
  %69 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %68, i32 0, i32 0, !dbg !11572
  store i32 %67, i32* %69, align 8, !dbg !11573
  br label %70, !dbg !11571

; <label>:70:                                     ; preds = %64, %51
  br label %95, !dbg !11574

; <label>:71:                                     ; preds = %41
  br label %72, !dbg !11575

; <label>:72:                                     ; preds = %71
  %73 = load %struct._element*, %struct._element** %7, align 8, !dbg !11576
  %74 = getelementptr inbounds %struct._element, %struct._element* %73, i32 0, i32 0, !dbg !11578
  %75 = load %struct._element*, %struct._element** %74, align 8, !dbg !11578
  store %struct._element* %75, %struct._element** %7, align 8, !dbg !11579
  br label %38, !dbg !11580, !llvm.loop !11581

; <label>:76:                                     ; preds = %38
  br label %77

; <label>:77:                                     ; preds = %76, %14
  %78 = call i8* @zalloc(i64 24), !dbg !11583
  %79 = bitcast i8* %78 to %struct._tracking_vrrp*, !dbg !11584
  store %struct._tracking_vrrp* %79, %struct._tracking_vrrp** %5, align 8, !dbg !11585
  %80 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11586
  %81 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %5, align 8, !dbg !11587
  %82 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %81, i32 0, i32 1, !dbg !11588
  store %struct._vrrp_t* %80, %struct._vrrp_t** %82, align 8, !dbg !11589
  %83 = load %struct._tracked_sc*, %struct._tracked_sc** %4, align 8, !dbg !11590
  %84 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %83, i32 0, i32 1, !dbg !11591
  %85 = load i32, i32* %84, align 8, !dbg !11591
  %86 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %5, align 8, !dbg !11592
  %87 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %86, i32 0, i32 0, !dbg !11593
  store i32 %85, i32* %87, align 8, !dbg !11594
  %88 = load %struct._tracked_sc*, %struct._tracked_sc** %4, align 8, !dbg !11595
  %89 = getelementptr inbounds %struct._tracked_sc, %struct._tracked_sc* %88, i32 0, i32 0, !dbg !11596
  %90 = load %struct._vrrp_script*, %struct._vrrp_script** %89, align 8, !dbg !11596
  %91 = getelementptr inbounds %struct._vrrp_script, %struct._vrrp_script* %90, i32 0, i32 8, !dbg !11597
  %92 = load %struct._list*, %struct._list** %91, align 8, !dbg !11597
  %93 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %5, align 8, !dbg !11598
  %94 = bitcast %struct._tracking_vrrp* %93 to i8*, !dbg !11598
  call void @list_add(%struct._list* %92, i8* %94), !dbg !11599
  br label %95, !dbg !11600

; <label>:95:                                     ; preds = %77, %70
  ret void, !dbg !11601
}

; Function Attrs: nounwind uwtable
define internal void @add_vrrp_to_track_file(%struct._vrrp_t*, %struct._tracked_file*) #0 !dbg !11603 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca %struct._tracked_file*, align 8
  %5 = alloca %struct._tracking_vrrp*, align 8
  %6 = alloca %struct._tracking_vrrp*, align 8
  %7 = alloca %struct._element*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !11606, metadata !793), !dbg !11607
  store %struct._tracked_file* %1, %struct._tracked_file** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._tracked_file** %4, metadata !11608, metadata !793), !dbg !11609
  call void @llvm.dbg.declare(metadata %struct._tracking_vrrp** %5, metadata !11610, metadata !793), !dbg !11611
  call void @llvm.dbg.declare(metadata %struct._tracking_vrrp** %6, metadata !11612, metadata !793), !dbg !11613
  call void @llvm.dbg.declare(metadata %struct._element** %7, metadata !11614, metadata !793), !dbg !11615
  %8 = load %struct._tracked_file*, %struct._tracked_file** %4, align 8, !dbg !11616
  %9 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %8, i32 0, i32 0, !dbg !11618
  %10 = load %struct._vrrp_file*, %struct._vrrp_file** %9, align 8, !dbg !11618
  %11 = getelementptr inbounds %struct._vrrp_file, %struct._vrrp_file* %10, i32 0, i32 5, !dbg !11619
  %12 = load %struct._list*, %struct._list** %11, align 8, !dbg !11619
  %13 = icmp ne %struct._list* %12, null, !dbg !11620
  br i1 %13, label %20, label %14, !dbg !11621

; <label>:14:                                     ; preds = %2
  %15 = call %struct._list* @alloc_list(void (i8*)* @free_tracking_vrrp, void (%struct._IO_FILE*, i8*)* @dump_tracking_vrrp), !dbg !11622
  %16 = load %struct._tracked_file*, %struct._tracked_file** %4, align 8, !dbg !11623
  %17 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %16, i32 0, i32 0, !dbg !11624
  %18 = load %struct._vrrp_file*, %struct._vrrp_file** %17, align 8, !dbg !11624
  %19 = getelementptr inbounds %struct._vrrp_file, %struct._vrrp_file* %18, i32 0, i32 5, !dbg !11625
  store %struct._list* %15, %struct._list** %19, align 8, !dbg !11626
  br label %77, !dbg !11623

; <label>:20:                                     ; preds = %2
  %21 = load %struct._tracked_file*, %struct._tracked_file** %4, align 8, !dbg !11627
  %22 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %21, i32 0, i32 0, !dbg !11630
  %23 = load %struct._vrrp_file*, %struct._vrrp_file** %22, align 8, !dbg !11630
  %24 = getelementptr inbounds %struct._vrrp_file, %struct._vrrp_file* %23, i32 0, i32 5, !dbg !11631
  %25 = load %struct._list*, %struct._list** %24, align 8, !dbg !11631
  %26 = icmp ne %struct._list* %25, null, !dbg !11632
  br i1 %26, label %28, label %27, !dbg !11633

; <label>:27:                                     ; preds = %20
  br label %36, !dbg !11634

; <label>:28:                                     ; preds = %20
  %29 = load %struct._tracked_file*, %struct._tracked_file** %4, align 8, !dbg !11636
  %30 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %29, i32 0, i32 0, !dbg !11638
  %31 = load %struct._vrrp_file*, %struct._vrrp_file** %30, align 8, !dbg !11638
  %32 = getelementptr inbounds %struct._vrrp_file, %struct._vrrp_file* %31, i32 0, i32 5, !dbg !11639
  %33 = load %struct._list*, %struct._list** %32, align 8, !dbg !11639
  %34 = getelementptr inbounds %struct._list, %struct._list* %33, i32 0, i32 0, !dbg !11640
  %35 = load %struct._element*, %struct._element** %34, align 8, !dbg !11640
  br label %36, !dbg !11641

; <label>:36:                                     ; preds = %28, %27
  %37 = phi %struct._element* [ null, %27 ], [ %35, %28 ], !dbg !11642
  store %struct._element* %37, %struct._element** %7, align 8, !dbg !11644
  br label %38, !dbg !11645

; <label>:38:                                     ; preds = %72, %36
  %39 = load %struct._element*, %struct._element** %7, align 8, !dbg !11646
  %40 = icmp ne %struct._element* %39, null, !dbg !11649
  br i1 %40, label %41, label %76, !dbg !11649

; <label>:41:                                     ; preds = %38
  %42 = load %struct._element*, %struct._element** %7, align 8, !dbg !11650
  %43 = getelementptr inbounds %struct._element, %struct._element* %42, i32 0, i32 2, !dbg !11652
  %44 = load i8*, i8** %43, align 8, !dbg !11652
  %45 = bitcast i8* %44 to %struct._tracking_vrrp*, !dbg !11653
  store %struct._tracking_vrrp* %45, %struct._tracking_vrrp** %6, align 8, !dbg !11654
  %46 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %6, align 8, !dbg !11655
  %47 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %46, i32 0, i32 1, !dbg !11657
  %48 = load %struct._vrrp_t*, %struct._vrrp_t** %47, align 8, !dbg !11657
  %49 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11658
  %50 = icmp eq %struct._vrrp_t* %48, %49, !dbg !11659
  br i1 %50, label %51, label %71, !dbg !11660

; <label>:51:                                     ; preds = %41
  %52 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11661
  %53 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %52, i32 0, i32 1, !dbg !11663
  %54 = load i8*, i8** %53, align 8, !dbg !11663
  %55 = load %struct._tracked_file*, %struct._tracked_file** %4, align 8, !dbg !11664
  %56 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %55, i32 0, i32 0, !dbg !11665
  %57 = load %struct._vrrp_file*, %struct._vrrp_file** %56, align 8, !dbg !11665
  %58 = getelementptr inbounds %struct._vrrp_file, %struct._vrrp_file* %57, i32 0, i32 0, !dbg !11666
  %59 = load i8*, i8** %58, align 8, !dbg !11666
  call void (i32, i8*, ...) @log_message(i32 6, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.137, i32 0, i32 0), i8* %54, i8* %59), !dbg !11667
  %60 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %6, align 8, !dbg !11668
  %61 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %60, i32 0, i32 0, !dbg !11670
  %62 = load i32, i32* %61, align 8, !dbg !11670
  %63 = icmp ne i32 %62, 0, !dbg !11668
  br i1 %63, label %64, label %70, !dbg !11671

; <label>:64:                                     ; preds = %51
  %65 = load %struct._tracked_file*, %struct._tracked_file** %4, align 8, !dbg !11672
  %66 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %65, i32 0, i32 1, !dbg !11673
  %67 = load i32, i32* %66, align 8, !dbg !11673
  %68 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %6, align 8, !dbg !11674
  %69 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %68, i32 0, i32 0, !dbg !11675
  store i32 %67, i32* %69, align 8, !dbg !11676
  br label %70, !dbg !11674

; <label>:70:                                     ; preds = %64, %51
  br label %95, !dbg !11677

; <label>:71:                                     ; preds = %41
  br label %72, !dbg !11678

; <label>:72:                                     ; preds = %71
  %73 = load %struct._element*, %struct._element** %7, align 8, !dbg !11679
  %74 = getelementptr inbounds %struct._element, %struct._element* %73, i32 0, i32 0, !dbg !11681
  %75 = load %struct._element*, %struct._element** %74, align 8, !dbg !11681
  store %struct._element* %75, %struct._element** %7, align 8, !dbg !11682
  br label %38, !dbg !11683, !llvm.loop !11684

; <label>:76:                                     ; preds = %38
  br label %77

; <label>:77:                                     ; preds = %76, %14
  %78 = call i8* @zalloc(i64 24), !dbg !11686
  %79 = bitcast i8* %78 to %struct._tracking_vrrp*, !dbg !11687
  store %struct._tracking_vrrp* %79, %struct._tracking_vrrp** %5, align 8, !dbg !11688
  %80 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11689
  %81 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %5, align 8, !dbg !11690
  %82 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %81, i32 0, i32 1, !dbg !11691
  store %struct._vrrp_t* %80, %struct._vrrp_t** %82, align 8, !dbg !11692
  %83 = load %struct._tracked_file*, %struct._tracked_file** %4, align 8, !dbg !11693
  %84 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %83, i32 0, i32 1, !dbg !11694
  %85 = load i32, i32* %84, align 8, !dbg !11694
  %86 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %5, align 8, !dbg !11695
  %87 = getelementptr inbounds %struct._tracking_vrrp, %struct._tracking_vrrp* %86, i32 0, i32 0, !dbg !11696
  store i32 %85, i32* %87, align 8, !dbg !11697
  %88 = load %struct._tracked_file*, %struct._tracked_file** %4, align 8, !dbg !11698
  %89 = getelementptr inbounds %struct._tracked_file, %struct._tracked_file* %88, i32 0, i32 0, !dbg !11699
  %90 = load %struct._vrrp_file*, %struct._vrrp_file** %89, align 8, !dbg !11699
  %91 = getelementptr inbounds %struct._vrrp_file, %struct._vrrp_file* %90, i32 0, i32 5, !dbg !11700
  %92 = load %struct._list*, %struct._list** %91, align 8, !dbg !11700
  %93 = load %struct._tracking_vrrp*, %struct._tracking_vrrp** %5, align 8, !dbg !11701
  %94 = bitcast %struct._tracking_vrrp* %93 to i8*, !dbg !11701
  call void @list_add(%struct._list* %92, i8* %94), !dbg !11702
  br label %95, !dbg !11703

; <label>:95:                                     ; preds = %77, %70
  ret void, !dbg !11704
}

declare void @set_promote_secondaries(%struct._interface*) #3

; Function Attrs: nounwind uwtable
define internal void @vrrp_alloc_send_buffer(%struct._vrrp_t*) #0 !dbg !11706 {
  %2 = alloca %struct._vrrp_t*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !11707, metadata !793), !dbg !11708
  %3 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11709
  %4 = call i64 @vrrp_adv_len(%struct._vrrp_t* %3), !dbg !11710
  %5 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11711
  %6 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %5, i32 0, i32 73, !dbg !11712
  store i64 %4, i64* %6, align 8, !dbg !11713
  %7 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11714
  %8 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %7, i32 0, i32 73, !dbg !11715
  %9 = load i64, i64* %8, align 8, !dbg !11715
  %10 = call i8* @zalloc(i64 %9), !dbg !11716
  %11 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11717
  %12 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %11, i32 0, i32 72, !dbg !11718
  store i8* %10, i8** %12, align 8, !dbg !11719
  ret void, !dbg !11720
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_build_pkt(%struct._vrrp_t*) #0 !dbg !11721 {
  %2 = alloca %struct._vrrp_t*, align 8
  %3 = alloca i8*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %2, metadata !11722, metadata !793), !dbg !11723
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11724, metadata !793), !dbg !11725
  %4 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11726
  %5 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %4, i32 0, i32 0, !dbg !11728
  %6 = load i16, i16* %5, align 8, !dbg !11728
  %7 = zext i16 %6 to i32, !dbg !11726
  %8 = icmp eq i32 %7, 2, !dbg !11729
  br i1 %8, label %9, label %50, !dbg !11730

; <label>:9:                                      ; preds = %1
  %10 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11731
  %11 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %10, i32 0, i32 72, !dbg !11733
  %12 = load i8*, i8** %11, align 8, !dbg !11733
  store i8* %12, i8** %3, align 8, !dbg !11734
  %13 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11735
  %14 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11736
  %15 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %14, i32 0, i32 72, !dbg !11737
  %16 = load i8*, i8** %15, align 8, !dbg !11737
  call void @vrrp_build_ip4(%struct._vrrp_t* %13, i8* %16), !dbg !11738
  %17 = call i64 @vrrp_iphdr_len(), !dbg !11739
  %18 = load i8*, i8** %3, align 8, !dbg !11740
  %19 = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !11740
  store i8* %19, i8** %3, align 8, !dbg !11740
  %20 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11741
  %21 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %20, i32 0, i32 75, !dbg !11743
  %22 = load i8, i8* %21, align 4, !dbg !11743
  %23 = zext i8 %22 to i32, !dbg !11741
  %24 = icmp eq i32 %23, 2, !dbg !11744
  br i1 %24, label %25, label %29, !dbg !11745

; <label>:25:                                     ; preds = %9
  %26 = call i64 @vrrp_ipsecah_len(), !dbg !11746
  %27 = load i8*, i8** %3, align 8, !dbg !11747
  %28 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !11747
  store i8* %28, i8** %3, align 8, !dbg !11747
  br label %29, !dbg !11748

; <label>:29:                                     ; preds = %25, %9
  %30 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11749
  %31 = load i8*, i8** %3, align 8, !dbg !11750
  %32 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11751
  %33 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %32, i32 0, i32 72, !dbg !11752
  %34 = load i8*, i8** %33, align 8, !dbg !11752
  %35 = bitcast i8* %34 to %struct.iphdr*, !dbg !11753
  call void @vrrp_build_vrrp(%struct._vrrp_t* %30, i8* %31, %struct.iphdr* %35), !dbg !11754
  %36 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11755
  %37 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %36, i32 0, i32 75, !dbg !11757
  %38 = load i8, i8* %37, align 4, !dbg !11757
  %39 = zext i8 %38 to i32, !dbg !11755
  %40 = icmp eq i32 %39, 2, !dbg !11758
  br i1 %40, label %41, label %49, !dbg !11759

; <label>:41:                                     ; preds = %29
  %42 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11760
  %43 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11761
  %44 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %43, i32 0, i32 72, !dbg !11762
  %45 = load i8*, i8** %44, align 8, !dbg !11762
  %46 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11763
  %47 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %46, i32 0, i32 73, !dbg !11764
  %48 = load i64, i64* %47, align 8, !dbg !11764
  call void @vrrp_build_ipsecah(%struct._vrrp_t* %42, i8* %45, i64 %48), !dbg !11765
  br label %49, !dbg !11765

; <label>:49:                                     ; preds = %41, %29
  br label %62, !dbg !11766

; <label>:50:                                     ; preds = %1
  %51 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11767
  %52 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %51, i32 0, i32 0, !dbg !11769
  %53 = load i16, i16* %52, align 8, !dbg !11769
  %54 = zext i16 %53 to i32, !dbg !11767
  %55 = icmp eq i32 %54, 10, !dbg !11770
  br i1 %55, label %56, label %61, !dbg !11771

; <label>:56:                                     ; preds = %50
  %57 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11772
  %58 = load %struct._vrrp_t*, %struct._vrrp_t** %2, align 8, !dbg !11773
  %59 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %58, i32 0, i32 72, !dbg !11774
  %60 = load i8*, i8** %59, align 8, !dbg !11774
  call void @vrrp_build_vrrp(%struct._vrrp_t* %57, i8* %60, %struct.iphdr* null), !dbg !11775
  br label %61, !dbg !11775

; <label>:61:                                     ; preds = %56, %50
  br label %62

; <label>:62:                                     ; preds = %61, %49
  ret void, !dbg !11776
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_build_ip4(%struct._vrrp_t*, i8*) #0 !dbg !11777 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.iphdr*, align 8
  %6 = alloca %struct.sockaddr_storage*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !11780, metadata !793), !dbg !11781
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11782, metadata !793), !dbg !11783
  call void @llvm.dbg.declare(metadata %struct.iphdr** %5, metadata !11784, metadata !793), !dbg !11785
  %7 = load i8*, i8** %4, align 8, !dbg !11786
  %8 = bitcast i8* %7 to %struct.iphdr*, !dbg !11787
  store %struct.iphdr* %8, %struct.iphdr** %5, align 8, !dbg !11785
  %9 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11788
  %10 = bitcast %struct.iphdr* %9 to i8*, !dbg !11789
  %11 = load i8, i8* %10, align 4, !dbg !11790
  %12 = and i8 %11, -16, !dbg !11790
  %13 = or i8 %12, 5, !dbg !11790
  store i8 %13, i8* %10, align 4, !dbg !11790
  %14 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11791
  %15 = bitcast %struct.iphdr* %14 to i8*, !dbg !11792
  %16 = load i8, i8* %15, align 4, !dbg !11793
  %17 = and i8 %16, 15, !dbg !11793
  %18 = or i8 %17, 64, !dbg !11793
  store i8 %18, i8* %15, align 4, !dbg !11793
  %19 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11794
  %20 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %19, i32 0, i32 1, !dbg !11795
  store i8 -64, i8* %20, align 1, !dbg !11796
  %21 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11797
  %22 = call i64 @vrrp_pkt_len(%struct._vrrp_t* %21), !dbg !11798
  %23 = add i64 20, %22, !dbg !11799
  %24 = trunc i64 %23 to i16, !dbg !11800
  %25 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11801
  %26 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %25, i32 0, i32 2, !dbg !11802
  store i16 %24, i16* %26, align 2, !dbg !11803
  %27 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11804
  %28 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %27, i32 0, i32 2, !dbg !11805
  %29 = load i16, i16* %28, align 2, !dbg !11805
  %30 = call zeroext i16 @htons(i16 zeroext %29) #1, !dbg !11806
  %31 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11807
  %32 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %31, i32 0, i32 2, !dbg !11808
  store i16 %30, i16* %32, align 2, !dbg !11809
  %33 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11810
  %34 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %33, i32 0, i32 3, !dbg !11811
  store i16 0, i16* %34, align 4, !dbg !11812
  %35 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11813
  %36 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %35, i32 0, i32 4, !dbg !11814
  store i16 0, i16* %36, align 2, !dbg !11815
  %37 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11816
  %38 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %37, i32 0, i32 5, !dbg !11817
  store i8 -1, i8* %38, align 4, !dbg !11818
  %39 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11819
  %40 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %39, i32 0, i32 75, !dbg !11820
  %41 = load i8, i8* %40, align 4, !dbg !11820
  %42 = zext i8 %41 to i32, !dbg !11819
  %43 = icmp eq i32 %42, 2, !dbg !11821
  %44 = select i1 %43, i32 51, i32 112, !dbg !11822
  %45 = trunc i32 %44 to i8, !dbg !11822
  %46 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11823
  %47 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %46, i32 0, i32 6, !dbg !11824
  store i8 %45, i8* %47, align 1, !dbg !11825
  %48 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11826
  %49 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %48, i32 0, i32 16, !dbg !11827
  %50 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %49, i32 0, i32 0, !dbg !11828
  %51 = load i16, i16* %50, align 8, !dbg !11828
  %52 = zext i16 %51 to i32, !dbg !11829
  %53 = icmp ne i32 %52, 0, !dbg !11829
  br i1 %53, label %54, label %61, !dbg !11829

; <label>:54:                                     ; preds = %2
  %55 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11830
  %56 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %55, i32 0, i32 16, !dbg !11832
  %57 = bitcast %struct.sockaddr_storage* %56 to %struct.sockaddr_in*, !dbg !11833
  %58 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %57, i32 0, i32 2, !dbg !11833
  %59 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %58, i32 0, i32 0, !dbg !11834
  %60 = load i32, i32* %59, align 4, !dbg !11834
  br label %68, !dbg !11835

; <label>:61:                                     ; preds = %2
  %62 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11836
  %63 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %62, i32 0, i32 4, !dbg !11838
  %64 = load %struct._interface*, %struct._interface** %63, align 8, !dbg !11838
  %65 = getelementptr inbounds %struct._interface, %struct._interface* %64, i32 0, i32 2, !dbg !11839
  %66 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %65, i32 0, i32 0, !dbg !11840
  %67 = load i32, i32* %66, align 4, !dbg !11840
  br label %68, !dbg !11841

; <label>:68:                                     ; preds = %61, %54
  %69 = phi i32 [ %60, %54 ], [ %67, %61 ], !dbg !11842
  %70 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11844
  %71 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %70, i32 0, i32 8, !dbg !11845
  store i32 %69, i32* %71, align 4, !dbg !11846
  %72 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11847
  %73 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %72, i32 0, i32 20, !dbg !11849
  %74 = load %struct._list*, %struct._list** %73, align 8, !dbg !11849
  %75 = icmp eq %struct._list* %74, null, !dbg !11850
  br i1 %75, label %111, label %76, !dbg !11851

; <label>:76:                                     ; preds = %68
  %77 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11852
  %78 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %77, i32 0, i32 20, !dbg !11854
  %79 = load %struct._list*, %struct._list** %78, align 8, !dbg !11854
  %80 = getelementptr inbounds %struct._list, %struct._list* %79, i32 0, i32 0, !dbg !11855
  %81 = load %struct._element*, %struct._element** %80, align 8, !dbg !11855
  %82 = icmp eq %struct._element* %81, null, !dbg !11856
  br i1 %82, label %83, label %90, !dbg !11857

; <label>:83:                                     ; preds = %76
  %84 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11858
  %85 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %84, i32 0, i32 20, !dbg !11860
  %86 = load %struct._list*, %struct._list** %85, align 8, !dbg !11860
  %87 = getelementptr inbounds %struct._list, %struct._list* %86, i32 0, i32 1, !dbg !11861
  %88 = load %struct._element*, %struct._element** %87, align 8, !dbg !11861
  %89 = icmp eq %struct._element* %88, null, !dbg !11862
  br i1 %89, label %111, label %90, !dbg !11863

; <label>:90:                                     ; preds = %83, %76
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %6, metadata !11864, metadata !793), !dbg !11866
  %91 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11867
  %92 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %91, i32 0, i32 20, !dbg !11868
  %93 = load %struct._list*, %struct._list** %92, align 8, !dbg !11868
  %94 = icmp ne %struct._list* %93, null, !dbg !11869
  br i1 %94, label %96, label %95, !dbg !11870

; <label>:95:                                     ; preds = %90
  br label %102, !dbg !11871

; <label>:96:                                     ; preds = %90
  %97 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !11873
  %98 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %97, i32 0, i32 20, !dbg !11875
  %99 = load %struct._list*, %struct._list** %98, align 8, !dbg !11875
  %100 = getelementptr inbounds %struct._list, %struct._list* %99, i32 0, i32 0, !dbg !11876
  %101 = load %struct._element*, %struct._element** %100, align 8, !dbg !11876
  br label %102, !dbg !11877

; <label>:102:                                    ; preds = %96, %95
  %103 = phi %struct._element* [ null, %95 ], [ %101, %96 ], !dbg !11878
  %104 = getelementptr inbounds %struct._element, %struct._element* %103, i32 0, i32 2, !dbg !11880
  %105 = load i8*, i8** %104, align 8, !dbg !11880
  %106 = bitcast i8* %105 to %struct.sockaddr_storage*, !dbg !11881
  store %struct.sockaddr_storage* %106, %struct.sockaddr_storage** %6, align 8, !dbg !11882
  %107 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %6, align 8, !dbg !11883
  %108 = call i32 @inet_sockaddrip4(%struct.sockaddr_storage* %107), !dbg !11884
  %109 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11885
  %110 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %109, i32 0, i32 9, !dbg !11886
  store i32 %108, i32* %110, align 4, !dbg !11887
  br label %119, !dbg !11888

; <label>:111:                                    ; preds = %83, %68
  %112 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !11889
  %113 = getelementptr inbounds %struct._data, %struct._data* %112, i32 0, i32 22, !dbg !11890
  %114 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %113, i32 0, i32 2, !dbg !11891
  %115 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %114, i32 0, i32 0, !dbg !11892
  %116 = load i32, i32* %115, align 4, !dbg !11892
  %117 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11893
  %118 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %117, i32 0, i32 9, !dbg !11894
  store i32 %116, i32* %118, align 4, !dbg !11895
  br label %119

; <label>:119:                                    ; preds = %111, %102
  %120 = load %struct.iphdr*, %struct.iphdr** %5, align 8, !dbg !11896
  %121 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %120, i32 0, i32 7, !dbg !11897
  store i16 0, i16* %121, align 2, !dbg !11898
  ret void, !dbg !11899
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_build_vrrp(%struct._vrrp_t*, i8*, %struct.iphdr*) #0 !dbg !11900 {
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.iphdr*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !11903, metadata !793), !dbg !11904
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11905, metadata !793), !dbg !11906
  store %struct.iphdr* %2, %struct.iphdr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.iphdr** %6, metadata !11907, metadata !793), !dbg !11908
  %7 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11909
  %8 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %7, i32 0, i32 60, !dbg !11911
  %9 = load i32, i32* %8, align 4, !dbg !11911
  %10 = icmp eq i32 %9, 3, !dbg !11912
  br i1 %10, label %11, label %15, !dbg !11913

; <label>:11:                                     ; preds = %3
  %12 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11914
  %13 = load i8*, i8** %5, align 8, !dbg !11915
  %14 = load %struct.iphdr*, %struct.iphdr** %6, align 8, !dbg !11916
  call void @vrrp_build_vrrp_v3(%struct._vrrp_t* %12, i8* %13, %struct.iphdr* %14), !dbg !11917
  br label %18, !dbg !11917

; <label>:15:                                     ; preds = %3
  %16 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11918
  %17 = load i8*, i8** %5, align 8, !dbg !11919
  call void @vrrp_build_vrrp_v2(%struct._vrrp_t* %16, i8* %17), !dbg !11920
  br label %18

; <label>:18:                                     ; preds = %15, %11
  ret void, !dbg !11921
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_build_ipsecah(%struct._vrrp_t*, i8*, i64) #0 !dbg !11922 {
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca [16 x i8], align 16
  %8 = alloca %struct.iphdr*, align 8
  %9 = alloca %struct._ipsec_ah*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !11925, metadata !793), !dbg !11926
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11927, metadata !793), !dbg !11928
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !11929, metadata !793), !dbg !11930
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !11931, metadata !793), !dbg !11932
  call void @llvm.dbg.declare(metadata %struct.iphdr** %8, metadata !11933, metadata !793), !dbg !11934
  %10 = load i8*, i8** %5, align 8, !dbg !11935
  %11 = bitcast i8* %10 to %struct.iphdr*, !dbg !11936
  store %struct.iphdr* %11, %struct.iphdr** %8, align 8, !dbg !11934
  call void @llvm.dbg.declare(metadata %struct._ipsec_ah** %9, metadata !11937, metadata !793), !dbg !11938
  %12 = load i8*, i8** %5, align 8, !dbg !11939
  %13 = getelementptr inbounds i8, i8* %12, i64 20, !dbg !11940
  %14 = bitcast i8* %13 to %struct._ipsec_ah*, !dbg !11941
  store %struct._ipsec_ah* %14, %struct._ipsec_ah** %9, align 8, !dbg !11938
  %15 = load %struct._ipsec_ah*, %struct._ipsec_ah** %9, align 8, !dbg !11942
  %16 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %15, i32 0, i32 0, !dbg !11943
  store i8 112, i8* %16, align 4, !dbg !11944
  %17 = load %struct.iphdr*, %struct.iphdr** %8, align 8, !dbg !11945
  %18 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %17, i32 0, i32 2, !dbg !11946
  %19 = load i16, i16* %18, align 2, !dbg !11946
  %20 = call zeroext i16 @ntohs(i16 zeroext %19) #1, !dbg !11947
  %21 = zext i16 %20 to i64, !dbg !11947
  %22 = call i64 @vrrp_ipsecah_len(), !dbg !11948
  %23 = add i64 %21, %22, !dbg !11950
  %24 = trunc i64 %23 to i16, !dbg !11947
  %25 = call zeroext i16 @htons(i16 zeroext %24) #1, !dbg !11951
  %26 = load %struct.iphdr*, %struct.iphdr** %8, align 8, !dbg !11953
  %27 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %26, i32 0, i32 2, !dbg !11954
  store i16 %25, i16* %27, align 2, !dbg !11955
  %28 = load %struct._ipsec_ah*, %struct._ipsec_ah** %9, align 8, !dbg !11956
  %29 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %28, i32 0, i32 1, !dbg !11957
  store i8 4, i8* %29, align 1, !dbg !11958
  %30 = load %struct.iphdr*, %struct.iphdr** %8, align 8, !dbg !11959
  %31 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %30, i32 0, i32 8, !dbg !11960
  %32 = load i32, i32* %31, align 4, !dbg !11960
  %33 = load %struct._ipsec_ah*, %struct._ipsec_ah** %9, align 8, !dbg !11961
  %34 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %33, i32 0, i32 3, !dbg !11962
  store i32 %32, i32* %34, align 4, !dbg !11963
  %35 = load i8*, i8** %5, align 8, !dbg !11964
  %36 = load i64, i64* %6, align 8, !dbg !11965
  %37 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !11966
  %38 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %37, i32 0, i32 76, !dbg !11967
  %39 = getelementptr inbounds [8 x i8], [8 x i8]* %38, i32 0, i32 0, !dbg !11966
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !11968
  call void @hmac_md5(i8* %35, i64 %36, i8* %39, i64 8, i8* %40), !dbg !11969
  %41 = load %struct._ipsec_ah*, %struct._ipsec_ah** %9, align 8, !dbg !11970
  %42 = getelementptr inbounds %struct._ipsec_ah, %struct._ipsec_ah* %41, i32 0, i32 5, !dbg !11971
  %43 = getelementptr inbounds [12 x i8], [12 x i8]* %42, i32 0, i32 0, !dbg !11972
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !11972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 12, i32 4, i1 false), !dbg !11972
  ret void, !dbg !11973
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_build_vrrp_v3(%struct._vrrp_t*, i8*, %struct.iphdr*) #0 !dbg !11974 {
  %4 = alloca %struct._vrrp_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.iphdr*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct._vrrphdr*, align 8
  %9 = alloca %struct.in_addr*, align 8
  %10 = alloca %struct.in6_addr*, align 8
  %11 = alloca %struct._element*, align 8
  %12 = alloca %struct._ip_address*, align 8
  %13 = alloca %struct.ipv4_phdr_t, align 4
  store %struct._vrrp_t* %0, %struct._vrrp_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %4, metadata !11975, metadata !793), !dbg !11976
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11977, metadata !793), !dbg !11978
  store %struct.iphdr* %2, %struct.iphdr** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.iphdr** %6, metadata !11979, metadata !793), !dbg !11980
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11981, metadata !793), !dbg !11982
  store i32 0, i32* %7, align 4, !dbg !11982
  call void @llvm.dbg.declare(metadata %struct._vrrphdr** %8, metadata !11983, metadata !793), !dbg !11984
  %14 = load i8*, i8** %5, align 8, !dbg !11985
  %15 = bitcast i8* %14 to %struct._vrrphdr*, !dbg !11986
  store %struct._vrrphdr* %15, %struct._vrrphdr** %8, align 8, !dbg !11984
  call void @llvm.dbg.declare(metadata %struct.in_addr** %9, metadata !11987, metadata !793), !dbg !11988
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %10, metadata !11989, metadata !793), !dbg !11990
  call void @llvm.dbg.declare(metadata %struct._element** %11, metadata !11991, metadata !793), !dbg !11992
  call void @llvm.dbg.declare(metadata %struct._ip_address** %12, metadata !11993, metadata !793), !dbg !11994
  call void @llvm.dbg.declare(metadata %struct.ipv4_phdr_t* %13, metadata !11995, metadata !793), !dbg !11996
  %16 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !11997
  %17 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %16, i32 0, i32 0, !dbg !11998
  store i8 49, i8* %17, align 2, !dbg !11999
  %18 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12000
  %19 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %18, i32 0, i32 36, !dbg !12001
  %20 = load i8, i8* %19, align 4, !dbg !12001
  %21 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !12002
  %22 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %21, i32 0, i32 1, !dbg !12003
  store i8 %20, i8* %22, align 1, !dbg !12004
  %23 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12005
  %24 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %23, i32 0, i32 38, !dbg !12006
  %25 = load i8, i8* %24, align 2, !dbg !12006
  %26 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !12007
  %27 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %26, i32 0, i32 2, !dbg !12008
  store i8 %25, i8* %27, align 2, !dbg !12009
  %28 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12010
  %29 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %28, i32 0, i32 41, !dbg !12011
  %30 = load %struct._list*, %struct._list** %29, align 8, !dbg !12011
  %31 = icmp eq %struct._list* %30, null, !dbg !12012
  br i1 %31, label %52, label %32, !dbg !12013

; <label>:32:                                     ; preds = %3
  %33 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12014
  %34 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %33, i32 0, i32 41, !dbg !12016
  %35 = load %struct._list*, %struct._list** %34, align 8, !dbg !12016
  %36 = getelementptr inbounds %struct._list, %struct._list* %35, i32 0, i32 0, !dbg !12017
  %37 = load %struct._element*, %struct._element** %36, align 8, !dbg !12017
  %38 = icmp eq %struct._element* %37, null, !dbg !12018
  br i1 %38, label %39, label %46, !dbg !12019

; <label>:39:                                     ; preds = %32
  %40 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12020
  %41 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %40, i32 0, i32 41, !dbg !12022
  %42 = load %struct._list*, %struct._list** %41, align 8, !dbg !12022
  %43 = getelementptr inbounds %struct._list, %struct._list* %42, i32 0, i32 1, !dbg !12023
  %44 = load %struct._element*, %struct._element** %43, align 8, !dbg !12023
  %45 = icmp eq %struct._element* %44, null, !dbg !12024
  br i1 %45, label %52, label %46, !dbg !12025

; <label>:46:                                     ; preds = %39, %32
  %47 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12026
  %48 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %47, i32 0, i32 41, !dbg !12028
  %49 = load %struct._list*, %struct._list** %48, align 8, !dbg !12028
  %50 = getelementptr inbounds %struct._list, %struct._list* %49, i32 0, i32 2, !dbg !12029
  %51 = load i32, i32* %50, align 8, !dbg !12029
  br label %53, !dbg !12030

; <label>:52:                                     ; preds = %39, %3
  br label %53, !dbg !12031

; <label>:53:                                     ; preds = %52, %46
  %54 = phi i32 [ %51, %46 ], [ 0, %52 ], !dbg !12033
  %55 = trunc i32 %54 to i8, !dbg !12035
  %56 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !12036
  %57 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %56, i32 0, i32 3, !dbg !12037
  store i8 %55, i8* %57, align 1, !dbg !12038
  %58 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12039
  %59 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %58, i32 0, i32 47, !dbg !12040
  %60 = load i32, i32* %59, align 8, !dbg !12040
  %61 = udiv i32 %60, 10000, !dbg !12041
  %62 = and i32 %61, 4095, !dbg !12042
  %63 = trunc i32 %62 to i16, !dbg !12043
  %64 = call zeroext i16 @htons(i16 zeroext %63) #1, !dbg !12044
  %65 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !12045
  %66 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %65, i32 0, i32 4, !dbg !12046
  %67 = bitcast %union.anon.2* %66 to %struct.anon.4*, !dbg !12046
  %68 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %67, i32 0, i32 0, !dbg !12047
  store i16 %64, i16* %68, align 2, !dbg !12048
  %69 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !12049
  %70 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %69, i32 0, i32 5, !dbg !12050
  store i16 0, i16* %70, align 2, !dbg !12051
  %71 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12052
  %72 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %71, i32 0, i32 0, !dbg !12054
  %73 = load i16, i16* %72, align 8, !dbg !12054
  %74 = zext i16 %73 to i32, !dbg !12052
  %75 = icmp eq i32 %74, 2, !dbg !12055
  br i1 %75, label %76, label %190, !dbg !12056

; <label>:76:                                     ; preds = %53
  %77 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !12057
  %78 = bitcast %struct._vrrphdr* %77 to i8*, !dbg !12059
  %79 = getelementptr inbounds i8, i8* %78, i64 8, !dbg !12060
  %80 = bitcast i8* %79 to %struct.in_addr*, !dbg !12061
  store %struct.in_addr* %80, %struct.in_addr** %9, align 8, !dbg !12062
  %81 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12063
  %82 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %81, i32 0, i32 41, !dbg !12065
  %83 = load %struct._list*, %struct._list** %82, align 8, !dbg !12065
  %84 = icmp ne %struct._list* %83, null, !dbg !12066
  br i1 %84, label %85, label %99, !dbg !12066

; <label>:85:                                     ; preds = %76
  %86 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12067
  %87 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %86, i32 0, i32 41, !dbg !12069
  %88 = load %struct._list*, %struct._list** %87, align 8, !dbg !12069
  %89 = icmp ne %struct._list* %88, null, !dbg !12070
  br i1 %89, label %91, label %90, !dbg !12071

; <label>:90:                                     ; preds = %85
  br label %97, !dbg !12072

; <label>:91:                                     ; preds = %85
  %92 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12074
  %93 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %92, i32 0, i32 41, !dbg !12076
  %94 = load %struct._list*, %struct._list** %93, align 8, !dbg !12076
  %95 = getelementptr inbounds %struct._list, %struct._list* %94, i32 0, i32 0, !dbg !12077
  %96 = load %struct._element*, %struct._element** %95, align 8, !dbg !12077
  br label %97, !dbg !12078

; <label>:97:                                     ; preds = %91, %90
  %98 = phi %struct._element* [ null, %90 ], [ %96, %91 ], !dbg !12079
  br label %100, !dbg !12081

; <label>:99:                                     ; preds = %76
  br label %100, !dbg !12082

; <label>:100:                                    ; preds = %99, %97
  %101 = phi %struct._element* [ %98, %97 ], [ null, %99 ], !dbg !12084
  store %struct._element* %101, %struct._element** %11, align 8, !dbg !12086
  br label %102, !dbg !12087

; <label>:102:                                    ; preds = %124, %100
  %103 = load %struct._element*, %struct._element** %11, align 8, !dbg !12088
  %104 = icmp ne %struct._element* %103, null, !dbg !12091
  br i1 %104, label %105, label %110, !dbg !12092

; <label>:105:                                    ; preds = %102
  %106 = load %struct._element*, %struct._element** %11, align 8, !dbg !12093
  %107 = getelementptr inbounds %struct._element, %struct._element* %106, i32 0, i32 2, !dbg !12095
  %108 = load i8*, i8** %107, align 8, !dbg !12095
  %109 = bitcast i8* %108 to %struct._ip_address*, !dbg !12096
  store %struct._ip_address* %109, %struct._ip_address** %12, align 8, !dbg !12097
  br label %110

; <label>:110:                                    ; preds = %105, %102
  %111 = phi i1 [ false, %102 ], [ true, %105 ]
  br i1 %111, label %112, label %128, !dbg !12098

; <label>:112:                                    ; preds = %110
  %113 = load i32, i32* %7, align 4, !dbg !12100
  %114 = add nsw i32 %113, 1, !dbg !12100
  store i32 %114, i32* %7, align 4, !dbg !12100
  %115 = sext i32 %113 to i64, !dbg !12101
  %116 = load %struct.in_addr*, %struct.in_addr** %9, align 8, !dbg !12101
  %117 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %116, i64 %115, !dbg !12101
  %118 = load %struct._ip_address*, %struct._ip_address** %12, align 8, !dbg !12102
  %119 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %118, i32 0, i32 1, !dbg !12103
  %120 = bitcast %union.anon.5* %119 to %struct.anon.6*, !dbg !12104
  %121 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %120, i32 0, i32 0, !dbg !12105
  %122 = bitcast %struct.in_addr* %117 to i8*, !dbg !12105
  %123 = bitcast %struct.in_addr* %121 to i8*, !dbg !12105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %122, i8* %123, i64 4, i32 4, i1 false), !dbg !12105
  br label %124, !dbg !12101

; <label>:124:                                    ; preds = %112
  %125 = load %struct._element*, %struct._element** %11, align 8, !dbg !12106
  %126 = getelementptr inbounds %struct._element, %struct._element* %125, i32 0, i32 0, !dbg !12108
  %127 = load %struct._element*, %struct._element** %126, align 8, !dbg !12108
  store %struct._element* %127, %struct._element** %11, align 8, !dbg !12109
  br label %102, !dbg !12110, !llvm.loop !12111

; <label>:128:                                    ; preds = %110
  %129 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12113
  %130 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %129, i32 0, i32 16, !dbg !12114
  %131 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %130, i32 0, i32 0, !dbg !12115
  %132 = load i16, i16* %131, align 8, !dbg !12115
  %133 = zext i16 %132 to i32, !dbg !12116
  %134 = icmp ne i32 %133, 0, !dbg !12116
  br i1 %134, label %135, label %142, !dbg !12116

; <label>:135:                                    ; preds = %128
  %136 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12117
  %137 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %136, i32 0, i32 16, !dbg !12119
  %138 = bitcast %struct.sockaddr_storage* %137 to %struct.sockaddr_in*, !dbg !12120
  %139 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %138, i32 0, i32 2, !dbg !12120
  %140 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %139, i32 0, i32 0, !dbg !12121
  %141 = load i32, i32* %140, align 4, !dbg !12121
  br label %149, !dbg !12122

; <label>:142:                                    ; preds = %128
  %143 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12123
  %144 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %143, i32 0, i32 4, !dbg !12125
  %145 = load %struct._interface*, %struct._interface** %144, align 8, !dbg !12125
  %146 = getelementptr inbounds %struct._interface, %struct._interface* %145, i32 0, i32 2, !dbg !12126
  %147 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %146, i32 0, i32 0, !dbg !12127
  %148 = load i32, i32* %147, align 4, !dbg !12127
  br label %149, !dbg !12128

; <label>:149:                                    ; preds = %142, %135
  %150 = phi i32 [ %141, %135 ], [ %148, %142 ], !dbg !12129
  %151 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %13, i32 0, i32 0, !dbg !12131
  store i32 %150, i32* %151, align 4, !dbg !12132
  %152 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12133
  %153 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %152, i32 0, i32 21, !dbg !12135
  %154 = load i32, i32* %153, align 8, !dbg !12135
  %155 = icmp uge i32 %154, 2, !dbg !12136
  br i1 %155, label %156, label %163, !dbg !12137

; <label>:156:                                    ; preds = %149
  %157 = load %struct._data*, %struct._data** @global_data, align 8, !dbg !12138
  %158 = getelementptr inbounds %struct._data, %struct._data* %157, i32 0, i32 22, !dbg !12139
  %159 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %158, i32 0, i32 2, !dbg !12140
  %160 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %159, i32 0, i32 0, !dbg !12141
  %161 = load i32, i32* %160, align 4, !dbg !12141
  %162 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %13, i32 0, i32 1, !dbg !12142
  store i32 %161, i32* %162, align 4, !dbg !12143
  br label %168, !dbg !12144

; <label>:163:                                    ; preds = %149
  %164 = load %struct.iphdr*, %struct.iphdr** %6, align 8, !dbg !12145
  %165 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %164, i32 0, i32 9, !dbg !12146
  %166 = load i32, i32* %165, align 4, !dbg !12146
  %167 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %13, i32 0, i32 1, !dbg !12147
  store i32 %166, i32* %167, align 4, !dbg !12148
  br label %168

; <label>:168:                                    ; preds = %163, %156
  %169 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %13, i32 0, i32 2, !dbg !12149
  store i8 0, i8* %169, align 4, !dbg !12150
  %170 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %13, i32 0, i32 3, !dbg !12151
  store i8 112, i8* %170, align 1, !dbg !12152
  %171 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12153
  %172 = call i64 @vrrp_pkt_len(%struct._vrrp_t* %171), !dbg !12154
  %173 = trunc i64 %172 to i16, !dbg !12154
  %174 = call zeroext i16 @htons(i16 zeroext %173) #1, !dbg !12155
  %175 = getelementptr inbounds %struct.ipv4_phdr_t, %struct.ipv4_phdr_t* %13, i32 0, i32 4, !dbg !12156
  store i16 %174, i16* %175, align 2, !dbg !12157
  %176 = bitcast %struct.ipv4_phdr_t* %13 to i16*, !dbg !12158
  %177 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12159
  %178 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %177, i32 0, i32 74, !dbg !12160
  %179 = call zeroext i16 @in_csum(i16* %176, i64 12, i32 0, i32* %178), !dbg !12161
  %180 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !12162
  %181 = bitcast %struct._vrrphdr* %180 to i16*, !dbg !12163
  %182 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12164
  %183 = call i64 @vrrp_pkt_len(%struct._vrrp_t* %182), !dbg !12165
  %184 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12166
  %185 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %184, i32 0, i32 74, !dbg !12167
  %186 = load i32, i32* %185, align 8, !dbg !12167
  %187 = call zeroext i16 @in_csum(i16* %181, i64 %183, i32 %186, i32* null), !dbg !12168
  %188 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !12169
  %189 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %188, i32 0, i32 5, !dbg !12170
  store i16 %187, i16* %189, align 2, !dbg !12171
  br label %258, !dbg !12172

; <label>:190:                                    ; preds = %53
  %191 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12173
  %192 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %191, i32 0, i32 0, !dbg !12176
  %193 = load i16, i16* %192, align 8, !dbg !12176
  %194 = zext i16 %193 to i32, !dbg !12173
  %195 = icmp eq i32 %194, 10, !dbg !12177
  br i1 %195, label %196, label %257, !dbg !12173

; <label>:196:                                    ; preds = %190
  %197 = load %struct._vrrphdr*, %struct._vrrphdr** %8, align 8, !dbg !12178
  %198 = bitcast %struct._vrrphdr* %197 to i8*, !dbg !12180
  %199 = getelementptr inbounds i8, i8* %198, i64 8, !dbg !12181
  %200 = bitcast i8* %199 to %struct.in6_addr*, !dbg !12182
  store %struct.in6_addr* %200, %struct.in6_addr** %10, align 8, !dbg !12183
  %201 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12184
  %202 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %201, i32 0, i32 41, !dbg !12186
  %203 = load %struct._list*, %struct._list** %202, align 8, !dbg !12186
  %204 = icmp eq %struct._list* %203, null, !dbg !12187
  br i1 %204, label %256, label %205, !dbg !12188

; <label>:205:                                    ; preds = %196
  %206 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12189
  %207 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %206, i32 0, i32 41, !dbg !12191
  %208 = load %struct._list*, %struct._list** %207, align 8, !dbg !12191
  %209 = getelementptr inbounds %struct._list, %struct._list* %208, i32 0, i32 0, !dbg !12192
  %210 = load %struct._element*, %struct._element** %209, align 8, !dbg !12192
  %211 = icmp eq %struct._element* %210, null, !dbg !12193
  br i1 %211, label %212, label %219, !dbg !12194

; <label>:212:                                    ; preds = %205
  %213 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12195
  %214 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %213, i32 0, i32 41, !dbg !12197
  %215 = load %struct._list*, %struct._list** %214, align 8, !dbg !12197
  %216 = getelementptr inbounds %struct._list, %struct._list* %215, i32 0, i32 1, !dbg !12198
  %217 = load %struct._element*, %struct._element** %216, align 8, !dbg !12198
  %218 = icmp eq %struct._element* %217, null, !dbg !12199
  br i1 %218, label %256, label %219, !dbg !12200

; <label>:219:                                    ; preds = %212, %205
  %220 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12201
  %221 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %220, i32 0, i32 41, !dbg !12204
  %222 = load %struct._list*, %struct._list** %221, align 8, !dbg !12204
  %223 = icmp ne %struct._list* %222, null, !dbg !12205
  br i1 %223, label %225, label %224, !dbg !12206

; <label>:224:                                    ; preds = %219
  br label %231, !dbg !12207

; <label>:225:                                    ; preds = %219
  %226 = load %struct._vrrp_t*, %struct._vrrp_t** %4, align 8, !dbg !12209
  %227 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %226, i32 0, i32 41, !dbg !12211
  %228 = load %struct._list*, %struct._list** %227, align 8, !dbg !12211
  %229 = getelementptr inbounds %struct._list, %struct._list* %228, i32 0, i32 0, !dbg !12212
  %230 = load %struct._element*, %struct._element** %229, align 8, !dbg !12212
  br label %231, !dbg !12213

; <label>:231:                                    ; preds = %225, %224
  %232 = phi %struct._element* [ null, %224 ], [ %230, %225 ], !dbg !12214
  store %struct._element* %232, %struct._element** %11, align 8, !dbg !12216
  br label %233, !dbg !12217

; <label>:233:                                    ; preds = %251, %231
  %234 = load %struct._element*, %struct._element** %11, align 8, !dbg !12218
  %235 = icmp ne %struct._element* %234, null, !dbg !12221
  br i1 %235, label %236, label %255, !dbg !12221

; <label>:236:                                    ; preds = %233
  %237 = load %struct._element*, %struct._element** %11, align 8, !dbg !12222
  %238 = getelementptr inbounds %struct._element, %struct._element* %237, i32 0, i32 2, !dbg !12224
  %239 = load i8*, i8** %238, align 8, !dbg !12224
  %240 = bitcast i8* %239 to %struct._ip_address*, !dbg !12225
  store %struct._ip_address* %240, %struct._ip_address** %12, align 8, !dbg !12226
  %241 = load i32, i32* %7, align 4, !dbg !12227
  %242 = add nsw i32 %241, 1, !dbg !12227
  store i32 %242, i32* %7, align 4, !dbg !12227
  %243 = sext i32 %241 to i64, !dbg !12228
  %244 = load %struct.in6_addr*, %struct.in6_addr** %10, align 8, !dbg !12228
  %245 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %244, i64 %243, !dbg !12228
  %246 = load %struct._ip_address*, %struct._ip_address** %12, align 8, !dbg !12229
  %247 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %246, i32 0, i32 1, !dbg !12230
  %248 = bitcast %union.anon.5* %247 to %struct.in6_addr*, !dbg !12231
  %249 = bitcast %struct.in6_addr* %245 to i8*, !dbg !12231
  %250 = bitcast %struct.in6_addr* %248 to i8*, !dbg !12231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %249, i8* %250, i64 16, i32 4, i1 false), !dbg !12231
  br label %251, !dbg !12232

; <label>:251:                                    ; preds = %236
  %252 = load %struct._element*, %struct._element** %11, align 8, !dbg !12233
  %253 = getelementptr inbounds %struct._element, %struct._element* %252, i32 0, i32 0, !dbg !12235
  %254 = load %struct._element*, %struct._element** %253, align 8, !dbg !12235
  store %struct._element* %254, %struct._element** %11, align 8, !dbg !12236
  br label %233, !dbg !12237, !llvm.loop !12238

; <label>:255:                                    ; preds = %233
  br label %256, !dbg !12240

; <label>:256:                                    ; preds = %255, %212, %196
  br label %257, !dbg !12241

; <label>:257:                                    ; preds = %256, %190
  br label %258

; <label>:258:                                    ; preds = %257, %168
  ret void, !dbg !12242
}

; Function Attrs: nounwind uwtable
define internal void @vrrp_build_vrrp_v2(%struct._vrrp_t*, i8*) #0 !dbg !12243 {
  %3 = alloca %struct._vrrp_t*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct._vrrphdr*, align 8
  %7 = alloca %struct.in_addr*, align 8
  %8 = alloca %struct.in6_addr*, align 8
  %9 = alloca %struct._element*, align 8
  %10 = alloca %struct._ip_address*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %3, metadata !12244, metadata !793), !dbg !12245
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !12246, metadata !793), !dbg !12247
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12248, metadata !793), !dbg !12249
  store i32 0, i32* %5, align 4, !dbg !12249
  call void @llvm.dbg.declare(metadata %struct._vrrphdr** %6, metadata !12250, metadata !793), !dbg !12251
  %13 = load i8*, i8** %4, align 8, !dbg !12252
  %14 = bitcast i8* %13 to %struct._vrrphdr*, !dbg !12253
  store %struct._vrrphdr* %14, %struct._vrrphdr** %6, align 8, !dbg !12251
  call void @llvm.dbg.declare(metadata %struct.in_addr** %7, metadata !12254, metadata !793), !dbg !12255
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %8, metadata !12256, metadata !793), !dbg !12257
  call void @llvm.dbg.declare(metadata %struct._element** %9, metadata !12258, metadata !793), !dbg !12259
  call void @llvm.dbg.declare(metadata %struct._ip_address** %10, metadata !12260, metadata !793), !dbg !12261
  %15 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12262
  %16 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %15, i32 0, i32 0, !dbg !12263
  store i8 33, i8* %16, align 2, !dbg !12264
  %17 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12265
  %18 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %17, i32 0, i32 36, !dbg !12266
  %19 = load i8, i8* %18, align 4, !dbg !12266
  %20 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12267
  %21 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %20, i32 0, i32 1, !dbg !12268
  store i8 %19, i8* %21, align 1, !dbg !12269
  %22 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12270
  %23 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %22, i32 0, i32 38, !dbg !12271
  %24 = load i8, i8* %23, align 2, !dbg !12271
  %25 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12272
  %26 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %25, i32 0, i32 2, !dbg !12273
  store i8 %24, i8* %26, align 2, !dbg !12274
  %27 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12275
  %28 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %27, i32 0, i32 41, !dbg !12276
  %29 = load %struct._list*, %struct._list** %28, align 8, !dbg !12276
  %30 = icmp eq %struct._list* %29, null, !dbg !12277
  br i1 %30, label %53, label %31, !dbg !12278

; <label>:31:                                     ; preds = %2
  %32 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12279
  %33 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %32, i32 0, i32 41, !dbg !12281
  %34 = load %struct._list*, %struct._list** %33, align 8, !dbg !12281
  %35 = getelementptr inbounds %struct._list, %struct._list* %34, i32 0, i32 0, !dbg !12282
  %36 = load %struct._element*, %struct._element** %35, align 8, !dbg !12282
  %37 = icmp eq %struct._element* %36, null, !dbg !12283
  br i1 %37, label %38, label %45, !dbg !12284

; <label>:38:                                     ; preds = %31
  %39 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12285
  %40 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %39, i32 0, i32 41, !dbg !12287
  %41 = load %struct._list*, %struct._list** %40, align 8, !dbg !12287
  %42 = getelementptr inbounds %struct._list, %struct._list* %41, i32 0, i32 1, !dbg !12288
  %43 = load %struct._element*, %struct._element** %42, align 8, !dbg !12288
  %44 = icmp eq %struct._element* %43, null, !dbg !12289
  br i1 %44, label %53, label %45, !dbg !12290

; <label>:45:                                     ; preds = %38, %31
  %46 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12291
  %47 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %46, i32 0, i32 41, !dbg !12293
  %48 = load %struct._list*, %struct._list** %47, align 8, !dbg !12293
  %49 = getelementptr inbounds %struct._list, %struct._list* %48, i32 0, i32 2, !dbg !12294
  %50 = load i32, i32* %49, align 8, !dbg !12294
  %51 = trunc i32 %50 to i8, !dbg !12295
  %52 = zext i8 %51 to i32, !dbg !12295
  br label %54, !dbg !12296

; <label>:53:                                     ; preds = %38, %2
  br label %54, !dbg !12297

; <label>:54:                                     ; preds = %53, %45
  %55 = phi i32 [ %52, %45 ], [ 0, %53 ], !dbg !12299
  %56 = trunc i32 %55 to i8, !dbg !12301
  %57 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12302
  %58 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %57, i32 0, i32 3, !dbg !12303
  store i8 %56, i8* %58, align 1, !dbg !12304
  %59 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12305
  %60 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %59, i32 0, i32 75, !dbg !12306
  %61 = load i8, i8* %60, align 4, !dbg !12306
  %62 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12307
  %63 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %62, i32 0, i32 4, !dbg !12308
  %64 = bitcast %union.anon.2* %63 to %struct.anon.3*, !dbg !12308
  %65 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %64, i32 0, i32 0, !dbg !12309
  store i8 %61, i8* %65, align 2, !dbg !12310
  %66 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12311
  %67 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %66, i32 0, i32 47, !dbg !12312
  %68 = load i32, i32* %67, align 8, !dbg !12312
  %69 = udiv i32 %68, 1000000, !dbg !12313
  %70 = trunc i32 %69 to i8, !dbg !12314
  %71 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12315
  %72 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %71, i32 0, i32 4, !dbg !12316
  %73 = bitcast %union.anon.2* %72 to %struct.anon.3*, !dbg !12316
  %74 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %73, i32 0, i32 1, !dbg !12317
  store i8 %70, i8* %74, align 1, !dbg !12318
  %75 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12319
  %76 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %75, i32 0, i32 0, !dbg !12321
  %77 = load i16, i16* %76, align 8, !dbg !12321
  %78 = zext i16 %77 to i32, !dbg !12319
  %79 = icmp eq i32 %78, 2, !dbg !12322
  br i1 %79, label %80, label %196, !dbg !12323

; <label>:80:                                     ; preds = %54
  %81 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12324
  %82 = bitcast %struct._vrrphdr* %81 to i8*, !dbg !12326
  %83 = getelementptr inbounds i8, i8* %82, i64 8, !dbg !12327
  %84 = bitcast i8* %83 to %struct.in_addr*, !dbg !12328
  store %struct.in_addr* %84, %struct.in_addr** %7, align 8, !dbg !12329
  %85 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12330
  %86 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %85, i32 0, i32 41, !dbg !12332
  %87 = load %struct._list*, %struct._list** %86, align 8, !dbg !12332
  %88 = icmp eq %struct._list* %87, null, !dbg !12333
  br i1 %88, label %141, label %89, !dbg !12334

; <label>:89:                                     ; preds = %80
  %90 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12335
  %91 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %90, i32 0, i32 41, !dbg !12337
  %92 = load %struct._list*, %struct._list** %91, align 8, !dbg !12337
  %93 = getelementptr inbounds %struct._list, %struct._list* %92, i32 0, i32 0, !dbg !12338
  %94 = load %struct._element*, %struct._element** %93, align 8, !dbg !12338
  %95 = icmp eq %struct._element* %94, null, !dbg !12339
  br i1 %95, label %96, label %103, !dbg !12340

; <label>:96:                                     ; preds = %89
  %97 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12341
  %98 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %97, i32 0, i32 41, !dbg !12343
  %99 = load %struct._list*, %struct._list** %98, align 8, !dbg !12343
  %100 = getelementptr inbounds %struct._list, %struct._list* %99, i32 0, i32 1, !dbg !12344
  %101 = load %struct._element*, %struct._element** %100, align 8, !dbg !12344
  %102 = icmp eq %struct._element* %101, null, !dbg !12345
  br i1 %102, label %141, label %103, !dbg !12346

; <label>:103:                                    ; preds = %96, %89
  %104 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12347
  %105 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %104, i32 0, i32 41, !dbg !12350
  %106 = load %struct._list*, %struct._list** %105, align 8, !dbg !12350
  %107 = icmp ne %struct._list* %106, null, !dbg !12351
  br i1 %107, label %109, label %108, !dbg !12352

; <label>:108:                                    ; preds = %103
  br label %115, !dbg !12353

; <label>:109:                                    ; preds = %103
  %110 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12355
  %111 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %110, i32 0, i32 41, !dbg !12357
  %112 = load %struct._list*, %struct._list** %111, align 8, !dbg !12357
  %113 = getelementptr inbounds %struct._list, %struct._list* %112, i32 0, i32 0, !dbg !12358
  %114 = load %struct._element*, %struct._element** %113, align 8, !dbg !12358
  br label %115, !dbg !12359

; <label>:115:                                    ; preds = %109, %108
  %116 = phi %struct._element* [ null, %108 ], [ %114, %109 ], !dbg !12360
  store %struct._element* %116, %struct._element** %9, align 8, !dbg !12362
  br label %117, !dbg !12363

; <label>:117:                                    ; preds = %136, %115
  %118 = load %struct._element*, %struct._element** %9, align 8, !dbg !12364
  %119 = icmp ne %struct._element* %118, null, !dbg !12367
  br i1 %119, label %120, label %140, !dbg !12367

; <label>:120:                                    ; preds = %117
  %121 = load %struct._element*, %struct._element** %9, align 8, !dbg !12368
  %122 = getelementptr inbounds %struct._element, %struct._element* %121, i32 0, i32 2, !dbg !12370
  %123 = load i8*, i8** %122, align 8, !dbg !12370
  %124 = bitcast i8* %123 to %struct._ip_address*, !dbg !12371
  store %struct._ip_address* %124, %struct._ip_address** %10, align 8, !dbg !12372
  %125 = load i32, i32* %5, align 4, !dbg !12373
  %126 = add nsw i32 %125, 1, !dbg !12373
  store i32 %126, i32* %5, align 4, !dbg !12373
  %127 = sext i32 %125 to i64, !dbg !12374
  %128 = load %struct.in_addr*, %struct.in_addr** %7, align 8, !dbg !12374
  %129 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %128, i64 %127, !dbg !12374
  %130 = load %struct._ip_address*, %struct._ip_address** %10, align 8, !dbg !12375
  %131 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %130, i32 0, i32 1, !dbg !12376
  %132 = bitcast %union.anon.5* %131 to %struct.anon.6*, !dbg !12377
  %133 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %132, i32 0, i32 0, !dbg !12378
  %134 = bitcast %struct.in_addr* %129 to i8*, !dbg !12378
  %135 = bitcast %struct.in_addr* %133 to i8*, !dbg !12378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %134, i8* %135, i64 4, i32 4, i1 false), !dbg !12378
  br label %136, !dbg !12379

; <label>:136:                                    ; preds = %120
  %137 = load %struct._element*, %struct._element** %9, align 8, !dbg !12380
  %138 = getelementptr inbounds %struct._element, %struct._element* %137, i32 0, i32 0, !dbg !12382
  %139 = load %struct._element*, %struct._element** %138, align 8, !dbg !12382
  store %struct._element* %139, %struct._element** %9, align 8, !dbg !12383
  br label %117, !dbg !12384, !llvm.loop !12385

; <label>:140:                                    ; preds = %117
  br label %141, !dbg !12387

; <label>:141:                                    ; preds = %140, %96, %80
  %142 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12388
  %143 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %142, i32 0, i32 75, !dbg !12390
  %144 = load i8, i8* %143, align 4, !dbg !12390
  %145 = zext i8 %144 to i32, !dbg !12388
  %146 = icmp eq i32 %145, 1, !dbg !12391
  br i1 %146, label %147, label %186, !dbg !12392

; <label>:147:                                    ; preds = %141
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12393, metadata !793), !dbg !12395
  %148 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12396
  %149 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %148, i32 0, i32 41, !dbg !12397
  %150 = load %struct._list*, %struct._list** %149, align 8, !dbg !12397
  %151 = icmp eq %struct._list* %150, null, !dbg !12398
  br i1 %151, label %172, label %152, !dbg !12399

; <label>:152:                                    ; preds = %147
  %153 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12400
  %154 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %153, i32 0, i32 41, !dbg !12402
  %155 = load %struct._list*, %struct._list** %154, align 8, !dbg !12402
  %156 = getelementptr inbounds %struct._list, %struct._list* %155, i32 0, i32 0, !dbg !12403
  %157 = load %struct._element*, %struct._element** %156, align 8, !dbg !12403
  %158 = icmp eq %struct._element* %157, null, !dbg !12404
  br i1 %158, label %159, label %166, !dbg !12405

; <label>:159:                                    ; preds = %152
  %160 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12406
  %161 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %160, i32 0, i32 41, !dbg !12408
  %162 = load %struct._list*, %struct._list** %161, align 8, !dbg !12408
  %163 = getelementptr inbounds %struct._list, %struct._list* %162, i32 0, i32 1, !dbg !12409
  %164 = load %struct._element*, %struct._element** %163, align 8, !dbg !12409
  %165 = icmp eq %struct._element* %164, null, !dbg !12410
  br i1 %165, label %172, label %166, !dbg !12411

; <label>:166:                                    ; preds = %159, %152
  %167 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12412
  %168 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %167, i32 0, i32 41, !dbg !12414
  %169 = load %struct._list*, %struct._list** %168, align 8, !dbg !12414
  %170 = getelementptr inbounds %struct._list, %struct._list* %169, i32 0, i32 2, !dbg !12415
  %171 = load i32, i32* %170, align 8, !dbg !12415
  br label %173, !dbg !12416

; <label>:172:                                    ; preds = %159, %147
  br label %173, !dbg !12417

; <label>:173:                                    ; preds = %172, %166
  %174 = phi i32 [ %171, %166 ], [ 0, %172 ], !dbg !12419
  store i32 %174, i32* %11, align 4, !dbg !12421
  call void @llvm.dbg.declare(metadata i8** %12, metadata !12422, metadata !793), !dbg !12423
  %175 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12424
  %176 = bitcast %struct._vrrphdr* %175 to i8*, !dbg !12425
  %177 = getelementptr inbounds i8, i8* %176, i64 8, !dbg !12426
  %178 = load i32, i32* %11, align 4, !dbg !12427
  %179 = mul i32 %178, 4, !dbg !12428
  %180 = zext i32 %179 to i64, !dbg !12429
  %181 = getelementptr inbounds i8, i8* %177, i64 %180, !dbg !12429
  store i8* %181, i8** %12, align 8, !dbg !12423
  %182 = load i8*, i8** %12, align 8, !dbg !12430
  %183 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12431
  %184 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %183, i32 0, i32 76, !dbg !12432
  %185 = getelementptr inbounds [8 x i8], [8 x i8]* %184, i32 0, i32 0, !dbg !12433
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %182, i8* %185, i64 8, i32 1, i1 false), !dbg !12433
  br label %186, !dbg !12434

; <label>:186:                                    ; preds = %173, %141
  %187 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12435
  %188 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %187, i32 0, i32 5, !dbg !12436
  store i16 0, i16* %188, align 2, !dbg !12437
  %189 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12438
  %190 = bitcast %struct._vrrphdr* %189 to i16*, !dbg !12439
  %191 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12440
  %192 = call i64 @vrrp_pkt_len(%struct._vrrp_t* %191), !dbg !12441
  %193 = call zeroext i16 @in_csum(i16* %190, i64 %192, i32 0, i32* null), !dbg !12442
  %194 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12444
  %195 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %194, i32 0, i32 5, !dbg !12445
  store i16 %193, i16* %195, align 2, !dbg !12446
  br label %266, !dbg !12447

; <label>:196:                                    ; preds = %54
  %197 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12448
  %198 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %197, i32 0, i32 0, !dbg !12451
  %199 = load i16, i16* %198, align 8, !dbg !12451
  %200 = zext i16 %199 to i32, !dbg !12448
  %201 = icmp eq i32 %200, 10, !dbg !12452
  br i1 %201, label %202, label %265, !dbg !12448

; <label>:202:                                    ; preds = %196
  %203 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12453
  %204 = bitcast %struct._vrrphdr* %203 to i8*, !dbg !12455
  %205 = getelementptr inbounds i8, i8* %204, i64 8, !dbg !12456
  %206 = bitcast i8* %205 to %struct.in6_addr*, !dbg !12457
  store %struct.in6_addr* %206, %struct.in6_addr** %8, align 8, !dbg !12458
  %207 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12459
  %208 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %207, i32 0, i32 41, !dbg !12461
  %209 = load %struct._list*, %struct._list** %208, align 8, !dbg !12461
  %210 = icmp eq %struct._list* %209, null, !dbg !12462
  br i1 %210, label %262, label %211, !dbg !12463

; <label>:211:                                    ; preds = %202
  %212 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12464
  %213 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %212, i32 0, i32 41, !dbg !12466
  %214 = load %struct._list*, %struct._list** %213, align 8, !dbg !12466
  %215 = getelementptr inbounds %struct._list, %struct._list* %214, i32 0, i32 0, !dbg !12467
  %216 = load %struct._element*, %struct._element** %215, align 8, !dbg !12467
  %217 = icmp eq %struct._element* %216, null, !dbg !12468
  br i1 %217, label %218, label %225, !dbg !12469

; <label>:218:                                    ; preds = %211
  %219 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12470
  %220 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %219, i32 0, i32 41, !dbg !12472
  %221 = load %struct._list*, %struct._list** %220, align 8, !dbg !12472
  %222 = getelementptr inbounds %struct._list, %struct._list* %221, i32 0, i32 1, !dbg !12473
  %223 = load %struct._element*, %struct._element** %222, align 8, !dbg !12473
  %224 = icmp eq %struct._element* %223, null, !dbg !12474
  br i1 %224, label %262, label %225, !dbg !12475

; <label>:225:                                    ; preds = %218, %211
  %226 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12476
  %227 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %226, i32 0, i32 41, !dbg !12479
  %228 = load %struct._list*, %struct._list** %227, align 8, !dbg !12479
  %229 = icmp ne %struct._list* %228, null, !dbg !12480
  br i1 %229, label %231, label %230, !dbg !12481

; <label>:230:                                    ; preds = %225
  br label %237, !dbg !12482

; <label>:231:                                    ; preds = %225
  %232 = load %struct._vrrp_t*, %struct._vrrp_t** %3, align 8, !dbg !12484
  %233 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %232, i32 0, i32 41, !dbg !12486
  %234 = load %struct._list*, %struct._list** %233, align 8, !dbg !12486
  %235 = getelementptr inbounds %struct._list, %struct._list* %234, i32 0, i32 0, !dbg !12487
  %236 = load %struct._element*, %struct._element** %235, align 8, !dbg !12487
  br label %237, !dbg !12488

; <label>:237:                                    ; preds = %231, %230
  %238 = phi %struct._element* [ null, %230 ], [ %236, %231 ], !dbg !12489
  store %struct._element* %238, %struct._element** %9, align 8, !dbg !12491
  br label %239, !dbg !12492

; <label>:239:                                    ; preds = %257, %237
  %240 = load %struct._element*, %struct._element** %9, align 8, !dbg !12493
  %241 = icmp ne %struct._element* %240, null, !dbg !12496
  br i1 %241, label %242, label %261, !dbg !12496

; <label>:242:                                    ; preds = %239
  %243 = load %struct._element*, %struct._element** %9, align 8, !dbg !12497
  %244 = getelementptr inbounds %struct._element, %struct._element* %243, i32 0, i32 2, !dbg !12499
  %245 = load i8*, i8** %244, align 8, !dbg !12499
  %246 = bitcast i8* %245 to %struct._ip_address*, !dbg !12500
  store %struct._ip_address* %246, %struct._ip_address** %10, align 8, !dbg !12501
  %247 = load i32, i32* %5, align 4, !dbg !12502
  %248 = add nsw i32 %247, 1, !dbg !12502
  store i32 %248, i32* %5, align 4, !dbg !12502
  %249 = sext i32 %247 to i64, !dbg !12503
  %250 = load %struct.in6_addr*, %struct.in6_addr** %8, align 8, !dbg !12503
  %251 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %250, i64 %249, !dbg !12503
  %252 = load %struct._ip_address*, %struct._ip_address** %10, align 8, !dbg !12504
  %253 = getelementptr inbounds %struct._ip_address, %struct._ip_address* %252, i32 0, i32 1, !dbg !12505
  %254 = bitcast %union.anon.5* %253 to %struct.in6_addr*, !dbg !12506
  %255 = bitcast %struct.in6_addr* %251 to i8*, !dbg !12506
  %256 = bitcast %struct.in6_addr* %254 to i8*, !dbg !12506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %255, i8* %256, i64 16, i32 4, i1 false), !dbg !12506
  br label %257, !dbg !12507

; <label>:257:                                    ; preds = %242
  %258 = load %struct._element*, %struct._element** %9, align 8, !dbg !12508
  %259 = getelementptr inbounds %struct._element, %struct._element* %258, i32 0, i32 0, !dbg !12510
  %260 = load %struct._element*, %struct._element** %259, align 8, !dbg !12510
  store %struct._element* %260, %struct._element** %9, align 8, !dbg !12511
  br label %239, !dbg !12512, !llvm.loop !12513

; <label>:261:                                    ; preds = %239
  br label %262, !dbg !12515

; <label>:262:                                    ; preds = %261, %218, %202
  %263 = load %struct._vrrphdr*, %struct._vrrphdr** %6, align 8, !dbg !12516
  %264 = getelementptr inbounds %struct._vrrphdr, %struct._vrrphdr* %263, i32 0, i32 5, !dbg !12517
  store i16 0, i16* %264, align 2, !dbg !12518
  br label %265, !dbg !12519

; <label>:265:                                    ; preds = %262, %196
  br label %266

; <label>:266:                                    ; preds = %265, %186
  ret void, !dbg !12520
}

; Function Attrs: nounwind uwtable
define internal void @clear_diff_vrrp_vip_list(%struct._vrrp_t*, %struct.ipt_handle*, %struct._list*, %struct._list*) #0 !dbg !12521 {
  %5 = alloca %struct._vrrp_t*, align 8
  %6 = alloca %struct.ipt_handle*, align 8
  %7 = alloca %struct._list*, align 8
  %8 = alloca %struct._list*, align 8
  store %struct._vrrp_t* %0, %struct._vrrp_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._vrrp_t** %5, metadata !12524, metadata !793), !dbg !12525
  store %struct.ipt_handle* %1, %struct.ipt_handle** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.ipt_handle** %6, metadata !12526, metadata !793), !dbg !12527
  store %struct._list* %2, %struct._list** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._list** %7, metadata !12528, metadata !793), !dbg !12529
  store %struct._list* %3, %struct._list** %8, align 8
  call void @llvm.dbg.declare(metadata %struct._list** %8, metadata !12530, metadata !793), !dbg !12531
  %9 = load %struct.ipt_handle*, %struct.ipt_handle** %6, align 8, !dbg !12532
  %10 = load %struct._list*, %struct._list** %7, align 8, !dbg !12533
  %11 = load %struct._list*, %struct._list** %8, align 8, !dbg !12534
  call void @clear_diff_address(%struct.ipt_handle* %9, %struct._list* %10, %struct._list* %11), !dbg !12535
  %12 = load %struct._list*, %struct._list** %8, align 8, !dbg !12536
  %13 = icmp eq %struct._list* %12, null, !dbg !12538
  br i1 %13, label %24, label %14, !dbg !12539

; <label>:14:                                     ; preds = %4
  %15 = load %struct._list*, %struct._list** %8, align 8, !dbg !12540
  %16 = getelementptr inbounds %struct._list, %struct._list* %15, i32 0, i32 0, !dbg !12542
  %17 = load %struct._element*, %struct._element** %16, align 8, !dbg !12542
  %18 = icmp eq %struct._element* %17, null, !dbg !12543
  br i1 %18, label %19, label %25, !dbg !12544

; <label>:19:                                     ; preds = %14
  %20 = load %struct._list*, %struct._list** %8, align 8, !dbg !12545
  %21 = getelementptr inbounds %struct._list, %struct._list* %20, i32 0, i32 1, !dbg !12547
  %22 = load %struct._element*, %struct._element** %21, align 8, !dbg !12547
  %23 = icmp eq %struct._element* %22, null, !dbg !12548
  br i1 %23, label %24, label %25, !dbg !12549

; <label>:24:                                     ; preds = %19, %4
  br label %44, !dbg !12550

; <label>:25:                                     ; preds = %19, %14
  %26 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !12551
  %27 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %26, i32 0, i32 37, !dbg !12553
  %28 = load i8, i8* %27, align 1, !dbg !12553
  %29 = zext i8 %28 to i32, !dbg !12551
  %30 = icmp eq i32 %29, 255, !dbg !12554
  br i1 %30, label %36, label %31, !dbg !12555

; <label>:31:                                     ; preds = %25
  %32 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !12556
  %33 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %32, i32 0, i32 49, !dbg !12558
  %34 = load i32, i32* %33, align 8, !dbg !12558
  %35 = icmp ne i32 %34, 0, !dbg !12556
  br i1 %35, label %36, label %41, !dbg !12559

; <label>:36:                                     ; preds = %31, %25
  %37 = load %struct.ipt_handle*, %struct.ipt_handle** %6, align 8, !dbg !12560
  %38 = load %struct._list*, %struct._list** %8, align 8, !dbg !12562
  call void @handle_iptable_rule_to_iplist(%struct.ipt_handle* %37, %struct._list* %38, i32 0, i1 zeroext false), !dbg !12563
  %39 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !12564
  %40 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %39, i32 0, i32 51, !dbg !12565
  store i8 0, i8* %40, align 8, !dbg !12566
  br label %44, !dbg !12567

; <label>:41:                                     ; preds = %31
  %42 = load %struct._vrrp_t*, %struct._vrrp_t** %5, align 8, !dbg !12568
  %43 = getelementptr inbounds %struct._vrrp_t, %struct._vrrp_t* %42, i32 0, i32 51, !dbg !12569
  store i8 1, i8* %43, align 8, !dbg !12570
  br label %44

; <label>:44:                                     ; preds = %24, %41, %36
  ret void, !dbg !12571
}

declare void @clear_diff_address(%struct.ipt_handle*, %struct._list*, %struct._list*) #3

declare void @clear_diff_routes(%struct._list*, %struct._list*) #3

declare void @clear_diff_rules(%struct._list*, %struct._list*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!520, !521}
!llvm.ident = !{!522}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.1-4ubuntu3~16.04.2 (tags/RELEASE_391/rc2)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !183, globals: !509)
!1 = !DIFile(filename: "[inter]keepalived--vrrp--vrrp.o.i", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!2 = !{!3, !11, !32, !61, !80, !95, !107, !119, !125, !141, !148, !153, !176}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chksum_compatibility", file: !4, line: 173, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./../include/vrrp.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!5 = !{!6, !7, !8, !9, !10}
!6 = !DIEnumerator(name: "CHKSUM_COMPATIBILITY_NONE", value: 0)
!7 = !DIEnumerator(name: "CHKSUM_COMPATIBILITY_NEVER", value: 1)
!8 = !DIEnumerator(name: "CHKSUM_COMPATIBILITY_MIN_COMPAT", value: 2)
!9 = !DIEnumerator(name: "CHKSUM_COMPATIBILITY_CONFIG", value: 3)
!10 = !DIEnumerator(name: "CHKSUM_COMPATIBILITY_AUTO", value: 4)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !12, line: 41, size: 32, align: 32, elements: !13)
!12 = !DIFile(filename: "../../lib/scheduler.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31}
!14 = !DIEnumerator(name: "THREAD_READ", value: 0)
!15 = !DIEnumerator(name: "THREAD_WRITE", value: 1)
!16 = !DIEnumerator(name: "THREAD_TIMER", value: 2)
!17 = !DIEnumerator(name: "THREAD_TIMER_SHUTDOWN", value: 3)
!18 = !DIEnumerator(name: "THREAD_EVENT", value: 4)
!19 = !DIEnumerator(name: "THREAD_CHILD", value: 5)
!20 = !DIEnumerator(name: "THREAD_READY", value: 6)
!21 = !DIEnumerator(name: "THREAD_UNUSED", value: 7)
!22 = !DIEnumerator(name: "THREAD_WRITE_TIMEOUT", value: 8)
!23 = !DIEnumerator(name: "THREAD_READ_TIMEOUT", value: 9)
!24 = !DIEnumerator(name: "THREAD_CHILD_TIMEOUT", value: 10)
!25 = !DIEnumerator(name: "THREAD_TERMINATE_START", value: 11)
!26 = !DIEnumerator(name: "THREAD_TERMINATE", value: 12)
!27 = !DIEnumerator(name: "THREAD_READY_FD", value: 13)
!28 = !DIEnumerator(name: "THREAD_READ_ERROR", value: 14)
!29 = !DIEnumerator(name: "THREAD_WRITE_ERROR", value: 15)
!30 = !DIEnumerator(name: "THREAD_IF_UP", value: 16)
!31 = !DIEnumerator(name: "THREAD_IF_DOWN", value: 17)
!32 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !33, line: 40, size: 32, align: 32, elements: !34)
!33 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!34 = !{!35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60}
!35 = !DIEnumerator(name: "IPPROTO_IP", value: 0)
!36 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1)
!37 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2)
!38 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4)
!39 = !DIEnumerator(name: "IPPROTO_TCP", value: 6)
!40 = !DIEnumerator(name: "IPPROTO_EGP", value: 8)
!41 = !DIEnumerator(name: "IPPROTO_PUP", value: 12)
!42 = !DIEnumerator(name: "IPPROTO_UDP", value: 17)
!43 = !DIEnumerator(name: "IPPROTO_IDP", value: 22)
!44 = !DIEnumerator(name: "IPPROTO_TP", value: 29)
!45 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33)
!46 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41)
!47 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46)
!48 = !DIEnumerator(name: "IPPROTO_GRE", value: 47)
!49 = !DIEnumerator(name: "IPPROTO_ESP", value: 50)
!50 = !DIEnumerator(name: "IPPROTO_AH", value: 51)
!51 = !DIEnumerator(name: "IPPROTO_MTP", value: 92)
!52 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94)
!53 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98)
!54 = !DIEnumerator(name: "IPPROTO_PIM", value: 103)
!55 = !DIEnumerator(name: "IPPROTO_COMP", value: 108)
!56 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132)
!57 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136)
!58 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137)
!59 = !DIEnumerator(name: "IPPROTO_RAW", value: 255)
!60 = !DIEnumerator(name: "IPPROTO_MAX", value: 256)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !62, line: 42, size: 32, align: 32, elements: !63)
!62 = !DIFile(filename: "/usr/include/net/if.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!63 = !{!64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79}
!64 = !DIEnumerator(name: "IFF_UP", value: 1)
!65 = !DIEnumerator(name: "IFF_BROADCAST", value: 2)
!66 = !DIEnumerator(name: "IFF_DEBUG", value: 4)
!67 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8)
!68 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16)
!69 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32)
!70 = !DIEnumerator(name: "IFF_RUNNING", value: 64)
!71 = !DIEnumerator(name: "IFF_NOARP", value: 128)
!72 = !DIEnumerator(name: "IFF_PROMISC", value: 256)
!73 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512)
!74 = !DIEnumerator(name: "IFF_MASTER", value: 1024)
!75 = !DIEnumerator(name: "IFF_SLAVE", value: 2048)
!76 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096)
!77 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192)
!78 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384)
!79 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "global_bits", file: !81, line: 53, size: 32, align: 32, elements: !82)
!81 = !DIFile(filename: "../../lib/bitops.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!82 = !{!83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!83 = !DIEnumerator(name: "LOG_CONSOLE_BIT", value: 0)
!84 = !DIEnumerator(name: "NO_SYSLOG_BIT", value: 1)
!85 = !DIEnumerator(name: "DONT_FORK_BIT", value: 2)
!86 = !DIEnumerator(name: "DUMP_CONF_BIT", value: 3)
!87 = !DIEnumerator(name: "DONT_RELEASE_VRRP_BIT", value: 4)
!88 = !DIEnumerator(name: "RELEASE_VIPS_BIT", value: 5)
!89 = !DIEnumerator(name: "DONT_RELEASE_IPVS_BIT", value: 6)
!90 = !DIEnumerator(name: "LOG_DETAIL_BIT", value: 7)
!91 = !DIEnumerator(name: "LOG_EXTRA_DETAIL_BIT", value: 8)
!92 = !DIEnumerator(name: "DONT_RESPAWN_BIT", value: 9)
!93 = !DIEnumerator(name: "LOG_ADDRESS_CHANGES", value: 10)
!94 = !DIEnumerator(name: "CONFIG_TEST_BIT", value: 11)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !96, line: 119, size: 32, align: 32, elements: !97)
!96 = !DIFile(filename: "./../include/vrrp_track.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106}
!98 = !DIEnumerator(name: "TRACK_VRRP", value: 1)
!99 = !DIEnumerator(name: "TRACK_IF", value: 2)
!100 = !DIEnumerator(name: "TRACK_SG", value: 4)
!101 = !DIEnumerator(name: "TRACK_ADDR", value: 4)
!102 = !DIEnumerator(name: "TRACK_ROUTE", value: 8)
!103 = !DIEnumerator(name: "TRACK_RULE", value: 16)
!104 = !DIEnumerator(name: "TRACK_SADDR", value: 32)
!105 = !DIEnumerator(name: "TRACK_SROUTE", value: 64)
!106 = !DIEnumerator(name: "TRACK_SRULE", value: 128)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !108, line: 24, size: 32, align: 32, elements: !109)
!108 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!109 = !{!110, !111, !112, !113, !114, !115, !116, !117, !118}
!110 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!111 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!112 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!113 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!114 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!115 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!116 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!117 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!118 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vrrp_vmac_bits", file: !120, line: 40, size: 32, align: 32, elements: !121)
!120 = !DIFile(filename: "./../include/vrrp_vmac.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!121 = !{!122, !123, !124}
!122 = !DIEnumerator(name: "VRRP_VMAC_BIT", value: 0)
!123 = !DIEnumerator(name: "VRRP_VMAC_UP_BIT", value: 1)
!124 = !DIEnumerator(name: "VRRP_VMAC_XMITBASE_BIT", value: 2)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !126, line: 44, size: 32, align: 32, elements: !127)
!126 = !DIFile(filename: "../../lib/parser.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140}
!128 = !DIEnumerator(name: "CONFIG_OK", value: 0)
!129 = !DIEnumerator(name: "CONFIG_FILE_NOT_FOUND", value: 1)
!130 = !DIEnumerator(name: "CONFIG_BAD_IF", value: 2)
!131 = !DIEnumerator(name: "CONFIG_FATAL", value: 3)
!132 = !DIEnumerator(name: "CONFIG_MULTIPLE_FILES", value: 4)
!133 = !DIEnumerator(name: "CONFIG_UNKNOWN_KEYWORD", value: 5)
!134 = !DIEnumerator(name: "CONFIG_UNEXPECTED_BOB", value: 6)
!135 = !DIEnumerator(name: "CONFIG_MISSING_BOB", value: 7)
!136 = !DIEnumerator(name: "CONFIG_UNMATCHED_QUOTE", value: 8)
!137 = !DIEnumerator(name: "CONFIG_MISSING_PARAMETER", value: 9)
!138 = !DIEnumerator(name: "CONFIG_INVALID_NUMBER", value: 10)
!139 = !DIEnumerator(name: "CONFIG_GENERAL_ERROR", value: 11)
!140 = !DIEnumerator(name: "CONFIG_SECURITY_ERROR", value: 12)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !142, line: 45, size: 32, align: 32, elements: !143)
!142 = !DIFile(filename: "../../lib/notify.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "SCRIPT_STATE_IDLE", value: 0)
!145 = !DIEnumerator(name: "SCRIPT_STATE_RUNNING", value: 1)
!146 = !DIEnumerator(name: "SCRIPT_STATE_REQUESTING_TERMINATION", value: 2)
!147 = !DIEnumerator(name: "SCRIPT_STATE_FORCING_TERMINATION", value: 3)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !142, line: 52, size: 32, align: 32, elements: !149)
!149 = !{!150, !151, !152}
!150 = !DIEnumerator(name: "SCRIPT_INIT_STATE_DONE", value: 0)
!151 = !DIEnumerator(name: "SCRIPT_INIT_STATE_INIT", value: 1)
!152 = !DIEnumerator(name: "SCRIPT_INIT_STATE_FAILED", value: 2)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !154, line: 175, size: 32, align: 32, elements: !155)
!154 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!155 = !{!156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!156 = !DIEnumerator(name: "MSG_OOB", value: 1)
!157 = !DIEnumerator(name: "MSG_PEEK", value: 2)
!158 = !DIEnumerator(name: "MSG_DONTROUTE", value: 4)
!159 = !DIEnumerator(name: "MSG_TRYHARD", value: 4)
!160 = !DIEnumerator(name: "MSG_CTRUNC", value: 8)
!161 = !DIEnumerator(name: "MSG_PROXY", value: 16)
!162 = !DIEnumerator(name: "MSG_TRUNC", value: 32)
!163 = !DIEnumerator(name: "MSG_DONTWAIT", value: 64)
!164 = !DIEnumerator(name: "MSG_EOR", value: 128)
!165 = !DIEnumerator(name: "MSG_WAITALL", value: 256)
!166 = !DIEnumerator(name: "MSG_FIN", value: 512)
!167 = !DIEnumerator(name: "MSG_SYN", value: 1024)
!168 = !DIEnumerator(name: "MSG_CONFIRM", value: 2048)
!169 = !DIEnumerator(name: "MSG_RST", value: 4096)
!170 = !DIEnumerator(name: "MSG_ERRQUEUE", value: 8192)
!171 = !DIEnumerator(name: "MSG_NOSIGNAL", value: 16384)
!172 = !DIEnumerator(name: "MSG_MORE", value: 32768)
!173 = !DIEnumerator(name: "MSG_WAITFORONE", value: 65536)
!174 = !DIEnumerator(name: "MSG_FASTOPEN", value: 536870912)
!175 = !DIEnumerator(name: "MSG_CMSG_CLOEXEC", value: 1073741824)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "if_lookup", file: !177, line: 142, size: 32, align: 32, elements: !178)
!177 = !DIFile(filename: "./../include/vrrp_if.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!178 = !{!179, !180, !181, !182}
!179 = !DIEnumerator(name: "IF_NO_CREATE", value: 0)
!180 = !DIEnumerator(name: "IF_CREATE_IF_DYNAMIC", value: 1)
!181 = !DIEnumerator(name: "IF_CREATE_ALWAYS", value: 2)
!182 = !DIEnumerator(name: "IF_CREATE_NETLINK", value: 3)
!183 = !{!184, !206, !230, !232, !233, !251, !268, !246, !276, !290, !291, !292, !295, !306, !311, !506, !228, !211, !507, !508}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !186, line: 44, size: 160, align: 32, elements: !187)
!186 = !DIFile(filename: "/usr/include/netinet/ip.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!187 = !{!188, !190, !191, !195, !198, !199, !200, !201, !202, !203, !205}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !185, file: !186, line: 47, baseType: !189, size: 4, align: 32, flags: DIFlagBitField, extraData: i64 0)
!189 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !185, file: !186, line: 48, baseType: !189, size: 4, align: 32, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !185, file: !186, line: 55, baseType: !192, size: 8, align: 8, offset: 8)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int8_t", file: !193, line: 200, baseType: !194)
!193 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!194 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !185, file: !186, line: 56, baseType: !196, size: 16, align: 16, offset: 16)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int16_t", file: !193, line: 201, baseType: !197)
!197 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !185, file: !186, line: 57, baseType: !196, size: 16, align: 16, offset: 32)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !185, file: !186, line: 58, baseType: !196, size: 16, align: 16, offset: 48)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !185, file: !186, line: 59, baseType: !192, size: 8, align: 8, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !185, file: !186, line: 60, baseType: !192, size: 8, align: 8, offset: 72)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !185, file: !186, line: 61, baseType: !196, size: 16, align: 16, offset: 80)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !185, file: !186, line: 62, baseType: !204, size: 32, align: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int32_t", file: !193, line: 202, baseType: !189)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !185, file: !186, line: 63, baseType: !204, size: 32, align: 32, offset: 128)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64, align: 64)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "vrrphdr_t", file: !4, line: 72, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_vrrphdr", file: !4, line: 55, size: 64, align: 16, elements: !209)
!209 = !{!210, !213, !214, !215, !216, !229}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "vers_type", scope: !208, file: !4, line: 56, baseType: !211, size: 8, align: 8)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !212, line: 48, baseType: !194)
!212 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!213 = !DIDerivedType(tag: DW_TAG_member, name: "vrid", scope: !208, file: !4, line: 57, baseType: !211, size: 8, align: 8, offset: 8)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !208, file: !4, line: 58, baseType: !211, size: 8, align: 8, offset: 16)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "naddr", scope: !208, file: !4, line: 59, baseType: !211, size: 8, align: 8, offset: 24)
!216 = !DIDerivedType(tag: DW_TAG_member, scope: !208, file: !4, line: 60, baseType: !217, size: 16, align: 16, offset: 32)
!217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !208, file: !4, line: 60, size: 16, align: 16, elements: !218)
!218 = !{!219, !224}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !217, file: !4, line: 64, baseType: !220, size: 16, align: 8)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !217, file: !4, line: 61, size: 16, align: 8, elements: !221)
!221 = !{!222, !223}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "auth_type", scope: !220, file: !4, line: 62, baseType: !211, size: 8, align: 8)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "adver_int", scope: !220, file: !4, line: 63, baseType: !211, size: 8, align: 8, offset: 8)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !217, file: !4, line: 67, baseType: !225, size: 16, align: 16)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !217, file: !4, line: 65, size: 16, align: 16, elements: !226)
!226 = !{!227}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "adver_int", scope: !225, file: !4, line: 66, baseType: !228, size: 16, align: 16)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !212, line: 49, baseType: !197)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "chksum", scope: !208, file: !4, line: 69, baseType: !228, size: 16, align: 16, offset: 48)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64, align: 64)
!231 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64, align: 64)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !33, line: 239, size: 128, align: 32, elements: !235)
!235 = !{!236, !239, !241, !247}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !234, file: !33, line: 241, baseType: !237, size: 16, align: 16)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !238, line: 28, baseType: !197)
!238 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!239 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !234, file: !33, line: 242, baseType: !240, size: 16, align: 16, offset: 16)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !33, line: 119, baseType: !228)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !234, file: !33, line: 243, baseType: !242, size: 32, align: 32, offset: 32)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !33, line: 31, size: 32, align: 32, elements: !243)
!243 = !{!244}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !242, file: !33, line: 33, baseType: !245, size: 32, align: 32)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !33, line: 30, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !212, line: 51, baseType: !189)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !234, file: !33, line: 246, baseType: !248, size: 64, align: 8, offset: 64)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 64, align: 8, elements: !249)
!249 = !{!250}
!250 = !DISubrange(count: 8)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !33, line: 211, size: 128, align: 32, elements: !254)
!254 = !{!255}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !253, file: !33, line: 220, baseType: !256, size: 128, align: 32)
!256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !253, file: !33, line: 213, size: 128, align: 32, elements: !257)
!257 = !{!258, !262, !264}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !256, file: !33, line: 215, baseType: !259, size: 128, align: 8)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 128, align: 8, elements: !260)
!260 = !{!261}
!261 = !DISubrange(count: 16)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !256, file: !33, line: 217, baseType: !263, size: 128, align: 16)
!263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 128, align: 16, elements: !249)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !256, file: !33, line: 218, baseType: !265, size: 128, align: 32)
!265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 128, align: 32, elements: !266)
!266 = !{!267}
!267 = !DISubrange(count: 4)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64, align: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !33, line: 254, size: 224, align: 32, elements: !270)
!270 = !{!271, !272, !273, !274, !275}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !269, file: !33, line: 256, baseType: !237, size: 16, align: 16)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !269, file: !33, line: 257, baseType: !240, size: 16, align: 16, offset: 16)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !269, file: !33, line: 258, baseType: !246, size: 32, align: 32, offset: 32)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !269, file: !33, line: 259, baseType: !253, size: 128, align: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !269, file: !33, line: 260, baseType: !246, size: 32, align: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64, align: 64)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipsec_ah_t", file: !278, line: 47, baseType: !279)
!278 = !DIFile(filename: "./../include/vrrp_ipsecah.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ipsec_ah", file: !278, line: 39, size: 192, align: 32, elements: !280)
!280 = !{!281, !282, !283, !284, !285, !286}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "next_header", scope: !279, file: !278, line: 40, baseType: !211, size: 8, align: 8)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "payload_len", scope: !279, file: !278, line: 41, baseType: !211, size: 8, align: 8, offset: 8)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !279, file: !278, line: 42, baseType: !228, size: 16, align: 16, offset: 16)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !279, file: !278, line: 43, baseType: !246, size: 32, align: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "seq_number", scope: !279, file: !278, line: 44, baseType: !246, size: 32, align: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "auth_data", scope: !279, file: !278, line: 45, baseType: !287, size: 96, align: 8, offset: 96)
!287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 96, align: 8, elements: !288)
!288 = !{!289}
!289 = !DISubrange(count: 12)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !293, line: 216, baseType: !294)
!293 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!294 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64, align: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cmsghdr", file: !154, line: 246, size: 128, align: 64, elements: !297)
!297 = !{!298, !299, !301, !302}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "cmsg_len", scope: !296, file: !154, line: 248, baseType: !292, size: 64, align: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "cmsg_level", scope: !296, file: !154, line: 253, baseType: !300, size: 32, align: 32, offset: 64)
!300 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "cmsg_type", scope: !296, file: !154, line: 254, baseType: !300, size: 32, align: 32, offset: 96)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "__cmsg_data", scope: !296, file: !154, line: 256, baseType: !303, offset: 128)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, align: 8, elements: !304)
!304 = !{!305}
!305 = !DISubrange(count: -1)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64, align: 64)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_pktinfo", file: !33, line: 537, size: 160, align: 32, elements: !308)
!308 = !{!309, !310}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "ipi6_addr", scope: !307, file: !33, line: 539, baseType: !253, size: 128, align: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "ipi6_ifindex", scope: !307, file: !33, line: 540, baseType: !189, size: 32, align: 32, offset: 128)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64, align: 64)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip_address_t", file: !313, line: 73, baseType: !314)
!313 = !DIFile(filename: "./../include/vrrp_ipaddress.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ip_address", file: !313, line: 41, size: 704, align: 64, elements: !315)
!315 = !{!316, !328, !337, !475, !476, !477, !478, !479, !484, !485, !503, !504, !505}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "ifa", scope: !314, file: !313, line: 42, baseType: !317, size: 64, align: 32)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifaddrmsg", file: !318, line: 7, size: 64, align: 32, elements: !319)
!318 = !DIFile(filename: "/usr/include/linux/if_addr.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!319 = !{!320, !323, !324, !325, !326}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_family", scope: !317, file: !318, line: 8, baseType: !321, size: 8, align: 8)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !322, line: 20, baseType: !194)
!322 = !DIFile(filename: "/usr/include/asm-generic/int-ll64.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!323 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_prefixlen", scope: !317, file: !318, line: 9, baseType: !321, size: 8, align: 8, offset: 8)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_flags", scope: !317, file: !318, line: 10, baseType: !321, size: 8, align: 8, offset: 16)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_scope", scope: !317, file: !318, line: 11, baseType: !321, size: 8, align: 8, offset: 24)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_index", scope: !317, file: !318, line: 12, baseType: !327, size: 32, align: 32, offset: 32)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !322, line: 26, baseType: !189)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !314, file: !313, line: 50, baseType: !329, size: 128, align: 32, offset: 64)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !314, file: !313, line: 44, size: 128, align: 32, elements: !330)
!330 = !{!331, !336}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !329, file: !313, line: 48, baseType: !332, size: 64, align: 32)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !329, file: !313, line: 45, size: 64, align: 32, elements: !333)
!333 = !{!334, !335}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !332, file: !313, line: 46, baseType: !242, size: 32, align: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "sin_brd", scope: !332, file: !313, line: 47, baseType: !242, size: 32, align: 32, offset: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !329, file: !313, line: 49, baseType: !253, size: 128, align: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ifp", scope: !314, file: !313, line: 52, baseType: !338, size: 64, align: 64, offset: 192)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64, align: 64)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "interface_t", file: !177, line: 111, baseType: !340)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_interface", file: !177, line: 76, size: 1792, align: 64, elements: !341)
!341 = !{!342, !344, !346, !347, !348, !349, !351, !352, !353, !360, !361, !362, !363, !364, !365, !367, !368, !369, !370, !392, !393, !394, !395, !396, !397, !398, !399}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ifname", scope: !340, file: !177, line: 77, baseType: !343, size: 128, align: 8)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 128, align: 8, elements: !260)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !340, file: !177, line: 78, baseType: !345, size: 32, align: 32, offset: 128)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "ifindex_t", file: !177, line: 62, baseType: !246)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !340, file: !177, line: 79, baseType: !242, size: 32, align: 32, offset: 160)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !340, file: !177, line: 80, baseType: !253, size: 128, align: 32, offset: 192)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ifi_flags", scope: !340, file: !177, line: 81, baseType: !189, size: 32, align: 32, offset: 320)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "linkbeat_use_polling", scope: !340, file: !177, line: 82, baseType: !350, size: 8, align: 8, offset: 352)
!350 = !DIBasicType(name: "_Bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !340, file: !177, line: 83, baseType: !246, size: 32, align: 32, offset: 384)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "hw_type", scope: !340, file: !177, line: 84, baseType: !197, size: 16, align: 16, offset: 416)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "hw_addr", scope: !340, file: !177, line: 85, baseType: !354, size: 256, align: 8, offset: 432)
!354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 256, align: 8, elements: !358)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_char", file: !193, line: 33, baseType: !356)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u_char", file: !357, line: 30, baseType: !194)
!357 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!358 = !{!359}
!359 = !DISubrange(count: 32)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "hw_addr_bcast", scope: !340, file: !177, line: 86, baseType: !354, size: 256, align: 8, offset: 688)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "hw_addr_len", scope: !340, file: !177, line: 87, baseType: !292, size: 64, align: 64, offset: 960)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "lb_type", scope: !340, file: !177, line: 88, baseType: !300, size: 32, align: 32, offset: 1024)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "vmac", scope: !340, file: !177, line: 90, baseType: !350, size: 8, align: 8, offset: 1056)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "base_ifindex", scope: !340, file: !177, line: 91, baseType: !345, size: 32, align: 32, offset: 1088)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "base_ifp", scope: !340, file: !177, line: 92, baseType: !366, size: 64, align: 64, offset: 1152)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64, align: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "vrf_master_ifindex", scope: !340, file: !177, line: 94, baseType: !345, size: 32, align: 32, offset: 1216)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "vrf_master_ifp", scope: !340, file: !177, line: 96, baseType: !366, size: 64, align: 64, offset: 1280)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "vrf_master", scope: !340, file: !177, line: 97, baseType: !350, size: 8, align: 8, offset: 1344)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "garp_delay", scope: !340, file: !177, line: 100, baseType: !371, size: 64, align: 64, offset: 1408)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "garp_delay_t", file: !177, line: 73, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_garp_delay", file: !177, line: 65, size: 704, align: 64, elements: !374)
!374 = !{!375, !386, !387, !388, !389, !390, !391}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "garp_interval", scope: !373, file: !177, line: 66, baseType: !376, size: 128, align: 64)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "timeval_t", file: !377, line: 31, baseType: !378)
!377 = !DIFile(filename: "../../lib/timer.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !379, line: 30, size: 128, align: 64, elements: !380)
!379 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!380 = !{!381, !384}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !378, file: !379, line: 32, baseType: !382, size: 64, align: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !357, line: 139, baseType: !383)
!383 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !378, file: !379, line: 33, baseType: !385, size: 64, align: 64, offset: 64)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !357, line: 141, baseType: !383)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "have_garp_interval", scope: !373, file: !177, line: 67, baseType: !350, size: 8, align: 8, offset: 128)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "gna_interval", scope: !373, file: !177, line: 68, baseType: !376, size: 128, align: 64, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "have_gna_interval", scope: !373, file: !177, line: 69, baseType: !350, size: 8, align: 8, offset: 320)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "garp_next_time", scope: !373, file: !177, line: 70, baseType: !376, size: 128, align: 64, offset: 384)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "gna_next_time", scope: !373, file: !177, line: 71, baseType: !376, size: 128, align: 64, offset: 512)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "aggregation_group", scope: !373, file: !177, line: 72, baseType: !300, size: 32, align: 32, offset: 640)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "gna_router", scope: !340, file: !177, line: 101, baseType: !350, size: 8, align: 8, offset: 1472)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "reset_arp_config", scope: !340, file: !177, line: 102, baseType: !300, size: 32, align: 32, offset: 1504)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "reset_arp_ignore_value", scope: !340, file: !177, line: 103, baseType: !246, size: 32, align: 32, offset: 1536)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "reset_arp_filter_value", scope: !340, file: !177, line: 104, baseType: !246, size: 32, align: 32, offset: 1568)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "reset_promote_secondaries", scope: !340, file: !177, line: 105, baseType: !246, size: 32, align: 32, offset: 1600)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "rp_filter", scope: !340, file: !177, line: 107, baseType: !189, size: 32, align: 32, offset: 1632)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "promote_secondaries_already_set", scope: !340, file: !177, line: 109, baseType: !350, size: 8, align: 8, offset: 1664)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_vrrp", scope: !340, file: !177, line: 110, baseType: !400, size: 64, align: 64, offset: 1728)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "list", file: !401, line: 31, baseType: !402)
!401 = !DIFile(filename: "../../lib/list.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64, align: 64)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_list", file: !401, line: 39, size: 320, align: 64, elements: !404)
!404 = !{!405, !412, !413, !414, !418}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !403, file: !401, line: 40, baseType: !406, size: 64, align: 64)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64, align: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_element", file: !401, line: 33, size: 192, align: 64, elements: !408)
!408 = !{!409, !410, !411}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !407, file: !401, line: 34, baseType: !406, size: 64, align: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !407, file: !401, line: 35, baseType: !406, size: 64, align: 64, offset: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !407, file: !401, line: 36, baseType: !232, size: 64, align: 64, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !403, file: !401, line: 41, baseType: !406, size: 64, align: 64, offset: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !403, file: !401, line: 42, baseType: !189, size: 32, align: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !403, file: !401, line: 43, baseType: !415, size: 64, align: 64, offset: 192)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64, align: 64)
!416 = !DISubroutineType(types: !417)
!417 = !{null, !232}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !403, file: !401, line: 44, baseType: !419, size: 64, align: 64, offset: 256)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64)
!420 = !DISubroutineType(types: !421)
!421 = !{null, !422, !232}
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64, align: 64)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !424, line: 48, baseType: !425)
!424 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !426, line: 241, size: 1728, align: 64, elements: !427)
!426 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!427 = !{!428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !448, !449, !450, !451, !453, !454, !456, !460, !463, !465, !466, !467, !468, !469, !470, !471}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !425, file: !426, line: 242, baseType: !300, size: 32, align: 32)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !425, file: !426, line: 247, baseType: !230, size: 64, align: 64, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !425, file: !426, line: 248, baseType: !230, size: 64, align: 64, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !425, file: !426, line: 249, baseType: !230, size: 64, align: 64, offset: 192)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !425, file: !426, line: 250, baseType: !230, size: 64, align: 64, offset: 256)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !425, file: !426, line: 251, baseType: !230, size: 64, align: 64, offset: 320)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !425, file: !426, line: 252, baseType: !230, size: 64, align: 64, offset: 384)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !425, file: !426, line: 253, baseType: !230, size: 64, align: 64, offset: 448)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !425, file: !426, line: 254, baseType: !230, size: 64, align: 64, offset: 512)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !425, file: !426, line: 256, baseType: !230, size: 64, align: 64, offset: 576)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !425, file: !426, line: 257, baseType: !230, size: 64, align: 64, offset: 640)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !425, file: !426, line: 258, baseType: !230, size: 64, align: 64, offset: 704)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !425, file: !426, line: 260, baseType: !441, size: 64, align: 64, offset: 768)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64, align: 64)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !426, line: 156, size: 192, align: 64, elements: !443)
!443 = !{!444, !445, !447}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !442, file: !426, line: 157, baseType: !441, size: 64, align: 64)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !442, file: !426, line: 158, baseType: !446, size: 64, align: 64, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !442, file: !426, line: 162, baseType: !300, size: 32, align: 32, offset: 128)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !425, file: !426, line: 262, baseType: !446, size: 64, align: 64, offset: 832)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !425, file: !426, line: 264, baseType: !300, size: 32, align: 32, offset: 896)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !425, file: !426, line: 268, baseType: !300, size: 32, align: 32, offset: 928)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !425, file: !426, line: 270, baseType: !452, size: 64, align: 64, offset: 960)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !357, line: 131, baseType: !383)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !425, file: !426, line: 274, baseType: !197, size: 16, align: 16, offset: 1024)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !425, file: !426, line: 275, baseType: !455, size: 8, align: 8, offset: 1040)
!455 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !425, file: !426, line: 276, baseType: !457, size: 8, align: 8, offset: 1048)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 8, align: 8, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 1)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !425, file: !426, line: 280, baseType: !461, size: 64, align: 64, offset: 1088)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64, align: 64)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !426, line: 150, baseType: null)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !425, file: !426, line: 289, baseType: !464, size: 64, align: 64, offset: 1152)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !357, line: 132, baseType: !383)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !425, file: !426, line: 297, baseType: !232, size: 64, align: 64, offset: 1216)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !425, file: !426, line: 298, baseType: !232, size: 64, align: 64, offset: 1280)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !425, file: !426, line: 299, baseType: !232, size: 64, align: 64, offset: 1344)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !425, file: !426, line: 300, baseType: !232, size: 64, align: 64, offset: 1408)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !425, file: !426, line: 302, baseType: !292, size: 64, align: 64, offset: 1472)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !425, file: !426, line: 303, baseType: !300, size: 32, align: 32, offset: 1536)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !425, file: !426, line: 305, baseType: !472, size: 160, align: 8, offset: 1568)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 160, align: 8, elements: !473)
!473 = !{!474}
!474 = !DISubrange(count: 20)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !314, file: !313, line: 53, baseType: !230, size: 64, align: 64, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !314, file: !313, line: 55, baseType: !246, size: 32, align: 32, offset: 320)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "flagmask", scope: !314, file: !313, line: 56, baseType: !246, size: 32, align: 32, offset: 352)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "have_peer", scope: !314, file: !313, line: 61, baseType: !350, size: 8, align: 8, offset: 384)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "peer", scope: !314, file: !313, line: 65, baseType: !480, size: 128, align: 32, offset: 416)
!480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !314, file: !313, line: 62, size: 128, align: 32, elements: !481)
!481 = !{!482, !483}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !480, file: !313, line: 63, baseType: !242, size: 32, align: 32)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !480, file: !313, line: 64, baseType: !253, size: 128, align: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dont_track", scope: !314, file: !313, line: 66, baseType: !350, size: 8, align: 8, offset: 544)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "track_group", scope: !314, file: !313, line: 67, baseType: !486, size: 64, align: 64, offset: 576)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64, align: 64)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "static_track_group_t", file: !488, line: 39, baseType: !489)
!488 = !DIFile(filename: "./../include/vrrp_static_track.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_track_group", file: !488, line: 35, size: 192, align: 64, elements: !490)
!490 = !{!491, !492, !502}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "gname", scope: !489, file: !488, line: 36, baseType: !230, size: 64, align: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "iname", scope: !489, file: !488, line: 37, baseType: !493, size: 64, align: 64, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64, align: 64)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "vector_t", file: !495, line: 34, baseType: !496)
!495 = !DIFile(filename: "../../lib/vector.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_vector", file: !495, line: 30, size: 128, align: 64, elements: !497)
!497 = !{!498, !499, !500}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !496, file: !495, line: 31, baseType: !189, size: 32, align: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !496, file: !495, line: 32, baseType: !189, size: 32, align: 32, offset: 32)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !496, file: !495, line: 33, baseType: !501, size: 64, align: 64, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "vrrp_instances", scope: !489, file: !488, line: 38, baseType: !400, size: 64, align: 64, offset: 128)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !314, file: !313, line: 69, baseType: !350, size: 8, align: 8, offset: 640)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "iptable_rule_set", scope: !314, file: !313, line: 70, baseType: !350, size: 8, align: 8, offset: 648)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "garp_gna_pending", scope: !314, file: !313, line: 72, baseType: !350, size: 8, align: 8, offset: 656)
!506 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64, align: 64)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64, align: 64)
!509 = !{!510, !511, !513, !514, !515, !516, !517, !518, !519}
!510 = distinct !DIGlobalVariable(name: "garp_delay", scope: !0, file: !177, line: 150, type: !400, isLocal: false, isDefinition: true, variable: %struct._list** @garp_delay)
!511 = distinct !DIGlobalVariable(name: "block_ipv4", scope: !0, file: !512, line: 85, type: !350, isLocal: false, isDefinition: true, variable: i8* @block_ipv4)
!512 = !DIFile(filename: "vrrp.c", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!513 = distinct !DIGlobalVariable(name: "block_ipv6", scope: !0, file: !512, line: 86, type: !350, isLocal: false, isDefinition: true, variable: i8* @block_ipv6)
!514 = distinct !DIGlobalVariable(name: "have_ipv4_instance", scope: !0, file: !512, line: 92, type: !350, isLocal: false, isDefinition: true, variable: i8* @have_ipv4_instance)
!515 = distinct !DIGlobalVariable(name: "have_ipv6_instance", scope: !0, file: !512, line: 93, type: !350, isLocal: false, isDefinition: true, variable: i8* @have_ipv6_instance)
!516 = distinct !DIGlobalVariable(name: "monitor_ipv4_routes", scope: !0, file: !512, line: 95, type: !350, isLocal: true, isDefinition: true, variable: i8* @monitor_ipv4_routes)
!517 = distinct !DIGlobalVariable(name: "monitor_ipv6_routes", scope: !0, file: !512, line: 96, type: !350, isLocal: true, isDefinition: true, variable: i8* @monitor_ipv6_routes)
!518 = distinct !DIGlobalVariable(name: "monitor_ipv4_rules", scope: !0, file: !512, line: 97, type: !350, isLocal: true, isDefinition: true, variable: i8* @monitor_ipv4_rules)
!519 = distinct !DIGlobalVariable(name: "monitor_ipv6_rules", scope: !0, file: !512, line: 98, type: !350, isLocal: true, isDefinition: true, variable: i8* @monitor_ipv6_rules)
!520 = !{i32 2, !"Dwarf Version", i32 4}
!521 = !{i32 2, !"Debug Info Version", i32 3}
!522 = !{!"clang version 3.9.1-4ubuntu3~16.04.2 (tags/RELEASE_391/rc2)"}
!523 = distinct !DISubprogram(name: "clear_summary_flags", scope: !512, file: !512, line: 110, type: !524, isLocal: false, isDefinition: true, scopeLine: 111, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!524 = !DISubroutineType(types: !525)
!525 = !{null}
!526 = !{}
!527 = !DILocation(line: 112, column: 21, scope: !523)
!528 = !DILocation(line: 113, column: 21, scope: !523)
!529 = !DILocation(line: 115, column: 22, scope: !523)
!530 = !DILocation(line: 116, column: 22, scope: !523)
!531 = !DILocation(line: 117, column: 21, scope: !523)
!532 = !DILocation(line: 118, column: 21, scope: !523)
!533 = !DILocation(line: 120, column: 1, scope: !523)
!534 = distinct !DISubprogram(name: "vrrp_adv_len", scope: !512, file: !512, line: 349, type: !535, isLocal: false, isDefinition: true, scopeLine: 350, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!535 = !DISubroutineType(types: !536)
!536 = !{!292, !537}
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64, align: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "vrrp_t", file: !4, line: 310, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_vrrp_t", file: !4, line: 183, size: 7040, align: 64, elements: !540)
!540 = !{!541, !542, !543, !582, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !623, !624, !625, !626, !627, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !785, !791}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !539, file: !4, line: 184, baseType: !237, size: 16, align: 16)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "iname", scope: !539, file: !4, line: 185, baseType: !230, size: 64, align: 64, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !539, file: !4, line: 186, baseType: !544, size: 64, align: 64, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64, align: 64)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "vrrp_sgroup_t", file: !4, line: 133, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_vrrp_sgroup", file: !4, line: 109, size: 1024, align: 64, elements: !547)
!547 = !{!548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !576, !577, !578, !579, !580, !581}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "gname", scope: !546, file: !4, line: 110, baseType: !230, size: 64, align: 64)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "iname", scope: !546, file: !4, line: 111, baseType: !493, size: 64, align: 64, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "vrrp_instances", scope: !546, file: !4, line: 112, baseType: !400, size: 64, align: 64, offset: 128)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "num_member_fault", scope: !546, file: !4, line: 113, baseType: !189, size: 32, align: 32, offset: 192)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "num_member_init", scope: !546, file: !4, line: 114, baseType: !189, size: 32, align: 32, offset: 224)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !546, file: !4, line: 115, baseType: !300, size: 32, align: 32, offset: 256)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "sgroup_tracking_weight", scope: !546, file: !4, line: 116, baseType: !350, size: 8, align: 8, offset: 288)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "track_ifp", scope: !546, file: !4, line: 119, baseType: !400, size: 64, align: 64, offset: 320)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "track_script", scope: !546, file: !4, line: 120, baseType: !400, size: 64, align: 64, offset: 384)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "track_file", scope: !546, file: !4, line: 121, baseType: !400, size: 64, align: 64, offset: 448)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "track_bfd", scope: !546, file: !4, line: 122, baseType: !400, size: 64, align: 64, offset: 512)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "notify_exec", scope: !546, file: !4, line: 125, baseType: !350, size: 8, align: 8, offset: 576)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "script_backup", scope: !546, file: !4, line: 126, baseType: !561, size: 64, align: 64, offset: 640)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64, align: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "notify_script_t", file: !142, line: 65, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_notify_script", file: !142, line: 59, size: 192, align: 64, elements: !564)
!564 = !{!565, !567, !568, !569, !573}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !563, file: !142, line: 60, baseType: !566, size: 64, align: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64, align: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "num_args", scope: !563, file: !142, line: 61, baseType: !300, size: 32, align: 32, offset: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !563, file: !142, line: 62, baseType: !300, size: 32, align: 32, offset: 96)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !563, file: !142, line: 63, baseType: !570, size: 32, align: 32, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !571, line: 240, baseType: !572)
!571 = !DIFile(filename: "/usr/include/unistd.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!572 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !357, line: 125, baseType: !189)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !563, file: !142, line: 64, baseType: !574, size: 32, align: 32, offset: 160)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !571, line: 235, baseType: !575)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !357, line: 126, baseType: !189)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "script_master", scope: !546, file: !4, line: 127, baseType: !561, size: 64, align: 64, offset: 704)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "script_fault", scope: !546, file: !4, line: 128, baseType: !561, size: 64, align: 64, offset: 768)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "script_stop", scope: !546, file: !4, line: 129, baseType: !561, size: 64, align: 64, offset: 832)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !546, file: !4, line: 130, baseType: !561, size: 64, align: 64, offset: 896)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "smtp_alert", scope: !546, file: !4, line: 131, baseType: !300, size: 32, align: 32, offset: 960)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "last_email_state", scope: !546, file: !4, line: 132, baseType: !300, size: 32, align: 32, offset: 992)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !539, file: !4, line: 187, baseType: !583, size: 64, align: 64, offset: 192)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64, align: 64)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "vrrp_stats", file: !4, line: 169, baseType: !585)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_vrrp_stats", file: !4, line: 136, size: 768, align: 64, elements: !586)
!586 = !{!587, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "advert_rcvd", scope: !585, file: !4, line: 137, baseType: !588, size: 64, align: 64)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !212, line: 55, baseType: !294)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "advert_sent", scope: !585, file: !4, line: 138, baseType: !246, size: 32, align: 32, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "become_master", scope: !585, file: !4, line: 140, baseType: !246, size: 32, align: 32, offset: 96)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "release_master", scope: !585, file: !4, line: 141, baseType: !246, size: 32, align: 32, offset: 128)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "packet_len_err", scope: !585, file: !4, line: 143, baseType: !588, size: 64, align: 64, offset: 192)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "advert_interval_err", scope: !585, file: !4, line: 144, baseType: !588, size: 64, align: 64, offset: 256)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ttl_err", scope: !585, file: !4, line: 145, baseType: !588, size: 64, align: 64, offset: 320)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_type_rcvd", scope: !585, file: !4, line: 146, baseType: !588, size: 64, align: 64, offset: 384)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_err", scope: !585, file: !4, line: 147, baseType: !588, size: 64, align: 64, offset: 448)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_authtype", scope: !585, file: !4, line: 149, baseType: !246, size: 32, align: 32, offset: 512)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "authtype_mismatch", scope: !585, file: !4, line: 151, baseType: !246, size: 32, align: 32, offset: 544)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "auth_failure", scope: !585, file: !4, line: 152, baseType: !246, size: 32, align: 32, offset: 576)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "pri_zero_rcvd", scope: !585, file: !4, line: 155, baseType: !588, size: 64, align: 64, offset: 640)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "pri_zero_sent", scope: !585, file: !4, line: 156, baseType: !588, size: 64, align: 64, offset: 704)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "ifp", scope: !539, file: !4, line: 188, baseType: !338, size: 64, align: 64, offset: 256)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "dont_track_primary", scope: !539, file: !4, line: 189, baseType: !350, size: 8, align: 8, offset: 320)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "linkbeat_use_polling", scope: !539, file: !4, line: 190, baseType: !350, size: 8, align: 8, offset: 328)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "skip_check_adv_addr", scope: !539, file: !4, line: 191, baseType: !350, size: 8, align: 8, offset: 336)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "strict_mode", scope: !539, file: !4, line: 193, baseType: !189, size: 32, align: 32, offset: 352)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "vmac_flags", scope: !539, file: !4, line: 195, baseType: !294, size: 64, align: 64, offset: 384)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "vmac_ifname", scope: !539, file: !4, line: 196, baseType: !343, size: 128, align: 8, offset: 448)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "track_ifp", scope: !539, file: !4, line: 198, baseType: !400, size: 64, align: 64, offset: 576)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "track_script", scope: !539, file: !4, line: 199, baseType: !400, size: 64, align: 64, offset: 640)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "track_file", scope: !539, file: !4, line: 200, baseType: !400, size: 64, align: 64, offset: 704)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "num_script_if_fault", scope: !539, file: !4, line: 204, baseType: !189, size: 32, align: 32, offset: 768)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "num_script_init", scope: !539, file: !4, line: 205, baseType: !189, size: 32, align: 32, offset: 800)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !539, file: !4, line: 206, baseType: !615, size: 1024, align: 64, offset: 832)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !154, line: 166, size: 1024, align: 64, elements: !616)
!616 = !{!617, !618, !622}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !615, file: !154, line: 168, baseType: !237, size: 16, align: 16)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !615, file: !154, line: 169, baseType: !619, size: 944, align: 8, offset: 16)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 944, align: 8, elements: !620)
!620 = !{!621}
!621 = !DISubrange(count: 118)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !615, file: !154, line: 170, baseType: !294, size: 64, align: 64, offset: 960)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "saddr_from_config", scope: !539, file: !4, line: 207, baseType: !350, size: 8, align: 8, offset: 1856)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "track_saddr", scope: !539, file: !4, line: 208, baseType: !350, size: 8, align: 8, offset: 1864)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_saddr", scope: !539, file: !4, line: 209, baseType: !615, size: 1024, align: 64, offset: 1920)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "unicast_peer", scope: !539, file: !4, line: 210, baseType: !400, size: 64, align: 64, offset: 2944)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "unicast_chksum_compat", scope: !539, file: !4, line: 212, baseType: !628, size: 32, align: 32, offset: 3008)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "chksum_compatibility_t", file: !4, line: 179, baseType: !3)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "master_saddr", scope: !539, file: !4, line: 214, baseType: !615, size: 1024, align: 64, offset: 3072)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "master_priority", scope: !539, file: !4, line: 215, baseType: !211, size: 8, align: 8, offset: 4096)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "last_transition", scope: !539, file: !4, line: 216, baseType: !376, size: 128, align: 64, offset: 4160)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "garp_delay", scope: !539, file: !4, line: 217, baseType: !189, size: 32, align: 32, offset: 4288)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "garp_refresh", scope: !539, file: !4, line: 218, baseType: !376, size: 128, align: 64, offset: 4352)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "garp_refresh_timer", scope: !539, file: !4, line: 219, baseType: !376, size: 128, align: 64, offset: 4480)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "garp_rep", scope: !539, file: !4, line: 220, baseType: !189, size: 32, align: 32, offset: 4608)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "garp_refresh_rep", scope: !539, file: !4, line: 221, baseType: !189, size: 32, align: 32, offset: 4640)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "garp_lower_prio_delay", scope: !539, file: !4, line: 222, baseType: !189, size: 32, align: 32, offset: 4672)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "garp_pending", scope: !539, file: !4, line: 223, baseType: !350, size: 8, align: 8, offset: 4704)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "gna_pending", scope: !539, file: !4, line: 224, baseType: !350, size: 8, align: 8, offset: 4712)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "garp_lower_prio_rep", scope: !539, file: !4, line: 225, baseType: !189, size: 32, align: 32, offset: 4736)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "lower_prio_no_advert", scope: !539, file: !4, line: 226, baseType: !189, size: 32, align: 32, offset: 4768)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "higher_prio_send_advert", scope: !539, file: !4, line: 227, baseType: !189, size: 32, align: 32, offset: 4800)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "vrid", scope: !539, file: !4, line: 228, baseType: !211, size: 8, align: 8, offset: 4832)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "base_priority", scope: !539, file: !4, line: 229, baseType: !211, size: 8, align: 8, offset: 4840)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "effective_priority", scope: !539, file: !4, line: 230, baseType: !211, size: 8, align: 8, offset: 4848)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "total_priority", scope: !539, file: !4, line: 231, baseType: !300, size: 32, align: 32, offset: 4864)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "vipset", scope: !539, file: !4, line: 233, baseType: !350, size: 8, align: 8, offset: 4896)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "vip", scope: !539, file: !4, line: 234, baseType: !400, size: 64, align: 64, offset: 4928)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "evip", scope: !539, file: !4, line: 235, baseType: !400, size: 64, align: 64, offset: 4992)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "promote_secondaries", scope: !539, file: !4, line: 239, baseType: !350, size: 8, align: 8, offset: 5056)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "evip_add_ipv6", scope: !539, file: !4, line: 240, baseType: !350, size: 8, align: 8, offset: 5064)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "vroutes", scope: !539, file: !4, line: 241, baseType: !400, size: 64, align: 64, offset: 5120)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "vrules", scope: !539, file: !4, line: 242, baseType: !400, size: 64, align: 64, offset: 5184)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "adver_int", scope: !539, file: !4, line: 243, baseType: !189, size: 32, align: 32, offset: 5248)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "master_adver_int", scope: !539, file: !4, line: 244, baseType: !189, size: 32, align: 32, offset: 5280)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !539, file: !4, line: 249, baseType: !189, size: 32, align: 32, offset: 5312)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "kernel_rx_buf_size", scope: !539, file: !4, line: 252, baseType: !292, size: 64, align: 64, offset: 5376)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "iptable_rules_set", scope: !539, file: !4, line: 254, baseType: !350, size: 8, align: 8, offset: 5440)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "nopreempt", scope: !539, file: !4, line: 255, baseType: !350, size: 8, align: 8, offset: 5448)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "preempt_delay", scope: !539, file: !4, line: 256, baseType: !294, size: 64, align: 64, offset: 5504)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "preempt_time", scope: !539, file: !4, line: 260, baseType: !376, size: 128, align: 64, offset: 5568)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !539, file: !4, line: 261, baseType: !300, size: 32, align: 32, offset: 5696)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "wantstate", scope: !539, file: !4, line: 265, baseType: !300, size: 32, align: 32, offset: 5728)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "reload_master", scope: !539, file: !4, line: 266, baseType: !350, size: 8, align: 8, offset: 5760)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "sockets", scope: !539, file: !4, line: 267, baseType: !666, size: 64, align: 64, offset: 5824)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64, align: 64)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "sock_t", file: !668, line: 50, baseType: !669)
!668 = !DIFile(filename: "./../include/vrrp_sock.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sock", file: !668, line: 40, size: 1344, align: 64, elements: !670)
!670 = !{!671, !672, !673, !674, !675, !676, !677, !678, !679}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !669, file: !668, line: 41, baseType: !237, size: 16, align: 16)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !669, file: !668, line: 42, baseType: !615, size: 1024, align: 64, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !669, file: !668, line: 43, baseType: !300, size: 32, align: 32, offset: 1088)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !669, file: !668, line: 44, baseType: !345, size: 32, align: 32, offset: 1120)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "unicast", scope: !669, file: !668, line: 45, baseType: !350, size: 8, align: 8, offset: 1152)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "fd_in", scope: !669, file: !668, line: 46, baseType: !300, size: 32, align: 32, offset: 1184)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "fd_out", scope: !669, file: !668, line: 47, baseType: !300, size: 32, align: 32, offset: 1216)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buf_size", scope: !669, file: !668, line: 48, baseType: !300, size: 32, align: 32, offset: 1248)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !669, file: !668, line: 49, baseType: !680, size: 64, align: 64, offset: 1280)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64, align: 64)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "thread_t", file: !12, line: 99, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread", file: !12, line: 78, size: 768, align: 64, elements: !683)
!683 = !{!684, !685, !687, !740, !745, !746, !747, !759, !761}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !682, file: !12, line: 79, baseType: !294, size: 64, align: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !682, file: !12, line: 80, baseType: !686, size: 32, align: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "thread_type_t", file: !12, line: 63, baseType: !11)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !682, file: !12, line: 81, baseType: !688, size: 64, align: 64, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64, align: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_master", file: !12, line: 112, size: 1280, align: 64, elements: !690)
!690 = !{!691, !703, !704, !705, !706, !714, !715, !716, !717, !718, !721, !732, !733, !734, !735, !736, !737, !738, !739}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !689, file: !12, line: 113, baseType: !692, size: 64, align: 64)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_root_t", file: !693, line: 109, baseType: !694)
!693 = !DIFile(filename: "../../lib/rbtree.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !693, line: 106, size: 64, align: 64, elements: !695)
!695 = !{!696}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !694, file: !693, line: 108, baseType: !697, size: 64, align: 64)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64, align: 64)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !693, line: 97, size: 192, align: 64, elements: !699)
!699 = !{!700, !701, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "rb_parent_color", scope: !698, file: !693, line: 99, baseType: !294, size: 64, align: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !698, file: !693, line: 102, baseType: !697, size: 64, align: 64, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !698, file: !693, line: 103, baseType: !697, size: 64, align: 64, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !689, file: !12, line: 114, baseType: !692, size: 64, align: 64, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !689, file: !12, line: 115, baseType: !692, size: 64, align: 64, offset: 128)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !689, file: !12, line: 116, baseType: !692, size: 64, align: 64, offset: 192)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !689, file: !12, line: 117, baseType: !707, size: 128, align: 64, offset: 256)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "list_head_t", file: !708, line: 62, baseType: !709)
!708 = !DIFile(filename: "../../lib/list_head.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !708, line: 60, size: 128, align: 64, elements: !710)
!710 = !{!711, !713}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !709, file: !708, line: 61, baseType: !712, size: 64, align: 64)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64, align: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !709, file: !708, line: 61, baseType: !712, size: 64, align: 64, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !689, file: !12, line: 121, baseType: !707, size: 128, align: 64, offset: 384)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "unuse", scope: !689, file: !12, line: 122, baseType: !707, size: 128, align: 64, offset: 512)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "child_pid_index", scope: !689, file: !12, line: 124, baseType: !400, size: 64, align: 64, offset: 640)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "io_events", scope: !689, file: !12, line: 127, baseType: !692, size: 64, align: 64, offset: 704)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_events", scope: !689, file: !12, line: 128, baseType: !719, size: 64, align: 64, offset: 768)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64, align: 64)
!720 = !DICompositeType(tag: DW_TAG_structure_type, name: "epoll_event", file: !12, line: 128, flags: DIFlagFwdDecl)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "current_event", scope: !689, file: !12, line: 129, baseType: !722, size: 64, align: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64, align: 64)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "thread_event_t", file: !12, line: 109, baseType: !724)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_event", file: !12, line: 102, size: 448, align: 64, elements: !725)
!725 = !{!726, !727, !728, !729, !730}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !724, file: !12, line: 103, baseType: !680, size: 64, align: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !724, file: !12, line: 104, baseType: !680, size: 64, align: 64, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !724, file: !12, line: 105, baseType: !294, size: 64, align: 64, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !724, file: !12, line: 106, baseType: !300, size: 32, align: 32, offset: 192)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !724, file: !12, line: 108, baseType: !731, size: 192, align: 64, offset: 256)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_node_t", file: !693, line: 104, baseType: !698)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_size", scope: !689, file: !12, line: 130, baseType: !189, size: 32, align: 32, offset: 896)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_count", scope: !689, file: !12, line: 131, baseType: !189, size: 32, align: 32, offset: 928)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_fd", scope: !689, file: !12, line: 132, baseType: !300, size: 32, align: 32, offset: 960)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "timer_fd", scope: !689, file: !12, line: 135, baseType: !300, size: 32, align: 32, offset: 992)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "timer_thread", scope: !689, file: !12, line: 136, baseType: !680, size: 64, align: 64, offset: 1024)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !689, file: !12, line: 146, baseType: !294, size: 64, align: 64, offset: 1088)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !689, file: !12, line: 147, baseType: !294, size: 64, align: 64, offset: 1152)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_timer_running", scope: !689, file: !12, line: 148, baseType: !350, size: 8, align: 8, offset: 1216)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !682, file: !12, line: 82, baseType: !741, size: 64, align: 64, offset: 192)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64, align: 64)
!742 = !DISubroutineType(types: !743)
!743 = !{!300, !744}
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64, align: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !682, file: !12, line: 83, baseType: !232, size: 64, align: 64, offset: 256)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "sands", scope: !682, file: !12, line: 84, baseType: !376, size: 128, align: 64, offset: 320)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !682, file: !12, line: 92, baseType: !748, size: 64, align: 32, offset: 448)
!748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !682, file: !12, line: 85, size: 64, align: 32, elements: !749)
!749 = !{!750, !751, !752}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !748, file: !12, line: 86, baseType: !300, size: 32, align: 32)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !748, file: !12, line: 87, baseType: !300, size: 32, align: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !748, file: !12, line: 91, baseType: !753, size: 64, align: 32)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !748, file: !12, line: 88, size: 64, align: 32, elements: !754)
!754 = !{!755, !758}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !753, file: !12, line: 89, baseType: !756, size: 32, align: 32)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !571, line: 263, baseType: !757)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !357, line: 133, baseType: !300)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !753, file: !12, line: 90, baseType: !300, size: 32, align: 32, offset: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !682, file: !12, line: 93, baseType: !760, size: 64, align: 64, offset: 512)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64, align: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, scope: !682, file: !12, line: 95, baseType: !762, size: 192, align: 64, offset: 576)
!762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !682, file: !12, line: 95, size: 192, align: 64, elements: !763)
!763 = !{!764, !765}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !762, file: !12, line: 96, baseType: !731, size: 192, align: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !762, file: !12, line: 97, baseType: !707, size: 128, align: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !539, file: !4, line: 269, baseType: !300, size: 32, align: 32, offset: 5888)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !539, file: !4, line: 271, baseType: !300, size: 32, align: 32, offset: 5920)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "smtp_alert", scope: !539, file: !4, line: 274, baseType: !300, size: 32, align: 32, offset: 5952)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "last_email_state", scope: !539, file: !4, line: 275, baseType: !300, size: 32, align: 32, offset: 5984)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "notify_exec", scope: !539, file: !4, line: 276, baseType: !350, size: 8, align: 8, offset: 6016)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "script_backup", scope: !539, file: !4, line: 277, baseType: !561, size: 64, align: 64, offset: 6080)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "script_master", scope: !539, file: !4, line: 278, baseType: !561, size: 64, align: 64, offset: 6144)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "script_fault", scope: !539, file: !4, line: 279, baseType: !561, size: 64, align: 64, offset: 6208)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "script_stop", scope: !539, file: !4, line: 280, baseType: !561, size: 64, align: 64, offset: 6272)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "script_master_rx_lower_pri", scope: !539, file: !4, line: 281, baseType: !561, size: 64, align: 64, offset: 6336)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !539, file: !4, line: 282, baseType: !561, size: 64, align: 64, offset: 6400)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ms_down_timer", scope: !539, file: !4, line: 285, baseType: !246, size: 32, align: 32, offset: 6464)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "sands", scope: !539, file: !4, line: 286, baseType: !376, size: 128, align: 64, offset: 6528)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "send_buffer", scope: !539, file: !4, line: 289, baseType: !230, size: 64, align: 64, offset: 6656)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "send_buffer_size", scope: !539, file: !4, line: 290, baseType: !292, size: 64, align: 64, offset: 6720)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_csum", scope: !539, file: !4, line: 291, baseType: !246, size: 32, align: 32, offset: 6784)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "auth_type", scope: !539, file: !4, line: 295, baseType: !211, size: 8, align: 8, offset: 6816)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "auth_data", scope: !539, file: !4, line: 296, baseType: !784, size: 64, align: 8, offset: 6824)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 64, align: 8, elements: !249)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "ipsecah_counter", scope: !539, file: !4, line: 299, baseType: !786, size: 64, align: 32, offset: 6912)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "seq_counter_t", file: !278, line: 58, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_seq_counter", file: !278, line: 55, size: 64, align: 32, elements: !788)
!788 = !{!789, !790}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "cycle", scope: !787, file: !278, line: 56, baseType: !350, size: 8, align: 8)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "seq_number", scope: !787, file: !278, line: 57, baseType: !246, size: 32, align: 32, offset: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id", scope: !539, file: !4, line: 309, baseType: !300, size: 32, align: 32, offset: 6976)
!792 = !DILocalVariable(name: "vrrp", arg: 1, scope: !534, file: !512, line: 349, type: !537)
!793 = !DIExpression()
!794 = !DILocation(line: 349, column: 22, scope: !534)
!795 = !DILocalVariable(name: "len", scope: !534, file: !512, line: 351, type: !292)
!796 = !DILocation(line: 351, column: 9, scope: !534)
!797 = !DILocation(line: 351, column: 28, scope: !534)
!798 = !DILocation(line: 351, column: 15, scope: !534)
!799 = !DILocation(line: 353, column: 6, scope: !800)
!800 = distinct !DILexicalBlock(scope: !534, file: !512, line: 353, column: 6)
!801 = !DILocation(line: 353, column: 12, scope: !800)
!802 = !DILocation(line: 353, column: 19, scope: !800)
!803 = !DILocation(line: 353, column: 6, scope: !534)
!804 = !DILocation(line: 354, column: 10, scope: !805)
!805 = distinct !DILexicalBlock(scope: !800, file: !512, line: 353, column: 30)
!806 = !DILocation(line: 354, column: 7, scope: !805)
!807 = !DILocation(line: 356, column: 7, scope: !808)
!808 = distinct !DILexicalBlock(scope: !805, file: !512, line: 356, column: 7)
!809 = !DILocation(line: 356, column: 13, scope: !808)
!810 = !DILocation(line: 356, column: 23, scope: !808)
!811 = !DILocation(line: 356, column: 7, scope: !805)
!812 = !DILocation(line: 357, column: 11, scope: !808)
!813 = !DILocation(line: 357, column: 8, scope: !808)
!814 = !DILocation(line: 357, column: 4, scope: !808)
!815 = !DILocation(line: 359, column: 2, scope: !805)
!816 = !DILocation(line: 361, column: 9, scope: !534)
!817 = !DILocation(line: 361, column: 2, scope: !534)
!818 = distinct !DISubprogram(name: "vrrp_pkt_len", scope: !512, file: !512, line: 332, type: !535, isLocal: true, isDefinition: true, scopeLine: 333, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!819 = !DILocalVariable(name: "vrrp", arg: 1, scope: !818, file: !512, line: 332, type: !537)
!820 = !DILocation(line: 332, column: 23, scope: !818)
!821 = !DILocalVariable(name: "len", scope: !818, file: !512, line: 334, type: !292)
!822 = !DILocation(line: 334, column: 9, scope: !818)
!823 = !DILocation(line: 337, column: 6, scope: !824)
!824 = distinct !DILexicalBlock(scope: !818, file: !512, line: 337, column: 6)
!825 = !DILocation(line: 337, column: 12, scope: !824)
!826 = !DILocation(line: 337, column: 19, scope: !824)
!827 = !DILocation(line: 337, column: 6, scope: !818)
!828 = !DILocation(line: 338, column: 7, scope: !829)
!829 = distinct !DILexicalBlock(scope: !830, file: !512, line: 338, column: 7)
!830 = distinct !DILexicalBlock(scope: !824, file: !512, line: 337, column: 30)
!831 = !DILocation(line: 338, column: 13, scope: !829)
!832 = !DILocation(line: 338, column: 21, scope: !829)
!833 = !DILocation(line: 338, column: 7, scope: !830)
!834 = !DILocation(line: 339, column: 8, scope: !829)
!835 = !DILocation(line: 339, column: 4, scope: !829)
!836 = !DILocation(line: 340, column: 15, scope: !830)
!837 = !DILocation(line: 340, column: 21, scope: !830)
!838 = !DILocation(line: 340, column: 26, scope: !830)
!839 = !DILocation(line: 340, column: 12, scope: !830)
!840 = !DILocation(line: 340, column: 17, scope: !841)
!841 = !DILexicalBlockFile(scope: !830, file: !512, discriminator: 1)
!842 = !DILocation(line: 340, column: 23, scope: !841)
!843 = !DILocation(line: 340, column: 29, scope: !841)
!844 = !DILocation(line: 340, column: 34, scope: !841)
!845 = !DILocation(line: 340, column: 12, scope: !841)
!846 = !DILocation(line: 340, column: 16, scope: !847)
!847 = !DILexicalBlockFile(scope: !830, file: !512, discriminator: 2)
!848 = !DILocation(line: 340, column: 22, scope: !847)
!849 = !DILocation(line: 340, column: 28, scope: !847)
!850 = !DILocation(line: 340, column: 33, scope: !847)
!851 = !DILocation(line: 340, column: 11, scope: !847)
!852 = !DILocation(line: 340, column: 20, scope: !853)
!853 = !DILexicalBlockFile(scope: !830, file: !512, discriminator: 3)
!854 = !DILocation(line: 340, column: 26, scope: !853)
!855 = !DILocation(line: 340, column: 32, scope: !853)
!856 = !DILocation(line: 340, column: 18, scope: !853)
!857 = !DILocation(line: 340, column: 39, scope: !853)
!858 = !DILocation(line: 340, column: 11, scope: !853)
!859 = !DILocation(line: 340, column: 11, scope: !860)
!860 = !DILexicalBlockFile(scope: !830, file: !512, discriminator: 4)
!861 = !DILocation(line: 340, column: 11, scope: !862)
!862 = !DILexicalBlockFile(scope: !830, file: !512, discriminator: 5)
!863 = !DILocation(line: 340, column: 7, scope: !862)
!864 = !DILocation(line: 341, column: 2, scope: !830)
!865 = !DILocation(line: 342, column: 11, scope: !866)
!866 = distinct !DILexicalBlock(scope: !824, file: !512, line: 342, column: 11)
!867 = !DILocation(line: 342, column: 17, scope: !866)
!868 = !DILocation(line: 342, column: 24, scope: !866)
!869 = !DILocation(line: 342, column: 11, scope: !824)
!870 = !DILocation(line: 343, column: 15, scope: !866)
!871 = !DILocation(line: 343, column: 21, scope: !866)
!872 = !DILocation(line: 343, column: 26, scope: !866)
!873 = !DILocation(line: 343, column: 12, scope: !866)
!874 = !DILocation(line: 343, column: 17, scope: !875)
!875 = !DILexicalBlockFile(scope: !866, file: !512, discriminator: 1)
!876 = !DILocation(line: 343, column: 23, scope: !875)
!877 = !DILocation(line: 343, column: 29, scope: !875)
!878 = !DILocation(line: 343, column: 34, scope: !875)
!879 = !DILocation(line: 343, column: 12, scope: !875)
!880 = !DILocation(line: 343, column: 16, scope: !881)
!881 = !DILexicalBlockFile(scope: !866, file: !512, discriminator: 2)
!882 = !DILocation(line: 343, column: 22, scope: !881)
!883 = !DILocation(line: 343, column: 28, scope: !881)
!884 = !DILocation(line: 343, column: 33, scope: !881)
!885 = !DILocation(line: 343, column: 11, scope: !881)
!886 = !DILocation(line: 343, column: 20, scope: !887)
!887 = !DILexicalBlockFile(scope: !866, file: !512, discriminator: 3)
!888 = !DILocation(line: 343, column: 26, scope: !887)
!889 = !DILocation(line: 343, column: 32, scope: !887)
!890 = !DILocation(line: 343, column: 18, scope: !887)
!891 = !DILocation(line: 343, column: 39, scope: !887)
!892 = !DILocation(line: 343, column: 11, scope: !887)
!893 = !DILocation(line: 343, column: 11, scope: !894)
!894 = !DILexicalBlockFile(scope: !866, file: !512, discriminator: 4)
!895 = !DILocation(line: 343, column: 11, scope: !896)
!896 = !DILexicalBlockFile(scope: !866, file: !512, discriminator: 5)
!897 = !DILocation(line: 343, column: 7, scope: !896)
!898 = !DILocation(line: 343, column: 3, scope: !896)
!899 = !DILocation(line: 345, column: 9, scope: !818)
!900 = !DILocation(line: 345, column: 2, scope: !818)
!901 = distinct !DISubprogram(name: "vrrp_iphdr_len", scope: !512, file: !512, line: 316, type: !902, isLocal: true, isDefinition: true, scopeLine: 317, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!902 = !DISubroutineType(types: !903)
!903 = !{!292}
!904 = !DILocation(line: 318, column: 2, scope: !901)
!905 = distinct !DISubprogram(name: "vrrp_ipsecah_len", scope: !512, file: !512, line: 324, type: !902, isLocal: true, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!906 = !DILocation(line: 326, column: 2, scope: !905)
!907 = distinct !DISubprogram(name: "vrrp_get_header", scope: !512, file: !512, line: 366, type: !908, isLocal: false, isDefinition: true, scopeLine: 367, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!908 = !DISubroutineType(types: !909)
!909 = !{!206, !237, !230, !910}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64, align: 64)
!911 = !DILocalVariable(name: "family", arg: 1, scope: !907, file: !512, line: 366, type: !237)
!912 = !DILocation(line: 366, column: 29, scope: !907)
!913 = !DILocalVariable(name: "buf", arg: 2, scope: !907, file: !512, line: 366, type: !230)
!914 = !DILocation(line: 366, column: 43, scope: !907)
!915 = !DILocalVariable(name: "proto", arg: 3, scope: !907, file: !512, line: 366, type: !910)
!916 = !DILocation(line: 366, column: 58, scope: !907)
!917 = !DILocalVariable(name: "iph", scope: !907, file: !512, line: 368, type: !184)
!918 = !DILocation(line: 368, column: 16, scope: !907)
!919 = !DILocalVariable(name: "hd", scope: !907, file: !512, line: 369, type: !206)
!920 = !DILocation(line: 369, column: 13, scope: !907)
!921 = !DILocation(line: 371, column: 6, scope: !922)
!922 = distinct !DILexicalBlock(scope: !907, file: !512, line: 371, column: 6)
!923 = !DILocation(line: 371, column: 13, scope: !922)
!924 = !DILocation(line: 371, column: 6, scope: !907)
!925 = !DILocation(line: 372, column: 26, scope: !926)
!926 = distinct !DILexicalBlock(scope: !922, file: !512, line: 371, column: 24)
!927 = !DILocation(line: 372, column: 9, scope: !926)
!928 = !DILocation(line: 372, column: 7, scope: !926)
!929 = !DILocation(line: 376, column: 7, scope: !930)
!930 = distinct !DILexicalBlock(scope: !926, file: !512, line: 376, column: 7)
!931 = !DILocation(line: 376, column: 12, scope: !930)
!932 = !DILocation(line: 376, column: 21, scope: !930)
!933 = !DILocation(line: 376, column: 7, scope: !926)
!934 = !DILocation(line: 377, column: 5, scope: !935)
!935 = distinct !DILexicalBlock(scope: !930, file: !512, line: 376, column: 35)
!936 = !DILocation(line: 377, column: 11, scope: !935)
!937 = !DILocation(line: 378, column: 33, scope: !935)
!938 = !DILocation(line: 378, column: 24, scope: !935)
!939 = !DILocation(line: 378, column: 40, scope: !935)
!940 = !DILocation(line: 378, column: 45, scope: !935)
!941 = !DILocation(line: 378, column: 49, scope: !935)
!942 = !DILocation(line: 378, column: 37, scope: !935)
!943 = !DILocation(line: 379, column: 9, scope: !935)
!944 = !DILocation(line: 378, column: 55, scope: !935)
!945 = !DILocation(line: 378, column: 9, scope: !935)
!946 = !DILocation(line: 378, column: 7, scope: !935)
!947 = !DILocation(line: 380, column: 3, scope: !935)
!948 = !DILocation(line: 384, column: 5, scope: !949)
!949 = distinct !DILexicalBlock(scope: !930, file: !512, line: 383, column: 3)
!950 = !DILocation(line: 384, column: 11, scope: !949)
!951 = !DILocation(line: 385, column: 33, scope: !949)
!952 = !DILocation(line: 385, column: 24, scope: !949)
!953 = !DILocation(line: 385, column: 40, scope: !949)
!954 = !DILocation(line: 385, column: 45, scope: !949)
!955 = !DILocation(line: 385, column: 49, scope: !949)
!956 = !DILocation(line: 385, column: 37, scope: !949)
!957 = !DILocation(line: 385, column: 9, scope: !949)
!958 = !DILocation(line: 385, column: 7, scope: !949)
!959 = !DILocation(line: 387, column: 2, scope: !926)
!960 = !DILocation(line: 387, column: 13, scope: !961)
!961 = !DILexicalBlockFile(scope: !962, file: !512, discriminator: 1)
!962 = distinct !DILexicalBlock(scope: !922, file: !512, line: 387, column: 13)
!963 = !DILocation(line: 387, column: 20, scope: !961)
!964 = !DILocation(line: 388, column: 4, scope: !965)
!965 = distinct !DILexicalBlock(scope: !962, file: !512, line: 387, column: 32)
!966 = !DILocation(line: 388, column: 10, scope: !965)
!967 = !DILocation(line: 389, column: 22, scope: !965)
!968 = !DILocation(line: 389, column: 8, scope: !965)
!969 = !DILocation(line: 389, column: 6, scope: !965)
!970 = !DILocation(line: 390, column: 2, scope: !965)
!971 = !DILocation(line: 392, column: 9, scope: !907)
!972 = !DILocation(line: 392, column: 2, scope: !907)
!973 = distinct !DISubprogram(name: "vrrp_send_adv", scope: !512, file: !512, line: 1368, type: !974, isLocal: false, isDefinition: true, scopeLine: 1369, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!974 = !DISubroutineType(types: !975)
!975 = !{null, !537, !211}
!976 = !DILocalVariable(name: "vrrp", arg: 1, scope: !973, file: !512, line: 1368, type: !537)
!977 = !DILocation(line: 1368, column: 24, scope: !973)
!978 = !DILocalVariable(name: "prio", arg: 2, scope: !973, file: !512, line: 1368, type: !211)
!979 = !DILocation(line: 1368, column: 38, scope: !973)
!980 = !DILocalVariable(name: "addr", scope: !973, file: !512, line: 1370, type: !981)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64, align: 64)
!982 = !DILocation(line: 1370, column: 27, scope: !973)
!983 = !DILocalVariable(name: "e", scope: !973, file: !512, line: 1371, type: !984)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "element", file: !401, line: 30, baseType: !406)
!985 = !DILocation(line: 1371, column: 10, scope: !973)
!986 = !DILocation(line: 1374, column: 18, scope: !973)
!987 = !DILocation(line: 1374, column: 24, scope: !973)
!988 = !DILocation(line: 1374, column: 2, scope: !973)
!989 = !DILocation(line: 1376, column: 8, scope: !990)
!990 = distinct !DILexicalBlock(scope: !973, file: !512, line: 1376, column: 6)
!991 = !DILocation(line: 1376, column: 14, scope: !990)
!992 = !DILocation(line: 1376, column: 28, scope: !990)
!993 = !DILocation(line: 1376, column: 5, scope: !990)
!994 = !DILocation(line: 1376, column: 10, scope: !995)
!995 = !DILexicalBlockFile(scope: !990, file: !512, discriminator: 1)
!996 = !DILocation(line: 1376, column: 16, scope: !995)
!997 = !DILocation(line: 1376, column: 31, scope: !995)
!998 = !DILocation(line: 1376, column: 36, scope: !995)
!999 = !DILocation(line: 1376, column: 5, scope: !995)
!1000 = !DILocation(line: 1376, column: 9, scope: !1001)
!1001 = !DILexicalBlockFile(scope: !990, file: !512, discriminator: 2)
!1002 = !DILocation(line: 1376, column: 15, scope: !1001)
!1003 = !DILocation(line: 1376, column: 30, scope: !1001)
!1004 = !DILocation(line: 1376, column: 35, scope: !1001)
!1005 = !DILocation(line: 1376, column: 6, scope: !1001)
!1006 = !DILocation(line: 1377, column: 17, scope: !990)
!1007 = !DILocation(line: 1377, column: 3, scope: !990)
!1008 = !DILocation(line: 1379, column: 16, scope: !1009)
!1009 = distinct !DILexicalBlock(scope: !1010, file: !512, line: 1379, column: 3)
!1010 = distinct !DILexicalBlock(scope: !990, file: !512, line: 1378, column: 7)
!1011 = !DILocation(line: 1379, column: 22, scope: !1009)
!1012 = !DILocation(line: 1379, column: 15, scope: !1009)
!1013 = !DILocation(line: 1379, column: 41, scope: !1014)
!1014 = !DILexicalBlockFile(scope: !1009, file: !512, discriminator: 1)
!1015 = !DILocation(line: 1379, column: 47, scope: !1014)
!1016 = !DILocation(line: 1379, column: 40, scope: !1014)
!1017 = !DILocation(line: 1379, column: 39, scope: !1014)
!1018 = !DILocation(line: 1379, column: 39, scope: !1019)
!1019 = !DILexicalBlockFile(scope: !1009, file: !512, discriminator: 2)
!1020 = !DILocation(line: 1379, column: 5, scope: !1021)
!1021 = !DILexicalBlockFile(scope: !1009, file: !512, discriminator: 3)
!1022 = !DILocation(line: 1379, column: 11, scope: !1021)
!1023 = !DILocation(line: 1379, column: 26, scope: !1021)
!1024 = !DILocation(line: 1379, column: 39, scope: !1021)
!1025 = !DILocation(line: 1379, column: 39, scope: !1026)
!1026 = !DILexicalBlockFile(scope: !1009, file: !512, discriminator: 4)
!1027 = !DILocation(line: 1379, column: 15, scope: !1026)
!1028 = !DILocation(line: 1379, column: 15, scope: !1029)
!1029 = !DILexicalBlockFile(scope: !1009, file: !512, discriminator: 5)
!1030 = !DILocation(line: 1379, column: 15, scope: !1031)
!1031 = !DILexicalBlockFile(scope: !1009, file: !512, discriminator: 6)
!1032 = !DILocation(line: 1379, column: 12, scope: !1031)
!1033 = !DILocation(line: 1379, column: 8, scope: !1031)
!1034 = !DILocation(line: 1379, column: 6, scope: !1035)
!1035 = !DILexicalBlockFile(scope: !1036, file: !512, discriminator: 7)
!1036 = distinct !DILexicalBlock(scope: !1009, file: !512, line: 1379, column: 3)
!1037 = !DILocation(line: 1379, column: 5, scope: !1035)
!1038 = !DILocation(line: 1379, column: 9, scope: !1035)
!1039 = !DILocation(line: 1379, column: 24, scope: !1040)
!1040 = !DILexicalBlockFile(scope: !1036, file: !512, discriminator: 8)
!1041 = !DILocation(line: 1379, column: 28, scope: !1040)
!1042 = !DILocation(line: 1379, column: 22, scope: !1040)
!1043 = !DILocation(line: 1379, column: 20, scope: !1040)
!1044 = !DILocation(line: 1379, column: 3, scope: !1045)
!1045 = !DILexicalBlockFile(scope: !1009, file: !512, discriminator: 9)
!1046 = !DILocation(line: 1380, column: 8, scope: !1047)
!1047 = distinct !DILexicalBlock(scope: !1048, file: !512, line: 1380, column: 8)
!1048 = distinct !DILexicalBlock(scope: !1036, file: !512, line: 1379, column: 58)
!1049 = !DILocation(line: 1380, column: 14, scope: !1047)
!1050 = !DILocation(line: 1380, column: 21, scope: !1047)
!1051 = !DILocation(line: 1380, column: 8, scope: !1048)
!1052 = !DILocation(line: 1381, column: 21, scope: !1047)
!1053 = !DILocation(line: 1381, column: 27, scope: !1047)
!1054 = !DILocation(line: 1381, column: 33, scope: !1047)
!1055 = !DILocation(line: 1381, column: 5, scope: !1047)
!1056 = !DILocation(line: 1382, column: 22, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1048, file: !512, line: 1382, column: 8)
!1058 = !DILocation(line: 1382, column: 28, scope: !1057)
!1059 = !DILocation(line: 1382, column: 8, scope: !1057)
!1060 = !DILocation(line: 1382, column: 34, scope: !1057)
!1061 = !DILocation(line: 1382, column: 8, scope: !1048)
!1062 = !DILocation(line: 1384, column: 13, scope: !1057)
!1063 = !DILocation(line: 1384, column: 19, scope: !1057)
!1064 = !DILocation(line: 1384, column: 43, scope: !1057)
!1065 = !DILocation(line: 1384, column: 26, scope: !1057)
!1066 = !DILocation(line: 1383, column: 5, scope: !1057)
!1067 = !DILocation(line: 1385, column: 3, scope: !1048)
!1068 = !DILocation(line: 1379, column: 47, scope: !1069)
!1069 = !DILexicalBlockFile(scope: !1036, file: !512, discriminator: 10)
!1070 = !DILocation(line: 1379, column: 51, scope: !1069)
!1071 = !DILocation(line: 1379, column: 44, scope: !1069)
!1072 = !DILocation(line: 1379, column: 3, scope: !1069)
!1073 = distinct !{!1073, !1074}
!1074 = !DILocation(line: 1379, column: 3, scope: !1010)
!1075 = !DILocation(line: 1388, column: 4, scope: !973)
!1076 = !DILocation(line: 1388, column: 10, scope: !973)
!1077 = !DILocation(line: 1388, column: 17, scope: !973)
!1078 = !DILocation(line: 1388, column: 2, scope: !973)
!1079 = !DILocation(line: 1389, column: 1, scope: !973)
!1080 = distinct !DISubprogram(name: "vrrp_update_pkt", scope: !512, file: !512, line: 396, type: !1081, isLocal: true, isDefinition: true, scopeLine: 397, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !537, !211, !981}
!1083 = !DILocalVariable(name: "vrrp", arg: 1, scope: !1080, file: !512, line: 396, type: !537)
!1084 = !DILocation(line: 396, column: 25, scope: !1080)
!1085 = !DILocalVariable(name: "prio", arg: 2, scope: !1080, file: !512, line: 396, type: !211)
!1086 = !DILocation(line: 396, column: 39, scope: !1080)
!1087 = !DILocalVariable(name: "addr", arg: 3, scope: !1080, file: !512, line: 396, type: !981)
!1088 = !DILocation(line: 396, column: 70, scope: !1080)
!1089 = !DILocalVariable(name: "bufptr", scope: !1080, file: !512, line: 398, type: !230)
!1090 = !DILocation(line: 398, column: 8, scope: !1080)
!1091 = !DILocation(line: 398, column: 17, scope: !1080)
!1092 = !DILocation(line: 398, column: 23, scope: !1080)
!1093 = !DILocalVariable(name: "hd", scope: !1080, file: !512, line: 399, type: !206)
!1094 = !DILocation(line: 399, column: 13, scope: !1080)
!1095 = !DILocalVariable(name: "final_update", scope: !1080, file: !512, line: 401, type: !350)
!1096 = !DILocation(line: 401, column: 6, scope: !1080)
!1097 = !DILocalVariable(name: "new_saddr", scope: !1080, file: !512, line: 403, type: !246)
!1098 = !DILocation(line: 403, column: 11, scope: !1080)
!1099 = !DILocalVariable(name: "new_daddr", scope: !1080, file: !512, line: 404, type: !246)
!1100 = !DILocation(line: 404, column: 11, scope: !1080)
!1101 = !DILocation(line: 408, column: 20, scope: !1080)
!1102 = !DILocation(line: 408, column: 26, scope: !1080)
!1103 = !DILocation(line: 408, column: 40, scope: !1080)
!1104 = !DILocation(line: 408, column: 17, scope: !1080)
!1105 = !DILocation(line: 408, column: 22, scope: !1106)
!1106 = !DILexicalBlockFile(scope: !1080, file: !512, discriminator: 1)
!1107 = !DILocation(line: 408, column: 28, scope: !1106)
!1108 = !DILocation(line: 408, column: 43, scope: !1106)
!1109 = !DILocation(line: 408, column: 48, scope: !1106)
!1110 = !DILocation(line: 408, column: 17, scope: !1106)
!1111 = !DILocation(line: 408, column: 21, scope: !1112)
!1112 = !DILexicalBlockFile(scope: !1080, file: !512, discriminator: 2)
!1113 = !DILocation(line: 408, column: 27, scope: !1112)
!1114 = !DILocation(line: 408, column: 42, scope: !1112)
!1115 = !DILocation(line: 408, column: 47, scope: !1112)
!1116 = !DILocation(line: 408, column: 20, scope: !1112)
!1117 = !DILocation(line: 408, column: 27, scope: !1118)
!1118 = !DILexicalBlockFile(scope: !1080, file: !512, discriminator: 3)
!1119 = !DILocation(line: 408, column: 33, scope: !1118)
!1120 = !DILocation(line: 408, column: 26, scope: !1118)
!1121 = !DILocation(line: 408, column: 25, scope: !1118)
!1122 = !DILocation(line: 408, column: 25, scope: !1123)
!1123 = !DILexicalBlockFile(scope: !1080, file: !512, discriminator: 4)
!1124 = !DILocation(line: 408, column: 57, scope: !1125)
!1125 = !DILexicalBlockFile(scope: !1080, file: !512, discriminator: 5)
!1126 = !DILocation(line: 408, column: 63, scope: !1125)
!1127 = !DILocation(line: 408, column: 78, scope: !1125)
!1128 = !DILocation(line: 408, column: 25, scope: !1125)
!1129 = !DILocation(line: 408, column: 25, scope: !1130)
!1130 = !DILexicalBlockFile(scope: !1080, file: !512, discriminator: 6)
!1131 = !DILocation(line: 408, column: 85, scope: !1130)
!1132 = !DILocation(line: 408, column: 24, scope: !1130)
!1133 = !DILocation(line: 408, column: 90, scope: !1130)
!1134 = !DILocation(line: 408, column: 93, scope: !1135)
!1135 = !DILexicalBlockFile(scope: !1080, file: !512, discriminator: 7)
!1136 = !DILocation(line: 408, column: 90, scope: !1135)
!1137 = !DILocation(line: 408, column: 15, scope: !1138)
!1138 = !DILexicalBlockFile(scope: !1080, file: !512, discriminator: 8)
!1139 = !DILocation(line: 411, column: 6, scope: !1140)
!1140 = distinct !DILexicalBlock(scope: !1080, file: !512, line: 411, column: 6)
!1141 = !DILocation(line: 411, column: 12, scope: !1140)
!1142 = !DILocation(line: 411, column: 19, scope: !1140)
!1143 = !DILocation(line: 411, column: 6, scope: !1080)
!1144 = !DILocation(line: 412, column: 13, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1140, file: !512, line: 411, column: 30)
!1146 = !DILocation(line: 412, column: 10, scope: !1145)
!1147 = !DILocation(line: 415, column: 7, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1145, file: !512, line: 415, column: 7)
!1149 = !DILocation(line: 415, column: 13, scope: !1148)
!1150 = !DILocation(line: 415, column: 23, scope: !1148)
!1151 = !DILocation(line: 415, column: 7, scope: !1145)
!1152 = !DILocation(line: 416, column: 14, scope: !1148)
!1153 = !DILocation(line: 416, column: 11, scope: !1148)
!1154 = !DILocation(line: 416, column: 4, scope: !1148)
!1155 = !DILocation(line: 418, column: 2, scope: !1145)
!1156 = !DILocation(line: 420, column: 20, scope: !1080)
!1157 = !DILocation(line: 420, column: 7, scope: !1080)
!1158 = !DILocation(line: 420, column: 5, scope: !1080)
!1159 = !DILocation(line: 421, column: 6, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1080, file: !512, line: 421, column: 6)
!1161 = !DILocation(line: 421, column: 10, scope: !1160)
!1162 = !DILocation(line: 421, column: 22, scope: !1160)
!1163 = !DILocation(line: 421, column: 19, scope: !1160)
!1164 = !DILocation(line: 421, column: 6, scope: !1080)
!1165 = !DILocation(line: 422, column: 7, scope: !1166)
!1166 = distinct !DILexicalBlock(scope: !1167, file: !512, line: 422, column: 7)
!1167 = distinct !DILexicalBlock(scope: !1160, file: !512, line: 421, column: 28)
!1168 = !DILocation(line: 422, column: 13, scope: !1166)
!1169 = !DILocation(line: 422, column: 20, scope: !1166)
!1170 = !DILocation(line: 422, column: 7, scope: !1167)
!1171 = !DILocalVariable(name: "prio_addr", scope: !1172, file: !512, line: 424, type: !290)
!1172 = distinct !DILexicalBlock(scope: !1166, file: !512, line: 422, column: 31)
!1173 = !DILocation(line: 424, column: 14, scope: !1172)
!1174 = !DILocation(line: 424, column: 48, scope: !1172)
!1175 = !DILocation(line: 424, column: 52, scope: !1172)
!1176 = !DILocation(line: 424, column: 73, scope: !1172)
!1177 = !DILocation(line: 424, column: 65, scope: !1172)
!1178 = !DILocation(line: 424, column: 86, scope: !1172)
!1179 = !DILocation(line: 424, column: 90, scope: !1172)
!1180 = !DILocation(line: 424, column: 76, scope: !1172)
!1181 = !DILocation(line: 424, column: 100, scope: !1172)
!1182 = !DILocation(line: 424, column: 61, scope: !1172)
!1183 = !DILocation(line: 424, column: 26, scope: !1172)
!1184 = !DILocalVariable(name: "old_val", scope: !1172, file: !512, line: 425, type: !228)
!1185 = !DILocation(line: 425, column: 13, scope: !1172)
!1186 = !DILocation(line: 425, column: 24, scope: !1172)
!1187 = !DILocation(line: 425, column: 23, scope: !1172)
!1188 = !DILocation(line: 427, column: 19, scope: !1172)
!1189 = !DILocation(line: 427, column: 4, scope: !1172)
!1190 = !DILocation(line: 427, column: 8, scope: !1172)
!1191 = !DILocation(line: 427, column: 17, scope: !1172)
!1192 = !DILocation(line: 428, column: 43, scope: !1172)
!1193 = !DILocation(line: 428, column: 47, scope: !1172)
!1194 = !DILocation(line: 428, column: 55, scope: !1172)
!1195 = !DILocation(line: 428, column: 65, scope: !1172)
!1196 = !DILocation(line: 428, column: 64, scope: !1172)
!1197 = !DILocation(line: 428, column: 17, scope: !1172)
!1198 = !DILocation(line: 428, column: 4, scope: !1172)
!1199 = !DILocation(line: 428, column: 8, scope: !1172)
!1200 = !DILocation(line: 428, column: 15, scope: !1172)
!1201 = !DILocation(line: 429, column: 3, scope: !1172)
!1202 = !DILocation(line: 431, column: 19, scope: !1166)
!1203 = !DILocation(line: 431, column: 4, scope: !1166)
!1204 = !DILocation(line: 431, column: 8, scope: !1166)
!1205 = !DILocation(line: 431, column: 17, scope: !1166)
!1206 = !DILocation(line: 432, column: 2, scope: !1167)
!1207 = !DILocation(line: 434, column: 6, scope: !1208)
!1208 = distinct !DILexicalBlock(scope: !1080, file: !512, line: 434, column: 6)
!1209 = !DILocation(line: 434, column: 12, scope: !1208)
!1210 = !DILocation(line: 434, column: 19, scope: !1208)
!1211 = !DILocation(line: 434, column: 6, scope: !1080)
!1212 = !DILocalVariable(name: "ip", scope: !1213, file: !512, line: 435, type: !184)
!1213 = distinct !DILexicalBlock(scope: !1208, file: !512, line: 434, column: 30)
!1214 = !DILocation(line: 435, column: 17, scope: !1213)
!1215 = !DILocation(line: 435, column: 40, scope: !1213)
!1216 = !DILocation(line: 435, column: 46, scope: !1213)
!1217 = !DILocation(line: 435, column: 22, scope: !1213)
!1218 = !DILocation(line: 436, column: 8, scope: !1219)
!1219 = distinct !DILexicalBlock(scope: !1213, file: !512, line: 436, column: 7)
!1220 = !DILocation(line: 436, column: 7, scope: !1213)
!1221 = !DILocation(line: 438, column: 11, scope: !1222)
!1222 = distinct !DILexicalBlock(scope: !1223, file: !512, line: 438, column: 8)
!1223 = distinct !DILexicalBlock(scope: !1219, file: !512, line: 436, column: 14)
!1224 = !DILocation(line: 438, column: 17, scope: !1222)
!1225 = !DILocation(line: 438, column: 9, scope: !1222)
!1226 = !DILocation(line: 438, column: 8, scope: !1223)
!1227 = !DILocation(line: 439, column: 7, scope: !1222)
!1228 = !DILocation(line: 439, column: 13, scope: !1222)
!1229 = !DILocation(line: 439, column: 5, scope: !1222)
!1230 = !DILocation(line: 440, column: 19, scope: !1223)
!1231 = !DILocation(line: 440, column: 25, scope: !1223)
!1232 = !DILocation(line: 440, column: 13, scope: !1223)
!1233 = !DILocation(line: 440, column: 4, scope: !1223)
!1234 = !DILocation(line: 440, column: 8, scope: !1223)
!1235 = !DILocation(line: 440, column: 11, scope: !1223)
!1236 = !DILocation(line: 441, column: 3, scope: !1223)
!1237 = !DILocation(line: 444, column: 8, scope: !1238)
!1238 = distinct !DILexicalBlock(scope: !1239, file: !512, line: 444, column: 8)
!1239 = distinct !DILexicalBlock(scope: !1219, file: !512, line: 442, column: 8)
!1240 = !DILocation(line: 444, column: 14, scope: !1238)
!1241 = !DILocation(line: 444, column: 22, scope: !1238)
!1242 = !DILocation(line: 444, column: 8, scope: !1239)
!1243 = !DILocation(line: 445, column: 34, scope: !1238)
!1244 = !DILocation(line: 445, column: 17, scope: !1238)
!1245 = !DILocation(line: 445, column: 5, scope: !1238)
!1246 = !DILocation(line: 445, column: 9, scope: !1238)
!1247 = !DILocation(line: 445, column: 15, scope: !1238)
!1248 = !DILocation(line: 447, column: 34, scope: !1249)
!1249 = distinct !DILexicalBlock(scope: !1238, file: !512, line: 446, column: 9)
!1250 = !DILocation(line: 447, column: 17, scope: !1249)
!1251 = !DILocation(line: 447, column: 15, scope: !1249)
!1252 = !DILocation(line: 449, column: 9, scope: !1253)
!1253 = distinct !DILexicalBlock(scope: !1249, file: !512, line: 449, column: 9)
!1254 = !DILocation(line: 449, column: 13, scope: !1253)
!1255 = !DILocation(line: 449, column: 22, scope: !1253)
!1256 = !DILocation(line: 449, column: 19, scope: !1253)
!1257 = !DILocation(line: 449, column: 9, scope: !1249)
!1258 = !DILocation(line: 451, column: 10, scope: !1259)
!1259 = distinct !DILexicalBlock(scope: !1260, file: !512, line: 451, column: 10)
!1260 = distinct !DILexicalBlock(scope: !1253, file: !512, line: 449, column: 33)
!1261 = !DILocation(line: 451, column: 16, scope: !1259)
!1262 = !DILocation(line: 451, column: 38, scope: !1259)
!1263 = !DILocation(line: 451, column: 10, scope: !1260)
!1264 = !DILocation(line: 453, column: 46, scope: !1259)
!1265 = !DILocation(line: 453, column: 50, scope: !1259)
!1266 = !DILocation(line: 453, column: 58, scope: !1259)
!1267 = !DILocation(line: 453, column: 62, scope: !1259)
!1268 = !DILocation(line: 453, column: 69, scope: !1259)
!1269 = !DILocation(line: 453, column: 20, scope: !1259)
!1270 = !DILocation(line: 453, column: 7, scope: !1259)
!1271 = !DILocation(line: 453, column: 11, scope: !1259)
!1272 = !DILocation(line: 453, column: 18, scope: !1259)
!1273 = !DILocation(line: 454, column: 18, scope: !1260)
!1274 = !DILocation(line: 454, column: 6, scope: !1260)
!1275 = !DILocation(line: 454, column: 10, scope: !1260)
!1276 = !DILocation(line: 454, column: 16, scope: !1260)
!1277 = !DILocation(line: 455, column: 5, scope: !1260)
!1278 = !DILocation(line: 460, column: 8, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1213, file: !512, line: 460, column: 7)
!1280 = !DILocation(line: 460, column: 14, scope: !1279)
!1281 = !DILocation(line: 460, column: 32, scope: !1279)
!1282 = !DILocation(line: 461, column: 7, scope: !1279)
!1283 = !DILocation(line: 461, column: 11, scope: !1279)
!1284 = !DILocation(line: 461, column: 44, scope: !1279)
!1285 = !DILocation(line: 461, column: 50, scope: !1279)
!1286 = !DILocation(line: 461, column: 58, scope: !1279)
!1287 = !DILocation(line: 461, column: 67, scope: !1279)
!1288 = !DILocation(line: 461, column: 17, scope: !1279)
!1289 = !DILocation(line: 460, column: 7, scope: !1290)
!1290 = !DILexicalBlockFile(scope: !1213, file: !512, discriminator: 1)
!1291 = !DILocation(line: 462, column: 8, scope: !1292)
!1292 = distinct !DILexicalBlock(scope: !1293, file: !512, line: 462, column: 8)
!1293 = distinct !DILexicalBlock(scope: !1279, file: !512, line: 461, column: 75)
!1294 = !DILocation(line: 462, column: 14, scope: !1292)
!1295 = !DILocation(line: 462, column: 22, scope: !1292)
!1296 = !DILocation(line: 462, column: 8, scope: !1293)
!1297 = !DILocation(line: 463, column: 40, scope: !1292)
!1298 = !DILocation(line: 463, column: 46, scope: !1292)
!1299 = !DILocation(line: 463, column: 54, scope: !1292)
!1300 = !DILocation(line: 463, column: 63, scope: !1292)
!1301 = !DILocation(line: 463, column: 5, scope: !1292)
!1302 = !DILocation(line: 463, column: 9, scope: !1292)
!1303 = !DILocation(line: 463, column: 15, scope: !1292)
!1304 = !DILocation(line: 465, column: 40, scope: !1305)
!1305 = distinct !DILexicalBlock(scope: !1292, file: !512, line: 464, column: 9)
!1306 = !DILocation(line: 465, column: 46, scope: !1305)
!1307 = !DILocation(line: 465, column: 54, scope: !1305)
!1308 = !DILocation(line: 465, column: 63, scope: !1305)
!1309 = !DILocation(line: 465, column: 15, scope: !1305)
!1310 = !DILocation(line: 466, column: 44, scope: !1305)
!1311 = !DILocation(line: 466, column: 48, scope: !1305)
!1312 = !DILocation(line: 466, column: 56, scope: !1305)
!1313 = !DILocation(line: 466, column: 60, scope: !1305)
!1314 = !DILocation(line: 466, column: 67, scope: !1305)
!1315 = !DILocation(line: 466, column: 18, scope: !1305)
!1316 = !DILocation(line: 466, column: 5, scope: !1305)
!1317 = !DILocation(line: 466, column: 9, scope: !1305)
!1318 = !DILocation(line: 466, column: 16, scope: !1305)
!1319 = !DILocation(line: 467, column: 17, scope: !1305)
!1320 = !DILocation(line: 467, column: 5, scope: !1305)
!1321 = !DILocation(line: 467, column: 9, scope: !1305)
!1322 = !DILocation(line: 467, column: 15, scope: !1305)
!1323 = !DILocation(line: 469, column: 3, scope: !1293)
!1324 = !DILocation(line: 472, column: 7, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1213, file: !512, line: 472, column: 7)
!1326 = !DILocation(line: 472, column: 13, scope: !1325)
!1327 = !DILocation(line: 472, column: 23, scope: !1325)
!1328 = !DILocation(line: 472, column: 7, scope: !1213)
!1329 = !DILocalVariable(name: "ip_mutable_fields", scope: !1330, file: !512, line: 473, type: !1331)
!1330 = distinct !DILexicalBlock(scope: !1325, file: !512, line: 472, column: 29)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "ICV_mutable_fields", file: !278, line: 53, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 49, size: 32, align: 16, elements: !1333)
!1333 = !{!1334, !1335, !1336}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !1332, file: !278, line: 50, baseType: !211, size: 8, align: 8)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !1332, file: !278, line: 51, baseType: !211, size: 8, align: 8, offset: 8)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !1332, file: !278, line: 52, baseType: !228, size: 16, align: 16, offset: 16)
!1337 = !DILocation(line: 473, column: 23, scope: !1330)
!1338 = !DILocalVariable(name: "digest", scope: !1330, file: !512, line: 474, type: !1339)
!1339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 128, align: 8, elements: !260)
!1340 = !DILocation(line: 474, column: 18, scope: !1330)
!1341 = !DILocalVariable(name: "ah", scope: !1330, file: !512, line: 475, type: !276)
!1342 = !DILocation(line: 475, column: 16, scope: !1330)
!1343 = !DILocation(line: 475, column: 37, scope: !1330)
!1344 = !DILocation(line: 475, column: 43, scope: !1330)
!1345 = !DILocation(line: 475, column: 55, scope: !1330)
!1346 = !DILocation(line: 475, column: 21, scope: !1330)
!1347 = !DILocation(line: 477, column: 8, scope: !1348)
!1348 = distinct !DILexicalBlock(scope: !1330, file: !512, line: 477, column: 8)
!1349 = !DILocation(line: 477, column: 8, scope: !1330)
!1350 = !DILocation(line: 478, column: 15, scope: !1348)
!1351 = !DILocation(line: 478, column: 5, scope: !1348)
!1352 = !DILocation(line: 478, column: 9, scope: !1348)
!1353 = !DILocation(line: 478, column: 13, scope: !1348)
!1354 = !DILocation(line: 480, column: 9, scope: !1355)
!1355 = distinct !DILexicalBlock(scope: !1330, file: !512, line: 480, column: 8)
!1356 = !DILocation(line: 480, column: 8, scope: !1330)
!1357 = !DILocation(line: 493, column: 9, scope: !1358)
!1358 = distinct !DILexicalBlock(scope: !1359, file: !512, line: 493, column: 9)
!1359 = distinct !DILexicalBlock(scope: !1355, file: !512, line: 480, column: 15)
!1360 = !DILocation(line: 493, column: 15, scope: !1358)
!1361 = !DILocation(line: 493, column: 31, scope: !1358)
!1362 = !DILocation(line: 493, column: 42, scope: !1358)
!1363 = !DILocation(line: 493, column: 9, scope: !1359)
!1364 = !DILocation(line: 494, column: 6, scope: !1365)
!1365 = distinct !DILexicalBlock(scope: !1358, file: !512, line: 493, column: 56)
!1366 = !DILocation(line: 494, column: 12, scope: !1365)
!1367 = !DILocation(line: 494, column: 28, scope: !1365)
!1368 = !DILocation(line: 494, column: 34, scope: !1365)
!1369 = !DILocation(line: 495, column: 5, scope: !1365)
!1370 = !DILocation(line: 496, column: 6, scope: !1371)
!1371 = distinct !DILexicalBlock(scope: !1358, file: !512, line: 495, column: 12)
!1372 = !DILocation(line: 496, column: 12, scope: !1371)
!1373 = !DILocation(line: 496, column: 28, scope: !1371)
!1374 = !DILocation(line: 496, column: 38, scope: !1371)
!1375 = !DILocation(line: 499, column: 28, scope: !1359)
!1376 = !DILocation(line: 499, column: 34, scope: !1359)
!1377 = !DILocation(line: 499, column: 50, scope: !1359)
!1378 = !DILocation(line: 499, column: 22, scope: !1359)
!1379 = !DILocation(line: 499, column: 5, scope: !1359)
!1380 = !DILocation(line: 499, column: 9, scope: !1359)
!1381 = !DILocation(line: 499, column: 20, scope: !1359)
!1382 = !DILocation(line: 500, column: 4, scope: !1359)
!1383 = !DILocation(line: 502, column: 8, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1330, file: !512, line: 502, column: 8)
!1385 = !DILocation(line: 502, column: 8, scope: !1330)
!1386 = !DILocation(line: 504, column: 29, scope: !1387)
!1387 = distinct !DILexicalBlock(scope: !1384, file: !512, line: 502, column: 22)
!1388 = !DILocation(line: 504, column: 33, scope: !1387)
!1389 = !DILocation(line: 504, column: 23, scope: !1387)
!1390 = !DILocation(line: 504, column: 27, scope: !1387)
!1391 = !DILocation(line: 505, column: 29, scope: !1387)
!1392 = !DILocation(line: 505, column: 33, scope: !1387)
!1393 = !DILocation(line: 505, column: 23, scope: !1387)
!1394 = !DILocation(line: 505, column: 27, scope: !1387)
!1395 = !DILocation(line: 506, column: 34, scope: !1387)
!1396 = !DILocation(line: 506, column: 38, scope: !1387)
!1397 = !DILocation(line: 506, column: 23, scope: !1387)
!1398 = !DILocation(line: 506, column: 32, scope: !1387)
!1399 = !DILocation(line: 509, column: 5, scope: !1387)
!1400 = !DILocation(line: 509, column: 9, scope: !1387)
!1401 = !DILocation(line: 509, column: 13, scope: !1387)
!1402 = !DILocation(line: 510, column: 5, scope: !1387)
!1403 = !DILocation(line: 510, column: 9, scope: !1387)
!1404 = !DILocation(line: 510, column: 18, scope: !1387)
!1405 = !DILocation(line: 511, column: 12, scope: !1406)
!1406 = distinct !DILexicalBlock(scope: !1387, file: !512, line: 511, column: 9)
!1407 = !DILocation(line: 511, column: 18, scope: !1406)
!1408 = !DILocation(line: 511, column: 32, scope: !1406)
!1409 = !DILocation(line: 511, column: 9, scope: !1406)
!1410 = !DILocation(line: 511, column: 14, scope: !1411)
!1411 = !DILexicalBlockFile(scope: !1406, file: !512, discriminator: 1)
!1412 = !DILocation(line: 511, column: 20, scope: !1411)
!1413 = !DILocation(line: 511, column: 35, scope: !1411)
!1414 = !DILocation(line: 511, column: 40, scope: !1411)
!1415 = !DILocation(line: 511, column: 9, scope: !1411)
!1416 = !DILocation(line: 511, column: 13, scope: !1417)
!1417 = !DILexicalBlockFile(scope: !1406, file: !512, discriminator: 2)
!1418 = !DILocation(line: 511, column: 19, scope: !1417)
!1419 = !DILocation(line: 511, column: 34, scope: !1417)
!1420 = !DILocation(line: 511, column: 39, scope: !1417)
!1421 = !DILocation(line: 511, column: 9, scope: !1417)
!1422 = !DILocation(line: 512, column: 6, scope: !1406)
!1423 = !DILocation(line: 512, column: 10, scope: !1406)
!1424 = !DILocation(line: 512, column: 14, scope: !1406)
!1425 = !DILocation(line: 517, column: 13, scope: !1387)
!1426 = !DILocation(line: 517, column: 17, scope: !1387)
!1427 = !DILocation(line: 517, column: 5, scope: !1387)
!1428 = !DILocation(line: 518, column: 31, scope: !1387)
!1429 = !DILocation(line: 518, column: 37, scope: !1387)
!1430 = !DILocation(line: 518, column: 50, scope: !1387)
!1431 = !DILocation(line: 518, column: 56, scope: !1387)
!1432 = !DILocation(line: 518, column: 74, scope: !1387)
!1433 = !DILocation(line: 518, column: 80, scope: !1387)
!1434 = !DILocation(line: 518, column: 117, scope: !1387)
!1435 = !DILocation(line: 518, column: 5, scope: !1387)
!1436 = !DILocation(line: 519, column: 12, scope: !1387)
!1437 = !DILocation(line: 519, column: 16, scope: !1387)
!1438 = !DILocation(line: 519, column: 5, scope: !1387)
!1439 = !DILocation(line: 522, column: 33, scope: !1387)
!1440 = !DILocation(line: 522, column: 5, scope: !1387)
!1441 = !DILocation(line: 522, column: 9, scope: !1387)
!1442 = !DILocation(line: 522, column: 13, scope: !1387)
!1443 = !DILocation(line: 523, column: 38, scope: !1387)
!1444 = !DILocation(line: 523, column: 5, scope: !1387)
!1445 = !DILocation(line: 523, column: 9, scope: !1387)
!1446 = !DILocation(line: 523, column: 18, scope: !1387)
!1447 = !DILocation(line: 524, column: 33, scope: !1387)
!1448 = !DILocation(line: 524, column: 5, scope: !1387)
!1449 = !DILocation(line: 524, column: 9, scope: !1387)
!1450 = !DILocation(line: 524, column: 13, scope: !1387)
!1451 = !DILocation(line: 525, column: 4, scope: !1387)
!1452 = !DILocation(line: 526, column: 3, scope: !1330)
!1453 = !DILocation(line: 528, column: 2, scope: !1213)
!1454 = !DILocation(line: 529, column: 1, scope: !1080)
!1455 = distinct !DISubprogram(name: "vrrp_send_pkt", scope: !512, file: !512, line: 1322, type: !1456, isLocal: true, isDefinition: true, scopeLine: 1323, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!1458, !537, !981}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !571, line: 223, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !357, line: 172, baseType: !383)
!1460 = !DILocalVariable(name: "vrrp", arg: 1, scope: !1455, file: !512, line: 1322, type: !537)
!1461 = !DILocation(line: 1322, column: 24, scope: !1455)
!1462 = !DILocalVariable(name: "addr", arg: 2, scope: !1455, file: !512, line: 1322, type: !981)
!1463 = !DILocation(line: 1322, column: 55, scope: !1455)
!1464 = !DILocalVariable(name: "src", scope: !1455, file: !512, line: 1324, type: !981)
!1465 = !DILocation(line: 1324, column: 27, scope: !1455)
!1466 = !DILocation(line: 1324, column: 34, scope: !1455)
!1467 = !DILocation(line: 1324, column: 40, scope: !1455)
!1468 = !DILocalVariable(name: "msg", scope: !1455, file: !512, line: 1325, type: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !154, line: 228, size: 448, align: 64, elements: !1470)
!1470 = !{!1471, !1472, !1475, !1482, !1483, !1484, !1485}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !1469, file: !154, line: 230, baseType: !232, size: 64, align: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !1469, file: !154, line: 231, baseType: !1473, size: 32, align: 32, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !571, line: 277, baseType: !1474)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !357, line: 189, baseType: !189)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iov", scope: !1469, file: !154, line: 233, baseType: !1476, size: 64, align: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64, align: 64)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1478, line: 43, size: 128, align: 64, elements: !1479)
!1478 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/uio.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!1479 = !{!1480, !1481}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1477, file: !1478, line: 45, baseType: !232, size: 64, align: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1477, file: !1478, line: 46, baseType: !292, size: 64, align: 64, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iovlen", scope: !1469, file: !154, line: 234, baseType: !292, size: 64, align: 64, offset: 192)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !1469, file: !154, line: 236, baseType: !232, size: 64, align: 64, offset: 256)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !1469, file: !154, line: 237, baseType: !292, size: 64, align: 64, offset: 320)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !1469, file: !154, line: 242, baseType: !300, size: 32, align: 32, offset: 384)
!1486 = !DILocation(line: 1325, column: 16, scope: !1455)
!1487 = !DILocalVariable(name: "iov", scope: !1455, file: !512, line: 1326, type: !1477)
!1488 = !DILocation(line: 1326, column: 15, scope: !1455)
!1489 = !DILocalVariable(name: "cbuf", scope: !1455, file: !512, line: 1327, type: !1490)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 2048, align: 8, elements: !1491)
!1491 = !{!1492}
!1492 = !DISubrange(count: 256)
!1493 = !DILocation(line: 1327, column: 7, scope: !1455)
!1494 = !DILocation(line: 1330, column: 2, scope: !1455)
!1495 = !DILocation(line: 1331, column: 6, scope: !1455)
!1496 = !DILocation(line: 1331, column: 14, scope: !1455)
!1497 = !DILocation(line: 1332, column: 6, scope: !1455)
!1498 = !DILocation(line: 1332, column: 17, scope: !1455)
!1499 = !DILocation(line: 1333, column: 17, scope: !1455)
!1500 = !DILocation(line: 1333, column: 23, scope: !1455)
!1501 = !DILocation(line: 1333, column: 6, scope: !1455)
!1502 = !DILocation(line: 1333, column: 15, scope: !1455)
!1503 = !DILocation(line: 1334, column: 16, scope: !1455)
!1504 = !DILocation(line: 1334, column: 22, scope: !1455)
!1505 = !DILocation(line: 1334, column: 6, scope: !1455)
!1506 = !DILocation(line: 1334, column: 14, scope: !1455)
!1507 = !DILocation(line: 1337, column: 6, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1455, file: !512, line: 1337, column: 6)
!1509 = !DILocation(line: 1337, column: 11, scope: !1508)
!1510 = !DILocation(line: 1337, column: 14, scope: !1511)
!1511 = !DILexicalBlockFile(scope: !1508, file: !512, discriminator: 1)
!1512 = !DILocation(line: 1337, column: 20, scope: !1511)
!1513 = !DILocation(line: 1337, column: 30, scope: !1511)
!1514 = !DILocation(line: 1337, column: 6, scope: !1511)
!1515 = !DILocation(line: 1338, column: 18, scope: !1516)
!1516 = distinct !DILexicalBlock(scope: !1508, file: !512, line: 1337, column: 41)
!1517 = !DILocation(line: 1338, column: 7, scope: !1516)
!1518 = !DILocation(line: 1338, column: 16, scope: !1516)
!1519 = !DILocation(line: 1339, column: 7, scope: !1516)
!1520 = !DILocation(line: 1339, column: 19, scope: !1516)
!1521 = !DILocation(line: 1340, column: 2, scope: !1516)
!1522 = !DILocation(line: 1340, column: 13, scope: !1523)
!1523 = !DILexicalBlockFile(scope: !1524, file: !512, discriminator: 1)
!1524 = distinct !DILexicalBlock(scope: !1508, file: !512, line: 1340, column: 13)
!1525 = !DILocation(line: 1340, column: 18, scope: !1523)
!1526 = !DILocation(line: 1340, column: 21, scope: !1527)
!1527 = !DILexicalBlockFile(scope: !1524, file: !512, discriminator: 2)
!1528 = !DILocation(line: 1340, column: 27, scope: !1527)
!1529 = !DILocation(line: 1340, column: 37, scope: !1527)
!1530 = !DILocation(line: 1340, column: 13, scope: !1527)
!1531 = !DILocation(line: 1341, column: 18, scope: !1532)
!1532 = distinct !DILexicalBlock(scope: !1524, file: !512, line: 1340, column: 49)
!1533 = !DILocation(line: 1341, column: 7, scope: !1532)
!1534 = !DILocation(line: 1341, column: 16, scope: !1532)
!1535 = !DILocation(line: 1342, column: 7, scope: !1532)
!1536 = !DILocation(line: 1342, column: 19, scope: !1532)
!1537 = !DILocation(line: 1343, column: 35, scope: !1532)
!1538 = !DILocation(line: 1343, column: 41, scope: !1532)
!1539 = !DILocation(line: 1343, column: 46, scope: !1532)
!1540 = !DILocation(line: 1343, column: 3, scope: !1532)
!1541 = !DILocation(line: 1344, column: 2, scope: !1532)
!1542 = !DILocation(line: 1344, column: 13, scope: !1543)
!1543 = !DILexicalBlockFile(scope: !1544, file: !512, discriminator: 1)
!1544 = distinct !DILexicalBlock(scope: !1524, file: !512, line: 1344, column: 13)
!1545 = !DILocation(line: 1344, column: 19, scope: !1543)
!1546 = !DILocation(line: 1344, column: 26, scope: !1543)
!1547 = !DILocation(line: 1345, column: 19, scope: !1548)
!1548 = distinct !DILexicalBlock(scope: !1544, file: !512, line: 1344, column: 37)
!1549 = !DILocation(line: 1345, column: 32, scope: !1548)
!1550 = !DILocation(line: 1345, column: 18, scope: !1548)
!1551 = !DILocation(line: 1345, column: 7, scope: !1548)
!1552 = !DILocation(line: 1345, column: 16, scope: !1548)
!1553 = !DILocation(line: 1346, column: 7, scope: !1548)
!1554 = !DILocation(line: 1346, column: 19, scope: !1548)
!1555 = !DILocation(line: 1347, column: 2, scope: !1548)
!1556 = !DILocation(line: 1347, column: 13, scope: !1557)
!1557 = !DILexicalBlockFile(scope: !1558, file: !512, discriminator: 1)
!1558 = distinct !DILexicalBlock(scope: !1544, file: !512, line: 1347, column: 13)
!1559 = !DILocation(line: 1347, column: 19, scope: !1557)
!1560 = !DILocation(line: 1347, column: 26, scope: !1557)
!1561 = !DILocation(line: 1348, column: 19, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1558, file: !512, line: 1347, column: 38)
!1563 = !DILocation(line: 1348, column: 32, scope: !1562)
!1564 = !DILocation(line: 1348, column: 18, scope: !1562)
!1565 = !DILocation(line: 1348, column: 7, scope: !1562)
!1566 = !DILocation(line: 1348, column: 16, scope: !1562)
!1567 = !DILocation(line: 1349, column: 7, scope: !1562)
!1568 = !DILocation(line: 1349, column: 19, scope: !1562)
!1569 = !DILocation(line: 1350, column: 35, scope: !1562)
!1570 = !DILocation(line: 1350, column: 41, scope: !1562)
!1571 = !DILocation(line: 1350, column: 46, scope: !1562)
!1572 = !DILocation(line: 1350, column: 3, scope: !1562)
!1573 = !DILocation(line: 1351, column: 2, scope: !1562)
!1574 = !DILocation(line: 1354, column: 17, scope: !1455)
!1575 = !DILocation(line: 1354, column: 23, scope: !1455)
!1576 = !DILocation(line: 1354, column: 32, scope: !1455)
!1577 = !DILocation(line: 1354, column: 47, scope: !1455)
!1578 = !DILocation(line: 1354, column: 46, scope: !1455)
!1579 = !DILocation(line: 1354, column: 9, scope: !1455)
!1580 = !DILocation(line: 1354, column: 2, scope: !1455)
!1581 = distinct !DISubprogram(name: "vrrp_send_link_update", scope: !512, file: !512, line: 1428, type: !1582, isLocal: false, isDefinition: true, scopeLine: 1429, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{null, !537, !189}
!1584 = !DILocalVariable(name: "vrrp", arg: 1, scope: !1581, file: !512, line: 1428, type: !537)
!1585 = !DILocation(line: 1428, column: 32, scope: !1581)
!1586 = !DILocalVariable(name: "rep", arg: 2, scope: !1581, file: !512, line: 1428, type: !189)
!1587 = !DILocation(line: 1428, column: 47, scope: !1581)
!1588 = !DILocalVariable(name: "j", scope: !1581, file: !512, line: 1430, type: !189)
!1589 = !DILocation(line: 1430, column: 11, scope: !1581)
!1590 = !DILocalVariable(name: "ipaddress", scope: !1581, file: !512, line: 1431, type: !311)
!1591 = !DILocation(line: 1431, column: 16, scope: !1581)
!1592 = !DILocalVariable(name: "e", scope: !1581, file: !512, line: 1432, type: !984)
!1593 = !DILocation(line: 1432, column: 10, scope: !1581)
!1594 = !DILocation(line: 1435, column: 9, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1581, file: !512, line: 1435, column: 6)
!1596 = !DILocation(line: 1435, column: 16, scope: !1595)
!1597 = !DILocation(line: 1435, column: 6, scope: !1581)
!1598 = !DILocation(line: 1436, column: 3, scope: !1595)
!1599 = !DILocation(line: 1440, column: 6, scope: !1600)
!1600 = distinct !DILexicalBlock(scope: !1581, file: !512, line: 1440, column: 6)
!1601 = !DILocation(line: 1440, column: 12, scope: !1600)
!1602 = !DILocation(line: 1440, column: 17, scope: !1600)
!1603 = !DILocation(line: 1440, column: 27, scope: !1600)
!1604 = !DILocation(line: 1440, column: 6, scope: !1581)
!1605 = !DILocation(line: 1441, column: 3, scope: !1600)
!1606 = !DILocation(line: 1444, column: 9, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1581, file: !512, line: 1444, column: 2)
!1608 = !DILocation(line: 1444, column: 7, scope: !1607)
!1609 = !DILocation(line: 1444, column: 14, scope: !1610)
!1610 = !DILexicalBlockFile(scope: !1611, file: !512, discriminator: 1)
!1611 = distinct !DILexicalBlock(scope: !1607, file: !512, line: 1444, column: 2)
!1612 = !DILocation(line: 1444, column: 18, scope: !1610)
!1613 = !DILocation(line: 1444, column: 16, scope: !1610)
!1614 = !DILocation(line: 1444, column: 2, scope: !1610)
!1615 = !DILocation(line: 1445, column: 10, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1617, file: !512, line: 1445, column: 7)
!1617 = distinct !DILexicalBlock(scope: !1611, file: !512, line: 1444, column: 28)
!1618 = !DILocation(line: 1445, column: 16, scope: !1616)
!1619 = !DILocation(line: 1445, column: 21, scope: !1616)
!1620 = !DILocation(line: 1445, column: 7, scope: !1616)
!1621 = !DILocation(line: 1445, column: 12, scope: !1622)
!1622 = !DILexicalBlockFile(scope: !1616, file: !512, discriminator: 1)
!1623 = !DILocation(line: 1445, column: 18, scope: !1622)
!1624 = !DILocation(line: 1445, column: 24, scope: !1622)
!1625 = !DILocation(line: 1445, column: 29, scope: !1622)
!1626 = !DILocation(line: 1445, column: 7, scope: !1622)
!1627 = !DILocation(line: 1445, column: 11, scope: !1628)
!1628 = !DILexicalBlockFile(scope: !1616, file: !512, discriminator: 2)
!1629 = !DILocation(line: 1445, column: 17, scope: !1628)
!1630 = !DILocation(line: 1445, column: 23, scope: !1628)
!1631 = !DILocation(line: 1445, column: 28, scope: !1628)
!1632 = !DILocation(line: 1445, column: 7, scope: !1628)
!1633 = !DILocation(line: 1446, column: 16, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1635, file: !512, line: 1446, column: 4)
!1635 = distinct !DILexicalBlock(scope: !1616, file: !512, line: 1445, column: 11)
!1636 = !DILocation(line: 1446, column: 22, scope: !1634)
!1637 = !DILocation(line: 1446, column: 15, scope: !1634)
!1638 = !DILocation(line: 1446, column: 14, scope: !1634)
!1639 = !DILocation(line: 1446, column: 14, scope: !1640)
!1640 = !DILexicalBlockFile(scope: !1634, file: !512, discriminator: 1)
!1641 = !DILocation(line: 1446, column: 15, scope: !1642)
!1642 = !DILexicalBlockFile(scope: !1634, file: !512, discriminator: 2)
!1643 = !DILocation(line: 1446, column: 21, scope: !1642)
!1644 = !DILocation(line: 1446, column: 27, scope: !1642)
!1645 = !DILocation(line: 1446, column: 14, scope: !1642)
!1646 = !DILocation(line: 1446, column: 14, scope: !1647)
!1647 = !DILexicalBlockFile(scope: !1634, file: !512, discriminator: 3)
!1648 = !DILocation(line: 1446, column: 11, scope: !1647)
!1649 = !DILocation(line: 1446, column: 9, scope: !1647)
!1650 = !DILocation(line: 1446, column: 34, scope: !1651)
!1651 = !DILexicalBlockFile(scope: !1652, file: !512, discriminator: 4)
!1652 = distinct !DILexicalBlock(scope: !1634, file: !512, line: 1446, column: 4)
!1653 = !DILocation(line: 1446, column: 4, scope: !1651)
!1654 = !DILocation(line: 1447, column: 19, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !1652, file: !512, line: 1446, column: 56)
!1656 = !DILocation(line: 1447, column: 23, scope: !1655)
!1657 = !DILocation(line: 1447, column: 17, scope: !1655)
!1658 = !DILocation(line: 1447, column: 15, scope: !1655)
!1659 = !DILocation(line: 1448, column: 22, scope: !1655)
!1660 = !DILocation(line: 1448, column: 28, scope: !1655)
!1661 = !DILocation(line: 1448, column: 40, scope: !1655)
!1662 = !DILocation(line: 1448, column: 39, scope: !1655)
!1663 = !DILocation(line: 1448, column: 5, scope: !1655)
!1664 = !DILocation(line: 1449, column: 4, scope: !1655)
!1665 = !DILocation(line: 1446, column: 45, scope: !1666)
!1666 = !DILexicalBlockFile(scope: !1652, file: !512, discriminator: 5)
!1667 = !DILocation(line: 1446, column: 49, scope: !1666)
!1668 = !DILocation(line: 1446, column: 42, scope: !1666)
!1669 = !DILocation(line: 1446, column: 4, scope: !1666)
!1670 = distinct !{!1670, !1671}
!1671 = !DILocation(line: 1446, column: 4, scope: !1635)
!1672 = !DILocation(line: 1450, column: 3, scope: !1635)
!1673 = !DILocation(line: 1452, column: 10, scope: !1674)
!1674 = distinct !DILexicalBlock(scope: !1617, file: !512, line: 1452, column: 7)
!1675 = !DILocation(line: 1452, column: 16, scope: !1674)
!1676 = !DILocation(line: 1452, column: 22, scope: !1674)
!1677 = !DILocation(line: 1452, column: 7, scope: !1674)
!1678 = !DILocation(line: 1452, column: 12, scope: !1679)
!1679 = !DILexicalBlockFile(scope: !1674, file: !512, discriminator: 1)
!1680 = !DILocation(line: 1452, column: 18, scope: !1679)
!1681 = !DILocation(line: 1452, column: 25, scope: !1679)
!1682 = !DILocation(line: 1452, column: 30, scope: !1679)
!1683 = !DILocation(line: 1452, column: 7, scope: !1679)
!1684 = !DILocation(line: 1452, column: 11, scope: !1685)
!1685 = !DILexicalBlockFile(scope: !1674, file: !512, discriminator: 2)
!1686 = !DILocation(line: 1452, column: 17, scope: !1685)
!1687 = !DILocation(line: 1452, column: 24, scope: !1685)
!1688 = !DILocation(line: 1452, column: 29, scope: !1685)
!1689 = !DILocation(line: 1452, column: 7, scope: !1685)
!1690 = !DILocation(line: 1453, column: 16, scope: !1691)
!1691 = distinct !DILexicalBlock(scope: !1692, file: !512, line: 1453, column: 4)
!1692 = distinct !DILexicalBlock(scope: !1674, file: !512, line: 1452, column: 11)
!1693 = !DILocation(line: 1453, column: 22, scope: !1691)
!1694 = !DILocation(line: 1453, column: 15, scope: !1691)
!1695 = !DILocation(line: 1453, column: 14, scope: !1691)
!1696 = !DILocation(line: 1453, column: 14, scope: !1697)
!1697 = !DILexicalBlockFile(scope: !1691, file: !512, discriminator: 1)
!1698 = !DILocation(line: 1453, column: 15, scope: !1699)
!1699 = !DILexicalBlockFile(scope: !1691, file: !512, discriminator: 2)
!1700 = !DILocation(line: 1453, column: 21, scope: !1699)
!1701 = !DILocation(line: 1453, column: 28, scope: !1699)
!1702 = !DILocation(line: 1453, column: 14, scope: !1699)
!1703 = !DILocation(line: 1453, column: 14, scope: !1704)
!1704 = !DILexicalBlockFile(scope: !1691, file: !512, discriminator: 3)
!1705 = !DILocation(line: 1453, column: 11, scope: !1704)
!1706 = !DILocation(line: 1453, column: 9, scope: !1704)
!1707 = !DILocation(line: 1453, column: 35, scope: !1708)
!1708 = !DILexicalBlockFile(scope: !1709, file: !512, discriminator: 4)
!1709 = distinct !DILexicalBlock(scope: !1691, file: !512, line: 1453, column: 4)
!1710 = !DILocation(line: 1453, column: 4, scope: !1708)
!1711 = !DILocation(line: 1454, column: 19, scope: !1712)
!1712 = distinct !DILexicalBlock(scope: !1709, file: !512, line: 1453, column: 57)
!1713 = !DILocation(line: 1454, column: 23, scope: !1712)
!1714 = !DILocation(line: 1454, column: 17, scope: !1712)
!1715 = !DILocation(line: 1454, column: 15, scope: !1712)
!1716 = !DILocation(line: 1455, column: 22, scope: !1712)
!1717 = !DILocation(line: 1455, column: 28, scope: !1712)
!1718 = !DILocation(line: 1455, column: 40, scope: !1712)
!1719 = !DILocation(line: 1455, column: 39, scope: !1712)
!1720 = !DILocation(line: 1455, column: 5, scope: !1712)
!1721 = !DILocation(line: 1456, column: 4, scope: !1712)
!1722 = !DILocation(line: 1453, column: 46, scope: !1723)
!1723 = !DILexicalBlockFile(scope: !1709, file: !512, discriminator: 5)
!1724 = !DILocation(line: 1453, column: 50, scope: !1723)
!1725 = !DILocation(line: 1453, column: 43, scope: !1723)
!1726 = !DILocation(line: 1453, column: 4, scope: !1723)
!1727 = distinct !{!1727, !1728}
!1728 = !DILocation(line: 1453, column: 4, scope: !1692)
!1729 = !DILocation(line: 1457, column: 3, scope: !1692)
!1730 = !DILocation(line: 1458, column: 2, scope: !1617)
!1731 = !DILocation(line: 1444, column: 24, scope: !1732)
!1732 = !DILexicalBlockFile(scope: !1611, file: !512, discriminator: 2)
!1733 = !DILocation(line: 1444, column: 2, scope: !1732)
!1734 = distinct !{!1734, !1735}
!1735 = !DILocation(line: 1444, column: 2, scope: !1581)
!1736 = !DILocation(line: 1459, column: 1, scope: !1581)
!1737 = distinct !DISubprogram(name: "vrrp_send_update", scope: !512, file: !512, line: 1403, type: !1738, isLocal: true, isDefinition: true, scopeLine: 1404, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{null, !537, !311, !350}
!1740 = !DILocalVariable(name: "vrrp", arg: 1, scope: !1737, file: !512, line: 1403, type: !537)
!1741 = !DILocation(line: 1403, column: 27, scope: !1737)
!1742 = !DILocalVariable(name: "ipaddress", arg: 2, scope: !1737, file: !512, line: 1403, type: !311)
!1743 = !DILocation(line: 1403, column: 48, scope: !1737)
!1744 = !DILocalVariable(name: "log_msg", arg: 3, scope: !1737, file: !512, line: 1403, type: !350)
!1745 = !DILocation(line: 1403, column: 63, scope: !1737)
!1746 = !DILocalVariable(name: "msg", scope: !1737, file: !512, line: 1405, type: !230)
!1747 = !DILocation(line: 1405, column: 8, scope: !1737)
!1748 = !DILocalVariable(name: "addr_str", scope: !1737, file: !512, line: 1406, type: !1749)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 368, align: 8, elements: !1750)
!1750 = !{!1751}
!1751 = !DISubrange(count: 46)
!1752 = !DILocation(line: 1406, column: 7, scope: !1737)
!1753 = !DILocation(line: 1408, column: 9, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1737, file: !512, line: 1408, column: 6)
!1755 = !DILocation(line: 1408, column: 21, scope: !1754)
!1756 = !DILocation(line: 1408, column: 25, scope: !1754)
!1757 = !DILocation(line: 1408, column: 8, scope: !1754)
!1758 = !DILocation(line: 1408, column: 36, scope: !1754)
!1759 = !DILocation(line: 1408, column: 6, scope: !1737)
!1760 = !DILocation(line: 1409, column: 23, scope: !1754)
!1761 = !DILocation(line: 1409, column: 29, scope: !1754)
!1762 = !DILocation(line: 1409, column: 3, scope: !1754)
!1763 = !DILocation(line: 1411, column: 29, scope: !1754)
!1764 = !DILocation(line: 1411, column: 35, scope: !1754)
!1765 = !DILocation(line: 1411, column: 3, scope: !1754)
!1766 = !DILocation(line: 1413, column: 6, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1737, file: !512, line: 1413, column: 6)
!1768 = !DILocation(line: 1413, column: 14, scope: !1767)
!1769 = !DILocation(line: 1413, column: 17, scope: !1770)
!1770 = !DILexicalBlockFile(scope: !1767, file: !512, discriminator: 1)
!1771 = !DILocation(line: 1413, column: 6, scope: !1770)
!1772 = !DILocation(line: 1414, column: 10, scope: !1773)
!1773 = distinct !DILexicalBlock(scope: !1774, file: !512, line: 1414, column: 7)
!1774 = distinct !DILexicalBlock(scope: !1767, file: !512, line: 1413, column: 53)
!1775 = !DILocation(line: 1414, column: 22, scope: !1773)
!1776 = !DILocation(line: 1414, column: 26, scope: !1773)
!1777 = !DILocation(line: 1414, column: 9, scope: !1773)
!1778 = !DILocation(line: 1414, column: 37, scope: !1773)
!1779 = !DILocation(line: 1414, column: 7, scope: !1774)
!1780 = !DILocation(line: 1415, column: 8, scope: !1781)
!1781 = distinct !DILexicalBlock(scope: !1773, file: !512, line: 1414, column: 10)
!1782 = !DILocation(line: 1416, column: 23, scope: !1781)
!1783 = !DILocation(line: 1416, column: 34, scope: !1781)
!1784 = !DILocation(line: 1416, column: 36, scope: !1781)
!1785 = !DILocation(line: 1416, column: 40, scope: !1781)
!1786 = !DILocation(line: 1416, column: 22, scope: !1781)
!1787 = !DILocation(line: 1416, column: 50, scope: !1781)
!1788 = !DILocation(line: 1416, column: 4, scope: !1781)
!1789 = !DILocation(line: 1417, column: 3, scope: !1781)
!1790 = !DILocation(line: 1418, column: 8, scope: !1791)
!1791 = distinct !DILexicalBlock(scope: !1773, file: !512, line: 1417, column: 10)
!1792 = !DILocation(line: 1419, column: 24, scope: !1791)
!1793 = !DILocation(line: 1419, column: 35, scope: !1791)
!1794 = !DILocation(line: 1419, column: 37, scope: !1791)
!1795 = !DILocation(line: 1419, column: 23, scope: !1791)
!1796 = !DILocation(line: 1419, column: 48, scope: !1791)
!1797 = !DILocation(line: 1419, column: 4, scope: !1791)
!1798 = !DILocation(line: 1423, column: 8, scope: !1774)
!1799 = !DILocation(line: 1423, column: 14, scope: !1774)
!1800 = !DILocation(line: 1423, column: 21, scope: !1774)
!1801 = !DILocation(line: 1423, column: 28, scope: !1774)
!1802 = !DILocation(line: 1423, column: 39, scope: !1774)
!1803 = !DILocation(line: 1423, column: 45, scope: !1774)
!1804 = !DILocation(line: 1423, column: 26, scope: !1774)
!1805 = !DILocation(line: 1423, column: 54, scope: !1774)
!1806 = !DILocation(line: 1422, column: 3, scope: !1774)
!1807 = !DILocation(line: 1424, column: 2, scope: !1774)
!1808 = !DILocation(line: 1425, column: 1, scope: !1737)
!1809 = distinct !DISubprogram(name: "vrrp_state_goto_master", scope: !512, file: !512, line: 1541, type: !1810, isLocal: false, isDefinition: true, scopeLine: 1542, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{null, !537}
!1812 = !DILocalVariable(name: "vrrp", arg: 1, scope: !1809, file: !512, line: 1541, type: !537)
!1813 = !DILocation(line: 1541, column: 33, scope: !1809)
!1814 = !DILocation(line: 1543, column: 6, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1809, file: !512, line: 1543, column: 6)
!1816 = !DILocation(line: 1543, column: 12, scope: !1815)
!1817 = !DILocation(line: 1543, column: 17, scope: !1815)
!1818 = !DILocation(line: 1543, column: 47, scope: !1819)
!1819 = !DILexicalBlockFile(scope: !1815, file: !512, discriminator: 1)
!1820 = !DILocation(line: 1543, column: 21, scope: !1819)
!1821 = !DILocation(line: 1543, column: 6, scope: !1819)
!1822 = !DILocation(line: 1545, column: 3, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1815, file: !512, line: 1544, column: 2)
!1824 = !DILocation(line: 1545, column: 9, scope: !1823)
!1825 = !DILocation(line: 1545, column: 19, scope: !1823)
!1826 = !DILocation(line: 1546, column: 3, scope: !1823)
!1827 = !DILocation(line: 1551, column: 6, scope: !1828)
!1828 = distinct !DILexicalBlock(scope: !1809, file: !512, line: 1551, column: 6)
!1829 = !DILocation(line: 1551, column: 12, scope: !1828)
!1830 = !DILocation(line: 1551, column: 28, scope: !1828)
!1831 = !DILocation(line: 1551, column: 6, scope: !1809)
!1832 = !DILocation(line: 1552, column: 3, scope: !1833)
!1833 = distinct !DILexicalBlock(scope: !1828, file: !512, line: 1551, column: 35)
!1834 = !DILocation(line: 1552, column: 9, scope: !1833)
!1835 = !DILocation(line: 1552, column: 25, scope: !1833)
!1836 = !DILocation(line: 1552, column: 31, scope: !1833)
!1837 = !DILocation(line: 1553, column: 3, scope: !1833)
!1838 = !DILocation(line: 1553, column: 9, scope: !1833)
!1839 = !DILocation(line: 1553, column: 25, scope: !1833)
!1840 = !DILocation(line: 1553, column: 36, scope: !1833)
!1841 = !DILocation(line: 1554, column: 2, scope: !1833)
!1842 = !DILocation(line: 1561, column: 2, scope: !1809)
!1843 = !DILocation(line: 1561, column: 8, scope: !1809)
!1844 = !DILocation(line: 1561, column: 14, scope: !1809)
!1845 = !DILocation(line: 1562, column: 27, scope: !1809)
!1846 = !DILocation(line: 1562, column: 2, scope: !1809)
!1847 = !DILocation(line: 1563, column: 23, scope: !1809)
!1848 = !DILocation(line: 1563, column: 2, scope: !1809)
!1849 = !DILocation(line: 1564, column: 1, scope: !1809)
!1850 = !DILocation(line: 1564, column: 1, scope: !1851)
!1851 = !DILexicalBlockFile(scope: !1809, file: !512, discriminator: 1)
!1852 = distinct !DISubprogram(name: "vrrp_state_master_tx", scope: !512, file: !512, line: 1782, type: !1810, isLocal: false, isDefinition: true, scopeLine: 1783, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!1853 = !DILocalVariable(name: "vrrp", arg: 1, scope: !1852, file: !512, line: 1782, type: !537)
!1854 = !DILocation(line: 1782, column: 31, scope: !1852)
!1855 = !DILocation(line: 1784, column: 9, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !1852, file: !512, line: 1784, column: 6)
!1857 = !DILocation(line: 1784, column: 16, scope: !1856)
!1858 = !DILocation(line: 1784, column: 6, scope: !1852)
!1859 = !DILocation(line: 1786, column: 11, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1856, file: !512, line: 1784, column: 25)
!1861 = !DILocation(line: 1786, column: 17, scope: !1860)
!1862 = !DILocation(line: 1785, column: 3, scope: !1860)
!1863 = !DILocation(line: 1787, column: 28, scope: !1860)
!1864 = !DILocation(line: 1787, column: 3, scope: !1860)
!1865 = !DILocation(line: 1792, column: 7, scope: !1866)
!1866 = distinct !DILexicalBlock(scope: !1860, file: !512, line: 1792, column: 7)
!1867 = !DILocation(line: 1792, column: 13, scope: !1866)
!1868 = !DILocation(line: 1792, column: 7, scope: !1860)
!1869 = !DILocation(line: 1793, column: 21, scope: !1866)
!1870 = !DILocation(line: 1794, column: 7, scope: !1866)
!1871 = !DILocation(line: 1794, column: 13, scope: !1866)
!1872 = !DILocation(line: 1794, column: 19, scope: !1866)
!1873 = !DILocation(line: 1793, column: 4, scope: !1866)
!1874 = !DILocation(line: 1795, column: 2, scope: !1860)
!1875 = !DILocation(line: 1795, column: 13, scope: !1876)
!1876 = !DILexicalBlockFile(scope: !1877, file: !512, discriminator: 1)
!1877 = distinct !DILexicalBlock(scope: !1856, file: !512, line: 1795, column: 12)
!1878 = !DILocation(line: 1795, column: 19, scope: !1876)
!1879 = !DILocation(line: 1795, column: 15, scope: !1876)
!1880 = !DILocation(line: 1795, column: 22, scope: !1876)
!1881 = !DILocation(line: 1795, column: 13, scope: !1882)
!1882 = !DILexicalBlockFile(scope: !1877, file: !512, discriminator: 2)
!1883 = !DILocation(line: 1795, column: 19, scope: !1882)
!1884 = !DILocation(line: 1795, column: 15, scope: !1882)
!1885 = !DILocation(line: 1795, column: 25, scope: !1882)
!1886 = !DILocation(line: 1795, column: 44, scope: !1882)
!1887 = !DILocation(line: 1796, column: 8, scope: !1877)
!1888 = !DILocation(line: 1796, column: 6, scope: !1877)
!1889 = !DILocation(line: 1796, column: 12, scope: !1877)
!1890 = !DILocation(line: 1796, column: 15, scope: !1877)
!1891 = !DILocation(line: 1795, column: 12, scope: !1892)
!1892 = !DILexicalBlockFile(scope: !1856, file: !512, discriminator: 3)
!1893 = !DILocation(line: 1796, column: 8, scope: !1876)
!1894 = !DILocation(line: 1796, column: 6, scope: !1876)
!1895 = !DILocation(line: 1796, column: 12, scope: !1876)
!1896 = !DILocation(line: 1796, column: 5, scope: !1876)
!1897 = !DILocation(line: 1796, column: 8, scope: !1882)
!1898 = !DILocation(line: 1796, column: 6, scope: !1882)
!1899 = !DILocation(line: 1796, column: 12, scope: !1882)
!1900 = !DILocation(line: 1796, column: 5, scope: !1882)
!1901 = !DILocation(line: 1795, column: 12, scope: !1902)
!1902 = !DILexicalBlockFile(scope: !1856, file: !512, discriminator: 4)
!1903 = !DILocation(line: 1797, column: 25, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1877, file: !512, line: 1796, column: 56)
!1905 = !DILocation(line: 1797, column: 31, scope: !1904)
!1906 = !DILocation(line: 1797, column: 37, scope: !1904)
!1907 = !DILocation(line: 1797, column: 3, scope: !1904)
!1908 = !DILocation(line: 1798, column: 3, scope: !1904)
!1909 = !DILocation(line: 1798, column: 9, scope: !1904)
!1910 = !DILocation(line: 1798, column: 44, scope: !1904)
!1911 = !DILocation(line: 1798, column: 50, scope: !1904)
!1912 = !DILocation(line: 1798, column: 30, scope: !1904)
!1913 = !DILocation(line: 1798, column: 30, scope: !1914)
!1914 = !DILexicalBlockFile(scope: !1904, file: !512, discriminator: 1)
!1915 = !DILocation(line: 1799, column: 2, scope: !1904)
!1916 = !DILocation(line: 1801, column: 16, scope: !1852)
!1917 = !DILocation(line: 1801, column: 22, scope: !1852)
!1918 = !DILocation(line: 1801, column: 28, scope: !1852)
!1919 = !DILocation(line: 1801, column: 2, scope: !1852)
!1920 = !DILocation(line: 1802, column: 1, scope: !1852)
!1921 = distinct !DISubprogram(name: "vrrp_restore_interface", scope: !512, file: !512, line: 1568, type: !1922, isLocal: false, isDefinition: true, scopeLine: 1569, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{null, !537, !350, !350}
!1924 = !DILocalVariable(name: "vrrp", arg: 1, scope: !1921, file: !512, line: 1568, type: !537)
!1925 = !DILocation(line: 1568, column: 33, scope: !1921)
!1926 = !DILocalVariable(name: "advF", arg: 2, scope: !1921, file: !512, line: 1568, type: !350)
!1927 = !DILocation(line: 1568, column: 43, scope: !1921)
!1928 = !DILocalVariable(name: "force", arg: 3, scope: !1921, file: !512, line: 1568, type: !350)
!1929 = !DILocation(line: 1568, column: 54, scope: !1921)
!1930 = !DILocation(line: 1571, column: 6, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1921, file: !512, line: 1571, column: 6)
!1932 = !DILocation(line: 1571, column: 6, scope: !1921)
!1933 = !DILocation(line: 1572, column: 17, scope: !1934)
!1934 = distinct !DILexicalBlock(scope: !1931, file: !512, line: 1571, column: 12)
!1935 = !DILocation(line: 1572, column: 3, scope: !1934)
!1936 = !DILocation(line: 1573, column: 5, scope: !1934)
!1937 = !DILocation(line: 1573, column: 11, scope: !1934)
!1938 = !DILocation(line: 1573, column: 18, scope: !1934)
!1939 = !DILocation(line: 1573, column: 3, scope: !1934)
!1940 = !DILocation(line: 1574, column: 48, scope: !1934)
!1941 = !DILocation(line: 1574, column: 54, scope: !1934)
!1942 = !DILocation(line: 1574, column: 3, scope: !1934)
!1943 = !DILocation(line: 1575, column: 2, scope: !1934)
!1944 = !DILocation(line: 1579, column: 9, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1921, file: !512, line: 1579, column: 6)
!1946 = !DILocation(line: 1579, column: 15, scope: !1945)
!1947 = !DILocation(line: 1579, column: 23, scope: !1945)
!1948 = !DILocation(line: 1579, column: 6, scope: !1945)
!1949 = !DILocation(line: 1579, column: 11, scope: !1950)
!1950 = !DILexicalBlockFile(scope: !1945, file: !512, discriminator: 1)
!1951 = !DILocation(line: 1579, column: 17, scope: !1950)
!1952 = !DILocation(line: 1579, column: 26, scope: !1950)
!1953 = !DILocation(line: 1579, column: 31, scope: !1950)
!1954 = !DILocation(line: 1579, column: 6, scope: !1950)
!1955 = !DILocation(line: 1579, column: 10, scope: !1956)
!1956 = !DILexicalBlockFile(scope: !1945, file: !512, discriminator: 2)
!1957 = !DILocation(line: 1579, column: 16, scope: !1956)
!1958 = !DILocation(line: 1579, column: 25, scope: !1956)
!1959 = !DILocation(line: 1579, column: 30, scope: !1956)
!1960 = !DILocation(line: 1579, column: 6, scope: !1956)
!1961 = !DILocation(line: 1580, column: 23, scope: !1945)
!1962 = !DILocation(line: 1580, column: 32, scope: !1945)
!1963 = !DILocation(line: 1580, column: 3, scope: !1945)
!1964 = !DILocation(line: 1583, column: 9, scope: !1965)
!1965 = distinct !DILexicalBlock(scope: !1921, file: !512, line: 1583, column: 6)
!1966 = !DILocation(line: 1583, column: 15, scope: !1965)
!1967 = !DILocation(line: 1583, column: 24, scope: !1965)
!1968 = !DILocation(line: 1583, column: 6, scope: !1965)
!1969 = !DILocation(line: 1583, column: 11, scope: !1970)
!1970 = !DILexicalBlockFile(scope: !1965, file: !512, discriminator: 1)
!1971 = !DILocation(line: 1583, column: 17, scope: !1970)
!1972 = !DILocation(line: 1583, column: 27, scope: !1970)
!1973 = !DILocation(line: 1583, column: 32, scope: !1970)
!1974 = !DILocation(line: 1583, column: 6, scope: !1970)
!1975 = !DILocation(line: 1583, column: 10, scope: !1976)
!1976 = !DILexicalBlockFile(scope: !1965, file: !512, discriminator: 2)
!1977 = !DILocation(line: 1583, column: 16, scope: !1976)
!1978 = !DILocation(line: 1583, column: 26, scope: !1976)
!1979 = !DILocation(line: 1583, column: 31, scope: !1976)
!1980 = !DILocation(line: 1583, column: 6, scope: !1976)
!1981 = !DILocation(line: 1584, column: 24, scope: !1965)
!1982 = !DILocation(line: 1584, column: 3, scope: !1965)
!1983 = !DILocation(line: 1588, column: 26, scope: !1921)
!1984 = !DILocation(line: 1588, column: 2, scope: !1921)
!1985 = !DILocation(line: 1602, column: 6, scope: !1986)
!1986 = distinct !DILexicalBlock(scope: !1921, file: !512, line: 1602, column: 6)
!1987 = !DILocation(line: 1602, column: 12, scope: !1986)
!1988 = !DILocation(line: 1603, column: 8, scope: !1986)
!1989 = !DILocation(line: 1603, column: 15, scope: !1986)
!1990 = !DILocation(line: 1603, column: 23, scope: !1986)
!1991 = !DILocation(line: 1604, column: 6, scope: !1986)
!1992 = !DILocation(line: 1604, column: 48, scope: !1986)
!1993 = !DILocation(line: 1605, column: 6, scope: !1986)
!1994 = !DILocation(line: 1602, column: 6, scope: !1995)
!1995 = !DILexicalBlockFile(scope: !1921, file: !512, discriminator: 1)
!1996 = !DILocation(line: 1606, column: 10, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1998, file: !512, line: 1606, column: 7)
!1998 = distinct !DILexicalBlock(scope: !1986, file: !512, line: 1605, column: 44)
!1999 = !DILocation(line: 1606, column: 16, scope: !1997)
!2000 = !DILocation(line: 1606, column: 21, scope: !1997)
!2001 = !DILocation(line: 1606, column: 7, scope: !1997)
!2002 = !DILocation(line: 1606, column: 12, scope: !2003)
!2003 = !DILexicalBlockFile(scope: !1997, file: !512, discriminator: 1)
!2004 = !DILocation(line: 1606, column: 18, scope: !2003)
!2005 = !DILocation(line: 1606, column: 24, scope: !2003)
!2006 = !DILocation(line: 1606, column: 29, scope: !2003)
!2007 = !DILocation(line: 1606, column: 7, scope: !2003)
!2008 = !DILocation(line: 1606, column: 11, scope: !2009)
!2009 = !DILexicalBlockFile(scope: !1997, file: !512, discriminator: 2)
!2010 = !DILocation(line: 1606, column: 17, scope: !2009)
!2011 = !DILocation(line: 1606, column: 23, scope: !2009)
!2012 = !DILocation(line: 1606, column: 28, scope: !2009)
!2013 = !DILocation(line: 1606, column: 7, scope: !2009)
!2014 = !DILocation(line: 1607, column: 26, scope: !1997)
!2015 = !DILocation(line: 1607, column: 45, scope: !1997)
!2016 = !DILocation(line: 1607, column: 4, scope: !1997)
!2017 = !DILocation(line: 1608, column: 10, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !1998, file: !512, line: 1608, column: 7)
!2019 = !DILocation(line: 1608, column: 16, scope: !2018)
!2020 = !DILocation(line: 1608, column: 22, scope: !2018)
!2021 = !DILocation(line: 1608, column: 7, scope: !2018)
!2022 = !DILocation(line: 1608, column: 12, scope: !2023)
!2023 = !DILexicalBlockFile(scope: !2018, file: !512, discriminator: 1)
!2024 = !DILocation(line: 1608, column: 18, scope: !2023)
!2025 = !DILocation(line: 1608, column: 25, scope: !2023)
!2026 = !DILocation(line: 1608, column: 30, scope: !2023)
!2027 = !DILocation(line: 1608, column: 7, scope: !2023)
!2028 = !DILocation(line: 1608, column: 11, scope: !2029)
!2029 = !DILexicalBlockFile(scope: !2018, file: !512, discriminator: 2)
!2030 = !DILocation(line: 1608, column: 17, scope: !2029)
!2031 = !DILocation(line: 1608, column: 24, scope: !2029)
!2032 = !DILocation(line: 1608, column: 29, scope: !2029)
!2033 = !DILocation(line: 1608, column: 7, scope: !2029)
!2034 = !DILocation(line: 1609, column: 26, scope: !2018)
!2035 = !DILocation(line: 1609, column: 45, scope: !2018)
!2036 = !DILocation(line: 1609, column: 4, scope: !2018)
!2037 = !DILocation(line: 1610, column: 27, scope: !1998)
!2038 = !DILocation(line: 1610, column: 36, scope: !1998)
!2039 = !DILocation(line: 1610, column: 3, scope: !1998)
!2040 = !DILocation(line: 1611, column: 3, scope: !1998)
!2041 = !DILocation(line: 1611, column: 9, scope: !1998)
!2042 = !DILocation(line: 1611, column: 16, scope: !1998)
!2043 = !DILocation(line: 1612, column: 2, scope: !1998)
!2044 = !DILocation(line: 1613, column: 1, scope: !1921)
!2045 = distinct !DISubprogram(name: "vrrp_handle_iprules", scope: !512, file: !512, line: 147, type: !2046, isLocal: true, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{null, !537, !300, !350}
!2048 = !DILocalVariable(name: "vrrp", arg: 1, scope: !2045, file: !512, line: 147, type: !537)
!2049 = !DILocation(line: 147, column: 30, scope: !2045)
!2050 = !DILocalVariable(name: "cmd", arg: 2, scope: !2045, file: !512, line: 147, type: !300)
!2051 = !DILocation(line: 147, column: 40, scope: !2045)
!2052 = !DILocalVariable(name: "force", arg: 3, scope: !2045, file: !512, line: 147, type: !350)
!2053 = !DILocation(line: 147, column: 49, scope: !2045)
!2054 = !DILocation(line: 149, column: 6, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2045, file: !512, line: 149, column: 6)
!2056 = !DILocation(line: 149, column: 6, scope: !2045)
!2057 = !DILocation(line: 151, column: 10, scope: !2055)
!2058 = !DILocation(line: 151, column: 16, scope: !2055)
!2059 = !DILocation(line: 152, column: 11, scope: !2055)
!2060 = !DILocation(line: 152, column: 15, scope: !2055)
!2061 = !DILocation(line: 152, column: 10, scope: !2055)
!2062 = !DILocation(line: 150, column: 3, scope: !2055)
!2063 = !DILocation(line: 153, column: 19, scope: !2045)
!2064 = !DILocation(line: 153, column: 25, scope: !2045)
!2065 = !DILocation(line: 153, column: 33, scope: !2045)
!2066 = !DILocation(line: 153, column: 38, scope: !2045)
!2067 = !DILocation(line: 153, column: 2, scope: !2045)
!2068 = !DILocation(line: 154, column: 1, scope: !2045)
!2069 = distinct !DISubprogram(name: "vrrp_handle_iproutes", scope: !512, file: !512, line: 136, type: !2070, isLocal: true, isDefinition: true, scopeLine: 137, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{null, !537, !300}
!2072 = !DILocalVariable(name: "vrrp", arg: 1, scope: !2069, file: !512, line: 136, type: !537)
!2073 = !DILocation(line: 136, column: 31, scope: !2069)
!2074 = !DILocalVariable(name: "cmd", arg: 2, scope: !2069, file: !512, line: 136, type: !300)
!2075 = !DILocation(line: 136, column: 41, scope: !2069)
!2076 = !DILocation(line: 138, column: 6, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2069, file: !512, line: 138, column: 6)
!2078 = !DILocation(line: 138, column: 6, scope: !2069)
!2079 = !DILocation(line: 140, column: 10, scope: !2077)
!2080 = !DILocation(line: 140, column: 16, scope: !2077)
!2081 = !DILocation(line: 141, column: 11, scope: !2077)
!2082 = !DILocation(line: 141, column: 15, scope: !2077)
!2083 = !DILocation(line: 141, column: 10, scope: !2077)
!2084 = !DILocation(line: 139, column: 3, scope: !2077)
!2085 = !DILocation(line: 142, column: 17, scope: !2069)
!2086 = !DILocation(line: 142, column: 23, scope: !2069)
!2087 = !DILocation(line: 142, column: 32, scope: !2069)
!2088 = !DILocation(line: 142, column: 2, scope: !2069)
!2089 = !DILocation(line: 143, column: 1, scope: !2069)
!2090 = distinct !DISubprogram(name: "vrrp_remove_delayed_arp", scope: !512, file: !512, line: 1462, type: !1810, isLocal: true, isDefinition: true, scopeLine: 1463, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!2091 = !DILocalVariable(name: "vrrp", arg: 1, scope: !2090, file: !512, line: 1462, type: !537)
!2092 = !DILocation(line: 1462, column: 33, scope: !2090)
!2093 = !DILocalVariable(name: "ipaddress", scope: !2090, file: !512, line: 1464, type: !311)
!2094 = !DILocation(line: 1464, column: 16, scope: !2090)
!2095 = !DILocalVariable(name: "e", scope: !2090, file: !512, line: 1465, type: !984)
!2096 = !DILocation(line: 1465, column: 10, scope: !2090)
!2097 = !DILocation(line: 1467, column: 9, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !2090, file: !512, line: 1467, column: 6)
!2099 = !DILocation(line: 1467, column: 15, scope: !2098)
!2100 = !DILocation(line: 1467, column: 20, scope: !2098)
!2101 = !DILocation(line: 1467, column: 6, scope: !2098)
!2102 = !DILocation(line: 1467, column: 11, scope: !2103)
!2103 = !DILexicalBlockFile(scope: !2098, file: !512, discriminator: 1)
!2104 = !DILocation(line: 1467, column: 17, scope: !2103)
!2105 = !DILocation(line: 1467, column: 23, scope: !2103)
!2106 = !DILocation(line: 1467, column: 28, scope: !2103)
!2107 = !DILocation(line: 1467, column: 6, scope: !2103)
!2108 = !DILocation(line: 1467, column: 10, scope: !2109)
!2109 = !DILexicalBlockFile(scope: !2098, file: !512, discriminator: 2)
!2110 = !DILocation(line: 1467, column: 16, scope: !2109)
!2111 = !DILocation(line: 1467, column: 22, scope: !2109)
!2112 = !DILocation(line: 1467, column: 27, scope: !2109)
!2113 = !DILocation(line: 1467, column: 6, scope: !2109)
!2114 = !DILocation(line: 1468, column: 15, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2116, file: !512, line: 1468, column: 3)
!2116 = distinct !DILexicalBlock(scope: !2098, file: !512, line: 1467, column: 10)
!2117 = !DILocation(line: 1468, column: 21, scope: !2115)
!2118 = !DILocation(line: 1468, column: 14, scope: !2115)
!2119 = !DILocation(line: 1468, column: 13, scope: !2115)
!2120 = !DILocation(line: 1468, column: 13, scope: !2121)
!2121 = !DILexicalBlockFile(scope: !2115, file: !512, discriminator: 1)
!2122 = !DILocation(line: 1468, column: 14, scope: !2123)
!2123 = !DILexicalBlockFile(scope: !2115, file: !512, discriminator: 2)
!2124 = !DILocation(line: 1468, column: 20, scope: !2123)
!2125 = !DILocation(line: 1468, column: 26, scope: !2123)
!2126 = !DILocation(line: 1468, column: 13, scope: !2123)
!2127 = !DILocation(line: 1468, column: 13, scope: !2128)
!2128 = !DILexicalBlockFile(scope: !2115, file: !512, discriminator: 3)
!2129 = !DILocation(line: 1468, column: 10, scope: !2128)
!2130 = !DILocation(line: 1468, column: 8, scope: !2128)
!2131 = !DILocation(line: 1468, column: 33, scope: !2132)
!2132 = !DILexicalBlockFile(scope: !2133, file: !512, discriminator: 4)
!2133 = distinct !DILexicalBlock(scope: !2115, file: !512, line: 1468, column: 3)
!2134 = !DILocation(line: 1468, column: 3, scope: !2132)
!2135 = !DILocation(line: 1469, column: 18, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2133, file: !512, line: 1468, column: 55)
!2137 = !DILocation(line: 1469, column: 22, scope: !2136)
!2138 = !DILocation(line: 1469, column: 16, scope: !2136)
!2139 = !DILocation(line: 1469, column: 14, scope: !2136)
!2140 = !DILocation(line: 1470, column: 4, scope: !2136)
!2141 = !DILocation(line: 1470, column: 15, scope: !2136)
!2142 = !DILocation(line: 1470, column: 32, scope: !2136)
!2143 = !DILocation(line: 1471, column: 3, scope: !2136)
!2144 = !DILocation(line: 1468, column: 44, scope: !2145)
!2145 = !DILexicalBlockFile(scope: !2133, file: !512, discriminator: 5)
!2146 = !DILocation(line: 1468, column: 48, scope: !2145)
!2147 = !DILocation(line: 1468, column: 41, scope: !2145)
!2148 = !DILocation(line: 1468, column: 3, scope: !2145)
!2149 = distinct !{!2149, !2150}
!2150 = !DILocation(line: 1468, column: 3, scope: !2116)
!2151 = !DILocation(line: 1472, column: 2, scope: !2116)
!2152 = !DILocation(line: 1474, column: 9, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2090, file: !512, line: 1474, column: 6)
!2154 = !DILocation(line: 1474, column: 15, scope: !2153)
!2155 = !DILocation(line: 1474, column: 21, scope: !2153)
!2156 = !DILocation(line: 1474, column: 6, scope: !2153)
!2157 = !DILocation(line: 1474, column: 11, scope: !2158)
!2158 = !DILexicalBlockFile(scope: !2153, file: !512, discriminator: 1)
!2159 = !DILocation(line: 1474, column: 17, scope: !2158)
!2160 = !DILocation(line: 1474, column: 24, scope: !2158)
!2161 = !DILocation(line: 1474, column: 29, scope: !2158)
!2162 = !DILocation(line: 1474, column: 6, scope: !2158)
!2163 = !DILocation(line: 1474, column: 10, scope: !2164)
!2164 = !DILexicalBlockFile(scope: !2153, file: !512, discriminator: 2)
!2165 = !DILocation(line: 1474, column: 16, scope: !2164)
!2166 = !DILocation(line: 1474, column: 23, scope: !2164)
!2167 = !DILocation(line: 1474, column: 28, scope: !2164)
!2168 = !DILocation(line: 1474, column: 6, scope: !2164)
!2169 = !DILocation(line: 1475, column: 15, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2171, file: !512, line: 1475, column: 3)
!2171 = distinct !DILexicalBlock(scope: !2153, file: !512, line: 1474, column: 10)
!2172 = !DILocation(line: 1475, column: 21, scope: !2170)
!2173 = !DILocation(line: 1475, column: 14, scope: !2170)
!2174 = !DILocation(line: 1475, column: 13, scope: !2170)
!2175 = !DILocation(line: 1475, column: 13, scope: !2176)
!2176 = !DILexicalBlockFile(scope: !2170, file: !512, discriminator: 1)
!2177 = !DILocation(line: 1475, column: 14, scope: !2178)
!2178 = !DILexicalBlockFile(scope: !2170, file: !512, discriminator: 2)
!2179 = !DILocation(line: 1475, column: 20, scope: !2178)
!2180 = !DILocation(line: 1475, column: 27, scope: !2178)
!2181 = !DILocation(line: 1475, column: 13, scope: !2178)
!2182 = !DILocation(line: 1475, column: 13, scope: !2183)
!2183 = !DILexicalBlockFile(scope: !2170, file: !512, discriminator: 3)
!2184 = !DILocation(line: 1475, column: 10, scope: !2183)
!2185 = !DILocation(line: 1475, column: 8, scope: !2183)
!2186 = !DILocation(line: 1475, column: 34, scope: !2187)
!2187 = !DILexicalBlockFile(scope: !2188, file: !512, discriminator: 4)
!2188 = distinct !DILexicalBlock(scope: !2170, file: !512, line: 1475, column: 3)
!2189 = !DILocation(line: 1475, column: 3, scope: !2187)
!2190 = !DILocation(line: 1476, column: 18, scope: !2191)
!2191 = distinct !DILexicalBlock(scope: !2188, file: !512, line: 1475, column: 56)
!2192 = !DILocation(line: 1476, column: 22, scope: !2191)
!2193 = !DILocation(line: 1476, column: 16, scope: !2191)
!2194 = !DILocation(line: 1476, column: 14, scope: !2191)
!2195 = !DILocation(line: 1477, column: 4, scope: !2191)
!2196 = !DILocation(line: 1477, column: 15, scope: !2191)
!2197 = !DILocation(line: 1477, column: 32, scope: !2191)
!2198 = !DILocation(line: 1478, column: 3, scope: !2191)
!2199 = !DILocation(line: 1475, column: 45, scope: !2200)
!2200 = !DILexicalBlockFile(scope: !2188, file: !512, discriminator: 5)
!2201 = !DILocation(line: 1475, column: 49, scope: !2200)
!2202 = !DILocation(line: 1475, column: 42, scope: !2200)
!2203 = !DILocation(line: 1475, column: 3, scope: !2200)
!2204 = distinct !{!2204, !2205}
!2205 = !DILocation(line: 1475, column: 3, scope: !2171)
!2206 = !DILocation(line: 1479, column: 2, scope: !2171)
!2207 = !DILocation(line: 1480, column: 2, scope: !2090)
!2208 = !DILocation(line: 1480, column: 8, scope: !2090)
!2209 = !DILocation(line: 1480, column: 21, scope: !2090)
!2210 = !DILocation(line: 1481, column: 2, scope: !2090)
!2211 = !DILocation(line: 1481, column: 8, scope: !2090)
!2212 = !DILocation(line: 1481, column: 20, scope: !2090)
!2213 = !DILocation(line: 1482, column: 1, scope: !2090)
!2214 = distinct !DISubprogram(name: "__test_bit", scope: !81, file: !81, line: 47, type: !2215, isLocal: true, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!350, !189, !2217}
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64, align: 64)
!2218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !294)
!2219 = !DILocalVariable(name: "idx", arg: 1, scope: !2214, file: !81, line: 47, type: !189)
!2220 = !DILocation(line: 47, column: 39, scope: !2214)
!2221 = !DILocalVariable(name: "bmap", arg: 2, scope: !2214, file: !81, line: 47, type: !2217)
!2222 = !DILocation(line: 47, column: 65, scope: !2214)
!2223 = !DILocation(line: 49, column: 19, scope: !2214)
!2224 = !DILocation(line: 49, column: 18, scope: !2214)
!2225 = !DILocation(line: 49, column: 24, scope: !2214)
!2226 = !DILocation(line: 49, column: 12, scope: !2214)
!2227 = !DILocation(line: 49, column: 68, scope: !2214)
!2228 = !DILocation(line: 49, column: 67, scope: !2214)
!2229 = !DILocation(line: 49, column: 73, scope: !2214)
!2230 = !DILocation(line: 49, column: 63, scope: !2214)
!2231 = !DILocation(line: 49, column: 56, scope: !2214)
!2232 = !DILocation(line: 49, column: 10, scope: !2214)
!2233 = !DILocation(line: 49, column: 9, scope: !2214)
!2234 = !DILocation(line: 49, column: 2, scope: !2214)
!2235 = distinct !DISubprogram(name: "vrrp_handle_ipaddress", scope: !512, file: !512, line: 124, type: !2236, isLocal: true, isDefinition: true, scopeLine: 125, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!350, !537, !300, !300, !350}
!2238 = !DILocalVariable(name: "vrrp", arg: 1, scope: !2235, file: !512, line: 124, type: !537)
!2239 = !DILocation(line: 124, column: 32, scope: !2235)
!2240 = !DILocalVariable(name: "cmd", arg: 2, scope: !2235, file: !512, line: 124, type: !300)
!2241 = !DILocation(line: 124, column: 42, scope: !2235)
!2242 = !DILocalVariable(name: "type", arg: 3, scope: !2235, file: !512, line: 124, type: !300)
!2243 = !DILocation(line: 124, column: 51, scope: !2235)
!2244 = !DILocalVariable(name: "force", arg: 4, scope: !2235, file: !512, line: 124, type: !350)
!2245 = !DILocation(line: 124, column: 61, scope: !2235)
!2246 = !DILocation(line: 126, column: 6, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2235, file: !512, line: 126, column: 6)
!2248 = !DILocation(line: 126, column: 6, scope: !2235)
!2249 = !DILocation(line: 127, column: 38, scope: !2247)
!2250 = !DILocation(line: 127, column: 44, scope: !2247)
!2251 = !DILocation(line: 128, column: 11, scope: !2247)
!2252 = !DILocation(line: 128, column: 15, scope: !2247)
!2253 = !DILocation(line: 128, column: 10, scope: !2247)
!2254 = !DILocation(line: 129, column: 11, scope: !2247)
!2255 = !DILocation(line: 129, column: 16, scope: !2247)
!2256 = !DILocation(line: 129, column: 10, scope: !2247)
!2257 = !DILocation(line: 127, column: 3, scope: !2247)
!2258 = !DILocation(line: 130, column: 25, scope: !2235)
!2259 = !DILocation(line: 130, column: 30, scope: !2235)
!2260 = !DILocation(line: 130, column: 24, scope: !2235)
!2261 = !DILocation(line: 130, column: 45, scope: !2262)
!2262 = !DILexicalBlockFile(scope: !2235, file: !512, discriminator: 1)
!2263 = !DILocation(line: 130, column: 51, scope: !2262)
!2264 = !DILocation(line: 130, column: 24, scope: !2262)
!2265 = !DILocation(line: 130, column: 57, scope: !2266)
!2266 = !DILexicalBlockFile(scope: !2235, file: !512, discriminator: 2)
!2267 = !DILocation(line: 130, column: 63, scope: !2266)
!2268 = !DILocation(line: 130, column: 24, scope: !2266)
!2269 = !DILocation(line: 130, column: 24, scope: !2270)
!2270 = !DILexicalBlockFile(scope: !2235, file: !512, discriminator: 3)
!2271 = !DILocation(line: 130, column: 69, scope: !2270)
!2272 = !DILocation(line: 130, column: 74, scope: !2270)
!2273 = !DILocation(line: 130, column: 9, scope: !2270)
!2274 = !DILocation(line: 130, column: 2, scope: !2270)
!2275 = distinct !DISubprogram(name: "vrrp_handle_accept_mode", scope: !512, file: !512, line: 159, type: !2046, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!2276 = !DILocalVariable(name: "vrrp", arg: 1, scope: !2275, file: !512, line: 159, type: !537)
!2277 = !DILocation(line: 159, column: 33, scope: !2275)
!2278 = !DILocalVariable(name: "cmd", arg: 2, scope: !2275, file: !512, line: 159, type: !300)
!2279 = !DILocation(line: 159, column: 43, scope: !2275)
!2280 = !DILocalVariable(name: "force", arg: 3, scope: !2275, file: !512, line: 159, type: !350)
!2281 = !DILocation(line: 159, column: 52, scope: !2275)
!2282 = !DILocalVariable(name: "tries", scope: !2275, file: !512, line: 162, type: !300)
!2283 = !DILocation(line: 162, column: 6, scope: !2275)
!2284 = !DILocalVariable(name: "res", scope: !2275, file: !512, line: 163, type: !300)
!2285 = !DILocation(line: 163, column: 6, scope: !2275)
!2286 = !DILocalVariable(name: "h", scope: !2275, file: !512, line: 165, type: !2287)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64, align: 64)
!2288 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipt_handle", file: !313, line: 104, flags: DIFlagFwdDecl)
!2289 = !DILocation(line: 165, column: 21, scope: !2275)
!2290 = !DILocation(line: 167, column: 6, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2275, file: !512, line: 167, column: 6)
!2292 = !DILocation(line: 167, column: 12, scope: !2291)
!2293 = !DILocation(line: 167, column: 26, scope: !2291)
!2294 = !DILocation(line: 167, column: 33, scope: !2291)
!2295 = !DILocation(line: 167, column: 37, scope: !2296)
!2296 = !DILexicalBlockFile(scope: !2291, file: !512, discriminator: 1)
!2297 = !DILocation(line: 167, column: 43, scope: !2296)
!2298 = !DILocation(line: 167, column: 6, scope: !2296)
!2299 = !DILocation(line: 168, column: 7, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2301, file: !512, line: 168, column: 7)
!2301 = distinct !DILexicalBlock(scope: !2291, file: !512, line: 167, column: 51)
!2302 = !DILocation(line: 168, column: 7, scope: !2301)
!2303 = !DILocation(line: 169, column: 39, scope: !2300)
!2304 = !DILocation(line: 169, column: 45, scope: !2300)
!2305 = !DILocation(line: 170, column: 6, scope: !2300)
!2306 = !DILocation(line: 170, column: 10, scope: !2300)
!2307 = !DILocation(line: 170, column: 5, scope: !2300)
!2308 = !DILocation(line: 169, column: 4, scope: !2300)
!2309 = !DILocation(line: 173, column: 3, scope: !2301)
!2310 = distinct !{!2310, !2309}
!2311 = !DILocation(line: 178, column: 9, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2301, file: !512, line: 173, column: 6)
!2313 = !DILocation(line: 178, column: 7, scope: !2312)
!2314 = !DILocation(line: 181, column: 11, scope: !2315)
!2315 = distinct !DILexicalBlock(scope: !2312, file: !512, line: 181, column: 8)
!2316 = !DILocation(line: 181, column: 17, scope: !2315)
!2317 = !DILocation(line: 181, column: 22, scope: !2315)
!2318 = !DILocation(line: 181, column: 8, scope: !2315)
!2319 = !DILocation(line: 181, column: 13, scope: !2320)
!2320 = !DILexicalBlockFile(scope: !2315, file: !512, discriminator: 1)
!2321 = !DILocation(line: 181, column: 19, scope: !2320)
!2322 = !DILocation(line: 181, column: 25, scope: !2320)
!2323 = !DILocation(line: 181, column: 30, scope: !2320)
!2324 = !DILocation(line: 181, column: 8, scope: !2320)
!2325 = !DILocation(line: 181, column: 12, scope: !2326)
!2326 = !DILexicalBlockFile(scope: !2315, file: !512, discriminator: 2)
!2327 = !DILocation(line: 181, column: 18, scope: !2326)
!2328 = !DILocation(line: 181, column: 24, scope: !2326)
!2329 = !DILocation(line: 181, column: 29, scope: !2326)
!2330 = !DILocation(line: 181, column: 8, scope: !2326)
!2331 = !DILocation(line: 182, column: 35, scope: !2315)
!2332 = !DILocation(line: 182, column: 38, scope: !2315)
!2333 = !DILocation(line: 182, column: 44, scope: !2315)
!2334 = !DILocation(line: 182, column: 49, scope: !2315)
!2335 = !DILocation(line: 182, column: 54, scope: !2315)
!2336 = !DILocation(line: 182, column: 5, scope: !2315)
!2337 = !DILocation(line: 183, column: 11, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2312, file: !512, line: 183, column: 8)
!2339 = !DILocation(line: 183, column: 17, scope: !2338)
!2340 = !DILocation(line: 183, column: 23, scope: !2338)
!2341 = !DILocation(line: 183, column: 8, scope: !2338)
!2342 = !DILocation(line: 183, column: 13, scope: !2343)
!2343 = !DILexicalBlockFile(scope: !2338, file: !512, discriminator: 1)
!2344 = !DILocation(line: 183, column: 19, scope: !2343)
!2345 = !DILocation(line: 183, column: 26, scope: !2343)
!2346 = !DILocation(line: 183, column: 31, scope: !2343)
!2347 = !DILocation(line: 183, column: 8, scope: !2343)
!2348 = !DILocation(line: 183, column: 12, scope: !2349)
!2349 = !DILexicalBlockFile(scope: !2338, file: !512, discriminator: 2)
!2350 = !DILocation(line: 183, column: 18, scope: !2349)
!2351 = !DILocation(line: 183, column: 25, scope: !2349)
!2352 = !DILocation(line: 183, column: 30, scope: !2349)
!2353 = !DILocation(line: 183, column: 8, scope: !2349)
!2354 = !DILocation(line: 184, column: 35, scope: !2338)
!2355 = !DILocation(line: 184, column: 38, scope: !2338)
!2356 = !DILocation(line: 184, column: 44, scope: !2338)
!2357 = !DILocation(line: 184, column: 50, scope: !2338)
!2358 = !DILocation(line: 184, column: 55, scope: !2338)
!2359 = !DILocation(line: 184, column: 5, scope: !2338)
!2360 = !DILocation(line: 189, column: 26, scope: !2312)
!2361 = !DILocation(line: 189, column: 11, scope: !2312)
!2362 = !DILocation(line: 189, column: 9, scope: !2312)
!2363 = !DILocation(line: 190, column: 3, scope: !2312)
!2364 = !DILocation(line: 190, column: 12, scope: !2365)
!2365 = !DILexicalBlockFile(scope: !2301, file: !512, discriminator: 1)
!2366 = !DILocation(line: 190, column: 16, scope: !2365)
!2367 = !DILocation(line: 190, column: 25, scope: !2365)
!2368 = !DILocation(line: 190, column: 28, scope: !2369)
!2369 = !DILexicalBlockFile(scope: !2301, file: !512, discriminator: 2)
!2370 = !DILocation(line: 190, column: 36, scope: !2369)
!2371 = !DILocation(line: 190, column: 3, scope: !2372)
!2372 = !DILexicalBlockFile(scope: !2312, file: !512, discriminator: 3)
!2373 = !DILocation(line: 192, column: 30, scope: !2301)
!2374 = !DILocation(line: 192, column: 34, scope: !2301)
!2375 = !DILocation(line: 192, column: 3, scope: !2301)
!2376 = !DILocation(line: 192, column: 9, scope: !2301)
!2377 = !DILocation(line: 192, column: 27, scope: !2301)
!2378 = !DILocation(line: 193, column: 2, scope: !2301)
!2379 = !DILocation(line: 194, column: 1, scope: !2275)
!2380 = distinct !DISubprogram(name: "vrrp_state_leave_master", scope: !512, file: !512, line: 1616, type: !2381, isLocal: false, isDefinition: true, scopeLine: 1617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{null, !537, !350}
!2383 = !DILocalVariable(name: "vrrp", arg: 1, scope: !2380, file: !512, line: 1616, type: !537)
!2384 = !DILocation(line: 1616, column: 34, scope: !2380)
!2385 = !DILocalVariable(name: "advF", arg: 2, scope: !2380, file: !512, line: 1616, type: !350)
!2386 = !DILocation(line: 1616, column: 44, scope: !2380)
!2387 = !DILocation(line: 1619, column: 8, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2380, file: !512, line: 1619, column: 6)
!2389 = !DILocation(line: 1619, column: 15, scope: !2388)
!2390 = !DILocation(line: 1619, column: 6, scope: !2380)
!2391 = !DILocation(line: 1621, column: 7, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2393, file: !512, line: 1621, column: 7)
!2393 = distinct !DILexicalBlock(scope: !2388, file: !512, line: 1619, column: 24)
!2394 = !DILocation(line: 1621, column: 20, scope: !2392)
!2395 = !DILocation(line: 1621, column: 30, scope: !2392)
!2396 = !DILocation(line: 1621, column: 38, scope: !2392)
!2397 = !DILocation(line: 1621, column: 35, scope: !2392)
!2398 = !DILocation(line: 1621, column: 7, scope: !2393)
!2399 = !DILocation(line: 1622, column: 23, scope: !2392)
!2400 = !DILocation(line: 1622, column: 36, scope: !2392)
!2401 = !DILocation(line: 1622, column: 4, scope: !2392)
!2402 = !DILocation(line: 1623, column: 2, scope: !2393)
!2403 = !DILocation(line: 1627, column: 6, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2380, file: !512, line: 1627, column: 6)
!2405 = !DILocation(line: 1627, column: 12, scope: !2404)
!2406 = !DILocation(line: 1627, column: 22, scope: !2404)
!2407 = !DILocation(line: 1627, column: 6, scope: !2380)
!2408 = !DILocation(line: 1628, column: 54, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2404, file: !512, line: 1627, column: 28)
!2410 = !DILocation(line: 1628, column: 60, scope: !2409)
!2411 = !DILocation(line: 1628, column: 3, scope: !2409)
!2412 = !DILocation(line: 1629, column: 3, scope: !2409)
!2413 = !DILocation(line: 1629, column: 9, scope: !2409)
!2414 = !DILocation(line: 1629, column: 22, scope: !2409)
!2415 = !DILocation(line: 1629, column: 29, scope: !2409)
!2416 = !DILocation(line: 1631, column: 28, scope: !2409)
!2417 = !DILocation(line: 1631, column: 34, scope: !2409)
!2418 = !DILocation(line: 1631, column: 3, scope: !2409)
!2419 = !DILocation(line: 1631, column: 9, scope: !2409)
!2420 = !DILocation(line: 1631, column: 26, scope: !2409)
!2421 = !DILocation(line: 1632, column: 2, scope: !2409)
!2422 = !DILocation(line: 1633, column: 11, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2404, file: !512, line: 1633, column: 11)
!2424 = !DILocation(line: 1633, column: 17, scope: !2423)
!2425 = !DILocation(line: 1633, column: 27, scope: !2423)
!2426 = !DILocation(line: 1633, column: 11, scope: !2404)
!2427 = !DILocation(line: 1634, column: 53, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2423, file: !512, line: 1633, column: 33)
!2429 = !DILocation(line: 1634, column: 59, scope: !2428)
!2430 = !DILocation(line: 1634, column: 3, scope: !2428)
!2431 = !DILocation(line: 1635, column: 17, scope: !2428)
!2432 = !DILocation(line: 1635, column: 3, scope: !2428)
!2433 = !DILocation(line: 1636, column: 2, scope: !2428)
!2434 = !DILocation(line: 1638, column: 89, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2423, file: !512, line: 1637, column: 7)
!2436 = !DILocation(line: 1638, column: 95, scope: !2435)
!2437 = !DILocation(line: 1638, column: 102, scope: !2435)
!2438 = !DILocation(line: 1638, column: 108, scope: !2435)
!2439 = !DILocation(line: 1638, column: 3, scope: !2435)
!2440 = !DILocation(line: 1639, column: 3, scope: !2435)
!2441 = !DILocation(line: 1642, column: 25, scope: !2380)
!2442 = !DILocation(line: 1642, column: 31, scope: !2380)
!2443 = !DILocation(line: 1642, column: 2, scope: !2380)
!2444 = !DILocation(line: 1643, column: 16, scope: !2380)
!2445 = !DILocation(line: 1643, column: 22, scope: !2380)
!2446 = !DILocation(line: 1643, column: 2, scope: !2380)
!2447 = !DILocation(line: 1643, column: 8, scope: !2380)
!2448 = !DILocation(line: 1643, column: 14, scope: !2380)
!2449 = !DILocation(line: 1645, column: 25, scope: !2380)
!2450 = !DILocation(line: 1645, column: 2, scope: !2380)
!2451 = !DILocation(line: 1648, column: 28, scope: !2380)
!2452 = !DILocation(line: 1648, column: 34, scope: !2380)
!2453 = !DILocation(line: 1648, column: 26, scope: !2380)
!2454 = !DILocation(line: 1648, column: 55, scope: !2380)
!2455 = !DILocation(line: 1648, column: 62, scope: !2380)
!2456 = !DILocation(line: 1648, column: 70, scope: !2380)
!2457 = !DILocation(line: 1648, column: 54, scope: !2380)
!2458 = !DILocation(line: 1648, column: 86, scope: !2459)
!2459 = !DILexicalBlockFile(scope: !2380, file: !512, discriminator: 1)
!2460 = !DILocation(line: 1648, column: 93, scope: !2459)
!2461 = !DILocation(line: 1648, column: 85, scope: !2459)
!2462 = !DILocation(line: 1648, column: 84, scope: !2459)
!2463 = !DILocation(line: 1648, column: 117, scope: !2459)
!2464 = !DILocation(line: 1648, column: 124, scope: !2459)
!2465 = !DILocation(line: 1648, column: 141, scope: !2459)
!2466 = !DILocation(line: 1648, column: 113, scope: !2459)
!2467 = !DILocation(line: 1648, column: 151, scope: !2459)
!2468 = !DILocation(line: 1648, column: 159, scope: !2459)
!2469 = !DILocation(line: 1648, column: 54, scope: !2459)
!2470 = !DILocation(line: 1648, column: 176, scope: !2471)
!2471 = !DILexicalBlockFile(scope: !2380, file: !512, discriminator: 2)
!2472 = !DILocation(line: 1648, column: 183, scope: !2471)
!2473 = !DILocation(line: 1648, column: 175, scope: !2471)
!2474 = !DILocation(line: 1648, column: 174, scope: !2471)
!2475 = !DILocation(line: 1648, column: 203, scope: !2471)
!2476 = !DILocation(line: 1648, column: 213, scope: !2471)
!2477 = !DILocation(line: 1648, column: 54, scope: !2471)
!2478 = !DILocation(line: 1648, column: 54, scope: !2479)
!2479 = !DILexicalBlockFile(scope: !2380, file: !512, discriminator: 3)
!2480 = !DILocation(line: 1648, column: 51, scope: !2479)
!2481 = !DILocation(line: 1648, column: 2, scope: !2479)
!2482 = !DILocation(line: 1648, column: 8, scope: !2479)
!2483 = !DILocation(line: 1648, column: 22, scope: !2479)
!2484 = !DILocation(line: 1649, column: 27, scope: !2380)
!2485 = !DILocation(line: 1649, column: 2, scope: !2380)
!2486 = !DILocation(line: 1650, column: 4, scope: !2380)
!2487 = !DILocation(line: 1650, column: 10, scope: !2380)
!2488 = !DILocation(line: 1650, column: 17, scope: !2380)
!2489 = !DILocation(line: 1650, column: 2, scope: !2380)
!2490 = !DILocation(line: 1651, column: 2, scope: !2380)
!2491 = !DILocation(line: 1651, column: 8, scope: !2380)
!2492 = !DILocation(line: 1651, column: 26, scope: !2380)
!2493 = !DILocation(line: 1651, column: 26, scope: !2459)
!2494 = !DILocation(line: 1652, column: 1, scope: !2380)
!2495 = !DILocation(line: 1652, column: 1, scope: !2459)
!2496 = distinct !DISubprogram(name: "vrrp_state_leave_fault", scope: !512, file: !512, line: 1655, type: !1810, isLocal: false, isDefinition: true, scopeLine: 1656, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!2497 = !DILocalVariable(name: "vrrp", arg: 1, scope: !2496, file: !512, line: 1655, type: !537)
!2498 = !DILocation(line: 1655, column: 33, scope: !2496)
!2499 = !DILocation(line: 1658, column: 6, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2496, file: !512, line: 1658, column: 6)
!2501 = !DILocation(line: 1658, column: 12, scope: !2500)
!2502 = !DILocation(line: 1658, column: 22, scope: !2500)
!2503 = !DILocation(line: 1658, column: 6, scope: !2496)
!2504 = !DILocation(line: 1659, column: 26, scope: !2500)
!2505 = !DILocation(line: 1659, column: 3, scope: !2500)
!2506 = !DILocation(line: 1661, column: 50, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2500, file: !512, line: 1660, column: 7)
!2508 = !DILocation(line: 1661, column: 56, scope: !2507)
!2509 = !DILocation(line: 1661, column: 63, scope: !2507)
!2510 = !DILocation(line: 1661, column: 69, scope: !2507)
!2511 = !DILocation(line: 1661, column: 79, scope: !2507)
!2512 = !DILocation(line: 1661, column: 3, scope: !2507)
!2513 = !DILocation(line: 1662, column: 7, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2507, file: !512, line: 1662, column: 7)
!2515 = !DILocation(line: 1662, column: 13, scope: !2514)
!2516 = !DILocation(line: 1662, column: 23, scope: !2514)
!2517 = !DILocation(line: 1662, column: 28, scope: !2514)
!2518 = !DILocation(line: 1662, column: 31, scope: !2519)
!2519 = !DILexicalBlockFile(scope: !2514, file: !512, discriminator: 1)
!2520 = !DILocation(line: 1662, column: 37, scope: !2519)
!2521 = !DILocation(line: 1662, column: 43, scope: !2519)
!2522 = !DILocation(line: 1662, column: 7, scope: !2519)
!2523 = !DILocation(line: 1663, column: 18, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2514, file: !512, line: 1662, column: 49)
!2525 = !DILocation(line: 1663, column: 4, scope: !2524)
!2526 = !DILocation(line: 1664, column: 27, scope: !2524)
!2527 = !DILocation(line: 1664, column: 4, scope: !2524)
!2528 = !DILocation(line: 1665, column: 3, scope: !2524)
!2529 = !DILocation(line: 1666, column: 17, scope: !2507)
!2530 = !DILocation(line: 1666, column: 23, scope: !2507)
!2531 = !DILocation(line: 1666, column: 3, scope: !2507)
!2532 = !DILocation(line: 1666, column: 9, scope: !2507)
!2533 = !DILocation(line: 1666, column: 15, scope: !2507)
!2534 = !DILocation(line: 1667, column: 26, scope: !2507)
!2535 = !DILocation(line: 1667, column: 3, scope: !2507)
!2536 = !DILocation(line: 1669, column: 7, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2507, file: !512, line: 1669, column: 7)
!2538 = !DILocation(line: 1669, column: 13, scope: !2537)
!2539 = !DILocation(line: 1669, column: 19, scope: !2537)
!2540 = !DILocation(line: 1669, column: 7, scope: !2507)
!2541 = !DILocation(line: 1670, column: 4, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2537, file: !512, line: 1669, column: 25)
!2543 = !DILocation(line: 1670, column: 10, scope: !2542)
!2544 = !DILocation(line: 1670, column: 23, scope: !2542)
!2545 = !DILocation(line: 1670, column: 30, scope: !2542)
!2546 = !DILocation(line: 1671, column: 29, scope: !2542)
!2547 = !DILocation(line: 1671, column: 35, scope: !2542)
!2548 = !DILocation(line: 1671, column: 4, scope: !2542)
!2549 = !DILocation(line: 1671, column: 10, scope: !2542)
!2550 = !DILocation(line: 1671, column: 27, scope: !2542)
!2551 = !DILocation(line: 1672, column: 3, scope: !2542)
!2552 = !DILocation(line: 1676, column: 27, scope: !2496)
!2553 = !DILocation(line: 1676, column: 33, scope: !2496)
!2554 = !DILocation(line: 1676, column: 2, scope: !2496)
!2555 = !DILocation(line: 1676, column: 8, scope: !2496)
!2556 = !DILocation(line: 1676, column: 25, scope: !2496)
!2557 = !DILocation(line: 1677, column: 28, scope: !2496)
!2558 = !DILocation(line: 1677, column: 34, scope: !2496)
!2559 = !DILocation(line: 1677, column: 26, scope: !2496)
!2560 = !DILocation(line: 1677, column: 55, scope: !2496)
!2561 = !DILocation(line: 1677, column: 62, scope: !2496)
!2562 = !DILocation(line: 1677, column: 70, scope: !2496)
!2563 = !DILocation(line: 1677, column: 54, scope: !2496)
!2564 = !DILocation(line: 1677, column: 86, scope: !2565)
!2565 = !DILexicalBlockFile(scope: !2496, file: !512, discriminator: 1)
!2566 = !DILocation(line: 1677, column: 93, scope: !2565)
!2567 = !DILocation(line: 1677, column: 85, scope: !2565)
!2568 = !DILocation(line: 1677, column: 84, scope: !2565)
!2569 = !DILocation(line: 1677, column: 117, scope: !2565)
!2570 = !DILocation(line: 1677, column: 124, scope: !2565)
!2571 = !DILocation(line: 1677, column: 141, scope: !2565)
!2572 = !DILocation(line: 1677, column: 113, scope: !2565)
!2573 = !DILocation(line: 1677, column: 151, scope: !2565)
!2574 = !DILocation(line: 1677, column: 159, scope: !2565)
!2575 = !DILocation(line: 1677, column: 54, scope: !2565)
!2576 = !DILocation(line: 1677, column: 176, scope: !2577)
!2577 = !DILexicalBlockFile(scope: !2496, file: !512, discriminator: 2)
!2578 = !DILocation(line: 1677, column: 183, scope: !2577)
!2579 = !DILocation(line: 1677, column: 175, scope: !2577)
!2580 = !DILocation(line: 1677, column: 174, scope: !2577)
!2581 = !DILocation(line: 1677, column: 203, scope: !2577)
!2582 = !DILocation(line: 1677, column: 213, scope: !2577)
!2583 = !DILocation(line: 1677, column: 54, scope: !2577)
!2584 = !DILocation(line: 1677, column: 54, scope: !2585)
!2585 = !DILexicalBlockFile(scope: !2496, file: !512, discriminator: 3)
!2586 = !DILocation(line: 1677, column: 51, scope: !2585)
!2587 = !DILocation(line: 1677, column: 2, scope: !2585)
!2588 = !DILocation(line: 1677, column: 8, scope: !2585)
!2589 = !DILocation(line: 1677, column: 22, scope: !2585)
!2590 = !DILocation(line: 1678, column: 27, scope: !2496)
!2591 = !DILocation(line: 1678, column: 2, scope: !2496)
!2592 = !DILocation(line: 1679, column: 2, scope: !2496)
!2593 = !DILocation(line: 1679, column: 8, scope: !2496)
!2594 = !DILocation(line: 1679, column: 26, scope: !2496)
!2595 = !DILocation(line: 1679, column: 26, scope: !2565)
!2596 = !DILocation(line: 1680, column: 1, scope: !2496)
!2597 = distinct !DISubprogram(name: "vrrp_state_backup", scope: !512, file: !512, line: 1684, type: !2598, isLocal: false, isDefinition: true, scopeLine: 1685, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!2598 = !DISubroutineType(types: !2599)
!2599 = !{null, !537, !230, !1458}
!2600 = !DILocalVariable(name: "vrrp", arg: 1, scope: !2597, file: !512, line: 1684, type: !537)
!2601 = !DILocation(line: 1684, column: 28, scope: !2597)
!2602 = !DILocalVariable(name: "buf", arg: 2, scope: !2597, file: !512, line: 1684, type: !230)
!2603 = !DILocation(line: 1684, column: 40, scope: !2597)
!2604 = !DILocalVariable(name: "buflen", arg: 3, scope: !2597, file: !512, line: 1684, type: !1458)
!2605 = !DILocation(line: 1684, column: 53, scope: !2597)
!2606 = !DILocalVariable(name: "hd", scope: !2597, file: !512, line: 1686, type: !206)
!2607 = !DILocation(line: 1686, column: 13, scope: !2597)
!2608 = !DILocalVariable(name: "ret", scope: !2597, file: !512, line: 1687, type: !1458)
!2609 = !DILocation(line: 1687, column: 10, scope: !2597)
!2610 = !DILocalVariable(name: "master_adver_int", scope: !2597, file: !512, line: 1688, type: !189)
!2611 = !DILocation(line: 1688, column: 11, scope: !2597)
!2612 = !DILocalVariable(name: "proto", scope: !2597, file: !512, line: 1688, type: !189)
!2613 = !DILocation(line: 1688, column: 29, scope: !2597)
!2614 = !DILocalVariable(name: "check_addr", scope: !2597, file: !512, line: 1689, type: !350)
!2615 = !DILocation(line: 1689, column: 6, scope: !2597)
!2616 = !DILocalVariable(name: "new_ms_down_timer", scope: !2597, file: !512, line: 1690, type: !376)
!2617 = !DILocation(line: 1690, column: 12, scope: !2597)
!2618 = !DILocalVariable(name: "ignore_advert", scope: !2597, file: !512, line: 1691, type: !350)
!2619 = !DILocation(line: 1691, column: 6, scope: !2597)
!2620 = !DILocation(line: 1694, column: 23, scope: !2597)
!2621 = !DILocation(line: 1694, column: 29, scope: !2597)
!2622 = !DILocation(line: 1694, column: 37, scope: !2597)
!2623 = !DILocation(line: 1694, column: 7, scope: !2597)
!2624 = !DILocation(line: 1694, column: 5, scope: !2597)
!2625 = !DILocation(line: 1695, column: 7, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2597, file: !512, line: 1695, column: 6)
!2627 = !DILocation(line: 1695, column: 13, scope: !2626)
!2628 = !DILocation(line: 1695, column: 33, scope: !2626)
!2629 = !DILocation(line: 1696, column: 6, scope: !2626)
!2630 = !DILocation(line: 1696, column: 12, scope: !2626)
!2631 = !DILocation(line: 1696, column: 25, scope: !2626)
!2632 = !DILocation(line: 1696, column: 38, scope: !2626)
!2633 = !DILocation(line: 1696, column: 44, scope: !2626)
!2634 = !DILocation(line: 1696, column: 54, scope: !2626)
!2635 = !DILocation(line: 1696, column: 35, scope: !2626)
!2636 = !DILocation(line: 1695, column: 6, scope: !2637)
!2637 = !DILexicalBlockFile(scope: !2597, file: !512, discriminator: 1)
!2638 = !DILocation(line: 1697, column: 14, scope: !2626)
!2639 = !DILocation(line: 1697, column: 3, scope: !2626)
!2640 = !DILocation(line: 1700, column: 7, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2642, file: !512, line: 1700, column: 7)
!2642 = distinct !DILexicalBlock(scope: !2626, file: !512, line: 1698, column: 7)
!2643 = !DILocation(line: 1700, column: 13, scope: !2641)
!2644 = !DILocation(line: 1700, column: 23, scope: !2641)
!2645 = !DILocation(line: 1700, column: 33, scope: !2641)
!2646 = !DILocation(line: 1700, column: 7, scope: !2642)
!2647 = !DILocation(line: 1701, column: 31, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2649, file: !512, line: 1701, column: 8)
!2649 = distinct !DILexicalBlock(scope: !2641, file: !512, line: 1700, column: 44)
!2650 = !DILocation(line: 1701, column: 37, scope: !2648)
!2651 = !DILocation(line: 1701, column: 49, scope: !2648)
!2652 = !DILocation(line: 1701, column: 58, scope: !2648)
!2653 = !DILocation(line: 1701, column: 91, scope: !2648)
!2654 = !DILocation(line: 1701, column: 97, scope: !2648)
!2655 = !DILocation(line: 1701, column: 112, scope: !2648)
!2656 = !DILocation(line: 1701, column: 121, scope: !2648)
!2657 = !DILocation(line: 1701, column: 65, scope: !2648)
!2658 = !DILocation(line: 1701, column: 8, scope: !2649)
!2659 = !DILocation(line: 1702, column: 16, scope: !2648)
!2660 = !DILocation(line: 1702, column: 5, scope: !2648)
!2661 = !DILocation(line: 1703, column: 3, scope: !2649)
!2662 = !DILocalVariable(name: "__a", scope: !2663, file: !512, line: 1704, type: !251)
!2663 = distinct !DILexicalBlock(scope: !2664, file: !512, line: 1704, column: 24)
!2664 = distinct !DILexicalBlock(scope: !2665, file: !512, line: 1704, column: 8)
!2665 = distinct !DILexicalBlock(scope: !2641, file: !512, line: 1703, column: 10)
!2666 = !DILocation(line: 1704, column: 49, scope: !2663)
!2667 = !DILocation(line: 1704, column: 33, scope: !2663)
!2668 = !DILocation(line: 1704, column: 39, scope: !2663)
!2669 = !DILocation(line: 1704, column: 51, scope: !2663)
!2670 = !DILocalVariable(name: "__b", scope: !2663, file: !512, line: 1704, type: !251)
!2671 = !DILocation(line: 1704, column: 34, scope: !2663)
!2672 = !DILocation(line: 1704, column: 54, scope: !2663)
!2673 = !DILocation(line: 1704, column: 11, scope: !2663)
!2674 = !DILocation(line: 1704, column: 16, scope: !2663)
!2675 = !DILocation(line: 1704, column: 24, scope: !2663)
!2676 = !DILocation(line: 1704, column: 42, scope: !2663)
!2677 = !DILocation(line: 1704, column: 47, scope: !2663)
!2678 = !DILocation(line: 1704, column: 55, scope: !2663)
!2679 = !DILocation(line: 1704, column: 70, scope: !2663)
!2680 = !DILocation(line: 1704, column: 73, scope: !2681)
!2681 = !DILexicalBlockFile(scope: !2663, file: !512, discriminator: 1)
!2682 = !DILocation(line: 1704, column: 78, scope: !2681)
!2683 = !DILocation(line: 1704, column: 86, scope: !2681)
!2684 = !DILocation(line: 1704, column: 104, scope: !2681)
!2685 = !DILocation(line: 1704, column: 109, scope: !2681)
!2686 = !DILocation(line: 1704, column: 117, scope: !2681)
!2687 = !DILocation(line: 1704, column: 101, scope: !2681)
!2688 = !DILocation(line: 1704, column: 132, scope: !2681)
!2689 = !DILocation(line: 1704, column: 135, scope: !2690)
!2690 = !DILexicalBlockFile(scope: !2663, file: !512, discriminator: 2)
!2691 = !DILocation(line: 1704, column: 140, scope: !2690)
!2692 = !DILocation(line: 1704, column: 148, scope: !2690)
!2693 = !DILocation(line: 1704, column: 166, scope: !2690)
!2694 = !DILocation(line: 1704, column: 171, scope: !2690)
!2695 = !DILocation(line: 1704, column: 179, scope: !2690)
!2696 = !DILocation(line: 1704, column: 163, scope: !2690)
!2697 = !DILocation(line: 1704, column: 194, scope: !2690)
!2698 = !DILocation(line: 1704, column: 197, scope: !2699)
!2699 = !DILexicalBlockFile(scope: !2663, file: !512, discriminator: 3)
!2700 = !DILocation(line: 1704, column: 202, scope: !2699)
!2701 = !DILocation(line: 1704, column: 210, scope: !2699)
!2702 = !DILocation(line: 1704, column: 228, scope: !2699)
!2703 = !DILocation(line: 1704, column: 233, scope: !2699)
!2704 = !DILocation(line: 1704, column: 241, scope: !2699)
!2705 = !DILocation(line: 1704, column: 225, scope: !2699)
!2706 = !DILocation(line: 1704, column: 194, scope: !2707)
!2707 = !DILexicalBlockFile(scope: !2663, file: !512, discriminator: 4)
!2708 = !DILocation(line: 1704, column: 11, scope: !2707)
!2709 = !DILocation(line: 1704, column: 257, scope: !2707)
!2710 = !DILocation(line: 1704, column: 23, scope: !2707)
!2711 = !DILocation(line: 1704, column: 8, scope: !2707)
!2712 = !DILocation(line: 1705, column: 16, scope: !2664)
!2713 = !DILocation(line: 1705, column: 5, scope: !2664)
!2714 = !DILocation(line: 1708, column: 26, scope: !2597)
!2715 = !DILocation(line: 1708, column: 32, scope: !2597)
!2716 = !DILocation(line: 1708, column: 37, scope: !2597)
!2717 = !DILocation(line: 1708, column: 45, scope: !2597)
!2718 = !DILocation(line: 1708, column: 8, scope: !2597)
!2719 = !DILocation(line: 1708, column: 6, scope: !2597)
!2720 = !DILocation(line: 1710, column: 6, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2597, file: !512, line: 1710, column: 6)
!2722 = !DILocation(line: 1710, column: 10, scope: !2721)
!2723 = !DILocation(line: 1710, column: 6, scope: !2597)
!2724 = !DILocation(line: 1711, column: 17, scope: !2721)
!2725 = !DILocation(line: 1711, column: 3, scope: !2721)
!2726 = !DILocation(line: 1712, column: 11, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2721, file: !512, line: 1712, column: 11)
!2728 = !DILocation(line: 1712, column: 15, scope: !2727)
!2729 = !DILocation(line: 1712, column: 24, scope: !2727)
!2730 = !DILocation(line: 1712, column: 11, scope: !2721)
!2731 = !DILocation(line: 1713, column: 73, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2727, file: !512, line: 1712, column: 30)
!2733 = !DILocation(line: 1713, column: 79, scope: !2732)
!2734 = !DILocation(line: 1713, column: 3, scope: !2732)
!2735 = !DILocation(line: 1714, column: 27, scope: !2732)
!2736 = !DILocation(line: 1714, column: 34, scope: !2732)
!2737 = !DILocation(line: 1714, column: 42, scope: !2732)
!2738 = !DILocation(line: 1714, column: 26, scope: !2732)
!2739 = !DILocation(line: 1714, column: 58, scope: !2740)
!2740 = !DILexicalBlockFile(scope: !2732, file: !512, discriminator: 1)
!2741 = !DILocation(line: 1714, column: 65, scope: !2740)
!2742 = !DILocation(line: 1714, column: 57, scope: !2740)
!2743 = !DILocation(line: 1714, column: 56, scope: !2740)
!2744 = !DILocation(line: 1714, column: 89, scope: !2740)
!2745 = !DILocation(line: 1714, column: 96, scope: !2740)
!2746 = !DILocation(line: 1714, column: 113, scope: !2740)
!2747 = !DILocation(line: 1714, column: 85, scope: !2740)
!2748 = !DILocation(line: 1714, column: 123, scope: !2740)
!2749 = !DILocation(line: 1714, column: 131, scope: !2740)
!2750 = !DILocation(line: 1714, column: 26, scope: !2740)
!2751 = !DILocation(line: 1714, column: 148, scope: !2752)
!2752 = !DILexicalBlockFile(scope: !2732, file: !512, discriminator: 2)
!2753 = !DILocation(line: 1714, column: 155, scope: !2752)
!2754 = !DILocation(line: 1714, column: 147, scope: !2752)
!2755 = !DILocation(line: 1714, column: 146, scope: !2752)
!2756 = !DILocation(line: 1714, column: 175, scope: !2752)
!2757 = !DILocation(line: 1714, column: 185, scope: !2752)
!2758 = !DILocation(line: 1714, column: 26, scope: !2752)
!2759 = !DILocation(line: 1714, column: 26, scope: !2760)
!2760 = !DILexicalBlockFile(scope: !2732, file: !512, discriminator: 3)
!2761 = !DILocation(line: 1714, column: 3, scope: !2760)
!2762 = !DILocation(line: 1714, column: 9, scope: !2760)
!2763 = !DILocation(line: 1714, column: 23, scope: !2760)
!2764 = !DILocation(line: 1718, column: 2, scope: !2732)
!2765 = !DILocation(line: 1718, column: 13, scope: !2766)
!2766 = !DILexicalBlockFile(scope: !2767, file: !512, discriminator: 1)
!2767 = distinct !DILexicalBlock(scope: !2727, file: !512, line: 1718, column: 13)
!2768 = !DILocation(line: 1718, column: 19, scope: !2766)
!2769 = !DILocation(line: 1718, column: 29, scope: !2766)
!2770 = !DILocation(line: 1719, column: 6, scope: !2767)
!2771 = !DILocation(line: 1719, column: 10, scope: !2767)
!2772 = !DILocation(line: 1719, column: 22, scope: !2767)
!2773 = !DILocation(line: 1719, column: 28, scope: !2767)
!2774 = !DILocation(line: 1719, column: 19, scope: !2767)
!2775 = !DILocation(line: 1719, column: 47, scope: !2767)
!2776 = !DILocation(line: 1720, column: 7, scope: !2767)
!2777 = !DILocation(line: 1720, column: 13, scope: !2767)
!2778 = !DILocation(line: 1720, column: 27, scope: !2767)
!2779 = !DILocation(line: 1721, column: 9, scope: !2767)
!2780 = !DILocation(line: 1721, column: 15, scope: !2767)
!2781 = !DILocation(line: 1721, column: 28, scope: !2767)
!2782 = !DILocation(line: 1721, column: 35, scope: !2767)
!2783 = !DILocation(line: 1722, column: 8, scope: !2767)
!2784 = !DILocation(line: 1722, column: 14, scope: !2767)
!2785 = !DILocation(line: 1722, column: 10, scope: !2767)
!2786 = !DILocation(line: 1722, column: 17, scope: !2767)
!2787 = !DILocation(line: 1718, column: 13, scope: !2788)
!2788 = !DILexicalBlockFile(scope: !2727, file: !512, discriminator: 2)
!2789 = !DILocation(line: 1722, column: 8, scope: !2766)
!2790 = !DILocation(line: 1722, column: 14, scope: !2766)
!2791 = !DILocation(line: 1722, column: 10, scope: !2766)
!2792 = !DILocation(line: 1722, column: 7, scope: !2766)
!2793 = !DILocation(line: 1722, column: 8, scope: !2794)
!2794 = !DILexicalBlockFile(scope: !2767, file: !512, discriminator: 2)
!2795 = !DILocation(line: 1722, column: 14, scope: !2794)
!2796 = !DILocation(line: 1722, column: 10, scope: !2794)
!2797 = !DILocation(line: 1722, column: 7, scope: !2794)
!2798 = !DILocation(line: 1718, column: 13, scope: !2799)
!2799 = !DILexicalBlockFile(scope: !2727, file: !512, discriminator: 3)
!2800 = !DILocation(line: 1724, column: 7, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2802, file: !512, line: 1724, column: 7)
!2802 = distinct !DILexicalBlock(scope: !2767, file: !512, line: 1722, column: 54)
!2803 = !DILocation(line: 1724, column: 13, scope: !2801)
!2804 = !DILocation(line: 1724, column: 21, scope: !2801)
!2805 = !DILocation(line: 1724, column: 7, scope: !2802)
!2806 = !DILocation(line: 1725, column: 30, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2801, file: !512, line: 1724, column: 27)
!2808 = !DILocation(line: 1725, column: 34, scope: !2807)
!2809 = !DILocation(line: 1725, column: 37, scope: !2807)
!2810 = !DILocation(line: 1725, column: 24, scope: !2807)
!2811 = !DILocation(line: 1725, column: 48, scope: !2807)
!2812 = !DILocation(line: 1725, column: 58, scope: !2807)
!2813 = !DILocation(line: 1725, column: 21, scope: !2807)
!2814 = !DILocation(line: 1729, column: 8, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2807, file: !512, line: 1729, column: 8)
!2816 = !DILocation(line: 1729, column: 14, scope: !2815)
!2817 = !DILocation(line: 1729, column: 34, scope: !2815)
!2818 = !DILocation(line: 1729, column: 31, scope: !2815)
!2819 = !DILocation(line: 1729, column: 8, scope: !2807)
!2820 = !DILocation(line: 1731, column: 7, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2815, file: !512, line: 1729, column: 52)
!2822 = !DILocation(line: 1731, column: 13, scope: !2821)
!2823 = !DILocation(line: 1731, column: 20, scope: !2821)
!2824 = !DILocation(line: 1731, column: 37, scope: !2821)
!2825 = !DILocation(line: 1731, column: 58, scope: !2821)
!2826 = !DILocation(line: 1731, column: 64, scope: !2821)
!2827 = !DILocation(line: 1731, column: 81, scope: !2821)
!2828 = !DILocation(line: 1730, column: 5, scope: !2821)
!2829 = !DILocation(line: 1732, column: 30, scope: !2821)
!2830 = !DILocation(line: 1732, column: 5, scope: !2821)
!2831 = !DILocation(line: 1732, column: 11, scope: !2821)
!2832 = !DILocation(line: 1732, column: 28, scope: !2821)
!2833 = !DILocation(line: 1733, column: 4, scope: !2821)
!2834 = !DILocation(line: 1734, column: 3, scope: !2807)
!2835 = !DILocation(line: 1735, column: 29, scope: !2802)
!2836 = !DILocation(line: 1735, column: 35, scope: !2802)
!2837 = !DILocation(line: 1735, column: 27, scope: !2802)
!2838 = !DILocation(line: 1735, column: 56, scope: !2802)
!2839 = !DILocation(line: 1735, column: 63, scope: !2802)
!2840 = !DILocation(line: 1735, column: 71, scope: !2802)
!2841 = !DILocation(line: 1735, column: 55, scope: !2802)
!2842 = !DILocation(line: 1735, column: 87, scope: !2843)
!2843 = !DILexicalBlockFile(scope: !2802, file: !512, discriminator: 1)
!2844 = !DILocation(line: 1735, column: 94, scope: !2843)
!2845 = !DILocation(line: 1735, column: 86, scope: !2843)
!2846 = !DILocation(line: 1735, column: 85, scope: !2843)
!2847 = !DILocation(line: 1735, column: 118, scope: !2843)
!2848 = !DILocation(line: 1735, column: 125, scope: !2843)
!2849 = !DILocation(line: 1735, column: 142, scope: !2843)
!2850 = !DILocation(line: 1735, column: 114, scope: !2843)
!2851 = !DILocation(line: 1735, column: 152, scope: !2843)
!2852 = !DILocation(line: 1735, column: 160, scope: !2843)
!2853 = !DILocation(line: 1735, column: 55, scope: !2843)
!2854 = !DILocation(line: 1735, column: 177, scope: !2855)
!2855 = !DILexicalBlockFile(scope: !2802, file: !512, discriminator: 2)
!2856 = !DILocation(line: 1735, column: 184, scope: !2855)
!2857 = !DILocation(line: 1735, column: 176, scope: !2855)
!2858 = !DILocation(line: 1735, column: 175, scope: !2855)
!2859 = !DILocation(line: 1735, column: 204, scope: !2855)
!2860 = !DILocation(line: 1735, column: 214, scope: !2855)
!2861 = !DILocation(line: 1735, column: 55, scope: !2855)
!2862 = !DILocation(line: 1735, column: 55, scope: !2863)
!2863 = !DILexicalBlockFile(scope: !2802, file: !512, discriminator: 3)
!2864 = !DILocation(line: 1735, column: 52, scope: !2863)
!2865 = !DILocation(line: 1735, column: 3, scope: !2863)
!2866 = !DILocation(line: 1735, column: 9, scope: !2863)
!2867 = !DILocation(line: 1735, column: 23, scope: !2863)
!2868 = !DILocation(line: 1736, column: 3, scope: !2802)
!2869 = !DILocation(line: 1736, column: 9, scope: !2802)
!2870 = !DILocation(line: 1736, column: 24, scope: !2802)
!2871 = !DILocation(line: 1736, column: 30, scope: !2802)
!2872 = !DILocation(line: 1737, column: 27, scope: !2802)
!2873 = !DILocation(line: 1737, column: 31, scope: !2802)
!2874 = !DILocation(line: 1737, column: 3, scope: !2802)
!2875 = !DILocation(line: 1737, column: 9, scope: !2802)
!2876 = !DILocation(line: 1737, column: 25, scope: !2802)
!2877 = !DILocation(line: 1742, column: 7, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2802, file: !512, line: 1742, column: 7)
!2879 = !DILocation(line: 1742, column: 13, scope: !2878)
!2880 = !DILocation(line: 1742, column: 7, scope: !2802)
!2881 = !DILocation(line: 1743, column: 8, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2883, file: !512, line: 1743, column: 8)
!2883 = distinct !DILexicalBlock(scope: !2878, file: !512, line: 1742, column: 28)
!2884 = !DILocation(line: 1743, column: 12, scope: !2882)
!2885 = !DILocation(line: 1743, column: 24, scope: !2882)
!2886 = !DILocation(line: 1743, column: 30, scope: !2882)
!2887 = !DILocation(line: 1743, column: 21, scope: !2882)
!2888 = !DILocation(line: 1743, column: 8, scope: !2883)
!2889 = !DILocation(line: 1744, column: 9, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2891, file: !512, line: 1744, column: 9)
!2891 = distinct !DILexicalBlock(scope: !2882, file: !512, line: 1743, column: 50)
!2892 = !DILocation(line: 1744, column: 15, scope: !2890)
!2893 = !DILocation(line: 1744, column: 28, scope: !2890)
!2894 = !DILocation(line: 1744, column: 9, scope: !2891)
!2895 = !DILocation(line: 1747, column: 24, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2890, file: !512, line: 1744, column: 36)
!2897 = !DILocation(line: 1747, column: 30, scope: !2896)
!2898 = !DILocation(line: 1745, column: 6, scope: !2896)
!2899 = !DILocation(line: 1748, column: 6, scope: !2896)
!2900 = !DILocation(line: 1748, column: 12, scope: !2896)
!2901 = !DILocation(line: 1748, column: 25, scope: !2896)
!2902 = !DILocation(line: 1748, column: 32, scope: !2896)
!2903 = !DILocation(line: 1749, column: 5, scope: !2896)
!2904 = !DILocation(line: 1750, column: 4, scope: !2891)
!2905 = !DILocation(line: 1750, column: 16, scope: !2906)
!2906 = !DILexicalBlockFile(scope: !2907, file: !512, discriminator: 1)
!2907 = distinct !DILexicalBlock(scope: !2882, file: !512, line: 1750, column: 15)
!2908 = !DILocation(line: 1750, column: 22, scope: !2906)
!2909 = !DILocation(line: 1750, column: 35, scope: !2906)
!2910 = !DILocation(line: 1750, column: 15, scope: !2906)
!2911 = !DILocation(line: 1753, column: 23, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2907, file: !512, line: 1750, column: 43)
!2913 = !DILocation(line: 1753, column: 29, scope: !2912)
!2914 = !DILocation(line: 1754, column: 6, scope: !2912)
!2915 = !DILocation(line: 1754, column: 12, scope: !2912)
!2916 = !DILocation(line: 1754, column: 26, scope: !2912)
!2917 = !DILocation(line: 1751, column: 5, scope: !2912)
!2918 = !DILocation(line: 1755, column: 5, scope: !2912)
!2919 = !DILocation(line: 1755, column: 11, scope: !2912)
!2920 = !DILocation(line: 1755, column: 41, scope: !2912)
!2921 = !DILocation(line: 1755, column: 54, scope: !2912)
!2922 = !DILocation(line: 1755, column: 60, scope: !2912)
!2923 = !DILocation(line: 1755, column: 26, scope: !2912)
!2924 = !DILocation(line: 1755, column: 26, scope: !2925)
!2925 = !DILexicalBlockFile(scope: !2912, file: !512, discriminator: 1)
!2926 = !DILocation(line: 1755, column: 26, scope: !2927)
!2927 = !DILexicalBlockFile(scope: !2912, file: !512, discriminator: 2)
!2928 = !DILocation(line: 1756, column: 4, scope: !2912)
!2929 = !DILocation(line: 1757, column: 3, scope: !2883)
!2930 = !DILocation(line: 1758, column: 2, scope: !2802)
!2931 = !DILocation(line: 1760, column: 89, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2767, file: !512, line: 1758, column: 9)
!2933 = !DILocation(line: 1760, column: 95, scope: !2932)
!2934 = !DILocation(line: 1760, column: 102, scope: !2932)
!2935 = !DILocation(line: 1760, column: 106, scope: !2932)
!2936 = !DILocation(line: 1760, column: 134, scope: !2932)
!2937 = !DILocation(line: 1760, column: 140, scope: !2932)
!2938 = !DILocation(line: 1760, column: 116, scope: !2932)
!2939 = !DILocation(line: 1760, column: 3, scope: !2940)
!2940 = !DILexicalBlockFile(scope: !2932, file: !512, discriminator: 1)
!2941 = !DILocation(line: 1762, column: 17, scope: !2932)
!2942 = !DILocation(line: 1769, column: 3, scope: !2932)
!2943 = !DILocation(line: 1769, column: 9, scope: !2932)
!2944 = !DILocation(line: 1769, column: 24, scope: !2932)
!2945 = !DILocation(line: 1769, column: 30, scope: !2932)
!2946 = !DILocation(line: 1772, column: 6, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2597, file: !512, line: 1772, column: 6)
!2948 = !DILocation(line: 1772, column: 6, scope: !2597)
!2949 = !DILocation(line: 1774, column: 3, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2947, file: !512, line: 1772, column: 21)
!2951 = !DILocation(line: 1775, column: 2, scope: !2950)
!2952 = distinct !{!2952, !2951}
!2953 = !DILocation(line: 1775, column: 3, scope: !2954)
!2954 = !DILexicalBlockFile(scope: !2955, file: !512, discriminator: 1)
!2955 = distinct !DILexicalBlock(scope: !2950, file: !512, line: 1775, column: 5)
!2956 = !DILocation(line: 1775, column: 9, scope: !2954)
!2957 = !DILocation(line: 1775, column: 5, scope: !2954)
!2958 = !DILocation(line: 1775, column: 12, scope: !2954)
!2959 = !DILocation(line: 1775, column: 13, scope: !2954)
!2960 = !DILocation(line: 1775, column: 18, scope: !2954)
!2961 = !DILocation(line: 1775, column: 5, scope: !2962)
!2962 = !DILexicalBlockFile(scope: !2963, file: !512, discriminator: 2)
!2963 = distinct !DILexicalBlock(scope: !2964, file: !512, line: 1775, column: 18)
!2964 = distinct !DILexicalBlock(scope: !2955, file: !512, line: 1775, column: 18)
!2965 = !DILocation(line: 1775, column: 20, scope: !2962)
!2966 = !DILocation(line: 1775, column: 13, scope: !2962)
!2967 = !DILocation(line: 1775, column: 25, scope: !2962)
!2968 = !DILocation(line: 1775, column: 27, scope: !2969)
!2969 = !DILexicalBlockFile(scope: !2955, file: !512, discriminator: 3)
!2970 = !DILocation(line: 1776, column: 43, scope: !2950)
!2971 = !DILocation(line: 1776, column: 50, scope: !2950)
!2972 = !DILocation(line: 1776, column: 25, scope: !2950)
!2973 = !DILocation(line: 1776, column: 25, scope: !2974)
!2974 = !DILexicalBlockFile(scope: !2950, file: !512, discriminator: 1)
!2975 = !DILocation(line: 1776, column: 89, scope: !2976)
!2976 = !DILexicalBlockFile(scope: !2950, file: !512, discriminator: 2)
!2977 = !DILocation(line: 1776, column: 96, scope: !2976)
!2978 = !DILocation(line: 1776, column: 127, scope: !2976)
!2979 = !DILocation(line: 1776, column: 107, scope: !2976)
!2980 = !DILocation(line: 1776, column: 60, scope: !2976)
!2981 = !DILocation(line: 1776, column: 25, scope: !2976)
!2982 = !DILocation(line: 1776, column: 25, scope: !2983)
!2983 = !DILexicalBlockFile(scope: !2950, file: !512, discriminator: 3)
!2984 = !DILocation(line: 1776, column: 3, scope: !2983)
!2985 = !DILocation(line: 1776, column: 9, scope: !2983)
!2986 = !DILocation(line: 1776, column: 23, scope: !2983)
!2987 = !DILocation(line: 1777, column: 2, scope: !2950)
!2988 = !DILocation(line: 1778, column: 1, scope: !2597)
!2989 = distinct !DISubprogram(name: "vrrp_check_packet", scope: !512, file: !512, line: 1393, type: !2990, isLocal: true, isDefinition: true, scopeLine: 1394, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!2990 = !DISubroutineType(types: !2991)
!2991 = !{!300, !537, !230, !1458, !350}
!2992 = !DILocalVariable(name: "vrrp", arg: 1, scope: !2989, file: !512, line: 1393, type: !537)
!2993 = !DILocation(line: 1393, column: 28, scope: !2989)
!2994 = !DILocalVariable(name: "buf", arg: 2, scope: !2989, file: !512, line: 1393, type: !230)
!2995 = !DILocation(line: 1393, column: 40, scope: !2989)
!2996 = !DILocalVariable(name: "buflen", arg: 3, scope: !2989, file: !512, line: 1393, type: !1458)
!2997 = !DILocation(line: 1393, column: 53, scope: !2989)
!2998 = !DILocalVariable(name: "check_vip_addr", arg: 4, scope: !2989, file: !512, line: 1393, type: !350)
!2999 = !DILocation(line: 1393, column: 65, scope: !2989)
!3000 = !DILocation(line: 1395, column: 7, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2989, file: !512, line: 1395, column: 6)
!3002 = !DILocation(line: 1395, column: 6, scope: !2989)
!3003 = !DILocation(line: 1396, column: 3, scope: !3001)
!3004 = !DILocation(line: 1398, column: 21, scope: !2989)
!3005 = !DILocation(line: 1398, column: 27, scope: !2989)
!3006 = !DILocation(line: 1398, column: 32, scope: !2989)
!3007 = !DILocation(line: 1398, column: 40, scope: !2989)
!3008 = !DILocation(line: 1398, column: 9, scope: !2989)
!3009 = !DILocation(line: 1398, column: 2, scope: !2989)
!3010 = !DILocation(line: 1399, column: 1, scope: !2989)
!3011 = distinct !DISubprogram(name: "vrrp_state_become_master", scope: !512, file: !512, line: 1486, type: !1810, isLocal: true, isDefinition: true, scopeLine: 1487, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!3012 = !DILocalVariable(name: "vrrp", arg: 1, scope: !3011, file: !512, line: 1486, type: !537)
!3013 = !DILocation(line: 1486, column: 35, scope: !3011)
!3014 = !DILocalVariable(name: "ifp", scope: !3011, file: !512, line: 1488, type: !338)
!3015 = !DILocation(line: 1488, column: 15, scope: !3011)
!3016 = !DILocation(line: 1490, column: 4, scope: !3011)
!3017 = !DILocation(line: 1490, column: 10, scope: !3011)
!3018 = !DILocation(line: 1490, column: 17, scope: !3011)
!3019 = !DILocation(line: 1490, column: 2, scope: !3011)
!3020 = !DILocation(line: 1492, column: 6, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3011, file: !512, line: 1492, column: 6)
!3022 = !DILocation(line: 1492, column: 12, scope: !3021)
!3023 = !DILocation(line: 1492, column: 20, scope: !3021)
!3024 = !DILocation(line: 1492, column: 6, scope: !3011)
!3025 = !DILocation(line: 1494, column: 6, scope: !3021)
!3026 = !DILocation(line: 1494, column: 12, scope: !3021)
!3027 = !DILocation(line: 1494, column: 19, scope: !3021)
!3028 = !DILocation(line: 1494, column: 25, scope: !3021)
!3029 = !DILocation(line: 1494, column: 35, scope: !3021)
!3030 = !DILocation(line: 1493, column: 3, scope: !3021)
!3031 = !DILocation(line: 1497, column: 26, scope: !3011)
!3032 = !DILocation(line: 1497, column: 2, scope: !3011)
!3033 = !DILocation(line: 1498, column: 9, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3011, file: !512, line: 1498, column: 6)
!3035 = !DILocation(line: 1498, column: 15, scope: !3034)
!3036 = !DILocation(line: 1498, column: 20, scope: !3034)
!3037 = !DILocation(line: 1498, column: 6, scope: !3034)
!3038 = !DILocation(line: 1498, column: 11, scope: !3039)
!3039 = !DILexicalBlockFile(scope: !3034, file: !512, discriminator: 1)
!3040 = !DILocation(line: 1498, column: 17, scope: !3039)
!3041 = !DILocation(line: 1498, column: 23, scope: !3039)
!3042 = !DILocation(line: 1498, column: 28, scope: !3039)
!3043 = !DILocation(line: 1498, column: 6, scope: !3039)
!3044 = !DILocation(line: 1498, column: 10, scope: !3045)
!3045 = !DILexicalBlockFile(scope: !3034, file: !512, discriminator: 2)
!3046 = !DILocation(line: 1498, column: 16, scope: !3045)
!3047 = !DILocation(line: 1498, column: 22, scope: !3045)
!3048 = !DILocation(line: 1498, column: 27, scope: !3045)
!3049 = !DILocation(line: 1498, column: 6, scope: !3045)
!3050 = !DILocation(line: 1499, column: 25, scope: !3034)
!3051 = !DILocation(line: 1499, column: 3, scope: !3034)
!3052 = !DILocation(line: 1500, column: 9, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3011, file: !512, line: 1500, column: 6)
!3054 = !DILocation(line: 1500, column: 15, scope: !3053)
!3055 = !DILocation(line: 1500, column: 21, scope: !3053)
!3056 = !DILocation(line: 1500, column: 6, scope: !3053)
!3057 = !DILocation(line: 1500, column: 11, scope: !3058)
!3058 = !DILexicalBlockFile(scope: !3053, file: !512, discriminator: 1)
!3059 = !DILocation(line: 1500, column: 17, scope: !3058)
!3060 = !DILocation(line: 1500, column: 24, scope: !3058)
!3061 = !DILocation(line: 1500, column: 29, scope: !3058)
!3062 = !DILocation(line: 1500, column: 6, scope: !3058)
!3063 = !DILocation(line: 1500, column: 10, scope: !3064)
!3064 = !DILexicalBlockFile(scope: !3053, file: !512, discriminator: 2)
!3065 = !DILocation(line: 1500, column: 16, scope: !3064)
!3066 = !DILocation(line: 1500, column: 23, scope: !3064)
!3067 = !DILocation(line: 1500, column: 28, scope: !3064)
!3068 = !DILocation(line: 1500, column: 6, scope: !3064)
!3069 = !DILocation(line: 1501, column: 25, scope: !3053)
!3070 = !DILocation(line: 1501, column: 3, scope: !3053)
!3071 = !DILocation(line: 1502, column: 2, scope: !3011)
!3072 = !DILocation(line: 1502, column: 8, scope: !3011)
!3073 = !DILocation(line: 1502, column: 15, scope: !3011)
!3074 = !DILocation(line: 1506, column: 9, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3011, file: !512, line: 1506, column: 6)
!3076 = !DILocation(line: 1506, column: 15, scope: !3075)
!3077 = !DILocation(line: 1506, column: 24, scope: !3075)
!3078 = !DILocation(line: 1506, column: 6, scope: !3075)
!3079 = !DILocation(line: 1506, column: 11, scope: !3080)
!3080 = !DILexicalBlockFile(scope: !3075, file: !512, discriminator: 1)
!3081 = !DILocation(line: 1506, column: 17, scope: !3080)
!3082 = !DILocation(line: 1506, column: 27, scope: !3080)
!3083 = !DILocation(line: 1506, column: 32, scope: !3080)
!3084 = !DILocation(line: 1506, column: 6, scope: !3080)
!3085 = !DILocation(line: 1506, column: 10, scope: !3086)
!3086 = !DILexicalBlockFile(scope: !3075, file: !512, discriminator: 2)
!3087 = !DILocation(line: 1506, column: 16, scope: !3086)
!3088 = !DILocation(line: 1506, column: 26, scope: !3086)
!3089 = !DILocation(line: 1506, column: 31, scope: !3086)
!3090 = !DILocation(line: 1506, column: 6, scope: !3086)
!3091 = !DILocation(line: 1507, column: 24, scope: !3075)
!3092 = !DILocation(line: 1507, column: 3, scope: !3075)
!3093 = !DILocation(line: 1510, column: 9, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3011, file: !512, line: 1510, column: 6)
!3095 = !DILocation(line: 1510, column: 15, scope: !3094)
!3096 = !DILocation(line: 1510, column: 23, scope: !3094)
!3097 = !DILocation(line: 1510, column: 6, scope: !3094)
!3098 = !DILocation(line: 1510, column: 11, scope: !3099)
!3099 = !DILexicalBlockFile(scope: !3094, file: !512, discriminator: 1)
!3100 = !DILocation(line: 1510, column: 17, scope: !3099)
!3101 = !DILocation(line: 1510, column: 26, scope: !3099)
!3102 = !DILocation(line: 1510, column: 31, scope: !3099)
!3103 = !DILocation(line: 1510, column: 6, scope: !3099)
!3104 = !DILocation(line: 1510, column: 10, scope: !3105)
!3105 = !DILexicalBlockFile(scope: !3094, file: !512, discriminator: 2)
!3106 = !DILocation(line: 1510, column: 16, scope: !3105)
!3107 = !DILocation(line: 1510, column: 25, scope: !3105)
!3108 = !DILocation(line: 1510, column: 30, scope: !3105)
!3109 = !DILocation(line: 1510, column: 6, scope: !3105)
!3110 = !DILocation(line: 1511, column: 23, scope: !3094)
!3111 = !DILocation(line: 1511, column: 3, scope: !3094)
!3112 = !DILocation(line: 1514, column: 2, scope: !3011)
!3113 = !DILocation(line: 1517, column: 6, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3011, file: !512, line: 1517, column: 6)
!3115 = !DILocation(line: 1517, column: 12, scope: !3114)
!3116 = !DILocation(line: 1517, column: 19, scope: !3114)
!3117 = !DILocation(line: 1517, column: 6, scope: !3011)
!3118 = !DILocation(line: 1519, column: 11, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3114, file: !512, line: 1517, column: 31)
!3120 = !DILocation(line: 1519, column: 17, scope: !3119)
!3121 = !DILocation(line: 1519, column: 23, scope: !3119)
!3122 = !DILocation(line: 1519, column: 7, scope: !3119)
!3123 = !DILocation(line: 1520, column: 41, scope: !3119)
!3124 = !DILocation(line: 1520, column: 21, scope: !3119)
!3125 = !DILocation(line: 1520, column: 3, scope: !3119)
!3126 = !DILocation(line: 1520, column: 8, scope: !3119)
!3127 = !DILocation(line: 1520, column: 19, scope: !3119)
!3128 = !DILocation(line: 1521, column: 2, scope: !3119)
!3129 = !DILocation(line: 1522, column: 24, scope: !3011)
!3130 = !DILocation(line: 1522, column: 30, scope: !3011)
!3131 = !DILocation(line: 1522, column: 36, scope: !3011)
!3132 = !DILocation(line: 1522, column: 2, scope: !3011)
!3133 = !DILocation(line: 1525, column: 6, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3011, file: !512, line: 1525, column: 5)
!3135 = !DILocation(line: 1525, column: 12, scope: !3134)
!3136 = !DILocation(line: 1525, column: 8, scope: !3134)
!3137 = !DILocation(line: 1525, column: 15, scope: !3134)
!3138 = !DILocation(line: 1525, column: 6, scope: !3139)
!3139 = !DILexicalBlockFile(scope: !3134, file: !512, discriminator: 1)
!3140 = !DILocation(line: 1525, column: 12, scope: !3139)
!3141 = !DILocation(line: 1525, column: 8, scope: !3139)
!3142 = !DILocation(line: 1525, column: 18, scope: !3139)
!3143 = !DILocation(line: 1525, column: 5, scope: !3139)
!3144 = !DILocation(line: 1526, column: 3, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3134, file: !512, line: 1525, column: 38)
!3146 = !DILocation(line: 1526, column: 9, scope: !3145)
!3147 = !DILocation(line: 1526, column: 44, scope: !3145)
!3148 = !DILocation(line: 1526, column: 50, scope: !3145)
!3149 = !DILocation(line: 1526, column: 30, scope: !3145)
!3150 = !DILocation(line: 1526, column: 30, scope: !3151)
!3151 = !DILexicalBlockFile(scope: !3145, file: !512, discriminator: 1)
!3152 = !DILocation(line: 1527, column: 2, scope: !3145)
!3153 = !DILocation(line: 1530, column: 25, scope: !3011)
!3154 = !DILocation(line: 1530, column: 2, scope: !3011)
!3155 = !DILocation(line: 1534, column: 6, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3011, file: !512, line: 1534, column: 6)
!3157 = !DILocation(line: 1534, column: 19, scope: !3156)
!3158 = !DILocation(line: 1534, column: 29, scope: !3156)
!3159 = !DILocation(line: 1534, column: 37, scope: !3156)
!3160 = !DILocation(line: 1534, column: 34, scope: !3156)
!3161 = !DILocation(line: 1534, column: 6, scope: !3011)
!3162 = !DILocation(line: 1535, column: 22, scope: !3156)
!3163 = !DILocation(line: 1535, column: 35, scope: !3156)
!3164 = !DILocation(line: 1535, column: 3, scope: !3156)
!3165 = !DILocation(line: 1537, column: 2, scope: !3011)
!3166 = !DILocation(line: 1537, column: 8, scope: !3011)
!3167 = !DILocation(line: 1537, column: 26, scope: !3011)
!3168 = !DILocation(line: 1537, column: 26, scope: !3169)
!3169 = !DILexicalBlockFile(scope: !3011, file: !512, discriminator: 1)
!3170 = !DILocation(line: 1538, column: 1, scope: !3011)
!3171 = distinct !DISubprogram(name: "timer_add_now", scope: !377, file: !377, line: 66, type: !3172, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{!376, !376}
!3174 = !DILocalVariable(name: "a", arg: 1, scope: !3171, file: !377, line: 66, type: !376)
!3175 = !DILocation(line: 66, column: 25, scope: !3171)
!3176 = !DILocation(line: 68, column: 1, scope: !3171)
!3177 = distinct !{!3177, !3176}
!3178 = !DILocation(line: 68, column: 4, scope: !3179)
!3179 = !DILexicalBlockFile(scope: !3180, file: !377, discriminator: 1)
!3180 = distinct !DILexicalBlock(scope: !3171, file: !377, line: 68, column: 4)
!3181 = !DILocation(line: 68, column: 11, scope: !3179)
!3182 = !DILocation(line: 68, column: 12, scope: !3179)
!3183 = !DILocation(line: 68, column: 17, scope: !3179)
!3184 = !DILocation(line: 68, column: 4, scope: !3185)
!3185 = !DILexicalBlockFile(scope: !3186, file: !377, discriminator: 2)
!3186 = distinct !DILexicalBlock(scope: !3187, file: !377, line: 68, column: 24)
!3187 = distinct !DILexicalBlock(scope: !3180, file: !377, line: 68, column: 17)
!3188 = !DILocation(line: 68, column: 26, scope: !3185)
!3189 = !DILocation(line: 68, column: 12, scope: !3185)
!3190 = !DILocation(line: 68, column: 24, scope: !3185)
!3191 = !DILocation(line: 68, column: 26, scope: !3192)
!3192 = !DILexicalBlockFile(scope: !3180, file: !377, discriminator: 3)
!3193 = !DILocation(line: 70, column: 9, scope: !3171)
!3194 = !DILocation(line: 70, column: 2, scope: !3171)
!3195 = distinct !DISubprogram(name: "vrrp_state_master_rx", scope: !512, file: !512, line: 1836, type: !3196, isLocal: false, isDefinition: true, scopeLine: 1837, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!3196 = !DISubroutineType(types: !3197)
!3197 = !{!350, !537, !230, !1458}
!3198 = !DILocalVariable(name: "vrrp", arg: 1, scope: !3195, file: !512, line: 1836, type: !537)
!3199 = !DILocation(line: 1836, column: 31, scope: !3195)
!3200 = !DILocalVariable(name: "buf", arg: 2, scope: !3195, file: !512, line: 1836, type: !230)
!3201 = !DILocation(line: 1836, column: 43, scope: !3195)
!3202 = !DILocalVariable(name: "buflen", arg: 3, scope: !3195, file: !512, line: 1836, type: !1458)
!3203 = !DILocation(line: 1836, column: 56, scope: !3195)
!3204 = !DILocalVariable(name: "hd", scope: !3195, file: !512, line: 1838, type: !206)
!3205 = !DILocation(line: 1838, column: 13, scope: !3195)
!3206 = !DILocalVariable(name: "ret", scope: !3195, file: !512, line: 1839, type: !1458)
!3207 = !DILocation(line: 1839, column: 10, scope: !3195)
!3208 = !DILocalVariable(name: "proto", scope: !3195, file: !512, line: 1840, type: !189)
!3209 = !DILocation(line: 1840, column: 11, scope: !3195)
!3210 = !DILocalVariable(name: "ah", scope: !3195, file: !512, line: 1842, type: !276)
!3211 = !DILocation(line: 1842, column: 14, scope: !3195)
!3212 = !DILocalVariable(name: "master_adver_int", scope: !3195, file: !512, line: 1844, type: !189)
!3213 = !DILocation(line: 1844, column: 11, scope: !3195)
!3214 = !DILocalVariable(name: "addr_cmp", scope: !3195, file: !512, line: 1845, type: !300)
!3215 = !DILocation(line: 1845, column: 6, scope: !3195)
!3216 = !DILocalVariable(name: "gvrrp", scope: !3195, file: !512, line: 1846, type: !537)
!3217 = !DILocation(line: 1846, column: 10, scope: !3195)
!3218 = !DILocalVariable(name: "e", scope: !3195, file: !512, line: 1847, type: !984)
!3219 = !DILocation(line: 1847, column: 10, scope: !3195)
!3220 = !DILocation(line: 1852, column: 6, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3195, file: !512, line: 1852, column: 6)
!3222 = !DILocation(line: 1852, column: 12, scope: !3221)
!3223 = !DILocation(line: 1852, column: 22, scope: !3221)
!3224 = !DILocation(line: 1852, column: 6, scope: !3195)
!3225 = !DILocation(line: 1853, column: 28, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3221, file: !512, line: 1852, column: 28)
!3227 = !DILocation(line: 1853, column: 34, scope: !3226)
!3228 = !DILocation(line: 1853, column: 3, scope: !3226)
!3229 = !DILocation(line: 1853, column: 9, scope: !3226)
!3230 = !DILocation(line: 1853, column: 26, scope: !3226)
!3231 = !DILocation(line: 1854, column: 29, scope: !3226)
!3232 = !DILocation(line: 1854, column: 35, scope: !3226)
!3233 = !DILocation(line: 1854, column: 27, scope: !3226)
!3234 = !DILocation(line: 1854, column: 56, scope: !3226)
!3235 = !DILocation(line: 1854, column: 63, scope: !3226)
!3236 = !DILocation(line: 1854, column: 71, scope: !3226)
!3237 = !DILocation(line: 1854, column: 55, scope: !3226)
!3238 = !DILocation(line: 1854, column: 87, scope: !3239)
!3239 = !DILexicalBlockFile(scope: !3226, file: !512, discriminator: 1)
!3240 = !DILocation(line: 1854, column: 94, scope: !3239)
!3241 = !DILocation(line: 1854, column: 86, scope: !3239)
!3242 = !DILocation(line: 1854, column: 85, scope: !3239)
!3243 = !DILocation(line: 1854, column: 118, scope: !3239)
!3244 = !DILocation(line: 1854, column: 125, scope: !3239)
!3245 = !DILocation(line: 1854, column: 142, scope: !3239)
!3246 = !DILocation(line: 1854, column: 114, scope: !3239)
!3247 = !DILocation(line: 1854, column: 152, scope: !3239)
!3248 = !DILocation(line: 1854, column: 160, scope: !3239)
!3249 = !DILocation(line: 1854, column: 55, scope: !3239)
!3250 = !DILocation(line: 1854, column: 177, scope: !3251)
!3251 = !DILexicalBlockFile(scope: !3226, file: !512, discriminator: 2)
!3252 = !DILocation(line: 1854, column: 184, scope: !3251)
!3253 = !DILocation(line: 1854, column: 176, scope: !3251)
!3254 = !DILocation(line: 1854, column: 175, scope: !3251)
!3255 = !DILocation(line: 1854, column: 204, scope: !3251)
!3256 = !DILocation(line: 1854, column: 214, scope: !3251)
!3257 = !DILocation(line: 1854, column: 55, scope: !3251)
!3258 = !DILocation(line: 1854, column: 55, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3226, file: !512, discriminator: 3)
!3260 = !DILocation(line: 1854, column: 52, scope: !3259)
!3261 = !DILocation(line: 1854, column: 3, scope: !3259)
!3262 = !DILocation(line: 1854, column: 9, scope: !3259)
!3263 = !DILocation(line: 1854, column: 23, scope: !3259)
!3264 = !DILocation(line: 1855, column: 3, scope: !3226)
!3265 = !DILocation(line: 1855, column: 9, scope: !3226)
!3266 = !DILocation(line: 1855, column: 15, scope: !3226)
!3267 = !DILocation(line: 1856, column: 26, scope: !3226)
!3268 = !DILocation(line: 1856, column: 3, scope: !3226)
!3269 = !DILocation(line: 1857, column: 3, scope: !3226)
!3270 = !DILocation(line: 1857, column: 9, scope: !3226)
!3271 = !DILocation(line: 1857, column: 27, scope: !3226)
!3272 = !DILocation(line: 1857, column: 27, scope: !3239)
!3273 = !DILocation(line: 1858, column: 3, scope: !3226)
!3274 = !DILocation(line: 1862, column: 23, scope: !3195)
!3275 = !DILocation(line: 1862, column: 29, scope: !3195)
!3276 = !DILocation(line: 1862, column: 37, scope: !3195)
!3277 = !DILocation(line: 1862, column: 7, scope: !3195)
!3278 = !DILocation(line: 1862, column: 5, scope: !3195)
!3279 = !DILocation(line: 1863, column: 26, scope: !3195)
!3280 = !DILocation(line: 1863, column: 32, scope: !3195)
!3281 = !DILocation(line: 1863, column: 37, scope: !3195)
!3282 = !DILocation(line: 1863, column: 8, scope: !3195)
!3283 = !DILocation(line: 1863, column: 6, scope: !3195)
!3284 = !DILocation(line: 1865, column: 6, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3195, file: !512, line: 1865, column: 6)
!3286 = !DILocation(line: 1865, column: 10, scope: !3285)
!3287 = !DILocation(line: 1865, column: 6, scope: !3195)
!3288 = !DILocation(line: 1866, column: 3, scope: !3285)
!3289 = !DILocation(line: 1868, column: 29, scope: !3195)
!3290 = !DILocation(line: 1868, column: 35, scope: !3195)
!3291 = !DILocation(line: 1868, column: 46, scope: !3195)
!3292 = !DILocation(line: 1868, column: 13, scope: !3195)
!3293 = !DILocation(line: 1868, column: 11, scope: !3195)
!3294 = !DILocation(line: 1870, column: 6, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3195, file: !512, line: 1870, column: 6)
!3296 = !DILocation(line: 1870, column: 10, scope: !3295)
!3297 = !DILocation(line: 1870, column: 19, scope: !3295)
!3298 = !DILocation(line: 1870, column: 24, scope: !3295)
!3299 = !DILocation(line: 1871, column: 7, scope: !3295)
!3300 = !DILocation(line: 1871, column: 13, scope: !3295)
!3301 = !DILocation(line: 1871, column: 37, scope: !3295)
!3302 = !DILocation(line: 1872, column: 8, scope: !3295)
!3303 = !DILocation(line: 1872, column: 12, scope: !3295)
!3304 = !DILocation(line: 1872, column: 23, scope: !3295)
!3305 = !DILocation(line: 1872, column: 29, scope: !3295)
!3306 = !DILocation(line: 1872, column: 21, scope: !3295)
!3307 = !DILocation(line: 1872, column: 48, scope: !3295)
!3308 = !DILocation(line: 1873, column: 9, scope: !3295)
!3309 = !DILocation(line: 1873, column: 13, scope: !3295)
!3310 = !DILocation(line: 1873, column: 25, scope: !3295)
!3311 = !DILocation(line: 1873, column: 31, scope: !3295)
!3312 = !DILocation(line: 1873, column: 22, scope: !3295)
!3313 = !DILocation(line: 1873, column: 50, scope: !3295)
!3314 = !DILocation(line: 1873, column: 53, scope: !3315)
!3315 = !DILexicalBlockFile(scope: !3295, file: !512, discriminator: 1)
!3316 = !DILocation(line: 1873, column: 62, scope: !3315)
!3317 = !DILocation(line: 1870, column: 6, scope: !3318)
!3318 = !DILexicalBlockFile(scope: !3195, file: !512, discriminator: 1)
!3319 = !DILocation(line: 1874, column: 84, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3295, file: !512, line: 1873, column: 70)
!3321 = !DILocation(line: 1874, column: 90, scope: !3320)
!3322 = !DILocation(line: 1874, column: 3, scope: !3320)
!3323 = !DILocation(line: 1875, column: 17, scope: !3320)
!3324 = !DILocation(line: 1875, column: 23, scope: !3320)
!3325 = !DILocation(line: 1875, column: 29, scope: !3320)
!3326 = !DILocation(line: 1875, column: 3, scope: !3320)
!3327 = !DILocation(line: 1877, column: 7, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3320, file: !512, line: 1877, column: 7)
!3329 = !DILocation(line: 1877, column: 11, scope: !3328)
!3330 = !DILocation(line: 1877, column: 20, scope: !3328)
!3331 = !DILocation(line: 1877, column: 7, scope: !3320)
!3332 = !DILocation(line: 1878, column: 4, scope: !3328)
!3333 = !DILocation(line: 1879, column: 2, scope: !3320)
!3334 = !DILocation(line: 1881, column: 6, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3195, file: !512, line: 1881, column: 6)
!3336 = !DILocation(line: 1881, column: 10, scope: !3335)
!3337 = !DILocation(line: 1881, column: 22, scope: !3335)
!3338 = !DILocation(line: 1881, column: 28, scope: !3335)
!3339 = !DILocation(line: 1881, column: 19, scope: !3335)
!3340 = !DILocation(line: 1881, column: 6, scope: !3195)
!3341 = !DILocation(line: 1882, column: 7, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3343, file: !512, line: 1882, column: 7)
!3343 = distinct !DILexicalBlock(scope: !3335, file: !512, line: 1881, column: 48)
!3344 = !DILocation(line: 1882, column: 16, scope: !3342)
!3345 = !DILocation(line: 1882, column: 7, scope: !3343)
!3346 = !DILocation(line: 1883, column: 112, scope: !3342)
!3347 = !DILocation(line: 1883, column: 118, scope: !3342)
!3348 = !DILocation(line: 1883, column: 4, scope: !3342)
!3349 = !DILocation(line: 1884, column: 12, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3342, file: !512, line: 1884, column: 12)
!3351 = !DILocation(line: 1884, column: 18, scope: !3350)
!3352 = !DILocation(line: 1884, column: 37, scope: !3350)
!3353 = !DILocation(line: 1884, column: 12, scope: !3342)
!3354 = !DILocation(line: 1888, column: 166, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3350, file: !512, line: 1884, column: 45)
!3356 = !DILocation(line: 1888, column: 172, scope: !3355)
!3357 = !DILocation(line: 1888, column: 4, scope: !3355)
!3358 = !DILocation(line: 1889, column: 4, scope: !3355)
!3359 = !DILocation(line: 1889, column: 10, scope: !3355)
!3360 = !DILocation(line: 1889, column: 29, scope: !3355)
!3361 = !DILocation(line: 1890, column: 4, scope: !3355)
!3362 = !DILocation(line: 1890, column: 10, scope: !3355)
!3363 = !DILocation(line: 1890, column: 24, scope: !3355)
!3364 = !DILocation(line: 1891, column: 3, scope: !3355)
!3365 = !DILocation(line: 1892, column: 2, scope: !3343)
!3366 = !DILocation(line: 1894, column: 6, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3195, file: !512, line: 1894, column: 6)
!3368 = !DILocation(line: 1894, column: 10, scope: !3367)
!3369 = !DILocation(line: 1894, column: 21, scope: !3367)
!3370 = !DILocation(line: 1894, column: 27, scope: !3367)
!3371 = !DILocation(line: 1894, column: 19, scope: !3367)
!3372 = !DILocation(line: 1894, column: 46, scope: !3367)
!3373 = !DILocation(line: 1895, column: 7, scope: !3367)
!3374 = !DILocation(line: 1895, column: 11, scope: !3367)
!3375 = !DILocation(line: 1895, column: 23, scope: !3367)
!3376 = !DILocation(line: 1895, column: 29, scope: !3367)
!3377 = !DILocation(line: 1895, column: 20, scope: !3367)
!3378 = !DILocation(line: 1895, column: 48, scope: !3367)
!3379 = !DILocation(line: 1896, column: 7, scope: !3367)
!3380 = !DILocation(line: 1896, column: 16, scope: !3367)
!3381 = !DILocation(line: 1894, column: 6, scope: !3318)
!3382 = !DILocation(line: 1899, column: 6, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3367, file: !512, line: 1896, column: 22)
!3384 = !DILocation(line: 1899, column: 12, scope: !3383)
!3385 = !DILocation(line: 1900, column: 24, scope: !3383)
!3386 = !DILocation(line: 1900, column: 30, scope: !3383)
!3387 = !DILocation(line: 1900, column: 6, scope: !3383)
!3388 = !DILocation(line: 1901, column: 6, scope: !3383)
!3389 = !DILocation(line: 1901, column: 10, scope: !3383)
!3390 = !DILocation(line: 1902, column: 6, scope: !3383)
!3391 = !DILocation(line: 1902, column: 12, scope: !3383)
!3392 = !DILocation(line: 1903, column: 7, scope: !3383)
!3393 = !DILocation(line: 1903, column: 13, scope: !3383)
!3394 = !DILocation(line: 1903, column: 6, scope: !3383)
!3395 = !DILocation(line: 1898, column: 3, scope: !3383)
!3396 = !DILocation(line: 1905, column: 7, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3383, file: !512, line: 1905, column: 7)
!3398 = !DILocation(line: 1905, column: 13, scope: !3397)
!3399 = !DILocation(line: 1905, column: 7, scope: !3383)
!3400 = !DILocation(line: 1906, column: 25, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3397, file: !512, line: 1905, column: 27)
!3402 = !DILocation(line: 1906, column: 29, scope: !3401)
!3403 = !DILocation(line: 1906, column: 9, scope: !3401)
!3404 = !DILocation(line: 1906, column: 7, scope: !3401)
!3405 = !DILocation(line: 1909, column: 12, scope: !3401)
!3406 = !DILocation(line: 1909, column: 18, scope: !3401)
!3407 = !DILocation(line: 1907, column: 4, scope: !3401)
!3408 = !DILocation(line: 1911, column: 45, scope: !3401)
!3409 = !DILocation(line: 1911, column: 49, scope: !3401)
!3410 = !DILocation(line: 1911, column: 39, scope: !3401)
!3411 = !DILocation(line: 1911, column: 61, scope: !3401)
!3412 = !DILocation(line: 1911, column: 4, scope: !3401)
!3413 = !DILocation(line: 1911, column: 10, scope: !3401)
!3414 = !DILocation(line: 1911, column: 26, scope: !3401)
!3415 = !DILocation(line: 1911, column: 37, scope: !3401)
!3416 = !DILocation(line: 1912, column: 4, scope: !3401)
!3417 = !DILocation(line: 1912, column: 10, scope: !3401)
!3418 = !DILocation(line: 1912, column: 26, scope: !3401)
!3419 = !DILocation(line: 1912, column: 32, scope: !3401)
!3420 = !DILocation(line: 1913, column: 3, scope: !3401)
!3421 = !DILocation(line: 1915, column: 8, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3383, file: !512, line: 1915, column: 7)
!3423 = !DILocation(line: 1915, column: 14, scope: !3422)
!3424 = !DILocation(line: 1915, column: 7, scope: !3383)
!3425 = !DILocation(line: 1916, column: 18, scope: !3422)
!3426 = !DILocation(line: 1916, column: 24, scope: !3422)
!3427 = !DILocation(line: 1916, column: 30, scope: !3422)
!3428 = !DILocation(line: 1916, column: 4, scope: !3422)
!3429 = !DILocation(line: 1917, column: 7, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3383, file: !512, line: 1917, column: 7)
!3431 = !DILocation(line: 1917, column: 13, scope: !3430)
!3432 = !DILocation(line: 1917, column: 7, scope: !3383)
!3433 = !DILocation(line: 1918, column: 26, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3430, file: !512, line: 1917, column: 34)
!3435 = !DILocation(line: 1918, column: 32, scope: !3434)
!3436 = !DILocation(line: 1918, column: 38, scope: !3434)
!3437 = !DILocation(line: 1918, column: 4, scope: !3434)
!3438 = !DILocation(line: 1919, column: 8, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3434, file: !512, line: 1919, column: 8)
!3440 = !DILocation(line: 1919, column: 14, scope: !3439)
!3441 = !DILocation(line: 1919, column: 8, scope: !3434)
!3442 = !DILocation(line: 1920, column: 22, scope: !3439)
!3443 = !DILocation(line: 1921, column: 8, scope: !3439)
!3444 = !DILocation(line: 1921, column: 14, scope: !3439)
!3445 = !DILocation(line: 1921, column: 20, scope: !3439)
!3446 = !DILocation(line: 1920, column: 5, scope: !3439)
!3447 = !DILocation(line: 1926, column: 8, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3434, file: !512, line: 1926, column: 8)
!3449 = !DILocation(line: 1926, column: 14, scope: !3448)
!3450 = !DILocation(line: 1926, column: 8, scope: !3434)
!3451 = !DILocation(line: 1927, column: 18, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !512, line: 1927, column: 5)
!3453 = distinct !DILexicalBlock(scope: !3448, file: !512, line: 1926, column: 20)
!3454 = !DILocation(line: 1927, column: 24, scope: !3452)
!3455 = !DILocation(line: 1927, column: 30, scope: !3452)
!3456 = !DILocation(line: 1927, column: 17, scope: !3452)
!3457 = !DILocation(line: 1927, column: 51, scope: !3458)
!3458 = !DILexicalBlockFile(scope: !3452, file: !512, discriminator: 1)
!3459 = !DILocation(line: 1927, column: 57, scope: !3458)
!3460 = !DILocation(line: 1927, column: 63, scope: !3458)
!3461 = !DILocation(line: 1927, column: 50, scope: !3458)
!3462 = !DILocation(line: 1927, column: 49, scope: !3458)
!3463 = !DILocation(line: 1927, column: 49, scope: !3464)
!3464 = !DILexicalBlockFile(scope: !3452, file: !512, discriminator: 2)
!3465 = !DILocation(line: 1927, column: 7, scope: !3466)
!3466 = !DILexicalBlockFile(scope: !3452, file: !512, discriminator: 3)
!3467 = !DILocation(line: 1927, column: 13, scope: !3466)
!3468 = !DILocation(line: 1927, column: 19, scope: !3466)
!3469 = !DILocation(line: 1927, column: 36, scope: !3466)
!3470 = !DILocation(line: 1927, column: 49, scope: !3466)
!3471 = !DILocation(line: 1927, column: 49, scope: !3472)
!3472 = !DILexicalBlockFile(scope: !3452, file: !512, discriminator: 4)
!3473 = !DILocation(line: 1927, column: 17, scope: !3472)
!3474 = !DILocation(line: 1927, column: 17, scope: !3475)
!3475 = !DILexicalBlockFile(scope: !3452, file: !512, discriminator: 5)
!3476 = !DILocation(line: 1927, column: 17, scope: !3477)
!3477 = !DILexicalBlockFile(scope: !3452, file: !512, discriminator: 6)
!3478 = !DILocation(line: 1927, column: 14, scope: !3477)
!3479 = !DILocation(line: 1927, column: 10, scope: !3477)
!3480 = !DILocation(line: 1927, column: 8, scope: !3481)
!3481 = !DILexicalBlockFile(scope: !3482, file: !512, discriminator: 7)
!3482 = distinct !DILexicalBlock(scope: !3452, file: !512, line: 1927, column: 5)
!3483 = !DILocation(line: 1927, column: 7, scope: !3481)
!3484 = !DILocation(line: 1927, column: 11, scope: !3481)
!3485 = !DILocation(line: 1927, column: 27, scope: !3486)
!3486 = !DILexicalBlockFile(scope: !3482, file: !512, discriminator: 8)
!3487 = !DILocation(line: 1927, column: 31, scope: !3486)
!3488 = !DILocation(line: 1927, column: 25, scope: !3486)
!3489 = !DILocation(line: 1927, column: 23, scope: !3486)
!3490 = !DILocation(line: 1927, column: 5, scope: !3491)
!3491 = !DILexicalBlockFile(scope: !3452, file: !512, discriminator: 9)
!3492 = !DILocation(line: 1928, column: 10, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !512, line: 1928, column: 10)
!3494 = distinct !DILexicalBlock(scope: !3482, file: !512, line: 1927, column: 61)
!3495 = !DILocation(line: 1928, column: 19, scope: !3493)
!3496 = !DILocation(line: 1928, column: 16, scope: !3493)
!3497 = !DILocation(line: 1928, column: 10, scope: !3494)
!3498 = !DILocation(line: 1929, column: 7, scope: !3493)
!3499 = !DILocation(line: 1930, column: 11, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3494, file: !512, line: 1930, column: 10)
!3501 = !DILocation(line: 1930, column: 18, scope: !3500)
!3502 = !DILocation(line: 1930, column: 10, scope: !3494)
!3503 = !DILocation(line: 1931, column: 7, scope: !3500)
!3504 = !DILocation(line: 1933, column: 28, scope: !3494)
!3505 = !DILocation(line: 1933, column: 35, scope: !3494)
!3506 = !DILocation(line: 1933, column: 42, scope: !3494)
!3507 = !DILocation(line: 1933, column: 6, scope: !3494)
!3508 = !DILocation(line: 1934, column: 10, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3494, file: !512, line: 1934, column: 10)
!3510 = !DILocation(line: 1934, column: 17, scope: !3509)
!3511 = !DILocation(line: 1934, column: 10, scope: !3494)
!3512 = !DILocation(line: 1935, column: 24, scope: !3509)
!3513 = !DILocation(line: 1936, column: 10, scope: !3509)
!3514 = !DILocation(line: 1936, column: 17, scope: !3509)
!3515 = !DILocation(line: 1936, column: 24, scope: !3509)
!3516 = !DILocation(line: 1935, column: 7, scope: !3509)
!3517 = !DILocation(line: 1937, column: 5, scope: !3494)
!3518 = !DILocation(line: 1927, column: 50, scope: !3519)
!3519 = !DILexicalBlockFile(scope: !3482, file: !512, discriminator: 10)
!3520 = !DILocation(line: 1927, column: 54, scope: !3519)
!3521 = !DILocation(line: 1927, column: 47, scope: !3519)
!3522 = !DILocation(line: 1927, column: 5, scope: !3519)
!3523 = distinct !{!3523, !3524}
!3524 = !DILocation(line: 1927, column: 5, scope: !3453)
!3525 = !DILocation(line: 1938, column: 4, scope: !3453)
!3526 = !DILocation(line: 1939, column: 3, scope: !3434)
!3527 = !DILocation(line: 1949, column: 21, scope: !3383)
!3528 = !DILocation(line: 1949, column: 3, scope: !3383)
!3529 = !DILocation(line: 1951, column: 3, scope: !3383)
!3530 = !DILocation(line: 1954, column: 6, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3195, file: !512, line: 1954, column: 6)
!3532 = !DILocation(line: 1954, column: 10, scope: !3531)
!3533 = !DILocation(line: 1954, column: 21, scope: !3531)
!3534 = !DILocation(line: 1954, column: 27, scope: !3531)
!3535 = !DILocation(line: 1954, column: 19, scope: !3531)
!3536 = !DILocation(line: 1954, column: 46, scope: !3531)
!3537 = !DILocation(line: 1955, column: 7, scope: !3531)
!3538 = !DILocation(line: 1955, column: 11, scope: !3531)
!3539 = !DILocation(line: 1955, column: 23, scope: !3531)
!3540 = !DILocation(line: 1955, column: 29, scope: !3531)
!3541 = !DILocation(line: 1955, column: 20, scope: !3531)
!3542 = !DILocation(line: 1955, column: 48, scope: !3531)
!3543 = !DILocation(line: 1955, column: 51, scope: !3544)
!3544 = !DILexicalBlockFile(scope: !3531, file: !512, discriminator: 1)
!3545 = !DILocation(line: 1955, column: 60, scope: !3544)
!3546 = !DILocation(line: 1954, column: 6, scope: !3318)
!3547 = !DILocation(line: 1956, column: 7, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !512, line: 1956, column: 7)
!3549 = distinct !DILexicalBlock(scope: !3531, file: !512, line: 1955, column: 66)
!3550 = !DILocation(line: 1956, column: 11, scope: !3548)
!3551 = !DILocation(line: 1956, column: 22, scope: !3548)
!3552 = !DILocation(line: 1956, column: 28, scope: !3548)
!3553 = !DILocation(line: 1956, column: 20, scope: !3548)
!3554 = !DILocation(line: 1956, column: 7, scope: !3549)
!3555 = !DILocation(line: 1958, column: 7, scope: !3548)
!3556 = !DILocation(line: 1958, column: 13, scope: !3548)
!3557 = !DILocation(line: 1959, column: 25, scope: !3548)
!3558 = !DILocation(line: 1959, column: 31, scope: !3548)
!3559 = !DILocation(line: 1959, column: 7, scope: !3548)
!3560 = !DILocation(line: 1960, column: 7, scope: !3548)
!3561 = !DILocation(line: 1960, column: 11, scope: !3548)
!3562 = !DILocation(line: 1961, column: 7, scope: !3548)
!3563 = !DILocation(line: 1961, column: 13, scope: !3548)
!3564 = !DILocation(line: 1957, column: 4, scope: !3548)
!3565 = !DILocation(line: 1964, column: 7, scope: !3548)
!3566 = !DILocation(line: 1964, column: 13, scope: !3548)
!3567 = !DILocation(line: 1965, column: 25, scope: !3548)
!3568 = !DILocation(line: 1965, column: 31, scope: !3548)
!3569 = !DILocation(line: 1965, column: 7, scope: !3548)
!3570 = !DILocation(line: 1966, column: 7, scope: !3548)
!3571 = !DILocation(line: 1966, column: 11, scope: !3548)
!3572 = !DILocation(line: 1963, column: 4, scope: !3548)
!3573 = !DILocation(line: 1968, column: 7, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3549, file: !512, line: 1968, column: 7)
!3575 = !DILocation(line: 1968, column: 13, scope: !3574)
!3576 = !DILocation(line: 1968, column: 7, scope: !3549)
!3577 = !DILocation(line: 1969, column: 25, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3574, file: !512, line: 1968, column: 27)
!3579 = !DILocation(line: 1969, column: 29, scope: !3578)
!3580 = !DILocation(line: 1969, column: 9, scope: !3578)
!3581 = !DILocation(line: 1969, column: 7, scope: !3578)
!3582 = !DILocation(line: 1970, column: 4, scope: !3578)
!3583 = !DILocation(line: 1970, column: 10, scope: !3578)
!3584 = !DILocation(line: 1970, column: 26, scope: !3578)
!3585 = !DILocation(line: 1970, column: 32, scope: !3578)
!3586 = !DILocation(line: 1971, column: 3, scope: !3578)
!3587 = !DILocation(line: 1974, column: 7, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3549, file: !512, line: 1974, column: 7)
!3589 = !DILocation(line: 1974, column: 13, scope: !3588)
!3590 = !DILocation(line: 1974, column: 21, scope: !3588)
!3591 = !DILocation(line: 1974, column: 7, scope: !3549)
!3592 = !DILocation(line: 1975, column: 30, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3588, file: !512, line: 1974, column: 27)
!3594 = !DILocation(line: 1975, column: 34, scope: !3593)
!3595 = !DILocation(line: 1975, column: 37, scope: !3593)
!3596 = !DILocation(line: 1975, column: 24, scope: !3593)
!3597 = !DILocation(line: 1975, column: 48, scope: !3593)
!3598 = !DILocation(line: 1975, column: 58, scope: !3593)
!3599 = !DILocation(line: 1975, column: 21, scope: !3593)
!3600 = !DILocation(line: 1979, column: 8, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3593, file: !512, line: 1979, column: 8)
!3602 = !DILocation(line: 1979, column: 14, scope: !3601)
!3603 = !DILocation(line: 1979, column: 34, scope: !3601)
!3604 = !DILocation(line: 1979, column: 31, scope: !3601)
!3605 = !DILocation(line: 1979, column: 8, scope: !3593)
!3606 = !DILocation(line: 1981, column: 7, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3601, file: !512, line: 1979, column: 52)
!3608 = !DILocation(line: 1981, column: 13, scope: !3607)
!3609 = !DILocation(line: 1981, column: 20, scope: !3607)
!3610 = !DILocation(line: 1981, column: 26, scope: !3607)
!3611 = !DILocation(line: 1981, column: 43, scope: !3607)
!3612 = !DILocation(line: 1981, column: 64, scope: !3607)
!3613 = !DILocation(line: 1981, column: 81, scope: !3607)
!3614 = !DILocation(line: 1980, column: 5, scope: !3607)
!3615 = !DILocation(line: 1982, column: 30, scope: !3607)
!3616 = !DILocation(line: 1982, column: 5, scope: !3607)
!3617 = !DILocation(line: 1982, column: 11, scope: !3607)
!3618 = !DILocation(line: 1982, column: 28, scope: !3607)
!3619 = !DILocation(line: 1983, column: 4, scope: !3607)
!3620 = !DILocation(line: 1984, column: 3, scope: !3593)
!3621 = !DILocation(line: 1985, column: 29, scope: !3549)
!3622 = !DILocation(line: 1985, column: 35, scope: !3549)
!3623 = !DILocation(line: 1985, column: 27, scope: !3549)
!3624 = !DILocation(line: 1985, column: 56, scope: !3549)
!3625 = !DILocation(line: 1985, column: 63, scope: !3549)
!3626 = !DILocation(line: 1985, column: 71, scope: !3549)
!3627 = !DILocation(line: 1985, column: 55, scope: !3549)
!3628 = !DILocation(line: 1985, column: 87, scope: !3629)
!3629 = !DILexicalBlockFile(scope: !3549, file: !512, discriminator: 1)
!3630 = !DILocation(line: 1985, column: 94, scope: !3629)
!3631 = !DILocation(line: 1985, column: 86, scope: !3629)
!3632 = !DILocation(line: 1985, column: 85, scope: !3629)
!3633 = !DILocation(line: 1985, column: 118, scope: !3629)
!3634 = !DILocation(line: 1985, column: 125, scope: !3629)
!3635 = !DILocation(line: 1985, column: 142, scope: !3629)
!3636 = !DILocation(line: 1985, column: 114, scope: !3629)
!3637 = !DILocation(line: 1985, column: 152, scope: !3629)
!3638 = !DILocation(line: 1985, column: 160, scope: !3629)
!3639 = !DILocation(line: 1985, column: 55, scope: !3629)
!3640 = !DILocation(line: 1985, column: 177, scope: !3641)
!3641 = !DILexicalBlockFile(scope: !3549, file: !512, discriminator: 2)
!3642 = !DILocation(line: 1985, column: 184, scope: !3641)
!3643 = !DILocation(line: 1985, column: 176, scope: !3641)
!3644 = !DILocation(line: 1985, column: 175, scope: !3641)
!3645 = !DILocation(line: 1985, column: 204, scope: !3641)
!3646 = !DILocation(line: 1985, column: 214, scope: !3641)
!3647 = !DILocation(line: 1985, column: 55, scope: !3641)
!3648 = !DILocation(line: 1985, column: 55, scope: !3649)
!3649 = !DILexicalBlockFile(scope: !3549, file: !512, discriminator: 3)
!3650 = !DILocation(line: 1985, column: 52, scope: !3649)
!3651 = !DILocation(line: 1985, column: 3, scope: !3649)
!3652 = !DILocation(line: 1985, column: 9, scope: !3649)
!3653 = !DILocation(line: 1985, column: 23, scope: !3649)
!3654 = !DILocation(line: 1986, column: 27, scope: !3549)
!3655 = !DILocation(line: 1986, column: 31, scope: !3549)
!3656 = !DILocation(line: 1986, column: 3, scope: !3549)
!3657 = !DILocation(line: 1986, column: 9, scope: !3549)
!3658 = !DILocation(line: 1986, column: 25, scope: !3549)
!3659 = !DILocation(line: 1987, column: 3, scope: !3549)
!3660 = !DILocation(line: 1987, column: 9, scope: !3549)
!3661 = !DILocation(line: 1987, column: 19, scope: !3549)
!3662 = !DILocation(line: 1988, column: 3, scope: !3549)
!3663 = !DILocation(line: 1988, column: 9, scope: !3549)
!3664 = !DILocation(line: 1988, column: 15, scope: !3549)
!3665 = !DILocation(line: 1989, column: 3, scope: !3549)
!3666 = !DILocation(line: 1992, column: 2, scope: !3195)
!3667 = !DILocation(line: 1993, column: 1, scope: !3195)
!3668 = distinct !DISubprogram(name: "vrrp_saddr_cmp", scope: !512, file: !512, line: 1805, type: !3669, isLocal: true, isDefinition: true, scopeLine: 1806, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!300, !981, !537}
!3671 = !DILocalVariable(name: "addr", arg: 1, scope: !3668, file: !512, line: 1805, type: !981)
!3672 = !DILocation(line: 1805, column: 41, scope: !3668)
!3673 = !DILocalVariable(name: "vrrp", arg: 2, scope: !3668, file: !512, line: 1805, type: !537)
!3674 = !DILocation(line: 1805, column: 55, scope: !3668)
!3675 = !DILocalVariable(name: "ifp", scope: !3668, file: !512, line: 1807, type: !338)
!3676 = !DILocation(line: 1807, column: 15, scope: !3668)
!3677 = !DILocation(line: 1807, column: 21, scope: !3668)
!3678 = !DILocation(line: 1807, column: 27, scope: !3668)
!3679 = !DILocation(line: 1810, column: 6, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3668, file: !512, line: 1810, column: 6)
!3681 = !DILocation(line: 1810, column: 12, scope: !3680)
!3682 = !DILocation(line: 1810, column: 18, scope: !3680)
!3683 = !DILocation(line: 1810, column: 28, scope: !3680)
!3684 = !DILocation(line: 1810, column: 31, scope: !3685)
!3685 = !DILexicalBlockFile(scope: !3680, file: !512, discriminator: 1)
!3686 = !DILocation(line: 1810, column: 37, scope: !3685)
!3687 = !DILocation(line: 1810, column: 50, scope: !3685)
!3688 = !DILocation(line: 1810, column: 56, scope: !3685)
!3689 = !DILocation(line: 1810, column: 62, scope: !3685)
!3690 = !DILocation(line: 1810, column: 47, scope: !3685)
!3691 = !DILocation(line: 1810, column: 6, scope: !3685)
!3692 = !DILocation(line: 1811, column: 3, scope: !3680)
!3693 = !DILocation(line: 1814, column: 6, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3668, file: !512, line: 1814, column: 6)
!3695 = !DILocation(line: 1814, column: 12, scope: !3694)
!3696 = !DILocation(line: 1814, column: 18, scope: !3694)
!3697 = !DILocation(line: 1814, column: 6, scope: !3668)
!3698 = !DILocation(line: 1815, column: 27, scope: !3694)
!3699 = !DILocation(line: 1815, column: 34, scope: !3694)
!3700 = !DILocation(line: 1815, column: 40, scope: !3694)
!3701 = !DILocation(line: 1815, column: 10, scope: !3694)
!3702 = !DILocation(line: 1815, column: 3, scope: !3694)
!3703 = !DILocation(line: 1818, column: 6, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3668, file: !512, line: 1818, column: 6)
!3705 = !DILocation(line: 1818, column: 12, scope: !3704)
!3706 = !DILocation(line: 1818, column: 22, scope: !3704)
!3707 = !DILocation(line: 1818, column: 6, scope: !3668)
!3708 = !DILocation(line: 1819, column: 25, scope: !3704)
!3709 = !DILocation(line: 1819, column: 31, scope: !3704)
!3710 = !DILocation(line: 1820, column: 36, scope: !3704)
!3711 = !DILocation(line: 1820, column: 43, scope: !3704)
!3712 = !DILocation(line: 1820, column: 11, scope: !3704)
!3713 = !DILocation(line: 1821, column: 12, scope: !3704)
!3714 = !DILocation(line: 1821, column: 17, scope: !3704)
!3715 = !DILocation(line: 1821, column: 11, scope: !3704)
!3716 = !DILocation(line: 1819, column: 10, scope: !3704)
!3717 = !DILocation(line: 1819, column: 3, scope: !3704)
!3718 = !DILocation(line: 1822, column: 6, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3668, file: !512, line: 1822, column: 6)
!3720 = !DILocation(line: 1822, column: 12, scope: !3719)
!3721 = !DILocation(line: 1822, column: 22, scope: !3719)
!3722 = !DILocation(line: 1822, column: 6, scope: !3668)
!3723 = !DILocation(line: 1823, column: 25, scope: !3719)
!3724 = !DILocation(line: 1823, column: 31, scope: !3719)
!3725 = !DILocation(line: 1824, column: 37, scope: !3719)
!3726 = !DILocation(line: 1824, column: 44, scope: !3719)
!3727 = !DILocation(line: 1824, column: 11, scope: !3719)
!3728 = !DILocation(line: 1825, column: 12, scope: !3719)
!3729 = !DILocation(line: 1825, column: 17, scope: !3719)
!3730 = !DILocation(line: 1825, column: 11, scope: !3719)
!3731 = !DILocation(line: 1823, column: 10, scope: !3719)
!3732 = !DILocation(line: 1823, column: 3, scope: !3719)
!3733 = !DILocation(line: 1826, column: 2, scope: !3668)
!3734 = !DILocation(line: 1827, column: 1, scope: !3668)
!3735 = distinct !DISubprogram(name: "vrrp_state_fault_rx", scope: !512, file: !512, line: 1996, type: !3196, isLocal: false, isDefinition: true, scopeLine: 1997, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!3736 = !DILocalVariable(name: "vrrp", arg: 1, scope: !3735, file: !512, line: 1996, type: !537)
!3737 = !DILocation(line: 1996, column: 30, scope: !3735)
!3738 = !DILocalVariable(name: "buf", arg: 2, scope: !3735, file: !512, line: 1996, type: !230)
!3739 = !DILocation(line: 1996, column: 42, scope: !3735)
!3740 = !DILocalVariable(name: "buflen", arg: 3, scope: !3735, file: !512, line: 1996, type: !1458)
!3741 = !DILocation(line: 1996, column: 55, scope: !3735)
!3742 = !DILocalVariable(name: "hd", scope: !3735, file: !512, line: 1998, type: !206)
!3743 = !DILocation(line: 1998, column: 13, scope: !3735)
!3744 = !DILocalVariable(name: "ret", scope: !3735, file: !512, line: 1999, type: !1458)
!3745 = !DILocation(line: 1999, column: 10, scope: !3735)
!3746 = !DILocalVariable(name: "proto", scope: !3735, file: !512, line: 2000, type: !189)
!3747 = !DILocation(line: 2000, column: 11, scope: !3735)
!3748 = !DILocation(line: 2003, column: 23, scope: !3735)
!3749 = !DILocation(line: 2003, column: 29, scope: !3735)
!3750 = !DILocation(line: 2003, column: 37, scope: !3735)
!3751 = !DILocation(line: 2003, column: 7, scope: !3735)
!3752 = !DILocation(line: 2003, column: 5, scope: !3735)
!3753 = !DILocation(line: 2004, column: 26, scope: !3735)
!3754 = !DILocation(line: 2004, column: 32, scope: !3735)
!3755 = !DILocation(line: 2004, column: 37, scope: !3735)
!3756 = !DILocation(line: 2004, column: 8, scope: !3735)
!3757 = !DILocation(line: 2004, column: 6, scope: !3735)
!3758 = !DILocation(line: 2006, column: 6, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3735, file: !512, line: 2006, column: 6)
!3760 = !DILocation(line: 2006, column: 10, scope: !3759)
!3761 = !DILocation(line: 2006, column: 6, scope: !3735)
!3762 = !DILocation(line: 2007, column: 3, scope: !3759)
!3763 = !DILocation(line: 2009, column: 6, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3735, file: !512, line: 2009, column: 6)
!3765 = !DILocation(line: 2009, column: 12, scope: !3764)
!3766 = !DILocation(line: 2009, column: 26, scope: !3764)
!3767 = !DILocation(line: 2009, column: 33, scope: !3764)
!3768 = !DILocation(line: 2010, column: 7, scope: !3764)
!3769 = !DILocation(line: 2010, column: 13, scope: !3764)
!3770 = !DILocation(line: 2010, column: 34, scope: !3764)
!3771 = !DILocation(line: 2010, column: 38, scope: !3764)
!3772 = !DILocation(line: 2010, column: 32, scope: !3764)
!3773 = !DILocation(line: 2010, column: 47, scope: !3764)
!3774 = !DILocation(line: 2010, column: 51, scope: !3775)
!3775 = !DILexicalBlockFile(scope: !3764, file: !512, discriminator: 1)
!3776 = !DILocation(line: 2010, column: 57, scope: !3775)
!3777 = !DILocation(line: 2009, column: 6, scope: !3778)
!3778 = !DILexicalBlockFile(scope: !3735, file: !512, discriminator: 1)
!3779 = !DILocation(line: 2011, column: 3, scope: !3764)
!3780 = !DILocation(line: 2013, column: 2, scope: !3735)
!3781 = !DILocation(line: 2014, column: 1, scope: !3735)
!3782 = distinct !DISubprogram(name: "add_vrrp_to_interface", scope: !512, file: !512, line: 2023, type: !3783, isLocal: false, isDefinition: true, scopeLine: 2024, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{null, !537, !338, !300, !350, !3785}
!3785 = !DIDerivedType(tag: DW_TAG_typedef, name: "track_t", file: !96, line: 129, baseType: !95)
!3786 = !DILocalVariable(name: "vrrp", arg: 1, scope: !3782, file: !512, line: 2023, type: !537)
!3787 = !DILocation(line: 2023, column: 31, scope: !3782)
!3788 = !DILocalVariable(name: "ifp", arg: 2, scope: !3782, file: !512, line: 2023, type: !338)
!3789 = !DILocation(line: 2023, column: 50, scope: !3782)
!3790 = !DILocalVariable(name: "weight", arg: 3, scope: !3782, file: !512, line: 2023, type: !300)
!3791 = !DILocation(line: 2023, column: 59, scope: !3782)
!3792 = !DILocalVariable(name: "log_addr", arg: 4, scope: !3782, file: !512, line: 2023, type: !350)
!3793 = !DILocation(line: 2023, column: 71, scope: !3782)
!3794 = !DILocalVariable(name: "type", arg: 5, scope: !3782, file: !512, line: 2023, type: !3785)
!3795 = !DILocation(line: 2023, column: 89, scope: !3782)
!3796 = !DILocalVariable(name: "etvp", scope: !3782, file: !512, line: 2025, type: !3797)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64, align: 64)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "tracking_vrrp_t", file: !96, line: 136, baseType: !3799)
!3799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_tracking_vrrp", file: !96, line: 132, size: 192, align: 64, elements: !3800)
!3800 = !{!3801, !3802, !3804}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3799, file: !96, line: 133, baseType: !300, size: 32, align: 32)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "vrrp", scope: !3799, file: !96, line: 134, baseType: !3803, size: 64, align: 64, offset: 64)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64, align: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3799, file: !96, line: 135, baseType: !3785, size: 32, align: 32, offset: 128)
!3805 = !DILocation(line: 2025, column: 19, scope: !3782)
!3806 = !DILocalVariable(name: "e", scope: !3782, file: !512, line: 2026, type: !984)
!3807 = !DILocation(line: 2026, column: 10, scope: !3782)
!3808 = !DILocalVariable(name: "addr_str", scope: !3782, file: !512, line: 2027, type: !1749)
!3809 = !DILocation(line: 2027, column: 7, scope: !3782)
!3810 = !DILocation(line: 2029, column: 9, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3782, file: !512, line: 2029, column: 6)
!3812 = !DILocation(line: 2029, column: 14, scope: !3811)
!3813 = !DILocation(line: 2029, column: 29, scope: !3811)
!3814 = !DILocation(line: 2029, column: 6, scope: !3782)
!3815 = !DILocation(line: 2030, column: 24, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3811, file: !512, line: 2029, column: 9)
!3817 = !DILocation(line: 2030, column: 3, scope: !3816)
!3818 = !DILocation(line: 2030, column: 8, scope: !3816)
!3819 = !DILocation(line: 2030, column: 22, scope: !3816)
!3820 = !DILocation(line: 2032, column: 7, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3816, file: !512, line: 2032, column: 7)
!3822 = !DILocation(line: 2032, column: 16, scope: !3821)
!3823 = !DILocation(line: 2032, column: 19, scope: !3824)
!3824 = !DILexicalBlockFile(scope: !3821, file: !512, discriminator: 1)
!3825 = !DILocation(line: 2032, column: 7, scope: !3824)
!3826 = !DILocation(line: 2033, column: 8, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !512, line: 2033, column: 8)
!3828 = distinct !DILexicalBlock(scope: !3821, file: !512, line: 2032, column: 55)
!3829 = !DILocation(line: 2033, column: 13, scope: !3827)
!3830 = !DILocation(line: 2033, column: 22, scope: !3827)
!3831 = !DILocation(line: 2033, column: 8, scope: !3828)
!3832 = !DILocation(line: 2034, column: 24, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3827, file: !512, line: 2033, column: 30)
!3834 = !DILocation(line: 2034, column: 29, scope: !3833)
!3835 = !DILocation(line: 2034, column: 23, scope: !3833)
!3836 = !DILocation(line: 2034, column: 39, scope: !3833)
!3837 = !DILocation(line: 2034, column: 5, scope: !3833)
!3838 = !DILocation(line: 2036, column: 13, scope: !3833)
!3839 = !DILocation(line: 2036, column: 23, scope: !3833)
!3840 = !DILocation(line: 2036, column: 28, scope: !3833)
!3841 = !DILocation(line: 2035, column: 5, scope: !3833)
!3842 = !DILocation(line: 2037, column: 4, scope: !3833)
!3843 = !DILocation(line: 2038, column: 8, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3828, file: !512, line: 2038, column: 8)
!3845 = !DILocation(line: 2038, column: 13, scope: !3844)
!3846 = !DILocation(line: 2038, column: 22, scope: !3844)
!3847 = !DILocation(line: 2038, column: 30, scope: !3844)
!3848 = !DILocation(line: 2038, column: 8, scope: !3828)
!3849 = !DILocation(line: 2039, column: 25, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3844, file: !512, line: 2038, column: 36)
!3851 = !DILocation(line: 2039, column: 30, scope: !3850)
!3852 = !DILocation(line: 2039, column: 24, scope: !3850)
!3853 = !DILocation(line: 2039, column: 41, scope: !3850)
!3854 = !DILocation(line: 2039, column: 5, scope: !3850)
!3855 = !DILocation(line: 2041, column: 13, scope: !3850)
!3856 = !DILocation(line: 2041, column: 23, scope: !3850)
!3857 = !DILocation(line: 2041, column: 28, scope: !3850)
!3858 = !DILocation(line: 2040, column: 5, scope: !3850)
!3859 = !DILocation(line: 2042, column: 4, scope: !3850)
!3860 = !DILocation(line: 2043, column: 3, scope: !3828)
!3861 = !DILocation(line: 2044, column: 2, scope: !3816)
!3862 = !DILocation(line: 2047, column: 16, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !512, line: 2047, column: 3)
!3864 = distinct !DILexicalBlock(scope: !3811, file: !512, line: 2045, column: 7)
!3865 = !DILocation(line: 2047, column: 21, scope: !3863)
!3866 = !DILocation(line: 2047, column: 15, scope: !3863)
!3867 = !DILocation(line: 2047, column: 41, scope: !3868)
!3868 = !DILexicalBlockFile(scope: !3863, file: !512, discriminator: 1)
!3869 = !DILocation(line: 2047, column: 46, scope: !3868)
!3870 = !DILocation(line: 2047, column: 40, scope: !3868)
!3871 = !DILocation(line: 2047, column: 39, scope: !3868)
!3872 = !DILocation(line: 2047, column: 39, scope: !3873)
!3873 = !DILexicalBlockFile(scope: !3863, file: !512, discriminator: 2)
!3874 = !DILocation(line: 2047, column: 5, scope: !3875)
!3875 = !DILexicalBlockFile(scope: !3863, file: !512, discriminator: 3)
!3876 = !DILocation(line: 2047, column: 10, scope: !3875)
!3877 = !DILocation(line: 2047, column: 26, scope: !3875)
!3878 = !DILocation(line: 2047, column: 39, scope: !3875)
!3879 = !DILocation(line: 2047, column: 39, scope: !3880)
!3880 = !DILexicalBlockFile(scope: !3863, file: !512, discriminator: 4)
!3881 = !DILocation(line: 2047, column: 15, scope: !3880)
!3882 = !DILocation(line: 2047, column: 15, scope: !3883)
!3883 = !DILexicalBlockFile(scope: !3863, file: !512, discriminator: 5)
!3884 = !DILocation(line: 2047, column: 15, scope: !3885)
!3885 = !DILexicalBlockFile(scope: !3863, file: !512, discriminator: 6)
!3886 = !DILocation(line: 2047, column: 12, scope: !3885)
!3887 = !DILocation(line: 2047, column: 8, scope: !3885)
!3888 = !DILocation(line: 2047, column: 6, scope: !3889)
!3889 = !DILexicalBlockFile(scope: !3890, file: !512, discriminator: 7)
!3890 = distinct !DILexicalBlock(scope: !3863, file: !512, line: 2047, column: 3)
!3891 = !DILocation(line: 2047, column: 5, scope: !3889)
!3892 = !DILocation(line: 2047, column: 9, scope: !3889)
!3893 = !DILocation(line: 2047, column: 24, scope: !3894)
!3894 = !DILexicalBlockFile(scope: !3890, file: !512, discriminator: 8)
!3895 = !DILocation(line: 2047, column: 28, scope: !3894)
!3896 = !DILocation(line: 2047, column: 22, scope: !3894)
!3897 = !DILocation(line: 2047, column: 20, scope: !3894)
!3898 = !DILocation(line: 2047, column: 3, scope: !3899)
!3899 = !DILexicalBlockFile(scope: !3863, file: !512, discriminator: 9)
!3900 = !DILocation(line: 2048, column: 8, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !512, line: 2048, column: 8)
!3902 = distinct !DILexicalBlock(scope: !3890, file: !512, line: 2047, column: 58)
!3903 = !DILocation(line: 2048, column: 14, scope: !3901)
!3904 = !DILocation(line: 2048, column: 22, scope: !3901)
!3905 = !DILocation(line: 2048, column: 19, scope: !3901)
!3906 = !DILocation(line: 2048, column: 8, scope: !3902)
!3907 = !DILocation(line: 2049, column: 9, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !512, line: 2049, column: 9)
!3909 = distinct !DILexicalBlock(scope: !3901, file: !512, line: 2048, column: 28)
!3910 = !DILocation(line: 2049, column: 15, scope: !3908)
!3911 = !DILocation(line: 2049, column: 20, scope: !3908)
!3912 = !DILocation(line: 2049, column: 57, scope: !3908)
!3913 = !DILocation(line: 2050, column: 9, scope: !3908)
!3914 = !DILocation(line: 2050, column: 14, scope: !3908)
!3915 = !DILocation(line: 2050, column: 28, scope: !3908)
!3916 = !DILocation(line: 2050, column: 31, scope: !3917)
!3917 = !DILexicalBlockFile(scope: !3908, file: !512, discriminator: 1)
!3918 = !DILocation(line: 2050, column: 36, scope: !3917)
!3919 = !DILocation(line: 2050, column: 48, scope: !3917)
!3920 = !DILocation(line: 2050, column: 51, scope: !3921)
!3921 = !DILexicalBlockFile(scope: !3908, file: !512, discriminator: 2)
!3922 = !DILocation(line: 2050, column: 56, scope: !3921)
!3923 = !DILocation(line: 2049, column: 9, scope: !3924)
!3924 = !DILexicalBlockFile(scope: !3909, file: !512, discriminator: 1)
!3925 = !DILocation(line: 2052, column: 8, scope: !3908)
!3926 = !DILocation(line: 2052, column: 14, scope: !3908)
!3927 = !DILocation(line: 2052, column: 21, scope: !3908)
!3928 = !DILocation(line: 2052, column: 26, scope: !3908)
!3929 = !DILocation(line: 2051, column: 6, scope: !3908)
!3930 = !DILocation(line: 2056, column: 9, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3909, file: !512, line: 2056, column: 9)
!3932 = !DILocation(line: 2056, column: 15, scope: !3931)
!3933 = !DILocation(line: 2056, column: 22, scope: !3931)
!3934 = !DILocation(line: 2056, column: 25, scope: !3935)
!3935 = !DILexicalBlockFile(scope: !3931, file: !512, discriminator: 1)
!3936 = !DILocation(line: 2056, column: 32, scope: !3935)
!3937 = !DILocation(line: 2056, column: 9, scope: !3935)
!3938 = !DILocation(line: 2057, column: 21, scope: !3931)
!3939 = !DILocation(line: 2057, column: 6, scope: !3931)
!3940 = !DILocation(line: 2057, column: 12, scope: !3931)
!3941 = !DILocation(line: 2057, column: 19, scope: !3931)
!3942 = !DILocation(line: 2059, column: 19, scope: !3909)
!3943 = !DILocation(line: 2059, column: 5, scope: !3909)
!3944 = !DILocation(line: 2059, column: 11, scope: !3909)
!3945 = !DILocation(line: 2059, column: 16, scope: !3909)
!3946 = !DILocation(line: 2061, column: 5, scope: !3909)
!3947 = !DILocation(line: 2063, column: 3, scope: !3902)
!3948 = !DILocation(line: 2047, column: 47, scope: !3949)
!3949 = !DILexicalBlockFile(scope: !3890, file: !512, discriminator: 10)
!3950 = !DILocation(line: 2047, column: 51, scope: !3949)
!3951 = !DILocation(line: 2047, column: 44, scope: !3949)
!3952 = !DILocation(line: 2047, column: 3, scope: !3949)
!3953 = distinct !{!3953, !3954}
!3954 = !DILocation(line: 2047, column: 3, scope: !3864)
!3955 = !DILocation(line: 2067, column: 10, scope: !3782)
!3956 = !DILocation(line: 2067, column: 9, scope: !3782)
!3957 = !DILocation(line: 2067, column: 7, scope: !3782)
!3958 = !DILocation(line: 2068, column: 15, scope: !3782)
!3959 = !DILocation(line: 2068, column: 2, scope: !3782)
!3960 = !DILocation(line: 2068, column: 8, scope: !3782)
!3961 = !DILocation(line: 2068, column: 13, scope: !3782)
!3962 = !DILocation(line: 2069, column: 17, scope: !3782)
!3963 = !DILocation(line: 2069, column: 2, scope: !3782)
!3964 = !DILocation(line: 2069, column: 8, scope: !3782)
!3965 = !DILocation(line: 2069, column: 15, scope: !3782)
!3966 = !DILocation(line: 2070, column: 15, scope: !3782)
!3967 = !DILocation(line: 2070, column: 2, scope: !3782)
!3968 = !DILocation(line: 2070, column: 8, scope: !3782)
!3969 = !DILocation(line: 2070, column: 13, scope: !3782)
!3970 = !DILocation(line: 2072, column: 11, scope: !3782)
!3971 = !DILocation(line: 2072, column: 16, scope: !3782)
!3972 = !DILocation(line: 2072, column: 31, scope: !3782)
!3973 = !DILocation(line: 2072, column: 2, scope: !3782)
!3974 = !DILocation(line: 2076, column: 1, scope: !3782)
!3975 = !DILocation(line: 2076, column: 1, scope: !3976)
!3976 = !DILexicalBlockFile(scope: !3782, file: !512, discriminator: 1)
!3977 = distinct !DISubprogram(name: "free_tracking_vrrp", scope: !512, file: !512, line: 2017, type: !416, isLocal: true, isDefinition: true, scopeLine: 2018, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!3978 = !DILocalVariable(name: "data", arg: 1, scope: !3977, file: !512, line: 2017, type: !232)
!3979 = !DILocation(line: 2017, column: 26, scope: !3977)
!3980 = !DILocation(line: 2019, column: 8, scope: !3977)
!3981 = !DILocation(line: 2019, column: 3, scope: !3977)
!3982 = !DILocation(line: 2019, column: 22, scope: !3977)
!3983 = !DILocation(line: 2020, column: 1, scope: !3977)
!3984 = distinct !DISubprogram(name: "open_vrrp_send_socket", scope: !512, file: !512, line: 2096, type: !3985, isLocal: false, isDefinition: true, scopeLine: 2097, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!300, !237, !300, !338, !350}
!3987 = !DILocalVariable(name: "family", arg: 1, scope: !3984, file: !512, line: 2096, type: !237)
!3988 = !DILocation(line: 2096, column: 35, scope: !3984)
!3989 = !DILocalVariable(name: "proto", arg: 2, scope: !3984, file: !512, line: 2096, type: !300)
!3990 = !DILocation(line: 2096, column: 47, scope: !3984)
!3991 = !DILocalVariable(name: "ifp", arg: 3, scope: !3984, file: !512, line: 2096, type: !338)
!3992 = !DILocation(line: 2096, column: 67, scope: !3984)
!3993 = !DILocalVariable(name: "unicast", arg: 4, scope: !3984, file: !512, line: 2096, type: !350)
!3994 = !DILocation(line: 2096, column: 76, scope: !3984)
!3995 = !DILocalVariable(name: "fd", scope: !3984, file: !512, line: 2098, type: !300)
!3996 = !DILocation(line: 2098, column: 6, scope: !3984)
!3997 = !DILocalVariable(name: "val", scope: !3984, file: !512, line: 2099, type: !300)
!3998 = !DILocation(line: 2099, column: 6, scope: !3984)
!3999 = !DILocalVariable(name: "len", scope: !3984, file: !512, line: 2100, type: !1473)
!4000 = !DILocation(line: 2100, column: 12, scope: !3984)
!4001 = !DILocation(line: 2102, column: 6, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3984, file: !512, line: 2102, column: 6)
!4003 = !DILocation(line: 2102, column: 13, scope: !4002)
!4004 = !DILocation(line: 2102, column: 23, scope: !4002)
!4005 = !DILocation(line: 2102, column: 26, scope: !4006)
!4006 = !DILexicalBlockFile(scope: !4002, file: !512, discriminator: 1)
!4007 = !DILocation(line: 2102, column: 33, scope: !4006)
!4008 = !DILocation(line: 2102, column: 6, scope: !4006)
!4009 = !DILocation(line: 2104, column: 11, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4002, file: !512, line: 2102, column: 46)
!4011 = !DILocation(line: 2103, column: 3, scope: !4010)
!4012 = !DILocation(line: 2105, column: 3, scope: !4010)
!4013 = !DILocation(line: 2109, column: 14, scope: !3984)
!4014 = !DILocation(line: 2109, column: 46, scope: !3984)
!4015 = !DILocation(line: 2109, column: 7, scope: !3984)
!4016 = !DILocation(line: 2109, column: 5, scope: !3984)
!4017 = !DILocation(line: 2110, column: 6, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3984, file: !512, line: 2110, column: 6)
!4019 = !DILocation(line: 2110, column: 9, scope: !4018)
!4020 = !DILocation(line: 2110, column: 6, scope: !3984)
!4021 = !DILocation(line: 2111, column: 60, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4018, file: !512, line: 2110, column: 14)
!4023 = !DILocation(line: 2111, column: 59, scope: !4022)
!4024 = !DILocation(line: 2111, column: 3, scope: !4025)
!4025 = !DILexicalBlockFile(scope: !4022, file: !512, discriminator: 1)
!4026 = !DILocation(line: 2112, column: 3, scope: !4022)
!4027 = !DILocation(line: 2120, column: 17, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !3984, file: !512, line: 2120, column: 6)
!4029 = !DILocation(line: 2120, column: 43, scope: !4028)
!4030 = !DILocation(line: 2120, column: 49, scope: !4028)
!4031 = !DILocation(line: 2120, column: 6, scope: !4028)
!4032 = !DILocation(line: 2120, column: 6, scope: !3984)
!4033 = !DILocation(line: 2121, column: 71, scope: !4028)
!4034 = !DILocation(line: 2121, column: 70, scope: !4028)
!4035 = !DILocation(line: 2121, column: 3, scope: !4036)
!4036 = !DILexicalBlockFile(scope: !4028, file: !512, discriminator: 1)
!4037 = !DILocation(line: 2121, column: 3, scope: !4028)
!4038 = !DILocation(line: 2123, column: 6, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !3984, file: !512, line: 2123, column: 6)
!4040 = !DILocation(line: 2123, column: 13, scope: !4039)
!4041 = !DILocation(line: 2123, column: 6, scope: !3984)
!4042 = !DILocation(line: 2130, column: 27, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4039, file: !512, line: 2123, column: 24)
!4044 = !DILocation(line: 2130, column: 3, scope: !4043)
!4045 = !DILocation(line: 2132, column: 3, scope: !4043)
!4046 = !DILocation(line: 2133, column: 7, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4043, file: !512, line: 2133, column: 7)
!4048 = !DILocation(line: 2133, column: 7, scope: !4043)
!4049 = !DILocation(line: 2134, column: 36, scope: !4047)
!4050 = !DILocation(line: 2134, column: 4, scope: !4047)
!4051 = !DILocation(line: 2135, column: 2, scope: !4043)
!4052 = !DILocation(line: 2135, column: 13, scope: !4053)
!4053 = !DILexicalBlockFile(scope: !4054, file: !512, discriminator: 1)
!4054 = distinct !DILexicalBlock(scope: !4039, file: !512, line: 2135, column: 13)
!4055 = !DILocation(line: 2135, column: 20, scope: !4053)
!4056 = !DILocation(line: 2137, column: 3, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4054, file: !512, line: 2135, column: 32)
!4058 = !DILocation(line: 2138, column: 8, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4057, file: !512, line: 2138, column: 7)
!4060 = !DILocation(line: 2138, column: 7, scope: !4057)
!4061 = !DILocation(line: 2139, column: 29, scope: !4059)
!4062 = !DILocation(line: 2139, column: 4, scope: !4059)
!4063 = !DILocation(line: 2140, column: 2, scope: !4057)
!4064 = !DILocation(line: 2142, column: 7, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !3984, file: !512, line: 2142, column: 6)
!4066 = !DILocation(line: 2142, column: 6, scope: !3984)
!4067 = !DILocation(line: 2143, column: 26, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4065, file: !512, line: 2142, column: 16)
!4069 = !DILocation(line: 2143, column: 39, scope: !4068)
!4070 = !DILocation(line: 2143, column: 3, scope: !4068)
!4071 = !DILocation(line: 2144, column: 28, scope: !4068)
!4072 = !DILocation(line: 2144, column: 3, scope: !4068)
!4073 = !DILocation(line: 2145, column: 2, scope: !4068)
!4074 = !DILocation(line: 2147, column: 30, scope: !3984)
!4075 = !DILocation(line: 2147, column: 2, scope: !3984)
!4076 = !DILocation(line: 2149, column: 2, scope: !3984)
!4077 = !DILocation(line: 2151, column: 6, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !3984, file: !512, line: 2151, column: 6)
!4079 = !DILocation(line: 2151, column: 9, scope: !4078)
!4080 = !DILocation(line: 2151, column: 6, scope: !3984)
!4081 = !DILocation(line: 2152, column: 3, scope: !4078)
!4082 = !DILocation(line: 2154, column: 9, scope: !3984)
!4083 = !DILocation(line: 2154, column: 2, scope: !3984)
!4084 = !DILocation(line: 2155, column: 1, scope: !3984)
!4085 = distinct !DISubprogram(name: "open_vrrp_read_socket", scope: !512, file: !512, line: 2159, type: !4086, isLocal: false, isDefinition: true, scopeLine: 2160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!300, !237, !300, !338, !350, !300}
!4088 = !DILocalVariable(name: "family", arg: 1, scope: !4085, file: !512, line: 2159, type: !237)
!4089 = !DILocation(line: 2159, column: 35, scope: !4085)
!4090 = !DILocalVariable(name: "proto", arg: 2, scope: !4085, file: !512, line: 2159, type: !300)
!4091 = !DILocation(line: 2159, column: 47, scope: !4085)
!4092 = !DILocalVariable(name: "ifp", arg: 3, scope: !4085, file: !512, line: 2159, type: !338)
!4093 = !DILocation(line: 2159, column: 67, scope: !4085)
!4094 = !DILocalVariable(name: "unicast", arg: 4, scope: !4085, file: !512, line: 2159, type: !350)
!4095 = !DILocation(line: 2159, column: 76, scope: !4085)
!4096 = !DILocalVariable(name: "rx_buf_size", arg: 5, scope: !4085, file: !512, line: 2159, type: !300)
!4097 = !DILocation(line: 2159, column: 89, scope: !4085)
!4098 = !DILocalVariable(name: "fd", scope: !4085, file: !512, line: 2161, type: !300)
!4099 = !DILocation(line: 2161, column: 6, scope: !4085)
!4100 = !DILocalVariable(name: "val", scope: !4085, file: !512, line: 2162, type: !300)
!4101 = !DILocation(line: 2162, column: 6, scope: !4085)
!4102 = !DILocation(line: 2162, column: 12, scope: !4085)
!4103 = !DILocalVariable(name: "len", scope: !4085, file: !512, line: 2163, type: !1473)
!4104 = !DILocation(line: 2163, column: 12, scope: !4085)
!4105 = !DILocation(line: 2166, column: 14, scope: !4085)
!4106 = !DILocation(line: 2166, column: 46, scope: !4085)
!4107 = !DILocation(line: 2166, column: 7, scope: !4085)
!4108 = !DILocation(line: 2166, column: 5, scope: !4085)
!4109 = !DILocation(line: 2167, column: 6, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4085, file: !512, line: 2167, column: 6)
!4111 = !DILocation(line: 2167, column: 9, scope: !4110)
!4112 = !DILocation(line: 2167, column: 6, scope: !4085)
!4113 = !DILocalVariable(name: "err", scope: !4114, file: !512, line: 2168, type: !300)
!4114 = distinct !DILexicalBlock(scope: !4110, file: !512, line: 2167, column: 14)
!4115 = !DILocation(line: 2168, column: 7, scope: !4114)
!4116 = !DILocation(line: 2168, column: 14, scope: !4114)
!4117 = !DILocation(line: 2168, column: 13, scope: !4114)
!4118 = !DILocation(line: 2169, column: 58, scope: !4114)
!4119 = !DILocation(line: 2169, column: 3, scope: !4114)
!4120 = !DILocation(line: 2170, column: 3, scope: !4114)
!4121 = !DILocation(line: 2176, column: 6, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4085, file: !512, line: 2176, column: 6)
!4123 = !DILocation(line: 2176, column: 6, scope: !4085)
!4124 = !DILocation(line: 2177, column: 18, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !512, line: 2177, column: 7)
!4126 = distinct !DILexicalBlock(scope: !4122, file: !512, line: 2176, column: 19)
!4127 = !DILocation(line: 2177, column: 44, scope: !4125)
!4128 = !DILocation(line: 2177, column: 50, scope: !4125)
!4129 = !DILocation(line: 2177, column: 7, scope: !4125)
!4130 = !DILocation(line: 2177, column: 7, scope: !4126)
!4131 = !DILocation(line: 2178, column: 75, scope: !4125)
!4132 = !DILocation(line: 2178, column: 74, scope: !4125)
!4133 = !DILocation(line: 2178, column: 4, scope: !4134)
!4134 = !DILexicalBlockFile(scope: !4125, file: !512, discriminator: 1)
!4135 = !DILocation(line: 2178, column: 4, scope: !4125)
!4136 = !DILocation(line: 2179, column: 2, scope: !4126)
!4137 = !DILocation(line: 2183, column: 6, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4085, file: !512, line: 2183, column: 6)
!4139 = !DILocation(line: 2183, column: 13, scope: !4138)
!4140 = !DILocation(line: 2183, column: 6, scope: !4085)
!4141 = !DILocation(line: 2184, column: 27, scope: !4138)
!4142 = !DILocation(line: 2184, column: 3, scope: !4138)
!4143 = !DILocation(line: 2187, column: 7, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4085, file: !512, line: 2187, column: 6)
!4145 = !DILocation(line: 2187, column: 6, scope: !4085)
!4146 = !DILocation(line: 2189, column: 22, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4144, file: !512, line: 2187, column: 16)
!4148 = !DILocation(line: 2189, column: 35, scope: !4147)
!4149 = !DILocation(line: 2189, column: 3, scope: !4147)
!4150 = !DILocation(line: 2190, column: 2, scope: !4147)
!4151 = !DILocation(line: 2198, column: 34, scope: !4085)
!4152 = !DILocation(line: 2198, column: 2, scope: !4085)
!4153 = !DILocation(line: 2200, column: 6, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4085, file: !512, line: 2200, column: 6)
!4155 = !DILocation(line: 2200, column: 9, scope: !4154)
!4156 = !DILocation(line: 2200, column: 6, scope: !4085)
!4157 = !DILocation(line: 2201, column: 3, scope: !4154)
!4158 = !DILocation(line: 2203, column: 6, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4085, file: !512, line: 2203, column: 6)
!4160 = !DILocation(line: 2203, column: 13, scope: !4159)
!4161 = !DILocation(line: 2203, column: 6, scope: !4085)
!4162 = !DILocation(line: 2205, column: 3, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4159, file: !512, line: 2203, column: 25)
!4164 = !DILocation(line: 2206, column: 2, scope: !4163)
!4165 = !DILocation(line: 2208, column: 9, scope: !4085)
!4166 = !DILocation(line: 2208, column: 2, scope: !4085)
!4167 = !DILocation(line: 2209, column: 1, scope: !4085)
!4168 = distinct !DISubprogram(name: "restore_vrrp_interfaces", scope: !512, file: !512, line: 2295, type: !524, isLocal: false, isDefinition: true, scopeLine: 2296, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!4169 = !DILocalVariable(name: "e", scope: !4168, file: !512, line: 2297, type: !984)
!4170 = !DILocation(line: 2297, column: 10, scope: !4168)
!4171 = !DILocalVariable(name: "vrrp", scope: !4168, file: !512, line: 2298, type: !537)
!4172 = !DILocation(line: 2298, column: 10, scope: !4168)
!4173 = !DILocation(line: 2303, column: 15, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4168, file: !512, line: 2303, column: 2)
!4175 = !DILocation(line: 2303, column: 26, scope: !4174)
!4176 = !DILocation(line: 2303, column: 14, scope: !4174)
!4177 = !DILocation(line: 2303, column: 37, scope: !4178)
!4178 = !DILexicalBlockFile(scope: !4174, file: !512, discriminator: 1)
!4179 = !DILocation(line: 2303, column: 48, scope: !4178)
!4180 = !DILocation(line: 2303, column: 36, scope: !4178)
!4181 = !DILocation(line: 2303, column: 35, scope: !4178)
!4182 = !DILocation(line: 2303, column: 35, scope: !4183)
!4183 = !DILexicalBlockFile(scope: !4174, file: !512, discriminator: 2)
!4184 = !DILocation(line: 2303, column: 4, scope: !4185)
!4185 = !DILexicalBlockFile(scope: !4174, file: !512, discriminator: 3)
!4186 = !DILocation(line: 2303, column: 15, scope: !4185)
!4187 = !DILocation(line: 2303, column: 22, scope: !4185)
!4188 = !DILocation(line: 2303, column: 35, scope: !4185)
!4189 = !DILocation(line: 2303, column: 35, scope: !4190)
!4190 = !DILexicalBlockFile(scope: !4174, file: !512, discriminator: 4)
!4191 = !DILocation(line: 2303, column: 14, scope: !4190)
!4192 = !DILocation(line: 2303, column: 14, scope: !4193)
!4193 = !DILexicalBlockFile(scope: !4174, file: !512, discriminator: 5)
!4194 = !DILocation(line: 2303, column: 14, scope: !4195)
!4195 = !DILexicalBlockFile(scope: !4174, file: !512, discriminator: 6)
!4196 = !DILocation(line: 2303, column: 11, scope: !4195)
!4197 = !DILocation(line: 2303, column: 7, scope: !4195)
!4198 = !DILocation(line: 2303, column: 5, scope: !4199)
!4199 = !DILexicalBlockFile(scope: !4200, file: !512, discriminator: 7)
!4200 = distinct !DILexicalBlock(scope: !4174, file: !512, line: 2303, column: 2)
!4201 = !DILocation(line: 2303, column: 4, scope: !4199)
!4202 = !DILocation(line: 2303, column: 8, scope: !4199)
!4203 = !DILocation(line: 2303, column: 23, scope: !4204)
!4204 = !DILexicalBlockFile(scope: !4200, file: !512, discriminator: 8)
!4205 = !DILocation(line: 2303, column: 27, scope: !4204)
!4206 = !DILocation(line: 2303, column: 21, scope: !4204)
!4207 = !DILocation(line: 2303, column: 19, scope: !4204)
!4208 = !DILocation(line: 2303, column: 2, scope: !4209)
!4209 = !DILexicalBlockFile(scope: !4174, file: !512, discriminator: 9)
!4210 = !DILocation(line: 2305, column: 7, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !512, line: 2305, column: 7)
!4212 = distinct !DILexicalBlock(scope: !4200, file: !512, line: 2303, column: 57)
!4213 = !DILocation(line: 2305, column: 13, scope: !4211)
!4214 = !DILocation(line: 2305, column: 19, scope: !4211)
!4215 = !DILocation(line: 2305, column: 7, scope: !4212)
!4216 = !DILocation(line: 2306, column: 27, scope: !4211)
!4217 = !DILocation(line: 2306, column: 4, scope: !4211)
!4218 = !DILocation(line: 2307, column: 2, scope: !4212)
!4219 = !DILocation(line: 2303, column: 46, scope: !4220)
!4220 = !DILexicalBlockFile(scope: !4200, file: !512, discriminator: 10)
!4221 = !DILocation(line: 2303, column: 50, scope: !4220)
!4222 = !DILocation(line: 2303, column: 43, scope: !4220)
!4223 = !DILocation(line: 2303, column: 2, scope: !4220)
!4224 = distinct !{!4224, !4225}
!4225 = !DILocation(line: 2303, column: 2, scope: !4168)
!4226 = !DILocation(line: 2308, column: 1, scope: !4168)
!4227 = distinct !DISubprogram(name: "shutdown_vrrp_instances", scope: !512, file: !512, line: 2312, type: !524, isLocal: false, isDefinition: true, scopeLine: 2313, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!4228 = !DILocalVariable(name: "e", scope: !4227, file: !512, line: 2314, type: !984)
!4229 = !DILocation(line: 2314, column: 10, scope: !4227)
!4230 = !DILocalVariable(name: "vrrp", scope: !4227, file: !512, line: 2315, type: !537)
!4231 = !DILocation(line: 2315, column: 10, scope: !4227)
!4232 = !DILocation(line: 2318, column: 2, scope: !4227)
!4233 = !DILocation(line: 2321, column: 15, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4227, file: !512, line: 2321, column: 2)
!4235 = !DILocation(line: 2321, column: 26, scope: !4234)
!4236 = !DILocation(line: 2321, column: 14, scope: !4234)
!4237 = !DILocation(line: 2321, column: 37, scope: !4238)
!4238 = !DILexicalBlockFile(scope: !4234, file: !512, discriminator: 1)
!4239 = !DILocation(line: 2321, column: 48, scope: !4238)
!4240 = !DILocation(line: 2321, column: 36, scope: !4238)
!4241 = !DILocation(line: 2321, column: 35, scope: !4238)
!4242 = !DILocation(line: 2321, column: 35, scope: !4243)
!4243 = !DILexicalBlockFile(scope: !4234, file: !512, discriminator: 2)
!4244 = !DILocation(line: 2321, column: 4, scope: !4245)
!4245 = !DILexicalBlockFile(scope: !4234, file: !512, discriminator: 3)
!4246 = !DILocation(line: 2321, column: 15, scope: !4245)
!4247 = !DILocation(line: 2321, column: 22, scope: !4245)
!4248 = !DILocation(line: 2321, column: 35, scope: !4245)
!4249 = !DILocation(line: 2321, column: 35, scope: !4250)
!4250 = !DILexicalBlockFile(scope: !4234, file: !512, discriminator: 4)
!4251 = !DILocation(line: 2321, column: 14, scope: !4250)
!4252 = !DILocation(line: 2321, column: 14, scope: !4253)
!4253 = !DILexicalBlockFile(scope: !4234, file: !512, discriminator: 5)
!4254 = !DILocation(line: 2321, column: 14, scope: !4255)
!4255 = !DILexicalBlockFile(scope: !4234, file: !512, discriminator: 6)
!4256 = !DILocation(line: 2321, column: 11, scope: !4255)
!4257 = !DILocation(line: 2321, column: 7, scope: !4255)
!4258 = !DILocation(line: 2321, column: 5, scope: !4259)
!4259 = !DILexicalBlockFile(scope: !4260, file: !512, discriminator: 7)
!4260 = distinct !DILexicalBlock(scope: !4234, file: !512, line: 2321, column: 2)
!4261 = !DILocation(line: 2321, column: 4, scope: !4259)
!4262 = !DILocation(line: 2321, column: 8, scope: !4259)
!4263 = !DILocation(line: 2321, column: 23, scope: !4264)
!4264 = !DILexicalBlockFile(scope: !4260, file: !512, discriminator: 8)
!4265 = !DILocation(line: 2321, column: 27, scope: !4264)
!4266 = !DILocation(line: 2321, column: 21, scope: !4264)
!4267 = !DILocation(line: 2321, column: 19, scope: !4264)
!4268 = !DILocation(line: 2321, column: 2, scope: !4269)
!4269 = !DILexicalBlockFile(scope: !4234, file: !512, discriminator: 9)
!4270 = !DILocation(line: 2323, column: 7, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !512, line: 2323, column: 7)
!4272 = distinct !DILexicalBlock(scope: !4260, file: !512, line: 2321, column: 57)
!4273 = !DILocation(line: 2323, column: 13, scope: !4271)
!4274 = !DILocation(line: 2323, column: 7, scope: !4272)
!4275 = !DILocation(line: 2328, column: 35, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !512, line: 2328, column: 8)
!4277 = distinct !DILexicalBlock(scope: !4271, file: !512, line: 2323, column: 18)
!4278 = !DILocation(line: 2328, column: 41, scope: !4276)
!4279 = !DILocation(line: 2328, column: 8, scope: !4276)
!4280 = !DILocation(line: 2328, column: 53, scope: !4276)
!4281 = !DILocation(line: 2328, column: 56, scope: !4282)
!4282 = !DILexicalBlockFile(scope: !4276, file: !512, discriminator: 1)
!4283 = !DILocation(line: 2328, column: 62, scope: !4282)
!4284 = !DILocation(line: 2328, column: 67, scope: !4282)
!4285 = !DILocation(line: 2328, column: 8, scope: !4282)
!4286 = !DILocation(line: 2329, column: 27, scope: !4276)
!4287 = !DILocation(line: 2329, column: 5, scope: !4276)
!4288 = !DILocation(line: 2332, column: 8, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4277, file: !512, line: 2332, column: 8)
!4290 = !DILocation(line: 2332, column: 14, scope: !4289)
!4291 = !DILocation(line: 2332, column: 19, scope: !4289)
!4292 = !DILocation(line: 2332, column: 8, scope: !4277)
!4293 = !DILocation(line: 2333, column: 31, scope: !4289)
!4294 = !DILocation(line: 2333, column: 37, scope: !4289)
!4295 = !DILocation(line: 2333, column: 5, scope: !4289)
!4296 = !DILocation(line: 2334, column: 3, scope: !4277)
!4297 = !DILocation(line: 2343, column: 7, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4272, file: !512, line: 2343, column: 7)
!4299 = !DILocation(line: 2343, column: 20, scope: !4298)
!4300 = !DILocation(line: 2343, column: 30, scope: !4298)
!4301 = !DILocation(line: 2343, column: 38, scope: !4298)
!4302 = !DILocation(line: 2343, column: 35, scope: !4298)
!4303 = !DILocation(line: 2343, column: 7, scope: !4272)
!4304 = !DILocation(line: 2344, column: 36, scope: !4298)
!4305 = !DILocation(line: 2344, column: 49, scope: !4298)
!4306 = !DILocation(line: 2345, column: 13, scope: !4298)
!4307 = !DILocation(line: 2345, column: 19, scope: !4298)
!4308 = !DILocation(line: 2345, column: 25, scope: !4298)
!4309 = !DILocation(line: 2345, column: 12, scope: !4298)
!4310 = !DILocation(line: 2344, column: 4, scope: !4298)
!4311 = !DILocation(line: 2348, column: 2, scope: !4272)
!4312 = !DILocation(line: 2321, column: 46, scope: !4313)
!4313 = !DILexicalBlockFile(scope: !4260, file: !512, discriminator: 10)
!4314 = !DILocation(line: 2321, column: 50, scope: !4313)
!4315 = !DILocation(line: 2321, column: 43, scope: !4313)
!4316 = !DILocation(line: 2321, column: 2, scope: !4313)
!4317 = distinct !{!4317, !4318}
!4318 = !DILocation(line: 2321, column: 2, scope: !4227)
!4319 = !DILocation(line: 2349, column: 1, scope: !4227)
!4320 = distinct !DISubprogram(name: "vrrp_complete_init", scope: !512, file: !512, line: 3252, type: !4321, isLocal: false, isDefinition: true, scopeLine: 3253, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!4321 = !DISubroutineType(types: !4322)
!4322 = !{!350}
!4323 = !DILocalVariable(name: "e", scope: !4320, file: !512, line: 3258, type: !984)
!4324 = !DILocation(line: 3258, column: 10, scope: !4320)
!4325 = !DILocalVariable(name: "e1", scope: !4320, file: !512, line: 3258, type: !984)
!4326 = !DILocation(line: 3258, column: 13, scope: !4320)
!4327 = !DILocalVariable(name: "vrrp", scope: !4320, file: !512, line: 3259, type: !537)
!4328 = !DILocation(line: 3259, column: 10, scope: !4320)
!4329 = !DILocalVariable(name: "old_vrrp", scope: !4320, file: !512, line: 3259, type: !537)
!4330 = !DILocation(line: 3259, column: 17, scope: !4320)
!4331 = !DILocalVariable(name: "sgroup", scope: !4320, file: !512, line: 3260, type: !544)
!4332 = !DILocation(line: 3260, column: 17, scope: !4320)
!4333 = !DILocalVariable(name: "l_o", scope: !4320, file: !512, line: 3261, type: !400)
!4334 = !DILocation(line: 3261, column: 7, scope: !4320)
!4335 = !DILocalVariable(name: "e_o", scope: !4320, file: !512, line: 3262, type: !984)
!4336 = !DILocation(line: 3262, column: 10, scope: !4320)
!4337 = !DILocalVariable(name: "next", scope: !4320, file: !512, line: 3263, type: !984)
!4338 = !DILocation(line: 3263, column: 10, scope: !4320)
!4339 = !DILocalVariable(name: "vrrp_o", scope: !4320, file: !512, line: 3264, type: !537)
!4340 = !DILocation(line: 3264, column: 10, scope: !4320)
!4341 = !DILocalVariable(name: "ifp", scope: !4320, file: !512, line: 3265, type: !338)
!4342 = !DILocation(line: 3265, column: 15, scope: !4320)
!4343 = !DILocalVariable(name: "ifindex_o", scope: !4320, file: !512, line: 3266, type: !345)
!4344 = !DILocation(line: 3266, column: 12, scope: !4320)
!4345 = !DILocalVariable(name: "max_mtu_len", scope: !4320, file: !512, line: 3267, type: !292)
!4346 = !DILocation(line: 3267, column: 9, scope: !4320)
!4347 = !DILocalVariable(name: "have_master", scope: !4320, file: !512, line: 3268, type: !350)
!4348 = !DILocation(line: 3268, column: 6, scope: !4320)
!4349 = !DILocalVariable(name: "have_backup", scope: !4320, file: !512, line: 3268, type: !350)
!4350 = !DILocation(line: 3268, column: 19, scope: !4320)
!4351 = !DILocation(line: 3271, column: 6, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3271, column: 6)
!4353 = !DILocation(line: 3271, column: 19, scope: !4352)
!4354 = !DILocation(line: 3271, column: 44, scope: !4352)
!4355 = !DILocation(line: 3271, column: 6, scope: !4320)
!4356 = !DILocation(line: 3272, column: 43, scope: !4352)
!4357 = !DILocation(line: 3272, column: 56, scope: !4352)
!4358 = !DILocation(line: 3272, column: 3, scope: !4352)
!4359 = !DILocation(line: 3272, column: 16, scope: !4352)
!4360 = !DILocation(line: 3272, column: 41, scope: !4352)
!4361 = !DILocation(line: 3273, column: 6, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3273, column: 6)
!4363 = !DILocation(line: 3273, column: 19, scope: !4362)
!4364 = !DILocation(line: 3273, column: 46, scope: !4362)
!4365 = !DILocation(line: 3273, column: 6, scope: !4320)
!4366 = !DILocation(line: 3274, column: 45, scope: !4362)
!4367 = !DILocation(line: 3274, column: 58, scope: !4362)
!4368 = !DILocation(line: 3274, column: 3, scope: !4362)
!4369 = !DILocation(line: 3274, column: 16, scope: !4362)
!4370 = !DILocation(line: 3274, column: 43, scope: !4362)
!4371 = !DILocation(line: 3277, column: 6, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3277, column: 6)
!4373 = !DILocation(line: 3277, column: 19, scope: !4372)
!4374 = !DILocation(line: 3277, column: 31, scope: !4372)
!4375 = !DILocation(line: 3277, column: 6, scope: !4320)
!4376 = !DILocation(line: 3278, column: 20, scope: !4372)
!4377 = !DILocation(line: 3278, column: 33, scope: !4372)
!4378 = !DILocation(line: 3278, column: 45, scope: !4372)
!4379 = !DILocation(line: 3278, column: 53, scope: !4372)
!4380 = !DILocation(line: 3278, column: 66, scope: !4372)
!4381 = !DILocation(line: 3278, column: 78, scope: !4372)
!4382 = !DILocation(line: 3278, column: 3, scope: !4372)
!4383 = !DILocation(line: 3279, column: 6, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3279, column: 6)
!4385 = !DILocation(line: 3279, column: 19, scope: !4384)
!4386 = !DILocation(line: 3279, column: 36, scope: !4384)
!4387 = !DILocation(line: 3279, column: 6, scope: !4320)
!4388 = !DILocation(line: 3280, column: 20, scope: !4384)
!4389 = !DILocation(line: 3280, column: 33, scope: !4384)
!4390 = !DILocation(line: 3280, column: 50, scope: !4384)
!4391 = !DILocation(line: 3280, column: 58, scope: !4384)
!4392 = !DILocation(line: 3280, column: 71, scope: !4384)
!4393 = !DILocation(line: 3280, column: 88, scope: !4384)
!4394 = !DILocation(line: 3280, column: 3, scope: !4384)
!4395 = !DILocation(line: 3283, column: 2, scope: !4320)
!4396 = !DILocation(line: 3288, column: 6, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3288, column: 6)
!4398 = !DILocation(line: 3288, column: 6, scope: !4320)
!4399 = !DILocation(line: 3289, column: 23, scope: !4397)
!4400 = !DILocation(line: 3289, column: 36, scope: !4397)
!4401 = !DILocation(line: 3289, column: 48, scope: !4397)
!4402 = !DILocation(line: 3289, column: 3, scope: !4397)
!4403 = !DILocation(line: 3293, column: 7, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3293, column: 6)
!4405 = !DILocation(line: 3293, column: 6, scope: !4320)
!4406 = !DILocation(line: 3294, column: 21, scope: !4404)
!4407 = !DILocation(line: 3294, column: 34, scope: !4404)
!4408 = !DILocation(line: 3294, column: 48, scope: !4404)
!4409 = !DILocation(line: 3294, column: 61, scope: !4404)
!4410 = !DILocation(line: 3294, column: 3, scope: !4404)
!4411 = !DILocation(line: 3297, column: 15, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3297, column: 2)
!4413 = !DILocation(line: 3297, column: 26, scope: !4412)
!4414 = !DILocation(line: 3297, column: 14, scope: !4412)
!4415 = !DILocation(line: 3297, column: 37, scope: !4416)
!4416 = !DILexicalBlockFile(scope: !4412, file: !512, discriminator: 1)
!4417 = !DILocation(line: 3297, column: 48, scope: !4416)
!4418 = !DILocation(line: 3297, column: 36, scope: !4416)
!4419 = !DILocation(line: 3297, column: 35, scope: !4416)
!4420 = !DILocation(line: 3297, column: 35, scope: !4421)
!4421 = !DILexicalBlockFile(scope: !4412, file: !512, discriminator: 2)
!4422 = !DILocation(line: 3297, column: 4, scope: !4423)
!4423 = !DILexicalBlockFile(scope: !4412, file: !512, discriminator: 3)
!4424 = !DILocation(line: 3297, column: 15, scope: !4423)
!4425 = !DILocation(line: 3297, column: 22, scope: !4423)
!4426 = !DILocation(line: 3297, column: 35, scope: !4423)
!4427 = !DILocation(line: 3297, column: 35, scope: !4428)
!4428 = !DILexicalBlockFile(scope: !4412, file: !512, discriminator: 4)
!4429 = !DILocation(line: 3297, column: 14, scope: !4428)
!4430 = !DILocation(line: 3297, column: 14, scope: !4431)
!4431 = !DILexicalBlockFile(scope: !4412, file: !512, discriminator: 5)
!4432 = !DILocation(line: 3297, column: 14, scope: !4433)
!4433 = !DILexicalBlockFile(scope: !4412, file: !512, discriminator: 6)
!4434 = !DILocation(line: 3297, column: 11, scope: !4433)
!4435 = !DILocation(line: 3297, column: 7, scope: !4433)
!4436 = !DILocation(line: 3297, column: 5, scope: !4437)
!4437 = !DILexicalBlockFile(scope: !4438, file: !512, discriminator: 7)
!4438 = distinct !DILexicalBlock(scope: !4412, file: !512, line: 3297, column: 2)
!4439 = !DILocation(line: 3297, column: 4, scope: !4437)
!4440 = !DILocation(line: 3297, column: 8, scope: !4437)
!4441 = !DILocation(line: 3297, column: 23, scope: !4442)
!4442 = !DILexicalBlockFile(scope: !4438, file: !512, discriminator: 8)
!4443 = !DILocation(line: 3297, column: 27, scope: !4442)
!4444 = !DILocation(line: 3297, column: 21, scope: !4442)
!4445 = !DILocation(line: 3297, column: 19, scope: !4442)
!4446 = !DILocation(line: 3297, column: 2, scope: !4447)
!4447 = !DILexicalBlockFile(scope: !4412, file: !512, discriminator: 9)
!4448 = !DILocation(line: 3298, column: 32, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4438, file: !512, line: 3297, column: 57)
!4450 = !DILocation(line: 3298, column: 38, scope: !4449)
!4451 = !DILocation(line: 3298, column: 10, scope: !4449)
!4452 = !DILocation(line: 3298, column: 21, scope: !4449)
!4453 = !DILocation(line: 3298, column: 7, scope: !4449)
!4454 = !DILocation(line: 3300, column: 34, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4449, file: !512, line: 3300, column: 7)
!4456 = !DILocation(line: 3300, column: 40, scope: !4455)
!4457 = !DILocation(line: 3300, column: 7, scope: !4455)
!4458 = !DILocation(line: 3300, column: 7, scope: !4449)
!4459 = !DILocation(line: 3301, column: 10, scope: !4455)
!4460 = !DILocation(line: 3301, column: 16, scope: !4455)
!4461 = !DILocation(line: 3301, column: 21, scope: !4455)
!4462 = !DILocation(line: 3301, column: 8, scope: !4455)
!4463 = !DILocation(line: 3301, column: 4, scope: !4455)
!4464 = !DILocation(line: 3304, column: 10, scope: !4455)
!4465 = !DILocation(line: 3304, column: 16, scope: !4455)
!4466 = !DILocation(line: 3304, column: 8, scope: !4455)
!4467 = !DILocation(line: 3307, column: 10, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4449, file: !512, line: 3307, column: 7)
!4469 = !DILocation(line: 3307, column: 15, scope: !4468)
!4470 = !DILocation(line: 3307, column: 7, scope: !4468)
!4471 = !DILocation(line: 3307, column: 12, scope: !4472)
!4472 = !DILexicalBlockFile(scope: !4468, file: !512, discriminator: 1)
!4473 = !DILocation(line: 3307, column: 18, scope: !4472)
!4474 = !DILocation(line: 3307, column: 23, scope: !4472)
!4475 = !DILocation(line: 3307, column: 7, scope: !4472)
!4476 = !DILocation(line: 3307, column: 11, scope: !4477)
!4477 = !DILexicalBlockFile(scope: !4468, file: !512, discriminator: 2)
!4478 = !DILocation(line: 3307, column: 17, scope: !4477)
!4479 = !DILocation(line: 3307, column: 22, scope: !4477)
!4480 = !DILocation(line: 3307, column: 10, scope: !4477)
!4481 = !DILocation(line: 3307, column: 15, scope: !4482)
!4482 = !DILexicalBlockFile(scope: !4468, file: !512, discriminator: 3)
!4483 = !DILocation(line: 3307, column: 21, scope: !4482)
!4484 = !DILocation(line: 3307, column: 28, scope: !4482)
!4485 = !DILocation(line: 3307, column: 7, scope: !4482)
!4486 = !DILocation(line: 3309, column: 19, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4488, file: !512, line: 3309, column: 4)
!4488 = distinct !DILexicalBlock(scope: !4468, file: !512, line: 3307, column: 33)
!4489 = !DILocation(line: 3309, column: 18, scope: !4487)
!4490 = !DILocation(line: 3309, column: 29, scope: !4491)
!4491 = !DILexicalBlockFile(scope: !4487, file: !512, discriminator: 1)
!4492 = !DILocation(line: 3309, column: 28, scope: !4491)
!4493 = !DILocation(line: 3309, column: 27, scope: !4491)
!4494 = !DILocation(line: 3309, column: 27, scope: !4495)
!4495 = !DILexicalBlockFile(scope: !4487, file: !512, discriminator: 2)
!4496 = !DILocation(line: 3309, column: 6, scope: !4497)
!4497 = !DILexicalBlockFile(scope: !4487, file: !512, discriminator: 3)
!4498 = !DILocation(line: 3309, column: 12, scope: !4497)
!4499 = !DILocation(line: 3309, column: 27, scope: !4497)
!4500 = !DILocation(line: 3309, column: 27, scope: !4501)
!4501 = !DILexicalBlockFile(scope: !4487, file: !512, discriminator: 4)
!4502 = !DILocation(line: 3309, column: 18, scope: !4501)
!4503 = !DILocation(line: 3309, column: 18, scope: !4504)
!4504 = !DILexicalBlockFile(scope: !4487, file: !512, discriminator: 5)
!4505 = !DILocation(line: 3309, column: 18, scope: !4506)
!4506 = !DILexicalBlockFile(scope: !4487, file: !512, discriminator: 6)
!4507 = !DILocation(line: 3309, column: 15, scope: !4506)
!4508 = !DILocation(line: 3309, column: 9, scope: !4506)
!4509 = !DILocation(line: 3309, column: 7, scope: !4510)
!4510 = !DILexicalBlockFile(scope: !4511, file: !512, discriminator: 7)
!4511 = distinct !DILexicalBlock(scope: !4487, file: !512, line: 3309, column: 4)
!4512 = !DILocation(line: 3309, column: 6, scope: !4510)
!4513 = !DILocation(line: 3309, column: 12, scope: !4510)
!4514 = !DILocation(line: 3309, column: 29, scope: !4515)
!4515 = !DILexicalBlockFile(scope: !4511, file: !512, discriminator: 8)
!4516 = !DILocation(line: 3309, column: 35, scope: !4515)
!4517 = !DILocation(line: 3309, column: 27, scope: !4515)
!4518 = !DILocation(line: 3309, column: 25, scope: !4515)
!4519 = !DILocation(line: 3309, column: 4, scope: !4520)
!4520 = !DILexicalBlockFile(scope: !4487, file: !512, discriminator: 9)
!4521 = !DILocation(line: 3310, column: 9, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !512, line: 3310, column: 9)
!4523 = distinct !DILexicalBlock(scope: !4511, file: !512, line: 3309, column: 69)
!4524 = !DILocation(line: 3310, column: 19, scope: !4522)
!4525 = !DILocation(line: 3310, column: 16, scope: !4522)
!4526 = !DILocation(line: 3310, column: 24, scope: !4522)
!4527 = !DILocation(line: 3311, column: 9, scope: !4522)
!4528 = !DILocation(line: 3311, column: 17, scope: !4522)
!4529 = !DILocation(line: 3311, column: 27, scope: !4522)
!4530 = !DILocation(line: 3311, column: 33, scope: !4522)
!4531 = !DILocation(line: 3311, column: 24, scope: !4522)
!4532 = !DILocation(line: 3310, column: 9, scope: !4533)
!4533 = !DILexicalBlockFile(scope: !4523, file: !512, discriminator: 1)
!4534 = !DILocation(line: 3313, column: 37, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !512, line: 3313, column: 10)
!4536 = distinct !DILexicalBlock(scope: !4522, file: !512, line: 3311, column: 41)
!4537 = !DILocation(line: 3313, column: 45, scope: !4535)
!4538 = !DILocation(line: 3313, column: 10, scope: !4535)
!4539 = !DILocation(line: 3313, column: 10, scope: !4536)
!4540 = !DILocation(line: 3314, column: 19, scope: !4535)
!4541 = !DILocation(line: 3314, column: 27, scope: !4535)
!4542 = !DILocation(line: 3314, column: 32, scope: !4535)
!4543 = !DILocation(line: 3314, column: 42, scope: !4535)
!4544 = !DILocation(line: 3314, column: 17, scope: !4535)
!4545 = !DILocation(line: 3314, column: 7, scope: !4535)
!4546 = !DILocation(line: 3317, column: 19, scope: !4535)
!4547 = !DILocation(line: 3317, column: 27, scope: !4535)
!4548 = !DILocation(line: 3317, column: 32, scope: !4535)
!4549 = !DILocation(line: 3317, column: 17, scope: !4535)
!4550 = !DILocation(line: 3319, column: 10, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4536, file: !512, line: 3319, column: 10)
!4552 = !DILocation(line: 3319, column: 15, scope: !4551)
!4553 = !DILocation(line: 3319, column: 26, scope: !4551)
!4554 = !DILocation(line: 3319, column: 23, scope: !4551)
!4555 = !DILocation(line: 3319, column: 10, scope: !4536)
!4556 = !DILocation(line: 3321, column: 90, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4551, file: !512, line: 3320, column: 6)
!4558 = !DILocation(line: 3321, column: 96, scope: !4557)
!4559 = !DILocation(line: 3321, column: 102, scope: !4557)
!4560 = !DILocation(line: 3321, column: 107, scope: !4557)
!4561 = !DILocation(line: 3321, column: 7, scope: !4557)
!4562 = !DILocation(line: 3322, column: 7, scope: !4557)
!4563 = !DILocation(line: 3324, column: 5, scope: !4536)
!4564 = !DILocation(line: 3325, column: 4, scope: !4523)
!4565 = !DILocation(line: 3309, column: 56, scope: !4566)
!4566 = !DILexicalBlockFile(scope: !4511, file: !512, discriminator: 10)
!4567 = !DILocation(line: 3309, column: 62, scope: !4566)
!4568 = !DILocation(line: 3309, column: 53, scope: !4566)
!4569 = !DILocation(line: 3309, column: 4, scope: !4566)
!4570 = distinct !{!4570, !4571}
!4571 = !DILocation(line: 3309, column: 4, scope: !4488)
!4572 = !DILocation(line: 3326, column: 3, scope: !4488)
!4573 = !DILocation(line: 3327, column: 2, scope: !4449)
!4574 = !DILocation(line: 3297, column: 46, scope: !4575)
!4575 = !DILexicalBlockFile(scope: !4438, file: !512, discriminator: 10)
!4576 = !DILocation(line: 3297, column: 50, scope: !4575)
!4577 = !DILocation(line: 3297, column: 43, scope: !4575)
!4578 = !DILocation(line: 3297, column: 2, scope: !4575)
!4579 = distinct !{!4579, !4580}
!4580 = !DILocation(line: 3297, column: 2, scope: !4320)
!4581 = !DILocation(line: 3331, column: 15, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3331, column: 2)
!4583 = !DILocation(line: 3331, column: 26, scope: !4582)
!4584 = !DILocation(line: 3331, column: 14, scope: !4582)
!4585 = !DILocation(line: 3331, column: 48, scope: !4586)
!4586 = !DILexicalBlockFile(scope: !4582, file: !512, discriminator: 1)
!4587 = !DILocation(line: 3331, column: 59, scope: !4586)
!4588 = !DILocation(line: 3331, column: 47, scope: !4586)
!4589 = !DILocation(line: 3331, column: 46, scope: !4586)
!4590 = !DILocation(line: 3331, column: 46, scope: !4591)
!4591 = !DILexicalBlockFile(scope: !4582, file: !512, discriminator: 2)
!4592 = !DILocation(line: 3331, column: 4, scope: !4593)
!4593 = !DILexicalBlockFile(scope: !4582, file: !512, discriminator: 3)
!4594 = !DILocation(line: 3331, column: 15, scope: !4593)
!4595 = !DILocation(line: 3331, column: 33, scope: !4593)
!4596 = !DILocation(line: 3331, column: 46, scope: !4593)
!4597 = !DILocation(line: 3331, column: 46, scope: !4598)
!4598 = !DILexicalBlockFile(scope: !4582, file: !512, discriminator: 4)
!4599 = !DILocation(line: 3331, column: 14, scope: !4598)
!4600 = !DILocation(line: 3331, column: 14, scope: !4601)
!4601 = !DILexicalBlockFile(scope: !4582, file: !512, discriminator: 5)
!4602 = !DILocation(line: 3331, column: 14, scope: !4603)
!4603 = !DILexicalBlockFile(scope: !4582, file: !512, discriminator: 6)
!4604 = !DILocation(line: 3331, column: 11, scope: !4603)
!4605 = !DILocation(line: 3331, column: 7, scope: !4603)
!4606 = !DILocation(line: 3331, column: 5, scope: !4607)
!4607 = !DILexicalBlockFile(scope: !4608, file: !512, discriminator: 7)
!4608 = distinct !DILexicalBlock(scope: !4582, file: !512, line: 3331, column: 2)
!4609 = !DILocation(line: 3331, column: 4, scope: !4607)
!4610 = !DILocation(line: 3331, column: 8, scope: !4607)
!4611 = !DILocation(line: 3331, column: 22, scope: !4612)
!4612 = !DILexicalBlockFile(scope: !4608, file: !512, discriminator: 8)
!4613 = !DILocation(line: 3331, column: 26, scope: !4612)
!4614 = !DILocation(line: 3331, column: 19, scope: !4612)
!4615 = !DILocation(line: 3331, column: 45, scope: !4612)
!4616 = !DILocation(line: 3331, column: 49, scope: !4612)
!4617 = !DILocation(line: 3331, column: 43, scope: !4612)
!4618 = !DILocation(line: 3331, column: 41, scope: !4612)
!4619 = !DILocation(line: 3331, column: 2, scope: !4620)
!4620 = !DILexicalBlockFile(scope: !4582, file: !512, discriminator: 9)
!4621 = !DILocation(line: 3332, column: 8, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !512, line: 3332, column: 7)
!4623 = distinct !DILexicalBlock(scope: !4608, file: !512, line: 3331, column: 74)
!4624 = !DILocation(line: 3332, column: 16, scope: !4622)
!4625 = !DILocation(line: 3332, column: 7, scope: !4623)
!4626 = !DILocation(line: 3333, column: 99, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4622, file: !512, line: 3332, column: 23)
!4628 = !DILocation(line: 3333, column: 107, scope: !4627)
!4629 = !DILocation(line: 3333, column: 4, scope: !4627)
!4630 = !DILocation(line: 3334, column: 22, scope: !4627)
!4631 = !DILocation(line: 3334, column: 33, scope: !4627)
!4632 = !DILocation(line: 3334, column: 50, scope: !4627)
!4633 = !DILocation(line: 3334, column: 4, scope: !4627)
!4634 = !DILocation(line: 3335, column: 4, scope: !4627)
!4635 = !DILocation(line: 3338, column: 23, scope: !4623)
!4636 = !DILocation(line: 3338, column: 3, scope: !4623)
!4637 = !DILocation(line: 3340, column: 8, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4623, file: !512, line: 3340, column: 7)
!4639 = !DILocation(line: 3340, column: 16, scope: !4638)
!4640 = !DILocation(line: 3340, column: 7, scope: !4623)
!4641 = !DILocation(line: 3341, column: 22, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4638, file: !512, line: 3340, column: 32)
!4643 = !DILocation(line: 3341, column: 33, scope: !4642)
!4644 = !DILocation(line: 3341, column: 50, scope: !4642)
!4645 = !DILocation(line: 3341, column: 4, scope: !4642)
!4646 = !DILocation(line: 3342, column: 4, scope: !4642)
!4647 = !DILocation(line: 3344, column: 2, scope: !4623)
!4648 = !DILocation(line: 3331, column: 67, scope: !4649)
!4649 = !DILexicalBlockFile(scope: !4608, file: !512, discriminator: 10)
!4650 = !DILocation(line: 3331, column: 64, scope: !4649)
!4651 = !DILocation(line: 3331, column: 2, scope: !4649)
!4652 = distinct !{!4652, !4653}
!4653 = !DILocation(line: 3331, column: 2, scope: !4320)
!4654 = !DILocation(line: 3347, column: 15, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3347, column: 2)
!4656 = !DILocation(line: 3347, column: 26, scope: !4655)
!4657 = !DILocation(line: 3347, column: 14, scope: !4655)
!4658 = !DILocation(line: 3347, column: 37, scope: !4659)
!4659 = !DILexicalBlockFile(scope: !4655, file: !512, discriminator: 1)
!4660 = !DILocation(line: 3347, column: 48, scope: !4659)
!4661 = !DILocation(line: 3347, column: 36, scope: !4659)
!4662 = !DILocation(line: 3347, column: 35, scope: !4659)
!4663 = !DILocation(line: 3347, column: 35, scope: !4664)
!4664 = !DILexicalBlockFile(scope: !4655, file: !512, discriminator: 2)
!4665 = !DILocation(line: 3347, column: 4, scope: !4666)
!4666 = !DILexicalBlockFile(scope: !4655, file: !512, discriminator: 3)
!4667 = !DILocation(line: 3347, column: 15, scope: !4666)
!4668 = !DILocation(line: 3347, column: 22, scope: !4666)
!4669 = !DILocation(line: 3347, column: 35, scope: !4666)
!4670 = !DILocation(line: 3347, column: 35, scope: !4671)
!4671 = !DILexicalBlockFile(scope: !4655, file: !512, discriminator: 4)
!4672 = !DILocation(line: 3347, column: 14, scope: !4671)
!4673 = !DILocation(line: 3347, column: 14, scope: !4674)
!4674 = !DILexicalBlockFile(scope: !4655, file: !512, discriminator: 5)
!4675 = !DILocation(line: 3347, column: 14, scope: !4676)
!4676 = !DILexicalBlockFile(scope: !4655, file: !512, discriminator: 6)
!4677 = !DILocation(line: 3347, column: 11, scope: !4676)
!4678 = !DILocation(line: 3347, column: 7, scope: !4676)
!4679 = !DILocation(line: 3347, column: 5, scope: !4680)
!4680 = !DILexicalBlockFile(scope: !4681, file: !512, discriminator: 7)
!4681 = distinct !DILexicalBlock(scope: !4655, file: !512, line: 3347, column: 2)
!4682 = !DILocation(line: 3347, column: 4, scope: !4680)
!4683 = !DILocation(line: 3347, column: 8, scope: !4680)
!4684 = !DILocation(line: 3347, column: 23, scope: !4685)
!4685 = !DILexicalBlockFile(scope: !4681, file: !512, discriminator: 8)
!4686 = !DILocation(line: 3347, column: 27, scope: !4685)
!4687 = !DILocation(line: 3347, column: 21, scope: !4685)
!4688 = !DILocation(line: 3347, column: 19, scope: !4685)
!4689 = !DILocation(line: 3347, column: 2, scope: !4690)
!4690 = !DILexicalBlockFile(scope: !4655, file: !512, discriminator: 9)
!4691 = !DILocation(line: 3348, column: 31, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !512, line: 3348, column: 7)
!4693 = distinct !DILexicalBlock(scope: !4681, file: !512, line: 3347, column: 57)
!4694 = !DILocation(line: 3348, column: 8, scope: !4692)
!4695 = !DILocation(line: 3348, column: 7, scope: !4693)
!4696 = !DILocation(line: 3349, column: 4, scope: !4692)
!4697 = !DILocation(line: 3351, column: 7, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4693, file: !512, line: 3351, column: 7)
!4699 = !DILocation(line: 3351, column: 13, scope: !4698)
!4700 = !DILocation(line: 3351, column: 18, scope: !4698)
!4701 = !DILocation(line: 3351, column: 24, scope: !4698)
!4702 = !DILocation(line: 3351, column: 22, scope: !4698)
!4703 = !DILocation(line: 3351, column: 7, scope: !4693)
!4704 = !DILocation(line: 3352, column: 18, scope: !4698)
!4705 = !DILocation(line: 3352, column: 24, scope: !4698)
!4706 = !DILocation(line: 3352, column: 29, scope: !4698)
!4707 = !DILocation(line: 3352, column: 16, scope: !4698)
!4708 = !DILocation(line: 3352, column: 4, scope: !4698)
!4709 = !DILocation(line: 3353, column: 2, scope: !4693)
!4710 = !DILocation(line: 3347, column: 46, scope: !4711)
!4711 = !DILexicalBlockFile(scope: !4681, file: !512, discriminator: 10)
!4712 = !DILocation(line: 3347, column: 50, scope: !4711)
!4713 = !DILocation(line: 3347, column: 43, scope: !4711)
!4714 = !DILocation(line: 3347, column: 2, scope: !4711)
!4715 = distinct !{!4715, !4716}
!4716 = !DILocation(line: 3347, column: 2, scope: !4320)
!4717 = !DILocation(line: 3356, column: 2, scope: !4320)
!4718 = !DILocation(line: 3365, column: 2, scope: !4320)
!4719 = !DILocation(line: 3369, column: 6, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3369, column: 6)
!4721 = !DILocation(line: 3369, column: 6, scope: !4320)
!4722 = !DILocation(line: 3370, column: 3, scope: !4720)
!4723 = !DILocation(line: 3373, column: 6, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3373, column: 6)
!4725 = !DILocation(line: 3373, column: 19, scope: !4724)
!4726 = !DILocation(line: 3373, column: 38, scope: !4724)
!4727 = !DILocation(line: 3373, column: 41, scope: !4728)
!4728 = !DILexicalBlockFile(scope: !4724, file: !512, discriminator: 1)
!4729 = !DILocation(line: 3373, column: 54, scope: !4728)
!4730 = !DILocation(line: 3373, column: 6, scope: !4728)
!4731 = !DILocation(line: 3374, column: 3, scope: !4724)
!4732 = !DILocation(line: 3378, column: 2, scope: !4320)
!4733 = !DILocation(line: 3381, column: 31, scope: !4320)
!4734 = !DILocation(line: 3381, column: 52, scope: !4320)
!4735 = !DILocation(line: 3381, column: 73, scope: !4320)
!4736 = !DILocation(line: 3381, column: 93, scope: !4320)
!4737 = !DILocation(line: 3381, column: 2, scope: !4320)
!4738 = !DILocation(line: 3386, column: 7, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3386, column: 6)
!4740 = !DILocation(line: 3386, column: 6, scope: !4320)
!4741 = !DILocation(line: 3387, column: 3, scope: !4739)
!4742 = !DILocation(line: 3391, column: 2, scope: !4320)
!4743 = !DILocation(line: 3394, column: 2, scope: !4320)
!4744 = !DILocation(line: 3397, column: 15, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3397, column: 2)
!4746 = !DILocation(line: 3397, column: 26, scope: !4745)
!4747 = !DILocation(line: 3397, column: 14, scope: !4745)
!4748 = !DILocation(line: 3397, column: 37, scope: !4749)
!4749 = !DILexicalBlockFile(scope: !4745, file: !512, discriminator: 1)
!4750 = !DILocation(line: 3397, column: 48, scope: !4749)
!4751 = !DILocation(line: 3397, column: 36, scope: !4749)
!4752 = !DILocation(line: 3397, column: 35, scope: !4749)
!4753 = !DILocation(line: 3397, column: 35, scope: !4754)
!4754 = !DILexicalBlockFile(scope: !4745, file: !512, discriminator: 2)
!4755 = !DILocation(line: 3397, column: 4, scope: !4756)
!4756 = !DILexicalBlockFile(scope: !4745, file: !512, discriminator: 3)
!4757 = !DILocation(line: 3397, column: 15, scope: !4756)
!4758 = !DILocation(line: 3397, column: 22, scope: !4756)
!4759 = !DILocation(line: 3397, column: 35, scope: !4756)
!4760 = !DILocation(line: 3397, column: 35, scope: !4761)
!4761 = !DILexicalBlockFile(scope: !4745, file: !512, discriminator: 4)
!4762 = !DILocation(line: 3397, column: 14, scope: !4761)
!4763 = !DILocation(line: 3397, column: 14, scope: !4764)
!4764 = !DILexicalBlockFile(scope: !4745, file: !512, discriminator: 5)
!4765 = !DILocation(line: 3397, column: 14, scope: !4766)
!4766 = !DILexicalBlockFile(scope: !4745, file: !512, discriminator: 6)
!4767 = !DILocation(line: 3397, column: 11, scope: !4766)
!4768 = !DILocation(line: 3397, column: 7, scope: !4766)
!4769 = !DILocation(line: 3397, column: 5, scope: !4770)
!4770 = !DILexicalBlockFile(scope: !4771, file: !512, discriminator: 7)
!4771 = distinct !DILexicalBlock(scope: !4745, file: !512, line: 3397, column: 2)
!4772 = !DILocation(line: 3397, column: 4, scope: !4770)
!4773 = !DILocation(line: 3397, column: 8, scope: !4770)
!4774 = !DILocation(line: 3397, column: 23, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !4771, file: !512, discriminator: 8)
!4776 = !DILocation(line: 3397, column: 27, scope: !4775)
!4777 = !DILocation(line: 3397, column: 21, scope: !4775)
!4778 = !DILocation(line: 3397, column: 19, scope: !4775)
!4779 = !DILocation(line: 3397, column: 2, scope: !4780)
!4780 = !DILexicalBlockFile(scope: !4745, file: !512, discriminator: 9)
!4781 = !DILocation(line: 3399, column: 34, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4771, file: !512, line: 3397, column: 57)
!4783 = !DILocation(line: 3399, column: 3, scope: !4782)
!4784 = !DILocation(line: 3401, column: 7, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4782, file: !512, line: 3401, column: 7)
!4786 = !DILocation(line: 3401, column: 13, scope: !4785)
!4787 = !DILocation(line: 3401, column: 7, scope: !4782)
!4788 = !DILocation(line: 3402, column: 8, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4790, file: !512, line: 3402, column: 8)
!4790 = distinct !DILexicalBlock(scope: !4785, file: !512, line: 3401, column: 19)
!4791 = !DILocation(line: 3402, column: 14, scope: !4789)
!4792 = !DILocation(line: 3402, column: 20, scope: !4789)
!4793 = !DILocation(line: 3402, column: 8, scope: !4790)
!4794 = !DILocation(line: 3403, column: 9, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !512, line: 3403, column: 9)
!4796 = distinct !DILexicalBlock(scope: !4789, file: !512, line: 3402, column: 26)
!4797 = !DILocation(line: 3403, column: 15, scope: !4795)
!4798 = !DILocation(line: 3403, column: 21, scope: !4795)
!4799 = !DILocation(line: 3403, column: 27, scope: !4795)
!4800 = !DILocation(line: 3403, column: 9, scope: !4796)
!4801 = !DILocation(line: 3404, column: 6, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4795, file: !512, line: 3403, column: 33)
!4803 = !DILocation(line: 3404, column: 12, scope: !4802)
!4804 = !DILocation(line: 3404, column: 18, scope: !4802)
!4805 = !DILocation(line: 3404, column: 24, scope: !4802)
!4806 = !DILocation(line: 3405, column: 79, scope: !4802)
!4807 = !DILocation(line: 3405, column: 85, scope: !4802)
!4808 = !DILocation(line: 3405, column: 91, scope: !4802)
!4809 = !DILocation(line: 3405, column: 6, scope: !4802)
!4810 = !DILocation(line: 3406, column: 5, scope: !4802)
!4811 = !DILocation(line: 3408, column: 5, scope: !4796)
!4812 = !DILocation(line: 3408, column: 11, scope: !4796)
!4813 = !DILocation(line: 3408, column: 17, scope: !4796)
!4814 = !DILocation(line: 3408, column: 33, scope: !4796)
!4815 = !DILocation(line: 3409, column: 4, scope: !4796)
!4816 = !DILocation(line: 3410, column: 8, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4790, file: !512, line: 3410, column: 8)
!4818 = !DILocation(line: 3410, column: 14, scope: !4817)
!4819 = !DILocation(line: 3410, column: 8, scope: !4790)
!4820 = !DILocation(line: 3412, column: 5, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4817, file: !512, line: 3410, column: 31)
!4822 = !DILocation(line: 3412, column: 11, scope: !4821)
!4823 = !DILocation(line: 3412, column: 17, scope: !4821)
!4824 = !DILocation(line: 3412, column: 32, scope: !4821)
!4825 = !DILocation(line: 3413, column: 9, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4821, file: !512, line: 3413, column: 9)
!4827 = !DILocation(line: 3413, column: 15, scope: !4826)
!4828 = !DILocation(line: 3413, column: 21, scope: !4826)
!4829 = !DILocation(line: 3413, column: 27, scope: !4826)
!4830 = !DILocation(line: 3413, column: 9, scope: !4821)
!4831 = !DILocation(line: 3414, column: 6, scope: !4826)
!4832 = !DILocation(line: 3414, column: 12, scope: !4826)
!4833 = !DILocation(line: 3414, column: 18, scope: !4826)
!4834 = !DILocation(line: 3414, column: 24, scope: !4826)
!4835 = !DILocation(line: 3415, column: 4, scope: !4821)
!4836 = !DILocation(line: 3416, column: 3, scope: !4790)
!4837 = !DILocation(line: 3417, column: 2, scope: !4782)
!4838 = !DILocation(line: 3397, column: 46, scope: !4839)
!4839 = !DILexicalBlockFile(scope: !4771, file: !512, discriminator: 10)
!4840 = !DILocation(line: 3397, column: 50, scope: !4839)
!4841 = !DILocation(line: 3397, column: 43, scope: !4839)
!4842 = !DILocation(line: 3397, column: 2, scope: !4839)
!4843 = distinct !{!4843, !4844}
!4844 = !DILocation(line: 3397, column: 2, scope: !4320)
!4845 = !DILocation(line: 3421, column: 16, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3421, column: 2)
!4847 = !DILocation(line: 3421, column: 27, scope: !4846)
!4848 = !DILocation(line: 3421, column: 15, scope: !4846)
!4849 = !DILocation(line: 3421, column: 49, scope: !4850)
!4850 = !DILexicalBlockFile(scope: !4846, file: !512, discriminator: 1)
!4851 = !DILocation(line: 3421, column: 60, scope: !4850)
!4852 = !DILocation(line: 3421, column: 48, scope: !4850)
!4853 = !DILocation(line: 3421, column: 47, scope: !4850)
!4854 = !DILocation(line: 3421, column: 47, scope: !4855)
!4855 = !DILexicalBlockFile(scope: !4846, file: !512, discriminator: 2)
!4856 = !DILocation(line: 3421, column: 4, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !4846, file: !512, discriminator: 3)
!4858 = !DILocation(line: 3421, column: 15, scope: !4857)
!4859 = !DILocation(line: 3421, column: 33, scope: !4857)
!4860 = !DILocation(line: 3421, column: 47, scope: !4857)
!4861 = !DILocation(line: 3421, column: 47, scope: !4862)
!4862 = !DILexicalBlockFile(scope: !4846, file: !512, discriminator: 4)
!4863 = !DILocation(line: 3421, column: 15, scope: !4862)
!4864 = !DILocation(line: 3421, column: 15, scope: !4865)
!4865 = !DILexicalBlockFile(scope: !4846, file: !512, discriminator: 5)
!4866 = !DILocation(line: 3421, column: 15, scope: !4867)
!4867 = !DILexicalBlockFile(scope: !4846, file: !512, discriminator: 6)
!4868 = !DILocation(line: 3421, column: 12, scope: !4867)
!4869 = !DILocation(line: 3421, column: 7, scope: !4867)
!4870 = !DILocation(line: 3421, column: 5, scope: !4871)
!4871 = !DILexicalBlockFile(scope: !4872, file: !512, discriminator: 7)
!4872 = distinct !DILexicalBlock(scope: !4846, file: !512, line: 3421, column: 2)
!4873 = !DILocation(line: 3421, column: 4, scope: !4871)
!4874 = !DILocation(line: 3421, column: 9, scope: !4871)
!4875 = !DILocation(line: 3421, column: 26, scope: !4876)
!4876 = !DILexicalBlockFile(scope: !4872, file: !512, discriminator: 8)
!4877 = !DILocation(line: 3421, column: 31, scope: !4876)
!4878 = !DILocation(line: 3421, column: 24, scope: !4876)
!4879 = !DILocation(line: 3421, column: 22, scope: !4876)
!4880 = !DILocation(line: 3421, column: 2, scope: !4881)
!4881 = !DILexicalBlockFile(scope: !4846, file: !512, discriminator: 9)
!4882 = !DILocation(line: 3422, column: 15, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4872, file: !512, line: 3421, column: 63)
!4884 = !DILocation(line: 3423, column: 15, scope: !4883)
!4885 = !DILocation(line: 3424, column: 16, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4883, file: !512, line: 3424, column: 3)
!4887 = !DILocation(line: 3424, column: 24, scope: !4886)
!4888 = !DILocation(line: 3424, column: 15, scope: !4886)
!4889 = !DILocation(line: 3424, column: 45, scope: !4890)
!4890 = !DILexicalBlockFile(scope: !4886, file: !512, discriminator: 1)
!4891 = !DILocation(line: 3424, column: 53, scope: !4890)
!4892 = !DILocation(line: 3424, column: 44, scope: !4890)
!4893 = !DILocation(line: 3424, column: 43, scope: !4890)
!4894 = !DILocation(line: 3424, column: 43, scope: !4895)
!4895 = !DILexicalBlockFile(scope: !4886, file: !512, discriminator: 2)
!4896 = !DILocation(line: 3424, column: 5, scope: !4897)
!4897 = !DILexicalBlockFile(scope: !4886, file: !512, discriminator: 3)
!4898 = !DILocation(line: 3424, column: 13, scope: !4897)
!4899 = !DILocation(line: 3424, column: 30, scope: !4897)
!4900 = !DILocation(line: 3424, column: 43, scope: !4897)
!4901 = !DILocation(line: 3424, column: 43, scope: !4902)
!4902 = !DILexicalBlockFile(scope: !4886, file: !512, discriminator: 4)
!4903 = !DILocation(line: 3424, column: 15, scope: !4902)
!4904 = !DILocation(line: 3424, column: 15, scope: !4905)
!4905 = !DILexicalBlockFile(scope: !4886, file: !512, discriminator: 5)
!4906 = !DILocation(line: 3424, column: 15, scope: !4907)
!4907 = !DILexicalBlockFile(scope: !4886, file: !512, discriminator: 6)
!4908 = !DILocation(line: 3424, column: 12, scope: !4907)
!4909 = !DILocation(line: 3424, column: 8, scope: !4907)
!4910 = !DILocation(line: 3424, column: 6, scope: !4911)
!4911 = !DILexicalBlockFile(scope: !4912, file: !512, discriminator: 7)
!4912 = distinct !DILexicalBlock(scope: !4886, file: !512, line: 3424, column: 3)
!4913 = !DILocation(line: 3424, column: 5, scope: !4911)
!4914 = !DILocation(line: 3424, column: 9, scope: !4911)
!4915 = !DILocation(line: 3424, column: 24, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !4912, file: !512, discriminator: 8)
!4917 = !DILocation(line: 3424, column: 28, scope: !4916)
!4918 = !DILocation(line: 3424, column: 22, scope: !4916)
!4919 = !DILocation(line: 3424, column: 20, scope: !4916)
!4920 = !DILocation(line: 3424, column: 3, scope: !4921)
!4921 = !DILexicalBlockFile(scope: !4886, file: !512, discriminator: 9)
!4922 = !DILocation(line: 3425, column: 8, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !512, line: 3425, column: 8)
!4924 = distinct !DILexicalBlock(scope: !4912, file: !512, line: 3424, column: 58)
!4925 = !DILocation(line: 3425, column: 14, scope: !4923)
!4926 = !DILocation(line: 3425, column: 24, scope: !4923)
!4927 = !DILocation(line: 3425, column: 29, scope: !4923)
!4928 = !DILocation(line: 3425, column: 32, scope: !4929)
!4929 = !DILexicalBlockFile(scope: !4923, file: !512, discriminator: 1)
!4930 = !DILocation(line: 3425, column: 38, scope: !4929)
!4931 = !DILocation(line: 3425, column: 52, scope: !4929)
!4932 = !DILocation(line: 3425, column: 8, scope: !4929)
!4933 = !DILocation(line: 3426, column: 17, scope: !4923)
!4934 = !DILocation(line: 3426, column: 5, scope: !4923)
!4935 = !DILocation(line: 3427, column: 8, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4924, file: !512, line: 3427, column: 8)
!4937 = !DILocation(line: 3427, column: 14, scope: !4936)
!4938 = !DILocation(line: 3427, column: 24, scope: !4936)
!4939 = !DILocation(line: 3427, column: 8, scope: !4924)
!4940 = !DILocation(line: 3428, column: 17, scope: !4936)
!4941 = !DILocation(line: 3428, column: 5, scope: !4936)
!4942 = !DILocation(line: 3429, column: 8, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4924, file: !512, line: 3429, column: 8)
!4944 = !DILocation(line: 3429, column: 20, scope: !4943)
!4945 = !DILocation(line: 3429, column: 23, scope: !4946)
!4946 = !DILexicalBlockFile(scope: !4943, file: !512, discriminator: 1)
!4947 = !DILocation(line: 3429, column: 8, scope: !4946)
!4948 = !DILocation(line: 3432, column: 18, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !512, line: 3432, column: 5)
!4950 = distinct !DILexicalBlock(scope: !4943, file: !512, line: 3429, column: 36)
!4951 = !DILocation(line: 3432, column: 26, scope: !4949)
!4952 = !DILocation(line: 3432, column: 17, scope: !4949)
!4953 = !DILocation(line: 3432, column: 47, scope: !4954)
!4954 = !DILexicalBlockFile(scope: !4949, file: !512, discriminator: 1)
!4955 = !DILocation(line: 3432, column: 55, scope: !4954)
!4956 = !DILocation(line: 3432, column: 46, scope: !4954)
!4957 = !DILocation(line: 3432, column: 45, scope: !4954)
!4958 = !DILocation(line: 3432, column: 45, scope: !4959)
!4959 = !DILexicalBlockFile(scope: !4949, file: !512, discriminator: 2)
!4960 = !DILocation(line: 3432, column: 7, scope: !4961)
!4961 = !DILexicalBlockFile(scope: !4949, file: !512, discriminator: 3)
!4962 = !DILocation(line: 3432, column: 15, scope: !4961)
!4963 = !DILocation(line: 3432, column: 32, scope: !4961)
!4964 = !DILocation(line: 3432, column: 45, scope: !4961)
!4965 = !DILocation(line: 3432, column: 45, scope: !4966)
!4966 = !DILexicalBlockFile(scope: !4949, file: !512, discriminator: 4)
!4967 = !DILocation(line: 3432, column: 17, scope: !4966)
!4968 = !DILocation(line: 3432, column: 17, scope: !4969)
!4969 = !DILexicalBlockFile(scope: !4949, file: !512, discriminator: 5)
!4970 = !DILocation(line: 3432, column: 17, scope: !4971)
!4971 = !DILexicalBlockFile(scope: !4949, file: !512, discriminator: 6)
!4972 = !DILocation(line: 3432, column: 14, scope: !4971)
!4973 = !DILocation(line: 3432, column: 10, scope: !4971)
!4974 = !DILocation(line: 3432, column: 8, scope: !4975)
!4975 = !DILexicalBlockFile(scope: !4976, file: !512, discriminator: 7)
!4976 = distinct !DILexicalBlock(scope: !4949, file: !512, line: 3432, column: 5)
!4977 = !DILocation(line: 3432, column: 7, scope: !4975)
!4978 = !DILocation(line: 3432, column: 11, scope: !4975)
!4979 = !DILocation(line: 3432, column: 26, scope: !4980)
!4980 = !DILexicalBlockFile(scope: !4976, file: !512, discriminator: 8)
!4981 = !DILocation(line: 3432, column: 30, scope: !4980)
!4982 = !DILocation(line: 3432, column: 24, scope: !4980)
!4983 = !DILocation(line: 3432, column: 22, scope: !4980)
!4984 = !DILocation(line: 3432, column: 5, scope: !4985)
!4985 = !DILexicalBlockFile(scope: !4949, file: !512, discriminator: 9)
!4986 = !DILocation(line: 3433, column: 10, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !512, line: 3433, column: 10)
!4988 = distinct !DILexicalBlock(scope: !4976, file: !512, line: 3432, column: 60)
!4989 = !DILocation(line: 3433, column: 16, scope: !4987)
!4990 = !DILocation(line: 3433, column: 26, scope: !4987)
!4991 = !DILocation(line: 3433, column: 10, scope: !4988)
!4992 = !DILocation(line: 3434, column: 7, scope: !4987)
!4993 = !DILocation(line: 3434, column: 13, scope: !4987)
!4994 = !DILocation(line: 3434, column: 23, scope: !4987)
!4995 = !DILocation(line: 3435, column: 5, scope: !4988)
!4996 = !DILocation(line: 3432, column: 49, scope: !4997)
!4997 = !DILexicalBlockFile(scope: !4976, file: !512, discriminator: 10)
!4998 = !DILocation(line: 3432, column: 53, scope: !4997)
!4999 = !DILocation(line: 3432, column: 46, scope: !4997)
!5000 = !DILocation(line: 3432, column: 5, scope: !4997)
!5001 = distinct !{!5001, !5002}
!5002 = !DILocation(line: 3432, column: 5, scope: !4950)
!5003 = !DILocation(line: 3436, column: 5, scope: !4950)
!5004 = !DILocation(line: 3438, column: 3, scope: !4924)
!5005 = !DILocation(line: 3424, column: 47, scope: !5006)
!5006 = !DILexicalBlockFile(scope: !4912, file: !512, discriminator: 10)
!5007 = !DILocation(line: 3424, column: 51, scope: !5006)
!5008 = !DILocation(line: 3424, column: 44, scope: !5006)
!5009 = !DILocation(line: 3424, column: 3, scope: !5006)
!5010 = distinct !{!5010, !5011}
!5011 = !DILocation(line: 3424, column: 3, scope: !4883)
!5012 = !DILocation(line: 3439, column: 2, scope: !4883)
!5013 = !DILocation(line: 3421, column: 51, scope: !5014)
!5014 = !DILexicalBlockFile(scope: !4872, file: !512, discriminator: 10)
!5015 = !DILocation(line: 3421, column: 56, scope: !5014)
!5016 = !DILocation(line: 3421, column: 48, scope: !5014)
!5017 = !DILocation(line: 3421, column: 2, scope: !5014)
!5018 = distinct !{!5018, !5019}
!5019 = !DILocation(line: 3421, column: 2, scope: !4320)
!5020 = !DILocation(line: 3446, column: 14, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3446, column: 2)
!5022 = !DILocation(line: 3446, column: 25, scope: !5021)
!5023 = !DILocation(line: 3446, column: 13, scope: !5021)
!5024 = !DILocation(line: 3446, column: 12, scope: !5021)
!5025 = !DILocation(line: 3446, column: 12, scope: !5026)
!5026 = !DILexicalBlockFile(scope: !5021, file: !512, discriminator: 1)
!5027 = !DILocation(line: 3446, column: 13, scope: !5028)
!5028 = !DILexicalBlockFile(scope: !5021, file: !512, discriminator: 2)
!5029 = !DILocation(line: 3446, column: 24, scope: !5028)
!5030 = !DILocation(line: 3446, column: 31, scope: !5028)
!5031 = !DILocation(line: 3446, column: 12, scope: !5028)
!5032 = !DILocation(line: 3446, column: 12, scope: !5033)
!5033 = !DILexicalBlockFile(scope: !5021, file: !512, discriminator: 3)
!5034 = !DILocation(line: 3446, column: 9, scope: !5033)
!5035 = !DILocation(line: 3446, column: 7, scope: !5033)
!5036 = !DILocation(line: 3446, column: 38, scope: !5037)
!5037 = !DILexicalBlockFile(scope: !5038, file: !512, discriminator: 4)
!5038 = distinct !DILexicalBlock(scope: !5021, file: !512, line: 3446, column: 2)
!5039 = !DILocation(line: 3446, column: 2, scope: !5037)
!5040 = !DILocation(line: 3447, column: 12, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5038, file: !512, line: 3446, column: 60)
!5042 = !DILocation(line: 3447, column: 16, scope: !5041)
!5043 = !DILocation(line: 3447, column: 10, scope: !5041)
!5044 = !DILocation(line: 3447, column: 8, scope: !5041)
!5045 = !DILocation(line: 3449, column: 7, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5041, file: !512, line: 3449, column: 7)
!5047 = !DILocation(line: 3449, column: 13, scope: !5046)
!5048 = !DILocation(line: 3449, column: 19, scope: !5046)
!5049 = !DILocation(line: 3449, column: 24, scope: !5046)
!5050 = !DILocation(line: 3450, column: 8, scope: !5046)
!5051 = !DILocation(line: 3450, column: 14, scope: !5046)
!5052 = !DILocation(line: 3450, column: 19, scope: !5046)
!5053 = !DILocation(line: 3450, column: 22, scope: !5054)
!5054 = !DILexicalBlockFile(scope: !5046, file: !512, discriminator: 1)
!5055 = !DILocation(line: 3450, column: 28, scope: !5054)
!5056 = !DILocation(line: 3450, column: 34, scope: !5054)
!5057 = !DILocation(line: 3450, column: 40, scope: !5054)
!5058 = !DILocation(line: 3449, column: 7, scope: !5059)
!5059 = !DILexicalBlockFile(scope: !5041, file: !512, discriminator: 1)
!5060 = !DILocation(line: 3451, column: 4, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5046, file: !512, line: 3450, column: 47)
!5062 = !DILocation(line: 3451, column: 10, scope: !5061)
!5063 = !DILocation(line: 3451, column: 16, scope: !5061)
!5064 = !DILocation(line: 3453, column: 54, scope: !5061)
!5065 = !DILocation(line: 3453, column: 60, scope: !5061)
!5066 = !DILocation(line: 3453, column: 4, scope: !5061)
!5067 = !DILocation(line: 3455, column: 27, scope: !5061)
!5068 = !DILocation(line: 3455, column: 4, scope: !5061)
!5069 = !DILocation(line: 3456, column: 3, scope: !5061)
!5070 = !DILocation(line: 3457, column: 2, scope: !5041)
!5071 = !DILocation(line: 3446, column: 49, scope: !5072)
!5072 = !DILexicalBlockFile(scope: !5038, file: !512, discriminator: 5)
!5073 = !DILocation(line: 3446, column: 53, scope: !5072)
!5074 = !DILocation(line: 3446, column: 46, scope: !5072)
!5075 = !DILocation(line: 3446, column: 2, scope: !5072)
!5076 = distinct !{!5076, !5077}
!5077 = !DILocation(line: 3446, column: 2, scope: !4320)
!5078 = !DILocation(line: 3459, column: 6, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3459, column: 6)
!5080 = !DILocation(line: 3459, column: 6, scope: !4320)
!5081 = !DILocation(line: 3461, column: 15, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5083, file: !512, line: 3461, column: 3)
!5083 = distinct !DILexicalBlock(scope: !5079, file: !512, line: 3459, column: 14)
!5084 = !DILocation(line: 3461, column: 30, scope: !5082)
!5085 = !DILocation(line: 3461, column: 14, scope: !5082)
!5086 = !DILocation(line: 3461, column: 13, scope: !5082)
!5087 = !DILocation(line: 3461, column: 13, scope: !5088)
!5088 = !DILexicalBlockFile(scope: !5082, file: !512, discriminator: 1)
!5089 = !DILocation(line: 3461, column: 14, scope: !5090)
!5090 = !DILexicalBlockFile(scope: !5082, file: !512, discriminator: 2)
!5091 = !DILocation(line: 3461, column: 29, scope: !5090)
!5092 = !DILocation(line: 3461, column: 36, scope: !5090)
!5093 = !DILocation(line: 3461, column: 13, scope: !5090)
!5094 = !DILocation(line: 3461, column: 13, scope: !5095)
!5095 = !DILexicalBlockFile(scope: !5082, file: !512, discriminator: 3)
!5096 = !DILocation(line: 3461, column: 10, scope: !5095)
!5097 = !DILocation(line: 3461, column: 8, scope: !5095)
!5098 = !DILocation(line: 3461, column: 43, scope: !5099)
!5099 = !DILexicalBlockFile(scope: !5100, file: !512, discriminator: 4)
!5100 = distinct !DILexicalBlock(scope: !5082, file: !512, line: 3461, column: 3)
!5101 = !DILocation(line: 3461, column: 3, scope: !5099)
!5102 = !DILocation(line: 3462, column: 17, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5100, file: !512, line: 3461, column: 65)
!5104 = !DILocation(line: 3462, column: 21, scope: !5103)
!5105 = !DILocation(line: 3462, column: 15, scope: !5103)
!5106 = !DILocation(line: 3462, column: 13, scope: !5103)
!5107 = !DILocation(line: 3463, column: 22, scope: !5103)
!5108 = !DILocation(line: 3463, column: 11, scope: !5103)
!5109 = !DILocation(line: 3463, column: 9, scope: !5103)
!5110 = !DILocation(line: 3464, column: 8, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5103, file: !512, line: 3464, column: 8)
!5112 = !DILocation(line: 3464, column: 8, scope: !5103)
!5113 = !DILocation(line: 3466, column: 9, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5115, file: !512, line: 3466, column: 9)
!5115 = distinct !DILexicalBlock(scope: !5111, file: !512, line: 3464, column: 14)
!5116 = !DILocation(line: 3466, column: 15, scope: !5114)
!5117 = !DILocation(line: 3466, column: 21, scope: !5114)
!5118 = !DILocation(line: 3466, column: 26, scope: !5114)
!5119 = !DILocation(line: 3466, column: 29, scope: !5120)
!5120 = !DILexicalBlockFile(scope: !5114, file: !512, discriminator: 1)
!5121 = !DILocation(line: 3466, column: 35, scope: !5120)
!5122 = !DILocation(line: 3466, column: 9, scope: !5120)
!5123 = !DILocation(line: 3467, column: 6, scope: !5114)
!5124 = !DILocation(line: 3469, column: 19, scope: !5115)
!5125 = !DILocation(line: 3469, column: 29, scope: !5115)
!5126 = !DILocation(line: 3469, column: 5, scope: !5115)
!5127 = !DILocation(line: 3469, column: 11, scope: !5115)
!5128 = !DILocation(line: 3469, column: 17, scope: !5115)
!5129 = !DILocation(line: 3470, column: 23, scope: !5115)
!5130 = !DILocation(line: 3470, column: 33, scope: !5115)
!5131 = !DILocation(line: 3470, column: 5, scope: !5115)
!5132 = !DILocation(line: 3470, column: 11, scope: !5115)
!5133 = !DILocation(line: 3470, column: 21, scope: !5115)
!5134 = !DILocation(line: 3471, column: 4, scope: !5115)
!5135 = !DILocation(line: 3472, column: 3, scope: !5103)
!5136 = !DILocation(line: 3461, column: 54, scope: !5137)
!5137 = !DILexicalBlockFile(scope: !5100, file: !512, discriminator: 5)
!5138 = !DILocation(line: 3461, column: 58, scope: !5137)
!5139 = !DILocation(line: 3461, column: 51, scope: !5137)
!5140 = !DILocation(line: 3461, column: 3, scope: !5137)
!5141 = distinct !{!5141, !5142}
!5142 = !DILocation(line: 3461, column: 3, scope: !5083)
!5143 = !DILocation(line: 3473, column: 2, scope: !5083)
!5144 = !DILocation(line: 3477, column: 6, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3477, column: 6)
!5146 = !DILocation(line: 3477, column: 19, scope: !5145)
!5147 = !DILocation(line: 3477, column: 29, scope: !5145)
!5148 = !DILocation(line: 3477, column: 6, scope: !4320)
!5149 = !DILocation(line: 3478, column: 15, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5151, file: !512, line: 3478, column: 3)
!5151 = distinct !DILexicalBlock(scope: !5145, file: !512, line: 3477, column: 40)
!5152 = !DILocation(line: 3478, column: 26, scope: !5150)
!5153 = !DILocation(line: 3478, column: 14, scope: !5150)
!5154 = !DILocation(line: 3478, column: 13, scope: !5150)
!5155 = !DILocation(line: 3478, column: 13, scope: !5156)
!5156 = !DILexicalBlockFile(scope: !5150, file: !512, discriminator: 1)
!5157 = !DILocation(line: 3478, column: 14, scope: !5158)
!5158 = !DILexicalBlockFile(scope: !5150, file: !512, discriminator: 2)
!5159 = !DILocation(line: 3478, column: 25, scope: !5158)
!5160 = !DILocation(line: 3478, column: 32, scope: !5158)
!5161 = !DILocation(line: 3478, column: 13, scope: !5158)
!5162 = !DILocation(line: 3478, column: 13, scope: !5163)
!5163 = !DILexicalBlockFile(scope: !5150, file: !512, discriminator: 3)
!5164 = !DILocation(line: 3478, column: 10, scope: !5163)
!5165 = !DILocation(line: 3478, column: 8, scope: !5163)
!5166 = !DILocation(line: 3478, column: 39, scope: !5167)
!5167 = !DILexicalBlockFile(scope: !5168, file: !512, discriminator: 4)
!5168 = distinct !DILexicalBlock(scope: !5150, file: !512, line: 3478, column: 3)
!5169 = !DILocation(line: 3478, column: 3, scope: !5167)
!5170 = !DILocation(line: 3479, column: 13, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5168, file: !512, line: 3478, column: 61)
!5172 = !DILocation(line: 3479, column: 17, scope: !5171)
!5173 = !DILocation(line: 3479, column: 11, scope: !5171)
!5174 = !DILocation(line: 3479, column: 9, scope: !5171)
!5175 = !DILocation(line: 3480, column: 16, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5171, file: !512, line: 3480, column: 8)
!5177 = !DILocation(line: 3480, column: 29, scope: !5176)
!5178 = !DILocation(line: 3480, column: 39, scope: !5176)
!5179 = !DILocation(line: 3480, column: 50, scope: !5176)
!5180 = !DILocation(line: 3480, column: 56, scope: !5176)
!5181 = !DILocation(line: 3480, column: 9, scope: !5176)
!5182 = !DILocation(line: 3480, column: 8, scope: !5171)
!5183 = !DILocation(line: 3481, column: 35, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5176, file: !512, line: 3480, column: 64)
!5185 = !DILocation(line: 3481, column: 5, scope: !5184)
!5186 = !DILocation(line: 3481, column: 18, scope: !5184)
!5187 = !DILocation(line: 3481, column: 28, scope: !5184)
!5188 = !DILocation(line: 3481, column: 33, scope: !5184)
!5189 = !DILocation(line: 3483, column: 5, scope: !5184)
!5190 = !DILocation(line: 3485, column: 3, scope: !5171)
!5191 = !DILocation(line: 3478, column: 50, scope: !5192)
!5192 = !DILexicalBlockFile(scope: !5168, file: !512, discriminator: 5)
!5193 = !DILocation(line: 3478, column: 54, scope: !5192)
!5194 = !DILocation(line: 3478, column: 47, scope: !5192)
!5195 = !DILocation(line: 3478, column: 3, scope: !5192)
!5196 = distinct !{!5196, !5197}
!5197 = !DILocation(line: 3478, column: 3, scope: !5151)
!5198 = !DILocation(line: 3487, column: 8, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5151, file: !512, line: 3487, column: 7)
!5200 = !DILocation(line: 3487, column: 21, scope: !5199)
!5201 = !DILocation(line: 3487, column: 31, scope: !5199)
!5202 = !DILocation(line: 3487, column: 7, scope: !5151)
!5203 = !DILocation(line: 3488, column: 123, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5199, file: !512, line: 3487, column: 37)
!5205 = !DILocation(line: 3488, column: 136, scope: !5204)
!5206 = !DILocation(line: 3488, column: 146, scope: !5204)
!5207 = !DILocation(line: 3488, column: 4, scope: !5204)
!5208 = !DILocation(line: 3489, column: 10, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5210, file: !512, line: 3489, column: 10)
!5210 = distinct !DILexicalBlock(scope: !5204, file: !512, line: 3489, column: 4)
!5211 = !DILocation(line: 3489, column: 23, scope: !5209)
!5212 = !DILocation(line: 3489, column: 33, scope: !5209)
!5213 = !DILocation(line: 3489, column: 10, scope: !5210)
!5214 = !DILocation(line: 3489, column: 49, scope: !5215)
!5215 = !DILexicalBlockFile(scope: !5216, file: !512, discriminator: 1)
!5216 = distinct !DILexicalBlock(scope: !5209, file: !512, line: 3489, column: 41)
!5217 = !DILocation(line: 3489, column: 62, scope: !5215)
!5218 = !DILocation(line: 3489, column: 72, scope: !5215)
!5219 = !DILocation(line: 3489, column: 44, scope: !5215)
!5220 = !DILocation(line: 3489, column: 82, scope: !5215)
!5221 = !DILocation(line: 3489, column: 95, scope: !5215)
!5222 = !DILocation(line: 3489, column: 105, scope: !5215)
!5223 = !DILocation(line: 3489, column: 113, scope: !5215)
!5224 = !DILocation(line: 3489, column: 5, scope: !5215)
!5225 = !DILocation(line: 3490, column: 4, scope: !5204)
!5226 = !DILocation(line: 3490, column: 17, scope: !5204)
!5227 = !DILocation(line: 3490, column: 27, scope: !5204)
!5228 = !DILocation(line: 3490, column: 34, scope: !5204)
!5229 = !DILocation(line: 3491, column: 4, scope: !5204)
!5230 = !DILocation(line: 3491, column: 17, scope: !5204)
!5231 = !DILocation(line: 3491, column: 27, scope: !5204)
!5232 = !DILocation(line: 3491, column: 34, scope: !5204)
!5233 = !DILocation(line: 3492, column: 3, scope: !5204)
!5234 = !DILocation(line: 3493, column: 12, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5199, file: !512, line: 3493, column: 12)
!5236 = !DILocation(line: 3493, column: 25, scope: !5235)
!5237 = !DILocation(line: 3493, column: 35, scope: !5235)
!5238 = !DILocation(line: 3493, column: 42, scope: !5235)
!5239 = !DILocation(line: 3493, column: 12, scope: !5199)
!5240 = !DILocation(line: 3495, column: 36, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5235, file: !512, line: 3493, column: 61)
!5242 = !DILocation(line: 3495, column: 49, scope: !5241)
!5243 = !DILocation(line: 3495, column: 59, scope: !5241)
!5244 = !DILocation(line: 3495, column: 65, scope: !5241)
!5245 = !DILocation(line: 3495, column: 4, scope: !5241)
!5246 = !DILocation(line: 3495, column: 17, scope: !5241)
!5247 = !DILocation(line: 3495, column: 27, scope: !5241)
!5248 = !DILocation(line: 3495, column: 34, scope: !5241)
!5249 = !DILocation(line: 3496, column: 3, scope: !5241)
!5250 = !DILocation(line: 3499, column: 9, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5252, file: !512, line: 3499, column: 9)
!5252 = distinct !DILexicalBlock(scope: !5151, file: !512, line: 3499, column: 3)
!5253 = !DILocation(line: 3499, column: 22, scope: !5251)
!5254 = !DILocation(line: 3499, column: 32, scope: !5251)
!5255 = !DILocation(line: 3499, column: 9, scope: !5252)
!5256 = !DILocation(line: 3499, column: 51, scope: !5257)
!5257 = !DILexicalBlockFile(scope: !5258, file: !512, discriminator: 1)
!5258 = distinct !DILexicalBlock(scope: !5251, file: !512, line: 3499, column: 43)
!5259 = !DILocation(line: 3499, column: 64, scope: !5257)
!5260 = !DILocation(line: 3499, column: 74, scope: !5257)
!5261 = !DILocation(line: 3499, column: 46, scope: !5257)
!5262 = !DILocation(line: 3499, column: 87, scope: !5257)
!5263 = !DILocation(line: 3499, column: 100, scope: !5257)
!5264 = !DILocation(line: 3499, column: 110, scope: !5257)
!5265 = !DILocation(line: 3499, column: 121, scope: !5257)
!5266 = !DILocation(line: 3499, column: 4, scope: !5257)
!5267 = !DILocation(line: 3500, column: 3, scope: !5151)
!5268 = !DILocation(line: 3500, column: 16, scope: !5151)
!5269 = !DILocation(line: 3500, column: 26, scope: !5151)
!5270 = !DILocation(line: 3500, column: 36, scope: !5151)
!5271 = !DILocation(line: 3501, column: 2, scope: !5151)
!5272 = !DILocation(line: 3505, column: 9, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !4320, file: !512, line: 3505, column: 6)
!5274 = !DILocation(line: 3505, column: 20, scope: !5273)
!5275 = !DILocation(line: 3505, column: 33, scope: !5273)
!5276 = !DILocation(line: 3505, column: 6, scope: !5273)
!5277 = !DILocation(line: 3505, column: 11, scope: !5278)
!5278 = !DILexicalBlockFile(scope: !5273, file: !512, discriminator: 1)
!5279 = !DILocation(line: 3505, column: 22, scope: !5278)
!5280 = !DILocation(line: 3505, column: 36, scope: !5278)
!5281 = !DILocation(line: 3505, column: 41, scope: !5278)
!5282 = !DILocation(line: 3505, column: 6, scope: !5278)
!5283 = !DILocation(line: 3505, column: 10, scope: !5284)
!5284 = !DILexicalBlockFile(scope: !5273, file: !512, discriminator: 2)
!5285 = !DILocation(line: 3505, column: 21, scope: !5284)
!5286 = !DILocation(line: 3505, column: 35, scope: !5284)
!5287 = !DILocation(line: 3505, column: 40, scope: !5284)
!5288 = !DILocation(line: 3505, column: 6, scope: !5284)
!5289 = !DILocation(line: 3506, column: 15, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5291, file: !512, line: 3506, column: 3)
!5291 = distinct !DILexicalBlock(scope: !5273, file: !512, line: 3505, column: 10)
!5292 = !DILocation(line: 3506, column: 26, scope: !5290)
!5293 = !DILocation(line: 3506, column: 14, scope: !5290)
!5294 = !DILocation(line: 3506, column: 13, scope: !5290)
!5295 = !DILocation(line: 3506, column: 13, scope: !5296)
!5296 = !DILexicalBlockFile(scope: !5290, file: !512, discriminator: 1)
!5297 = !DILocation(line: 3506, column: 14, scope: !5298)
!5298 = !DILexicalBlockFile(scope: !5290, file: !512, discriminator: 2)
!5299 = !DILocation(line: 3506, column: 25, scope: !5298)
!5300 = !DILocation(line: 3506, column: 39, scope: !5298)
!5301 = !DILocation(line: 3506, column: 13, scope: !5298)
!5302 = !DILocation(line: 3506, column: 13, scope: !5303)
!5303 = !DILexicalBlockFile(scope: !5290, file: !512, discriminator: 3)
!5304 = !DILocation(line: 3506, column: 10, scope: !5303)
!5305 = !DILocation(line: 3506, column: 8, scope: !5303)
!5306 = !DILocation(line: 3506, column: 46, scope: !5307)
!5307 = !DILexicalBlockFile(scope: !5308, file: !512, discriminator: 4)
!5308 = distinct !DILexicalBlock(scope: !5290, file: !512, line: 3506, column: 3)
!5309 = !DILocation(line: 3506, column: 3, scope: !5307)
!5310 = !DILocation(line: 3507, column: 11, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5308, file: !512, line: 3506, column: 59)
!5312 = !DILocation(line: 3507, column: 14, scope: !5311)
!5313 = !DILocation(line: 3507, column: 9, scope: !5311)
!5314 = !DILocalVariable(name: "scr", scope: !5311, file: !512, line: 3508, type: !5315)
!5315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5316, size: 64, align: 64)
!5316 = !DIDerivedType(tag: DW_TAG_typedef, name: "vrrp_script_t", file: !96, line: 74, baseType: !5317)
!5317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_vrrp_script", file: !96, line: 60, size: 704, align: 64, elements: !5318)
!5318 = !{!5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5331, !5333}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "sname", scope: !5317, file: !96, line: 61, baseType: !230, size: 64, align: 64)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !5317, file: !96, line: 62, baseType: !562, size: 192, align: 64, offset: 64)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5317, file: !96, line: 63, baseType: !294, size: 64, align: 64, offset: 256)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5317, file: !96, line: 64, baseType: !294, size: 64, align: 64, offset: 320)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5317, file: !96, line: 65, baseType: !300, size: 32, align: 32, offset: 384)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5317, file: !96, line: 66, baseType: !300, size: 32, align: 32, offset: 416)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "rise", scope: !5317, file: !96, line: 67, baseType: !300, size: 32, align: 32, offset: 448)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "fall", scope: !5317, file: !96, line: 68, baseType: !300, size: 32, align: 32, offset: 480)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_vrrp", scope: !5317, file: !96, line: 69, baseType: !400, size: 64, align: 64, offset: 512)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "last_status", scope: !5317, file: !96, line: 70, baseType: !300, size: 32, align: 32, offset: 576)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5317, file: !96, line: 71, baseType: !5330, size: 32, align: 32, offset: 608)
!5330 = !DIDerivedType(tag: DW_TAG_typedef, name: "script_state_t", file: !142, line: 50, baseType: !141)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !5317, file: !96, line: 72, baseType: !5332, size: 32, align: 32, offset: 640)
!5332 = !DIDerivedType(tag: DW_TAG_typedef, name: "script_init_state_t", file: !142, line: 56, baseType: !148)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "insecure", scope: !5317, file: !96, line: 73, baseType: !350, size: 8, align: 8, offset: 672)
!5334 = !DILocation(line: 3508, column: 19, scope: !5311)
!5335 = !DILocation(line: 3508, column: 27, scope: !5311)
!5336 = !DILocation(line: 3508, column: 31, scope: !5311)
!5337 = !DILocation(line: 3508, column: 25, scope: !5311)
!5338 = !DILocation(line: 3509, column: 10, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5311, file: !512, line: 3509, column: 8)
!5340 = !DILocation(line: 3509, column: 15, scope: !5339)
!5341 = !DILocation(line: 3509, column: 30, scope: !5339)
!5342 = !DILocation(line: 3509, column: 7, scope: !5339)
!5343 = !DILocation(line: 3509, column: 12, scope: !5344)
!5344 = !DILexicalBlockFile(scope: !5339, file: !512, discriminator: 1)
!5345 = !DILocation(line: 3509, column: 17, scope: !5344)
!5346 = !DILocation(line: 3509, column: 33, scope: !5344)
!5347 = !DILocation(line: 3509, column: 38, scope: !5344)
!5348 = !DILocation(line: 3509, column: 7, scope: !5344)
!5349 = !DILocation(line: 3509, column: 11, scope: !5350)
!5350 = !DILexicalBlockFile(scope: !5339, file: !512, discriminator: 2)
!5351 = !DILocation(line: 3509, column: 16, scope: !5350)
!5352 = !DILocation(line: 3509, column: 32, scope: !5350)
!5353 = !DILocation(line: 3509, column: 37, scope: !5350)
!5354 = !DILocation(line: 3509, column: 8, scope: !5350)
!5355 = !DILocation(line: 3510, column: 82, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5339, file: !512, line: 3509, column: 11)
!5357 = !DILocation(line: 3510, column: 87, scope: !5356)
!5358 = !DILocation(line: 3510, column: 5, scope: !5356)
!5359 = !DILocation(line: 3511, column: 23, scope: !5356)
!5360 = !DILocation(line: 3511, column: 34, scope: !5356)
!5361 = !DILocation(line: 3511, column: 47, scope: !5356)
!5362 = !DILocation(line: 3511, column: 5, scope: !5356)
!5363 = !DILocation(line: 3512, column: 4, scope: !5356)
!5364 = !DILocation(line: 3513, column: 3, scope: !5311)
!5365 = !DILocation(line: 3506, column: 53, scope: !5366)
!5366 = !DILexicalBlockFile(scope: !5308, file: !512, discriminator: 5)
!5367 = !DILocation(line: 3506, column: 51, scope: !5366)
!5368 = !DILocation(line: 3506, column: 3, scope: !5366)
!5369 = distinct !{!5369, !5370}
!5370 = !DILocation(line: 3506, column: 3, scope: !5291)
!5371 = !DILocation(line: 3514, column: 2, scope: !5291)
!5372 = !DILocation(line: 3516, column: 20, scope: !4320)
!5373 = !DILocation(line: 3516, column: 2, scope: !4320)
!5374 = !DILocation(line: 3518, column: 2, scope: !4320)
!5375 = !DILocation(line: 3519, column: 1, scope: !4320)
!5376 = distinct !DISubprogram(name: "check_vrrp_script_security", scope: !512, file: !512, line: 223, type: !524, isLocal: true, isDefinition: true, scopeLine: 224, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!5377 = !DILocalVariable(name: "e", scope: !5376, file: !512, line: 225, type: !984)
!5378 = !DILocation(line: 225, column: 10, scope: !5376)
!5379 = !DILocalVariable(name: "e1", scope: !5376, file: !512, line: 225, type: !984)
!5380 = !DILocation(line: 225, column: 13, scope: !5376)
!5381 = !DILocalVariable(name: "next", scope: !5376, file: !512, line: 225, type: !984)
!5382 = !DILocation(line: 225, column: 17, scope: !5376)
!5383 = !DILocalVariable(name: "vrrp", scope: !5376, file: !512, line: 226, type: !537)
!5384 = !DILocation(line: 226, column: 10, scope: !5376)
!5385 = !DILocalVariable(name: "sg", scope: !5376, file: !512, line: 227, type: !544)
!5386 = !DILocation(line: 227, column: 17, scope: !5376)
!5387 = !DILocalVariable(name: "track_script", scope: !5376, file: !512, line: 228, type: !5388)
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64, align: 64)
!5389 = !DIDerivedType(tag: DW_TAG_typedef, name: "tracked_sc_t", file: !96, line: 80, baseType: !5390)
!5390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_tracked_sc", file: !96, line: 77, size: 128, align: 64, elements: !5391)
!5391 = !{!5392, !5393}
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "scr", scope: !5390, file: !96, line: 78, baseType: !5315, size: 64, align: 64)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5390, file: !96, line: 79, baseType: !300, size: 32, align: 32, offset: 64)
!5394 = !DILocation(line: 228, column: 16, scope: !5376)
!5395 = !DILocalVariable(name: "vscript", scope: !5376, file: !512, line: 229, type: !5315)
!5396 = !DILocation(line: 229, column: 17, scope: !5376)
!5397 = !DILocalVariable(name: "script_flags", scope: !5376, file: !512, line: 230, type: !300)
!5398 = !DILocation(line: 230, column: 6, scope: !5376)
!5399 = !DILocalVariable(name: "magic", scope: !5376, file: !512, line: 231, type: !5400)
!5400 = !DIDerivedType(tag: DW_TAG_typedef, name: "magic_t", file: !5401, line: 90, baseType: !5402)
!5401 = !DIFile(filename: "/usr/include/magic.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64, align: 64)
!5403 = !DICompositeType(tag: DW_TAG_structure_type, name: "magic_set", file: !5401, line: 90, flags: DIFlagFwdDecl)
!5404 = !DILocation(line: 231, column: 10, scope: !5376)
!5405 = !DILocation(line: 233, column: 8, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5376, file: !512, line: 233, column: 6)
!5407 = !DILocation(line: 233, column: 19, scope: !5406)
!5408 = !DILocation(line: 233, column: 25, scope: !5406)
!5409 = !DILocation(line: 233, column: 5, scope: !5406)
!5410 = !DILocation(line: 233, column: 10, scope: !5411)
!5411 = !DILexicalBlockFile(scope: !5406, file: !512, discriminator: 1)
!5412 = !DILocation(line: 233, column: 21, scope: !5411)
!5413 = !DILocation(line: 233, column: 28, scope: !5411)
!5414 = !DILocation(line: 233, column: 33, scope: !5411)
!5415 = !DILocation(line: 233, column: 5, scope: !5411)
!5416 = !DILocation(line: 233, column: 9, scope: !5417)
!5417 = !DILexicalBlockFile(scope: !5406, file: !512, discriminator: 2)
!5418 = !DILocation(line: 233, column: 20, scope: !5417)
!5419 = !DILocation(line: 233, column: 27, scope: !5417)
!5420 = !DILocation(line: 233, column: 32, scope: !5417)
!5421 = !DILocation(line: 233, column: 6, scope: !5417)
!5422 = !DILocation(line: 234, column: 3, scope: !5406)
!5423 = !DILocation(line: 236, column: 10, scope: !5376)
!5424 = !DILocation(line: 236, column: 8, scope: !5376)
!5425 = !DILocation(line: 239, column: 9, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5376, file: !512, line: 239, column: 6)
!5427 = !DILocation(line: 239, column: 20, scope: !5426)
!5428 = !DILocation(line: 239, column: 33, scope: !5426)
!5429 = !DILocation(line: 239, column: 6, scope: !5426)
!5430 = !DILocation(line: 239, column: 11, scope: !5431)
!5431 = !DILexicalBlockFile(scope: !5426, file: !512, discriminator: 1)
!5432 = !DILocation(line: 239, column: 22, scope: !5431)
!5433 = !DILocation(line: 239, column: 36, scope: !5431)
!5434 = !DILocation(line: 239, column: 41, scope: !5431)
!5435 = !DILocation(line: 239, column: 6, scope: !5431)
!5436 = !DILocation(line: 239, column: 10, scope: !5437)
!5437 = !DILexicalBlockFile(scope: !5426, file: !512, discriminator: 2)
!5438 = !DILocation(line: 239, column: 21, scope: !5437)
!5439 = !DILocation(line: 239, column: 35, scope: !5437)
!5440 = !DILocation(line: 239, column: 40, scope: !5437)
!5441 = !DILocation(line: 239, column: 6, scope: !5437)
!5442 = !DILocation(line: 240, column: 15, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5444, file: !512, line: 240, column: 3)
!5444 = distinct !DILexicalBlock(scope: !5426, file: !512, line: 239, column: 10)
!5445 = !DILocation(line: 240, column: 26, scope: !5443)
!5446 = !DILocation(line: 240, column: 14, scope: !5443)
!5447 = !DILocation(line: 240, column: 13, scope: !5443)
!5448 = !DILocation(line: 240, column: 13, scope: !5449)
!5449 = !DILexicalBlockFile(scope: !5443, file: !512, discriminator: 1)
!5450 = !DILocation(line: 240, column: 14, scope: !5451)
!5451 = !DILexicalBlockFile(scope: !5443, file: !512, discriminator: 2)
!5452 = !DILocation(line: 240, column: 25, scope: !5451)
!5453 = !DILocation(line: 240, column: 39, scope: !5451)
!5454 = !DILocation(line: 240, column: 13, scope: !5451)
!5455 = !DILocation(line: 240, column: 13, scope: !5456)
!5456 = !DILexicalBlockFile(scope: !5443, file: !512, discriminator: 3)
!5457 = !DILocation(line: 240, column: 10, scope: !5456)
!5458 = !DILocation(line: 240, column: 8, scope: !5456)
!5459 = !DILocation(line: 240, column: 46, scope: !5460)
!5460 = !DILexicalBlockFile(scope: !5461, file: !512, discriminator: 4)
!5461 = distinct !DILexicalBlock(scope: !5443, file: !512, line: 240, column: 3)
!5462 = !DILocation(line: 240, column: 3, scope: !5460)
!5463 = !DILocation(line: 241, column: 16, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5461, file: !512, line: 240, column: 68)
!5465 = !DILocation(line: 241, column: 20, scope: !5464)
!5466 = !DILocation(line: 241, column: 14, scope: !5464)
!5467 = !DILocation(line: 241, column: 12, scope: !5464)
!5468 = !DILocation(line: 242, column: 46, scope: !5464)
!5469 = !DILocation(line: 242, column: 55, scope: !5464)
!5470 = !DILocation(line: 242, column: 20, scope: !5464)
!5471 = !DILocation(line: 242, column: 17, scope: !5464)
!5472 = !DILocation(line: 243, column: 3, scope: !5464)
!5473 = !DILocation(line: 240, column: 57, scope: !5474)
!5474 = !DILexicalBlockFile(scope: !5461, file: !512, discriminator: 5)
!5475 = !DILocation(line: 240, column: 61, scope: !5474)
!5476 = !DILocation(line: 240, column: 54, scope: !5474)
!5477 = !DILocation(line: 240, column: 3, scope: !5474)
!5478 = distinct !{!5478, !5479}
!5479 = !DILocation(line: 240, column: 3, scope: !5444)
!5480 = !DILocation(line: 244, column: 2, scope: !5444)
!5481 = !DILocation(line: 246, column: 14, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5376, file: !512, line: 246, column: 2)
!5483 = !DILocation(line: 246, column: 25, scope: !5482)
!5484 = !DILocation(line: 246, column: 13, scope: !5482)
!5485 = !DILocation(line: 246, column: 12, scope: !5482)
!5486 = !DILocation(line: 246, column: 12, scope: !5487)
!5487 = !DILexicalBlockFile(scope: !5482, file: !512, discriminator: 1)
!5488 = !DILocation(line: 246, column: 13, scope: !5489)
!5489 = !DILexicalBlockFile(scope: !5482, file: !512, discriminator: 2)
!5490 = !DILocation(line: 246, column: 24, scope: !5489)
!5491 = !DILocation(line: 246, column: 31, scope: !5489)
!5492 = !DILocation(line: 246, column: 12, scope: !5489)
!5493 = !DILocation(line: 246, column: 12, scope: !5494)
!5494 = !DILexicalBlockFile(scope: !5482, file: !512, discriminator: 3)
!5495 = !DILocation(line: 246, column: 9, scope: !5494)
!5496 = !DILocation(line: 246, column: 7, scope: !5494)
!5497 = !DILocation(line: 246, column: 38, scope: !5498)
!5498 = !DILexicalBlockFile(scope: !5499, file: !512, discriminator: 4)
!5499 = distinct !DILexicalBlock(scope: !5482, file: !512, line: 246, column: 2)
!5500 = !DILocation(line: 246, column: 2, scope: !5498)
!5501 = !DILocation(line: 247, column: 12, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5499, file: !512, line: 246, column: 60)
!5503 = !DILocation(line: 247, column: 16, scope: !5502)
!5504 = !DILocation(line: 247, column: 10, scope: !5502)
!5505 = !DILocation(line: 247, column: 8, scope: !5502)
!5506 = !DILocation(line: 249, column: 47, scope: !5502)
!5507 = !DILocation(line: 249, column: 53, scope: !5502)
!5508 = !DILocation(line: 249, column: 68, scope: !5502)
!5509 = !DILocation(line: 249, column: 19, scope: !5502)
!5510 = !DILocation(line: 249, column: 16, scope: !5502)
!5511 = !DILocation(line: 250, column: 47, scope: !5502)
!5512 = !DILocation(line: 250, column: 53, scope: !5502)
!5513 = !DILocation(line: 250, column: 68, scope: !5502)
!5514 = !DILocation(line: 250, column: 19, scope: !5502)
!5515 = !DILocation(line: 250, column: 16, scope: !5502)
!5516 = !DILocation(line: 251, column: 47, scope: !5502)
!5517 = !DILocation(line: 251, column: 53, scope: !5502)
!5518 = !DILocation(line: 251, column: 67, scope: !5502)
!5519 = !DILocation(line: 251, column: 19, scope: !5502)
!5520 = !DILocation(line: 251, column: 16, scope: !5502)
!5521 = !DILocation(line: 252, column: 47, scope: !5502)
!5522 = !DILocation(line: 252, column: 53, scope: !5502)
!5523 = !DILocation(line: 252, column: 66, scope: !5502)
!5524 = !DILocation(line: 252, column: 19, scope: !5502)
!5525 = !DILocation(line: 252, column: 16, scope: !5502)
!5526 = !DILocation(line: 253, column: 47, scope: !5502)
!5527 = !DILocation(line: 253, column: 53, scope: !5502)
!5528 = !DILocation(line: 253, column: 61, scope: !5502)
!5529 = !DILocation(line: 253, column: 19, scope: !5502)
!5530 = !DILocation(line: 253, column: 16, scope: !5502)
!5531 = !DILocation(line: 254, column: 47, scope: !5502)
!5532 = !DILocation(line: 254, column: 53, scope: !5502)
!5533 = !DILocation(line: 254, column: 81, scope: !5502)
!5534 = !DILocation(line: 254, column: 19, scope: !5502)
!5535 = !DILocation(line: 254, column: 16, scope: !5502)
!5536 = !DILocation(line: 256, column: 9, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5502, file: !512, line: 256, column: 7)
!5538 = !DILocation(line: 256, column: 15, scope: !5537)
!5539 = !DILocation(line: 256, column: 29, scope: !5537)
!5540 = !DILocation(line: 256, column: 6, scope: !5537)
!5541 = !DILocation(line: 256, column: 11, scope: !5542)
!5542 = !DILexicalBlockFile(scope: !5537, file: !512, discriminator: 1)
!5543 = !DILocation(line: 256, column: 17, scope: !5542)
!5544 = !DILocation(line: 256, column: 32, scope: !5542)
!5545 = !DILocation(line: 256, column: 37, scope: !5542)
!5546 = !DILocation(line: 256, column: 6, scope: !5542)
!5547 = !DILocation(line: 256, column: 10, scope: !5548)
!5548 = !DILexicalBlockFile(scope: !5537, file: !512, discriminator: 2)
!5549 = !DILocation(line: 256, column: 16, scope: !5548)
!5550 = !DILocation(line: 256, column: 31, scope: !5548)
!5551 = !DILocation(line: 256, column: 36, scope: !5548)
!5552 = !DILocation(line: 256, column: 7, scope: !5548)
!5553 = !DILocation(line: 257, column: 4, scope: !5537)
!5554 = !DILocation(line: 259, column: 16, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5502, file: !512, line: 259, column: 3)
!5556 = !DILocation(line: 259, column: 22, scope: !5555)
!5557 = !DILocation(line: 259, column: 15, scope: !5555)
!5558 = !DILocation(line: 259, column: 14, scope: !5555)
!5559 = !DILocation(line: 259, column: 14, scope: !5560)
!5560 = !DILexicalBlockFile(scope: !5555, file: !512, discriminator: 1)
!5561 = !DILocation(line: 259, column: 15, scope: !5562)
!5562 = !DILexicalBlockFile(scope: !5555, file: !512, discriminator: 2)
!5563 = !DILocation(line: 259, column: 21, scope: !5562)
!5564 = !DILocation(line: 259, column: 36, scope: !5562)
!5565 = !DILocation(line: 259, column: 14, scope: !5562)
!5566 = !DILocation(line: 259, column: 14, scope: !5567)
!5567 = !DILexicalBlockFile(scope: !5555, file: !512, discriminator: 3)
!5568 = !DILocation(line: 259, column: 11, scope: !5567)
!5569 = !DILocation(line: 259, column: 8, scope: !5567)
!5570 = !DILocation(line: 259, column: 43, scope: !5571)
!5571 = !DILexicalBlockFile(scope: !5572, file: !512, discriminator: 4)
!5572 = distinct !DILexicalBlock(scope: !5555, file: !512, line: 259, column: 3)
!5573 = !DILocation(line: 259, column: 3, scope: !5571)
!5574 = !DILocation(line: 260, column: 11, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5572, file: !512, line: 259, column: 58)
!5576 = !DILocation(line: 260, column: 15, scope: !5575)
!5577 = !DILocation(line: 260, column: 9, scope: !5575)
!5578 = !DILocation(line: 261, column: 21, scope: !5575)
!5579 = !DILocation(line: 261, column: 26, scope: !5575)
!5580 = !DILocation(line: 261, column: 19, scope: !5575)
!5581 = !DILocation(line: 261, column: 17, scope: !5575)
!5582 = !DILocation(line: 263, column: 8, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5575, file: !512, line: 263, column: 8)
!5584 = !DILocation(line: 263, column: 22, scope: !5583)
!5585 = !DILocation(line: 263, column: 27, scope: !5583)
!5586 = !DILocation(line: 263, column: 8, scope: !5575)
!5587 = !DILocation(line: 265, column: 23, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5583, file: !512, line: 263, column: 37)
!5589 = !DILocation(line: 265, column: 29, scope: !5588)
!5590 = !DILocation(line: 265, column: 43, scope: !5588)
!5591 = !DILocation(line: 265, column: 5, scope: !5588)
!5592 = !DILocation(line: 266, column: 4, scope: !5588)
!5593 = !DILocation(line: 267, column: 3, scope: !5575)
!5594 = !DILocation(line: 259, column: 52, scope: !5595)
!5595 = !DILexicalBlockFile(scope: !5572, file: !512, discriminator: 5)
!5596 = !DILocation(line: 259, column: 50, scope: !5595)
!5597 = !DILocation(line: 259, column: 3, scope: !5595)
!5598 = distinct !{!5598, !5599}
!5599 = !DILocation(line: 259, column: 3, scope: !5502)
!5600 = !DILocation(line: 268, column: 2, scope: !5502)
!5601 = !DILocation(line: 246, column: 49, scope: !5602)
!5602 = !DILexicalBlockFile(scope: !5499, file: !512, discriminator: 5)
!5603 = !DILocation(line: 246, column: 53, scope: !5602)
!5604 = !DILocation(line: 246, column: 46, scope: !5602)
!5605 = !DILocation(line: 246, column: 2, scope: !5602)
!5606 = distinct !{!5606, !5607}
!5607 = !DILocation(line: 246, column: 2, scope: !5376)
!5608 = !DILocation(line: 270, column: 9, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5376, file: !512, line: 270, column: 6)
!5610 = !DILocation(line: 270, column: 20, scope: !5609)
!5611 = !DILocation(line: 270, column: 37, scope: !5609)
!5612 = !DILocation(line: 270, column: 6, scope: !5609)
!5613 = !DILocation(line: 270, column: 11, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !5609, file: !512, discriminator: 1)
!5615 = !DILocation(line: 270, column: 22, scope: !5614)
!5616 = !DILocation(line: 270, column: 40, scope: !5614)
!5617 = !DILocation(line: 270, column: 45, scope: !5614)
!5618 = !DILocation(line: 270, column: 6, scope: !5614)
!5619 = !DILocation(line: 270, column: 10, scope: !5620)
!5620 = !DILexicalBlockFile(scope: !5609, file: !512, discriminator: 2)
!5621 = !DILocation(line: 270, column: 21, scope: !5620)
!5622 = !DILocation(line: 270, column: 39, scope: !5620)
!5623 = !DILocation(line: 270, column: 44, scope: !5620)
!5624 = !DILocation(line: 270, column: 6, scope: !5620)
!5625 = !DILocation(line: 271, column: 15, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5627, file: !512, line: 271, column: 3)
!5627 = distinct !DILexicalBlock(scope: !5609, file: !512, line: 270, column: 10)
!5628 = !DILocation(line: 271, column: 26, scope: !5626)
!5629 = !DILocation(line: 271, column: 14, scope: !5626)
!5630 = !DILocation(line: 271, column: 13, scope: !5626)
!5631 = !DILocation(line: 271, column: 13, scope: !5632)
!5632 = !DILexicalBlockFile(scope: !5626, file: !512, discriminator: 1)
!5633 = !DILocation(line: 271, column: 14, scope: !5634)
!5634 = !DILexicalBlockFile(scope: !5626, file: !512, discriminator: 2)
!5635 = !DILocation(line: 271, column: 25, scope: !5634)
!5636 = !DILocation(line: 271, column: 43, scope: !5634)
!5637 = !DILocation(line: 271, column: 13, scope: !5634)
!5638 = !DILocation(line: 271, column: 13, scope: !5639)
!5639 = !DILexicalBlockFile(scope: !5626, file: !512, discriminator: 3)
!5640 = !DILocation(line: 271, column: 10, scope: !5639)
!5641 = !DILocation(line: 271, column: 8, scope: !5639)
!5642 = !DILocation(line: 271, column: 50, scope: !5643)
!5643 = !DILexicalBlockFile(scope: !5644, file: !512, discriminator: 4)
!5644 = distinct !DILexicalBlock(scope: !5626, file: !512, line: 271, column: 3)
!5645 = !DILocation(line: 271, column: 3, scope: !5643)
!5646 = !DILocation(line: 272, column: 11, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5644, file: !512, line: 271, column: 72)
!5648 = !DILocation(line: 272, column: 15, scope: !5647)
!5649 = !DILocation(line: 272, column: 9, scope: !5647)
!5650 = !DILocation(line: 272, column: 7, scope: !5647)
!5651 = !DILocation(line: 273, column: 48, scope: !5647)
!5652 = !DILocation(line: 273, column: 52, scope: !5647)
!5653 = !DILocation(line: 273, column: 67, scope: !5647)
!5654 = !DILocation(line: 273, column: 20, scope: !5647)
!5655 = !DILocation(line: 273, column: 17, scope: !5647)
!5656 = !DILocation(line: 274, column: 48, scope: !5647)
!5657 = !DILocation(line: 274, column: 52, scope: !5647)
!5658 = !DILocation(line: 274, column: 67, scope: !5647)
!5659 = !DILocation(line: 274, column: 20, scope: !5647)
!5660 = !DILocation(line: 274, column: 17, scope: !5647)
!5661 = !DILocation(line: 275, column: 48, scope: !5647)
!5662 = !DILocation(line: 275, column: 52, scope: !5647)
!5663 = !DILocation(line: 275, column: 66, scope: !5647)
!5664 = !DILocation(line: 275, column: 20, scope: !5647)
!5665 = !DILocation(line: 275, column: 17, scope: !5647)
!5666 = !DILocation(line: 276, column: 48, scope: !5647)
!5667 = !DILocation(line: 276, column: 52, scope: !5647)
!5668 = !DILocation(line: 276, column: 65, scope: !5647)
!5669 = !DILocation(line: 276, column: 20, scope: !5647)
!5670 = !DILocation(line: 276, column: 17, scope: !5647)
!5671 = !DILocation(line: 277, column: 48, scope: !5647)
!5672 = !DILocation(line: 277, column: 52, scope: !5647)
!5673 = !DILocation(line: 277, column: 60, scope: !5647)
!5674 = !DILocation(line: 277, column: 20, scope: !5647)
!5675 = !DILocation(line: 277, column: 17, scope: !5647)
!5676 = !DILocation(line: 279, column: 17, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5647, file: !512, line: 279, column: 4)
!5678 = !DILocation(line: 279, column: 21, scope: !5677)
!5679 = !DILocation(line: 279, column: 16, scope: !5677)
!5680 = !DILocation(line: 279, column: 15, scope: !5677)
!5681 = !DILocation(line: 279, column: 15, scope: !5682)
!5682 = !DILexicalBlockFile(scope: !5677, file: !512, discriminator: 1)
!5683 = !DILocation(line: 279, column: 16, scope: !5684)
!5684 = !DILexicalBlockFile(scope: !5677, file: !512, discriminator: 2)
!5685 = !DILocation(line: 279, column: 20, scope: !5684)
!5686 = !DILocation(line: 279, column: 35, scope: !5684)
!5687 = !DILocation(line: 279, column: 15, scope: !5684)
!5688 = !DILocation(line: 279, column: 15, scope: !5689)
!5689 = !DILexicalBlockFile(scope: !5677, file: !512, discriminator: 3)
!5690 = !DILocation(line: 279, column: 12, scope: !5689)
!5691 = !DILocation(line: 279, column: 9, scope: !5689)
!5692 = !DILocation(line: 279, column: 42, scope: !5693)
!5693 = !DILexicalBlockFile(scope: !5694, file: !512, discriminator: 4)
!5694 = distinct !DILexicalBlock(scope: !5677, file: !512, line: 279, column: 4)
!5695 = !DILocation(line: 279, column: 4, scope: !5693)
!5696 = !DILocation(line: 280, column: 12, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5694, file: !512, line: 279, column: 57)
!5698 = !DILocation(line: 280, column: 16, scope: !5697)
!5699 = !DILocation(line: 280, column: 10, scope: !5697)
!5700 = !DILocation(line: 281, column: 22, scope: !5697)
!5701 = !DILocation(line: 281, column: 27, scope: !5697)
!5702 = !DILocation(line: 281, column: 20, scope: !5697)
!5703 = !DILocation(line: 281, column: 18, scope: !5697)
!5704 = !DILocation(line: 283, column: 9, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5697, file: !512, line: 283, column: 9)
!5706 = !DILocation(line: 283, column: 23, scope: !5705)
!5707 = !DILocation(line: 283, column: 28, scope: !5705)
!5708 = !DILocation(line: 283, column: 9, scope: !5697)
!5709 = !DILocation(line: 285, column: 24, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5705, file: !512, line: 283, column: 38)
!5711 = !DILocation(line: 285, column: 28, scope: !5710)
!5712 = !DILocation(line: 285, column: 42, scope: !5710)
!5713 = !DILocation(line: 285, column: 6, scope: !5710)
!5714 = !DILocation(line: 286, column: 5, scope: !5710)
!5715 = !DILocation(line: 287, column: 4, scope: !5697)
!5716 = !DILocation(line: 279, column: 51, scope: !5717)
!5717 = !DILexicalBlockFile(scope: !5694, file: !512, discriminator: 5)
!5718 = !DILocation(line: 279, column: 49, scope: !5717)
!5719 = !DILocation(line: 279, column: 4, scope: !5717)
!5720 = distinct !{!5720, !5721}
!5721 = !DILocation(line: 279, column: 4, scope: !5647)
!5722 = !DILocation(line: 288, column: 3, scope: !5647)
!5723 = !DILocation(line: 271, column: 61, scope: !5724)
!5724 = !DILexicalBlockFile(scope: !5644, file: !512, discriminator: 5)
!5725 = !DILocation(line: 271, column: 65, scope: !5724)
!5726 = !DILocation(line: 271, column: 58, scope: !5724)
!5727 = !DILocation(line: 271, column: 3, scope: !5724)
!5728 = distinct !{!5728, !5729}
!5729 = !DILocation(line: 271, column: 3, scope: !5627)
!5730 = !DILocation(line: 289, column: 2, scope: !5627)
!5731 = !DILocation(line: 291, column: 6, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5376, file: !512, line: 291, column: 6)
!5733 = !DILocation(line: 291, column: 19, scope: !5732)
!5734 = !DILocation(line: 291, column: 31, scope: !5732)
!5735 = !DILocation(line: 291, column: 6, scope: !5376)
!5736 = !DILocation(line: 292, column: 47, scope: !5732)
!5737 = !DILocation(line: 292, column: 60, scope: !5732)
!5738 = !DILocation(line: 292, column: 72, scope: !5732)
!5739 = !DILocation(line: 292, column: 80, scope: !5732)
!5740 = !DILocation(line: 292, column: 19, scope: !5732)
!5741 = !DILocation(line: 292, column: 16, scope: !5732)
!5742 = !DILocation(line: 292, column: 3, scope: !5732)
!5743 = !DILocation(line: 293, column: 6, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5376, file: !512, line: 293, column: 6)
!5745 = !DILocation(line: 293, column: 19, scope: !5744)
!5746 = !DILocation(line: 293, column: 36, scope: !5744)
!5747 = !DILocation(line: 293, column: 6, scope: !5376)
!5748 = !DILocation(line: 294, column: 47, scope: !5744)
!5749 = !DILocation(line: 294, column: 60, scope: !5744)
!5750 = !DILocation(line: 294, column: 77, scope: !5744)
!5751 = !DILocation(line: 294, column: 85, scope: !5744)
!5752 = !DILocation(line: 294, column: 19, scope: !5744)
!5753 = !DILocation(line: 294, column: 16, scope: !5744)
!5754 = !DILocation(line: 294, column: 3, scope: !5744)
!5755 = !DILocation(line: 296, column: 7, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5376, file: !512, line: 296, column: 6)
!5757 = !DILocation(line: 296, column: 23, scope: !5756)
!5758 = !DILocation(line: 296, column: 26, scope: !5759)
!5759 = !DILexicalBlockFile(scope: !5756, file: !512, discriminator: 1)
!5760 = !DILocation(line: 296, column: 39, scope: !5759)
!5761 = !DILocation(line: 296, column: 6, scope: !5759)
!5762 = !DILocation(line: 298, column: 5, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5756, file: !512, line: 296, column: 47)
!5764 = !DILocation(line: 298, column: 18, scope: !5763)
!5765 = !DILocation(line: 297, column: 3, scope: !5763)
!5766 = !DILocation(line: 299, column: 2, scope: !5763)
!5767 = !DILocation(line: 301, column: 6, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5376, file: !512, line: 301, column: 6)
!5769 = !DILocation(line: 301, column: 6, scope: !5376)
!5770 = !DILocation(line: 302, column: 18, scope: !5768)
!5771 = !DILocation(line: 302, column: 3, scope: !5768)
!5772 = !DILocation(line: 305, column: 14, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5376, file: !512, line: 305, column: 2)
!5774 = !DILocation(line: 305, column: 25, scope: !5773)
!5775 = !DILocation(line: 305, column: 13, scope: !5773)
!5776 = !DILocation(line: 305, column: 12, scope: !5773)
!5777 = !DILocation(line: 305, column: 12, scope: !5778)
!5778 = !DILexicalBlockFile(scope: !5773, file: !512, discriminator: 1)
!5779 = !DILocation(line: 305, column: 13, scope: !5780)
!5780 = !DILexicalBlockFile(scope: !5773, file: !512, discriminator: 2)
!5781 = !DILocation(line: 305, column: 24, scope: !5780)
!5782 = !DILocation(line: 305, column: 38, scope: !5780)
!5783 = !DILocation(line: 305, column: 12, scope: !5780)
!5784 = !DILocation(line: 305, column: 12, scope: !5785)
!5785 = !DILexicalBlockFile(scope: !5773, file: !512, discriminator: 3)
!5786 = !DILocation(line: 305, column: 9, scope: !5785)
!5787 = !DILocation(line: 305, column: 7, scope: !5785)
!5788 = !DILocation(line: 305, column: 45, scope: !5789)
!5789 = !DILexicalBlockFile(scope: !5790, file: !512, discriminator: 4)
!5790 = distinct !DILexicalBlock(scope: !5773, file: !512, line: 305, column: 2)
!5791 = !DILocation(line: 305, column: 2, scope: !5789)
!5792 = !DILocation(line: 306, column: 10, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5790, file: !512, line: 305, column: 58)
!5794 = !DILocation(line: 306, column: 13, scope: !5793)
!5795 = !DILocation(line: 306, column: 8, scope: !5793)
!5796 = !DILocation(line: 307, column: 15, scope: !5793)
!5797 = !DILocation(line: 307, column: 19, scope: !5793)
!5798 = !DILocation(line: 307, column: 13, scope: !5793)
!5799 = !DILocation(line: 307, column: 11, scope: !5793)
!5800 = !DILocation(line: 309, column: 7, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5793, file: !512, line: 309, column: 7)
!5802 = !DILocation(line: 309, column: 16, scope: !5801)
!5803 = !DILocation(line: 309, column: 7, scope: !5793)
!5804 = !DILocation(line: 310, column: 22, scope: !5801)
!5805 = !DILocation(line: 310, column: 33, scope: !5801)
!5806 = !DILocation(line: 310, column: 46, scope: !5801)
!5807 = !DILocation(line: 310, column: 4, scope: !5801)
!5808 = !DILocation(line: 311, column: 2, scope: !5793)
!5809 = !DILocation(line: 305, column: 52, scope: !5810)
!5810 = !DILexicalBlockFile(scope: !5790, file: !512, discriminator: 5)
!5811 = !DILocation(line: 305, column: 50, scope: !5810)
!5812 = !DILocation(line: 305, column: 2, scope: !5810)
!5813 = distinct !{!5813, !5814}
!5814 = !DILocation(line: 305, column: 2, scope: !5376)
!5815 = !DILocation(line: 312, column: 1, scope: !5376)
!5816 = distinct !DISubprogram(name: "free_notify_script", scope: !142, file: !142, line: 76, type: !5817, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{null, !5819}
!5819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64, align: 64)
!5820 = !DILocalVariable(name: "script", arg: 1, scope: !5816, file: !142, line: 76, type: !5819)
!5821 = !DILocation(line: 76, column: 38, scope: !5816)
!5822 = !DILocation(line: 78, column: 8, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5816, file: !142, line: 78, column: 6)
!5824 = !DILocation(line: 78, column: 7, scope: !5823)
!5825 = !DILocation(line: 78, column: 6, scope: !5816)
!5826 = !DILocation(line: 79, column: 3, scope: !5823)
!5827 = !DILocation(line: 80, column: 10, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !142, line: 80, column: 8)
!5829 = distinct !DILexicalBlock(scope: !5816, file: !142, line: 80, column: 2)
!5830 = !DILocation(line: 80, column: 9, scope: !5828)
!5831 = !DILocation(line: 80, column: 19, scope: !5828)
!5832 = !DILocation(line: 80, column: 8, scope: !5828)
!5833 = !DILocation(line: 80, column: 8, scope: !5829)
!5834 = !DILocation(line: 80, column: 35, scope: !5835)
!5835 = !DILexicalBlockFile(scope: !5836, file: !142, discriminator: 1)
!5836 = distinct !DILexicalBlock(scope: !5828, file: !142, line: 80, column: 25)
!5837 = !DILocation(line: 80, column: 34, scope: !5835)
!5838 = !DILocation(line: 80, column: 44, scope: !5835)
!5839 = !DILocation(line: 80, column: 33, scope: !5835)
!5840 = !DILocation(line: 80, column: 28, scope: !5835)
!5841 = !DILocation(line: 80, column: 54, scope: !5835)
!5842 = !DILocation(line: 80, column: 53, scope: !5835)
!5843 = !DILocation(line: 80, column: 63, scope: !5835)
!5844 = !DILocation(line: 80, column: 69, scope: !5835)
!5845 = !DILocation(line: 80, column: 3, scope: !5835)
!5846 = !DILocation(line: 81, column: 9, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5848, file: !142, line: 81, column: 8)
!5848 = distinct !DILexicalBlock(scope: !5816, file: !142, line: 81, column: 2)
!5849 = !DILocation(line: 81, column: 8, scope: !5847)
!5850 = !DILocation(line: 81, column: 8, scope: !5848)
!5851 = !DILocation(line: 81, column: 26, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !5853, file: !142, discriminator: 1)
!5853 = distinct !DILexicalBlock(scope: !5847, file: !142, line: 81, column: 17)
!5854 = !DILocation(line: 81, column: 25, scope: !5852)
!5855 = !DILocation(line: 81, column: 20, scope: !5852)
!5856 = !DILocation(line: 81, column: 37, scope: !5852)
!5857 = !DILocation(line: 81, column: 45, scope: !5852)
!5858 = !DILocation(line: 81, column: 3, scope: !5852)
!5859 = !DILocation(line: 82, column: 3, scope: !5816)
!5860 = !DILocation(line: 82, column: 10, scope: !5816)
!5861 = !DILocation(line: 83, column: 1, scope: !5816)
!5862 = !DILocation(line: 83, column: 1, scope: !5863)
!5863 = !DILexicalBlockFile(scope: !5816, file: !142, discriminator: 1)
!5864 = distinct !DISubprogram(name: "vrrp_notify_fifo_script_exit", scope: !512, file: !512, line: 102, type: !5865, isLocal: true, isDefinition: true, scopeLine: 103, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!5865 = !DISubroutineType(types: !5866)
!5866 = !{!300, !680}
!5867 = !DILocalVariable(name: "thread", arg: 1, scope: !5864, file: !512, line: 102, type: !680)
!5868 = !DILocation(line: 102, column: 64, scope: !5864)
!5869 = !DILocation(line: 104, column: 2, scope: !5864)
!5870 = !DILocation(line: 106, column: 2, scope: !5864)
!5871 = distinct !DISubprogram(name: "vrrp_complete_instance", scope: !512, file: !512, line: 2453, type: !5872, isLocal: true, isDefinition: true, scopeLine: 2454, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!5872 = !DISubroutineType(types: !5873)
!5873 = !{!350, !537}
!5874 = !DILocalVariable(name: "vrrp", arg: 1, scope: !5871, file: !512, line: 2453, type: !537)
!5875 = !DILocation(line: 2453, column: 33, scope: !5871)
!5876 = !DILocalVariable(name: "ifname", scope: !5871, file: !512, line: 2456, type: !343)
!5877 = !DILocation(line: 2456, column: 7, scope: !5871)
!5878 = !DILocalVariable(name: "ifp", scope: !5871, file: !512, line: 2457, type: !338)
!5879 = !DILocation(line: 2457, column: 15, scope: !5871)
!5880 = !DILocalVariable(name: "e", scope: !5871, file: !512, line: 2459, type: !984)
!5881 = !DILocation(line: 2459, column: 10, scope: !5871)
!5882 = !DILocalVariable(name: "vip", scope: !5871, file: !512, line: 2460, type: !311)
!5883 = !DILocation(line: 2460, column: 16, scope: !5871)
!5884 = !DILocalVariable(name: "hdr_len", scope: !5871, file: !512, line: 2461, type: !292)
!5885 = !DILocation(line: 2461, column: 9, scope: !5871)
!5886 = !DILocalVariable(name: "max_addr", scope: !5871, file: !512, line: 2462, type: !292)
!5887 = !DILocation(line: 2462, column: 9, scope: !5871)
!5888 = !DILocalVariable(name: "i", scope: !5871, file: !512, line: 2463, type: !292)
!5889 = !DILocation(line: 2463, column: 9, scope: !5871)
!5890 = !DILocalVariable(name: "next", scope: !5871, file: !512, line: 2464, type: !984)
!5891 = !DILocation(line: 2464, column: 10, scope: !5871)
!5892 = !DILocalVariable(name: "interface_already_existed", scope: !5871, file: !512, line: 2465, type: !350)
!5893 = !DILocation(line: 2465, column: 6, scope: !5871)
!5894 = !DILocalVariable(name: "sc", scope: !5871, file: !512, line: 2466, type: !5388)
!5895 = !DILocation(line: 2466, column: 16, scope: !5871)
!5896 = !DILocalVariable(name: "tip", scope: !5871, file: !512, line: 2467, type: !5897)
!5897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5898, size: 64, align: 64)
!5898 = !DIDerivedType(tag: DW_TAG_typedef, name: "tracked_if_t", file: !177, line: 117, baseType: !5899)
!5899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_tracked_if", file: !177, line: 114, size: 128, align: 64, elements: !5900)
!5900 = !{!5901, !5902}
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5899, file: !177, line: 115, baseType: !300, size: 32, align: 32)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "ifp", scope: !5899, file: !177, line: 116, baseType: !338, size: 64, align: 64, offset: 64)
!5903 = !DILocation(line: 2467, column: 16, scope: !5871)
!5904 = !DILocalVariable(name: "tfl", scope: !5871, file: !512, line: 2468, type: !5905)
!5905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5906, size: 64, align: 64)
!5906 = !DIDerivedType(tag: DW_TAG_typedef, name: "tracked_file_t", file: !96, line: 97, baseType: !5907)
!5907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_tracked_file", file: !96, line: 94, size: 128, align: 64, elements: !5908)
!5908 = !{!5909, !5921}
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5907, file: !96, line: 95, baseType: !5910, size: 64, align: 64)
!5910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5911, size: 64, align: 64)
!5911 = !DIDerivedType(tag: DW_TAG_typedef, name: "vrrp_tracked_file_t", file: !96, line: 91, baseType: !5912)
!5912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_vrrp_file", file: !96, line: 83, size: 384, align: 64, elements: !5913)
!5913 = !{!5914, !5915, !5916, !5917, !5918, !5919, !5920}
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "fname", scope: !5912, file: !96, line: 84, baseType: !230, size: 64, align: 64)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "file_path", scope: !5912, file: !96, line: 85, baseType: !230, size: 64, align: 64, offset: 64)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "file_part", scope: !5912, file: !96, line: 86, baseType: !230, size: 64, align: 64, offset: 128)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5912, file: !96, line: 87, baseType: !300, size: 32, align: 32, offset: 192)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "wd", scope: !5912, file: !96, line: 88, baseType: !300, size: 32, align: 32, offset: 224)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_vrrp", scope: !5912, file: !96, line: 89, baseType: !400, size: 64, align: 64, offset: 256)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "last_status", scope: !5912, file: !96, line: 90, baseType: !300, size: 32, align: 32, offset: 320)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5907, file: !96, line: 96, baseType: !300, size: 32, align: 32, offset: 64)
!5922 = !DILocation(line: 2468, column: 18, scope: !5871)
!5923 = !DILocalVariable(name: "vroute", scope: !5871, file: !512, line: 2473, type: !5924)
!5924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5925, size: 64, align: 64)
!5925 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip_route_t", file: !5926, line: 239, baseType: !5927)
!5926 = !DIFile(filename: "./../include/vrrp_iproute.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!5927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ip_route", file: !5926, line: 182, size: 1664, align: 64, elements: !5928)
!5928 = !{!5929, !5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5952, !5953, !5954, !5955, !5956, !5957, !5958, !5959, !5960, !6010, !6011, !6012, !6013, !6014, !6015}
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5927, file: !5926, line: 183, baseType: !311, size: 64, align: 64)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5927, file: !5926, line: 184, baseType: !311, size: 64, align: 64, offset: 64)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "pref_src", scope: !5927, file: !5926, line: 185, baseType: !311, size: 64, align: 64, offset: 128)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !5927, file: !5926, line: 186, baseType: !211, size: 8, align: 8, offset: 192)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5927, file: !5926, line: 187, baseType: !211, size: 8, align: 8, offset: 200)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !5927, file: !5926, line: 188, baseType: !246, size: 32, align: 32, offset: 224)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5927, file: !5926, line: 189, baseType: !211, size: 8, align: 8, offset: 256)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "scope", scope: !5927, file: !5926, line: 190, baseType: !211, size: 8, align: 8, offset: 264)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "metric", scope: !5927, file: !5926, line: 191, baseType: !246, size: 32, align: 32, offset: 288)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "via", scope: !5927, file: !5926, line: 192, baseType: !311, size: 64, align: 64, offset: 320)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "oif", scope: !5927, file: !5926, line: 193, baseType: !338, size: 64, align: 64, offset: 384)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5927, file: !5926, line: 194, baseType: !246, size: 32, align: 32, offset: 448)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !5927, file: !5926, line: 195, baseType: !246, size: 32, align: 32, offset: 480)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "quickack", scope: !5927, file: !5926, line: 197, baseType: !350, size: 8, align: 8, offset: 512)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5927, file: !5926, line: 202, baseType: !246, size: 32, align: 32, offset: 544)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !5927, file: !5926, line: 203, baseType: !246, size: 32, align: 32, offset: 576)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "hoplimit", scope: !5927, file: !5926, line: 204, baseType: !211, size: 8, align: 8, offset: 608)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "advmss", scope: !5927, file: !5926, line: 205, baseType: !246, size: 32, align: 32, offset: 640)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "rtt", scope: !5927, file: !5926, line: 209, baseType: !246, size: 32, align: 32, offset: 672)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "rttvar", scope: !5927, file: !5926, line: 210, baseType: !246, size: 32, align: 32, offset: 704)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "reordering", scope: !5927, file: !5926, line: 211, baseType: !246, size: 32, align: 32, offset: 736)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !5927, file: !5926, line: 212, baseType: !246, size: 32, align: 32, offset: 768)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "cwnd", scope: !5927, file: !5926, line: 213, baseType: !246, size: 32, align: 32, offset: 800)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "ssthresh", scope: !5927, file: !5926, line: 214, baseType: !246, size: 32, align: 32, offset: 832)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "rto_min", scope: !5927, file: !5926, line: 215, baseType: !246, size: 32, align: 32, offset: 864)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "initcwnd", scope: !5927, file: !5926, line: 216, baseType: !246, size: 32, align: 32, offset: 896)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "initrwnd", scope: !5927, file: !5926, line: 217, baseType: !246, size: 32, align: 32, offset: 928)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "congctl", scope: !5927, file: !5926, line: 219, baseType: !230, size: 64, align: 64, offset: 960)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "pref", scope: !5927, file: !5926, line: 222, baseType: !211, size: 8, align: 8, offset: 1024)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5927, file: !5926, line: 227, baseType: !211, size: 8, align: 8, offset: 1032)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "realms", scope: !5927, file: !5926, line: 229, baseType: !246, size: 32, align: 32, offset: 1056)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "encap", scope: !5927, file: !5926, line: 231, baseType: !5961, size: 320, align: 64, offset: 1088)
!5961 = !DIDerivedType(tag: DW_TAG_typedef, name: "encap_t", file: !5926, line: 116, baseType: !5962)
!5962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_encap", file: !5926, line: 103, size: 320, align: 64, elements: !5963)
!5963 = !{!5964, !5965, !5966}
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5962, file: !5926, line: 104, baseType: !228, size: 16, align: 16)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5962, file: !5926, line: 105, baseType: !246, size: 32, align: 32, offset: 32)
!5966 = !DIDerivedType(tag: DW_TAG_member, scope: !5962, file: !5926, line: 106, baseType: !5967, size: 256, align: 64, offset: 64)
!5967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5962, file: !5926, line: 106, size: 256, align: 64, elements: !5968)
!5968 = !{!5969, !5985, !5995, !6000}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "mpls", scope: !5967, file: !5926, line: 108, baseType: !5970, size: 128, align: 64)
!5970 = !DIDerivedType(tag: DW_TAG_typedef, name: "encap_mpls_t", file: !5926, line: 76, baseType: !5971)
!5971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_encap_mpls", file: !5926, line: 73, size: 128, align: 64, elements: !5972)
!5972 = !{!5973, !5984}
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5971, file: !5926, line: 74, baseType: !5974, size: 64, align: 32)
!5974 = !DIDerivedType(tag: DW_TAG_typedef, name: "mpls_labels", file: !5926, line: 71, baseType: !5975)
!5975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5976, size: 64, align: 32, elements: !5982)
!5976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mpls_label", file: !5977, line: 21, size: 32, align: 32, elements: !5978)
!5977 = !DIFile(filename: "/usr/include/linux/mpls.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!5978 = !{!5979}
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5976, file: !5977, line: 22, baseType: !5980, size: 32, align: 32)
!5980 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !5981, line: 30, baseType: !327)
!5981 = !DIFile(filename: "/usr/include/linux/types.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!5982 = !{!5983}
!5983 = !DISubrange(count: 2)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "num_labels", scope: !5971, file: !5926, line: 75, baseType: !292, size: 64, align: 64, offset: 64)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5967, file: !5926, line: 110, baseType: !5986, size: 256, align: 64)
!5986 = !DIDerivedType(tag: DW_TAG_typedef, name: "encap_ip_t", file: !5926, line: 86, baseType: !5987)
!5987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_encap_ip", file: !5926, line: 79, size: 256, align: 64, elements: !5988)
!5988 = !{!5989, !5990, !5991, !5992, !5993, !5994}
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5987, file: !5926, line: 80, baseType: !588, size: 64, align: 64)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5987, file: !5926, line: 81, baseType: !311, size: 64, align: 64, offset: 64)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5987, file: !5926, line: 82, baseType: !311, size: 64, align: 64, offset: 128)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5987, file: !5926, line: 83, baseType: !211, size: 8, align: 8, offset: 192)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5987, file: !5926, line: 84, baseType: !228, size: 16, align: 16, offset: 208)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !5987, file: !5926, line: 85, baseType: !211, size: 8, align: 8, offset: 224)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "ila", scope: !5967, file: !5926, line: 112, baseType: !5996, size: 64, align: 64)
!5996 = !DIDerivedType(tag: DW_TAG_typedef, name: "encap_ila_t", file: !5926, line: 91, baseType: !5997)
!5997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_encap_ila", file: !5926, line: 89, size: 64, align: 64, elements: !5998)
!5998 = !{!5999}
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "locator", scope: !5997, file: !5926, line: 90, baseType: !588, size: 64, align: 64)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "ip6", scope: !5967, file: !5926, line: 114, baseType: !6001, size: 256, align: 64)
!6001 = !DIDerivedType(tag: DW_TAG_typedef, name: "encap_ip6_t", file: !5926, line: 101, baseType: !6002)
!6002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_encap_ip6", file: !5926, line: 94, size: 256, align: 64, elements: !6003)
!6003 = !{!6004, !6005, !6006, !6007, !6008, !6009}
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6002, file: !5926, line: 95, baseType: !588, size: 64, align: 64)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !6002, file: !5926, line: 96, baseType: !311, size: 64, align: 64, offset: 64)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !6002, file: !5926, line: 97, baseType: !311, size: 64, align: 64, offset: 128)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !6002, file: !5926, line: 98, baseType: !211, size: 8, align: 8, offset: 192)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6002, file: !5926, line: 99, baseType: !228, size: 16, align: 16, offset: 208)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "hoplimit", scope: !6002, file: !5926, line: 100, baseType: !211, size: 8, align: 8, offset: 224)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "nhs", scope: !5927, file: !5926, line: 233, baseType: !400, size: 64, align: 64, offset: 1408)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5927, file: !5926, line: 234, baseType: !246, size: 32, align: 32, offset: 1472)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "dont_track", scope: !5927, file: !5926, line: 235, baseType: !350, size: 8, align: 8, offset: 1504)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "track_group", scope: !5927, file: !5926, line: 236, baseType: !486, size: 64, align: 64, offset: 1536)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !5927, file: !5926, line: 237, baseType: !350, size: 8, align: 8, offset: 1600)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "configured_ifindex", scope: !5927, file: !5926, line: 238, baseType: !246, size: 32, align: 32, offset: 1632)
!6016 = !DILocation(line: 2473, column: 14, scope: !5871)
!6017 = !DILocalVariable(name: "vrule", scope: !5871, file: !512, line: 2474, type: !6018)
!6018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6019, size: 64, align: 64)
!6019 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip_rule_t", file: !6020, line: 113, baseType: !6021)
!6020 = !DIFile(filename: "./../include/vrrp_iprule.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!6021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ip_rule", file: !6020, line: 65, size: 1024, align: 64, elements: !6022)
!6022 = !{!6023, !6024, !6025, !6026, !6027, !6028, !6029, !6030, !6031, !6032, !6033, !6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044}
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6021, file: !6020, line: 66, baseType: !246, size: 32, align: 32)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !6021, file: !6020, line: 67, baseType: !350, size: 8, align: 8, offset: 32)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !6021, file: !6020, line: 68, baseType: !300, size: 32, align: 32, offset: 64)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "from_addr", scope: !6021, file: !6020, line: 69, baseType: !311, size: 64, align: 64, offset: 128)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "to_addr", scope: !6021, file: !6020, line: 70, baseType: !311, size: 64, align: 64, offset: 192)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !6021, file: !6020, line: 71, baseType: !246, size: 32, align: 32, offset: 256)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6021, file: !6020, line: 72, baseType: !211, size: 8, align: 8, offset: 288)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark", scope: !6021, file: !6020, line: 73, baseType: !246, size: 32, align: 32, offset: 320)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "fwmask", scope: !6021, file: !6020, line: 74, baseType: !246, size: 32, align: 32, offset: 352)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "realms", scope: !6021, file: !6020, line: 75, baseType: !246, size: 32, align: 32, offset: 384)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_prefix_len", scope: !6021, file: !6020, line: 77, baseType: !6034, size: 32, align: 32, offset: 416)
!6034 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !212, line: 38, baseType: !300)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_group", scope: !6021, file: !6020, line: 80, baseType: !246, size: 32, align: 32, offset: 448)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !6021, file: !6020, line: 82, baseType: !338, size: 64, align: 64, offset: 512)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "oif", scope: !6021, file: !6020, line: 84, baseType: !338, size: 64, align: 64, offset: 576)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "goto_target", scope: !6021, file: !6020, line: 86, baseType: !246, size: 32, align: 32, offset: 640)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !6021, file: !6020, line: 87, baseType: !246, size: 32, align: 32, offset: 672)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !6021, file: !6020, line: 88, baseType: !211, size: 8, align: 8, offset: 704)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_id", scope: !6021, file: !6020, line: 90, baseType: !588, size: 64, align: 64, offset: 768)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "dont_track", scope: !6021, file: !6020, line: 110, baseType: !350, size: 8, align: 8, offset: 832)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "track_group", scope: !6021, file: !6020, line: 111, baseType: !486, size: 64, align: 64, offset: 896)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !6021, file: !6020, line: 112, baseType: !350, size: 8, align: 8, offset: 960)
!6045 = !DILocation(line: 2474, column: 13, scope: !5871)
!6046 = !DILocation(line: 2477, column: 6, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2477, column: 6)
!6048 = !DILocation(line: 2477, column: 12, scope: !6047)
!6049 = !DILocation(line: 2477, column: 24, scope: !6047)
!6050 = !DILocation(line: 2477, column: 6, scope: !5871)
!6051 = !DILocation(line: 2478, column: 23, scope: !6047)
!6052 = !DILocation(line: 2478, column: 36, scope: !6047)
!6053 = !DILocation(line: 2478, column: 3, scope: !6047)
!6054 = !DILocation(line: 2478, column: 9, scope: !6047)
!6055 = !DILocation(line: 2478, column: 21, scope: !6047)
!6056 = !DILocation(line: 2480, column: 6, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2480, column: 6)
!6058 = !DILocation(line: 2480, column: 12, scope: !6057)
!6059 = !DILocation(line: 2480, column: 19, scope: !6057)
!6060 = !DILocation(line: 2480, column: 6, scope: !5871)
!6061 = !DILocation(line: 2481, column: 7, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !512, line: 2481, column: 7)
!6063 = distinct !DILexicalBlock(scope: !6057, file: !512, line: 2480, column: 31)
!6064 = !DILocation(line: 2481, column: 13, scope: !6062)
!6065 = !DILocation(line: 2481, column: 21, scope: !6062)
!6066 = !DILocation(line: 2481, column: 26, scope: !6062)
!6067 = !DILocation(line: 2481, column: 29, scope: !6068)
!6068 = !DILexicalBlockFile(scope: !6062, file: !512, discriminator: 1)
!6069 = !DILocation(line: 2481, column: 35, scope: !6068)
!6070 = !DILocation(line: 2481, column: 7, scope: !6068)
!6071 = !DILocation(line: 2482, column: 108, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6062, file: !512, line: 2481, column: 48)
!6073 = !DILocation(line: 2482, column: 114, scope: !6072)
!6074 = !DILocation(line: 2482, column: 4, scope: !6072)
!6075 = !DILocation(line: 2483, column: 4, scope: !6072)
!6076 = !DILocation(line: 2483, column: 10, scope: !6072)
!6077 = !DILocation(line: 2483, column: 18, scope: !6072)
!6078 = !DILocation(line: 2484, column: 3, scope: !6072)
!6079 = !DILocation(line: 2485, column: 13, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6062, file: !512, line: 2485, column: 12)
!6081 = !DILocation(line: 2485, column: 19, scope: !6080)
!6082 = !DILocation(line: 2485, column: 12, scope: !6062)
!6083 = !DILocation(line: 2486, column: 4, scope: !6080)
!6084 = !DILocation(line: 2486, column: 10, scope: !6080)
!6085 = !DILocation(line: 2486, column: 18, scope: !6080)
!6086 = !DILocation(line: 2487, column: 2, scope: !6063)
!6087 = !DILocation(line: 2490, column: 6, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2490, column: 6)
!6089 = !DILocation(line: 2490, column: 12, scope: !6088)
!6090 = !DILocation(line: 2490, column: 19, scope: !6088)
!6091 = !DILocation(line: 2490, column: 6, scope: !5871)
!6092 = !DILocation(line: 2491, column: 3, scope: !6088)
!6093 = !DILocation(line: 2491, column: 9, scope: !6088)
!6094 = !DILocation(line: 2491, column: 16, scope: !6088)
!6095 = !DILocation(line: 2493, column: 6, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2493, column: 6)
!6097 = !DILocation(line: 2493, column: 12, scope: !6096)
!6098 = !DILocation(line: 2493, column: 19, scope: !6096)
!6099 = !DILocation(line: 2493, column: 6, scope: !5871)
!6100 = !DILocation(line: 2494, column: 22, scope: !6096)
!6101 = !DILocation(line: 2494, column: 3, scope: !6096)
!6102 = !DILocation(line: 2496, column: 22, scope: !6096)
!6103 = !DILocation(line: 2498, column: 6, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2498, column: 6)
!6105 = !DILocation(line: 2498, column: 12, scope: !6104)
!6106 = !DILocation(line: 2498, column: 20, scope: !6104)
!6107 = !DILocation(line: 2498, column: 6, scope: !5871)
!6108 = !DILocation(line: 2499, column: 7, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !512, line: 2499, column: 7)
!6110 = distinct !DILexicalBlock(scope: !6104, file: !512, line: 2498, column: 26)
!6111 = !DILocation(line: 2499, column: 13, scope: !6109)
!6112 = !DILocation(line: 2499, column: 20, scope: !6109)
!6113 = !DILocation(line: 2499, column: 7, scope: !6110)
!6114 = !DILocation(line: 2500, column: 4, scope: !6109)
!6115 = !DILocation(line: 2500, column: 10, scope: !6109)
!6116 = !DILocation(line: 2500, column: 18, scope: !6109)
!6117 = !DILocation(line: 2502, column: 20, scope: !6109)
!6118 = !DILocation(line: 2502, column: 33, scope: !6109)
!6119 = !DILocation(line: 2502, column: 4, scope: !6109)
!6120 = !DILocation(line: 2502, column: 10, scope: !6109)
!6121 = !DILocation(line: 2502, column: 18, scope: !6109)
!6122 = !DILocation(line: 2503, column: 2, scope: !6110)
!6123 = !DILocation(line: 2505, column: 8, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2505, column: 6)
!6125 = !DILocation(line: 2505, column: 14, scope: !6124)
!6126 = !DILocation(line: 2505, column: 19, scope: !6124)
!6127 = !DILocation(line: 2505, column: 5, scope: !6124)
!6128 = !DILocation(line: 2505, column: 10, scope: !6129)
!6129 = !DILexicalBlockFile(scope: !6124, file: !512, discriminator: 1)
!6130 = !DILocation(line: 2505, column: 16, scope: !6129)
!6131 = !DILocation(line: 2505, column: 22, scope: !6129)
!6132 = !DILocation(line: 2505, column: 27, scope: !6129)
!6133 = !DILocation(line: 2505, column: 5, scope: !6129)
!6134 = !DILocation(line: 2505, column: 9, scope: !6135)
!6135 = !DILexicalBlockFile(scope: !6124, file: !512, discriminator: 2)
!6136 = !DILocation(line: 2505, column: 15, scope: !6135)
!6137 = !DILocation(line: 2505, column: 21, scope: !6135)
!6138 = !DILocation(line: 2505, column: 26, scope: !6135)
!6139 = !DILocation(line: 2505, column: 8, scope: !6135)
!6140 = !DILocation(line: 2505, column: 12, scope: !6141)
!6141 = !DILexicalBlockFile(scope: !6124, file: !512, discriminator: 3)
!6142 = !DILocation(line: 2505, column: 18, scope: !6141)
!6143 = !DILocation(line: 2505, column: 26, scope: !6141)
!6144 = !DILocation(line: 2505, column: 31, scope: !6141)
!6145 = !DILocation(line: 2505, column: 34, scope: !6146)
!6146 = !DILexicalBlockFile(scope: !6124, file: !512, discriminator: 4)
!6147 = !DILocation(line: 2505, column: 40, scope: !6146)
!6148 = !DILocation(line: 2505, column: 47, scope: !6146)
!6149 = !DILocation(line: 2505, column: 93, scope: !6146)
!6150 = !DILocation(line: 2505, column: 96, scope: !6151)
!6151 = !DILexicalBlockFile(scope: !6124, file: !512, discriminator: 5)
!6152 = !DILocation(line: 2505, column: 102, scope: !6151)
!6153 = !DILocation(line: 2505, column: 6, scope: !6151)
!6154 = !DILocation(line: 2506, column: 96, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6124, file: !512, line: 2505, column: 116)
!6156 = !DILocation(line: 2506, column: 102, scope: !6155)
!6157 = !DILocation(line: 2506, column: 3, scope: !6155)
!6158 = !DILocation(line: 2507, column: 3, scope: !6155)
!6159 = !DILocation(line: 2511, column: 6, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2511, column: 6)
!6161 = !DILocation(line: 2511, column: 12, scope: !6160)
!6162 = !DILocation(line: 2511, column: 26, scope: !6160)
!6163 = !DILocation(line: 2511, column: 6, scope: !5871)
!6164 = !DILocation(line: 2512, column: 7, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !512, line: 2512, column: 7)
!6166 = distinct !DILexicalBlock(scope: !6160, file: !512, line: 2511, column: 32)
!6167 = !DILocation(line: 2512, column: 13, scope: !6165)
!6168 = !DILocation(line: 2512, column: 23, scope: !6165)
!6169 = !DILocation(line: 2512, column: 7, scope: !6166)
!6170 = !DILocation(line: 2513, column: 4, scope: !6165)
!6171 = !DILocation(line: 2513, column: 10, scope: !6165)
!6172 = !DILocation(line: 2513, column: 24, scope: !6165)
!6173 = !DILocation(line: 2515, column: 4, scope: !6165)
!6174 = !DILocation(line: 2515, column: 10, scope: !6165)
!6175 = !DILocation(line: 2515, column: 24, scope: !6165)
!6176 = !DILocation(line: 2516, column: 2, scope: !6166)
!6177 = !DILocation(line: 2519, column: 6, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2519, column: 6)
!6179 = !DILocation(line: 2519, column: 12, scope: !6178)
!6180 = !DILocation(line: 2519, column: 22, scope: !6178)
!6181 = !DILocation(line: 2519, column: 6, scope: !5871)
!6182 = !DILocation(line: 2520, column: 22, scope: !6178)
!6183 = !DILocation(line: 2520, column: 28, scope: !6178)
!6184 = !DILocation(line: 2520, column: 42, scope: !6178)
!6185 = !DILocation(line: 2520, column: 3, scope: !6178)
!6186 = !DILocation(line: 2520, column: 9, scope: !6178)
!6187 = !DILocation(line: 2520, column: 19, scope: !6178)
!6188 = !DILocation(line: 2521, column: 11, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6178, file: !512, line: 2521, column: 11)
!6190 = !DILocation(line: 2521, column: 17, scope: !6189)
!6191 = !DILocation(line: 2521, column: 29, scope: !6189)
!6192 = !DILocation(line: 2522, column: 6, scope: !6189)
!6193 = !DILocation(line: 2522, column: 12, scope: !6189)
!6194 = !DILocation(line: 2522, column: 22, scope: !6189)
!6195 = !DILocation(line: 2522, column: 32, scope: !6189)
!6196 = !DILocation(line: 2522, column: 38, scope: !6189)
!6197 = !DILocation(line: 2522, column: 52, scope: !6189)
!6198 = !DILocation(line: 2522, column: 28, scope: !6189)
!6199 = !DILocation(line: 2521, column: 11, scope: !6200)
!6200 = !DILexicalBlockFile(scope: !6178, file: !512, discriminator: 1)
!6201 = !DILocation(line: 2523, column: 97, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6189, file: !512, line: 2522, column: 62)
!6203 = !DILocation(line: 2523, column: 103, scope: !6202)
!6204 = !DILocation(line: 2523, column: 4, scope: !6202)
!6205 = !DILocation(line: 2524, column: 23, scope: !6202)
!6206 = !DILocation(line: 2524, column: 29, scope: !6202)
!6207 = !DILocation(line: 2524, column: 43, scope: !6202)
!6208 = !DILocation(line: 2524, column: 4, scope: !6202)
!6209 = !DILocation(line: 2524, column: 10, scope: !6202)
!6210 = !DILocation(line: 2524, column: 20, scope: !6202)
!6211 = !DILocation(line: 2525, column: 2, scope: !6202)
!6212 = !DILocation(line: 2528, column: 6, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2528, column: 6)
!6214 = !DILocation(line: 2528, column: 12, scope: !6213)
!6215 = !DILocation(line: 2528, column: 24, scope: !6213)
!6216 = !DILocation(line: 2528, column: 27, scope: !6217)
!6217 = !DILexicalBlockFile(scope: !6213, file: !512, discriminator: 1)
!6218 = !DILocation(line: 2528, column: 33, scope: !6217)
!6219 = !DILocation(line: 2528, column: 43, scope: !6217)
!6220 = !DILocation(line: 2528, column: 6, scope: !6217)
!6221 = !DILocation(line: 2529, column: 108, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6213, file: !512, line: 2528, column: 49)
!6223 = !DILocation(line: 2529, column: 114, scope: !6222)
!6224 = !DILocation(line: 2529, column: 3, scope: !6222)
!6225 = !DILocation(line: 2530, column: 3, scope: !6222)
!6226 = !DILocation(line: 2530, column: 9, scope: !6222)
!6227 = !DILocation(line: 2530, column: 19, scope: !6222)
!6228 = !DILocation(line: 2531, column: 2, scope: !6222)
!6229 = !DILocation(line: 2532, column: 11, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6213, file: !512, line: 2532, column: 11)
!6231 = !DILocation(line: 2532, column: 17, scope: !6230)
!6232 = !DILocation(line: 2532, column: 25, scope: !6230)
!6233 = !DILocation(line: 2532, column: 30, scope: !6230)
!6234 = !DILocation(line: 2532, column: 33, scope: !6235)
!6235 = !DILexicalBlockFile(scope: !6230, file: !512, discriminator: 1)
!6236 = !DILocation(line: 2532, column: 39, scope: !6235)
!6237 = !DILocation(line: 2532, column: 49, scope: !6235)
!6238 = !DILocation(line: 2532, column: 11, scope: !6235)
!6239 = !DILocation(line: 2533, column: 111, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6230, file: !512, line: 2532, column: 55)
!6241 = !DILocation(line: 2533, column: 117, scope: !6240)
!6242 = !DILocation(line: 2533, column: 3, scope: !6240)
!6243 = !DILocation(line: 2534, column: 3, scope: !6240)
!6244 = !DILocation(line: 2534, column: 9, scope: !6240)
!6245 = !DILocation(line: 2534, column: 19, scope: !6240)
!6246 = !DILocation(line: 2535, column: 2, scope: !6240)
!6247 = !DILocation(line: 2536, column: 11, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6230, file: !512, line: 2536, column: 11)
!6249 = !DILocation(line: 2536, column: 17, scope: !6248)
!6250 = !DILocation(line: 2536, column: 27, scope: !6248)
!6251 = !DILocation(line: 2536, column: 32, scope: !6248)
!6252 = !DILocation(line: 2536, column: 36, scope: !6253)
!6253 = !DILexicalBlockFile(scope: !6248, file: !512, discriminator: 1)
!6254 = !DILocation(line: 2536, column: 42, scope: !6253)
!6255 = !DILocation(line: 2536, column: 11, scope: !6253)
!6256 = !DILocation(line: 2537, column: 110, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6248, file: !512, line: 2536, column: 56)
!6258 = !DILocation(line: 2537, column: 116, scope: !6257)
!6259 = !DILocation(line: 2537, column: 3, scope: !6257)
!6260 = !DILocation(line: 2538, column: 3, scope: !6257)
!6261 = !DILocation(line: 2538, column: 9, scope: !6257)
!6262 = !DILocation(line: 2538, column: 19, scope: !6257)
!6263 = !DILocation(line: 2539, column: 2, scope: !6257)
!6264 = !DILocation(line: 2540, column: 11, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6248, file: !512, line: 2540, column: 11)
!6266 = !DILocation(line: 2540, column: 17, scope: !6265)
!6267 = !DILocation(line: 2540, column: 24, scope: !6265)
!6268 = !DILocation(line: 2540, column: 35, scope: !6265)
!6269 = !DILocation(line: 2540, column: 38, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !6265, file: !512, discriminator: 1)
!6271 = !DILocation(line: 2540, column: 44, scope: !6270)
!6272 = !DILocation(line: 2540, column: 54, scope: !6270)
!6273 = !DILocation(line: 2540, column: 11, scope: !6270)
!6274 = !DILocation(line: 2541, column: 103, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6265, file: !512, line: 2540, column: 60)
!6276 = !DILocation(line: 2541, column: 109, scope: !6275)
!6277 = !DILocation(line: 2541, column: 3, scope: !6275)
!6278 = !DILocation(line: 2542, column: 3, scope: !6275)
!6279 = !DILocation(line: 2542, column: 9, scope: !6275)
!6280 = !DILocation(line: 2542, column: 19, scope: !6275)
!6281 = !DILocation(line: 2543, column: 2, scope: !6275)
!6282 = !DILocation(line: 2544, column: 11, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6265, file: !512, line: 2544, column: 11)
!6284 = !DILocation(line: 2544, column: 17, scope: !6283)
!6285 = !DILocation(line: 2544, column: 27, scope: !6283)
!6286 = !DILocation(line: 2544, column: 32, scope: !6283)
!6287 = !DILocation(line: 2544, column: 35, scope: !6288)
!6288 = !DILexicalBlockFile(scope: !6283, file: !512, discriminator: 1)
!6289 = !DILocation(line: 2544, column: 41, scope: !6288)
!6290 = !DILocation(line: 2544, column: 51, scope: !6288)
!6291 = !DILocation(line: 2544, column: 56, scope: !6288)
!6292 = !DILocation(line: 2544, column: 59, scope: !6293)
!6293 = !DILexicalBlockFile(scope: !6283, file: !512, discriminator: 2)
!6294 = !DILocation(line: 2544, column: 65, scope: !6293)
!6295 = !DILocation(line: 2544, column: 79, scope: !6293)
!6296 = !DILocation(line: 2544, column: 11, scope: !6293)
!6297 = !DILocation(line: 2546, column: 124, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6283, file: !512, line: 2544, column: 87)
!6299 = !DILocation(line: 2546, column: 130, scope: !6298)
!6300 = !DILocation(line: 2546, column: 3, scope: !6298)
!6301 = !DILocation(line: 2547, column: 3, scope: !6298)
!6302 = !DILocation(line: 2547, column: 9, scope: !6298)
!6303 = !DILocation(line: 2547, column: 19, scope: !6298)
!6304 = !DILocation(line: 2548, column: 2, scope: !6298)
!6305 = !DILocation(line: 2551, column: 19, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2551, column: 6)
!6307 = !DILocation(line: 2551, column: 7, scope: !6306)
!6308 = !DILocation(line: 2551, column: 6, scope: !5871)
!6309 = !DILocation(line: 2552, column: 3, scope: !6306)
!6310 = !DILocation(line: 2555, column: 6, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2555, column: 6)
!6312 = !DILocation(line: 2555, column: 12, scope: !6311)
!6313 = !DILocation(line: 2555, column: 24, scope: !6311)
!6314 = !DILocation(line: 2555, column: 27, scope: !6315)
!6315 = !DILexicalBlockFile(scope: !6311, file: !512, discriminator: 1)
!6316 = !DILocation(line: 2555, column: 33, scope: !6315)
!6317 = !DILocation(line: 2555, column: 38, scope: !6315)
!6318 = !DILocation(line: 2555, column: 46, scope: !6315)
!6319 = !DILocation(line: 2555, column: 50, scope: !6320)
!6320 = !DILexicalBlockFile(scope: !6311, file: !512, discriminator: 2)
!6321 = !DILocation(line: 2555, column: 56, scope: !6320)
!6322 = !DILocation(line: 2555, column: 61, scope: !6320)
!6323 = !DILocation(line: 2555, column: 71, scope: !6320)
!6324 = !DILocation(line: 2555, column: 87, scope: !6320)
!6325 = !DILocation(line: 2555, column: 93, scope: !6326)
!6326 = !DILexicalBlockFile(scope: !6311, file: !512, discriminator: 3)
!6327 = !DILocation(line: 2555, column: 99, scope: !6326)
!6328 = !DILocation(line: 2555, column: 113, scope: !6326)
!6329 = !DILocation(line: 2555, column: 91, scope: !6326)
!6330 = !DILocation(line: 2555, column: 96, scope: !6331)
!6331 = !DILexicalBlockFile(scope: !6311, file: !512, discriminator: 4)
!6332 = !DILocation(line: 2555, column: 102, scope: !6331)
!6333 = !DILocation(line: 2555, column: 117, scope: !6331)
!6334 = !DILocation(line: 2555, column: 122, scope: !6331)
!6335 = !DILocation(line: 2555, column: 91, scope: !6331)
!6336 = !DILocation(line: 2555, column: 95, scope: !6337)
!6337 = !DILexicalBlockFile(scope: !6311, file: !512, discriminator: 5)
!6338 = !DILocation(line: 2555, column: 101, scope: !6337)
!6339 = !DILocation(line: 2555, column: 116, scope: !6337)
!6340 = !DILocation(line: 2555, column: 121, scope: !6337)
!6341 = !DILocation(line: 2555, column: 6, scope: !6337)
!6342 = !DILocation(line: 2556, column: 100, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6311, file: !512, line: 2555, column: 95)
!6344 = !DILocation(line: 2556, column: 106, scope: !6343)
!6345 = !DILocation(line: 2556, column: 3, scope: !6343)
!6346 = !DILocation(line: 2557, column: 3, scope: !6343)
!6347 = !DILocation(line: 2562, column: 33, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2562, column: 6)
!6349 = !DILocation(line: 2562, column: 39, scope: !6348)
!6350 = !DILocation(line: 2562, column: 6, scope: !6348)
!6351 = !DILocation(line: 2562, column: 51, scope: !6348)
!6352 = !DILocation(line: 2562, column: 54, scope: !6353)
!6353 = !DILexicalBlockFile(scope: !6348, file: !512, discriminator: 1)
!6354 = !DILocation(line: 2562, column: 60, scope: !6353)
!6355 = !DILocation(line: 2562, column: 65, scope: !6353)
!6356 = !DILocation(line: 2562, column: 6, scope: !6353)
!6357 = !DILocation(line: 2563, column: 7, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6359, file: !512, line: 2563, column: 7)
!6359 = distinct !DILexicalBlock(scope: !6348, file: !512, line: 2562, column: 74)
!6360 = !DILocation(line: 2563, column: 13, scope: !6358)
!6361 = !DILocation(line: 2563, column: 18, scope: !6358)
!6362 = !DILocation(line: 2563, column: 7, scope: !6359)
!6363 = !DILocation(line: 2564, column: 122, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6358, file: !512, line: 2563, column: 24)
!6365 = !DILocation(line: 2564, column: 128, scope: !6364)
!6366 = !DILocation(line: 2564, column: 135, scope: !6364)
!6367 = !DILocation(line: 2564, column: 141, scope: !6364)
!6368 = !DILocation(line: 2564, column: 146, scope: !6364)
!6369 = !DILocation(line: 2564, column: 156, scope: !6364)
!6370 = !DILocation(line: 2564, column: 4, scope: !6364)
!6371 = !DILocation(line: 2566, column: 4, scope: !6364)
!6372 = !DILocation(line: 2569, column: 7, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6359, file: !512, line: 2569, column: 7)
!6374 = !DILocation(line: 2569, column: 13, scope: !6373)
!6375 = !DILocation(line: 2569, column: 18, scope: !6373)
!6376 = !DILocation(line: 2569, column: 26, scope: !6373)
!6377 = !DILocation(line: 2569, column: 7, scope: !6359)
!6378 = !DILocation(line: 2570, column: 32, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6373, file: !512, line: 2569, column: 42)
!6380 = !DILocation(line: 2570, column: 38, scope: !6379)
!6381 = !DILocation(line: 2570, column: 4, scope: !6379)
!6382 = !DILocation(line: 2571, column: 108, scope: !6379)
!6383 = !DILocation(line: 2571, column: 114, scope: !6379)
!6384 = !DILocation(line: 2571, column: 4, scope: !6379)
!6385 = !DILocation(line: 2572, column: 4, scope: !6379)
!6386 = !DILocation(line: 2572, column: 10, scope: !6379)
!6387 = !DILocation(line: 2572, column: 29, scope: !6379)
!6388 = !DILocation(line: 2573, column: 3, scope: !6379)
!6389 = !DILocation(line: 2574, column: 2, scope: !6359)
!6390 = !DILocation(line: 2578, column: 6, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2578, column: 6)
!6392 = !DILocation(line: 2578, column: 12, scope: !6391)
!6393 = !DILocation(line: 2578, column: 17, scope: !6391)
!6394 = !DILocation(line: 2578, column: 25, scope: !6391)
!6395 = !DILocation(line: 2578, column: 30, scope: !6396)
!6396 = !DILexicalBlockFile(scope: !6391, file: !512, discriminator: 1)
!6397 = !DILocation(line: 2578, column: 36, scope: !6396)
!6398 = !DILocation(line: 2578, column: 41, scope: !6396)
!6399 = !DILocation(line: 2578, column: 51, scope: !6396)
!6400 = !DILocation(line: 2578, column: 67, scope: !6396)
!6401 = !DILocation(line: 2578, column: 72, scope: !6402)
!6402 = !DILexicalBlockFile(scope: !6391, file: !512, discriminator: 2)
!6403 = !DILocation(line: 2578, column: 78, scope: !6402)
!6404 = !DILocation(line: 2578, column: 92, scope: !6402)
!6405 = !DILocation(line: 2578, column: 70, scope: !6402)
!6406 = !DILocation(line: 2578, column: 75, scope: !6407)
!6407 = !DILexicalBlockFile(scope: !6391, file: !512, discriminator: 3)
!6408 = !DILocation(line: 2578, column: 81, scope: !6407)
!6409 = !DILocation(line: 2578, column: 96, scope: !6407)
!6410 = !DILocation(line: 2578, column: 101, scope: !6407)
!6411 = !DILocation(line: 2578, column: 70, scope: !6407)
!6412 = !DILocation(line: 2578, column: 74, scope: !6413)
!6413 = !DILexicalBlockFile(scope: !6391, file: !512, discriminator: 4)
!6414 = !DILocation(line: 2578, column: 80, scope: !6413)
!6415 = !DILocation(line: 2578, column: 95, scope: !6413)
!6416 = !DILocation(line: 2578, column: 100, scope: !6413)
!6417 = !DILocation(line: 2578, column: 6, scope: !6413)
!6418 = !DILocation(line: 2579, column: 128, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6391, file: !512, line: 2578, column: 74)
!6420 = !DILocation(line: 2579, column: 134, scope: !6419)
!6421 = !DILocation(line: 2579, column: 141, scope: !6419)
!6422 = !DILocation(line: 2579, column: 147, scope: !6419)
!6423 = !DILocation(line: 2579, column: 152, scope: !6419)
!6424 = !DILocation(line: 2579, column: 3, scope: !6419)
!6425 = !DILocation(line: 2580, column: 3, scope: !6419)
!6426 = !DILocation(line: 2580, column: 9, scope: !6419)
!6427 = !DILocation(line: 2580, column: 28, scope: !6419)
!6428 = !DILocation(line: 2581, column: 2, scope: !6419)
!6429 = !DILocation(line: 2584, column: 6, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2584, column: 6)
!6431 = !DILocation(line: 2584, column: 41, scope: !6430)
!6432 = !DILocation(line: 2585, column: 6, scope: !6430)
!6433 = !DILocation(line: 2585, column: 12, scope: !6430)
!6434 = !DILocation(line: 2585, column: 17, scope: !6430)
!6435 = !DILocation(line: 2585, column: 25, scope: !6430)
!6436 = !DILocation(line: 2586, column: 7, scope: !6430)
!6437 = !DILocation(line: 2586, column: 13, scope: !6430)
!6438 = !DILocation(line: 2586, column: 18, scope: !6430)
!6439 = !DILocation(line: 2586, column: 28, scope: !6430)
!6440 = !DILocation(line: 2586, column: 40, scope: !6430)
!6441 = !DILocation(line: 2587, column: 8, scope: !6430)
!6442 = !DILocation(line: 2587, column: 14, scope: !6430)
!6443 = !DILocation(line: 2587, column: 19, scope: !6430)
!6444 = !DILocation(line: 2587, column: 29, scope: !6430)
!6445 = !DILocation(line: 2584, column: 6, scope: !6446)
!6446 = !DILexicalBlockFile(scope: !5871, file: !512, discriminator: 1)
!6447 = !DILocation(line: 2588, column: 103, scope: !6430)
!6448 = !DILocation(line: 2588, column: 109, scope: !6430)
!6449 = !DILocation(line: 2588, column: 3, scope: !6430)
!6450 = !DILocation(line: 2591, column: 6, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2591, column: 6)
!6452 = !DILocation(line: 2591, column: 12, scope: !6451)
!6453 = !DILocation(line: 2591, column: 19, scope: !6451)
!6454 = !DILocation(line: 2591, column: 30, scope: !6451)
!6455 = !DILocation(line: 2591, column: 35, scope: !6456)
!6456 = !DILexicalBlockFile(scope: !6451, file: !512, discriminator: 1)
!6457 = !DILocation(line: 2591, column: 41, scope: !6456)
!6458 = !DILocation(line: 2591, column: 55, scope: !6456)
!6459 = !DILocation(line: 2591, column: 33, scope: !6456)
!6460 = !DILocation(line: 2591, column: 38, scope: !6461)
!6461 = !DILexicalBlockFile(scope: !6451, file: !512, discriminator: 2)
!6462 = !DILocation(line: 2591, column: 44, scope: !6461)
!6463 = !DILocation(line: 2591, column: 59, scope: !6461)
!6464 = !DILocation(line: 2591, column: 64, scope: !6461)
!6465 = !DILocation(line: 2591, column: 33, scope: !6461)
!6466 = !DILocation(line: 2591, column: 37, scope: !6467)
!6467 = !DILexicalBlockFile(scope: !6451, file: !512, discriminator: 3)
!6468 = !DILocation(line: 2591, column: 43, scope: !6467)
!6469 = !DILocation(line: 2591, column: 58, scope: !6467)
!6470 = !DILocation(line: 2591, column: 63, scope: !6467)
!6471 = !DILocation(line: 2591, column: 36, scope: !6467)
!6472 = !DILocalVariable(name: "__a", scope: !6473, file: !512, line: 2592, type: !251)
!6473 = distinct !DILexicalBlock(scope: !6451, file: !512, line: 2592, column: 21)
!6474 = !DILocation(line: 2592, column: 46, scope: !6473)
!6475 = !DILocation(line: 2592, column: 26, scope: !6473)
!6476 = !DILocation(line: 2592, column: 32, scope: !6473)
!6477 = !DILocation(line: 2592, column: 25, scope: !6473)
!6478 = !DILocation(line: 2592, column: 24, scope: !6473)
!6479 = !DILocation(line: 2592, column: 24, scope: !6480)
!6480 = !DILexicalBlockFile(scope: !6473, file: !512, discriminator: 1)
!6481 = !DILocation(line: 2592, column: 8, scope: !6482)
!6482 = !DILexicalBlockFile(scope: !6473, file: !512, discriminator: 2)
!6483 = !DILocation(line: 2592, column: 14, scope: !6482)
!6484 = !DILocation(line: 2592, column: 20, scope: !6482)
!6485 = !DILocation(line: 2592, column: 24, scope: !6482)
!6486 = !DILocation(line: 2592, column: 24, scope: !6487)
!6487 = !DILexicalBlockFile(scope: !6473, file: !512, discriminator: 3)
!6488 = !DILocation(line: 2592, column: 27, scope: !6487)
!6489 = !DILocation(line: 2592, column: 7, scope: !6487)
!6490 = !DILocation(line: 2592, column: 34, scope: !6487)
!6491 = !DILocation(line: 2592, column: 36, scope: !6487)
!6492 = !DILocation(line: 2592, column: 46, scope: !6487)
!6493 = !DILocation(line: 2592, column: 9, scope: !6487)
!6494 = !DILocation(line: 2592, column: 14, scope: !6487)
!6495 = !DILocation(line: 2592, column: 22, scope: !6487)
!6496 = !DILocation(line: 2592, column: 39, scope: !6487)
!6497 = !DILocation(line: 2592, column: 37, scope: !6487)
!6498 = !DILocation(line: 2592, column: 62, scope: !6499)
!6499 = !DILexicalBlockFile(scope: !6487, file: !512, discriminator: 4)
!6500 = !DILocation(line: 2592, column: 59, scope: !6487)
!6501 = !DILocation(line: 2592, column: 23, scope: !6487)
!6502 = !DILocation(line: 2592, column: 82, scope: !6487)
!6503 = !DILocation(line: 2592, column: 20, scope: !6487)
!6504 = !DILocation(line: 2591, column: 6, scope: !6505)
!6505 = !DILexicalBlockFile(scope: !5871, file: !512, discriminator: 4)
!6506 = !DILocation(line: 2593, column: 99, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6451, file: !512, line: 2592, column: 88)
!6508 = !DILocation(line: 2593, column: 105, scope: !6507)
!6509 = !DILocation(line: 2593, column: 3, scope: !6507)
!6510 = !DILocation(line: 2594, column: 2, scope: !6507)
!6511 = !DILocation(line: 2597, column: 6, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2597, column: 6)
!6513 = !DILocation(line: 2597, column: 12, scope: !6512)
!6514 = !DILocation(line: 2597, column: 19, scope: !6512)
!6515 = !DILocation(line: 2597, column: 6, scope: !5871)
!6516 = !DILocation(line: 2598, column: 11, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6512, file: !512, line: 2597, column: 30)
!6518 = !DILocation(line: 2600, column: 7, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6517, file: !512, line: 2600, column: 7)
!6520 = !DILocation(line: 2600, column: 13, scope: !6519)
!6521 = !DILocation(line: 2600, column: 21, scope: !6519)
!6522 = !DILocation(line: 2600, column: 7, scope: !6517)
!6523 = !DILocation(line: 2601, column: 12, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6519, file: !512, line: 2600, column: 27)
!6525 = !DILocation(line: 2604, column: 8, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6524, file: !512, line: 2604, column: 8)
!6527 = !DILocation(line: 2604, column: 14, scope: !6526)
!6528 = !DILocation(line: 2604, column: 24, scope: !6526)
!6529 = !DILocation(line: 2604, column: 8, scope: !6524)
!6530 = !DILocation(line: 2605, column: 16, scope: !6526)
!6531 = !DILocation(line: 2605, column: 13, scope: !6526)
!6532 = !DILocation(line: 2605, column: 5, scope: !6526)
!6533 = !DILocation(line: 2607, column: 3, scope: !6524)
!6534 = !DILocation(line: 2609, column: 15, scope: !6517)
!6535 = !DILocation(line: 2609, column: 21, scope: !6517)
!6536 = !DILocation(line: 2609, column: 26, scope: !6517)
!6537 = !DILocation(line: 2609, column: 32, scope: !6517)
!6538 = !DILocation(line: 2609, column: 30, scope: !6517)
!6539 = !DILocation(line: 2609, column: 41, scope: !6517)
!6540 = !DILocation(line: 2609, column: 12, scope: !6517)
!6541 = !DILocation(line: 2610, column: 2, scope: !6517)
!6542 = !DILocation(line: 2611, column: 11, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6512, file: !512, line: 2610, column: 9)
!6544 = !DILocation(line: 2612, column: 15, scope: !6543)
!6545 = !DILocation(line: 2612, column: 21, scope: !6543)
!6546 = !DILocation(line: 2612, column: 26, scope: !6543)
!6547 = !DILocation(line: 2612, column: 32, scope: !6543)
!6548 = !DILocation(line: 2612, column: 30, scope: !6543)
!6549 = !DILocation(line: 2612, column: 41, scope: !6543)
!6550 = !DILocation(line: 2612, column: 12, scope: !6543)
!6551 = !DILocation(line: 2616, column: 6, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2616, column: 6)
!6553 = !DILocation(line: 2616, column: 15, scope: !6552)
!6554 = !DILocation(line: 2616, column: 6, scope: !5871)
!6555 = !DILocation(line: 2617, column: 12, scope: !6552)
!6556 = !DILocation(line: 2617, column: 3, scope: !6552)
!6557 = !DILocation(line: 2620, column: 9, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2620, column: 6)
!6559 = !DILocation(line: 2620, column: 15, scope: !6558)
!6560 = !DILocation(line: 2620, column: 20, scope: !6558)
!6561 = !DILocation(line: 2620, column: 6, scope: !6558)
!6562 = !DILocation(line: 2620, column: 11, scope: !6563)
!6563 = !DILexicalBlockFile(scope: !6558, file: !512, discriminator: 1)
!6564 = !DILocation(line: 2620, column: 17, scope: !6563)
!6565 = !DILocation(line: 2620, column: 23, scope: !6563)
!6566 = !DILocation(line: 2620, column: 28, scope: !6563)
!6567 = !DILocation(line: 2620, column: 6, scope: !6563)
!6568 = !DILocation(line: 2620, column: 10, scope: !6569)
!6569 = !DILexicalBlockFile(scope: !6558, file: !512, discriminator: 2)
!6570 = !DILocation(line: 2620, column: 16, scope: !6569)
!6571 = !DILocation(line: 2620, column: 22, scope: !6569)
!6572 = !DILocation(line: 2620, column: 27, scope: !6569)
!6573 = !DILocation(line: 2620, column: 9, scope: !6569)
!6574 = !DILocation(line: 2620, column: 14, scope: !6575)
!6575 = !DILexicalBlockFile(scope: !6558, file: !512, discriminator: 3)
!6576 = !DILocation(line: 2620, column: 20, scope: !6575)
!6577 = !DILocation(line: 2620, column: 26, scope: !6575)
!6578 = !DILocation(line: 2620, column: 12, scope: !6575)
!6579 = !DILocation(line: 2620, column: 35, scope: !6575)
!6580 = !DILocation(line: 2620, column: 33, scope: !6575)
!6581 = !DILocation(line: 2620, column: 6, scope: !6575)
!6582 = !DILocation(line: 2622, column: 5, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6558, file: !512, line: 2620, column: 45)
!6584 = !DILocation(line: 2622, column: 11, scope: !6583)
!6585 = !DILocation(line: 2622, column: 20, scope: !6583)
!6586 = !DILocation(line: 2622, column: 26, scope: !6583)
!6587 = !DILocation(line: 2622, column: 32, scope: !6583)
!6588 = !DILocation(line: 2622, column: 40, scope: !6583)
!6589 = !DILocation(line: 2621, column: 3, scope: !6583)
!6590 = !DILocation(line: 2623, column: 10, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6583, file: !512, line: 2623, column: 3)
!6592 = !DILocation(line: 2623, column: 22, scope: !6591)
!6593 = !DILocation(line: 2623, column: 28, scope: !6591)
!6594 = !DILocation(line: 2623, column: 21, scope: !6591)
!6595 = !DILocation(line: 2623, column: 20, scope: !6591)
!6596 = !DILocation(line: 2623, column: 20, scope: !6597)
!6597 = !DILexicalBlockFile(scope: !6591, file: !512, discriminator: 1)
!6598 = !DILocation(line: 2623, column: 21, scope: !6599)
!6599 = !DILexicalBlockFile(scope: !6591, file: !512, discriminator: 2)
!6600 = !DILocation(line: 2623, column: 27, scope: !6599)
!6601 = !DILocation(line: 2623, column: 33, scope: !6599)
!6602 = !DILocation(line: 2623, column: 20, scope: !6599)
!6603 = !DILocation(line: 2623, column: 20, scope: !6604)
!6604 = !DILexicalBlockFile(scope: !6591, file: !512, discriminator: 3)
!6605 = !DILocation(line: 2623, column: 17, scope: !6604)
!6606 = !DILocation(line: 2623, column: 8, scope: !6604)
!6607 = !DILocation(line: 2623, column: 40, scope: !6608)
!6608 = !DILexicalBlockFile(scope: !6609, file: !512, discriminator: 4)
!6609 = distinct !DILexicalBlock(scope: !6591, file: !512, line: 2623, column: 3)
!6610 = !DILocation(line: 2623, column: 3, scope: !6608)
!6611 = !DILocation(line: 2624, column: 11, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6609, file: !512, line: 2623, column: 58)
!6613 = !DILocation(line: 2624, column: 14, scope: !6612)
!6614 = !DILocation(line: 2624, column: 9, scope: !6612)
!6615 = !DILocation(line: 2625, column: 8, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6612, file: !512, line: 2625, column: 8)
!6617 = !DILocation(line: 2625, column: 12, scope: !6616)
!6618 = !DILocation(line: 2625, column: 10, scope: !6616)
!6619 = !DILocation(line: 2625, column: 8, scope: !6612)
!6620 = !DILocation(line: 2626, column: 5, scope: !6616)
!6621 = !DILocation(line: 2627, column: 12, scope: !6612)
!6622 = !DILocation(line: 2627, column: 16, scope: !6612)
!6623 = !DILocation(line: 2627, column: 10, scope: !6612)
!6624 = !DILocation(line: 2627, column: 8, scope: !6612)
!6625 = !DILocation(line: 2628, column: 13, scope: !6612)
!6626 = !DILocation(line: 2628, column: 19, scope: !6612)
!6627 = !DILocation(line: 2628, column: 24, scope: !6612)
!6628 = !DILocation(line: 2628, column: 4, scope: !6612)
!6629 = !DILocation(line: 2629, column: 11, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6612, file: !512, line: 2629, column: 8)
!6631 = !DILocation(line: 2629, column: 17, scope: !6630)
!6632 = !DILocation(line: 2629, column: 23, scope: !6630)
!6633 = !DILocation(line: 2629, column: 8, scope: !6612)
!6634 = !DILocation(line: 2630, column: 18, scope: !6630)
!6635 = !DILocation(line: 2630, column: 5, scope: !6630)
!6636 = !DILocation(line: 2630, column: 11, scope: !6630)
!6637 = !DILocation(line: 2630, column: 16, scope: !6630)
!6638 = !DILocation(line: 2631, column: 13, scope: !6612)
!6639 = !DILocation(line: 2631, column: 19, scope: !6612)
!6640 = !DILocation(line: 2631, column: 25, scope: !6612)
!6641 = !DILocation(line: 2631, column: 4, scope: !6612)
!6642 = !DILocation(line: 2632, column: 3, scope: !6612)
!6643 = !DILocation(line: 2623, column: 44, scope: !6644)
!6644 = !DILexicalBlockFile(scope: !6609, file: !512, discriminator: 5)
!6645 = !DILocation(line: 2623, column: 52, scope: !6644)
!6646 = !DILocation(line: 2623, column: 50, scope: !6644)
!6647 = !DILocation(line: 2623, column: 3, scope: !6644)
!6648 = distinct !{!6648, !6649}
!6649 = !DILocation(line: 2623, column: 3, scope: !6583)
!6650 = !DILocation(line: 2633, column: 2, scope: !6583)
!6651 = !DILocation(line: 2635, column: 6, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2635, column: 6)
!6653 = !DILocation(line: 2635, column: 12, scope: !6652)
!6654 = !DILocation(line: 2635, column: 26, scope: !6652)
!6655 = !DILocation(line: 2635, column: 33, scope: !6652)
!6656 = !DILocation(line: 2635, column: 36, scope: !6657)
!6657 = !DILexicalBlockFile(scope: !6652, file: !512, discriminator: 1)
!6658 = !DILocation(line: 2635, column: 42, scope: !6657)
!6659 = !DILocation(line: 2635, column: 6, scope: !6657)
!6660 = !DILocation(line: 2636, column: 118, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6652, file: !512, line: 2635, column: 53)
!6662 = !DILocation(line: 2636, column: 124, scope: !6661)
!6663 = !DILocation(line: 2636, column: 3, scope: !6661)
!6664 = !DILocation(line: 2637, column: 3, scope: !6661)
!6665 = !DILocation(line: 2637, column: 9, scope: !6661)
!6666 = !DILocation(line: 2637, column: 19, scope: !6661)
!6667 = !DILocation(line: 2638, column: 2, scope: !6661)
!6668 = !DILocation(line: 2640, column: 29, scope: !5871)
!6669 = !DILocation(line: 2640, column: 35, scope: !5871)
!6670 = !DILocation(line: 2640, column: 2, scope: !5871)
!6671 = !DILocation(line: 2640, column: 8, scope: !5871)
!6672 = !DILocation(line: 2640, column: 27, scope: !5871)
!6673 = !DILocation(line: 2641, column: 25, scope: !5871)
!6674 = !DILocation(line: 2641, column: 31, scope: !5871)
!6675 = !DILocation(line: 2641, column: 2, scope: !5871)
!6676 = !DILocation(line: 2641, column: 8, scope: !5871)
!6677 = !DILocation(line: 2641, column: 23, scope: !5871)
!6678 = !DILocation(line: 2643, column: 6, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2643, column: 6)
!6680 = !DILocation(line: 2643, column: 12, scope: !6679)
!6681 = !DILocation(line: 2643, column: 22, scope: !6679)
!6682 = !DILocation(line: 2643, column: 6, scope: !5871)
!6683 = !DILocation(line: 2644, column: 7, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !512, line: 2644, column: 7)
!6685 = distinct !DILexicalBlock(scope: !6679, file: !512, line: 2643, column: 28)
!6686 = !DILocation(line: 2644, column: 13, scope: !6684)
!6687 = !DILocation(line: 2644, column: 7, scope: !6685)
!6688 = !DILocation(line: 2645, column: 125, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6684, file: !512, line: 2644, column: 24)
!6690 = !DILocation(line: 2645, column: 131, scope: !6689)
!6691 = !DILocation(line: 2645, column: 4, scope: !6689)
!6692 = !DILocation(line: 2646, column: 4, scope: !6689)
!6693 = !DILocation(line: 2646, column: 10, scope: !6689)
!6694 = !DILocation(line: 2646, column: 20, scope: !6689)
!6695 = !DILocation(line: 2647, column: 3, scope: !6689)
!6696 = !DILocation(line: 2648, column: 7, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6685, file: !512, line: 2648, column: 7)
!6698 = !DILocation(line: 2648, column: 13, scope: !6697)
!6699 = !DILocation(line: 2648, column: 7, scope: !6685)
!6700 = !DILocation(line: 2649, column: 129, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6697, file: !512, line: 2648, column: 28)
!6702 = !DILocation(line: 2649, column: 135, scope: !6701)
!6703 = !DILocation(line: 2649, column: 4, scope: !6701)
!6704 = !DILocation(line: 2650, column: 4, scope: !6701)
!6705 = !DILocation(line: 2650, column: 10, scope: !6701)
!6706 = !DILocation(line: 2650, column: 24, scope: !6701)
!6707 = !DILocation(line: 2651, column: 3, scope: !6701)
!6708 = !DILocation(line: 2652, column: 2, scope: !6685)
!6709 = !DILocation(line: 2653, column: 6, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2653, column: 6)
!6711 = !DILocation(line: 2653, column: 12, scope: !6710)
!6712 = !DILocation(line: 2653, column: 6, scope: !5871)
!6713 = !DILocation(line: 2654, column: 7, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !512, line: 2654, column: 7)
!6715 = distinct !DILexicalBlock(scope: !6710, file: !512, line: 2653, column: 27)
!6716 = !DILocation(line: 2654, column: 13, scope: !6714)
!6717 = !DILocation(line: 2654, column: 7, scope: !6715)
!6718 = !DILocation(line: 2655, column: 113, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6714, file: !512, line: 2654, column: 26)
!6720 = !DILocation(line: 2655, column: 119, scope: !6719)
!6721 = !DILocation(line: 2655, column: 4, scope: !6719)
!6722 = !DILocation(line: 2656, column: 4, scope: !6719)
!6723 = !DILocation(line: 2656, column: 10, scope: !6719)
!6724 = !DILocation(line: 2656, column: 24, scope: !6719)
!6725 = !DILocation(line: 2657, column: 3, scope: !6719)
!6726 = !DILocation(line: 2658, column: 7, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6715, file: !512, line: 2658, column: 7)
!6728 = !DILocation(line: 2658, column: 13, scope: !6727)
!6729 = !DILocation(line: 2658, column: 7, scope: !6715)
!6730 = !DILocation(line: 2659, column: 116, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6727, file: !512, line: 2658, column: 24)
!6732 = !DILocation(line: 2659, column: 122, scope: !6731)
!6733 = !DILocation(line: 2659, column: 4, scope: !6731)
!6734 = !DILocation(line: 2660, column: 4, scope: !6731)
!6735 = !DILocation(line: 2660, column: 10, scope: !6731)
!6736 = !DILocation(line: 2660, column: 24, scope: !6731)
!6737 = !DILocation(line: 2661, column: 3, scope: !6731)
!6738 = !DILocation(line: 2662, column: 2, scope: !6715)
!6739 = !DILocation(line: 2664, column: 2, scope: !5871)
!6740 = !DILocation(line: 2664, column: 8, scope: !5871)
!6741 = !DILocation(line: 2664, column: 14, scope: !5871)
!6742 = !DILocation(line: 2673, column: 6, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2673, column: 6)
!6744 = !DILocation(line: 2673, column: 12, scope: !6743)
!6745 = !DILocation(line: 2673, column: 19, scope: !6743)
!6746 = !DILocation(line: 2673, column: 6, scope: !5871)
!6747 = !DILocation(line: 2674, column: 19, scope: !6743)
!6748 = !DILocation(line: 2674, column: 25, scope: !6743)
!6749 = !DILocation(line: 2674, column: 18, scope: !6743)
!6750 = !DILocation(line: 2674, column: 3, scope: !6743)
!6751 = !DILocation(line: 2674, column: 9, scope: !6743)
!6752 = !DILocation(line: 2674, column: 16, scope: !6743)
!6753 = !DILocation(line: 2676, column: 6, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2676, column: 6)
!6755 = !DILocation(line: 2676, column: 12, scope: !6754)
!6756 = !DILocation(line: 2676, column: 19, scope: !6754)
!6757 = !DILocation(line: 2677, column: 6, scope: !6754)
!6758 = !DILocation(line: 2677, column: 12, scope: !6754)
!6759 = !DILocation(line: 2677, column: 26, scope: !6754)
!6760 = !DILocation(line: 2677, column: 33, scope: !6754)
!6761 = !DILocation(line: 2678, column: 6, scope: !6754)
!6762 = !DILocation(line: 2678, column: 12, scope: !6754)
!6763 = !DILocation(line: 2678, column: 24, scope: !6754)
!6764 = !DILocation(line: 2679, column: 6, scope: !6754)
!6765 = !DILocation(line: 2679, column: 12, scope: !6754)
!6766 = !DILocation(line: 2679, column: 20, scope: !6754)
!6767 = !DILocation(line: 2676, column: 6, scope: !6446)
!6768 = !DILocation(line: 2680, column: 135, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6754, file: !512, line: 2679, column: 26)
!6770 = !DILocation(line: 2680, column: 141, scope: !6769)
!6771 = !DILocation(line: 2680, column: 3, scope: !6769)
!6772 = !DILocation(line: 2681, column: 3, scope: !6769)
!6773 = !DILocation(line: 2681, column: 9, scope: !6769)
!6774 = !DILocation(line: 2681, column: 16, scope: !6769)
!6775 = !DILocation(line: 2682, column: 2, scope: !6769)
!6776 = !DILocation(line: 2684, column: 6, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2684, column: 6)
!6778 = !DILocation(line: 2684, column: 12, scope: !6777)
!6779 = !DILocation(line: 2684, column: 32, scope: !6777)
!6780 = !DILocation(line: 2684, column: 6, scope: !5871)
!6781 = !DILocation(line: 2685, column: 31, scope: !6777)
!6782 = !DILocation(line: 2685, column: 37, scope: !6777)
!6783 = !DILocation(line: 2685, column: 31, scope: !6784)
!6784 = !DILexicalBlockFile(scope: !6777, file: !512, discriminator: 1)
!6785 = !DILocation(line: 2685, column: 55, scope: !6786)
!6786 = !DILexicalBlockFile(scope: !6777, file: !512, discriminator: 2)
!6787 = !DILocation(line: 2685, column: 68, scope: !6786)
!6788 = !DILocation(line: 2685, column: 31, scope: !6786)
!6789 = !DILocation(line: 2685, column: 31, scope: !6790)
!6790 = !DILexicalBlockFile(scope: !6777, file: !512, discriminator: 3)
!6791 = !DILocation(line: 2685, column: 3, scope: !6790)
!6792 = !DILocation(line: 2685, column: 9, scope: !6790)
!6793 = !DILocation(line: 2685, column: 29, scope: !6790)
!6794 = !DILocation(line: 2686, column: 11, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6777, file: !512, line: 2686, column: 11)
!6796 = !DILocation(line: 2686, column: 17, scope: !6795)
!6797 = !DILocation(line: 2686, column: 29, scope: !6795)
!6798 = !DILocation(line: 2686, column: 32, scope: !6799)
!6799 = !DILexicalBlockFile(scope: !6795, file: !512, discriminator: 1)
!6800 = !DILocation(line: 2686, column: 38, scope: !6799)
!6801 = !DILocation(line: 2686, column: 11, scope: !6799)
!6802 = !DILocation(line: 2687, column: 102, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6795, file: !512, line: 2686, column: 59)
!6804 = !DILocation(line: 2687, column: 108, scope: !6803)
!6805 = !DILocation(line: 2687, column: 3, scope: !6803)
!6806 = !DILocation(line: 2688, column: 3, scope: !6803)
!6807 = !DILocation(line: 2688, column: 9, scope: !6803)
!6808 = !DILocation(line: 2688, column: 29, scope: !6803)
!6809 = !DILocation(line: 2689, column: 2, scope: !6803)
!6810 = !DILocation(line: 2690, column: 6, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2690, column: 6)
!6812 = !DILocation(line: 2690, column: 12, scope: !6811)
!6813 = !DILocation(line: 2690, column: 34, scope: !6811)
!6814 = !DILocation(line: 2690, column: 6, scope: !5871)
!6815 = !DILocation(line: 2691, column: 33, scope: !6811)
!6816 = !DILocation(line: 2691, column: 39, scope: !6811)
!6817 = !DILocation(line: 2691, column: 33, scope: !6818)
!6818 = !DILexicalBlockFile(scope: !6811, file: !512, discriminator: 1)
!6819 = !DILocation(line: 2691, column: 57, scope: !6820)
!6820 = !DILexicalBlockFile(scope: !6811, file: !512, discriminator: 2)
!6821 = !DILocation(line: 2691, column: 70, scope: !6820)
!6822 = !DILocation(line: 2691, column: 33, scope: !6820)
!6823 = !DILocation(line: 2691, column: 33, scope: !6824)
!6824 = !DILexicalBlockFile(scope: !6811, file: !512, discriminator: 3)
!6825 = !DILocation(line: 2691, column: 3, scope: !6824)
!6826 = !DILocation(line: 2691, column: 9, scope: !6824)
!6827 = !DILocation(line: 2691, column: 31, scope: !6824)
!6828 = !DILocation(line: 2692, column: 11, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6811, file: !512, line: 2692, column: 11)
!6830 = !DILocation(line: 2692, column: 17, scope: !6829)
!6831 = !DILocation(line: 2692, column: 29, scope: !6829)
!6832 = !DILocation(line: 2692, column: 32, scope: !6833)
!6833 = !DILexicalBlockFile(scope: !6829, file: !512, discriminator: 1)
!6834 = !DILocation(line: 2692, column: 38, scope: !6833)
!6835 = !DILocation(line: 2692, column: 11, scope: !6833)
!6836 = !DILocation(line: 2693, column: 107, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6829, file: !512, line: 2692, column: 61)
!6838 = !DILocation(line: 2693, column: 113, scope: !6837)
!6839 = !DILocation(line: 2693, column: 3, scope: !6837)
!6840 = !DILocation(line: 2694, column: 3, scope: !6837)
!6841 = !DILocation(line: 2694, column: 9, scope: !6837)
!6842 = !DILocation(line: 2694, column: 31, scope: !6837)
!6843 = !DILocation(line: 2695, column: 2, scope: !6837)
!6844 = !DILocation(line: 2696, column: 6, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2696, column: 6)
!6846 = !DILocation(line: 2696, column: 12, scope: !6845)
!6847 = !DILocation(line: 2696, column: 33, scope: !6845)
!6848 = !DILocation(line: 2696, column: 6, scope: !5871)
!6849 = !DILocation(line: 2697, column: 32, scope: !6845)
!6850 = !DILocation(line: 2697, column: 38, scope: !6845)
!6851 = !DILocation(line: 2697, column: 32, scope: !6852)
!6852 = !DILexicalBlockFile(scope: !6845, file: !512, discriminator: 1)
!6853 = !DILocation(line: 2697, column: 58, scope: !6854)
!6854 = !DILexicalBlockFile(scope: !6845, file: !512, discriminator: 2)
!6855 = !DILocation(line: 2697, column: 71, scope: !6854)
!6856 = !DILocation(line: 2697, column: 32, scope: !6854)
!6857 = !DILocation(line: 2697, column: 32, scope: !6858)
!6858 = !DILexicalBlockFile(scope: !6845, file: !512, discriminator: 3)
!6859 = !DILocation(line: 2697, column: 3, scope: !6858)
!6860 = !DILocation(line: 2697, column: 9, scope: !6858)
!6861 = !DILocation(line: 2697, column: 30, scope: !6858)
!6862 = !DILocation(line: 2698, column: 11, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6845, file: !512, line: 2698, column: 11)
!6864 = !DILocation(line: 2698, column: 17, scope: !6863)
!6865 = !DILocation(line: 2698, column: 29, scope: !6863)
!6866 = !DILocation(line: 2698, column: 33, scope: !6867)
!6867 = !DILexicalBlockFile(scope: !6863, file: !512, discriminator: 1)
!6868 = !DILocation(line: 2698, column: 39, scope: !6867)
!6869 = !DILocation(line: 2698, column: 11, scope: !6867)
!6870 = !DILocation(line: 2699, column: 111, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6863, file: !512, line: 2698, column: 61)
!6872 = !DILocation(line: 2699, column: 117, scope: !6871)
!6873 = !DILocation(line: 2699, column: 3, scope: !6871)
!6874 = !DILocation(line: 2700, column: 3, scope: !6871)
!6875 = !DILocation(line: 2700, column: 9, scope: !6871)
!6876 = !DILocation(line: 2700, column: 30, scope: !6871)
!6877 = !DILocation(line: 2701, column: 2, scope: !6871)
!6878 = !DILocation(line: 2702, column: 6, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2702, column: 6)
!6880 = !DILocation(line: 2702, column: 12, scope: !6879)
!6881 = !DILocation(line: 2702, column: 36, scope: !6879)
!6882 = !DILocation(line: 2702, column: 6, scope: !5871)
!6883 = !DILocation(line: 2703, column: 35, scope: !6879)
!6884 = !DILocation(line: 2703, column: 41, scope: !6879)
!6885 = !DILocation(line: 2703, column: 35, scope: !6886)
!6886 = !DILexicalBlockFile(scope: !6879, file: !512, discriminator: 1)
!6887 = !DILocation(line: 2703, column: 62, scope: !6888)
!6888 = !DILexicalBlockFile(scope: !6879, file: !512, discriminator: 2)
!6889 = !DILocation(line: 2703, column: 75, scope: !6888)
!6890 = !DILocation(line: 2703, column: 35, scope: !6888)
!6891 = !DILocation(line: 2703, column: 35, scope: !6892)
!6892 = !DILexicalBlockFile(scope: !6879, file: !512, discriminator: 3)
!6893 = !DILocation(line: 2703, column: 3, scope: !6892)
!6894 = !DILocation(line: 2703, column: 9, scope: !6892)
!6895 = !DILocation(line: 2703, column: 33, scope: !6892)
!6896 = !DILocation(line: 2704, column: 11, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6879, file: !512, line: 2704, column: 11)
!6898 = !DILocation(line: 2704, column: 17, scope: !6897)
!6899 = !DILocation(line: 2704, column: 29, scope: !6897)
!6900 = !DILocation(line: 2704, column: 32, scope: !6901)
!6901 = !DILexicalBlockFile(scope: !6897, file: !512, discriminator: 1)
!6902 = !DILocation(line: 2704, column: 38, scope: !6901)
!6903 = !DILocation(line: 2704, column: 11, scope: !6901)
!6904 = !DILocation(line: 2705, column: 122, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6897, file: !512, line: 2704, column: 63)
!6906 = !DILocation(line: 2705, column: 128, scope: !6905)
!6907 = !DILocation(line: 2705, column: 3, scope: !6905)
!6908 = !DILocation(line: 2706, column: 3, scope: !6905)
!6909 = !DILocation(line: 2706, column: 9, scope: !6905)
!6910 = !DILocation(line: 2706, column: 33, scope: !6905)
!6911 = !DILocation(line: 2707, column: 2, scope: !6905)
!6912 = !DILocation(line: 2709, column: 6, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2709, column: 6)
!6914 = !DILocation(line: 2709, column: 12, scope: !6913)
!6915 = !DILocation(line: 2709, column: 23, scope: !6913)
!6916 = !DILocation(line: 2709, column: 6, scope: !5871)
!6917 = !DILocation(line: 2710, column: 7, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6919, file: !512, line: 2710, column: 7)
!6919 = distinct !DILexicalBlock(scope: !6913, file: !512, line: 2709, column: 30)
!6920 = !DILocation(line: 2710, column: 20, scope: !6918)
!6921 = !DILocation(line: 2710, column: 36, scope: !6918)
!6922 = !DILocation(line: 2710, column: 7, scope: !6919)
!6923 = !DILocation(line: 2711, column: 23, scope: !6918)
!6924 = !DILocation(line: 2711, column: 36, scope: !6918)
!6925 = !DILocation(line: 2711, column: 4, scope: !6918)
!6926 = !DILocation(line: 2711, column: 10, scope: !6918)
!6927 = !DILocation(line: 2711, column: 21, scope: !6918)
!6928 = !DILocation(line: 2712, column: 12, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6918, file: !512, line: 2712, column: 12)
!6930 = !DILocation(line: 2712, column: 25, scope: !6929)
!6931 = !DILocation(line: 2712, column: 36, scope: !6929)
!6932 = !DILocation(line: 2712, column: 12, scope: !6918)
!6933 = !DILocation(line: 2713, column: 23, scope: !6929)
!6934 = !DILocation(line: 2713, column: 36, scope: !6929)
!6935 = !DILocation(line: 2713, column: 4, scope: !6929)
!6936 = !DILocation(line: 2713, column: 10, scope: !6929)
!6937 = !DILocation(line: 2713, column: 21, scope: !6929)
!6938 = !DILocation(line: 2715, column: 4, scope: !6929)
!6939 = !DILocation(line: 2715, column: 10, scope: !6929)
!6940 = !DILocation(line: 2715, column: 21, scope: !6929)
!6941 = !DILocation(line: 2716, column: 2, scope: !6919)
!6942 = !DILocation(line: 2719, column: 7, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2719, column: 6)
!6944 = !DILocation(line: 2719, column: 13, scope: !6943)
!6945 = !DILocation(line: 2719, column: 6, scope: !5871)
!6946 = !DILocation(line: 2720, column: 3, scope: !6943)
!6947 = !DILocation(line: 2720, column: 9, scope: !6943)
!6948 = !DILocation(line: 2720, column: 19, scope: !6943)
!6949 = !DILocation(line: 2721, column: 6, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2721, column: 6)
!6951 = !DILocation(line: 2721, column: 12, scope: !6950)
!6952 = !DILocation(line: 2721, column: 20, scope: !6950)
!6953 = !DILocation(line: 2721, column: 6, scope: !5871)
!6954 = !DILocation(line: 2722, column: 7, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !512, line: 2722, column: 7)
!6956 = distinct !DILexicalBlock(scope: !6950, file: !512, line: 2721, column: 26)
!6957 = !DILocation(line: 2722, column: 13, scope: !6955)
!6958 = !DILocation(line: 2722, column: 23, scope: !6955)
!6959 = !DILocation(line: 2722, column: 7, scope: !6956)
!6960 = !DILocation(line: 2724, column: 6, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6955, file: !512, line: 2722, column: 45)
!6962 = !DILocation(line: 2724, column: 12, scope: !6961)
!6963 = !DILocation(line: 2724, column: 26, scope: !6961)
!6964 = !DILocation(line: 2724, column: 32, scope: !6961)
!6965 = !DILocation(line: 2724, column: 19, scope: !6961)
!6966 = !DILocation(line: 2724, column: 42, scope: !6961)
!6967 = !DILocation(line: 2723, column: 4, scope: !6961)
!6968 = !DILocation(line: 2725, column: 4, scope: !6961)
!6969 = !DILocation(line: 2725, column: 10, scope: !6961)
!6970 = !DILocation(line: 2725, column: 20, scope: !6961)
!6971 = !DILocation(line: 2726, column: 3, scope: !6961)
!6972 = !DILocation(line: 2727, column: 12, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6955, file: !512, line: 2727, column: 12)
!6974 = !DILocation(line: 2727, column: 18, scope: !6973)
!6975 = !DILocation(line: 2727, column: 28, scope: !6973)
!6976 = !DILocation(line: 2727, column: 12, scope: !6955)
!6977 = !DILocation(line: 2729, column: 6, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6973, file: !512, line: 2727, column: 40)
!6979 = !DILocation(line: 2729, column: 12, scope: !6978)
!6980 = !DILocation(line: 2729, column: 26, scope: !6978)
!6981 = !DILocation(line: 2729, column: 32, scope: !6978)
!6982 = !DILocation(line: 2729, column: 19, scope: !6978)
!6983 = !DILocation(line: 2729, column: 42, scope: !6978)
!6984 = !DILocation(line: 2728, column: 4, scope: !6978)
!6985 = !DILocation(line: 2730, column: 22, scope: !6978)
!6986 = !DILocation(line: 2730, column: 28, scope: !6978)
!6987 = !DILocation(line: 2730, column: 38, scope: !6978)
!6988 = !DILocation(line: 2730, column: 4, scope: !6978)
!6989 = !DILocation(line: 2730, column: 10, scope: !6978)
!6990 = !DILocation(line: 2730, column: 20, scope: !6978)
!6991 = !DILocation(line: 2731, column: 23, scope: !6978)
!6992 = !DILocation(line: 2731, column: 29, scope: !6978)
!6993 = !DILocation(line: 2731, column: 39, scope: !6978)
!6994 = !DILocation(line: 2731, column: 4, scope: !6978)
!6995 = !DILocation(line: 2731, column: 10, scope: !6978)
!6996 = !DILocation(line: 2731, column: 20, scope: !6978)
!6997 = !DILocation(line: 2732, column: 8, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6978, file: !512, line: 2732, column: 8)
!6999 = !DILocation(line: 2732, column: 14, scope: !6998)
!7000 = !DILocation(line: 2732, column: 24, scope: !6998)
!7001 = !DILocation(line: 2732, column: 8, scope: !6978)
!7002 = !DILocation(line: 2733, column: 5, scope: !6998)
!7003 = !DILocation(line: 2733, column: 11, scope: !6998)
!7004 = !DILocation(line: 2733, column: 21, scope: !6998)
!7005 = !DILocation(line: 2734, column: 3, scope: !6978)
!7006 = !DILocation(line: 2735, column: 2, scope: !6956)
!7007 = !DILocation(line: 2738, column: 7, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !512, line: 2738, column: 7)
!7009 = distinct !DILexicalBlock(scope: !6950, file: !512, line: 2737, column: 2)
!7010 = !DILocation(line: 2738, column: 13, scope: !7008)
!7011 = !DILocation(line: 2738, column: 23, scope: !7008)
!7012 = !DILocation(line: 2738, column: 7, scope: !7009)
!7013 = !DILocation(line: 2740, column: 6, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7008, file: !512, line: 2738, column: 44)
!7015 = !DILocation(line: 2740, column: 12, scope: !7014)
!7016 = !DILocation(line: 2740, column: 26, scope: !7014)
!7017 = !DILocation(line: 2740, column: 32, scope: !7014)
!7018 = !DILocation(line: 2740, column: 19, scope: !7014)
!7019 = !DILocation(line: 2740, column: 42, scope: !7014)
!7020 = !DILocation(line: 2739, column: 4, scope: !7014)
!7021 = !DILocation(line: 2741, column: 4, scope: !7014)
!7022 = !DILocation(line: 2741, column: 10, scope: !7014)
!7023 = !DILocation(line: 2741, column: 20, scope: !7014)
!7024 = !DILocation(line: 2742, column: 3, scope: !7014)
!7025 = !DILocation(line: 2743, column: 12, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7008, file: !512, line: 2743, column: 12)
!7027 = !DILocation(line: 2743, column: 18, scope: !7026)
!7028 = !DILocation(line: 2743, column: 28, scope: !7026)
!7029 = !DILocation(line: 2743, column: 12, scope: !7008)
!7030 = !DILocation(line: 2745, column: 6, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7026, file: !512, line: 2743, column: 38)
!7032 = !DILocation(line: 2745, column: 12, scope: !7031)
!7033 = !DILocation(line: 2745, column: 26, scope: !7031)
!7034 = !DILocation(line: 2745, column: 32, scope: !7031)
!7035 = !DILocation(line: 2745, column: 19, scope: !7031)
!7036 = !DILocation(line: 2745, column: 42, scope: !7031)
!7037 = !DILocation(line: 2744, column: 4, scope: !7031)
!7038 = !DILocation(line: 2746, column: 22, scope: !7031)
!7039 = !DILocation(line: 2746, column: 28, scope: !7031)
!7040 = !DILocation(line: 2746, column: 38, scope: !7031)
!7041 = !DILocation(line: 2746, column: 4, scope: !7031)
!7042 = !DILocation(line: 2746, column: 10, scope: !7031)
!7043 = !DILocation(line: 2746, column: 20, scope: !7031)
!7044 = !DILocation(line: 2747, column: 23, scope: !7031)
!7045 = !DILocation(line: 2747, column: 29, scope: !7031)
!7046 = !DILocation(line: 2747, column: 39, scope: !7031)
!7047 = !DILocation(line: 2747, column: 4, scope: !7031)
!7048 = !DILocation(line: 2747, column: 10, scope: !7031)
!7049 = !DILocation(line: 2747, column: 20, scope: !7031)
!7050 = !DILocation(line: 2749, column: 8, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7031, file: !512, line: 2749, column: 8)
!7052 = !DILocation(line: 2749, column: 14, scope: !7051)
!7053 = !DILocation(line: 2749, column: 24, scope: !7051)
!7054 = !DILocation(line: 2749, column: 8, scope: !7031)
!7055 = !DILocation(line: 2750, column: 5, scope: !7051)
!7056 = !DILocation(line: 2750, column: 11, scope: !7051)
!7057 = !DILocation(line: 2750, column: 21, scope: !7051)
!7058 = !DILocation(line: 2751, column: 3, scope: !7031)
!7059 = !DILocation(line: 2753, column: 27, scope: !5871)
!7060 = !DILocation(line: 2753, column: 33, scope: !5871)
!7061 = !DILocation(line: 2753, column: 2, scope: !5871)
!7062 = !DILocation(line: 2753, column: 8, scope: !5871)
!7063 = !DILocation(line: 2753, column: 25, scope: !5871)
!7064 = !DILocation(line: 2756, column: 6, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2756, column: 6)
!7066 = !DILocation(line: 2756, column: 12, scope: !7065)
!7067 = !DILocation(line: 2756, column: 33, scope: !7065)
!7068 = !DILocation(line: 2756, column: 36, scope: !7069)
!7069 = !DILexicalBlockFile(scope: !7065, file: !512, discriminator: 1)
!7070 = !DILocation(line: 2756, column: 49, scope: !7069)
!7071 = !DILocation(line: 2756, column: 6, scope: !7069)
!7072 = !DILocation(line: 2757, column: 3, scope: !7065)
!7073 = !DILocation(line: 2757, column: 9, scope: !7065)
!7074 = !DILocation(line: 2757, column: 14, scope: !7065)
!7075 = !DILocation(line: 2757, column: 35, scope: !7065)
!7076 = !DILocation(line: 2760, column: 7, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2760, column: 6)
!7078 = !DILocation(line: 2760, column: 13, scope: !7077)
!7079 = !DILocation(line: 2760, column: 6, scope: !5871)
!7080 = !DILocation(line: 2761, column: 3, scope: !7077)
!7081 = !DILocation(line: 2761, column: 9, scope: !7077)
!7082 = !DILocation(line: 2761, column: 21, scope: !7077)
!7083 = !DILocation(line: 2765, column: 33, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2765, column: 6)
!7085 = !DILocation(line: 2765, column: 39, scope: !7084)
!7086 = !DILocation(line: 2765, column: 6, scope: !7084)
!7087 = !DILocation(line: 2765, column: 6, scope: !5871)
!7088 = !DILocalVariable(name: "if_list", scope: !7089, file: !512, line: 2770, type: !400)
!7089 = distinct !DILexicalBlock(scope: !7084, file: !512, line: 2765, column: 52)
!7090 = !DILocation(line: 2770, column: 8, scope: !7089)
!7091 = !DILocation(line: 2770, column: 18, scope: !7089)
!7092 = !DILocation(line: 2771, column: 10, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7089, file: !512, line: 2771, column: 7)
!7094 = !DILocation(line: 2771, column: 19, scope: !7093)
!7095 = !DILocation(line: 2771, column: 7, scope: !7093)
!7096 = !DILocation(line: 2771, column: 12, scope: !7097)
!7097 = !DILexicalBlockFile(scope: !7093, file: !512, discriminator: 1)
!7098 = !DILocation(line: 2771, column: 22, scope: !7097)
!7099 = !DILocation(line: 2771, column: 27, scope: !7097)
!7100 = !DILocation(line: 2771, column: 7, scope: !7097)
!7101 = !DILocation(line: 2771, column: 11, scope: !7102)
!7102 = !DILexicalBlockFile(scope: !7093, file: !512, discriminator: 2)
!7103 = !DILocation(line: 2771, column: 21, scope: !7102)
!7104 = !DILocation(line: 2771, column: 26, scope: !7102)
!7105 = !DILocation(line: 2771, column: 7, scope: !7102)
!7106 = !DILocation(line: 2772, column: 16, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !512, line: 2772, column: 4)
!7108 = distinct !DILexicalBlock(scope: !7093, file: !512, line: 2771, column: 11)
!7109 = !DILocation(line: 2772, column: 15, scope: !7107)
!7110 = !DILocation(line: 2772, column: 14, scope: !7107)
!7111 = !DILocation(line: 2772, column: 14, scope: !7112)
!7112 = !DILexicalBlockFile(scope: !7107, file: !512, discriminator: 1)
!7113 = !DILocation(line: 2772, column: 15, scope: !7114)
!7114 = !DILexicalBlockFile(scope: !7107, file: !512, discriminator: 2)
!7115 = !DILocation(line: 2772, column: 25, scope: !7114)
!7116 = !DILocation(line: 2772, column: 14, scope: !7114)
!7117 = !DILocation(line: 2772, column: 14, scope: !7118)
!7118 = !DILexicalBlockFile(scope: !7107, file: !512, discriminator: 3)
!7119 = !DILocation(line: 2772, column: 11, scope: !7118)
!7120 = !DILocation(line: 2772, column: 9, scope: !7118)
!7121 = !DILocation(line: 2772, column: 32, scope: !7122)
!7122 = !DILexicalBlockFile(scope: !7123, file: !512, discriminator: 4)
!7123 = distinct !DILexicalBlock(scope: !7107, file: !512, line: 2772, column: 4)
!7124 = !DILocation(line: 2772, column: 4, scope: !7122)
!7125 = !DILocation(line: 2773, column: 13, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7123, file: !512, line: 2772, column: 54)
!7127 = !DILocation(line: 2773, column: 17, scope: !7126)
!7128 = !DILocation(line: 2773, column: 11, scope: !7126)
!7129 = !DILocation(line: 2773, column: 9, scope: !7126)
!7130 = !DILocation(line: 2775, column: 9, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7126, file: !512, line: 2775, column: 9)
!7132 = !DILocation(line: 2775, column: 14, scope: !7131)
!7133 = !DILocation(line: 2775, column: 19, scope: !7131)
!7134 = !DILocation(line: 2776, column: 17, scope: !7131)
!7135 = !DILocation(line: 2776, column: 22, scope: !7131)
!7136 = !DILocation(line: 2776, column: 10, scope: !7131)
!7137 = !DILocation(line: 2776, column: 61, scope: !7131)
!7138 = !DILocation(line: 2777, column: 11, scope: !7131)
!7139 = !DILocation(line: 2777, column: 17, scope: !7131)
!7140 = !DILocation(line: 2777, column: 24, scope: !7131)
!7141 = !DILocation(line: 2777, column: 34, scope: !7131)
!7142 = !DILocation(line: 2777, column: 37, scope: !7143)
!7143 = !DILexicalBlockFile(scope: !7131, file: !512, discriminator: 1)
!7144 = !DILocation(line: 2777, column: 42, scope: !7143)
!7145 = !DILocation(line: 2777, column: 71, scope: !7143)
!7146 = !DILocation(line: 2777, column: 80, scope: !7143)
!7147 = !DILocation(line: 2778, column: 11, scope: !7131)
!7148 = !DILocation(line: 2778, column: 17, scope: !7131)
!7149 = !DILocation(line: 2778, column: 24, scope: !7131)
!7150 = !DILocation(line: 2778, column: 35, scope: !7131)
!7151 = !DILocation(line: 2778, column: 38, scope: !7143)
!7152 = !DILocation(line: 2778, column: 43, scope: !7143)
!7153 = !DILocation(line: 2778, column: 72, scope: !7143)
!7154 = !DILocation(line: 2778, column: 82, scope: !7143)
!7155 = !DILocation(line: 2779, column: 9, scope: !7131)
!7156 = !DILocation(line: 2779, column: 14, scope: !7131)
!7157 = !DILocation(line: 2779, column: 46, scope: !7131)
!7158 = !DILocation(line: 2779, column: 52, scope: !7131)
!7159 = !DILocation(line: 2779, column: 43, scope: !7131)
!7160 = !DILocation(line: 2779, column: 57, scope: !7131)
!7161 = !DILocation(line: 2780, column: 9, scope: !7131)
!7162 = !DILocation(line: 2780, column: 14, scope: !7131)
!7163 = !DILocation(line: 2780, column: 26, scope: !7131)
!7164 = !DILocation(line: 2780, column: 32, scope: !7131)
!7165 = !DILocation(line: 2780, column: 23, scope: !7131)
!7166 = !DILocation(line: 2775, column: 9, scope: !7167)
!7167 = !DILexicalBlockFile(scope: !7126, file: !512, discriminator: 1)
!7168 = !DILocation(line: 2782, column: 63, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7131, file: !512, line: 2781, column: 5)
!7170 = !DILocation(line: 2782, column: 69, scope: !7169)
!7171 = !DILocation(line: 2782, column: 76, scope: !7169)
!7172 = !DILocation(line: 2782, column: 81, scope: !7169)
!7173 = !DILocation(line: 2782, column: 6, scope: !7169)
!7174 = !DILocation(line: 2783, column: 10, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7169, file: !512, line: 2783, column: 10)
!7176 = !DILocation(line: 2783, column: 16, scope: !7175)
!7177 = !DILocation(line: 2783, column: 31, scope: !7175)
!7178 = !DILocation(line: 2784, column: 17, scope: !7175)
!7179 = !DILocation(line: 2784, column: 23, scope: !7175)
!7180 = !DILocation(line: 2784, column: 36, scope: !7175)
!7181 = !DILocation(line: 2784, column: 41, scope: !7175)
!7182 = !DILocation(line: 2784, column: 10, scope: !7175)
!7183 = !DILocation(line: 2783, column: 10, scope: !7184)
!7184 = !DILexicalBlockFile(scope: !7169, file: !512, discriminator: 1)
!7185 = !DILocation(line: 2785, column: 82, scope: !7175)
!7186 = !DILocation(line: 2785, column: 88, scope: !7175)
!7187 = !DILocation(line: 2785, column: 95, scope: !7175)
!7188 = !DILocation(line: 2785, column: 101, scope: !7175)
!7189 = !DILocation(line: 2785, column: 114, scope: !7175)
!7190 = !DILocation(line: 2785, column: 119, scope: !7175)
!7191 = !DILocation(line: 2785, column: 127, scope: !7175)
!7192 = !DILocation(line: 2785, column: 132, scope: !7175)
!7193 = !DILocation(line: 2785, column: 7, scope: !7175)
!7194 = !DILocation(line: 2787, column: 13, scope: !7169)
!7195 = !DILocation(line: 2787, column: 19, scope: !7169)
!7196 = !DILocation(line: 2787, column: 32, scope: !7169)
!7197 = !DILocation(line: 2787, column: 37, scope: !7169)
!7198 = !DILocation(line: 2787, column: 6, scope: !7169)
!7199 = !DILocation(line: 2788, column: 18, scope: !7169)
!7200 = !DILocation(line: 2788, column: 6, scope: !7169)
!7201 = !DILocation(line: 2788, column: 12, scope: !7169)
!7202 = !DILocation(line: 2788, column: 16, scope: !7169)
!7203 = !DILocation(line: 2789, column: 35, scope: !7169)
!7204 = !DILocation(line: 2789, column: 41, scope: !7169)
!7205 = !DILocation(line: 2789, column: 6, scope: !7169)
!7206 = !DILocation(line: 2792, column: 32, scope: !7169)
!7207 = !DILocation(line: 2794, column: 6, scope: !7169)
!7208 = !DILocation(line: 2796, column: 4, scope: !7126)
!7209 = !DILocation(line: 2772, column: 43, scope: !7210)
!7210 = !DILexicalBlockFile(scope: !7123, file: !512, discriminator: 5)
!7211 = !DILocation(line: 2772, column: 47, scope: !7210)
!7212 = !DILocation(line: 2772, column: 40, scope: !7210)
!7213 = !DILocation(line: 2772, column: 4, scope: !7210)
!7214 = distinct !{!7214, !7215}
!7215 = !DILocation(line: 2772, column: 4, scope: !7108)
!7216 = !DILocation(line: 2798, column: 9, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7108, file: !512, line: 2798, column: 8)
!7218 = !DILocation(line: 2798, column: 35, scope: !7217)
!7219 = !DILocation(line: 2799, column: 8, scope: !7217)
!7220 = !DILocation(line: 2799, column: 14, scope: !7217)
!7221 = !DILocation(line: 2799, column: 29, scope: !7217)
!7222 = !DILocation(line: 2800, column: 32, scope: !7217)
!7223 = !DILocation(line: 2800, column: 38, scope: !7217)
!7224 = !DILocation(line: 2800, column: 15, scope: !7217)
!7225 = !DILocation(line: 2800, column: 13, scope: !7217)
!7226 = !DILocation(line: 2800, column: 66, scope: !7217)
!7227 = !DILocation(line: 2801, column: 9, scope: !7217)
!7228 = !DILocation(line: 2801, column: 14, scope: !7217)
!7229 = !DILocation(line: 2798, column: 8, scope: !7230)
!7230 = !DILexicalBlockFile(scope: !7108, file: !512, discriminator: 1)
!7231 = !DILocation(line: 2803, column: 9, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !512, line: 2803, column: 9)
!7233 = distinct !DILexicalBlock(scope: !7217, file: !512, line: 2801, column: 23)
!7234 = !DILocation(line: 2803, column: 14, scope: !7232)
!7235 = !DILocation(line: 2803, column: 9, scope: !7233)
!7236 = !DILocation(line: 2804, column: 98, scope: !7232)
!7237 = !DILocation(line: 2804, column: 104, scope: !7232)
!7238 = !DILocation(line: 2804, column: 111, scope: !7232)
!7239 = !DILocation(line: 2804, column: 117, scope: !7232)
!7240 = !DILocation(line: 2804, column: 6, scope: !7232)
!7241 = !DILocation(line: 2807, column: 11, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7232, file: !512, line: 2805, column: 10)
!7243 = !DILocation(line: 2807, column: 17, scope: !7242)
!7244 = !DILocation(line: 2807, column: 24, scope: !7242)
!7245 = !DILocation(line: 2807, column: 30, scope: !7242)
!7246 = !DILocation(line: 2806, column: 6, scope: !7242)
!7247 = !DILocation(line: 2808, column: 6, scope: !7242)
!7248 = !DILocation(line: 2808, column: 12, scope: !7242)
!7249 = !DILocation(line: 2808, column: 27, scope: !7242)
!7250 = !DILocation(line: 2810, column: 4, scope: !7233)
!7251 = !DILocation(line: 2811, column: 3, scope: !7108)
!7252 = !DILocation(line: 2814, column: 8, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7089, file: !512, line: 2814, column: 7)
!7254 = !DILocation(line: 2814, column: 14, scope: !7253)
!7255 = !DILocation(line: 2814, column: 7, scope: !7089)
!7256 = !DILocalVariable(name: "num", scope: !7257, file: !512, line: 2815, type: !197)
!7257 = distinct !DILexicalBlock(scope: !7253, file: !512, line: 2814, column: 30)
!7258 = !DILocation(line: 2815, column: 19, scope: !7257)
!7259 = !DILocation(line: 2816, column: 13, scope: !7257)
!7260 = !DILocation(line: 2816, column: 41, scope: !7257)
!7261 = !DILocation(line: 2816, column: 47, scope: !7257)
!7262 = !DILocation(line: 2816, column: 4, scope: !7257)
!7263 = !DILocation(line: 2818, column: 4, scope: !7257)
!7264 = !DILocation(line: 2824, column: 10, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !512, line: 2824, column: 9)
!7266 = distinct !DILexicalBlock(scope: !7257, file: !512, line: 2818, column: 16)
!7267 = !DILocation(line: 2824, column: 12, scope: !7265)
!7268 = !DILocation(line: 2824, column: 41, scope: !7269)
!7269 = !DILexicalBlockFile(scope: !7265, file: !512, discriminator: 1)
!7270 = !DILocation(line: 2824, column: 24, scope: !7269)
!7271 = !DILocation(line: 2824, column: 22, scope: !7269)
!7272 = !DILocation(line: 2824, column: 64, scope: !7269)
!7273 = !DILocation(line: 2824, column: 68, scope: !7274)
!7274 = !DILexicalBlockFile(scope: !7265, file: !512, discriminator: 2)
!7275 = !DILocation(line: 2824, column: 73, scope: !7274)
!7276 = !DILocation(line: 2824, column: 9, scope: !7274)
!7277 = !DILocation(line: 2825, column: 6, scope: !7265)
!7278 = !DILocation(line: 2828, column: 9, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7266, file: !512, line: 2828, column: 9)
!7280 = !DILocation(line: 2828, column: 15, scope: !7279)
!7281 = !DILocation(line: 2828, column: 22, scope: !7279)
!7282 = !DILocation(line: 2828, column: 9, scope: !7266)
!7283 = !DILocation(line: 2829, column: 10, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7285, file: !512, line: 2829, column: 10)
!7285 = distinct !DILexicalBlock(scope: !7279, file: !512, line: 2828, column: 34)
!7286 = !DILocation(line: 2829, column: 14, scope: !7284)
!7287 = !DILocation(line: 2829, column: 10, scope: !7285)
!7288 = !DILocation(line: 2830, column: 11, scope: !7284)
!7289 = !DILocation(line: 2830, column: 7, scope: !7284)
!7290 = !DILocation(line: 2831, column: 15, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7284, file: !512, line: 2831, column: 15)
!7292 = !DILocation(line: 2831, column: 19, scope: !7291)
!7293 = !DILocation(line: 2831, column: 15, scope: !7284)
!7294 = !DILocation(line: 2832, column: 11, scope: !7291)
!7295 = !DILocation(line: 2832, column: 7, scope: !7291)
!7296 = !DILocation(line: 2833, column: 15, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7291, file: !512, line: 2833, column: 15)
!7298 = !DILocation(line: 2833, column: 21, scope: !7297)
!7299 = !DILocation(line: 2833, column: 15, scope: !7291)
!7300 = !DILocation(line: 2834, column: 10, scope: !7297)
!7301 = !DILocation(line: 2834, column: 7, scope: !7297)
!7302 = !DILocation(line: 2835, column: 5, scope: !7285)
!7303 = !DILocation(line: 2837, column: 9, scope: !7279)
!7304 = !DILocation(line: 2839, column: 14, scope: !7266)
!7305 = !DILocation(line: 2839, column: 44, scope: !7266)
!7306 = !DILocation(line: 2839, column: 49, scope: !7266)
!7307 = !DILocation(line: 2839, column: 55, scope: !7266)
!7308 = !DILocation(line: 2839, column: 5, scope: !7266)
!7309 = !DILocation(line: 2818, column: 4, scope: !7310)
!7310 = !DILexicalBlockFile(scope: !7257, file: !512, discriminator: 1)
!7311 = distinct !{!7311, !7263}
!7312 = !DILocation(line: 2843, column: 12, scope: !7257)
!7313 = !DILocation(line: 2843, column: 18, scope: !7257)
!7314 = !DILocation(line: 2843, column: 31, scope: !7257)
!7315 = !DILocation(line: 2843, column: 4, scope: !7257)
!7316 = !DILocation(line: 2844, column: 3, scope: !7257)
!7317 = !DILocation(line: 2846, column: 8, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7089, file: !512, line: 2846, column: 7)
!7319 = !DILocation(line: 2846, column: 7, scope: !7089)
!7320 = !DILocation(line: 2847, column: 27, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7318, file: !512, line: 2846, column: 35)
!7322 = !DILocation(line: 2847, column: 33, scope: !7321)
!7323 = !DILocation(line: 2847, column: 10, scope: !7321)
!7324 = !DILocation(line: 2847, column: 8, scope: !7321)
!7325 = !DILocation(line: 2848, column: 20, scope: !7321)
!7326 = !DILocation(line: 2848, column: 26, scope: !7321)
!7327 = !DILocation(line: 2848, column: 4, scope: !7321)
!7328 = !DILocation(line: 2848, column: 9, scope: !7321)
!7329 = !DILocation(line: 2848, column: 18, scope: !7321)
!7330 = !DILocation(line: 2849, column: 16, scope: !7321)
!7331 = !DILocation(line: 2849, column: 4, scope: !7321)
!7332 = !DILocation(line: 2849, column: 10, scope: !7321)
!7333 = !DILocation(line: 2849, column: 14, scope: !7321)
!7334 = !DILocation(line: 2850, column: 3, scope: !7321)
!7335 = !DILocation(line: 2852, column: 7, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7089, file: !512, line: 2852, column: 7)
!7337 = !DILocation(line: 2852, column: 13, scope: !7336)
!7338 = !DILocation(line: 2852, column: 25, scope: !7336)
!7339 = !DILocation(line: 2852, column: 64, scope: !7340)
!7340 = !DILexicalBlockFile(scope: !7336, file: !512, discriminator: 1)
!7341 = !DILocation(line: 2852, column: 70, scope: !7340)
!7342 = !DILocation(line: 2852, column: 28, scope: !7340)
!7343 = !DILocation(line: 2852, column: 7, scope: !7340)
!7344 = !DILocation(line: 2853, column: 109, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7336, file: !512, line: 2852, column: 83)
!7346 = !DILocation(line: 2853, column: 115, scope: !7345)
!7347 = !DILocation(line: 2853, column: 4, scope: !7345)
!7348 = !DILocation(line: 2854, column: 41, scope: !7345)
!7349 = !DILocation(line: 2854, column: 47, scope: !7345)
!7350 = !DILocation(line: 2854, column: 4, scope: !7345)
!7351 = !DILocation(line: 2855, column: 3, scope: !7345)
!7352 = !DILocation(line: 2857, column: 7, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7089, file: !512, line: 2857, column: 7)
!7354 = !DILocation(line: 2857, column: 13, scope: !7353)
!7355 = !DILocation(line: 2857, column: 7, scope: !7089)
!7356 = !DILocation(line: 2858, column: 116, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7353, file: !512, line: 2857, column: 34)
!7358 = !DILocation(line: 2858, column: 122, scope: !7357)
!7359 = !DILocation(line: 2858, column: 4, scope: !7357)
!7360 = !DILocation(line: 2859, column: 4, scope: !7357)
!7361 = !DILocation(line: 2859, column: 10, scope: !7357)
!7362 = !DILocation(line: 2859, column: 30, scope: !7357)
!7363 = !DILocation(line: 2860, column: 3, scope: !7357)
!7364 = !DILocation(line: 2861, column: 2, scope: !7089)
!7365 = !DILocation(line: 2867, column: 29, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7084, file: !512, line: 2864, column: 2)
!7367 = !DILocation(line: 2871, column: 6, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2871, column: 6)
!7369 = !DILocation(line: 2871, column: 12, scope: !7368)
!7370 = !DILocation(line: 2871, column: 17, scope: !7368)
!7371 = !DILocation(line: 2871, column: 27, scope: !7368)
!7372 = !DILocation(line: 2871, column: 35, scope: !7368)
!7373 = !DILocation(line: 2871, column: 38, scope: !7374)
!7374 = !DILexicalBlockFile(scope: !7368, file: !512, discriminator: 1)
!7375 = !DILocation(line: 2871, column: 44, scope: !7374)
!7376 = !DILocation(line: 2871, column: 50, scope: !7374)
!7377 = !DILocation(line: 2871, column: 60, scope: !7374)
!7378 = !DILocation(line: 2871, column: 6, scope: !7374)
!7379 = !DILocalVariable(name: "addr_missing", scope: !7380, file: !512, line: 2875, type: !350)
!7380 = distinct !DILexicalBlock(scope: !7368, file: !512, line: 2871, column: 73)
!7381 = !DILocation(line: 2875, column: 7, scope: !7380)
!7382 = !DILocation(line: 2877, column: 7, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7380, file: !512, line: 2877, column: 7)
!7384 = !DILocation(line: 2877, column: 13, scope: !7383)
!7385 = !DILocation(line: 2877, column: 20, scope: !7383)
!7386 = !DILocation(line: 2877, column: 7, scope: !7380)
!7387 = !DILocation(line: 2878, column: 11, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7389, file: !512, line: 2878, column: 8)
!7389 = distinct !DILexicalBlock(scope: !7383, file: !512, line: 2877, column: 31)
!7390 = !DILocation(line: 2878, column: 17, scope: !7388)
!7391 = !DILocation(line: 2878, column: 23, scope: !7388)
!7392 = !DILocation(line: 2878, column: 34, scope: !7388)
!7393 = !DILocation(line: 2878, column: 43, scope: !7388)
!7394 = !DILocation(line: 2878, column: 9, scope: !7388)
!7395 = !DILocation(line: 2878, column: 8, scope: !7389)
!7396 = !DILocation(line: 2879, column: 18, scope: !7388)
!7397 = !DILocation(line: 2879, column: 5, scope: !7388)
!7398 = !DILocation(line: 2880, column: 3, scope: !7389)
!7399 = !DILocation(line: 2883, column: 36, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !512, line: 2883, column: 8)
!7401 = distinct !DILexicalBlock(scope: !7383, file: !512, line: 2881, column: 8)
!7402 = !DILocation(line: 2883, column: 42, scope: !7400)
!7403 = !DILocation(line: 2883, column: 9, scope: !7400)
!7404 = !DILocation(line: 2883, column: 8, scope: !7401)
!7405 = !DILocation(line: 2885, column: 12, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7400, file: !512, line: 2885, column: 9)
!7407 = !DILocation(line: 2885, column: 18, scope: !7406)
!7408 = !DILocation(line: 2885, column: 24, scope: !7406)
!7409 = !DILocation(line: 2885, column: 35, scope: !7406)
!7410 = !DILocation(line: 2885, column: 43, scope: !7406)
!7411 = !DILocation(line: 2885, column: 51, scope: !7406)
!7412 = !DILocation(line: 2885, column: 10, scope: !7406)
!7413 = !DILocation(line: 2885, column: 9, scope: !7400)
!7414 = !DILocation(line: 2886, column: 19, scope: !7406)
!7415 = !DILocation(line: 2886, column: 6, scope: !7406)
!7416 = !DILocation(line: 2885, column: 54, scope: !7417)
!7417 = !DILexicalBlockFile(scope: !7406, file: !512, discriminator: 1)
!7418 = !DILocation(line: 2889, column: 7, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7380, file: !512, line: 2889, column: 7)
!7420 = !DILocation(line: 2889, column: 7, scope: !7380)
!7421 = !DILocation(line: 2890, column: 104, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7419, file: !512, line: 2889, column: 21)
!7423 = !DILocation(line: 2890, column: 110, scope: !7422)
!7424 = !DILocation(line: 2890, column: 119, scope: !7422)
!7425 = !DILocation(line: 2890, column: 125, scope: !7422)
!7426 = !DILocation(line: 2890, column: 131, scope: !7422)
!7427 = !DILocation(line: 2890, column: 142, scope: !7422)
!7428 = !DILocation(line: 2890, column: 117, scope: !7422)
!7429 = !DILocation(line: 2890, column: 4, scope: !7422)
!7430 = !DILocation(line: 2891, column: 3, scope: !7422)
!7431 = !DILocation(line: 2892, column: 12, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7419, file: !512, line: 2892, column: 12)
!7433 = !DILocation(line: 2892, column: 18, scope: !7432)
!7434 = !DILocation(line: 2892, column: 25, scope: !7432)
!7435 = !DILocation(line: 2892, column: 12, scope: !7419)
!7436 = !DILocation(line: 2893, column: 26, scope: !7432)
!7437 = !DILocation(line: 2893, column: 32, scope: !7432)
!7438 = !DILocation(line: 2893, column: 38, scope: !7432)
!7439 = !DILocation(line: 2893, column: 49, scope: !7432)
!7440 = !DILocation(line: 2893, column: 60, scope: !7432)
!7441 = !DILocation(line: 2893, column: 66, scope: !7432)
!7442 = !DILocation(line: 2893, column: 4, scope: !7432)
!7443 = !DILocation(line: 2894, column: 12, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7432, file: !512, line: 2894, column: 12)
!7445 = !DILocation(line: 2894, column: 18, scope: !7444)
!7446 = !DILocation(line: 2894, column: 25, scope: !7444)
!7447 = !DILocation(line: 2894, column: 12, scope: !7432)
!7448 = !DILocation(line: 2895, column: 26, scope: !7444)
!7449 = !DILocation(line: 2895, column: 32, scope: !7444)
!7450 = !DILocation(line: 2895, column: 38, scope: !7444)
!7451 = !DILocation(line: 2895, column: 49, scope: !7444)
!7452 = !DILocation(line: 2895, column: 61, scope: !7444)
!7453 = !DILocation(line: 2895, column: 67, scope: !7444)
!7454 = !DILocation(line: 2895, column: 4, scope: !7444)
!7455 = !DILocation(line: 2896, column: 2, scope: !7380)
!7456 = !DILocation(line: 2899, column: 15, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2899, column: 2)
!7458 = !DILocation(line: 2899, column: 21, scope: !7457)
!7459 = !DILocation(line: 2899, column: 14, scope: !7457)
!7460 = !DILocation(line: 2899, column: 37, scope: !7461)
!7461 = !DILexicalBlockFile(scope: !7457, file: !512, discriminator: 1)
!7462 = !DILocation(line: 2899, column: 43, scope: !7461)
!7463 = !DILocation(line: 2899, column: 36, scope: !7461)
!7464 = !DILocation(line: 2899, column: 35, scope: !7461)
!7465 = !DILocation(line: 2899, column: 35, scope: !7466)
!7466 = !DILexicalBlockFile(scope: !7457, file: !512, discriminator: 2)
!7467 = !DILocation(line: 2899, column: 4, scope: !7468)
!7468 = !DILexicalBlockFile(scope: !7457, file: !512, discriminator: 3)
!7469 = !DILocation(line: 2899, column: 10, scope: !7468)
!7470 = !DILocation(line: 2899, column: 22, scope: !7468)
!7471 = !DILocation(line: 2899, column: 35, scope: !7468)
!7472 = !DILocation(line: 2899, column: 35, scope: !7473)
!7473 = !DILexicalBlockFile(scope: !7457, file: !512, discriminator: 4)
!7474 = !DILocation(line: 2899, column: 14, scope: !7473)
!7475 = !DILocation(line: 2899, column: 14, scope: !7476)
!7476 = !DILexicalBlockFile(scope: !7457, file: !512, discriminator: 5)
!7477 = !DILocation(line: 2899, column: 14, scope: !7478)
!7478 = !DILexicalBlockFile(scope: !7457, file: !512, discriminator: 6)
!7479 = !DILocation(line: 2899, column: 11, scope: !7478)
!7480 = !DILocation(line: 2899, column: 7, scope: !7478)
!7481 = !DILocation(line: 2899, column: 5, scope: !7482)
!7482 = !DILexicalBlockFile(scope: !7483, file: !512, discriminator: 7)
!7483 = distinct !DILexicalBlock(scope: !7457, file: !512, line: 2899, column: 2)
!7484 = !DILocation(line: 2899, column: 4, scope: !7482)
!7485 = !DILocation(line: 2899, column: 8, scope: !7482)
!7486 = !DILocation(line: 2899, column: 22, scope: !7487)
!7487 = !DILexicalBlockFile(scope: !7483, file: !512, discriminator: 8)
!7488 = !DILocation(line: 2899, column: 26, scope: !7487)
!7489 = !DILocation(line: 2899, column: 19, scope: !7487)
!7490 = !DILocation(line: 2899, column: 42, scope: !7487)
!7491 = !DILocation(line: 2899, column: 46, scope: !7487)
!7492 = !DILocation(line: 2899, column: 40, scope: !7487)
!7493 = !DILocation(line: 2899, column: 38, scope: !7487)
!7494 = !DILocation(line: 2899, column: 2, scope: !7495)
!7495 = !DILexicalBlockFile(scope: !7457, file: !512, discriminator: 9)
!7496 = !DILocation(line: 2901, column: 7, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !512, line: 2901, column: 7)
!7498 = distinct !DILexicalBlock(scope: !7483, file: !512, line: 2899, column: 71)
!7499 = !DILocation(line: 2901, column: 12, scope: !7497)
!7500 = !DILocation(line: 2901, column: 21, scope: !7497)
!7501 = !DILocation(line: 2901, column: 27, scope: !7497)
!7502 = !DILocation(line: 2901, column: 33, scope: !7497)
!7503 = !DILocation(line: 2901, column: 16, scope: !7497)
!7504 = !DILocation(line: 2901, column: 7, scope: !7498)
!7505 = !DILocation(line: 2902, column: 102, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7497, file: !512, line: 2901, column: 44)
!7507 = !DILocation(line: 2902, column: 108, scope: !7506)
!7508 = !DILocation(line: 2902, column: 117, scope: !7506)
!7509 = !DILocation(line: 2902, column: 123, scope: !7506)
!7510 = !DILocation(line: 2902, column: 129, scope: !7506)
!7511 = !DILocation(line: 2902, column: 140, scope: !7506)
!7512 = !DILocation(line: 2902, column: 115, scope: !7506)
!7513 = !DILocation(line: 2902, column: 4, scope: !7506)
!7514 = !DILocation(line: 2903, column: 22, scope: !7506)
!7515 = !DILocation(line: 2903, column: 28, scope: !7506)
!7516 = !DILocation(line: 2903, column: 39, scope: !7506)
!7517 = !DILocation(line: 2903, column: 4, scope: !7506)
!7518 = !DILocation(line: 2904, column: 3, scope: !7506)
!7519 = !DILocation(line: 2906, column: 26, scope: !7497)
!7520 = !DILocation(line: 2906, column: 32, scope: !7497)
!7521 = !DILocation(line: 2906, column: 37, scope: !7497)
!7522 = !DILocation(line: 2906, column: 42, scope: !7497)
!7523 = !DILocation(line: 2906, column: 47, scope: !7497)
!7524 = !DILocation(line: 2906, column: 4, scope: !7497)
!7525 = !DILocation(line: 2907, column: 2, scope: !7498)
!7526 = !DILocation(line: 2899, column: 64, scope: !7527)
!7527 = !DILexicalBlockFile(scope: !7483, file: !512, discriminator: 10)
!7528 = !DILocation(line: 2899, column: 61, scope: !7527)
!7529 = !DILocation(line: 2899, column: 2, scope: !7527)
!7530 = distinct !{!7530, !7531}
!7531 = !DILocation(line: 2899, column: 2, scope: !5871)
!7532 = !DILocation(line: 2910, column: 24, scope: !5871)
!7533 = !DILocation(line: 2910, column: 32, scope: !5871)
!7534 = !DILocation(line: 2910, column: 38, scope: !5871)
!7535 = !DILocation(line: 2910, column: 44, scope: !5871)
!7536 = !DILocation(line: 2910, column: 55, scope: !5871)
!7537 = !DILocation(line: 2910, column: 61, scope: !5871)
!7538 = !DILocation(line: 2910, column: 2, scope: !5871)
!7539 = !DILocation(line: 2913, column: 42, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2913, column: 6)
!7541 = !DILocation(line: 2913, column: 48, scope: !7540)
!7542 = !DILocation(line: 2913, column: 6, scope: !7540)
!7543 = !DILocation(line: 2913, column: 60, scope: !7540)
!7544 = !DILocation(line: 2914, column: 34, scope: !7540)
!7545 = !DILocation(line: 2914, column: 40, scope: !7540)
!7546 = !DILocation(line: 2914, column: 7, scope: !7540)
!7547 = !DILocation(line: 2913, column: 6, scope: !6446)
!7548 = !DILocation(line: 2915, column: 94, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7540, file: !512, line: 2914, column: 53)
!7550 = !DILocation(line: 2915, column: 100, scope: !7549)
!7551 = !DILocation(line: 2915, column: 3, scope: !7549)
!7552 = !DILocation(line: 2916, column: 40, scope: !7549)
!7553 = !DILocation(line: 2916, column: 46, scope: !7549)
!7554 = !DILocation(line: 2916, column: 3, scope: !7549)
!7555 = !DILocation(line: 2917, column: 2, scope: !7549)
!7556 = !DILocation(line: 2919, column: 33, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2919, column: 6)
!7558 = !DILocation(line: 2919, column: 39, scope: !7557)
!7559 = !DILocation(line: 2919, column: 6, scope: !7557)
!7560 = !DILocation(line: 2919, column: 6, scope: !5871)
!7561 = !DILocation(line: 2922, column: 7, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !512, line: 2922, column: 7)
!7563 = distinct !DILexicalBlock(scope: !7557, file: !512, line: 2920, column: 2)
!7564 = !DILocation(line: 2922, column: 13, scope: !7562)
!7565 = !DILocation(line: 2922, column: 20, scope: !7562)
!7566 = !DILocation(line: 2922, column: 30, scope: !7562)
!7567 = !DILocation(line: 2922, column: 36, scope: !7568)
!7568 = !DILexicalBlockFile(scope: !7562, file: !512, discriminator: 1)
!7569 = !DILocation(line: 2922, column: 42, scope: !7568)
!7570 = !DILocation(line: 2922, column: 48, scope: !7568)
!7571 = !DILocation(line: 2922, column: 34, scope: !7568)
!7572 = !DILocation(line: 2922, column: 39, scope: !7573)
!7573 = !DILexicalBlockFile(scope: !7562, file: !512, discriminator: 2)
!7574 = !DILocation(line: 2922, column: 45, scope: !7573)
!7575 = !DILocation(line: 2922, column: 52, scope: !7573)
!7576 = !DILocation(line: 2922, column: 57, scope: !7573)
!7577 = !DILocation(line: 2922, column: 34, scope: !7573)
!7578 = !DILocation(line: 2922, column: 38, scope: !7579)
!7579 = !DILexicalBlockFile(scope: !7562, file: !512, discriminator: 3)
!7580 = !DILocation(line: 2922, column: 44, scope: !7579)
!7581 = !DILocation(line: 2922, column: 51, scope: !7579)
!7582 = !DILocation(line: 2922, column: 56, scope: !7579)
!7583 = !DILocation(line: 2922, column: 7, scope: !7579)
!7584 = !DILocation(line: 2923, column: 16, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7586, file: !512, line: 2923, column: 4)
!7586 = distinct !DILexicalBlock(scope: !7562, file: !512, line: 2922, column: 38)
!7587 = !DILocation(line: 2923, column: 22, scope: !7585)
!7588 = !DILocation(line: 2923, column: 15, scope: !7585)
!7589 = !DILocation(line: 2923, column: 14, scope: !7585)
!7590 = !DILocation(line: 2923, column: 14, scope: !7591)
!7591 = !DILexicalBlockFile(scope: !7585, file: !512, discriminator: 1)
!7592 = !DILocation(line: 2923, column: 15, scope: !7593)
!7593 = !DILexicalBlockFile(scope: !7585, file: !512, discriminator: 2)
!7594 = !DILocation(line: 2923, column: 21, scope: !7593)
!7595 = !DILocation(line: 2923, column: 28, scope: !7593)
!7596 = !DILocation(line: 2923, column: 14, scope: !7593)
!7597 = !DILocation(line: 2923, column: 14, scope: !7598)
!7598 = !DILexicalBlockFile(scope: !7585, file: !512, discriminator: 3)
!7599 = !DILocation(line: 2923, column: 11, scope: !7598)
!7600 = !DILocation(line: 2923, column: 9, scope: !7598)
!7601 = !DILocation(line: 2923, column: 35, scope: !7602)
!7602 = !DILexicalBlockFile(scope: !7603, file: !512, discriminator: 4)
!7603 = distinct !DILexicalBlock(scope: !7585, file: !512, line: 2923, column: 4)
!7604 = !DILocation(line: 2923, column: 4, scope: !7602)
!7605 = !DILocation(line: 2924, column: 13, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7603, file: !512, line: 2923, column: 57)
!7607 = !DILocation(line: 2924, column: 17, scope: !7606)
!7608 = !DILocation(line: 2924, column: 11, scope: !7606)
!7609 = !DILocation(line: 2924, column: 9, scope: !7606)
!7610 = !DILocation(line: 2925, column: 9, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7606, file: !512, line: 2925, column: 9)
!7612 = !DILocation(line: 2925, column: 14, scope: !7611)
!7613 = !DILocation(line: 2925, column: 18, scope: !7611)
!7614 = !DILocation(line: 2925, column: 29, scope: !7611)
!7615 = !DILocation(line: 2925, column: 9, scope: !7606)
!7616 = !DILocation(line: 2926, column: 6, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7611, file: !512, line: 2925, column: 41)
!7618 = !DILocation(line: 2926, column: 12, scope: !7617)
!7619 = !DILocation(line: 2926, column: 26, scope: !7617)
!7620 = !DILocation(line: 2927, column: 6, scope: !7617)
!7621 = !DILocation(line: 2929, column: 4, scope: !7606)
!7622 = !DILocation(line: 2923, column: 46, scope: !7623)
!7623 = !DILexicalBlockFile(scope: !7603, file: !512, discriminator: 5)
!7624 = !DILocation(line: 2923, column: 50, scope: !7623)
!7625 = !DILocation(line: 2923, column: 43, scope: !7623)
!7626 = !DILocation(line: 2923, column: 4, scope: !7623)
!7627 = distinct !{!7627, !7628}
!7628 = !DILocation(line: 2923, column: 4, scope: !7586)
!7629 = !DILocation(line: 2930, column: 3, scope: !7586)
!7630 = !DILocation(line: 2934, column: 7, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7563, file: !512, line: 2934, column: 7)
!7632 = !DILocation(line: 2934, column: 13, scope: !7631)
!7633 = !DILocation(line: 2934, column: 18, scope: !7631)
!7634 = !DILocation(line: 2934, column: 28, scope: !7631)
!7635 = !DILocation(line: 2934, column: 36, scope: !7631)
!7636 = !DILocation(line: 2935, column: 38, scope: !7631)
!7637 = !DILocation(line: 2935, column: 44, scope: !7631)
!7638 = !DILocation(line: 2935, column: 8, scope: !7631)
!7639 = !DILocation(line: 2935, column: 56, scope: !7631)
!7640 = !DILocation(line: 2936, column: 8, scope: !7631)
!7641 = !DILocation(line: 2934, column: 7, scope: !7642)
!7642 = !DILexicalBlockFile(scope: !7563, file: !512, discriminator: 1)
!7643 = !DILocation(line: 2937, column: 26, scope: !7631)
!7644 = !DILocation(line: 2937, column: 4, scope: !7631)
!7645 = !DILocation(line: 2940, column: 25, scope: !7563)
!7646 = !DILocation(line: 2940, column: 31, scope: !7563)
!7647 = !DILocation(line: 2940, column: 37, scope: !7563)
!7648 = !DILocation(line: 2940, column: 42, scope: !7563)
!7649 = !DILocation(line: 2940, column: 48, scope: !7563)
!7650 = !DILocation(line: 2940, column: 3, scope: !7563)
!7651 = !DILocation(line: 2941, column: 2, scope: !7563)
!7652 = !DILocation(line: 2946, column: 6, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2946, column: 6)
!7654 = !DILocation(line: 2946, column: 12, scope: !7653)
!7655 = !DILocation(line: 2946, column: 26, scope: !7653)
!7656 = !DILocation(line: 2946, column: 33, scope: !7653)
!7657 = !DILocation(line: 2946, column: 37, scope: !7658)
!7658 = !DILexicalBlockFile(scope: !7653, file: !512, discriminator: 1)
!7659 = !DILocation(line: 2946, column: 43, scope: !7658)
!7660 = !DILocation(line: 2946, column: 6, scope: !7658)
!7661 = !DILocation(line: 2949, column: 8, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !512, line: 2949, column: 7)
!7663 = distinct !DILexicalBlock(scope: !7653, file: !512, line: 2946, column: 51)
!7664 = !DILocation(line: 2949, column: 21, scope: !7662)
!7665 = !DILocation(line: 2949, column: 7, scope: !7663)
!7666 = !DILocation(line: 2950, column: 115, scope: !7662)
!7667 = !DILocation(line: 2950, column: 121, scope: !7662)
!7668 = !DILocation(line: 2950, column: 4, scope: !7662)
!7669 = !DILocation(line: 2951, column: 12, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7662, file: !512, line: 2951, column: 12)
!7671 = !DILocation(line: 2951, column: 18, scope: !7670)
!7672 = !DILocation(line: 2951, column: 25, scope: !7670)
!7673 = !DILocation(line: 2951, column: 12, scope: !7662)
!7674 = !DILocation(line: 2952, column: 15, scope: !7670)
!7675 = !DILocation(line: 2952, column: 4, scope: !7670)
!7676 = !DILocation(line: 2954, column: 15, scope: !7670)
!7677 = !DILocation(line: 2955, column: 2, scope: !7663)
!7678 = !DILocation(line: 2960, column: 15, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2960, column: 2)
!7680 = !DILocation(line: 2960, column: 21, scope: !7679)
!7681 = !DILocation(line: 2960, column: 14, scope: !7679)
!7682 = !DILocation(line: 2960, column: 31, scope: !7683)
!7683 = !DILexicalBlockFile(scope: !7679, file: !512, discriminator: 1)
!7684 = !DILocation(line: 2960, column: 37, scope: !7683)
!7685 = !DILocation(line: 2960, column: 30, scope: !7683)
!7686 = !DILocation(line: 2960, column: 29, scope: !7683)
!7687 = !DILocation(line: 2960, column: 29, scope: !7688)
!7688 = !DILexicalBlockFile(scope: !7679, file: !512, discriminator: 2)
!7689 = !DILocation(line: 2960, column: 4, scope: !7690)
!7690 = !DILexicalBlockFile(scope: !7679, file: !512, discriminator: 3)
!7691 = !DILocation(line: 2960, column: 10, scope: !7690)
!7692 = !DILocation(line: 2960, column: 16, scope: !7690)
!7693 = !DILocation(line: 2960, column: 29, scope: !7690)
!7694 = !DILocation(line: 2960, column: 29, scope: !7695)
!7695 = !DILexicalBlockFile(scope: !7679, file: !512, discriminator: 4)
!7696 = !DILocation(line: 2960, column: 14, scope: !7695)
!7697 = !DILocation(line: 2960, column: 14, scope: !7698)
!7698 = !DILexicalBlockFile(scope: !7679, file: !512, discriminator: 5)
!7699 = !DILocation(line: 2960, column: 14, scope: !7700)
!7700 = !DILexicalBlockFile(scope: !7679, file: !512, discriminator: 6)
!7701 = !DILocation(line: 2960, column: 11, scope: !7700)
!7702 = !DILocation(line: 2960, column: 7, scope: !7700)
!7703 = !DILocation(line: 2960, column: 5, scope: !7704)
!7704 = !DILexicalBlockFile(scope: !7705, file: !512, discriminator: 7)
!7705 = distinct !DILexicalBlock(scope: !7679, file: !512, line: 2960, column: 2)
!7706 = !DILocation(line: 2960, column: 4, scope: !7704)
!7707 = !DILocation(line: 2960, column: 8, scope: !7704)
!7708 = !DILocation(line: 2960, column: 22, scope: !7709)
!7709 = !DILexicalBlockFile(scope: !7705, file: !512, discriminator: 8)
!7710 = !DILocation(line: 2960, column: 26, scope: !7709)
!7711 = !DILocation(line: 2960, column: 20, scope: !7709)
!7712 = !DILocation(line: 2960, column: 18, scope: !7709)
!7713 = !DILocation(line: 2960, column: 2, scope: !7714)
!7714 = !DILexicalBlockFile(scope: !7679, file: !512, discriminator: 9)
!7715 = !DILocation(line: 2961, column: 8, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !512, line: 2961, column: 7)
!7717 = distinct !DILexicalBlock(scope: !7705, file: !512, line: 2960, column: 56)
!7718 = !DILocation(line: 2961, column: 13, scope: !7716)
!7719 = !DILocation(line: 2961, column: 7, scope: !7717)
!7720 = !DILocation(line: 2962, column: 15, scope: !7716)
!7721 = !DILocation(line: 2962, column: 21, scope: !7716)
!7722 = !DILocation(line: 2962, column: 4, scope: !7716)
!7723 = !DILocation(line: 2962, column: 9, scope: !7716)
!7724 = !DILocation(line: 2962, column: 13, scope: !7716)
!7725 = !DILocation(line: 2963, column: 8, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7717, file: !512, line: 2963, column: 7)
!7727 = !DILocation(line: 2963, column: 13, scope: !7726)
!7728 = !DILocation(line: 2963, column: 7, scope: !7717)
!7729 = !DILocation(line: 2964, column: 26, scope: !7726)
!7730 = !DILocation(line: 2964, column: 32, scope: !7726)
!7731 = !DILocation(line: 2964, column: 37, scope: !7726)
!7732 = !DILocation(line: 2964, column: 4, scope: !7726)
!7733 = !DILocation(line: 2965, column: 2, scope: !7717)
!7734 = !DILocation(line: 2960, column: 45, scope: !7735)
!7735 = !DILexicalBlockFile(scope: !7705, file: !512, discriminator: 10)
!7736 = !DILocation(line: 2960, column: 49, scope: !7735)
!7737 = !DILocation(line: 2960, column: 42, scope: !7735)
!7738 = !DILocation(line: 2960, column: 2, scope: !7735)
!7739 = distinct !{!7739, !7740}
!7740 = !DILocation(line: 2960, column: 2, scope: !5871)
!7741 = !DILocation(line: 2966, column: 15, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2966, column: 2)
!7743 = !DILocation(line: 2966, column: 21, scope: !7742)
!7744 = !DILocation(line: 2966, column: 14, scope: !7742)
!7745 = !DILocation(line: 2966, column: 32, scope: !7746)
!7746 = !DILexicalBlockFile(scope: !7742, file: !512, discriminator: 1)
!7747 = !DILocation(line: 2966, column: 38, scope: !7746)
!7748 = !DILocation(line: 2966, column: 31, scope: !7746)
!7749 = !DILocation(line: 2966, column: 30, scope: !7746)
!7750 = !DILocation(line: 2966, column: 30, scope: !7751)
!7751 = !DILexicalBlockFile(scope: !7742, file: !512, discriminator: 2)
!7752 = !DILocation(line: 2966, column: 4, scope: !7753)
!7753 = !DILexicalBlockFile(scope: !7742, file: !512, discriminator: 3)
!7754 = !DILocation(line: 2966, column: 10, scope: !7753)
!7755 = !DILocation(line: 2966, column: 17, scope: !7753)
!7756 = !DILocation(line: 2966, column: 30, scope: !7753)
!7757 = !DILocation(line: 2966, column: 30, scope: !7758)
!7758 = !DILexicalBlockFile(scope: !7742, file: !512, discriminator: 4)
!7759 = !DILocation(line: 2966, column: 14, scope: !7758)
!7760 = !DILocation(line: 2966, column: 14, scope: !7761)
!7761 = !DILexicalBlockFile(scope: !7742, file: !512, discriminator: 5)
!7762 = !DILocation(line: 2966, column: 14, scope: !7763)
!7763 = !DILexicalBlockFile(scope: !7742, file: !512, discriminator: 6)
!7764 = !DILocation(line: 2966, column: 11, scope: !7763)
!7765 = !DILocation(line: 2966, column: 7, scope: !7763)
!7766 = !DILocation(line: 2966, column: 5, scope: !7767)
!7767 = !DILexicalBlockFile(scope: !7768, file: !512, discriminator: 7)
!7768 = distinct !DILexicalBlock(scope: !7742, file: !512, line: 2966, column: 2)
!7769 = !DILocation(line: 2966, column: 4, scope: !7767)
!7770 = !DILocation(line: 2966, column: 8, scope: !7767)
!7771 = !DILocation(line: 2966, column: 22, scope: !7772)
!7772 = !DILexicalBlockFile(scope: !7768, file: !512, discriminator: 8)
!7773 = !DILocation(line: 2966, column: 26, scope: !7772)
!7774 = !DILocation(line: 2966, column: 20, scope: !7772)
!7775 = !DILocation(line: 2966, column: 18, scope: !7772)
!7776 = !DILocation(line: 2966, column: 2, scope: !7777)
!7777 = !DILexicalBlockFile(scope: !7742, file: !512, discriminator: 9)
!7778 = !DILocation(line: 2967, column: 8, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !512, line: 2967, column: 7)
!7780 = distinct !DILexicalBlock(scope: !7768, file: !512, line: 2966, column: 56)
!7781 = !DILocation(line: 2967, column: 13, scope: !7779)
!7782 = !DILocation(line: 2967, column: 7, scope: !7780)
!7783 = !DILocation(line: 2968, column: 15, scope: !7779)
!7784 = !DILocation(line: 2968, column: 21, scope: !7779)
!7785 = !DILocation(line: 2968, column: 4, scope: !7779)
!7786 = !DILocation(line: 2968, column: 9, scope: !7779)
!7787 = !DILocation(line: 2968, column: 13, scope: !7779)
!7788 = !DILocation(line: 2969, column: 8, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7780, file: !512, line: 2969, column: 7)
!7790 = !DILocation(line: 2969, column: 13, scope: !7789)
!7791 = !DILocation(line: 2969, column: 7, scope: !7780)
!7792 = !DILocation(line: 2970, column: 26, scope: !7789)
!7793 = !DILocation(line: 2970, column: 32, scope: !7789)
!7794 = !DILocation(line: 2970, column: 37, scope: !7789)
!7795 = !DILocation(line: 2970, column: 4, scope: !7789)
!7796 = !DILocation(line: 2972, column: 7, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7780, file: !512, line: 2972, column: 7)
!7798 = !DILocation(line: 2972, column: 12, scope: !7797)
!7799 = !DILocation(line: 2972, column: 16, scope: !7797)
!7800 = !DILocation(line: 2972, column: 27, scope: !7797)
!7801 = !DILocation(line: 2972, column: 7, scope: !7780)
!7802 = !DILocation(line: 2973, column: 23, scope: !7797)
!7803 = !DILocation(line: 2973, column: 4, scope: !7797)
!7804 = !DILocation(line: 2975, column: 23, scope: !7797)
!7805 = !DILocation(line: 2976, column: 2, scope: !7780)
!7806 = !DILocation(line: 2966, column: 45, scope: !7807)
!7807 = !DILexicalBlockFile(scope: !7768, file: !512, discriminator: 10)
!7808 = !DILocation(line: 2966, column: 49, scope: !7807)
!7809 = !DILocation(line: 2966, column: 42, scope: !7807)
!7810 = !DILocation(line: 2966, column: 2, scope: !7807)
!7811 = distinct !{!7811, !7812}
!7812 = !DILocation(line: 2966, column: 2, scope: !5871)
!7813 = !DILocation(line: 2983, column: 7, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 2983, column: 6)
!7815 = !DILocation(line: 2983, column: 13, scope: !7814)
!7816 = !DILocation(line: 2983, column: 18, scope: !7814)
!7817 = !DILocation(line: 2983, column: 22, scope: !7818)
!7818 = !DILexicalBlockFile(scope: !7814, file: !512, discriminator: 1)
!7819 = !DILocation(line: 2983, column: 28, scope: !7818)
!7820 = !DILocation(line: 2983, column: 34, scope: !7818)
!7821 = !DILocation(line: 2983, column: 58, scope: !7818)
!7822 = !DILocation(line: 2984, column: 6, scope: !7814)
!7823 = !DILocation(line: 2984, column: 12, scope: !7814)
!7824 = !DILocation(line: 2984, column: 26, scope: !7814)
!7825 = !DILocation(line: 2983, column: 6, scope: !7826)
!7826 = !DILexicalBlockFile(scope: !5871, file: !512, discriminator: 2)
!7827 = !DILocalVariable(name: "sync_no_tracking_weight", scope: !7828, file: !512, line: 2985, type: !350)
!7828 = distinct !DILexicalBlock(scope: !7814, file: !512, line: 2984, column: 34)
!7829 = !DILocation(line: 2985, column: 7, scope: !7828)
!7830 = !DILocation(line: 2985, column: 34, scope: !7828)
!7831 = !DILocation(line: 2985, column: 40, scope: !7828)
!7832 = !DILocation(line: 2985, column: 45, scope: !7828)
!7833 = !DILocation(line: 2985, column: 49, scope: !7834)
!7834 = !DILexicalBlockFile(scope: !7828, file: !512, discriminator: 1)
!7835 = !DILocation(line: 2985, column: 55, scope: !7834)
!7836 = !DILocation(line: 2985, column: 61, scope: !7834)
!7837 = !DILocation(line: 2985, column: 48, scope: !7834)
!7838 = !DILocation(line: 2985, column: 7, scope: !7839)
!7839 = !DILexicalBlockFile(scope: !7828, file: !512, discriminator: 2)
!7840 = !DILocation(line: 2989, column: 16, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7828, file: !512, line: 2989, column: 3)
!7842 = !DILocation(line: 2989, column: 22, scope: !7841)
!7843 = !DILocation(line: 2989, column: 15, scope: !7841)
!7844 = !DILocation(line: 2989, column: 38, scope: !7845)
!7845 = !DILexicalBlockFile(scope: !7841, file: !512, discriminator: 1)
!7846 = !DILocation(line: 2989, column: 44, scope: !7845)
!7847 = !DILocation(line: 2989, column: 37, scope: !7845)
!7848 = !DILocation(line: 2989, column: 36, scope: !7845)
!7849 = !DILocation(line: 2989, column: 36, scope: !7850)
!7850 = !DILexicalBlockFile(scope: !7841, file: !512, discriminator: 2)
!7851 = !DILocation(line: 2989, column: 5, scope: !7852)
!7852 = !DILexicalBlockFile(scope: !7841, file: !512, discriminator: 3)
!7853 = !DILocation(line: 2989, column: 11, scope: !7852)
!7854 = !DILocation(line: 2989, column: 23, scope: !7852)
!7855 = !DILocation(line: 2989, column: 36, scope: !7852)
!7856 = !DILocation(line: 2989, column: 36, scope: !7857)
!7857 = !DILexicalBlockFile(scope: !7841, file: !512, discriminator: 4)
!7858 = !DILocation(line: 2989, column: 15, scope: !7857)
!7859 = !DILocation(line: 2989, column: 15, scope: !7860)
!7860 = !DILexicalBlockFile(scope: !7841, file: !512, discriminator: 5)
!7861 = !DILocation(line: 2989, column: 15, scope: !7862)
!7862 = !DILexicalBlockFile(scope: !7841, file: !512, discriminator: 6)
!7863 = !DILocation(line: 2989, column: 12, scope: !7862)
!7864 = !DILocation(line: 2989, column: 8, scope: !7862)
!7865 = !DILocation(line: 2989, column: 6, scope: !7866)
!7866 = !DILexicalBlockFile(scope: !7867, file: !512, discriminator: 7)
!7867 = distinct !DILexicalBlock(scope: !7841, file: !512, line: 2989, column: 3)
!7868 = !DILocation(line: 2989, column: 5, scope: !7866)
!7869 = !DILocation(line: 2989, column: 9, scope: !7866)
!7870 = !DILocation(line: 2989, column: 23, scope: !7871)
!7871 = !DILexicalBlockFile(scope: !7867, file: !512, discriminator: 8)
!7872 = !DILocation(line: 2989, column: 27, scope: !7871)
!7873 = !DILocation(line: 2989, column: 20, scope: !7871)
!7874 = !DILocation(line: 2989, column: 43, scope: !7871)
!7875 = !DILocation(line: 2989, column: 47, scope: !7871)
!7876 = !DILocation(line: 2989, column: 41, scope: !7871)
!7877 = !DILocation(line: 2989, column: 39, scope: !7871)
!7878 = !DILocation(line: 2989, column: 3, scope: !7879)
!7879 = !DILexicalBlockFile(scope: !7841, file: !512, discriminator: 9)
!7880 = !DILocation(line: 2990, column: 8, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7882, file: !512, line: 2990, column: 8)
!7882 = distinct !DILexicalBlock(scope: !7867, file: !512, line: 2989, column: 72)
!7883 = !DILocation(line: 2990, column: 13, scope: !7881)
!7884 = !DILocation(line: 2990, column: 20, scope: !7881)
!7885 = !DILocation(line: 2990, column: 23, scope: !7886)
!7886 = !DILexicalBlockFile(scope: !7881, file: !512, discriminator: 1)
!7887 = !DILocation(line: 2990, column: 28, scope: !7886)
!7888 = !DILocation(line: 2990, column: 35, scope: !7886)
!7889 = !DILocation(line: 2990, column: 8, scope: !7886)
!7890 = !DILocation(line: 2993, column: 8, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7881, file: !512, line: 2990, column: 43)
!7892 = !DILocation(line: 2993, column: 14, scope: !7891)
!7893 = !DILocation(line: 2993, column: 21, scope: !7891)
!7894 = !DILocation(line: 2993, column: 26, scope: !7891)
!7895 = !DILocation(line: 2993, column: 31, scope: !7891)
!7896 = !DILocation(line: 2994, column: 8, scope: !7891)
!7897 = !DILocation(line: 2995, column: 8, scope: !7891)
!7898 = !DILocation(line: 2991, column: 5, scope: !7891)
!7899 = !DILocation(line: 2996, column: 9, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7891, file: !512, line: 2996, column: 9)
!7901 = !DILocation(line: 2996, column: 9, scope: !7891)
!7902 = !DILocation(line: 2997, column: 6, scope: !7900)
!7903 = !DILocation(line: 2997, column: 11, scope: !7900)
!7904 = !DILocation(line: 2997, column: 18, scope: !7900)
!7905 = !DILocation(line: 2999, column: 24, scope: !7900)
!7906 = !DILocation(line: 2999, column: 30, scope: !7900)
!7907 = !DILocation(line: 2999, column: 41, scope: !7900)
!7908 = !DILocation(line: 2999, column: 6, scope: !7900)
!7909 = !DILocation(line: 3000, column: 4, scope: !7891)
!7910 = !DILocation(line: 3001, column: 3, scope: !7882)
!7911 = !DILocation(line: 2989, column: 65, scope: !7912)
!7912 = !DILexicalBlockFile(scope: !7867, file: !512, discriminator: 10)
!7913 = !DILocation(line: 2989, column: 62, scope: !7912)
!7914 = !DILocation(line: 2989, column: 3, scope: !7912)
!7915 = distinct !{!7915, !7916}
!7916 = !DILocation(line: 2989, column: 3, scope: !7828)
!7917 = !DILocation(line: 3002, column: 9, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7828, file: !512, line: 3002, column: 7)
!7919 = !DILocation(line: 3002, column: 15, scope: !7918)
!7920 = !DILocation(line: 3002, column: 26, scope: !7918)
!7921 = !DILocation(line: 3002, column: 6, scope: !7918)
!7922 = !DILocation(line: 3002, column: 11, scope: !7923)
!7923 = !DILexicalBlockFile(scope: !7918, file: !512, discriminator: 1)
!7924 = !DILocation(line: 3002, column: 17, scope: !7923)
!7925 = !DILocation(line: 3002, column: 29, scope: !7923)
!7926 = !DILocation(line: 3002, column: 34, scope: !7923)
!7927 = !DILocation(line: 3002, column: 6, scope: !7923)
!7928 = !DILocation(line: 3002, column: 10, scope: !7929)
!7929 = !DILexicalBlockFile(scope: !7918, file: !512, discriminator: 2)
!7930 = !DILocation(line: 3002, column: 16, scope: !7929)
!7931 = !DILocation(line: 3002, column: 28, scope: !7929)
!7932 = !DILocation(line: 3002, column: 33, scope: !7929)
!7933 = !DILocation(line: 3002, column: 7, scope: !7929)
!7934 = !DILocation(line: 3003, column: 15, scope: !7918)
!7935 = !DILocation(line: 3003, column: 21, scope: !7918)
!7936 = !DILocation(line: 3003, column: 4, scope: !7918)
!7937 = !DILocation(line: 3006, column: 16, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7828, file: !512, line: 3006, column: 3)
!7939 = !DILocation(line: 3006, column: 22, scope: !7938)
!7940 = !DILocation(line: 3006, column: 15, scope: !7938)
!7941 = !DILocation(line: 3006, column: 41, scope: !7942)
!7942 = !DILexicalBlockFile(scope: !7938, file: !512, discriminator: 1)
!7943 = !DILocation(line: 3006, column: 47, scope: !7942)
!7944 = !DILocation(line: 3006, column: 40, scope: !7942)
!7945 = !DILocation(line: 3006, column: 39, scope: !7942)
!7946 = !DILocation(line: 3006, column: 39, scope: !7947)
!7947 = !DILexicalBlockFile(scope: !7938, file: !512, discriminator: 2)
!7948 = !DILocation(line: 3006, column: 5, scope: !7949)
!7949 = !DILexicalBlockFile(scope: !7938, file: !512, discriminator: 3)
!7950 = !DILocation(line: 3006, column: 11, scope: !7949)
!7951 = !DILocation(line: 3006, column: 26, scope: !7949)
!7952 = !DILocation(line: 3006, column: 39, scope: !7949)
!7953 = !DILocation(line: 3006, column: 39, scope: !7954)
!7954 = !DILexicalBlockFile(scope: !7938, file: !512, discriminator: 4)
!7955 = !DILocation(line: 3006, column: 15, scope: !7954)
!7956 = !DILocation(line: 3006, column: 15, scope: !7957)
!7957 = !DILexicalBlockFile(scope: !7938, file: !512, discriminator: 5)
!7958 = !DILocation(line: 3006, column: 15, scope: !7959)
!7959 = !DILexicalBlockFile(scope: !7938, file: !512, discriminator: 6)
!7960 = !DILocation(line: 3006, column: 12, scope: !7959)
!7961 = !DILocation(line: 3006, column: 8, scope: !7959)
!7962 = !DILocation(line: 3006, column: 6, scope: !7963)
!7963 = !DILexicalBlockFile(scope: !7964, file: !512, discriminator: 7)
!7964 = distinct !DILexicalBlock(scope: !7938, file: !512, line: 3006, column: 3)
!7965 = !DILocation(line: 3006, column: 5, scope: !7963)
!7966 = !DILocation(line: 3006, column: 9, scope: !7963)
!7967 = !DILocation(line: 3006, column: 23, scope: !7968)
!7968 = !DILexicalBlockFile(scope: !7964, file: !512, discriminator: 8)
!7969 = !DILocation(line: 3006, column: 27, scope: !7968)
!7970 = !DILocation(line: 3006, column: 20, scope: !7968)
!7971 = !DILocation(line: 3006, column: 42, scope: !7968)
!7972 = !DILocation(line: 3006, column: 46, scope: !7968)
!7973 = !DILocation(line: 3006, column: 40, scope: !7968)
!7974 = !DILocation(line: 3006, column: 38, scope: !7968)
!7975 = !DILocation(line: 3006, column: 3, scope: !7976)
!7976 = !DILexicalBlockFile(scope: !7938, file: !512, discriminator: 9)
!7977 = !DILocation(line: 3007, column: 8, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7979, file: !512, line: 3007, column: 8)
!7979 = distinct !DILexicalBlock(scope: !7964, file: !512, line: 3006, column: 71)
!7980 = !DILocation(line: 3007, column: 12, scope: !7978)
!7981 = !DILocation(line: 3007, column: 8, scope: !7979)
!7982 = !DILocation(line: 3010, column: 8, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7978, file: !512, line: 3007, column: 20)
!7984 = !DILocation(line: 3010, column: 14, scope: !7983)
!7985 = !DILocation(line: 3010, column: 21, scope: !7983)
!7986 = !DILocation(line: 3010, column: 25, scope: !7983)
!7987 = !DILocation(line: 3010, column: 30, scope: !7983)
!7988 = !DILocation(line: 3011, column: 8, scope: !7983)
!7989 = !DILocation(line: 3008, column: 5, scope: !7983)
!7990 = !DILocation(line: 3012, column: 23, scope: !7983)
!7991 = !DILocation(line: 3012, column: 29, scope: !7983)
!7992 = !DILocation(line: 3012, column: 43, scope: !7983)
!7993 = !DILocation(line: 3012, column: 5, scope: !7983)
!7994 = !DILocation(line: 3013, column: 4, scope: !7983)
!7995 = !DILocation(line: 3014, column: 3, scope: !7979)
!7996 = !DILocation(line: 3006, column: 64, scope: !7997)
!7997 = !DILexicalBlockFile(scope: !7964, file: !512, discriminator: 10)
!7998 = !DILocation(line: 3006, column: 61, scope: !7997)
!7999 = !DILocation(line: 3006, column: 3, scope: !7997)
!8000 = distinct !{!8000, !8001}
!8001 = !DILocation(line: 3006, column: 3, scope: !7828)
!8002 = !DILocation(line: 3015, column: 9, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7828, file: !512, line: 3015, column: 7)
!8004 = !DILocation(line: 3015, column: 15, scope: !8003)
!8005 = !DILocation(line: 3015, column: 29, scope: !8003)
!8006 = !DILocation(line: 3015, column: 6, scope: !8003)
!8007 = !DILocation(line: 3015, column: 11, scope: !8008)
!8008 = !DILexicalBlockFile(scope: !8003, file: !512, discriminator: 1)
!8009 = !DILocation(line: 3015, column: 17, scope: !8008)
!8010 = !DILocation(line: 3015, column: 32, scope: !8008)
!8011 = !DILocation(line: 3015, column: 37, scope: !8008)
!8012 = !DILocation(line: 3015, column: 6, scope: !8008)
!8013 = !DILocation(line: 3015, column: 10, scope: !8014)
!8014 = !DILexicalBlockFile(scope: !8003, file: !512, discriminator: 2)
!8015 = !DILocation(line: 3015, column: 16, scope: !8014)
!8016 = !DILocation(line: 3015, column: 31, scope: !8014)
!8017 = !DILocation(line: 3015, column: 36, scope: !8014)
!8018 = !DILocation(line: 3015, column: 7, scope: !8014)
!8019 = !DILocation(line: 3016, column: 15, scope: !8003)
!8020 = !DILocation(line: 3016, column: 21, scope: !8003)
!8021 = !DILocation(line: 3016, column: 4, scope: !8003)
!8022 = !DILocation(line: 3019, column: 16, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !7828, file: !512, line: 3019, column: 3)
!8024 = !DILocation(line: 3019, column: 22, scope: !8023)
!8025 = !DILocation(line: 3019, column: 15, scope: !8023)
!8026 = !DILocation(line: 3019, column: 39, scope: !8027)
!8027 = !DILexicalBlockFile(scope: !8023, file: !512, discriminator: 1)
!8028 = !DILocation(line: 3019, column: 45, scope: !8027)
!8029 = !DILocation(line: 3019, column: 38, scope: !8027)
!8030 = !DILocation(line: 3019, column: 37, scope: !8027)
!8031 = !DILocation(line: 3019, column: 37, scope: !8032)
!8032 = !DILexicalBlockFile(scope: !8023, file: !512, discriminator: 2)
!8033 = !DILocation(line: 3019, column: 5, scope: !8034)
!8034 = !DILexicalBlockFile(scope: !8023, file: !512, discriminator: 3)
!8035 = !DILocation(line: 3019, column: 11, scope: !8034)
!8036 = !DILocation(line: 3019, column: 24, scope: !8034)
!8037 = !DILocation(line: 3019, column: 37, scope: !8034)
!8038 = !DILocation(line: 3019, column: 37, scope: !8039)
!8039 = !DILexicalBlockFile(scope: !8023, file: !512, discriminator: 4)
!8040 = !DILocation(line: 3019, column: 15, scope: !8039)
!8041 = !DILocation(line: 3019, column: 15, scope: !8042)
!8042 = !DILexicalBlockFile(scope: !8023, file: !512, discriminator: 5)
!8043 = !DILocation(line: 3019, column: 15, scope: !8044)
!8044 = !DILexicalBlockFile(scope: !8023, file: !512, discriminator: 6)
!8045 = !DILocation(line: 3019, column: 12, scope: !8044)
!8046 = !DILocation(line: 3019, column: 8, scope: !8044)
!8047 = !DILocation(line: 3019, column: 6, scope: !8048)
!8048 = !DILexicalBlockFile(scope: !8049, file: !512, discriminator: 7)
!8049 = distinct !DILexicalBlock(scope: !8023, file: !512, line: 3019, column: 3)
!8050 = !DILocation(line: 3019, column: 5, scope: !8048)
!8051 = !DILocation(line: 3019, column: 9, scope: !8048)
!8052 = !DILocation(line: 3019, column: 23, scope: !8053)
!8053 = !DILexicalBlockFile(scope: !8049, file: !512, discriminator: 8)
!8054 = !DILocation(line: 3019, column: 27, scope: !8053)
!8055 = !DILocation(line: 3019, column: 20, scope: !8053)
!8056 = !DILocation(line: 3019, column: 43, scope: !8053)
!8057 = !DILocation(line: 3019, column: 47, scope: !8053)
!8058 = !DILocation(line: 3019, column: 41, scope: !8053)
!8059 = !DILocation(line: 3019, column: 39, scope: !8053)
!8060 = !DILocation(line: 3019, column: 3, scope: !8061)
!8061 = !DILexicalBlockFile(scope: !8023, file: !512, discriminator: 9)
!8062 = !DILocation(line: 3020, column: 8, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !512, line: 3020, column: 8)
!8064 = distinct !DILexicalBlock(scope: !8049, file: !512, line: 3019, column: 72)
!8065 = !DILocation(line: 3020, column: 13, scope: !8063)
!8066 = !DILocation(line: 3020, column: 20, scope: !8063)
!8067 = !DILocation(line: 3020, column: 8, scope: !8064)
!8068 = !DILocation(line: 3023, column: 8, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8063, file: !512, line: 3020, column: 26)
!8070 = !DILocation(line: 3023, column: 14, scope: !8069)
!8071 = !DILocation(line: 3023, column: 21, scope: !8069)
!8072 = !DILocation(line: 3023, column: 26, scope: !8069)
!8073 = !DILocation(line: 3023, column: 32, scope: !8069)
!8074 = !DILocation(line: 3024, column: 8, scope: !8069)
!8075 = !DILocation(line: 3021, column: 5, scope: !8069)
!8076 = !DILocation(line: 3025, column: 5, scope: !8069)
!8077 = !DILocation(line: 3025, column: 10, scope: !8069)
!8078 = !DILocation(line: 3025, column: 17, scope: !8069)
!8079 = !DILocation(line: 3026, column: 4, scope: !8069)
!8080 = !DILocation(line: 3027, column: 13, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8063, file: !512, line: 3027, column: 13)
!8082 = !DILocation(line: 3027, column: 18, scope: !8081)
!8083 = !DILocation(line: 3027, column: 13, scope: !8063)
!8084 = !DILocation(line: 3030, column: 8, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8081, file: !512, line: 3027, column: 26)
!8086 = !DILocation(line: 3030, column: 14, scope: !8085)
!8087 = !DILocation(line: 3030, column: 21, scope: !8085)
!8088 = !DILocation(line: 3030, column: 26, scope: !8085)
!8089 = !DILocation(line: 3030, column: 32, scope: !8085)
!8090 = !DILocation(line: 3030, column: 39, scope: !8085)
!8091 = !DILocation(line: 3030, column: 44, scope: !8085)
!8092 = !DILocation(line: 3031, column: 8, scope: !8085)
!8093 = !DILocation(line: 3028, column: 5, scope: !8085)
!8094 = !DILocation(line: 3032, column: 23, scope: !8085)
!8095 = !DILocation(line: 3032, column: 29, scope: !8085)
!8096 = !DILocation(line: 3032, column: 41, scope: !8085)
!8097 = !DILocation(line: 3032, column: 5, scope: !8085)
!8098 = !DILocation(line: 3033, column: 4, scope: !8085)
!8099 = !DILocation(line: 3034, column: 3, scope: !8064)
!8100 = !DILocation(line: 3019, column: 65, scope: !8101)
!8101 = !DILexicalBlockFile(scope: !8049, file: !512, discriminator: 10)
!8102 = !DILocation(line: 3019, column: 62, scope: !8101)
!8103 = !DILocation(line: 3019, column: 3, scope: !8101)
!8104 = distinct !{!8104, !8105}
!8105 = !DILocation(line: 3019, column: 3, scope: !7828)
!8106 = !DILocation(line: 3035, column: 9, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !7828, file: !512, line: 3035, column: 7)
!8108 = !DILocation(line: 3035, column: 15, scope: !8107)
!8109 = !DILocation(line: 3035, column: 27, scope: !8107)
!8110 = !DILocation(line: 3035, column: 6, scope: !8107)
!8111 = !DILocation(line: 3035, column: 11, scope: !8112)
!8112 = !DILexicalBlockFile(scope: !8107, file: !512, discriminator: 1)
!8113 = !DILocation(line: 3035, column: 17, scope: !8112)
!8114 = !DILocation(line: 3035, column: 30, scope: !8112)
!8115 = !DILocation(line: 3035, column: 35, scope: !8112)
!8116 = !DILocation(line: 3035, column: 6, scope: !8112)
!8117 = !DILocation(line: 3035, column: 10, scope: !8118)
!8118 = !DILexicalBlockFile(scope: !8107, file: !512, discriminator: 2)
!8119 = !DILocation(line: 3035, column: 16, scope: !8118)
!8120 = !DILocation(line: 3035, column: 29, scope: !8118)
!8121 = !DILocation(line: 3035, column: 34, scope: !8118)
!8122 = !DILocation(line: 3035, column: 7, scope: !8118)
!8123 = !DILocation(line: 3036, column: 15, scope: !8107)
!8124 = !DILocation(line: 3036, column: 21, scope: !8107)
!8125 = !DILocation(line: 3036, column: 4, scope: !8107)
!8126 = !DILocation(line: 3052, column: 2, scope: !7828)
!8127 = !DILocation(line: 3056, column: 15, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 3056, column: 2)
!8129 = !DILocation(line: 3056, column: 21, scope: !8128)
!8130 = !DILocation(line: 3056, column: 14, scope: !8128)
!8131 = !DILocation(line: 3056, column: 40, scope: !8132)
!8132 = !DILexicalBlockFile(scope: !8128, file: !512, discriminator: 1)
!8133 = !DILocation(line: 3056, column: 46, scope: !8132)
!8134 = !DILocation(line: 3056, column: 39, scope: !8132)
!8135 = !DILocation(line: 3056, column: 38, scope: !8132)
!8136 = !DILocation(line: 3056, column: 38, scope: !8137)
!8137 = !DILexicalBlockFile(scope: !8128, file: !512, discriminator: 2)
!8138 = !DILocation(line: 3056, column: 4, scope: !8139)
!8139 = !DILexicalBlockFile(scope: !8128, file: !512, discriminator: 3)
!8140 = !DILocation(line: 3056, column: 10, scope: !8139)
!8141 = !DILocation(line: 3056, column: 25, scope: !8139)
!8142 = !DILocation(line: 3056, column: 38, scope: !8139)
!8143 = !DILocation(line: 3056, column: 38, scope: !8144)
!8144 = !DILexicalBlockFile(scope: !8128, file: !512, discriminator: 4)
!8145 = !DILocation(line: 3056, column: 14, scope: !8144)
!8146 = !DILocation(line: 3056, column: 14, scope: !8147)
!8147 = !DILexicalBlockFile(scope: !8128, file: !512, discriminator: 5)
!8148 = !DILocation(line: 3056, column: 14, scope: !8149)
!8149 = !DILexicalBlockFile(scope: !8128, file: !512, discriminator: 6)
!8150 = !DILocation(line: 3056, column: 11, scope: !8149)
!8151 = !DILocation(line: 3056, column: 7, scope: !8149)
!8152 = !DILocation(line: 3056, column: 5, scope: !8153)
!8153 = !DILexicalBlockFile(scope: !8154, file: !512, discriminator: 7)
!8154 = distinct !DILexicalBlock(scope: !8128, file: !512, line: 3056, column: 2)
!8155 = !DILocation(line: 3056, column: 4, scope: !8153)
!8156 = !DILocation(line: 3056, column: 8, scope: !8153)
!8157 = !DILocation(line: 3056, column: 22, scope: !8158)
!8158 = !DILexicalBlockFile(scope: !8154, file: !512, discriminator: 8)
!8159 = !DILocation(line: 3056, column: 26, scope: !8158)
!8160 = !DILocation(line: 3056, column: 19, scope: !8158)
!8161 = !DILocation(line: 3056, column: 41, scope: !8158)
!8162 = !DILocation(line: 3056, column: 45, scope: !8158)
!8163 = !DILocation(line: 3056, column: 39, scope: !8158)
!8164 = !DILocation(line: 3056, column: 37, scope: !8158)
!8165 = !DILocation(line: 3056, column: 2, scope: !8166)
!8166 = !DILexicalBlockFile(scope: !8128, file: !512, discriminator: 9)
!8167 = !DILocalVariable(name: "vsc", scope: !8168, file: !512, line: 3057, type: !5315)
!8168 = distinct !DILexicalBlock(scope: !8154, file: !512, line: 3056, column: 70)
!8169 = !DILocation(line: 3057, column: 18, scope: !8168)
!8170 = !DILocation(line: 3057, column: 24, scope: !8168)
!8171 = !DILocation(line: 3057, column: 28, scope: !8168)
!8172 = !DILocation(line: 3059, column: 7, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8168, file: !512, line: 3059, column: 7)
!8174 = !DILocation(line: 3059, column: 13, scope: !8173)
!8175 = !DILocation(line: 3059, column: 27, scope: !8173)
!8176 = !DILocation(line: 3059, column: 34, scope: !8173)
!8177 = !DILocation(line: 3059, column: 37, scope: !8178)
!8178 = !DILexicalBlockFile(scope: !8173, file: !512, discriminator: 1)
!8179 = !DILocation(line: 3059, column: 41, scope: !8178)
!8180 = !DILocation(line: 3059, column: 7, scope: !8178)
!8181 = !DILocation(line: 3060, column: 110, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8173, file: !512, line: 3059, column: 49)
!8183 = !DILocation(line: 3060, column: 116, scope: !8182)
!8184 = !DILocation(line: 3060, column: 123, scope: !8182)
!8185 = !DILocation(line: 3060, column: 128, scope: !8182)
!8186 = !DILocation(line: 3060, column: 4, scope: !8182)
!8187 = !DILocation(line: 3061, column: 13, scope: !8182)
!8188 = !DILocation(line: 3061, column: 19, scope: !8182)
!8189 = !DILocation(line: 3061, column: 33, scope: !8182)
!8190 = !DILocation(line: 3061, column: 4, scope: !8182)
!8191 = !DILocation(line: 3062, column: 4, scope: !8182)
!8192 = !DILocation(line: 3065, column: 28, scope: !8168)
!8193 = !DILocation(line: 3065, column: 34, scope: !8168)
!8194 = !DILocation(line: 3065, column: 3, scope: !8168)
!8195 = !DILocation(line: 3066, column: 2, scope: !8168)
!8196 = !DILocation(line: 3056, column: 63, scope: !8197)
!8197 = !DILexicalBlockFile(scope: !8154, file: !512, discriminator: 10)
!8198 = !DILocation(line: 3056, column: 60, scope: !8197)
!8199 = !DILocation(line: 3056, column: 2, scope: !8197)
!8200 = distinct !{!8200, !8201}
!8201 = !DILocation(line: 3056, column: 2, scope: !5871)
!8202 = !DILocation(line: 3069, column: 15, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 3069, column: 2)
!8204 = !DILocation(line: 3069, column: 21, scope: !8203)
!8205 = !DILocation(line: 3069, column: 14, scope: !8203)
!8206 = !DILocation(line: 3069, column: 38, scope: !8207)
!8207 = !DILexicalBlockFile(scope: !8203, file: !512, discriminator: 1)
!8208 = !DILocation(line: 3069, column: 44, scope: !8207)
!8209 = !DILocation(line: 3069, column: 37, scope: !8207)
!8210 = !DILocation(line: 3069, column: 36, scope: !8207)
!8211 = !DILocation(line: 3069, column: 36, scope: !8212)
!8212 = !DILexicalBlockFile(scope: !8203, file: !512, discriminator: 2)
!8213 = !DILocation(line: 3069, column: 4, scope: !8214)
!8214 = !DILexicalBlockFile(scope: !8203, file: !512, discriminator: 3)
!8215 = !DILocation(line: 3069, column: 10, scope: !8214)
!8216 = !DILocation(line: 3069, column: 23, scope: !8214)
!8217 = !DILocation(line: 3069, column: 36, scope: !8214)
!8218 = !DILocation(line: 3069, column: 36, scope: !8219)
!8219 = !DILexicalBlockFile(scope: !8203, file: !512, discriminator: 4)
!8220 = !DILocation(line: 3069, column: 14, scope: !8219)
!8221 = !DILocation(line: 3069, column: 14, scope: !8222)
!8222 = !DILexicalBlockFile(scope: !8203, file: !512, discriminator: 5)
!8223 = !DILocation(line: 3069, column: 14, scope: !8224)
!8224 = !DILexicalBlockFile(scope: !8203, file: !512, discriminator: 6)
!8225 = !DILocation(line: 3069, column: 11, scope: !8224)
!8226 = !DILocation(line: 3069, column: 7, scope: !8224)
!8227 = !DILocation(line: 3069, column: 5, scope: !8228)
!8228 = !DILexicalBlockFile(scope: !8229, file: !512, discriminator: 7)
!8229 = distinct !DILexicalBlock(scope: !8203, file: !512, line: 3069, column: 2)
!8230 = !DILocation(line: 3069, column: 4, scope: !8228)
!8231 = !DILocation(line: 3069, column: 8, scope: !8228)
!8232 = !DILocation(line: 3069, column: 22, scope: !8233)
!8233 = !DILexicalBlockFile(scope: !8229, file: !512, discriminator: 8)
!8234 = !DILocation(line: 3069, column: 26, scope: !8233)
!8235 = !DILocation(line: 3069, column: 20, scope: !8233)
!8236 = !DILocation(line: 3069, column: 18, scope: !8233)
!8237 = !DILocation(line: 3069, column: 2, scope: !8238)
!8238 = !DILexicalBlockFile(scope: !8203, file: !512, discriminator: 9)
!8239 = !DILocation(line: 3070, column: 26, scope: !8229)
!8240 = !DILocation(line: 3070, column: 32, scope: !8229)
!8241 = !DILocation(line: 3070, column: 3, scope: !8229)
!8242 = !DILocation(line: 3069, column: 45, scope: !8243)
!8243 = !DILexicalBlockFile(scope: !8229, file: !512, discriminator: 10)
!8244 = !DILocation(line: 3069, column: 49, scope: !8243)
!8245 = !DILocation(line: 3069, column: 42, scope: !8243)
!8246 = !DILocation(line: 3069, column: 2, scope: !8243)
!8247 = distinct !{!8247, !8248}
!8248 = !DILocation(line: 3069, column: 2, scope: !5871)
!8249 = !DILocation(line: 3078, column: 6, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 3078, column: 6)
!8251 = !DILocation(line: 3078, column: 12, scope: !8250)
!8252 = !DILocation(line: 3078, column: 17, scope: !8250)
!8253 = !DILocation(line: 3078, column: 6, scope: !5871)
!8254 = !DILocation(line: 3079, column: 8, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8256, file: !512, line: 3079, column: 7)
!8256 = distinct !DILexicalBlock(scope: !8250, file: !512, line: 3078, column: 26)
!8257 = !DILocation(line: 3079, column: 15, scope: !8255)
!8258 = !DILocation(line: 3079, column: 18, scope: !8259)
!8259 = !DILexicalBlockFile(scope: !8255, file: !512, discriminator: 1)
!8260 = !DILocation(line: 3079, column: 7, scope: !8259)
!8261 = !DILocation(line: 3080, column: 4, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8255, file: !512, line: 3079, column: 45)
!8263 = !DILocation(line: 3080, column: 10, scope: !8262)
!8264 = !DILocation(line: 3080, column: 17, scope: !8262)
!8265 = !DILocation(line: 3081, column: 3, scope: !8262)
!8266 = !DILocation(line: 3084, column: 7, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8256, file: !512, line: 3084, column: 7)
!8268 = !DILocation(line: 3084, column: 13, scope: !8267)
!8269 = !DILocation(line: 3084, column: 33, scope: !8267)
!8270 = !DILocation(line: 3085, column: 8, scope: !8267)
!8271 = !DILocation(line: 3085, column: 14, scope: !8267)
!8272 = !DILocation(line: 3085, column: 19, scope: !8267)
!8273 = !DILocation(line: 3085, column: 51, scope: !8267)
!8274 = !DILocation(line: 3086, column: 8, scope: !8267)
!8275 = !DILocation(line: 3084, column: 7, scope: !8276)
!8276 = !DILexicalBlockFile(scope: !8256, file: !512, discriminator: 1)
!8277 = !DILocation(line: 3087, column: 28, scope: !8267)
!8278 = !DILocation(line: 3087, column: 34, scope: !8267)
!8279 = !DILocation(line: 3087, column: 4, scope: !8267)
!8280 = !DILocation(line: 3088, column: 2, scope: !8256)
!8281 = !DILocation(line: 3092, column: 15, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 3092, column: 2)
!8283 = !DILocation(line: 3092, column: 21, scope: !8282)
!8284 = !DILocation(line: 3092, column: 14, scope: !8282)
!8285 = !DILocation(line: 3092, column: 35, scope: !8286)
!8286 = !DILexicalBlockFile(scope: !8282, file: !512, discriminator: 1)
!8287 = !DILocation(line: 3092, column: 41, scope: !8286)
!8288 = !DILocation(line: 3092, column: 34, scope: !8286)
!8289 = !DILocation(line: 3092, column: 33, scope: !8286)
!8290 = !DILocation(line: 3092, column: 33, scope: !8291)
!8291 = !DILexicalBlockFile(scope: !8282, file: !512, discriminator: 2)
!8292 = !DILocation(line: 3092, column: 4, scope: !8293)
!8293 = !DILexicalBlockFile(scope: !8282, file: !512, discriminator: 3)
!8294 = !DILocation(line: 3092, column: 10, scope: !8293)
!8295 = !DILocation(line: 3092, column: 20, scope: !8293)
!8296 = !DILocation(line: 3092, column: 33, scope: !8293)
!8297 = !DILocation(line: 3092, column: 33, scope: !8298)
!8298 = !DILexicalBlockFile(scope: !8282, file: !512, discriminator: 4)
!8299 = !DILocation(line: 3092, column: 14, scope: !8298)
!8300 = !DILocation(line: 3092, column: 14, scope: !8301)
!8301 = !DILexicalBlockFile(scope: !8282, file: !512, discriminator: 5)
!8302 = !DILocation(line: 3092, column: 14, scope: !8303)
!8303 = !DILexicalBlockFile(scope: !8282, file: !512, discriminator: 6)
!8304 = !DILocation(line: 3092, column: 11, scope: !8303)
!8305 = !DILocation(line: 3092, column: 7, scope: !8303)
!8306 = !DILocation(line: 3092, column: 5, scope: !8307)
!8307 = !DILexicalBlockFile(scope: !8308, file: !512, discriminator: 7)
!8308 = distinct !DILexicalBlock(scope: !8282, file: !512, line: 3092, column: 2)
!8309 = !DILocation(line: 3092, column: 4, scope: !8307)
!8310 = !DILocation(line: 3092, column: 8, scope: !8307)
!8311 = !DILocation(line: 3092, column: 25, scope: !8312)
!8312 = !DILexicalBlockFile(scope: !8308, file: !512, discriminator: 8)
!8313 = !DILocation(line: 3092, column: 29, scope: !8312)
!8314 = !DILocation(line: 3092, column: 23, scope: !8312)
!8315 = !DILocation(line: 3092, column: 21, scope: !8312)
!8316 = !DILocation(line: 3092, column: 2, scope: !8317)
!8317 = !DILexicalBlockFile(scope: !8282, file: !512, discriminator: 9)
!8318 = !DILocation(line: 3093, column: 8, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8320, file: !512, line: 3093, column: 7)
!8320 = distinct !DILexicalBlock(scope: !8308, file: !512, line: 3092, column: 59)
!8321 = !DILocation(line: 3093, column: 16, scope: !8319)
!8322 = !DILocation(line: 3093, column: 7, scope: !8320)
!8323 = !DILocation(line: 3094, column: 8, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !512, line: 3094, column: 8)
!8325 = distinct !DILexicalBlock(scope: !8319, file: !512, line: 3093, column: 28)
!8326 = !DILocation(line: 3094, column: 16, scope: !8324)
!8327 = !DILocation(line: 3094, column: 23, scope: !8324)
!8328 = !DILocation(line: 3094, column: 8, scope: !8325)
!8329 = !DILocation(line: 3095, column: 25, scope: !8324)
!8330 = !DILocation(line: 3095, column: 5, scope: !8324)
!8331 = !DILocation(line: 3097, column: 25, scope: !8324)
!8332 = !DILocation(line: 3100, column: 8, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8325, file: !512, line: 3100, column: 8)
!8334 = !DILocation(line: 3100, column: 16, scope: !8333)
!8335 = !DILocation(line: 3100, column: 8, scope: !8325)
!8336 = !DILocation(line: 3101, column: 27, scope: !8333)
!8337 = !DILocation(line: 3101, column: 33, scope: !8333)
!8338 = !DILocation(line: 3101, column: 41, scope: !8333)
!8339 = !DILocation(line: 3101, column: 5, scope: !8333)
!8340 = !DILocation(line: 3102, column: 3, scope: !8325)
!8341 = !DILocation(line: 3103, column: 2, scope: !8320)
!8342 = !DILocation(line: 3092, column: 48, scope: !8343)
!8343 = !DILexicalBlockFile(scope: !8308, file: !512, discriminator: 10)
!8344 = !DILocation(line: 3092, column: 52, scope: !8343)
!8345 = !DILocation(line: 3092, column: 45, scope: !8343)
!8346 = !DILocation(line: 3092, column: 2, scope: !8343)
!8347 = distinct !{!8347, !8348}
!8348 = !DILocation(line: 3092, column: 2, scope: !5871)
!8349 = !DILocation(line: 3104, column: 15, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !5871, file: !512, line: 3104, column: 2)
!8351 = !DILocation(line: 3104, column: 21, scope: !8350)
!8352 = !DILocation(line: 3104, column: 14, scope: !8350)
!8353 = !DILocation(line: 3104, column: 34, scope: !8354)
!8354 = !DILexicalBlockFile(scope: !8350, file: !512, discriminator: 1)
!8355 = !DILocation(line: 3104, column: 40, scope: !8354)
!8356 = !DILocation(line: 3104, column: 33, scope: !8354)
!8357 = !DILocation(line: 3104, column: 32, scope: !8354)
!8358 = !DILocation(line: 3104, column: 32, scope: !8359)
!8359 = !DILexicalBlockFile(scope: !8350, file: !512, discriminator: 2)
!8360 = !DILocation(line: 3104, column: 4, scope: !8361)
!8361 = !DILexicalBlockFile(scope: !8350, file: !512, discriminator: 3)
!8362 = !DILocation(line: 3104, column: 10, scope: !8361)
!8363 = !DILocation(line: 3104, column: 19, scope: !8361)
!8364 = !DILocation(line: 3104, column: 32, scope: !8361)
!8365 = !DILocation(line: 3104, column: 32, scope: !8366)
!8366 = !DILexicalBlockFile(scope: !8350, file: !512, discriminator: 4)
!8367 = !DILocation(line: 3104, column: 14, scope: !8366)
!8368 = !DILocation(line: 3104, column: 14, scope: !8369)
!8369 = !DILexicalBlockFile(scope: !8350, file: !512, discriminator: 5)
!8370 = !DILocation(line: 3104, column: 14, scope: !8371)
!8371 = !DILexicalBlockFile(scope: !8350, file: !512, discriminator: 6)
!8372 = !DILocation(line: 3104, column: 11, scope: !8371)
!8373 = !DILocation(line: 3104, column: 7, scope: !8371)
!8374 = !DILocation(line: 3104, column: 5, scope: !8375)
!8375 = !DILexicalBlockFile(scope: !8376, file: !512, discriminator: 7)
!8376 = distinct !DILexicalBlock(scope: !8350, file: !512, line: 3104, column: 2)
!8377 = !DILocation(line: 3104, column: 4, scope: !8375)
!8378 = !DILocation(line: 3104, column: 8, scope: !8375)
!8379 = !DILocation(line: 3104, column: 24, scope: !8380)
!8380 = !DILexicalBlockFile(scope: !8376, file: !512, discriminator: 8)
!8381 = !DILocation(line: 3104, column: 28, scope: !8380)
!8382 = !DILocation(line: 3104, column: 22, scope: !8380)
!8383 = !DILocation(line: 3104, column: 20, scope: !8380)
!8384 = !DILocation(line: 3104, column: 2, scope: !8385)
!8385 = !DILexicalBlockFile(scope: !8350, file: !512, discriminator: 9)
!8386 = !DILocation(line: 3105, column: 8, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8388, file: !512, line: 3105, column: 7)
!8388 = distinct !DILexicalBlock(scope: !8376, file: !512, line: 3104, column: 58)
!8389 = !DILocation(line: 3105, column: 15, scope: !8387)
!8390 = !DILocation(line: 3105, column: 7, scope: !8388)
!8391 = !DILocation(line: 3106, column: 8, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !512, line: 3106, column: 8)
!8393 = distinct !DILexicalBlock(scope: !8387, file: !512, line: 3105, column: 27)
!8394 = !DILocation(line: 3106, column: 15, scope: !8392)
!8395 = !DILocation(line: 3106, column: 22, scope: !8392)
!8396 = !DILocation(line: 3106, column: 8, scope: !8393)
!8397 = !DILocation(line: 3107, column: 24, scope: !8392)
!8398 = !DILocation(line: 3107, column: 5, scope: !8392)
!8399 = !DILocation(line: 3109, column: 24, scope: !8392)
!8400 = !DILocation(line: 3112, column: 8, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8393, file: !512, line: 3112, column: 8)
!8402 = !DILocation(line: 3112, column: 15, scope: !8401)
!8403 = !DILocation(line: 3112, column: 8, scope: !8393)
!8404 = !DILocation(line: 3113, column: 27, scope: !8401)
!8405 = !DILocation(line: 3113, column: 33, scope: !8401)
!8406 = !DILocation(line: 3113, column: 40, scope: !8401)
!8407 = !DILocation(line: 3113, column: 5, scope: !8401)
!8408 = !DILocation(line: 3115, column: 8, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8393, file: !512, line: 3115, column: 8)
!8410 = !DILocation(line: 3115, column: 15, scope: !8409)
!8411 = !DILocation(line: 3115, column: 8, scope: !8393)
!8412 = !DILocation(line: 3116, column: 27, scope: !8409)
!8413 = !DILocation(line: 3116, column: 33, scope: !8409)
!8414 = !DILocation(line: 3116, column: 40, scope: !8409)
!8415 = !DILocation(line: 3116, column: 5, scope: !8409)
!8416 = !DILocation(line: 3118, column: 3, scope: !8393)
!8417 = !DILocation(line: 3119, column: 2, scope: !8388)
!8418 = !DILocation(line: 3104, column: 47, scope: !8419)
!8419 = !DILexicalBlockFile(scope: !8376, file: !512, discriminator: 10)
!8420 = !DILocation(line: 3104, column: 51, scope: !8419)
!8421 = !DILocation(line: 3104, column: 44, scope: !8419)
!8422 = !DILocation(line: 3104, column: 2, scope: !8419)
!8423 = distinct !{!8423, !8424}
!8424 = !DILocation(line: 3104, column: 2, scope: !5871)
!8425 = !DILocation(line: 3123, column: 25, scope: !5871)
!8426 = !DILocation(line: 3123, column: 2, scope: !5871)
!8427 = !DILocation(line: 3124, column: 17, scope: !5871)
!8428 = !DILocation(line: 3124, column: 2, scope: !5871)
!8429 = !DILocation(line: 3126, column: 2, scope: !5871)
!8430 = !DILocation(line: 3127, column: 1, scope: !5871)
!8431 = distinct !DISubprogram(name: "sync_group_tracking_init", scope: !512, file: !512, line: 3130, type: !524, isLocal: true, isDefinition: true, scopeLine: 3131, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!8432 = !DILocalVariable(name: "e", scope: !8431, file: !512, line: 3132, type: !984)
!8433 = !DILocation(line: 3132, column: 10, scope: !8431)
!8434 = !DILocalVariable(name: "e1", scope: !8431, file: !512, line: 3132, type: !984)
!8435 = !DILocation(line: 3132, column: 13, scope: !8431)
!8436 = !DILocalVariable(name: "e2", scope: !8431, file: !512, line: 3132, type: !984)
!8437 = !DILocation(line: 3132, column: 17, scope: !8431)
!8438 = !DILocalVariable(name: "sgroup", scope: !8431, file: !512, line: 3133, type: !544)
!8439 = !DILocation(line: 3133, column: 17, scope: !8431)
!8440 = !DILocalVariable(name: "sc", scope: !8431, file: !512, line: 3134, type: !5388)
!8441 = !DILocation(line: 3134, column: 16, scope: !8431)
!8442 = !DILocalVariable(name: "vsc", scope: !8431, file: !512, line: 3135, type: !5315)
!8443 = !DILocation(line: 3135, column: 17, scope: !8431)
!8444 = !DILocalVariable(name: "tif", scope: !8431, file: !512, line: 3136, type: !5897)
!8445 = !DILocation(line: 3136, column: 16, scope: !8431)
!8446 = !DILocalVariable(name: "tfl", scope: !8431, file: !512, line: 3137, type: !5905)
!8447 = !DILocation(line: 3137, column: 18, scope: !8431)
!8448 = !DILocalVariable(name: "vrrp", scope: !8431, file: !512, line: 3141, type: !537)
!8449 = !DILocation(line: 3141, column: 10, scope: !8431)
!8450 = !DILocalVariable(name: "sgroup_has_prio_owner", scope: !8431, file: !512, line: 3142, type: !350)
!8451 = !DILocation(line: 3142, column: 6, scope: !8431)
!8452 = !DILocation(line: 3144, column: 8, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8431, file: !512, line: 3144, column: 6)
!8454 = !DILocation(line: 3144, column: 19, scope: !8453)
!8455 = !DILocation(line: 3144, column: 36, scope: !8453)
!8456 = !DILocation(line: 3144, column: 5, scope: !8453)
!8457 = !DILocation(line: 3144, column: 10, scope: !8458)
!8458 = !DILexicalBlockFile(scope: !8453, file: !512, discriminator: 1)
!8459 = !DILocation(line: 3144, column: 21, scope: !8458)
!8460 = !DILocation(line: 3144, column: 39, scope: !8458)
!8461 = !DILocation(line: 3144, column: 44, scope: !8458)
!8462 = !DILocation(line: 3144, column: 5, scope: !8458)
!8463 = !DILocation(line: 3144, column: 9, scope: !8464)
!8464 = !DILexicalBlockFile(scope: !8453, file: !512, discriminator: 2)
!8465 = !DILocation(line: 3144, column: 20, scope: !8464)
!8466 = !DILocation(line: 3144, column: 38, scope: !8464)
!8467 = !DILocation(line: 3144, column: 43, scope: !8464)
!8468 = !DILocation(line: 3144, column: 6, scope: !8464)
!8469 = !DILocation(line: 3145, column: 3, scope: !8453)
!8470 = !DILocation(line: 3149, column: 15, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8431, file: !512, line: 3149, column: 2)
!8472 = !DILocation(line: 3149, column: 26, scope: !8471)
!8473 = !DILocation(line: 3149, column: 14, scope: !8471)
!8474 = !DILocation(line: 3149, column: 48, scope: !8475)
!8475 = !DILexicalBlockFile(scope: !8471, file: !512, discriminator: 1)
!8476 = !DILocation(line: 3149, column: 59, scope: !8475)
!8477 = !DILocation(line: 3149, column: 47, scope: !8475)
!8478 = !DILocation(line: 3149, column: 46, scope: !8475)
!8479 = !DILocation(line: 3149, column: 46, scope: !8480)
!8480 = !DILexicalBlockFile(scope: !8471, file: !512, discriminator: 2)
!8481 = !DILocation(line: 3149, column: 4, scope: !8482)
!8482 = !DILexicalBlockFile(scope: !8471, file: !512, discriminator: 3)
!8483 = !DILocation(line: 3149, column: 15, scope: !8482)
!8484 = !DILocation(line: 3149, column: 33, scope: !8482)
!8485 = !DILocation(line: 3149, column: 46, scope: !8482)
!8486 = !DILocation(line: 3149, column: 46, scope: !8487)
!8487 = !DILexicalBlockFile(scope: !8471, file: !512, discriminator: 4)
!8488 = !DILocation(line: 3149, column: 14, scope: !8487)
!8489 = !DILocation(line: 3149, column: 14, scope: !8490)
!8490 = !DILexicalBlockFile(scope: !8471, file: !512, discriminator: 5)
!8491 = !DILocation(line: 3149, column: 14, scope: !8492)
!8492 = !DILexicalBlockFile(scope: !8471, file: !512, discriminator: 6)
!8493 = !DILocation(line: 3149, column: 11, scope: !8492)
!8494 = !DILocation(line: 3149, column: 7, scope: !8492)
!8495 = !DILocation(line: 3149, column: 5, scope: !8496)
!8496 = !DILexicalBlockFile(scope: !8497, file: !512, discriminator: 7)
!8497 = distinct !DILexicalBlock(scope: !8471, file: !512, line: 3149, column: 2)
!8498 = !DILocation(line: 3149, column: 4, scope: !8496)
!8499 = !DILocation(line: 3149, column: 8, scope: !8496)
!8500 = !DILocation(line: 3149, column: 25, scope: !8501)
!8501 = !DILexicalBlockFile(scope: !8497, file: !512, discriminator: 8)
!8502 = !DILocation(line: 3149, column: 29, scope: !8501)
!8503 = !DILocation(line: 3149, column: 23, scope: !8501)
!8504 = !DILocation(line: 3149, column: 21, scope: !8501)
!8505 = !DILocation(line: 3149, column: 2, scope: !8506)
!8506 = !DILexicalBlockFile(scope: !8471, file: !512, discriminator: 9)
!8507 = !DILocation(line: 3150, column: 9, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !512, line: 3150, column: 7)
!8509 = distinct !DILexicalBlock(scope: !8497, file: !512, line: 3149, column: 59)
!8510 = !DILocation(line: 3150, column: 17, scope: !8508)
!8511 = !DILocation(line: 3150, column: 33, scope: !8508)
!8512 = !DILocation(line: 3150, column: 6, scope: !8508)
!8513 = !DILocation(line: 3150, column: 11, scope: !8514)
!8514 = !DILexicalBlockFile(scope: !8508, file: !512, discriminator: 1)
!8515 = !DILocation(line: 3150, column: 19, scope: !8514)
!8516 = !DILocation(line: 3150, column: 36, scope: !8514)
!8517 = !DILocation(line: 3150, column: 41, scope: !8514)
!8518 = !DILocation(line: 3150, column: 6, scope: !8514)
!8519 = !DILocation(line: 3150, column: 10, scope: !8520)
!8520 = !DILexicalBlockFile(scope: !8508, file: !512, discriminator: 2)
!8521 = !DILocation(line: 3150, column: 18, scope: !8520)
!8522 = !DILocation(line: 3150, column: 35, scope: !8520)
!8523 = !DILocation(line: 3150, column: 40, scope: !8520)
!8524 = !DILocation(line: 3150, column: 7, scope: !8520)
!8525 = !DILocation(line: 3151, column: 4, scope: !8508)
!8526 = !DILocation(line: 3155, column: 25, scope: !8509)
!8527 = !DILocation(line: 3156, column: 17, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8509, file: !512, line: 3156, column: 3)
!8529 = !DILocation(line: 3156, column: 25, scope: !8528)
!8530 = !DILocation(line: 3156, column: 16, scope: !8528)
!8531 = !DILocation(line: 3156, column: 46, scope: !8532)
!8532 = !DILexicalBlockFile(scope: !8528, file: !512, discriminator: 1)
!8533 = !DILocation(line: 3156, column: 54, scope: !8532)
!8534 = !DILocation(line: 3156, column: 45, scope: !8532)
!8535 = !DILocation(line: 3156, column: 44, scope: !8532)
!8536 = !DILocation(line: 3156, column: 44, scope: !8537)
!8537 = !DILexicalBlockFile(scope: !8528, file: !512, discriminator: 2)
!8538 = !DILocation(line: 3156, column: 5, scope: !8539)
!8539 = !DILexicalBlockFile(scope: !8528, file: !512, discriminator: 3)
!8540 = !DILocation(line: 3156, column: 13, scope: !8539)
!8541 = !DILocation(line: 3156, column: 30, scope: !8539)
!8542 = !DILocation(line: 3156, column: 44, scope: !8539)
!8543 = !DILocation(line: 3156, column: 44, scope: !8544)
!8544 = !DILexicalBlockFile(scope: !8528, file: !512, discriminator: 4)
!8545 = !DILocation(line: 3156, column: 16, scope: !8544)
!8546 = !DILocation(line: 3156, column: 16, scope: !8547)
!8547 = !DILexicalBlockFile(scope: !8528, file: !512, discriminator: 5)
!8548 = !DILocation(line: 3156, column: 16, scope: !8549)
!8549 = !DILexicalBlockFile(scope: !8528, file: !512, discriminator: 6)
!8550 = !DILocation(line: 3156, column: 13, scope: !8549)
!8551 = !DILocation(line: 3156, column: 8, scope: !8549)
!8552 = !DILocation(line: 3156, column: 6, scope: !8553)
!8553 = !DILexicalBlockFile(scope: !8554, file: !512, discriminator: 7)
!8554 = distinct !DILexicalBlock(scope: !8528, file: !512, line: 3156, column: 3)
!8555 = !DILocation(line: 3156, column: 5, scope: !8553)
!8556 = !DILocation(line: 3156, column: 10, scope: !8553)
!8557 = !DILocation(line: 3156, column: 25, scope: !8558)
!8558 = !DILexicalBlockFile(scope: !8554, file: !512, discriminator: 8)
!8559 = !DILocation(line: 3156, column: 30, scope: !8558)
!8560 = !DILocation(line: 3156, column: 23, scope: !8558)
!8561 = !DILocation(line: 3156, column: 21, scope: !8558)
!8562 = !DILocation(line: 3156, column: 3, scope: !8563)
!8563 = !DILexicalBlockFile(scope: !8528, file: !512, discriminator: 9)
!8564 = !DILocation(line: 3157, column: 8, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8566, file: !512, line: 3157, column: 8)
!8566 = distinct !DILexicalBlock(scope: !8554, file: !512, line: 3156, column: 62)
!8567 = !DILocation(line: 3157, column: 14, scope: !8565)
!8568 = !DILocation(line: 3157, column: 28, scope: !8565)
!8569 = !DILocation(line: 3157, column: 8, scope: !8566)
!8570 = !DILocation(line: 3158, column: 27, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8565, file: !512, line: 3157, column: 36)
!8572 = !DILocation(line: 3159, column: 5, scope: !8571)
!8573 = !DILocation(line: 3161, column: 3, scope: !8566)
!8574 = !DILocation(line: 3156, column: 50, scope: !8575)
!8575 = !DILexicalBlockFile(scope: !8554, file: !512, discriminator: 10)
!8576 = !DILocation(line: 3156, column: 55, scope: !8575)
!8577 = !DILocation(line: 3156, column: 47, scope: !8575)
!8578 = !DILocation(line: 3156, column: 3, scope: !8575)
!8579 = distinct !{!8579, !8580}
!8580 = !DILocation(line: 3156, column: 3, scope: !8509)
!8581 = !DILocation(line: 3163, column: 17, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8509, file: !512, line: 3163, column: 3)
!8583 = !DILocation(line: 3163, column: 25, scope: !8582)
!8584 = !DILocation(line: 3163, column: 16, scope: !8582)
!8585 = !DILocation(line: 3163, column: 44, scope: !8586)
!8586 = !DILexicalBlockFile(scope: !8582, file: !512, discriminator: 1)
!8587 = !DILocation(line: 3163, column: 52, scope: !8586)
!8588 = !DILocation(line: 3163, column: 43, scope: !8586)
!8589 = !DILocation(line: 3163, column: 42, scope: !8586)
!8590 = !DILocation(line: 3163, column: 42, scope: !8591)
!8591 = !DILexicalBlockFile(scope: !8582, file: !512, discriminator: 2)
!8592 = !DILocation(line: 3163, column: 5, scope: !8593)
!8593 = !DILexicalBlockFile(scope: !8582, file: !512, discriminator: 3)
!8594 = !DILocation(line: 3163, column: 13, scope: !8593)
!8595 = !DILocation(line: 3163, column: 28, scope: !8593)
!8596 = !DILocation(line: 3163, column: 42, scope: !8593)
!8597 = !DILocation(line: 3163, column: 42, scope: !8598)
!8598 = !DILexicalBlockFile(scope: !8582, file: !512, discriminator: 4)
!8599 = !DILocation(line: 3163, column: 16, scope: !8598)
!8600 = !DILocation(line: 3163, column: 16, scope: !8601)
!8601 = !DILexicalBlockFile(scope: !8582, file: !512, discriminator: 5)
!8602 = !DILocation(line: 3163, column: 16, scope: !8603)
!8603 = !DILexicalBlockFile(scope: !8582, file: !512, discriminator: 6)
!8604 = !DILocation(line: 3163, column: 13, scope: !8603)
!8605 = !DILocation(line: 3163, column: 8, scope: !8603)
!8606 = !DILocation(line: 3163, column: 6, scope: !8607)
!8607 = !DILexicalBlockFile(scope: !8608, file: !512, discriminator: 7)
!8608 = distinct !DILexicalBlock(scope: !8582, file: !512, line: 3163, column: 3)
!8609 = !DILocation(line: 3163, column: 5, scope: !8607)
!8610 = !DILocation(line: 3163, column: 10, scope: !8607)
!8611 = !DILocation(line: 3163, column: 23, scope: !8612)
!8612 = !DILexicalBlockFile(scope: !8608, file: !512, discriminator: 8)
!8613 = !DILocation(line: 3163, column: 28, scope: !8612)
!8614 = !DILocation(line: 3163, column: 21, scope: !8612)
!8615 = !DILocation(line: 3163, column: 19, scope: !8612)
!8616 = !DILocation(line: 3163, column: 3, scope: !8617)
!8617 = !DILexicalBlockFile(scope: !8582, file: !512, discriminator: 9)
!8618 = !DILocation(line: 3164, column: 10, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8608, file: !512, line: 3163, column: 60)
!8620 = !DILocation(line: 3164, column: 14, scope: !8619)
!8621 = !DILocation(line: 3164, column: 8, scope: !8619)
!8622 = !DILocation(line: 3166, column: 8, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8619, file: !512, line: 3166, column: 8)
!8624 = !DILocation(line: 3166, column: 30, scope: !8623)
!8625 = !DILocation(line: 3166, column: 33, scope: !8626)
!8626 = !DILexicalBlockFile(scope: !8623, file: !512, discriminator: 1)
!8627 = !DILocation(line: 3166, column: 37, scope: !8626)
!8628 = !DILocation(line: 3166, column: 8, scope: !8626)
!8629 = !DILocation(line: 3167, column: 143, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8623, file: !512, line: 3166, column: 45)
!8631 = !DILocation(line: 3167, column: 151, scope: !8630)
!8632 = !DILocation(line: 3167, column: 158, scope: !8630)
!8633 = !DILocation(line: 3167, column: 163, scope: !8630)
!8634 = !DILocation(line: 3167, column: 5, scope: !8630)
!8635 = !DILocation(line: 3168, column: 5, scope: !8630)
!8636 = !DILocation(line: 3168, column: 9, scope: !8630)
!8637 = !DILocation(line: 3168, column: 16, scope: !8630)
!8638 = !DILocation(line: 3169, column: 4, scope: !8630)
!8639 = !DILocation(line: 3171, column: 18, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8619, file: !512, line: 3171, column: 4)
!8641 = !DILocation(line: 3171, column: 26, scope: !8640)
!8642 = !DILocation(line: 3171, column: 17, scope: !8640)
!8643 = !DILocation(line: 3171, column: 47, scope: !8644)
!8644 = !DILexicalBlockFile(scope: !8640, file: !512, discriminator: 1)
!8645 = !DILocation(line: 3171, column: 55, scope: !8644)
!8646 = !DILocation(line: 3171, column: 46, scope: !8644)
!8647 = !DILocation(line: 3171, column: 45, scope: !8644)
!8648 = !DILocation(line: 3171, column: 45, scope: !8649)
!8649 = !DILexicalBlockFile(scope: !8640, file: !512, discriminator: 2)
!8650 = !DILocation(line: 3171, column: 6, scope: !8651)
!8651 = !DILexicalBlockFile(scope: !8640, file: !512, discriminator: 3)
!8652 = !DILocation(line: 3171, column: 14, scope: !8651)
!8653 = !DILocation(line: 3171, column: 31, scope: !8651)
!8654 = !DILocation(line: 3171, column: 45, scope: !8651)
!8655 = !DILocation(line: 3171, column: 45, scope: !8656)
!8656 = !DILexicalBlockFile(scope: !8640, file: !512, discriminator: 4)
!8657 = !DILocation(line: 3171, column: 17, scope: !8656)
!8658 = !DILocation(line: 3171, column: 17, scope: !8659)
!8659 = !DILexicalBlockFile(scope: !8640, file: !512, discriminator: 5)
!8660 = !DILocation(line: 3171, column: 17, scope: !8661)
!8661 = !DILexicalBlockFile(scope: !8640, file: !512, discriminator: 6)
!8662 = !DILocation(line: 3171, column: 14, scope: !8661)
!8663 = !DILocation(line: 3171, column: 9, scope: !8661)
!8664 = !DILocation(line: 3171, column: 7, scope: !8665)
!8665 = !DILexicalBlockFile(scope: !8666, file: !512, discriminator: 7)
!8666 = distinct !DILexicalBlock(scope: !8640, file: !512, line: 3171, column: 4)
!8667 = !DILocation(line: 3171, column: 6, scope: !8665)
!8668 = !DILocation(line: 3171, column: 11, scope: !8665)
!8669 = !DILocation(line: 3171, column: 26, scope: !8670)
!8670 = !DILexicalBlockFile(scope: !8666, file: !512, discriminator: 8)
!8671 = !DILocation(line: 3171, column: 31, scope: !8670)
!8672 = !DILocation(line: 3171, column: 24, scope: !8670)
!8673 = !DILocation(line: 3171, column: 22, scope: !8670)
!8674 = !DILocation(line: 3171, column: 4, scope: !8675)
!8675 = !DILexicalBlockFile(scope: !8640, file: !512, discriminator: 9)
!8676 = !DILocation(line: 3172, column: 30, scope: !8666)
!8677 = !DILocation(line: 3172, column: 36, scope: !8666)
!8678 = !DILocation(line: 3172, column: 5, scope: !8666)
!8679 = !DILocation(line: 3171, column: 51, scope: !8680)
!8680 = !DILexicalBlockFile(scope: !8666, file: !512, discriminator: 10)
!8681 = !DILocation(line: 3171, column: 56, scope: !8680)
!8682 = !DILocation(line: 3171, column: 48, scope: !8680)
!8683 = !DILocation(line: 3171, column: 4, scope: !8680)
!8684 = distinct !{!8684, !8685}
!8685 = !DILocation(line: 3171, column: 4, scope: !8619)
!8686 = !DILocation(line: 3173, column: 3, scope: !8619)
!8687 = !DILocation(line: 3163, column: 48, scope: !8688)
!8688 = !DILexicalBlockFile(scope: !8608, file: !512, discriminator: 10)
!8689 = !DILocation(line: 3163, column: 53, scope: !8688)
!8690 = !DILocation(line: 3163, column: 45, scope: !8688)
!8691 = !DILocation(line: 3163, column: 3, scope: !8688)
!8692 = distinct !{!8692, !8693}
!8693 = !DILocation(line: 3163, column: 3, scope: !8509)
!8694 = !DILocation(line: 3176, column: 17, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8509, file: !512, line: 3176, column: 3)
!8696 = !DILocation(line: 3176, column: 25, scope: !8695)
!8697 = !DILocation(line: 3176, column: 16, scope: !8695)
!8698 = !DILocation(line: 3176, column: 42, scope: !8699)
!8699 = !DILexicalBlockFile(scope: !8695, file: !512, discriminator: 1)
!8700 = !DILocation(line: 3176, column: 50, scope: !8699)
!8701 = !DILocation(line: 3176, column: 41, scope: !8699)
!8702 = !DILocation(line: 3176, column: 40, scope: !8699)
!8703 = !DILocation(line: 3176, column: 40, scope: !8704)
!8704 = !DILexicalBlockFile(scope: !8695, file: !512, discriminator: 2)
!8705 = !DILocation(line: 3176, column: 5, scope: !8706)
!8706 = !DILexicalBlockFile(scope: !8695, file: !512, discriminator: 3)
!8707 = !DILocation(line: 3176, column: 13, scope: !8706)
!8708 = !DILocation(line: 3176, column: 26, scope: !8706)
!8709 = !DILocation(line: 3176, column: 40, scope: !8706)
!8710 = !DILocation(line: 3176, column: 40, scope: !8711)
!8711 = !DILexicalBlockFile(scope: !8695, file: !512, discriminator: 4)
!8712 = !DILocation(line: 3176, column: 16, scope: !8711)
!8713 = !DILocation(line: 3176, column: 16, scope: !8714)
!8714 = !DILexicalBlockFile(scope: !8695, file: !512, discriminator: 5)
!8715 = !DILocation(line: 3176, column: 16, scope: !8716)
!8716 = !DILexicalBlockFile(scope: !8695, file: !512, discriminator: 6)
!8717 = !DILocation(line: 3176, column: 13, scope: !8716)
!8718 = !DILocation(line: 3176, column: 8, scope: !8716)
!8719 = !DILocation(line: 3176, column: 6, scope: !8720)
!8720 = !DILexicalBlockFile(scope: !8721, file: !512, discriminator: 7)
!8721 = distinct !DILexicalBlock(scope: !8695, file: !512, line: 3176, column: 3)
!8722 = !DILocation(line: 3176, column: 5, scope: !8720)
!8723 = !DILocation(line: 3176, column: 10, scope: !8720)
!8724 = !DILocation(line: 3176, column: 24, scope: !8725)
!8725 = !DILexicalBlockFile(scope: !8721, file: !512, discriminator: 8)
!8726 = !DILocation(line: 3176, column: 29, scope: !8725)
!8727 = !DILocation(line: 3176, column: 22, scope: !8725)
!8728 = !DILocation(line: 3176, column: 20, scope: !8725)
!8729 = !DILocation(line: 3176, column: 3, scope: !8730)
!8730 = !DILexicalBlockFile(scope: !8695, file: !512, discriminator: 9)
!8731 = !DILocation(line: 3177, column: 8, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8733, file: !512, line: 3177, column: 8)
!8733 = distinct !DILexicalBlock(scope: !8721, file: !512, line: 3176, column: 61)
!8734 = !DILocation(line: 3177, column: 30, scope: !8732)
!8735 = !DILocation(line: 3177, column: 33, scope: !8736)
!8736 = !DILexicalBlockFile(scope: !8732, file: !512, discriminator: 1)
!8737 = !DILocation(line: 3177, column: 38, scope: !8736)
!8738 = !DILocation(line: 3177, column: 8, scope: !8736)
!8739 = !DILocation(line: 3178, column: 142, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8732, file: !512, line: 3177, column: 46)
!8741 = !DILocation(line: 3178, column: 150, scope: !8740)
!8742 = !DILocation(line: 3178, column: 157, scope: !8740)
!8743 = !DILocation(line: 3178, column: 162, scope: !8740)
!8744 = !DILocation(line: 3178, column: 168, scope: !8740)
!8745 = !DILocation(line: 3178, column: 5, scope: !8740)
!8746 = !DILocation(line: 3179, column: 5, scope: !8740)
!8747 = !DILocation(line: 3179, column: 10, scope: !8740)
!8748 = !DILocation(line: 3179, column: 17, scope: !8740)
!8749 = !DILocation(line: 3180, column: 4, scope: !8740)
!8750 = !DILocation(line: 3182, column: 18, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8733, file: !512, line: 3182, column: 4)
!8752 = !DILocation(line: 3182, column: 26, scope: !8751)
!8753 = !DILocation(line: 3182, column: 17, scope: !8751)
!8754 = !DILocation(line: 3182, column: 47, scope: !8755)
!8755 = !DILexicalBlockFile(scope: !8751, file: !512, discriminator: 1)
!8756 = !DILocation(line: 3182, column: 55, scope: !8755)
!8757 = !DILocation(line: 3182, column: 46, scope: !8755)
!8758 = !DILocation(line: 3182, column: 45, scope: !8755)
!8759 = !DILocation(line: 3182, column: 45, scope: !8760)
!8760 = !DILexicalBlockFile(scope: !8751, file: !512, discriminator: 2)
!8761 = !DILocation(line: 3182, column: 6, scope: !8762)
!8762 = !DILexicalBlockFile(scope: !8751, file: !512, discriminator: 3)
!8763 = !DILocation(line: 3182, column: 14, scope: !8762)
!8764 = !DILocation(line: 3182, column: 31, scope: !8762)
!8765 = !DILocation(line: 3182, column: 45, scope: !8762)
!8766 = !DILocation(line: 3182, column: 45, scope: !8767)
!8767 = !DILexicalBlockFile(scope: !8751, file: !512, discriminator: 4)
!8768 = !DILocation(line: 3182, column: 17, scope: !8767)
!8769 = !DILocation(line: 3182, column: 17, scope: !8770)
!8770 = !DILexicalBlockFile(scope: !8751, file: !512, discriminator: 5)
!8771 = !DILocation(line: 3182, column: 17, scope: !8772)
!8772 = !DILexicalBlockFile(scope: !8751, file: !512, discriminator: 6)
!8773 = !DILocation(line: 3182, column: 14, scope: !8772)
!8774 = !DILocation(line: 3182, column: 9, scope: !8772)
!8775 = !DILocation(line: 3182, column: 7, scope: !8776)
!8776 = !DILexicalBlockFile(scope: !8777, file: !512, discriminator: 7)
!8777 = distinct !DILexicalBlock(scope: !8751, file: !512, line: 3182, column: 4)
!8778 = !DILocation(line: 3182, column: 6, scope: !8776)
!8779 = !DILocation(line: 3182, column: 11, scope: !8776)
!8780 = !DILocation(line: 3182, column: 26, scope: !8781)
!8781 = !DILexicalBlockFile(scope: !8777, file: !512, discriminator: 8)
!8782 = !DILocation(line: 3182, column: 31, scope: !8781)
!8783 = !DILocation(line: 3182, column: 24, scope: !8781)
!8784 = !DILocation(line: 3182, column: 22, scope: !8781)
!8785 = !DILocation(line: 3182, column: 4, scope: !8786)
!8786 = !DILexicalBlockFile(scope: !8751, file: !512, discriminator: 9)
!8787 = !DILocation(line: 3183, column: 28, scope: !8777)
!8788 = !DILocation(line: 3183, column: 34, scope: !8777)
!8789 = !DILocation(line: 3183, column: 5, scope: !8777)
!8790 = !DILocation(line: 3182, column: 51, scope: !8791)
!8791 = !DILexicalBlockFile(scope: !8777, file: !512, discriminator: 10)
!8792 = !DILocation(line: 3182, column: 56, scope: !8791)
!8793 = !DILocation(line: 3182, column: 48, scope: !8791)
!8794 = !DILocation(line: 3182, column: 4, scope: !8791)
!8795 = distinct !{!8795, !8796}
!8796 = !DILocation(line: 3182, column: 4, scope: !8733)
!8797 = !DILocation(line: 3184, column: 3, scope: !8733)
!8798 = !DILocation(line: 3176, column: 49, scope: !8799)
!8799 = !DILexicalBlockFile(scope: !8721, file: !512, discriminator: 10)
!8800 = !DILocation(line: 3176, column: 54, scope: !8799)
!8801 = !DILocation(line: 3176, column: 46, scope: !8799)
!8802 = !DILocation(line: 3176, column: 3, scope: !8799)
!8803 = distinct !{!8803, !8804}
!8804 = !DILocation(line: 3176, column: 3, scope: !8509)
!8805 = !DILocation(line: 3200, column: 17, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8509, file: !512, line: 3200, column: 3)
!8807 = !DILocation(line: 3200, column: 25, scope: !8806)
!8808 = !DILocation(line: 3200, column: 16, scope: !8806)
!8809 = !DILocation(line: 3200, column: 41, scope: !8810)
!8810 = !DILexicalBlockFile(scope: !8806, file: !512, discriminator: 1)
!8811 = !DILocation(line: 3200, column: 49, scope: !8810)
!8812 = !DILocation(line: 3200, column: 40, scope: !8810)
!8813 = !DILocation(line: 3200, column: 39, scope: !8810)
!8814 = !DILocation(line: 3200, column: 39, scope: !8815)
!8815 = !DILexicalBlockFile(scope: !8806, file: !512, discriminator: 2)
!8816 = !DILocation(line: 3200, column: 5, scope: !8817)
!8817 = !DILexicalBlockFile(scope: !8806, file: !512, discriminator: 3)
!8818 = !DILocation(line: 3200, column: 13, scope: !8817)
!8819 = !DILocation(line: 3200, column: 25, scope: !8817)
!8820 = !DILocation(line: 3200, column: 39, scope: !8817)
!8821 = !DILocation(line: 3200, column: 39, scope: !8822)
!8822 = !DILexicalBlockFile(scope: !8806, file: !512, discriminator: 4)
!8823 = !DILocation(line: 3200, column: 16, scope: !8822)
!8824 = !DILocation(line: 3200, column: 16, scope: !8825)
!8825 = !DILexicalBlockFile(scope: !8806, file: !512, discriminator: 5)
!8826 = !DILocation(line: 3200, column: 16, scope: !8827)
!8827 = !DILexicalBlockFile(scope: !8806, file: !512, discriminator: 6)
!8828 = !DILocation(line: 3200, column: 13, scope: !8827)
!8829 = !DILocation(line: 3200, column: 8, scope: !8827)
!8830 = !DILocation(line: 3200, column: 6, scope: !8831)
!8831 = !DILexicalBlockFile(scope: !8832, file: !512, discriminator: 7)
!8832 = distinct !DILexicalBlock(scope: !8806, file: !512, line: 3200, column: 3)
!8833 = !DILocation(line: 3200, column: 5, scope: !8831)
!8834 = !DILocation(line: 3200, column: 10, scope: !8831)
!8835 = !DILocation(line: 3200, column: 24, scope: !8836)
!8836 = !DILexicalBlockFile(scope: !8832, file: !512, discriminator: 8)
!8837 = !DILocation(line: 3200, column: 29, scope: !8836)
!8838 = !DILocation(line: 3200, column: 22, scope: !8836)
!8839 = !DILocation(line: 3200, column: 20, scope: !8836)
!8840 = !DILocation(line: 3200, column: 3, scope: !8841)
!8841 = !DILexicalBlockFile(scope: !8806, file: !512, discriminator: 9)
!8842 = !DILocation(line: 3201, column: 8, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !512, line: 3201, column: 8)
!8844 = distinct !DILexicalBlock(scope: !8832, file: !512, line: 3200, column: 61)
!8845 = !DILocation(line: 3201, column: 30, scope: !8843)
!8846 = !DILocation(line: 3201, column: 33, scope: !8847)
!8847 = !DILexicalBlockFile(scope: !8843, file: !512, discriminator: 1)
!8848 = !DILocation(line: 3201, column: 38, scope: !8847)
!8849 = !DILocation(line: 3201, column: 8, scope: !8847)
!8850 = !DILocation(line: 3202, column: 146, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8843, file: !512, line: 3201, column: 46)
!8852 = !DILocation(line: 3202, column: 154, scope: !8851)
!8853 = !DILocation(line: 3202, column: 161, scope: !8851)
!8854 = !DILocation(line: 3202, column: 166, scope: !8851)
!8855 = !DILocation(line: 3202, column: 171, scope: !8851)
!8856 = !DILocation(line: 3202, column: 5, scope: !8851)
!8857 = !DILocation(line: 3203, column: 5, scope: !8851)
!8858 = !DILocation(line: 3203, column: 10, scope: !8851)
!8859 = !DILocation(line: 3203, column: 17, scope: !8851)
!8860 = !DILocation(line: 3204, column: 4, scope: !8851)
!8861 = !DILocation(line: 3206, column: 18, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8844, file: !512, line: 3206, column: 4)
!8863 = !DILocation(line: 3206, column: 26, scope: !8862)
!8864 = !DILocation(line: 3206, column: 17, scope: !8862)
!8865 = !DILocation(line: 3206, column: 47, scope: !8866)
!8866 = !DILexicalBlockFile(scope: !8862, file: !512, discriminator: 1)
!8867 = !DILocation(line: 3206, column: 55, scope: !8866)
!8868 = !DILocation(line: 3206, column: 46, scope: !8866)
!8869 = !DILocation(line: 3206, column: 45, scope: !8866)
!8870 = !DILocation(line: 3206, column: 45, scope: !8871)
!8871 = !DILexicalBlockFile(scope: !8862, file: !512, discriminator: 2)
!8872 = !DILocation(line: 3206, column: 6, scope: !8873)
!8873 = !DILexicalBlockFile(scope: !8862, file: !512, discriminator: 3)
!8874 = !DILocation(line: 3206, column: 14, scope: !8873)
!8875 = !DILocation(line: 3206, column: 31, scope: !8873)
!8876 = !DILocation(line: 3206, column: 45, scope: !8873)
!8877 = !DILocation(line: 3206, column: 45, scope: !8878)
!8878 = !DILexicalBlockFile(scope: !8862, file: !512, discriminator: 4)
!8879 = !DILocation(line: 3206, column: 17, scope: !8878)
!8880 = !DILocation(line: 3206, column: 17, scope: !8881)
!8881 = !DILexicalBlockFile(scope: !8862, file: !512, discriminator: 5)
!8882 = !DILocation(line: 3206, column: 17, scope: !8883)
!8883 = !DILexicalBlockFile(scope: !8862, file: !512, discriminator: 6)
!8884 = !DILocation(line: 3206, column: 14, scope: !8883)
!8885 = !DILocation(line: 3206, column: 9, scope: !8883)
!8886 = !DILocation(line: 3206, column: 7, scope: !8887)
!8887 = !DILexicalBlockFile(scope: !8888, file: !512, discriminator: 7)
!8888 = distinct !DILexicalBlock(scope: !8862, file: !512, line: 3206, column: 4)
!8889 = !DILocation(line: 3206, column: 6, scope: !8887)
!8890 = !DILocation(line: 3206, column: 11, scope: !8887)
!8891 = !DILocation(line: 3206, column: 26, scope: !8892)
!8892 = !DILexicalBlockFile(scope: !8888, file: !512, discriminator: 8)
!8893 = !DILocation(line: 3206, column: 31, scope: !8892)
!8894 = !DILocation(line: 3206, column: 24, scope: !8892)
!8895 = !DILocation(line: 3206, column: 22, scope: !8892)
!8896 = !DILocation(line: 3206, column: 4, scope: !8897)
!8897 = !DILexicalBlockFile(scope: !8862, file: !512, discriminator: 9)
!8898 = !DILocation(line: 3207, column: 27, scope: !8888)
!8899 = !DILocation(line: 3207, column: 33, scope: !8888)
!8900 = !DILocation(line: 3207, column: 38, scope: !8888)
!8901 = !DILocation(line: 3207, column: 43, scope: !8888)
!8902 = !DILocation(line: 3207, column: 48, scope: !8888)
!8903 = !DILocation(line: 3207, column: 5, scope: !8888)
!8904 = !DILocation(line: 3206, column: 51, scope: !8905)
!8905 = !DILexicalBlockFile(scope: !8888, file: !512, discriminator: 10)
!8906 = !DILocation(line: 3206, column: 56, scope: !8905)
!8907 = !DILocation(line: 3206, column: 48, scope: !8905)
!8908 = !DILocation(line: 3206, column: 4, scope: !8905)
!8909 = distinct !{!8909, !8910}
!8910 = !DILocation(line: 3206, column: 4, scope: !8844)
!8911 = !DILocation(line: 3208, column: 3, scope: !8844)
!8912 = !DILocation(line: 3200, column: 49, scope: !8913)
!8913 = !DILexicalBlockFile(scope: !8832, file: !512, discriminator: 10)
!8914 = !DILocation(line: 3200, column: 54, scope: !8913)
!8915 = !DILocation(line: 3200, column: 46, scope: !8913)
!8916 = !DILocation(line: 3200, column: 3, scope: !8913)
!8917 = distinct !{!8917, !8918}
!8918 = !DILocation(line: 3200, column: 3, scope: !8509)
!8919 = !DILocation(line: 3211, column: 7, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8509, file: !512, line: 3211, column: 7)
!8921 = !DILocation(line: 3211, column: 15, scope: !8920)
!8922 = !DILocation(line: 3211, column: 26, scope: !8920)
!8923 = !DILocation(line: 3211, column: 7, scope: !8509)
!8924 = !DILocation(line: 3212, column: 8, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !512, line: 3212, column: 8)
!8926 = distinct !DILexicalBlock(scope: !8920, file: !512, line: 3211, column: 33)
!8927 = !DILocation(line: 3212, column: 21, scope: !8925)
!8928 = !DILocation(line: 3212, column: 37, scope: !8925)
!8929 = !DILocation(line: 3212, column: 8, scope: !8926)
!8930 = !DILocation(line: 3213, column: 26, scope: !8925)
!8931 = !DILocation(line: 3213, column: 39, scope: !8925)
!8932 = !DILocation(line: 3213, column: 5, scope: !8925)
!8933 = !DILocation(line: 3213, column: 13, scope: !8925)
!8934 = !DILocation(line: 3213, column: 24, scope: !8925)
!8935 = !DILocation(line: 3214, column: 13, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8925, file: !512, line: 3214, column: 13)
!8937 = !DILocation(line: 3214, column: 26, scope: !8936)
!8938 = !DILocation(line: 3214, column: 37, scope: !8936)
!8939 = !DILocation(line: 3214, column: 13, scope: !8925)
!8940 = !DILocation(line: 3215, column: 26, scope: !8936)
!8941 = !DILocation(line: 3215, column: 39, scope: !8936)
!8942 = !DILocation(line: 3215, column: 5, scope: !8936)
!8943 = !DILocation(line: 3215, column: 13, scope: !8936)
!8944 = !DILocation(line: 3215, column: 24, scope: !8936)
!8945 = !DILocation(line: 3217, column: 5, scope: !8936)
!8946 = !DILocation(line: 3217, column: 13, scope: !8936)
!8947 = !DILocation(line: 3217, column: 24, scope: !8936)
!8948 = !DILocation(line: 3218, column: 3, scope: !8926)
!8949 = !DILocation(line: 3219, column: 2, scope: !8509)
!8950 = !DILocation(line: 3149, column: 48, scope: !8951)
!8951 = !DILexicalBlockFile(scope: !8497, file: !512, discriminator: 10)
!8952 = !DILocation(line: 3149, column: 52, scope: !8951)
!8953 = !DILocation(line: 3149, column: 45, scope: !8951)
!8954 = !DILocation(line: 3149, column: 2, scope: !8951)
!8955 = distinct !{!8955, !8956}
!8956 = !DILocation(line: 3149, column: 2, scope: !8431)
!8957 = !DILocation(line: 3220, column: 1, scope: !8431)
!8958 = distinct !DISubprogram(name: "process_static_entries", scope: !512, file: !512, line: 3224, type: !524, isLocal: true, isDefinition: true, scopeLine: 3225, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!8959 = !DILocalVariable(name: "e", scope: !8958, file: !512, line: 3226, type: !984)
!8960 = !DILocation(line: 3226, column: 10, scope: !8958)
!8961 = !DILocalVariable(name: "sroute", scope: !8958, file: !512, line: 3227, type: !5924)
!8962 = !DILocation(line: 3227, column: 14, scope: !8958)
!8963 = !DILocalVariable(name: "srule", scope: !8958, file: !512, line: 3228, type: !6018)
!8964 = !DILocation(line: 3228, column: 13, scope: !8958)
!8965 = !DILocation(line: 3230, column: 15, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8958, file: !512, line: 3230, column: 2)
!8967 = !DILocation(line: 3230, column: 26, scope: !8966)
!8968 = !DILocation(line: 3230, column: 14, scope: !8966)
!8969 = !DILocation(line: 3230, column: 46, scope: !8970)
!8970 = !DILexicalBlockFile(scope: !8966, file: !512, discriminator: 1)
!8971 = !DILocation(line: 3230, column: 57, scope: !8970)
!8972 = !DILocation(line: 3230, column: 45, scope: !8970)
!8973 = !DILocation(line: 3230, column: 44, scope: !8970)
!8974 = !DILocation(line: 3230, column: 44, scope: !8975)
!8975 = !DILexicalBlockFile(scope: !8966, file: !512, discriminator: 2)
!8976 = !DILocation(line: 3230, column: 4, scope: !8977)
!8977 = !DILexicalBlockFile(scope: !8966, file: !512, discriminator: 3)
!8978 = !DILocation(line: 3230, column: 15, scope: !8977)
!8979 = !DILocation(line: 3230, column: 31, scope: !8977)
!8980 = !DILocation(line: 3230, column: 44, scope: !8977)
!8981 = !DILocation(line: 3230, column: 44, scope: !8982)
!8982 = !DILexicalBlockFile(scope: !8966, file: !512, discriminator: 4)
!8983 = !DILocation(line: 3230, column: 14, scope: !8982)
!8984 = !DILocation(line: 3230, column: 14, scope: !8985)
!8985 = !DILexicalBlockFile(scope: !8966, file: !512, discriminator: 5)
!8986 = !DILocation(line: 3230, column: 14, scope: !8987)
!8987 = !DILexicalBlockFile(scope: !8966, file: !512, discriminator: 6)
!8988 = !DILocation(line: 3230, column: 11, scope: !8987)
!8989 = !DILocation(line: 3230, column: 7, scope: !8987)
!8990 = !DILocation(line: 3230, column: 5, scope: !8991)
!8991 = !DILexicalBlockFile(scope: !8992, file: !512, discriminator: 7)
!8992 = distinct !DILexicalBlock(scope: !8966, file: !512, line: 3230, column: 2)
!8993 = !DILocation(line: 3230, column: 4, scope: !8991)
!8994 = !DILocation(line: 3230, column: 8, scope: !8991)
!8995 = !DILocation(line: 3230, column: 25, scope: !8996)
!8996 = !DILexicalBlockFile(scope: !8992, file: !512, discriminator: 8)
!8997 = !DILocation(line: 3230, column: 29, scope: !8996)
!8998 = !DILocation(line: 3230, column: 23, scope: !8996)
!8999 = !DILocation(line: 3230, column: 21, scope: !8996)
!9000 = !DILocation(line: 3230, column: 2, scope: !9001)
!9001 = !DILexicalBlockFile(scope: !8966, file: !512, discriminator: 9)
!9002 = !DILocation(line: 3231, column: 8, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !9004, file: !512, line: 3231, column: 7)
!9004 = distinct !DILexicalBlock(scope: !8992, file: !512, line: 3230, column: 59)
!9005 = !DILocation(line: 3231, column: 16, scope: !9003)
!9006 = !DILocation(line: 3231, column: 7, scope: !9004)
!9007 = !DILocation(line: 3232, column: 4, scope: !9003)
!9008 = !DILocation(line: 3234, column: 7, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9004, file: !512, line: 3234, column: 7)
!9010 = !DILocation(line: 3234, column: 15, scope: !9009)
!9011 = !DILocation(line: 3234, column: 22, scope: !9009)
!9012 = !DILocation(line: 3234, column: 7, scope: !9004)
!9013 = !DILocation(line: 3235, column: 24, scope: !9009)
!9014 = !DILocation(line: 3235, column: 4, scope: !9009)
!9015 = !DILocation(line: 3237, column: 24, scope: !9009)
!9016 = !DILocation(line: 3238, column: 2, scope: !9004)
!9017 = !DILocation(line: 3230, column: 48, scope: !9018)
!9018 = !DILexicalBlockFile(scope: !8992, file: !512, discriminator: 10)
!9019 = !DILocation(line: 3230, column: 52, scope: !9018)
!9020 = !DILocation(line: 3230, column: 45, scope: !9018)
!9021 = !DILocation(line: 3230, column: 2, scope: !9018)
!9022 = distinct !{!9022, !9023}
!9023 = !DILocation(line: 3230, column: 2, scope: !8958)
!9024 = !DILocation(line: 3239, column: 15, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !8958, file: !512, line: 3239, column: 2)
!9026 = !DILocation(line: 3239, column: 26, scope: !9025)
!9027 = !DILocation(line: 3239, column: 14, scope: !9025)
!9028 = !DILocation(line: 3239, column: 45, scope: !9029)
!9029 = !DILexicalBlockFile(scope: !9025, file: !512, discriminator: 1)
!9030 = !DILocation(line: 3239, column: 56, scope: !9029)
!9031 = !DILocation(line: 3239, column: 44, scope: !9029)
!9032 = !DILocation(line: 3239, column: 43, scope: !9029)
!9033 = !DILocation(line: 3239, column: 43, scope: !9034)
!9034 = !DILexicalBlockFile(scope: !9025, file: !512, discriminator: 2)
!9035 = !DILocation(line: 3239, column: 4, scope: !9036)
!9036 = !DILexicalBlockFile(scope: !9025, file: !512, discriminator: 3)
!9037 = !DILocation(line: 3239, column: 15, scope: !9036)
!9038 = !DILocation(line: 3239, column: 30, scope: !9036)
!9039 = !DILocation(line: 3239, column: 43, scope: !9036)
!9040 = !DILocation(line: 3239, column: 43, scope: !9041)
!9041 = !DILexicalBlockFile(scope: !9025, file: !512, discriminator: 4)
!9042 = !DILocation(line: 3239, column: 14, scope: !9041)
!9043 = !DILocation(line: 3239, column: 14, scope: !9044)
!9044 = !DILexicalBlockFile(scope: !9025, file: !512, discriminator: 5)
!9045 = !DILocation(line: 3239, column: 14, scope: !9046)
!9046 = !DILexicalBlockFile(scope: !9025, file: !512, discriminator: 6)
!9047 = !DILocation(line: 3239, column: 11, scope: !9046)
!9048 = !DILocation(line: 3239, column: 7, scope: !9046)
!9049 = !DILocation(line: 3239, column: 5, scope: !9050)
!9050 = !DILexicalBlockFile(scope: !9051, file: !512, discriminator: 7)
!9051 = distinct !DILexicalBlock(scope: !9025, file: !512, line: 3239, column: 2)
!9052 = !DILocation(line: 3239, column: 4, scope: !9050)
!9053 = !DILocation(line: 3239, column: 8, scope: !9050)
!9054 = !DILocation(line: 3239, column: 24, scope: !9055)
!9055 = !DILexicalBlockFile(scope: !9051, file: !512, discriminator: 8)
!9056 = !DILocation(line: 3239, column: 28, scope: !9055)
!9057 = !DILocation(line: 3239, column: 22, scope: !9055)
!9058 = !DILocation(line: 3239, column: 20, scope: !9055)
!9059 = !DILocation(line: 3239, column: 2, scope: !9060)
!9060 = !DILexicalBlockFile(scope: !9025, file: !512, discriminator: 9)
!9061 = !DILocation(line: 3240, column: 8, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !512, line: 3240, column: 7)
!9063 = distinct !DILexicalBlock(scope: !9051, file: !512, line: 3239, column: 58)
!9064 = !DILocation(line: 3240, column: 15, scope: !9062)
!9065 = !DILocation(line: 3240, column: 7, scope: !9063)
!9066 = !DILocation(line: 3241, column: 4, scope: !9062)
!9067 = !DILocation(line: 3243, column: 7, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9063, file: !512, line: 3243, column: 7)
!9069 = !DILocation(line: 3243, column: 14, scope: !9068)
!9070 = !DILocation(line: 3243, column: 21, scope: !9068)
!9071 = !DILocation(line: 3243, column: 7, scope: !9063)
!9072 = !DILocation(line: 3244, column: 23, scope: !9068)
!9073 = !DILocation(line: 3244, column: 4, scope: !9068)
!9074 = !DILocation(line: 3246, column: 23, scope: !9068)
!9075 = !DILocation(line: 3247, column: 2, scope: !9063)
!9076 = !DILocation(line: 3239, column: 47, scope: !9077)
!9077 = !DILexicalBlockFile(scope: !9051, file: !512, discriminator: 10)
!9078 = !DILocation(line: 3239, column: 51, scope: !9077)
!9079 = !DILocation(line: 3239, column: 44, scope: !9077)
!9080 = !DILocation(line: 3239, column: 2, scope: !9077)
!9081 = distinct !{!9081, !9082}
!9082 = !DILocation(line: 3239, column: 2, scope: !8958)
!9083 = !DILocation(line: 3248, column: 1, scope: !8958)
!9084 = distinct !DISubprogram(name: "vrrp_exist", scope: !512, file: !512, line: 2259, type: !9085, isLocal: true, isDefinition: true, scopeLine: 2260, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9085 = !DISubroutineType(types: !9086)
!9086 = !{!537, !537}
!9087 = !DILocalVariable(name: "old_vrrp", arg: 1, scope: !9084, file: !512, line: 2259, type: !537)
!9088 = !DILocation(line: 2259, column: 20, scope: !9084)
!9089 = !DILocalVariable(name: "e", scope: !9084, file: !512, line: 2261, type: !984)
!9090 = !DILocation(line: 2261, column: 10, scope: !9084)
!9091 = !DILocalVariable(name: "vrrp", scope: !9084, file: !512, line: 2262, type: !537)
!9092 = !DILocation(line: 2262, column: 10, scope: !9084)
!9093 = !DILocation(line: 2264, column: 8, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9084, file: !512, line: 2264, column: 6)
!9095 = !DILocation(line: 2264, column: 19, scope: !9094)
!9096 = !DILocation(line: 2264, column: 25, scope: !9094)
!9097 = !DILocation(line: 2264, column: 5, scope: !9094)
!9098 = !DILocation(line: 2264, column: 10, scope: !9099)
!9099 = !DILexicalBlockFile(scope: !9094, file: !512, discriminator: 1)
!9100 = !DILocation(line: 2264, column: 21, scope: !9099)
!9101 = !DILocation(line: 2264, column: 28, scope: !9099)
!9102 = !DILocation(line: 2264, column: 33, scope: !9099)
!9103 = !DILocation(line: 2264, column: 5, scope: !9099)
!9104 = !DILocation(line: 2264, column: 9, scope: !9105)
!9105 = !DILexicalBlockFile(scope: !9094, file: !512, discriminator: 2)
!9106 = !DILocation(line: 2264, column: 20, scope: !9105)
!9107 = !DILocation(line: 2264, column: 27, scope: !9105)
!9108 = !DILocation(line: 2264, column: 32, scope: !9105)
!9109 = !DILocation(line: 2264, column: 6, scope: !9105)
!9110 = !DILocation(line: 2265, column: 3, scope: !9094)
!9111 = !DILocation(line: 2267, column: 14, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9084, file: !512, line: 2267, column: 2)
!9113 = !DILocation(line: 2267, column: 25, scope: !9112)
!9114 = !DILocation(line: 2267, column: 13, scope: !9112)
!9115 = !DILocation(line: 2267, column: 12, scope: !9112)
!9116 = !DILocation(line: 2267, column: 12, scope: !9117)
!9117 = !DILexicalBlockFile(scope: !9112, file: !512, discriminator: 1)
!9118 = !DILocation(line: 2267, column: 13, scope: !9119)
!9119 = !DILexicalBlockFile(scope: !9112, file: !512, discriminator: 2)
!9120 = !DILocation(line: 2267, column: 24, scope: !9119)
!9121 = !DILocation(line: 2267, column: 31, scope: !9119)
!9122 = !DILocation(line: 2267, column: 12, scope: !9119)
!9123 = !DILocation(line: 2267, column: 12, scope: !9124)
!9124 = !DILexicalBlockFile(scope: !9112, file: !512, discriminator: 3)
!9125 = !DILocation(line: 2267, column: 9, scope: !9124)
!9126 = !DILocation(line: 2267, column: 7, scope: !9124)
!9127 = !DILocation(line: 2267, column: 38, scope: !9128)
!9128 = !DILexicalBlockFile(scope: !9129, file: !512, discriminator: 4)
!9129 = distinct !DILexicalBlock(scope: !9112, file: !512, line: 2267, column: 2)
!9130 = !DILocation(line: 2267, column: 2, scope: !9128)
!9131 = !DILocation(line: 2268, column: 12, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9129, file: !512, line: 2267, column: 60)
!9133 = !DILocation(line: 2268, column: 16, scope: !9132)
!9134 = !DILocation(line: 2268, column: 10, scope: !9132)
!9135 = !DILocation(line: 2268, column: 8, scope: !9132)
!9136 = !DILocation(line: 2269, column: 7, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9132, file: !512, line: 2269, column: 7)
!9138 = !DILocation(line: 2269, column: 13, scope: !9137)
!9139 = !DILocation(line: 2269, column: 21, scope: !9137)
!9140 = !DILocation(line: 2269, column: 31, scope: !9137)
!9141 = !DILocation(line: 2269, column: 18, scope: !9137)
!9142 = !DILocation(line: 2269, column: 36, scope: !9137)
!9143 = !DILocation(line: 2270, column: 7, scope: !9137)
!9144 = !DILocation(line: 2270, column: 13, scope: !9137)
!9145 = !DILocation(line: 2270, column: 23, scope: !9137)
!9146 = !DILocation(line: 2270, column: 33, scope: !9137)
!9147 = !DILocation(line: 2270, column: 20, scope: !9137)
!9148 = !DILocation(line: 2269, column: 7, scope: !9149)
!9149 = !DILexicalBlockFile(scope: !9132, file: !512, discriminator: 1)
!9150 = !DILocation(line: 2271, column: 4, scope: !9137)
!9151 = !DILocation(line: 2277, column: 34, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9132, file: !512, line: 2277, column: 7)
!9153 = !DILocation(line: 2277, column: 40, scope: !9152)
!9154 = !DILocation(line: 2277, column: 7, scope: !9152)
!9155 = !DILocation(line: 2277, column: 82, scope: !9152)
!9156 = !DILocation(line: 2277, column: 92, scope: !9152)
!9157 = !DILocation(line: 2277, column: 55, scope: !9158)
!9158 = !DILexicalBlockFile(scope: !9152, file: !512, discriminator: 1)
!9159 = !DILocation(line: 2277, column: 55, scope: !9152)
!9160 = !DILocation(line: 2277, column: 52, scope: !9152)
!9161 = !DILocation(line: 2277, column: 7, scope: !9132)
!9162 = !DILocation(line: 2278, column: 4, scope: !9152)
!9163 = !DILocation(line: 2279, column: 35, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9132, file: !512, line: 2279, column: 7)
!9165 = !DILocation(line: 2279, column: 41, scope: !9164)
!9166 = !DILocation(line: 2279, column: 8, scope: !9164)
!9167 = !DILocation(line: 2279, column: 7, scope: !9132)
!9168 = !DILocation(line: 2280, column: 8, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !512, line: 2280, column: 8)
!9170 = distinct !DILexicalBlock(scope: !9164, file: !512, line: 2279, column: 54)
!9171 = !DILocation(line: 2280, column: 14, scope: !9169)
!9172 = !DILocation(line: 2280, column: 19, scope: !9169)
!9173 = !DILocation(line: 2280, column: 30, scope: !9169)
!9174 = !DILocation(line: 2280, column: 40, scope: !9169)
!9175 = !DILocation(line: 2280, column: 45, scope: !9169)
!9176 = !DILocation(line: 2280, column: 27, scope: !9169)
!9177 = !DILocation(line: 2280, column: 8, scope: !9170)
!9178 = !DILocation(line: 2281, column: 12, scope: !9169)
!9179 = !DILocation(line: 2281, column: 5, scope: !9169)
!9180 = !DILocation(line: 2282, column: 4, scope: !9170)
!9181 = !DILocation(line: 2285, column: 7, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9132, file: !512, line: 2285, column: 7)
!9183 = !DILocation(line: 2285, column: 13, scope: !9182)
!9184 = !DILocation(line: 2285, column: 18, scope: !9182)
!9185 = !DILocation(line: 2285, column: 28, scope: !9182)
!9186 = !DILocation(line: 2285, column: 39, scope: !9182)
!9187 = !DILocation(line: 2285, column: 49, scope: !9182)
!9188 = !DILocation(line: 2285, column: 54, scope: !9182)
!9189 = !DILocation(line: 2285, column: 64, scope: !9182)
!9190 = !DILocation(line: 2285, column: 36, scope: !9182)
!9191 = !DILocation(line: 2285, column: 7, scope: !9132)
!9192 = !DILocation(line: 2286, column: 11, scope: !9182)
!9193 = !DILocation(line: 2286, column: 4, scope: !9182)
!9194 = !DILocation(line: 2288, column: 2, scope: !9132)
!9195 = !DILocation(line: 2267, column: 49, scope: !9196)
!9196 = !DILexicalBlockFile(scope: !9129, file: !512, discriminator: 5)
!9197 = !DILocation(line: 2267, column: 53, scope: !9196)
!9198 = !DILocation(line: 2267, column: 46, scope: !9196)
!9199 = !DILocation(line: 2267, column: 2, scope: !9196)
!9200 = distinct !{!9200, !9201}
!9201 = !DILocation(line: 2267, column: 2, scope: !9084)
!9202 = !DILocation(line: 2290, column: 2, scope: !9084)
!9203 = !DILocation(line: 2291, column: 1, scope: !9084)
!9204 = distinct !DISubprogram(name: "vrrp_restore_interfaces_startup", scope: !512, file: !512, line: 3521, type: !524, isLocal: false, isDefinition: true, scopeLine: 3522, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9205 = !DILocalVariable(name: "e", scope: !9204, file: !512, line: 3523, type: !984)
!9206 = !DILocation(line: 3523, column: 10, scope: !9204)
!9207 = !DILocalVariable(name: "vrrp", scope: !9204, file: !512, line: 3524, type: !537)
!9208 = !DILocation(line: 3524, column: 10, scope: !9204)
!9209 = !DILocation(line: 3526, column: 14, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9204, file: !512, line: 3526, column: 2)
!9211 = !DILocation(line: 3526, column: 25, scope: !9210)
!9212 = !DILocation(line: 3526, column: 13, scope: !9210)
!9213 = !DILocation(line: 3526, column: 12, scope: !9210)
!9214 = !DILocation(line: 3526, column: 12, scope: !9215)
!9215 = !DILexicalBlockFile(scope: !9210, file: !512, discriminator: 1)
!9216 = !DILocation(line: 3526, column: 13, scope: !9217)
!9217 = !DILexicalBlockFile(scope: !9210, file: !512, discriminator: 2)
!9218 = !DILocation(line: 3526, column: 24, scope: !9217)
!9219 = !DILocation(line: 3526, column: 31, scope: !9217)
!9220 = !DILocation(line: 3526, column: 12, scope: !9217)
!9221 = !DILocation(line: 3526, column: 12, scope: !9222)
!9222 = !DILexicalBlockFile(scope: !9210, file: !512, discriminator: 3)
!9223 = !DILocation(line: 3526, column: 9, scope: !9222)
!9224 = !DILocation(line: 3526, column: 7, scope: !9222)
!9225 = !DILocation(line: 3526, column: 38, scope: !9226)
!9226 = !DILexicalBlockFile(scope: !9227, file: !512, discriminator: 4)
!9227 = distinct !DILexicalBlock(scope: !9210, file: !512, line: 3526, column: 2)
!9228 = !DILocation(line: 3526, column: 2, scope: !9226)
!9229 = !DILocation(line: 3527, column: 12, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9227, file: !512, line: 3526, column: 60)
!9231 = !DILocation(line: 3527, column: 16, scope: !9230)
!9232 = !DILocation(line: 3527, column: 10, scope: !9230)
!9233 = !DILocation(line: 3527, column: 8, scope: !9230)
!9234 = !DILocation(line: 3528, column: 7, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9230, file: !512, line: 3528, column: 7)
!9236 = !DILocation(line: 3528, column: 13, scope: !9235)
!9237 = !DILocation(line: 3528, column: 7, scope: !9230)
!9238 = !DILocation(line: 3529, column: 27, scope: !9235)
!9239 = !DILocation(line: 3529, column: 4, scope: !9235)
!9240 = !DILocation(line: 3530, column: 2, scope: !9230)
!9241 = !DILocation(line: 3526, column: 49, scope: !9242)
!9242 = !DILexicalBlockFile(scope: !9227, file: !512, discriminator: 5)
!9243 = !DILocation(line: 3526, column: 53, scope: !9242)
!9244 = !DILocation(line: 3526, column: 46, scope: !9242)
!9245 = !DILocation(line: 3526, column: 2, scope: !9242)
!9246 = distinct !{!9246, !9247}
!9247 = !DILocation(line: 3526, column: 2, scope: !9204)
!9248 = !DILocation(line: 3531, column: 1, scope: !9204)
!9249 = distinct !DISubprogram(name: "clear_diff_vrrp", scope: !512, file: !512, line: 3644, type: !524, isLocal: false, isDefinition: true, scopeLine: 3645, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9250 = !DILocalVariable(name: "e", scope: !9249, file: !512, line: 3646, type: !984)
!9251 = !DILocation(line: 3646, column: 10, scope: !9249)
!9252 = !DILocalVariable(name: "l", scope: !9249, file: !512, line: 3647, type: !400)
!9253 = !DILocation(line: 3647, column: 7, scope: !9249)
!9254 = !DILocation(line: 3647, column: 11, scope: !9249)
!9255 = !DILocation(line: 3647, column: 26, scope: !9249)
!9256 = !DILocalVariable(name: "vrrp", scope: !9249, file: !512, line: 3648, type: !537)
!9257 = !DILocation(line: 3648, column: 10, scope: !9249)
!9258 = !DILocation(line: 3650, column: 8, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9249, file: !512, line: 3650, column: 6)
!9260 = !DILocation(line: 3650, column: 11, scope: !9259)
!9261 = !DILocation(line: 3650, column: 5, scope: !9259)
!9262 = !DILocation(line: 3650, column: 10, scope: !9263)
!9263 = !DILexicalBlockFile(scope: !9259, file: !512, discriminator: 1)
!9264 = !DILocation(line: 3650, column: 14, scope: !9263)
!9265 = !DILocation(line: 3650, column: 19, scope: !9263)
!9266 = !DILocation(line: 3650, column: 5, scope: !9263)
!9267 = !DILocation(line: 3650, column: 9, scope: !9268)
!9268 = !DILexicalBlockFile(scope: !9259, file: !512, discriminator: 2)
!9269 = !DILocation(line: 3650, column: 13, scope: !9268)
!9270 = !DILocation(line: 3650, column: 18, scope: !9268)
!9271 = !DILocation(line: 3650, column: 6, scope: !9268)
!9272 = !DILocation(line: 3651, column: 3, scope: !9259)
!9273 = !DILocation(line: 3653, column: 14, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9249, file: !512, line: 3653, column: 2)
!9275 = !DILocation(line: 3653, column: 13, scope: !9274)
!9276 = !DILocation(line: 3653, column: 12, scope: !9274)
!9277 = !DILocation(line: 3653, column: 12, scope: !9278)
!9278 = !DILexicalBlockFile(scope: !9274, file: !512, discriminator: 1)
!9279 = !DILocation(line: 3653, column: 13, scope: !9280)
!9280 = !DILexicalBlockFile(scope: !9274, file: !512, discriminator: 2)
!9281 = !DILocation(line: 3653, column: 17, scope: !9280)
!9282 = !DILocation(line: 3653, column: 12, scope: !9280)
!9283 = !DILocation(line: 3653, column: 12, scope: !9284)
!9284 = !DILexicalBlockFile(scope: !9274, file: !512, discriminator: 3)
!9285 = !DILocation(line: 3653, column: 9, scope: !9284)
!9286 = !DILocation(line: 3653, column: 7, scope: !9284)
!9287 = !DILocation(line: 3653, column: 24, scope: !9288)
!9288 = !DILexicalBlockFile(scope: !9289, file: !512, discriminator: 4)
!9289 = distinct !DILexicalBlock(scope: !9274, file: !512, line: 3653, column: 2)
!9290 = !DILocation(line: 3653, column: 2, scope: !9288)
!9291 = !DILocation(line: 3654, column: 12, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9289, file: !512, line: 3653, column: 46)
!9293 = !DILocation(line: 3654, column: 16, scope: !9292)
!9294 = !DILocation(line: 3654, column: 10, scope: !9292)
!9295 = !DILocation(line: 3654, column: 8, scope: !9292)
!9296 = !DILocalVariable(name: "new_vrrp", scope: !9292, file: !512, line: 3655, type: !537)
!9297 = !DILocation(line: 3655, column: 11, scope: !9292)
!9298 = !DILocation(line: 3661, column: 25, scope: !9292)
!9299 = !DILocation(line: 3661, column: 14, scope: !9292)
!9300 = !DILocation(line: 3661, column: 12, scope: !9292)
!9301 = !DILocation(line: 3662, column: 8, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9292, file: !512, line: 3662, column: 7)
!9303 = !DILocation(line: 3662, column: 7, scope: !9292)
!9304 = !DILocation(line: 3663, column: 27, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9302, file: !512, line: 3662, column: 18)
!9306 = !DILocation(line: 3663, column: 4, scope: !9305)
!9307 = !DILocation(line: 3668, column: 35, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9305, file: !512, line: 3668, column: 8)
!9309 = !DILocation(line: 3668, column: 41, scope: !9308)
!9310 = !DILocation(line: 3668, column: 8, scope: !9308)
!9311 = !DILocation(line: 3668, column: 8, scope: !9305)
!9312 = !DILocation(line: 3669, column: 27, scope: !9308)
!9313 = !DILocation(line: 3669, column: 5, scope: !9308)
!9314 = !DILocation(line: 3676, column: 3, scope: !9305)
!9315 = !DILocation(line: 3681, column: 24, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9302, file: !512, line: 3676, column: 10)
!9317 = !DILocation(line: 3681, column: 30, scope: !9316)
!9318 = !DILocation(line: 3681, column: 4, scope: !9316)
!9319 = !DILocation(line: 3685, column: 28, scope: !9316)
!9320 = !DILocation(line: 3685, column: 34, scope: !9316)
!9321 = !DILocation(line: 3685, column: 4, scope: !9316)
!9322 = !DILocation(line: 3688, column: 27, scope: !9316)
!9323 = !DILocation(line: 3688, column: 33, scope: !9316)
!9324 = !DILocation(line: 3688, column: 4, scope: !9316)
!9325 = !DILocation(line: 3696, column: 35, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9316, file: !512, line: 3696, column: 8)
!9327 = !DILocation(line: 3696, column: 41, scope: !9326)
!9328 = !DILocation(line: 3696, column: 8, scope: !9326)
!9329 = !DILocation(line: 3696, column: 53, scope: !9326)
!9330 = !DILocation(line: 3697, column: 36, scope: !9326)
!9331 = !DILocation(line: 3697, column: 46, scope: !9326)
!9332 = !DILocation(line: 3697, column: 9, scope: !9326)
!9333 = !DILocation(line: 3696, column: 8, scope: !9334)
!9334 = !DILexicalBlockFile(scope: !9316, file: !512, discriminator: 1)
!9335 = !DILocation(line: 3699, column: 27, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9326, file: !512, line: 3697, column: 59)
!9337 = !DILocation(line: 3699, column: 5, scope: !9336)
!9338 = !DILocation(line: 3700, column: 4, scope: !9336)
!9339 = !DILocation(line: 3704, column: 27, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9316, file: !512, line: 3704, column: 8)
!9341 = !DILocation(line: 3704, column: 33, scope: !9340)
!9342 = !DILocation(line: 3704, column: 8, scope: !9340)
!9343 = !DILocation(line: 3704, column: 8, scope: !9316)
!9344 = !DILocation(line: 3708, column: 27, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9340, file: !512, line: 3704, column: 44)
!9346 = !DILocation(line: 3708, column: 37, scope: !9345)
!9347 = !DILocation(line: 3708, column: 47, scope: !9345)
!9348 = !DILocation(line: 3708, column: 5, scope: !9345)
!9349 = !DILocation(line: 3711, column: 9, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9345, file: !512, line: 3711, column: 8)
!9351 = !DILocation(line: 3711, column: 19, scope: !9350)
!9352 = !DILocation(line: 3711, column: 11, scope: !9350)
!9353 = !DILocation(line: 3711, column: 18, scope: !9350)
!9354 = !DILocation(line: 3711, column: 9, scope: !9355)
!9355 = !DILexicalBlockFile(scope: !9350, file: !512, discriminator: 1)
!9356 = !DILocation(line: 3711, column: 19, scope: !9355)
!9357 = !DILocation(line: 3711, column: 11, scope: !9355)
!9358 = !DILocation(line: 3711, column: 21, scope: !9355)
!9359 = !DILocation(line: 3711, column: 8, scope: !9355)
!9360 = !DILocation(line: 3712, column: 6, scope: !9350)
!9361 = !DILocation(line: 3712, column: 16, scope: !9350)
!9362 = !DILocation(line: 3712, column: 51, scope: !9350)
!9363 = !DILocation(line: 3712, column: 61, scope: !9350)
!9364 = !DILocation(line: 3712, column: 37, scope: !9350)
!9365 = !DILocation(line: 3712, column: 37, scope: !9355)
!9366 = !DILocation(line: 3713, column: 4, scope: !9345)
!9367 = !DILocation(line: 3715, column: 2, scope: !9292)
!9368 = !DILocation(line: 3653, column: 35, scope: !9369)
!9369 = !DILexicalBlockFile(scope: !9289, file: !512, discriminator: 5)
!9370 = !DILocation(line: 3653, column: 39, scope: !9369)
!9371 = !DILocation(line: 3653, column: 32, scope: !9369)
!9372 = !DILocation(line: 3653, column: 2, scope: !9369)
!9373 = distinct !{!9373, !9374}
!9374 = !DILocation(line: 3653, column: 2, scope: !9249)
!9375 = !DILocation(line: 3716, column: 1, scope: !9249)
!9376 = distinct !DISubprogram(name: "clear_diff_vrrp_vip", scope: !512, file: !512, line: 3551, type: !9377, isLocal: true, isDefinition: true, scopeLine: 3552, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9377 = !DISubroutineType(types: !9378)
!9378 = !{null, !537, !537}
!9379 = !DILocalVariable(name: "old_vrrp", arg: 1, scope: !9376, file: !512, line: 3551, type: !537)
!9380 = !DILocation(line: 3551, column: 29, scope: !9376)
!9381 = !DILocalVariable(name: "vrrp", arg: 2, scope: !9376, file: !512, line: 3551, type: !537)
!9382 = !DILocation(line: 3551, column: 47, scope: !9376)
!9383 = !DILocalVariable(name: "tries", scope: !9376, file: !512, line: 3554, type: !300)
!9384 = !DILocation(line: 3554, column: 6, scope: !9376)
!9385 = !DILocalVariable(name: "res", scope: !9376, file: !512, line: 3555, type: !300)
!9386 = !DILocation(line: 3555, column: 6, scope: !9376)
!9387 = !DILocalVariable(name: "h", scope: !9376, file: !512, line: 3557, type: !2287)
!9388 = !DILocation(line: 3557, column: 21, scope: !9376)
!9389 = !DILocation(line: 3559, column: 7, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9376, file: !512, line: 3559, column: 6)
!9391 = !DILocation(line: 3559, column: 17, scope: !9390)
!9392 = !DILocation(line: 3559, column: 6, scope: !9376)
!9393 = !DILocation(line: 3560, column: 3, scope: !9390)
!9394 = !DILocation(line: 3563, column: 2, scope: !9376)
!9395 = distinct !{!9395, !9394}
!9396 = !DILocation(line: 3568, column: 8, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9376, file: !512, line: 3563, column: 5)
!9398 = !DILocation(line: 3568, column: 6, scope: !9397)
!9399 = !DILocation(line: 3570, column: 28, scope: !9397)
!9400 = !DILocation(line: 3570, column: 34, scope: !9397)
!9401 = !DILocation(line: 3570, column: 37, scope: !9397)
!9402 = !DILocation(line: 3570, column: 47, scope: !9397)
!9403 = !DILocation(line: 3570, column: 52, scope: !9397)
!9404 = !DILocation(line: 3570, column: 58, scope: !9397)
!9405 = !DILocation(line: 3570, column: 3, scope: !9397)
!9406 = !DILocation(line: 3571, column: 28, scope: !9397)
!9407 = !DILocation(line: 3571, column: 34, scope: !9397)
!9408 = !DILocation(line: 3571, column: 37, scope: !9397)
!9409 = !DILocation(line: 3571, column: 47, scope: !9397)
!9410 = !DILocation(line: 3571, column: 53, scope: !9397)
!9411 = !DILocation(line: 3571, column: 59, scope: !9397)
!9412 = !DILocation(line: 3571, column: 3, scope: !9397)
!9413 = !DILocation(line: 3576, column: 25, scope: !9397)
!9414 = !DILocation(line: 3576, column: 10, scope: !9397)
!9415 = !DILocation(line: 3576, column: 8, scope: !9397)
!9416 = !DILocation(line: 3577, column: 2, scope: !9397)
!9417 = !DILocation(line: 3577, column: 11, scope: !9418)
!9418 = !DILexicalBlockFile(scope: !9376, file: !512, discriminator: 1)
!9419 = !DILocation(line: 3577, column: 15, scope: !9418)
!9420 = !DILocation(line: 3577, column: 24, scope: !9418)
!9421 = !DILocation(line: 3577, column: 27, scope: !9422)
!9422 = !DILexicalBlockFile(scope: !9376, file: !512, discriminator: 2)
!9423 = !DILocation(line: 3577, column: 35, scope: !9422)
!9424 = !DILocation(line: 3577, column: 2, scope: !9425)
!9425 = !DILexicalBlockFile(scope: !9397, file: !512, discriminator: 3)
!9426 = !DILocation(line: 3579, column: 1, scope: !9376)
!9427 = distinct !DISubprogram(name: "clear_diff_vrrp_vroutes", scope: !512, file: !512, line: 3584, type: !9377, isLocal: true, isDefinition: true, scopeLine: 3585, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9428 = !DILocalVariable(name: "old_vrrp", arg: 1, scope: !9427, file: !512, line: 3584, type: !537)
!9429 = !DILocation(line: 3584, column: 33, scope: !9427)
!9430 = !DILocalVariable(name: "vrrp", arg: 2, scope: !9427, file: !512, line: 3584, type: !537)
!9431 = !DILocation(line: 3584, column: 51, scope: !9427)
!9432 = !DILocation(line: 3586, column: 20, scope: !9427)
!9433 = !DILocation(line: 3586, column: 30, scope: !9427)
!9434 = !DILocation(line: 3586, column: 39, scope: !9427)
!9435 = !DILocation(line: 3586, column: 45, scope: !9427)
!9436 = !DILocation(line: 3586, column: 2, scope: !9427)
!9437 = !DILocation(line: 3587, column: 1, scope: !9427)
!9438 = distinct !DISubprogram(name: "clear_diff_vrrp_vrules", scope: !512, file: !512, line: 3591, type: !9377, isLocal: true, isDefinition: true, scopeLine: 3592, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9439 = !DILocalVariable(name: "old_vrrp", arg: 1, scope: !9438, file: !512, line: 3591, type: !537)
!9440 = !DILocation(line: 3591, column: 32, scope: !9438)
!9441 = !DILocalVariable(name: "vrrp", arg: 2, scope: !9438, file: !512, line: 3591, type: !537)
!9442 = !DILocation(line: 3591, column: 50, scope: !9438)
!9443 = !DILocation(line: 3593, column: 19, scope: !9438)
!9444 = !DILocation(line: 3593, column: 29, scope: !9438)
!9445 = !DILocation(line: 3593, column: 37, scope: !9438)
!9446 = !DILocation(line: 3593, column: 43, scope: !9438)
!9447 = !DILocation(line: 3593, column: 2, scope: !9438)
!9448 = !DILocation(line: 3594, column: 1, scope: !9438)
!9449 = distinct !DISubprogram(name: "restore_vrrp_state", scope: !512, file: !512, line: 3599, type: !9450, isLocal: true, isDefinition: true, scopeLine: 3600, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9450 = !DISubroutineType(types: !9451)
!9451 = !{!350, !537, !537}
!9452 = !DILocalVariable(name: "old_vrrp", arg: 1, scope: !9449, file: !512, line: 3599, type: !537)
!9453 = !DILocation(line: 3599, column: 28, scope: !9449)
!9454 = !DILocalVariable(name: "vrrp", arg: 2, scope: !9449, file: !512, line: 3599, type: !537)
!9455 = !DILocation(line: 3599, column: 46, scope: !9449)
!9456 = !DILocalVariable(name: "added_ip_addr", scope: !9449, file: !512, line: 3601, type: !350)
!9457 = !DILocation(line: 3601, column: 6, scope: !9449)
!9458 = !DILocation(line: 3604, column: 16, scope: !9449)
!9459 = !DILocation(line: 3604, column: 26, scope: !9449)
!9460 = !DILocation(line: 3604, column: 2, scope: !9449)
!9461 = !DILocation(line: 3604, column: 8, scope: !9449)
!9462 = !DILocation(line: 3604, column: 14, scope: !9449)
!9463 = !DILocation(line: 3605, column: 24, scope: !9449)
!9464 = !DILocation(line: 3605, column: 34, scope: !9449)
!9465 = !DILocation(line: 3605, column: 40, scope: !9449)
!9466 = !DILocation(line: 3605, column: 2, scope: !9449)
!9467 = !DILocation(line: 3605, column: 8, scope: !9449)
!9468 = !DILocation(line: 3605, column: 22, scope: !9449)
!9469 = !DILocation(line: 3606, column: 20, scope: !9449)
!9470 = !DILocation(line: 3606, column: 30, scope: !9449)
!9471 = !DILocation(line: 3606, column: 2, scope: !9449)
!9472 = !DILocation(line: 3606, column: 8, scope: !9449)
!9473 = !DILocation(line: 3606, column: 18, scope: !9449)
!9474 = !DILocation(line: 3607, column: 7, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9449, file: !512, line: 3607, column: 6)
!9476 = !DILocation(line: 3607, column: 17, scope: !9475)
!9477 = !DILocation(line: 3607, column: 22, scope: !9475)
!9478 = !DILocation(line: 3607, column: 25, scope: !9479)
!9479 = !DILexicalBlockFile(scope: !9475, file: !512, discriminator: 1)
!9480 = !DILocation(line: 3607, column: 31, scope: !9479)
!9481 = !DILocation(line: 3607, column: 45, scope: !9479)
!9482 = !DILocation(line: 3607, column: 6, scope: !9479)
!9483 = !DILocation(line: 3608, column: 26, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9475, file: !512, line: 3607, column: 53)
!9485 = !DILocation(line: 3608, column: 36, scope: !9484)
!9486 = !DILocation(line: 3608, column: 53, scope: !9484)
!9487 = !DILocation(line: 3608, column: 59, scope: !9484)
!9488 = !DILocation(line: 3608, column: 51, scope: !9484)
!9489 = !DILocation(line: 3608, column: 75, scope: !9484)
!9490 = !DILocation(line: 3608, column: 85, scope: !9484)
!9491 = !DILocation(line: 3608, column: 73, scope: !9484)
!9492 = !DILocation(line: 3608, column: 3, scope: !9484)
!9493 = !DILocation(line: 3608, column: 9, scope: !9484)
!9494 = !DILocation(line: 3608, column: 24, scope: !9484)
!9495 = !DILocation(line: 3609, column: 31, scope: !9484)
!9496 = !DILocation(line: 3609, column: 37, scope: !9484)
!9497 = !DILocation(line: 3609, column: 52, scope: !9484)
!9498 = !DILocation(line: 3609, column: 30, scope: !9484)
!9499 = !DILocation(line: 3609, column: 30, scope: !9500)
!9500 = !DILexicalBlockFile(scope: !9484, file: !512, discriminator: 1)
!9501 = !DILocation(line: 3610, column: 10, scope: !9484)
!9502 = !DILocation(line: 3610, column: 16, scope: !9484)
!9503 = !DILocation(line: 3610, column: 31, scope: !9484)
!9504 = !DILocation(line: 3610, column: 9, scope: !9484)
!9505 = !DILocation(line: 3610, column: 9, scope: !9500)
!9506 = !DILocation(line: 3611, column: 18, scope: !9484)
!9507 = !DILocation(line: 3611, column: 24, scope: !9484)
!9508 = !DILocation(line: 3611, column: 9, scope: !9484)
!9509 = !DILocation(line: 3610, column: 9, scope: !9510)
!9510 = !DILexicalBlockFile(scope: !9484, file: !512, discriminator: 2)
!9511 = !DILocation(line: 3610, column: 9, scope: !9512)
!9512 = !DILexicalBlockFile(scope: !9484, file: !512, discriminator: 3)
!9513 = !DILocation(line: 3609, column: 30, scope: !9510)
!9514 = !DILocation(line: 3609, column: 30, scope: !9512)
!9515 = !DILocation(line: 3609, column: 3, scope: !9512)
!9516 = !DILocation(line: 3609, column: 9, scope: !9512)
!9517 = !DILocation(line: 3609, column: 28, scope: !9512)
!9518 = !DILocation(line: 3612, column: 2, scope: !9484)
!9519 = !DILocation(line: 3615, column: 9, scope: !9449)
!9520 = !DILocation(line: 3615, column: 15, scope: !9449)
!9521 = !DILocation(line: 3615, column: 2, scope: !9449)
!9522 = !DILocation(line: 3615, column: 22, scope: !9449)
!9523 = !DILocation(line: 3615, column: 32, scope: !9449)
!9524 = !DILocation(line: 3618, column: 10, scope: !9449)
!9525 = !DILocation(line: 3618, column: 16, scope: !9449)
!9526 = !DILocation(line: 3618, column: 2, scope: !9449)
!9527 = !DILocation(line: 3618, column: 34, scope: !9449)
!9528 = !DILocation(line: 3618, column: 44, scope: !9449)
!9529 = !DILocation(line: 3622, column: 17, scope: !9449)
!9530 = !DILocation(line: 3622, column: 27, scope: !9449)
!9531 = !DILocation(line: 3622, column: 2, scope: !9449)
!9532 = !DILocation(line: 3622, column: 8, scope: !9449)
!9533 = !DILocation(line: 3622, column: 15, scope: !9449)
!9534 = !DILocation(line: 3623, column: 6, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9449, file: !512, line: 3623, column: 6)
!9536 = !DILocation(line: 3623, column: 12, scope: !9535)
!9537 = !DILocation(line: 3623, column: 6, scope: !9449)
!9538 = !DILocation(line: 3624, column: 27, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9535, file: !512, line: 3623, column: 20)
!9540 = !DILocation(line: 3624, column: 3, scope: !9539)
!9541 = !DILocation(line: 3625, column: 10, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9539, file: !512, line: 3625, column: 7)
!9543 = !DILocation(line: 3625, column: 16, scope: !9542)
!9544 = !DILocation(line: 3625, column: 21, scope: !9542)
!9545 = !DILocation(line: 3625, column: 7, scope: !9542)
!9546 = !DILocation(line: 3625, column: 12, scope: !9547)
!9547 = !DILexicalBlockFile(scope: !9542, file: !512, discriminator: 1)
!9548 = !DILocation(line: 3625, column: 18, scope: !9547)
!9549 = !DILocation(line: 3625, column: 24, scope: !9547)
!9550 = !DILocation(line: 3625, column: 29, scope: !9547)
!9551 = !DILocation(line: 3625, column: 7, scope: !9547)
!9552 = !DILocation(line: 3625, column: 11, scope: !9553)
!9553 = !DILexicalBlockFile(scope: !9542, file: !512, discriminator: 2)
!9554 = !DILocation(line: 3625, column: 17, scope: !9553)
!9555 = !DILocation(line: 3625, column: 23, scope: !9553)
!9556 = !DILocation(line: 3625, column: 28, scope: !9553)
!9557 = !DILocation(line: 3625, column: 7, scope: !9553)
!9558 = !DILocation(line: 3626, column: 42, scope: !9542)
!9559 = !DILocation(line: 3626, column: 20, scope: !9542)
!9560 = !DILocation(line: 3626, column: 18, scope: !9542)
!9561 = !DILocation(line: 3626, column: 4, scope: !9542)
!9562 = !DILocation(line: 3627, column: 10, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9539, file: !512, line: 3627, column: 7)
!9564 = !DILocation(line: 3627, column: 16, scope: !9563)
!9565 = !DILocation(line: 3627, column: 22, scope: !9563)
!9566 = !DILocation(line: 3627, column: 7, scope: !9563)
!9567 = !DILocation(line: 3627, column: 12, scope: !9568)
!9568 = !DILexicalBlockFile(scope: !9563, file: !512, discriminator: 1)
!9569 = !DILocation(line: 3627, column: 18, scope: !9568)
!9570 = !DILocation(line: 3627, column: 25, scope: !9568)
!9571 = !DILocation(line: 3627, column: 30, scope: !9568)
!9572 = !DILocation(line: 3627, column: 7, scope: !9568)
!9573 = !DILocation(line: 3627, column: 11, scope: !9574)
!9574 = !DILexicalBlockFile(scope: !9563, file: !512, discriminator: 2)
!9575 = !DILocation(line: 3627, column: 17, scope: !9574)
!9576 = !DILocation(line: 3627, column: 24, scope: !9574)
!9577 = !DILocation(line: 3627, column: 29, scope: !9574)
!9578 = !DILocation(line: 3627, column: 7, scope: !9574)
!9579 = !DILocation(line: 3628, column: 30, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9581, file: !512, line: 3628, column: 8)
!9581 = distinct !DILexicalBlock(scope: !9563, file: !512, line: 3627, column: 11)
!9582 = !DILocation(line: 3628, column: 8, scope: !9580)
!9583 = !DILocation(line: 3628, column: 8, scope: !9581)
!9584 = !DILocation(line: 3629, column: 19, scope: !9580)
!9585 = !DILocation(line: 3629, column: 5, scope: !9580)
!9586 = !DILocation(line: 3630, column: 3, scope: !9581)
!9587 = !DILocation(line: 3632, column: 10, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9539, file: !512, line: 3632, column: 7)
!9589 = !DILocation(line: 3632, column: 16, scope: !9588)
!9590 = !DILocation(line: 3632, column: 25, scope: !9588)
!9591 = !DILocation(line: 3632, column: 7, scope: !9588)
!9592 = !DILocation(line: 3632, column: 12, scope: !9593)
!9593 = !DILexicalBlockFile(scope: !9588, file: !512, discriminator: 1)
!9594 = !DILocation(line: 3632, column: 18, scope: !9593)
!9595 = !DILocation(line: 3632, column: 28, scope: !9593)
!9596 = !DILocation(line: 3632, column: 33, scope: !9593)
!9597 = !DILocation(line: 3632, column: 7, scope: !9593)
!9598 = !DILocation(line: 3632, column: 11, scope: !9599)
!9599 = !DILexicalBlockFile(scope: !9588, file: !512, discriminator: 2)
!9600 = !DILocation(line: 3632, column: 17, scope: !9599)
!9601 = !DILocation(line: 3632, column: 27, scope: !9599)
!9602 = !DILocation(line: 3632, column: 32, scope: !9599)
!9603 = !DILocation(line: 3632, column: 7, scope: !9599)
!9604 = !DILocation(line: 3633, column: 25, scope: !9588)
!9605 = !DILocation(line: 3633, column: 4, scope: !9588)
!9606 = !DILocation(line: 3634, column: 10, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9539, file: !512, line: 3634, column: 7)
!9608 = !DILocation(line: 3634, column: 16, scope: !9607)
!9609 = !DILocation(line: 3634, column: 24, scope: !9607)
!9610 = !DILocation(line: 3634, column: 7, scope: !9607)
!9611 = !DILocation(line: 3634, column: 12, scope: !9612)
!9612 = !DILexicalBlockFile(scope: !9607, file: !512, discriminator: 1)
!9613 = !DILocation(line: 3634, column: 18, scope: !9612)
!9614 = !DILocation(line: 3634, column: 27, scope: !9612)
!9615 = !DILocation(line: 3634, column: 32, scope: !9612)
!9616 = !DILocation(line: 3634, column: 7, scope: !9612)
!9617 = !DILocation(line: 3634, column: 11, scope: !9618)
!9618 = !DILexicalBlockFile(scope: !9607, file: !512, discriminator: 2)
!9619 = !DILocation(line: 3634, column: 17, scope: !9618)
!9620 = !DILocation(line: 3634, column: 26, scope: !9618)
!9621 = !DILocation(line: 3634, column: 31, scope: !9618)
!9622 = !DILocation(line: 3634, column: 7, scope: !9618)
!9623 = !DILocation(line: 3635, column: 24, scope: !9607)
!9624 = !DILocation(line: 3635, column: 4, scope: !9607)
!9625 = !DILocation(line: 3637, column: 2, scope: !9539)
!9626 = !DILocation(line: 3639, column: 9, scope: !9449)
!9627 = !DILocation(line: 3639, column: 2, scope: !9449)
!9628 = distinct !DISubprogram(name: "clear_diff_script", scope: !512, file: !512, line: 3720, type: !524, isLocal: false, isDefinition: true, scopeLine: 3721, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9629 = !DILocalVariable(name: "e", scope: !9628, file: !512, line: 3722, type: !984)
!9630 = !DILocation(line: 3722, column: 10, scope: !9628)
!9631 = !DILocalVariable(name: "vscript", scope: !9628, file: !512, line: 3723, type: !5315)
!9632 = !DILocation(line: 3723, column: 17, scope: !9628)
!9633 = !DILocalVariable(name: "nvscript", scope: !9628, file: !512, line: 3723, type: !5315)
!9634 = !DILocation(line: 3723, column: 27, scope: !9628)
!9635 = !DILocation(line: 3725, column: 15, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9628, file: !512, line: 3725, column: 2)
!9637 = !DILocation(line: 3725, column: 30, scope: !9636)
!9638 = !DILocation(line: 3725, column: 14, scope: !9636)
!9639 = !DILocation(line: 3725, column: 48, scope: !9640)
!9640 = !DILexicalBlockFile(scope: !9636, file: !512, discriminator: 1)
!9641 = !DILocation(line: 3725, column: 63, scope: !9640)
!9642 = !DILocation(line: 3725, column: 47, scope: !9640)
!9643 = !DILocation(line: 3725, column: 46, scope: !9640)
!9644 = !DILocation(line: 3725, column: 46, scope: !9645)
!9645 = !DILexicalBlockFile(scope: !9636, file: !512, discriminator: 2)
!9646 = !DILocation(line: 3725, column: 4, scope: !9647)
!9647 = !DILexicalBlockFile(scope: !9636, file: !512, discriminator: 3)
!9648 = !DILocation(line: 3725, column: 19, scope: !9647)
!9649 = !DILocation(line: 3725, column: 33, scope: !9647)
!9650 = !DILocation(line: 3725, column: 46, scope: !9647)
!9651 = !DILocation(line: 3725, column: 46, scope: !9652)
!9652 = !DILexicalBlockFile(scope: !9636, file: !512, discriminator: 4)
!9653 = !DILocation(line: 3725, column: 14, scope: !9652)
!9654 = !DILocation(line: 3725, column: 14, scope: !9655)
!9655 = !DILexicalBlockFile(scope: !9636, file: !512, discriminator: 5)
!9656 = !DILocation(line: 3725, column: 14, scope: !9657)
!9657 = !DILexicalBlockFile(scope: !9636, file: !512, discriminator: 6)
!9658 = !DILocation(line: 3725, column: 11, scope: !9657)
!9659 = !DILocation(line: 3725, column: 7, scope: !9657)
!9660 = !DILocation(line: 3725, column: 5, scope: !9661)
!9661 = !DILexicalBlockFile(scope: !9662, file: !512, discriminator: 7)
!9662 = distinct !DILexicalBlock(scope: !9636, file: !512, line: 3725, column: 2)
!9663 = !DILocation(line: 3725, column: 4, scope: !9661)
!9664 = !DILocation(line: 3725, column: 8, scope: !9661)
!9665 = !DILocation(line: 3725, column: 26, scope: !9666)
!9666 = !DILexicalBlockFile(scope: !9662, file: !512, discriminator: 8)
!9667 = !DILocation(line: 3725, column: 30, scope: !9666)
!9668 = !DILocation(line: 3725, column: 24, scope: !9666)
!9669 = !DILocation(line: 3725, column: 22, scope: !9666)
!9670 = !DILocation(line: 3725, column: 2, scope: !9671)
!9671 = !DILexicalBlockFile(scope: !9636, file: !512, discriminator: 9)
!9672 = !DILocation(line: 3726, column: 34, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9662, file: !512, line: 3725, column: 60)
!9674 = !DILocation(line: 3726, column: 43, scope: !9673)
!9675 = !DILocation(line: 3726, column: 14, scope: !9673)
!9676 = !DILocation(line: 3726, column: 12, scope: !9673)
!9677 = !DILocation(line: 3727, column: 7, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9673, file: !512, line: 3727, column: 7)
!9679 = !DILocation(line: 3727, column: 7, scope: !9673)
!9680 = !DILocation(line: 3729, column: 8, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9682, file: !512, line: 3729, column: 8)
!9682 = distinct !DILexicalBlock(scope: !9678, file: !512, line: 3727, column: 17)
!9683 = !DILocation(line: 3729, column: 17, scope: !9681)
!9684 = !DILocation(line: 3729, column: 26, scope: !9681)
!9685 = !DILocation(line: 3729, column: 35, scope: !9681)
!9686 = !DILocation(line: 3729, column: 24, scope: !9681)
!9687 = !DILocation(line: 3729, column: 8, scope: !9682)
!9688 = !DILocation(line: 3730, column: 10, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9690, file: !512, line: 3730, column: 9)
!9690 = distinct !DILexicalBlock(scope: !9681, file: !512, line: 3729, column: 41)
!9691 = !DILocation(line: 3730, column: 19, scope: !9689)
!9692 = !DILocation(line: 3730, column: 9, scope: !9690)
!9693 = !DILocation(line: 3731, column: 6, scope: !9689)
!9694 = !DILocation(line: 3731, column: 16, scope: !9689)
!9695 = !DILocation(line: 3731, column: 23, scope: !9689)
!9696 = !DILocation(line: 3733, column: 25, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9689, file: !512, line: 3732, column: 10)
!9698 = !DILocation(line: 3733, column: 35, scope: !9697)
!9699 = !DILocation(line: 3733, column: 43, scope: !9697)
!9700 = !DILocation(line: 3733, column: 52, scope: !9697)
!9701 = !DILocation(line: 3733, column: 59, scope: !9697)
!9702 = !DILocation(line: 3733, column: 68, scope: !9697)
!9703 = !DILocation(line: 3733, column: 57, scope: !9697)
!9704 = !DILocation(line: 3733, column: 40, scope: !9697)
!9705 = !DILocation(line: 3733, column: 6, scope: !9697)
!9706 = !DILocation(line: 3733, column: 16, scope: !9697)
!9707 = !DILocation(line: 3733, column: 23, scope: !9697)
!9708 = !DILocation(line: 3734, column: 10, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9697, file: !512, line: 3734, column: 10)
!9710 = !DILocation(line: 3734, column: 20, scope: !9709)
!9711 = !DILocation(line: 3734, column: 27, scope: !9709)
!9712 = !DILocation(line: 3734, column: 10, scope: !9697)
!9713 = !DILocation(line: 3735, column: 7, scope: !9709)
!9714 = !DILocation(line: 3735, column: 17, scope: !9709)
!9715 = !DILocation(line: 3735, column: 24, scope: !9709)
!9716 = !DILocation(line: 3737, column: 79, scope: !9690)
!9717 = !DILocation(line: 3737, column: 89, scope: !9690)
!9718 = !DILocation(line: 3737, column: 5, scope: !9690)
!9719 = !DILocation(line: 3738, column: 4, scope: !9690)
!9720 = !DILocation(line: 3739, column: 9, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9722, file: !512, line: 3739, column: 9)
!9722 = distinct !DILexicalBlock(scope: !9681, file: !512, line: 3738, column: 11)
!9723 = !DILocation(line: 3739, column: 18, scope: !9721)
!9724 = !DILocation(line: 3739, column: 28, scope: !9721)
!9725 = !DILocation(line: 3739, column: 37, scope: !9721)
!9726 = !DILocation(line: 3739, column: 44, scope: !9721)
!9727 = !DILocation(line: 3739, column: 53, scope: !9721)
!9728 = !DILocation(line: 3739, column: 42, scope: !9721)
!9729 = !DILocation(line: 3739, column: 58, scope: !9721)
!9730 = !DILocation(line: 3739, column: 25, scope: !9721)
!9731 = !DILocation(line: 3739, column: 9, scope: !9722)
!9732 = !DILocation(line: 3740, column: 25, scope: !9721)
!9733 = !DILocation(line: 3740, column: 35, scope: !9721)
!9734 = !DILocation(line: 3740, column: 42, scope: !9721)
!9735 = !DILocation(line: 3740, column: 52, scope: !9721)
!9736 = !DILocation(line: 3740, column: 40, scope: !9721)
!9737 = !DILocation(line: 3740, column: 57, scope: !9721)
!9738 = !DILocation(line: 3740, column: 6, scope: !9721)
!9739 = !DILocation(line: 3740, column: 16, scope: !9721)
!9740 = !DILocation(line: 3740, column: 23, scope: !9721)
!9741 = !DILocation(line: 3742, column: 25, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9721, file: !512, line: 3741, column: 10)
!9743 = !DILocation(line: 3742, column: 35, scope: !9742)
!9744 = !DILocation(line: 3742, column: 43, scope: !9742)
!9745 = !DILocation(line: 3742, column: 52, scope: !9742)
!9746 = !DILocation(line: 3742, column: 61, scope: !9742)
!9747 = !DILocation(line: 3742, column: 70, scope: !9742)
!9748 = !DILocation(line: 3742, column: 59, scope: !9742)
!9749 = !DILocation(line: 3742, column: 40, scope: !9742)
!9750 = !DILocation(line: 3742, column: 6, scope: !9742)
!9751 = !DILocation(line: 3742, column: 16, scope: !9742)
!9752 = !DILocation(line: 3742, column: 23, scope: !9742)
!9753 = !DILocation(line: 3743, column: 10, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9742, file: !512, line: 3743, column: 10)
!9755 = !DILocation(line: 3743, column: 20, scope: !9754)
!9756 = !DILocation(line: 3743, column: 30, scope: !9754)
!9757 = !DILocation(line: 3743, column: 40, scope: !9754)
!9758 = !DILocation(line: 3743, column: 47, scope: !9754)
!9759 = !DILocation(line: 3743, column: 57, scope: !9754)
!9760 = !DILocation(line: 3743, column: 45, scope: !9754)
!9761 = !DILocation(line: 3743, column: 27, scope: !9754)
!9762 = !DILocation(line: 3743, column: 10, scope: !9742)
!9763 = !DILocation(line: 3744, column: 26, scope: !9754)
!9764 = !DILocation(line: 3744, column: 36, scope: !9754)
!9765 = !DILocation(line: 3744, column: 43, scope: !9754)
!9766 = !DILocation(line: 3744, column: 53, scope: !9754)
!9767 = !DILocation(line: 3744, column: 41, scope: !9754)
!9768 = !DILocation(line: 3744, column: 58, scope: !9754)
!9769 = !DILocation(line: 3744, column: 7, scope: !9754)
!9770 = !DILocation(line: 3744, column: 17, scope: !9754)
!9771 = !DILocation(line: 3744, column: 24, scope: !9754)
!9772 = !DILocation(line: 3746, column: 77, scope: !9722)
!9773 = !DILocation(line: 3746, column: 87, scope: !9722)
!9774 = !DILocation(line: 3746, column: 5, scope: !9722)
!9775 = !DILocation(line: 3748, column: 28, scope: !9682)
!9776 = !DILocation(line: 3748, column: 37, scope: !9682)
!9777 = !DILocation(line: 3748, column: 4, scope: !9682)
!9778 = !DILocation(line: 3748, column: 14, scope: !9682)
!9779 = !DILocation(line: 3748, column: 26, scope: !9682)
!9780 = !DILocation(line: 3749, column: 4, scope: !9682)
!9781 = !DILocation(line: 3749, column: 14, scope: !9682)
!9782 = !DILocation(line: 3749, column: 25, scope: !9682)
!9783 = !DILocation(line: 3750, column: 3, scope: !9682)
!9784 = !DILocation(line: 3751, column: 2, scope: !9673)
!9785 = !DILocation(line: 3725, column: 49, scope: !9786)
!9786 = !DILexicalBlockFile(scope: !9662, file: !512, discriminator: 10)
!9787 = !DILocation(line: 3725, column: 53, scope: !9786)
!9788 = !DILocation(line: 3725, column: 46, scope: !9786)
!9789 = !DILocation(line: 3725, column: 2, scope: !9786)
!9790 = distinct !{!9790, !9791}
!9791 = !DILocation(line: 3725, column: 2, scope: !9628)
!9792 = !DILocation(line: 3752, column: 1, scope: !9628)
!9793 = distinct !DISubprogram(name: "csum_incremental_update16", scope: !9794, file: !9794, line: 134, type: !9795, isLocal: true, isDefinition: true, scopeLine: 135, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9794 = !DIFile(filename: "../../lib/utils.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!9795 = !DISubroutineType(types: !9796)
!9796 = !{!228, !9797, !9797, !9797}
!9797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !228)
!9798 = !DILocalVariable(name: "old_csum", arg: 1, scope: !9793, file: !9794, line: 134, type: !9797)
!9799 = !DILocation(line: 134, column: 65, scope: !9793)
!9800 = !DILocalVariable(name: "old_val", arg: 2, scope: !9793, file: !9794, line: 134, type: !9797)
!9801 = !DILocation(line: 134, column: 90, scope: !9793)
!9802 = !DILocalVariable(name: "new_val", arg: 3, scope: !9793, file: !9794, line: 134, type: !9797)
!9803 = !DILocation(line: 134, column: 114, scope: !9793)
!9804 = !DILocation(line: 139, column: 6, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9793, file: !9794, line: 139, column: 6)
!9806 = !DILocation(line: 139, column: 17, scope: !9805)
!9807 = !DILocation(line: 139, column: 14, scope: !9805)
!9808 = !DILocation(line: 139, column: 6, scope: !9793)
!9809 = !DILocation(line: 140, column: 10, scope: !9805)
!9810 = !DILocation(line: 140, column: 3, scope: !9805)
!9811 = !DILocalVariable(name: "acc", scope: !9793, file: !9794, line: 142, type: !246)
!9812 = !DILocation(line: 142, column: 11, scope: !9793)
!9813 = !DILocation(line: 142, column: 19, scope: !9793)
!9814 = !DILocation(line: 142, column: 18, scope: !9793)
!9815 = !DILocation(line: 142, column: 28, scope: !9793)
!9816 = !DILocation(line: 142, column: 42, scope: !9793)
!9817 = !DILocation(line: 142, column: 41, scope: !9793)
!9818 = !DILocation(line: 142, column: 50, scope: !9793)
!9819 = !DILocation(line: 142, column: 38, scope: !9793)
!9820 = !DILocation(line: 144, column: 9, scope: !9793)
!9821 = !DILocation(line: 144, column: 6, scope: !9793)
!9822 = !DILocation(line: 147, column: 9, scope: !9793)
!9823 = !DILocation(line: 147, column: 13, scope: !9793)
!9824 = !DILocation(line: 147, column: 26, scope: !9793)
!9825 = !DILocation(line: 147, column: 30, scope: !9793)
!9826 = !DILocation(line: 147, column: 23, scope: !9793)
!9827 = !DILocation(line: 147, column: 6, scope: !9793)
!9828 = !DILocation(line: 148, column: 9, scope: !9793)
!9829 = !DILocation(line: 148, column: 13, scope: !9793)
!9830 = !DILocation(line: 148, column: 6, scope: !9793)
!9831 = !DILocation(line: 150, column: 10, scope: !9793)
!9832 = !DILocation(line: 150, column: 9, scope: !9793)
!9833 = !DILocation(line: 150, column: 14, scope: !9793)
!9834 = !DILocation(line: 150, column: 2, scope: !9793)
!9835 = !DILocation(line: 151, column: 1, scope: !9793)
!9836 = distinct !DISubprogram(name: "csum_incremental_update32", scope: !9794, file: !9794, line: 115, type: !9837, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9837 = !DISubroutineType(types: !9838)
!9838 = !{!228, !9797, !9839, !9839}
!9839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!9840 = !DILocalVariable(name: "old_csum", arg: 1, scope: !9836, file: !9794, line: 115, type: !9797)
!9841 = !DILocation(line: 115, column: 65, scope: !9836)
!9842 = !DILocalVariable(name: "old_val", arg: 2, scope: !9836, file: !9794, line: 115, type: !9839)
!9843 = !DILocation(line: 115, column: 90, scope: !9836)
!9844 = !DILocalVariable(name: "new_val", arg: 3, scope: !9836, file: !9794, line: 115, type: !9839)
!9845 = !DILocation(line: 115, column: 114, scope: !9836)
!9846 = !DILocation(line: 120, column: 6, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9836, file: !9794, line: 120, column: 6)
!9848 = !DILocation(line: 120, column: 17, scope: !9847)
!9849 = !DILocation(line: 120, column: 14, scope: !9847)
!9850 = !DILocation(line: 120, column: 6, scope: !9836)
!9851 = !DILocation(line: 121, column: 10, scope: !9847)
!9852 = !DILocation(line: 121, column: 3, scope: !9847)
!9853 = !DILocalVariable(name: "acc", scope: !9836, file: !9794, line: 123, type: !246)
!9854 = !DILocation(line: 123, column: 11, scope: !9836)
!9855 = !DILocation(line: 123, column: 19, scope: !9836)
!9856 = !DILocation(line: 123, column: 18, scope: !9836)
!9857 = !DILocation(line: 123, column: 28, scope: !9836)
!9858 = !DILocation(line: 123, column: 43, scope: !9836)
!9859 = !DILocation(line: 123, column: 51, scope: !9836)
!9860 = !DILocation(line: 123, column: 41, scope: !9836)
!9861 = !DILocation(line: 123, column: 59, scope: !9836)
!9862 = !DILocation(line: 123, column: 38, scope: !9836)
!9863 = !DILocation(line: 123, column: 73, scope: !9836)
!9864 = !DILocation(line: 123, column: 72, scope: !9836)
!9865 = !DILocation(line: 123, column: 81, scope: !9836)
!9866 = !DILocation(line: 123, column: 69, scope: !9836)
!9867 = !DILocation(line: 125, column: 10, scope: !9836)
!9868 = !DILocation(line: 125, column: 18, scope: !9836)
!9869 = !DILocation(line: 125, column: 28, scope: !9836)
!9870 = !DILocation(line: 125, column: 36, scope: !9836)
!9871 = !DILocation(line: 125, column: 25, scope: !9836)
!9872 = !DILocation(line: 125, column: 6, scope: !9836)
!9873 = !DILocation(line: 128, column: 9, scope: !9836)
!9874 = !DILocation(line: 128, column: 13, scope: !9836)
!9875 = !DILocation(line: 128, column: 26, scope: !9836)
!9876 = !DILocation(line: 128, column: 30, scope: !9836)
!9877 = !DILocation(line: 128, column: 23, scope: !9836)
!9878 = !DILocation(line: 128, column: 6, scope: !9836)
!9879 = !DILocation(line: 129, column: 9, scope: !9836)
!9880 = !DILocation(line: 129, column: 13, scope: !9836)
!9881 = !DILocation(line: 129, column: 6, scope: !9836)
!9882 = !DILocation(line: 131, column: 10, scope: !9836)
!9883 = !DILocation(line: 131, column: 9, scope: !9836)
!9884 = !DILocation(line: 131, column: 14, scope: !9836)
!9885 = !DILocation(line: 131, column: 2, scope: !9836)
!9886 = !DILocation(line: 132, column: 1, scope: !9836)
!9887 = distinct !DISubprogram(name: "vrrp_build_ancillary_data", scope: !512, file: !512, line: 1292, type: !9888, isLocal: true, isDefinition: true, scopeLine: 1293, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9888 = !DISubroutineType(types: !9889)
!9889 = !{!300, !9890, !230, !981, !9891}
!9890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64, align: 64)
!9891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9892, size: 64, align: 64)
!9892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !538)
!9893 = !DILocalVariable(name: "msg", arg: 1, scope: !9887, file: !512, line: 1292, type: !9890)
!9894 = !DILocation(line: 1292, column: 42, scope: !9887)
!9895 = !DILocalVariable(name: "cbuf", arg: 2, scope: !9887, file: !512, line: 1292, type: !230)
!9896 = !DILocation(line: 1292, column: 53, scope: !9887)
!9897 = !DILocalVariable(name: "src", arg: 3, scope: !9887, file: !512, line: 1292, type: !981)
!9898 = !DILocation(line: 1292, column: 84, scope: !9887)
!9899 = !DILocalVariable(name: "vrrp", arg: 4, scope: !9887, file: !512, line: 1292, type: !9891)
!9900 = !DILocation(line: 1292, column: 103, scope: !9887)
!9901 = !DILocalVariable(name: "cmsg", scope: !9887, file: !512, line: 1294, type: !295)
!9902 = !DILocation(line: 1294, column: 18, scope: !9887)
!9903 = !DILocalVariable(name: "pkt", scope: !9887, file: !512, line: 1295, type: !306)
!9904 = !DILocation(line: 1295, column: 22, scope: !9887)
!9905 = !DILocation(line: 1297, column: 6, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9887, file: !512, line: 1297, column: 6)
!9907 = !DILocation(line: 1297, column: 11, scope: !9906)
!9908 = !DILocation(line: 1297, column: 21, scope: !9906)
!9909 = !DILocation(line: 1297, column: 6, scope: !9887)
!9910 = !DILocation(line: 1298, column: 3, scope: !9906)
!9911 = !DILocation(line: 1300, column: 21, scope: !9887)
!9912 = !DILocation(line: 1300, column: 2, scope: !9887)
!9913 = !DILocation(line: 1300, column: 7, scope: !9887)
!9914 = !DILocation(line: 1300, column: 19, scope: !9887)
!9915 = !DILocation(line: 1301, column: 2, scope: !9887)
!9916 = !DILocation(line: 1301, column: 7, scope: !9887)
!9917 = !DILocation(line: 1301, column: 22, scope: !9887)
!9918 = !DILocation(line: 1303, column: 8, scope: !9887)
!9919 = !DILocation(line: 1303, column: 11, scope: !9887)
!9920 = !DILocation(line: 1303, column: 26, scope: !9887)
!9921 = !DILocation(line: 1303, column: 9, scope: !9887)
!9922 = !DILocation(line: 1303, column: 8, scope: !9923)
!9923 = !DILexicalBlockFile(scope: !9887, file: !512, discriminator: 1)
!9924 = !DILocation(line: 1303, column: 11, scope: !9923)
!9925 = !DILocation(line: 1303, column: 55, scope: !9923)
!9926 = !DILocation(line: 1303, column: 9, scope: !9923)
!9927 = !DILocation(line: 1303, column: 9, scope: !9928)
!9928 = !DILexicalBlockFile(scope: !9887, file: !512, discriminator: 2)
!9929 = !DILocation(line: 1303, column: 9, scope: !9930)
!9930 = !DILexicalBlockFile(scope: !9887, file: !512, discriminator: 3)
!9931 = !DILocation(line: 1303, column: 7, scope: !9930)
!9932 = !DILocation(line: 1304, column: 2, scope: !9887)
!9933 = !DILocation(line: 1304, column: 8, scope: !9887)
!9934 = !DILocation(line: 1304, column: 19, scope: !9887)
!9935 = !DILocation(line: 1305, column: 2, scope: !9887)
!9936 = !DILocation(line: 1305, column: 8, scope: !9887)
!9937 = !DILocation(line: 1305, column: 18, scope: !9887)
!9938 = !DILocation(line: 1306, column: 2, scope: !9887)
!9939 = !DILocation(line: 1306, column: 8, scope: !9887)
!9940 = !DILocation(line: 1306, column: 17, scope: !9887)
!9941 = !DILocation(line: 1308, column: 30, scope: !9887)
!9942 = !DILocation(line: 1308, column: 33, scope: !9887)
!9943 = !DILocation(line: 1308, column: 8, scope: !9887)
!9944 = !DILocation(line: 1308, column: 6, scope: !9887)
!9945 = !DILocation(line: 1309, column: 9, scope: !9887)
!9946 = !DILocation(line: 1309, column: 2, scope: !9887)
!9947 = !DILocation(line: 1310, column: 2, scope: !9887)
!9948 = !DILocation(line: 1310, column: 7, scope: !9887)
!9949 = !DILocation(line: 1310, column: 44, scope: !9887)
!9950 = !DILocation(line: 1310, column: 50, scope: !9887)
!9951 = !DILocation(line: 1312, column: 42, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9887, file: !512, line: 1312, column: 6)
!9953 = !DILocation(line: 1312, column: 48, scope: !9952)
!9954 = !DILocation(line: 1312, column: 6, scope: !9952)
!9955 = !DILocation(line: 1312, column: 6, scope: !9887)
!9956 = !DILocation(line: 1313, column: 23, scope: !9952)
!9957 = !DILocation(line: 1313, column: 29, scope: !9952)
!9958 = !DILocation(line: 1313, column: 34, scope: !9952)
!9959 = !DILocation(line: 1313, column: 44, scope: !9952)
!9960 = !DILocation(line: 1313, column: 3, scope: !9952)
!9961 = !DILocation(line: 1313, column: 8, scope: !9952)
!9962 = !DILocation(line: 1313, column: 21, scope: !9952)
!9963 = !DILocation(line: 1316, column: 23, scope: !9952)
!9964 = !DILocation(line: 1316, column: 29, scope: !9952)
!9965 = !DILocation(line: 1316, column: 34, scope: !9952)
!9966 = !DILocation(line: 1316, column: 3, scope: !9952)
!9967 = !DILocation(line: 1316, column: 8, scope: !9952)
!9968 = !DILocation(line: 1316, column: 21, scope: !9952)
!9969 = !DILocation(line: 1318, column: 2, scope: !9887)
!9970 = !DILocation(line: 1319, column: 1, scope: !9887)
!9971 = distinct !DISubprogram(name: "vrrp_in_chk", scope: !512, file: !512, line: 655, type: !2990, isLocal: true, isDefinition: true, scopeLine: 656, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!9972 = !DILocalVariable(name: "vrrp", arg: 1, scope: !9971, file: !512, line: 655, type: !537)
!9973 = !DILocation(line: 655, column: 22, scope: !9971)
!9974 = !DILocalVariable(name: "buffer", arg: 2, scope: !9971, file: !512, line: 655, type: !230)
!9975 = !DILocation(line: 655, column: 34, scope: !9971)
!9976 = !DILocalVariable(name: "buflen_ret", arg: 3, scope: !9971, file: !512, line: 655, type: !1458)
!9977 = !DILocation(line: 655, column: 50, scope: !9971)
!9978 = !DILocalVariable(name: "check_vip_addr", arg: 4, scope: !9971, file: !512, line: 655, type: !350)
!9979 = !DILocation(line: 655, column: 66, scope: !9971)
!9980 = !DILocalVariable(name: "ip", scope: !9971, file: !512, line: 657, type: !184)
!9981 = !DILocation(line: 657, column: 16, scope: !9971)
!9982 = !DILocalVariable(name: "ihl", scope: !9971, file: !512, line: 658, type: !300)
!9983 = !DILocation(line: 658, column: 6, scope: !9971)
!9984 = !DILocalVariable(name: "vrrppkt_len", scope: !9971, file: !512, line: 659, type: !292)
!9985 = !DILocation(line: 659, column: 9, scope: !9971)
!9986 = !DILocalVariable(name: "adver_int", scope: !9971, file: !512, line: 660, type: !189)
!9987 = !DILocation(line: 660, column: 11, scope: !9971)
!9988 = !DILocalVariable(name: "ah", scope: !9971, file: !512, line: 662, type: !276)
!9989 = !DILocation(line: 662, column: 14, scope: !9971)
!9990 = !DILocalVariable(name: "hd", scope: !9971, file: !512, line: 664, type: !206)
!9991 = !DILocation(line: 664, column: 13, scope: !9971)
!9992 = !DILocalVariable(name: "vips", scope: !9971, file: !512, line: 665, type: !291)
!9993 = !DILocation(line: 665, column: 17, scope: !9971)
!9994 = !DILocalVariable(name: "ipaddress", scope: !9971, file: !512, line: 666, type: !311)
!9995 = !DILocation(line: 666, column: 16, scope: !9971)
!9996 = !DILocalVariable(name: "e", scope: !9971, file: !512, line: 667, type: !984)
!9997 = !DILocation(line: 667, column: 10, scope: !9971)
!9998 = !DILocalVariable(name: "addr_str", scope: !9971, file: !512, line: 668, type: !1749)
!9999 = !DILocation(line: 668, column: 7, scope: !9971)
!10000 = !DILocalVariable(name: "ipv4_phdr", scope: !9971, file: !512, line: 669, type: !10001)
!10001 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipv4_phdr_t", file: !4, line: 80, baseType: !10002)
!10002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 74, size: 96, align: 32, elements: !10003)
!10003 = !{!10004, !10005, !10006, !10007, !10008}
!10004 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !10002, file: !4, line: 75, baseType: !246, size: 32, align: 32)
!10005 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !10002, file: !4, line: 76, baseType: !246, size: 32, align: 32, offset: 32)
!10006 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !10002, file: !4, line: 77, baseType: !211, size: 8, align: 8, offset: 64)
!10007 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !10002, file: !4, line: 78, baseType: !211, size: 8, align: 8, offset: 72)
!10008 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !10002, file: !4, line: 79, baseType: !228, size: 16, align: 16, offset: 80)
!10009 = !DILocation(line: 669, column: 14, scope: !9971)
!10010 = !DILocalVariable(name: "acc_csum", scope: !9971, file: !512, line: 670, type: !246)
!10011 = !DILocation(line: 670, column: 11, scope: !9971)
!10012 = !DILocation(line: 671, column: 5, scope: !9971)
!10013 = !DILocalVariable(name: "up_addr", scope: !9971, file: !512, line: 672, type: !981)
!10014 = !DILocation(line: 672, column: 27, scope: !9971)
!10015 = !DILocalVariable(name: "buflen", scope: !9971, file: !512, line: 673, type: !292)
!10016 = !DILocation(line: 673, column: 9, scope: !9971)
!10017 = !DILocalVariable(name: "expected_len", scope: !9971, file: !512, line: 673, type: !292)
!10018 = !DILocation(line: 673, column: 17, scope: !9971)
!10019 = !DILocalVariable(name: "chksum_error", scope: !9971, file: !512, line: 675, type: !350)
!10020 = !DILocation(line: 675, column: 6, scope: !9971)
!10021 = !DILocation(line: 678, column: 6, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 678, column: 6)
!10023 = !DILocation(line: 678, column: 17, scope: !10022)
!10024 = !DILocation(line: 678, column: 6, scope: !9971)
!10025 = !DILocation(line: 679, column: 48, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10022, file: !512, line: 678, column: 22)
!10027 = !DILocation(line: 679, column: 3, scope: !10026)
!10028 = !DILocation(line: 680, column: 3, scope: !10026)
!10029 = !DILocation(line: 682, column: 19, scope: !9971)
!10030 = !DILocation(line: 682, column: 9, scope: !9971)
!10031 = !DILocation(line: 685, column: 6, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 685, column: 6)
!10033 = !DILocation(line: 685, column: 12, scope: !10032)
!10034 = !DILocation(line: 685, column: 19, scope: !10032)
!10035 = !DILocation(line: 685, column: 6, scope: !9971)
!10036 = !DILocation(line: 687, column: 18, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10032, file: !512, line: 685, column: 30)
!10038 = !DILocation(line: 687, column: 35, scope: !10037)
!10039 = !DILocation(line: 687, column: 16, scope: !10037)
!10040 = !DILocation(line: 689, column: 7, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10037, file: !512, line: 689, column: 7)
!10042 = !DILocation(line: 689, column: 13, scope: !10041)
!10043 = !DILocation(line: 689, column: 23, scope: !10041)
!10044 = !DILocation(line: 689, column: 7, scope: !10037)
!10045 = !DILocation(line: 690, column: 20, scope: !10041)
!10046 = !DILocation(line: 690, column: 17, scope: !10041)
!10047 = !DILocation(line: 690, column: 4, scope: !10041)
!10048 = !DILocation(line: 697, column: 7, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10037, file: !512, line: 697, column: 7)
!10050 = !DILocation(line: 697, column: 16, scope: !10049)
!10051 = !DILocation(line: 697, column: 14, scope: !10049)
!10052 = !DILocation(line: 697, column: 7, scope: !10037)
!10053 = !DILocation(line: 700, column: 10, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10049, file: !512, line: 697, column: 30)
!10055 = !DILocation(line: 700, column: 16, scope: !10054)
!10056 = !DILocation(line: 700, column: 23, scope: !10054)
!10057 = !DILocation(line: 700, column: 31, scope: !10054)
!10058 = !DILocation(line: 698, column: 4, scope: !10054)
!10059 = !DILocation(line: 701, column: 6, scope: !10054)
!10060 = !DILocation(line: 701, column: 12, scope: !10054)
!10061 = !DILocation(line: 701, column: 19, scope: !10054)
!10062 = !DILocation(line: 701, column: 4, scope: !10054)
!10063 = !DILocation(line: 702, column: 4, scope: !10054)
!10064 = !DILocation(line: 705, column: 26, scope: !10037)
!10065 = !DILocation(line: 705, column: 8, scope: !10037)
!10066 = !DILocation(line: 705, column: 6, scope: !10037)
!10067 = !DILocation(line: 706, column: 9, scope: !10037)
!10068 = !DILocation(line: 706, column: 13, scope: !10037)
!10069 = !DILocation(line: 706, column: 17, scope: !10037)
!10070 = !DILocation(line: 706, column: 7, scope: !10037)
!10071 = !DILocation(line: 709, column: 7, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10037, file: !512, line: 709, column: 7)
!10073 = !DILocation(line: 709, column: 13, scope: !10072)
!10074 = !DILocation(line: 709, column: 23, scope: !10072)
!10075 = !DILocation(line: 709, column: 7, scope: !10037)
!10076 = !DILocation(line: 710, column: 25, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10072, file: !512, line: 709, column: 29)
!10078 = !DILocation(line: 710, column: 34, scope: !10077)
!10079 = !DILocation(line: 710, column: 32, scope: !10077)
!10080 = !DILocation(line: 710, column: 9, scope: !10077)
!10081 = !DILocation(line: 710, column: 7, scope: !10077)
!10082 = !DILocation(line: 711, column: 33, scope: !10077)
!10083 = !DILocation(line: 711, column: 24, scope: !10077)
!10084 = !DILocation(line: 711, column: 38, scope: !10077)
!10085 = !DILocation(line: 711, column: 36, scope: !10077)
!10086 = !DILocation(line: 711, column: 9, scope: !10077)
!10087 = !DILocation(line: 711, column: 7, scope: !10077)
!10088 = !DILocation(line: 712, column: 3, scope: !10077)
!10089 = !DILocation(line: 714, column: 24, scope: !10072)
!10090 = !DILocation(line: 714, column: 33, scope: !10072)
!10091 = !DILocation(line: 714, column: 31, scope: !10072)
!10092 = !DILocation(line: 714, column: 9, scope: !10072)
!10093 = !DILocation(line: 714, column: 7, scope: !10072)
!10094 = !DILocation(line: 717, column: 32, scope: !10037)
!10095 = !DILocation(line: 717, column: 19, scope: !10037)
!10096 = !DILocation(line: 717, column: 38, scope: !10037)
!10097 = !DILocation(line: 717, column: 16, scope: !10037)
!10098 = !DILocation(line: 720, column: 9, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10037, file: !512, line: 720, column: 7)
!10100 = !DILocation(line: 720, column: 15, scope: !10099)
!10101 = !DILocation(line: 720, column: 29, scope: !10099)
!10102 = !DILocation(line: 720, column: 6, scope: !10099)
!10103 = !DILocation(line: 720, column: 11, scope: !10104)
!10104 = !DILexicalBlockFile(scope: !10099, file: !512, discriminator: 1)
!10105 = !DILocation(line: 720, column: 17, scope: !10104)
!10106 = !DILocation(line: 720, column: 32, scope: !10104)
!10107 = !DILocation(line: 720, column: 37, scope: !10104)
!10108 = !DILocation(line: 720, column: 6, scope: !10104)
!10109 = !DILocation(line: 720, column: 10, scope: !10110)
!10110 = !DILexicalBlockFile(scope: !10099, file: !512, discriminator: 2)
!10111 = !DILocation(line: 720, column: 16, scope: !10110)
!10112 = !DILocation(line: 720, column: 31, scope: !10110)
!10113 = !DILocation(line: 720, column: 36, scope: !10110)
!10114 = !DILocation(line: 720, column: 9, scope: !10110)
!10115 = !DILocation(line: 720, column: 12, scope: !10116)
!10116 = !DILexicalBlockFile(scope: !10099, file: !512, discriminator: 3)
!10117 = !DILocation(line: 720, column: 16, scope: !10116)
!10118 = !DILocation(line: 720, column: 20, scope: !10116)
!10119 = !DILocation(line: 720, column: 7, scope: !10116)
!10120 = !DILocation(line: 722, column: 5, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10099, file: !512, line: 720, column: 28)
!10122 = !DILocation(line: 722, column: 11, scope: !10121)
!10123 = !DILocation(line: 722, column: 18, scope: !10121)
!10124 = !DILocation(line: 722, column: 22, scope: !10121)
!10125 = !DILocation(line: 721, column: 4, scope: !10121)
!10126 = !DILocation(line: 723, column: 6, scope: !10121)
!10127 = !DILocation(line: 723, column: 12, scope: !10121)
!10128 = !DILocation(line: 723, column: 19, scope: !10121)
!10129 = !DILocation(line: 723, column: 4, scope: !10121)
!10130 = !DILocation(line: 728, column: 4, scope: !10121)
!10131 = !DILocation(line: 730, column: 2, scope: !10037)
!10132 = !DILocation(line: 730, column: 13, scope: !10133)
!10133 = !DILexicalBlockFile(scope: !10134, file: !512, discriminator: 1)
!10134 = distinct !DILexicalBlock(scope: !10032, file: !512, line: 730, column: 13)
!10135 = !DILocation(line: 730, column: 19, scope: !10133)
!10136 = !DILocation(line: 730, column: 26, scope: !10133)
!10137 = !DILocation(line: 735, column: 7, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !512, line: 735, column: 7)
!10139 = distinct !DILexicalBlock(scope: !10134, file: !512, line: 730, column: 38)
!10140 = !DILocation(line: 735, column: 14, scope: !10138)
!10141 = !DILocation(line: 735, column: 7, scope: !10139)
!10142 = !DILocation(line: 738, column: 10, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10138, file: !512, line: 735, column: 35)
!10144 = !DILocation(line: 738, column: 16, scope: !10143)
!10145 = !DILocation(line: 738, column: 23, scope: !10143)
!10146 = !DILocation(line: 736, column: 4, scope: !10143)
!10147 = !DILocation(line: 739, column: 6, scope: !10143)
!10148 = !DILocation(line: 739, column: 12, scope: !10143)
!10149 = !DILocation(line: 739, column: 19, scope: !10143)
!10150 = !DILocation(line: 739, column: 4, scope: !10143)
!10151 = !DILocation(line: 740, column: 4, scope: !10143)
!10152 = !DILocation(line: 743, column: 22, scope: !10139)
!10153 = !DILocation(line: 743, column: 8, scope: !10139)
!10154 = !DILocation(line: 743, column: 6, scope: !10139)
!10155 = !DILocation(line: 746, column: 41, scope: !10139)
!10156 = !DILocation(line: 746, column: 47, scope: !10139)
!10157 = !DILocation(line: 746, column: 52, scope: !10139)
!10158 = !DILocation(line: 746, column: 38, scope: !10139)
!10159 = !DILocation(line: 746, column: 43, scope: !10160)
!10160 = !DILexicalBlockFile(scope: !10139, file: !512, discriminator: 1)
!10161 = !DILocation(line: 746, column: 49, scope: !10160)
!10162 = !DILocation(line: 746, column: 55, scope: !10160)
!10163 = !DILocation(line: 746, column: 60, scope: !10160)
!10164 = !DILocation(line: 746, column: 38, scope: !10160)
!10165 = !DILocation(line: 746, column: 42, scope: !10166)
!10166 = !DILexicalBlockFile(scope: !10139, file: !512, discriminator: 2)
!10167 = !DILocation(line: 746, column: 48, scope: !10166)
!10168 = !DILocation(line: 746, column: 54, scope: !10166)
!10169 = !DILocation(line: 746, column: 59, scope: !10166)
!10170 = !DILocation(line: 746, column: 39, scope: !10166)
!10171 = !DILocation(line: 746, column: 39, scope: !10172)
!10172 = !DILexicalBlockFile(scope: !10139, file: !512, discriminator: 3)
!10173 = !DILocation(line: 746, column: 49, scope: !10174)
!10174 = !DILexicalBlockFile(scope: !10139, file: !512, discriminator: 4)
!10175 = !DILocation(line: 746, column: 55, scope: !10174)
!10176 = !DILocation(line: 746, column: 61, scope: !10174)
!10177 = !DILocation(line: 746, column: 39, scope: !10174)
!10178 = !DILocation(line: 746, column: 39, scope: !10179)
!10179 = !DILexicalBlockFile(scope: !10139, file: !512, discriminator: 5)
!10180 = !DILocation(line: 746, column: 38, scope: !10179)
!10181 = !DILocation(line: 746, column: 69, scope: !10179)
!10182 = !DILocation(line: 746, column: 36, scope: !10179)
!10183 = !DILocation(line: 746, column: 16, scope: !10179)
!10184 = !DILocation(line: 747, column: 2, scope: !10139)
!10185 = !DILocation(line: 748, column: 142, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10134, file: !512, line: 747, column: 9)
!10187 = !DILocation(line: 748, column: 148, scope: !10186)
!10188 = !DILocation(line: 748, column: 155, scope: !10186)
!10189 = !DILocation(line: 748, column: 161, scope: !10186)
!10190 = !DILocation(line: 748, column: 3, scope: !10186)
!10191 = !DILocation(line: 749, column: 3, scope: !10186)
!10192 = !DILocation(line: 752, column: 6, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 752, column: 6)
!10194 = !DILocation(line: 752, column: 12, scope: !10193)
!10195 = !DILocation(line: 752, column: 20, scope: !10193)
!10196 = !DILocation(line: 752, column: 6, scope: !9971)
!10197 = !DILocation(line: 756, column: 7, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10199, file: !512, line: 756, column: 7)
!10199 = distinct !DILexicalBlock(scope: !10193, file: !512, line: 752, column: 26)
!10200 = !DILocation(line: 756, column: 11, scope: !10198)
!10201 = !DILocation(line: 756, column: 14, scope: !10198)
!10202 = !DILocation(line: 756, column: 24, scope: !10198)
!10203 = !DILocation(line: 756, column: 29, scope: !10198)
!10204 = !DILocation(line: 757, column: 7, scope: !10198)
!10205 = !DILocation(line: 757, column: 11, scope: !10198)
!10206 = !DILocation(line: 757, column: 14, scope: !10198)
!10207 = !DILocation(line: 757, column: 24, scope: !10198)
!10208 = !DILocation(line: 757, column: 29, scope: !10198)
!10209 = !DILocation(line: 759, column: 7, scope: !10198)
!10210 = !DILocation(line: 759, column: 11, scope: !10198)
!10211 = !DILocation(line: 759, column: 14, scope: !10198)
!10212 = !DILocation(line: 759, column: 24, scope: !10198)
!10213 = !DILocation(line: 756, column: 7, scope: !10214)
!10214 = !DILexicalBlockFile(scope: !10199, file: !512, discriminator: 1)
!10215 = !DILocation(line: 760, column: 55, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10198, file: !512, line: 759, column: 30)
!10217 = !DILocation(line: 760, column: 61, scope: !10216)
!10218 = !DILocation(line: 760, column: 68, scope: !10216)
!10219 = !DILocation(line: 760, column: 72, scope: !10216)
!10220 = !DILocation(line: 760, column: 75, scope: !10216)
!10221 = !DILocation(line: 760, column: 4, scope: !10216)
!10222 = !DILocation(line: 761, column: 6, scope: !10216)
!10223 = !DILocation(line: 761, column: 12, scope: !10216)
!10224 = !DILocation(line: 761, column: 19, scope: !10216)
!10225 = !DILocation(line: 761, column: 4, scope: !10216)
!10226 = !DILocation(line: 765, column: 4, scope: !10216)
!10227 = !DILocation(line: 773, column: 7, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10199, file: !512, line: 773, column: 7)
!10229 = !DILocation(line: 773, column: 13, scope: !10228)
!10230 = !DILocation(line: 773, column: 26, scope: !10228)
!10231 = !DILocation(line: 773, column: 30, scope: !10228)
!10232 = !DILocation(line: 773, column: 33, scope: !10228)
!10233 = !DILocation(line: 773, column: 23, scope: !10228)
!10234 = !DILocation(line: 773, column: 7, scope: !10199)
!10235 = !DILocation(line: 775, column: 11, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10228, file: !512, line: 773, column: 44)
!10237 = !DILocation(line: 775, column: 17, scope: !10236)
!10238 = !DILocation(line: 775, column: 24, scope: !10236)
!10239 = !DILocation(line: 775, column: 28, scope: !10236)
!10240 = !DILocation(line: 775, column: 31, scope: !10236)
!10241 = !DILocation(line: 775, column: 42, scope: !10236)
!10242 = !DILocation(line: 775, column: 48, scope: !10236)
!10243 = !DILocation(line: 774, column: 4, scope: !10236)
!10244 = !DILocation(line: 776, column: 6, scope: !10236)
!10245 = !DILocation(line: 776, column: 12, scope: !10236)
!10246 = !DILocation(line: 776, column: 19, scope: !10236)
!10247 = !DILocation(line: 776, column: 4, scope: !10236)
!10248 = !DILocation(line: 780, column: 4, scope: !10236)
!10249 = !DILocation(line: 783, column: 7, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10199, file: !512, line: 783, column: 7)
!10251 = !DILocation(line: 783, column: 13, scope: !10250)
!10252 = !DILocation(line: 783, column: 23, scope: !10250)
!10253 = !DILocation(line: 783, column: 7, scope: !10199)
!10254 = !DILocalVariable(name: "pw", scope: !10255, file: !512, line: 785, type: !230)
!10255 = distinct !DILexicalBlock(scope: !10250, file: !512, line: 783, column: 29)
!10256 = !DILocation(line: 785, column: 10, scope: !10255)
!10257 = !DILocation(line: 785, column: 24, scope: !10255)
!10258 = !DILocation(line: 785, column: 15, scope: !10255)
!10259 = !DILocation(line: 785, column: 35, scope: !10255)
!10260 = !DILocation(line: 785, column: 39, scope: !10255)
!10261 = !DILocation(line: 785, column: 29, scope: !10255)
!10262 = !DILocation(line: 785, column: 27, scope: !10255)
!10263 = !DILocation(line: 786, column: 8, scope: !10255)
!10264 = !DILocation(line: 787, column: 15, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10255, file: !512, line: 787, column: 8)
!10266 = !DILocation(line: 787, column: 19, scope: !10265)
!10267 = !DILocation(line: 787, column: 25, scope: !10265)
!10268 = !DILocation(line: 787, column: 8, scope: !10265)
!10269 = !DILocation(line: 787, column: 61, scope: !10265)
!10270 = !DILocation(line: 787, column: 8, scope: !10255)
!10271 = !DILocation(line: 788, column: 62, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10265, file: !512, line: 787, column: 67)
!10273 = !DILocation(line: 788, column: 68, scope: !10272)
!10274 = !DILocation(line: 788, column: 5, scope: !10272)
!10275 = !DILocation(line: 789, column: 7, scope: !10272)
!10276 = !DILocation(line: 789, column: 13, scope: !10272)
!10277 = !DILocation(line: 789, column: 20, scope: !10272)
!10278 = !DILocation(line: 789, column: 5, scope: !10272)
!10279 = !DILocation(line: 793, column: 5, scope: !10272)
!10280 = !DILocation(line: 795, column: 3, scope: !10255)
!10281 = !DILocation(line: 796, column: 12, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10250, file: !512, line: 796, column: 12)
!10283 = !DILocation(line: 796, column: 16, scope: !10282)
!10284 = !DILocation(line: 796, column: 19, scope: !10282)
!10285 = !DILocation(line: 796, column: 29, scope: !10282)
!10286 = !DILocation(line: 796, column: 12, scope: !10250)
!10287 = !DILocation(line: 798, column: 28, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10289, file: !512, line: 798, column: 8)
!10289 = distinct !DILexicalBlock(scope: !10282, file: !512, line: 796, column: 35)
!10290 = !DILocation(line: 798, column: 34, scope: !10288)
!10291 = !DILocation(line: 798, column: 8, scope: !10288)
!10292 = !DILocation(line: 798, column: 8, scope: !10289)
!10293 = !DILocation(line: 799, column: 7, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10288, file: !512, line: 798, column: 43)
!10295 = !DILocation(line: 799, column: 13, scope: !10294)
!10296 = !DILocation(line: 799, column: 20, scope: !10294)
!10297 = !DILocation(line: 799, column: 5, scope: !10294)
!10298 = !DILocation(line: 803, column: 5, scope: !10294)
!10299 = !DILocation(line: 808, column: 8, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10289, file: !512, line: 808, column: 8)
!10301 = !DILocation(line: 808, column: 14, scope: !10300)
!10302 = !DILocation(line: 808, column: 20, scope: !10300)
!10303 = !DILocation(line: 808, column: 25, scope: !10300)
!10304 = !DILocation(line: 809, column: 14, scope: !10300)
!10305 = !DILocation(line: 809, column: 18, scope: !10300)
!10306 = !DILocation(line: 809, column: 8, scope: !10300)
!10307 = !DILocation(line: 809, column: 33, scope: !10300)
!10308 = !DILocation(line: 809, column: 39, scope: !10300)
!10309 = !DILocation(line: 809, column: 55, scope: !10300)
!10310 = !DILocation(line: 809, column: 30, scope: !10300)
!10311 = !DILocation(line: 808, column: 8, scope: !10312)
!10312 = !DILexicalBlockFile(scope: !10289, file: !512, discriminator: 1)
!10313 = !DILocation(line: 810, column: 5, scope: !10300)
!10314 = !DILocation(line: 810, column: 11, scope: !10300)
!10315 = !DILocation(line: 810, column: 27, scope: !10300)
!10316 = !DILocation(line: 810, column: 33, scope: !10300)
!10317 = !DILocation(line: 811, column: 3, scope: !10289)
!10318 = !DILocation(line: 818, column: 7, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10199, file: !512, line: 818, column: 7)
!10320 = !DILocation(line: 818, column: 13, scope: !10319)
!10321 = !DILocation(line: 818, column: 26, scope: !10319)
!10322 = !DILocation(line: 818, column: 30, scope: !10319)
!10323 = !DILocation(line: 818, column: 33, scope: !10319)
!10324 = !DILocation(line: 818, column: 43, scope: !10319)
!10325 = !DILocation(line: 818, column: 23, scope: !10319)
!10326 = !DILocation(line: 818, column: 7, scope: !10199)
!10327 = !DILocation(line: 820, column: 5, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10319, file: !512, line: 818, column: 55)
!10329 = !DILocation(line: 820, column: 11, scope: !10328)
!10330 = !DILocation(line: 820, column: 18, scope: !10328)
!10331 = !DILocation(line: 820, column: 24, scope: !10328)
!10332 = !DILocation(line: 820, column: 34, scope: !10328)
!10333 = !DILocation(line: 820, column: 46, scope: !10328)
!10334 = !DILocation(line: 820, column: 56, scope: !10328)
!10335 = !DILocation(line: 819, column: 4, scope: !10328)
!10336 = !DILocation(line: 822, column: 4, scope: !10328)
!10337 = !DILocation(line: 825, column: 2, scope: !10199)
!10338 = !DILocation(line: 828, column: 7, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 828, column: 6)
!10340 = !DILocation(line: 828, column: 11, scope: !10339)
!10341 = !DILocation(line: 828, column: 21, scope: !10339)
!10342 = !DILocation(line: 828, column: 30, scope: !10339)
!10343 = !DILocation(line: 828, column: 36, scope: !10339)
!10344 = !DILocation(line: 828, column: 27, scope: !10339)
!10345 = !DILocation(line: 828, column: 6, scope: !9971)
!10346 = !DILocation(line: 830, column: 10, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10339, file: !512, line: 828, column: 45)
!10348 = !DILocation(line: 830, column: 16, scope: !10347)
!10349 = !DILocation(line: 830, column: 24, scope: !10347)
!10350 = !DILocation(line: 830, column: 28, scope: !10347)
!10351 = !DILocation(line: 830, column: 38, scope: !10347)
!10352 = !DILocation(line: 830, column: 45, scope: !10347)
!10353 = !DILocation(line: 830, column: 51, scope: !10347)
!10354 = !DILocation(line: 829, column: 3, scope: !10347)
!10355 = !DILocation(line: 838, column: 3, scope: !10347)
!10356 = !DILocation(line: 842, column: 7, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 842, column: 6)
!10358 = !DILocation(line: 842, column: 11, scope: !10357)
!10359 = !DILocation(line: 842, column: 21, scope: !10357)
!10360 = !DILocation(line: 842, column: 29, scope: !10357)
!10361 = !DILocation(line: 842, column: 6, scope: !9971)
!10362 = !DILocation(line: 844, column: 4, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10357, file: !512, line: 842, column: 35)
!10364 = !DILocation(line: 844, column: 10, scope: !10363)
!10365 = !DILocation(line: 844, column: 18, scope: !10363)
!10366 = !DILocation(line: 844, column: 22, scope: !10363)
!10367 = !DILocation(line: 844, column: 32, scope: !10363)
!10368 = !DILocation(line: 843, column: 3, scope: !10363)
!10369 = !DILocation(line: 845, column: 5, scope: !10363)
!10370 = !DILocation(line: 845, column: 11, scope: !10363)
!10371 = !DILocation(line: 845, column: 18, scope: !10363)
!10372 = !DILocation(line: 845, column: 3, scope: !10363)
!10373 = !DILocation(line: 846, column: 3, scope: !10363)
!10374 = !DILocation(line: 850, column: 6, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 850, column: 6)
!10376 = !DILocation(line: 850, column: 12, scope: !10375)
!10377 = !DILocation(line: 850, column: 20, scope: !10375)
!10378 = !DILocation(line: 850, column: 24, scope: !10375)
!10379 = !DILocation(line: 850, column: 17, scope: !10375)
!10380 = !DILocation(line: 850, column: 6, scope: !9971)
!10381 = !DILocation(line: 853, column: 10, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10375, file: !512, line: 850, column: 30)
!10383 = !DILocation(line: 853, column: 16, scope: !10382)
!10384 = !DILocation(line: 853, column: 23, scope: !10382)
!10385 = !DILocation(line: 853, column: 27, scope: !10382)
!10386 = !DILocation(line: 853, column: 33, scope: !10382)
!10387 = !DILocation(line: 853, column: 39, scope: !10382)
!10388 = !DILocation(line: 851, column: 3, scope: !10382)
!10389 = !DILocation(line: 861, column: 3, scope: !10382)
!10390 = !DILocation(line: 864, column: 9, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 864, column: 6)
!10392 = !DILocation(line: 864, column: 15, scope: !10391)
!10393 = !DILocation(line: 864, column: 20, scope: !10391)
!10394 = !DILocation(line: 864, column: 6, scope: !10391)
!10395 = !DILocation(line: 864, column: 11, scope: !10396)
!10396 = !DILexicalBlockFile(scope: !10391, file: !512, discriminator: 1)
!10397 = !DILocation(line: 864, column: 17, scope: !10396)
!10398 = !DILocation(line: 864, column: 23, scope: !10396)
!10399 = !DILocation(line: 864, column: 28, scope: !10396)
!10400 = !DILocation(line: 864, column: 6, scope: !10396)
!10401 = !DILocation(line: 864, column: 10, scope: !10402)
!10402 = !DILexicalBlockFile(scope: !10391, file: !512, discriminator: 2)
!10403 = !DILocation(line: 864, column: 16, scope: !10402)
!10404 = !DILocation(line: 864, column: 22, scope: !10402)
!10405 = !DILocation(line: 864, column: 27, scope: !10402)
!10406 = !DILocation(line: 864, column: 9, scope: !10402)
!10407 = !DILocation(line: 864, column: 12, scope: !10408)
!10408 = !DILexicalBlockFile(scope: !10391, file: !512, discriminator: 3)
!10409 = !DILocation(line: 864, column: 16, scope: !10408)
!10410 = !DILocation(line: 864, column: 22, scope: !10408)
!10411 = !DILocation(line: 864, column: 27, scope: !10408)
!10412 = !DILocation(line: 865, column: 10, scope: !10391)
!10413 = !DILocation(line: 865, column: 16, scope: !10391)
!10414 = !DILocation(line: 865, column: 21, scope: !10391)
!10415 = !DILocation(line: 865, column: 7, scope: !10391)
!10416 = !DILocation(line: 865, column: 12, scope: !10396)
!10417 = !DILocation(line: 865, column: 18, scope: !10396)
!10418 = !DILocation(line: 865, column: 24, scope: !10396)
!10419 = !DILocation(line: 865, column: 29, scope: !10396)
!10420 = !DILocation(line: 865, column: 7, scope: !10396)
!10421 = !DILocation(line: 865, column: 11, scope: !10402)
!10422 = !DILocation(line: 865, column: 17, scope: !10402)
!10423 = !DILocation(line: 865, column: 23, scope: !10402)
!10424 = !DILocation(line: 865, column: 28, scope: !10402)
!10425 = !DILocation(line: 865, column: 10, scope: !10402)
!10426 = !DILocation(line: 865, column: 15, scope: !10408)
!10427 = !DILocation(line: 865, column: 21, scope: !10408)
!10428 = !DILocation(line: 865, column: 27, scope: !10408)
!10429 = !DILocation(line: 865, column: 37, scope: !10408)
!10430 = !DILocation(line: 865, column: 41, scope: !10408)
!10431 = !DILocation(line: 865, column: 34, scope: !10408)
!10432 = !DILocation(line: 864, column: 6, scope: !10433)
!10433 = !DILexicalBlockFile(scope: !9971, file: !512, discriminator: 4)
!10434 = !DILocation(line: 867, column: 4, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10391, file: !512, line: 865, column: 49)
!10436 = !DILocation(line: 867, column: 10, scope: !10435)
!10437 = !DILocation(line: 867, column: 17, scope: !10435)
!10438 = !DILocation(line: 867, column: 21, scope: !10435)
!10439 = !DILocation(line: 867, column: 30, scope: !10435)
!10440 = !DILocation(line: 867, column: 36, scope: !10435)
!10441 = !DILocation(line: 867, column: 41, scope: !10435)
!10442 = !DILocation(line: 867, column: 27, scope: !10435)
!10443 = !DILocation(line: 867, column: 32, scope: !10444)
!10444 = !DILexicalBlockFile(scope: !10435, file: !512, discriminator: 1)
!10445 = !DILocation(line: 867, column: 38, scope: !10444)
!10446 = !DILocation(line: 867, column: 44, scope: !10444)
!10447 = !DILocation(line: 867, column: 49, scope: !10444)
!10448 = !DILocation(line: 867, column: 27, scope: !10444)
!10449 = !DILocation(line: 867, column: 31, scope: !10450)
!10450 = !DILexicalBlockFile(scope: !10435, file: !512, discriminator: 2)
!10451 = !DILocation(line: 867, column: 37, scope: !10450)
!10452 = !DILocation(line: 867, column: 43, scope: !10450)
!10453 = !DILocation(line: 867, column: 48, scope: !10450)
!10454 = !DILocation(line: 867, column: 28, scope: !10450)
!10455 = !DILocation(line: 867, column: 28, scope: !10456)
!10456 = !DILexicalBlockFile(scope: !10435, file: !512, discriminator: 3)
!10457 = !DILocation(line: 867, column: 38, scope: !10458)
!10458 = !DILexicalBlockFile(scope: !10435, file: !512, discriminator: 4)
!10459 = !DILocation(line: 867, column: 44, scope: !10458)
!10460 = !DILocation(line: 867, column: 50, scope: !10458)
!10461 = !DILocation(line: 867, column: 28, scope: !10458)
!10462 = !DILocation(line: 867, column: 28, scope: !10463)
!10463 = !DILexicalBlockFile(scope: !10435, file: !512, discriminator: 5)
!10464 = !DILocation(line: 866, column: 3, scope: !10435)
!10465 = !DILocation(line: 868, column: 5, scope: !10435)
!10466 = !DILocation(line: 868, column: 11, scope: !10435)
!10467 = !DILocation(line: 868, column: 18, scope: !10435)
!10468 = !DILocation(line: 868, column: 3, scope: !10435)
!10469 = !DILocation(line: 869, column: 3, scope: !10435)
!10470 = !DILocation(line: 872, column: 6, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 872, column: 6)
!10472 = !DILocation(line: 872, column: 12, scope: !10471)
!10473 = !DILocation(line: 872, column: 19, scope: !10471)
!10474 = !DILocation(line: 872, column: 29, scope: !10471)
!10475 = !DILocation(line: 872, column: 38, scope: !10476)
!10476 = !DILexicalBlockFile(scope: !10471, file: !512, discriminator: 1)
!10477 = !DILocation(line: 872, column: 42, scope: !10476)
!10478 = !DILocation(line: 872, column: 32, scope: !10476)
!10479 = !DILocation(line: 872, column: 54, scope: !10476)
!10480 = !DILocation(line: 872, column: 51, scope: !10476)
!10481 = !DILocation(line: 872, column: 6, scope: !10476)
!10482 = !DILocation(line: 875, column: 10, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10471, file: !512, line: 872, column: 62)
!10484 = !DILocation(line: 875, column: 16, scope: !10483)
!10485 = !DILocation(line: 875, column: 29, scope: !10483)
!10486 = !DILocation(line: 875, column: 33, scope: !10483)
!10487 = !DILocation(line: 875, column: 23, scope: !10483)
!10488 = !DILocation(line: 875, column: 43, scope: !10483)
!10489 = !DILocation(line: 873, column: 3, scope: !10483)
!10490 = !DILocation(line: 876, column: 5, scope: !10483)
!10491 = !DILocation(line: 876, column: 11, scope: !10483)
!10492 = !DILocation(line: 876, column: 18, scope: !10483)
!10493 = !DILocation(line: 876, column: 3, scope: !10483)
!10494 = !DILocation(line: 877, column: 3, scope: !10483)
!10495 = !DILocation(line: 880, column: 6, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 880, column: 6)
!10497 = !DILocation(line: 880, column: 22, scope: !10496)
!10498 = !DILocation(line: 880, column: 19, scope: !10496)
!10499 = !DILocation(line: 880, column: 6, scope: !9971)
!10500 = !DILocation(line: 883, column: 9, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10496, file: !512, line: 880, column: 30)
!10502 = !DILocation(line: 883, column: 15, scope: !10501)
!10503 = !DILocation(line: 883, column: 22, scope: !10501)
!10504 = !DILocation(line: 883, column: 30, scope: !10501)
!10505 = !DILocation(line: 881, column: 3, scope: !10501)
!10506 = !DILocation(line: 884, column: 5, scope: !10501)
!10507 = !DILocation(line: 884, column: 11, scope: !10501)
!10508 = !DILocation(line: 884, column: 18, scope: !10501)
!10509 = !DILocation(line: 884, column: 3, scope: !10501)
!10510 = !DILocation(line: 885, column: 3, scope: !10501)
!10511 = !DILocation(line: 889, column: 6, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 889, column: 6)
!10513 = !DILocation(line: 889, column: 12, scope: !10512)
!10514 = !DILocation(line: 889, column: 19, scope: !10512)
!10515 = !DILocation(line: 889, column: 6, scope: !9971)
!10516 = !DILocation(line: 890, column: 37, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10512, file: !512, line: 889, column: 30)
!10518 = !DILocation(line: 890, column: 41, scope: !10517)
!10519 = !DILocation(line: 890, column: 47, scope: !10517)
!10520 = !DILocation(line: 890, column: 35, scope: !10517)
!10521 = !DILocation(line: 890, column: 15, scope: !10517)
!10522 = !DILocation(line: 891, column: 7, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10517, file: !512, line: 891, column: 7)
!10524 = !DILocation(line: 891, column: 13, scope: !10523)
!10525 = !DILocation(line: 891, column: 21, scope: !10523)
!10526 = !DILocation(line: 891, column: 7, scope: !10517)
!10527 = !DILocation(line: 893, column: 20, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10523, file: !512, line: 891, column: 27)
!10529 = !DILocation(line: 893, column: 24, scope: !10528)
!10530 = !DILocation(line: 893, column: 14, scope: !10528)
!10531 = !DILocation(line: 893, column: 18, scope: !10528)
!10532 = !DILocation(line: 895, column: 20, scope: !10528)
!10533 = !DILocation(line: 895, column: 26, scope: !10528)
!10534 = !DILocation(line: 895, column: 48, scope: !10528)
!10535 = !DILocation(line: 896, column: 10, scope: !10528)
!10536 = !DILocation(line: 896, column: 14, scope: !10528)
!10537 = !DILocation(line: 895, column: 20, scope: !10538)
!10538 = !DILexicalBlockFile(scope: !10528, file: !512, discriminator: 1)
!10539 = !DILocation(line: 896, column: 22, scope: !10538)
!10540 = !DILocation(line: 896, column: 35, scope: !10538)
!10541 = !DILocation(line: 896, column: 53, scope: !10538)
!10542 = !DILocation(line: 896, column: 62, scope: !10538)
!10543 = !DILocation(line: 895, column: 20, scope: !10544)
!10544 = !DILexicalBlockFile(scope: !10528, file: !512, discriminator: 2)
!10545 = !DILocation(line: 895, column: 20, scope: !10546)
!10546 = !DILexicalBlockFile(scope: !10528, file: !512, discriminator: 3)
!10547 = !DILocation(line: 895, column: 14, scope: !10546)
!10548 = !DILocation(line: 895, column: 18, scope: !10546)
!10549 = !DILocation(line: 900, column: 14, scope: !10528)
!10550 = !DILocation(line: 900, column: 19, scope: !10528)
!10551 = !DILocation(line: 901, column: 14, scope: !10528)
!10552 = !DILocation(line: 901, column: 20, scope: !10528)
!10553 = !DILocation(line: 902, column: 26, scope: !10528)
!10554 = !DILocation(line: 902, column: 20, scope: !10528)
!10555 = !DILocation(line: 902, column: 14, scope: !10528)
!10556 = !DILocation(line: 902, column: 18, scope: !10528)
!10557 = !DILocation(line: 904, column: 12, scope: !10528)
!10558 = !DILocation(line: 904, column: 4, scope: !10528)
!10559 = !DILocation(line: 905, column: 29, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10528, file: !512, line: 905, column: 8)
!10561 = !DILocation(line: 905, column: 16, scope: !10560)
!10562 = !DILocation(line: 905, column: 33, scope: !10560)
!10563 = !DILocation(line: 905, column: 46, scope: !10560)
!10564 = !DILocation(line: 905, column: 8, scope: !10560)
!10565 = !DILocation(line: 905, column: 8, scope: !10528)
!10566 = !DILocation(line: 907, column: 18, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10560, file: !512, line: 905, column: 62)
!10568 = !DILocation(line: 908, column: 12, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10567, file: !512, line: 908, column: 9)
!10570 = !DILocation(line: 908, column: 18, scope: !10569)
!10571 = !DILocation(line: 908, column: 32, scope: !10569)
!10572 = !DILocation(line: 908, column: 9, scope: !10569)
!10573 = !DILocation(line: 908, column: 14, scope: !10574)
!10574 = !DILexicalBlockFile(scope: !10569, file: !512, discriminator: 1)
!10575 = !DILocation(line: 908, column: 20, scope: !10574)
!10576 = !DILocation(line: 908, column: 35, scope: !10574)
!10577 = !DILocation(line: 908, column: 40, scope: !10574)
!10578 = !DILocation(line: 908, column: 9, scope: !10574)
!10579 = !DILocation(line: 908, column: 13, scope: !10580)
!10580 = !DILexicalBlockFile(scope: !10569, file: !512, discriminator: 2)
!10581 = !DILocation(line: 908, column: 19, scope: !10580)
!10582 = !DILocation(line: 908, column: 34, scope: !10580)
!10583 = !DILocation(line: 908, column: 39, scope: !10580)
!10584 = !DILocation(line: 908, column: 12, scope: !10580)
!10585 = !DILocation(line: 909, column: 9, scope: !10569)
!10586 = !DILocation(line: 909, column: 15, scope: !10569)
!10587 = !DILocation(line: 909, column: 37, scope: !10569)
!10588 = !DILocation(line: 909, column: 66, scope: !10569)
!10589 = !DILocation(line: 910, column: 19, scope: !10569)
!10590 = !DILocation(line: 910, column: 26, scope: !10569)
!10591 = !DILocation(line: 910, column: 39, scope: !10569)
!10592 = !DILocation(line: 910, column: 57, scope: !10569)
!10593 = !DILocation(line: 910, column: 66, scope: !10569)
!10594 = !DILocation(line: 910, column: 23, scope: !10569)
!10595 = !DILocation(line: 908, column: 9, scope: !10596)
!10596 = !DILexicalBlockFile(scope: !10567, file: !512, discriminator: 3)
!10597 = !DILocation(line: 911, column: 22, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10569, file: !512, line: 910, column: 74)
!10599 = !DILocation(line: 911, column: 35, scope: !10598)
!10600 = !DILocation(line: 911, column: 53, scope: !10598)
!10601 = !DILocation(line: 911, column: 62, scope: !10598)
!10602 = !DILocation(line: 911, column: 16, scope: !10598)
!10603 = !DILocation(line: 911, column: 20, scope: !10598)
!10604 = !DILocation(line: 912, column: 14, scope: !10598)
!10605 = !DILocation(line: 912, column: 6, scope: !10598)
!10606 = !DILocation(line: 913, column: 31, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10598, file: !512, line: 913, column: 10)
!10608 = !DILocation(line: 913, column: 19, scope: !10607)
!10609 = !DILocation(line: 913, column: 35, scope: !10607)
!10610 = !DILocation(line: 913, column: 48, scope: !10607)
!10611 = !DILocation(line: 913, column: 11, scope: !10607)
!10612 = !DILocation(line: 913, column: 10, scope: !10598)
!10613 = !DILocation(line: 915, column: 23, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10607, file: !512, line: 913, column: 64)
!10615 = !DILocation(line: 915, column: 7, scope: !10614)
!10616 = !DILocation(line: 918, column: 7, scope: !10614)
!10617 = !DILocation(line: 918, column: 13, scope: !10614)
!10618 = !DILocation(line: 918, column: 35, scope: !10614)
!10619 = !DILocation(line: 920, column: 83, scope: !10614)
!10620 = !DILocation(line: 920, column: 89, scope: !10614)
!10621 = !DILocation(line: 920, column: 7, scope: !10614)
!10622 = !DILocation(line: 921, column: 20, scope: !10614)
!10623 = !DILocation(line: 922, column: 6, scope: !10614)
!10624 = !DILocation(line: 923, column: 5, scope: !10598)
!10625 = !DILocation(line: 925, column: 9, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10567, file: !512, line: 925, column: 9)
!10627 = !DILocation(line: 925, column: 9, scope: !10567)
!10628 = !DILocation(line: 928, column: 59, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10626, file: !512, line: 927, column: 5)
!10630 = !DILocation(line: 928, column: 65, scope: !10629)
!10631 = !DILocation(line: 928, column: 6, scope: !10629)
!10632 = !DILocation(line: 936, column: 6, scope: !10629)
!10633 = !DILocation(line: 938, column: 4, scope: !10567)
!10634 = !DILocation(line: 939, column: 3, scope: !10528)
!10635 = !DILocation(line: 940, column: 16, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10523, file: !512, line: 939, column: 10)
!10637 = !DILocation(line: 941, column: 29, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10636, file: !512, line: 941, column: 8)
!10639 = !DILocation(line: 941, column: 16, scope: !10638)
!10640 = !DILocation(line: 941, column: 33, scope: !10638)
!10641 = !DILocation(line: 941, column: 8, scope: !10638)
!10642 = !DILocation(line: 941, column: 8, scope: !10636)
!10643 = !DILocation(line: 942, column: 58, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10638, file: !512, line: 941, column: 55)
!10645 = !DILocation(line: 942, column: 64, scope: !10644)
!10646 = !DILocation(line: 942, column: 5, scope: !10644)
!10647 = !DILocation(line: 950, column: 5, scope: !10644)
!10648 = !DILocation(line: 953, column: 2, scope: !10517)
!10649 = !DILocation(line: 956, column: 4, scope: !9971)
!10650 = !DILocation(line: 956, column: 10, scope: !9971)
!10651 = !DILocation(line: 956, column: 17, scope: !9971)
!10652 = !DILocation(line: 956, column: 2, scope: !9971)
!10653 = !DILocation(line: 959, column: 37, scope: !9971)
!10654 = !DILocation(line: 959, column: 28, scope: !9971)
!10655 = !DILocation(line: 959, column: 40, scope: !9971)
!10656 = !DILocation(line: 959, column: 7, scope: !9971)
!10657 = !DILocation(line: 961, column: 6, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 961, column: 6)
!10659 = !DILocation(line: 961, column: 6, scope: !9971)
!10660 = !DILocation(line: 962, column: 7, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10662, file: !512, line: 962, column: 7)
!10662 = distinct !DILexicalBlock(scope: !10658, file: !512, line: 961, column: 22)
!10663 = !DILocation(line: 962, column: 13, scope: !10661)
!10664 = !DILocation(line: 962, column: 20, scope: !10661)
!10665 = !DILocation(line: 962, column: 7, scope: !10662)
!10666 = !DILocation(line: 963, column: 11, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10668, file: !512, line: 963, column: 8)
!10668 = distinct !DILexicalBlock(scope: !10661, file: !512, line: 962, column: 31)
!10669 = !DILocation(line: 963, column: 17, scope: !10667)
!10670 = !DILocation(line: 963, column: 22, scope: !10667)
!10671 = !DILocation(line: 963, column: 8, scope: !10667)
!10672 = !DILocation(line: 963, column: 13, scope: !10673)
!10673 = !DILexicalBlockFile(scope: !10667, file: !512, discriminator: 1)
!10674 = !DILocation(line: 963, column: 19, scope: !10673)
!10675 = !DILocation(line: 963, column: 25, scope: !10673)
!10676 = !DILocation(line: 963, column: 30, scope: !10673)
!10677 = !DILocation(line: 963, column: 8, scope: !10673)
!10678 = !DILocation(line: 963, column: 12, scope: !10679)
!10679 = !DILexicalBlockFile(scope: !10667, file: !512, discriminator: 2)
!10680 = !DILocation(line: 963, column: 18, scope: !10679)
!10681 = !DILocation(line: 963, column: 24, scope: !10679)
!10682 = !DILocation(line: 963, column: 29, scope: !10679)
!10683 = !DILocation(line: 963, column: 8, scope: !10679)
!10684 = !DILocation(line: 968, column: 17, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !512, line: 968, column: 5)
!10686 = distinct !DILexicalBlock(scope: !10667, file: !512, line: 963, column: 12)
!10687 = !DILocation(line: 968, column: 23, scope: !10685)
!10688 = !DILocation(line: 968, column: 16, scope: !10685)
!10689 = !DILocation(line: 968, column: 15, scope: !10685)
!10690 = !DILocation(line: 968, column: 15, scope: !10691)
!10691 = !DILexicalBlockFile(scope: !10685, file: !512, discriminator: 1)
!10692 = !DILocation(line: 968, column: 16, scope: !10693)
!10693 = !DILexicalBlockFile(scope: !10685, file: !512, discriminator: 2)
!10694 = !DILocation(line: 968, column: 22, scope: !10693)
!10695 = !DILocation(line: 968, column: 28, scope: !10693)
!10696 = !DILocation(line: 968, column: 15, scope: !10693)
!10697 = !DILocation(line: 968, column: 15, scope: !10698)
!10698 = !DILexicalBlockFile(scope: !10685, file: !512, discriminator: 3)
!10699 = !DILocation(line: 968, column: 12, scope: !10698)
!10700 = !DILocation(line: 968, column: 10, scope: !10698)
!10701 = !DILocation(line: 968, column: 35, scope: !10702)
!10702 = !DILexicalBlockFile(scope: !10703, file: !512, discriminator: 4)
!10703 = distinct !DILexicalBlock(scope: !10685, file: !512, line: 968, column: 5)
!10704 = !DILocation(line: 968, column: 5, scope: !10702)
!10705 = !DILocation(line: 969, column: 20, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10703, file: !512, line: 968, column: 57)
!10707 = !DILocation(line: 969, column: 24, scope: !10706)
!10708 = !DILocation(line: 969, column: 18, scope: !10706)
!10709 = !DILocation(line: 969, column: 16, scope: !10706)
!10710 = !DILocation(line: 970, column: 28, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10706, file: !512, line: 970, column: 10)
!10712 = !DILocation(line: 970, column: 34, scope: !10711)
!10713 = !DILocation(line: 970, column: 45, scope: !10711)
!10714 = !DILocation(line: 970, column: 11, scope: !10711)
!10715 = !DILocation(line: 970, column: 10, scope: !10706)
!10716 = !DILocation(line: 973, column: 14, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10711, file: !512, line: 970, column: 52)
!10718 = !DILocation(line: 973, column: 20, scope: !10717)
!10719 = !DILocation(line: 973, column: 27, scope: !10717)
!10720 = !DILocation(line: 973, column: 33, scope: !10717)
!10721 = !DILocation(line: 974, column: 25, scope: !10717)
!10722 = !DILocation(line: 974, column: 36, scope: !10717)
!10723 = !DILocation(line: 974, column: 38, scope: !10717)
!10724 = !DILocation(line: 974, column: 42, scope: !10717)
!10725 = !DILocation(line: 974, column: 51, scope: !10717)
!10726 = !DILocation(line: 974, column: 14, scope: !10717)
!10727 = !DILocation(line: 971, column: 7, scope: !10717)
!10728 = !DILocation(line: 975, column: 9, scope: !10717)
!10729 = !DILocation(line: 975, column: 15, scope: !10717)
!10730 = !DILocation(line: 975, column: 22, scope: !10717)
!10731 = !DILocation(line: 975, column: 7, scope: !10717)
!10732 = !DILocation(line: 976, column: 7, scope: !10717)
!10733 = !DILocation(line: 978, column: 5, scope: !10706)
!10734 = !DILocation(line: 968, column: 46, scope: !10735)
!10735 = !DILexicalBlockFile(scope: !10703, file: !512, discriminator: 5)
!10736 = !DILocation(line: 968, column: 50, scope: !10735)
!10737 = !DILocation(line: 968, column: 43, scope: !10735)
!10738 = !DILocation(line: 968, column: 5, scope: !10735)
!10739 = distinct !{!10739, !10740}
!10740 = !DILocation(line: 968, column: 5, scope: !10686)
!10741 = !DILocation(line: 979, column: 4, scope: !10686)
!10742 = !DILocation(line: 982, column: 8, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10668, file: !512, line: 982, column: 8)
!10744 = !DILocation(line: 982, column: 21, scope: !10743)
!10745 = !DILocation(line: 982, column: 44, scope: !10743)
!10746 = !DILocation(line: 982, column: 50, scope: !10747)
!10747 = !DILexicalBlockFile(scope: !10743, file: !512, discriminator: 1)
!10748 = !DILocation(line: 982, column: 56, scope: !10747)
!10749 = !DILocation(line: 982, column: 70, scope: !10747)
!10750 = !DILocation(line: 982, column: 47, scope: !10747)
!10751 = !DILocation(line: 982, column: 52, scope: !10752)
!10752 = !DILexicalBlockFile(scope: !10743, file: !512, discriminator: 2)
!10753 = !DILocation(line: 982, column: 58, scope: !10752)
!10754 = !DILocation(line: 982, column: 73, scope: !10752)
!10755 = !DILocation(line: 982, column: 78, scope: !10752)
!10756 = !DILocation(line: 982, column: 47, scope: !10752)
!10757 = !DILocation(line: 982, column: 51, scope: !10758)
!10758 = !DILexicalBlockFile(scope: !10743, file: !512, discriminator: 3)
!10759 = !DILocation(line: 982, column: 57, scope: !10758)
!10760 = !DILocation(line: 982, column: 72, scope: !10758)
!10761 = !DILocation(line: 982, column: 77, scope: !10758)
!10762 = !DILocation(line: 982, column: 8, scope: !10758)
!10763 = !DILocation(line: 983, column: 17, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10765, file: !512, line: 983, column: 5)
!10765 = distinct !DILexicalBlock(scope: !10743, file: !512, line: 982, column: 51)
!10766 = !DILocation(line: 983, column: 23, scope: !10764)
!10767 = !DILocation(line: 983, column: 16, scope: !10764)
!10768 = !DILocation(line: 983, column: 15, scope: !10764)
!10769 = !DILocation(line: 983, column: 15, scope: !10770)
!10770 = !DILexicalBlockFile(scope: !10764, file: !512, discriminator: 1)
!10771 = !DILocation(line: 983, column: 16, scope: !10772)
!10772 = !DILexicalBlockFile(scope: !10764, file: !512, discriminator: 2)
!10773 = !DILocation(line: 983, column: 22, scope: !10772)
!10774 = !DILocation(line: 983, column: 37, scope: !10772)
!10775 = !DILocation(line: 983, column: 15, scope: !10772)
!10776 = !DILocation(line: 983, column: 15, scope: !10777)
!10777 = !DILexicalBlockFile(scope: !10764, file: !512, discriminator: 3)
!10778 = !DILocation(line: 983, column: 12, scope: !10777)
!10779 = !DILocation(line: 983, column: 10, scope: !10777)
!10780 = !DILocation(line: 983, column: 44, scope: !10781)
!10781 = !DILexicalBlockFile(scope: !10782, file: !512, discriminator: 4)
!10782 = distinct !DILexicalBlock(scope: !10764, file: !512, line: 983, column: 5)
!10783 = !DILocation(line: 983, column: 5, scope: !10781)
!10784 = !DILocation(line: 984, column: 18, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10782, file: !512, line: 983, column: 66)
!10786 = !DILocation(line: 984, column: 22, scope: !10785)
!10787 = !DILocation(line: 984, column: 16, scope: !10785)
!10788 = !DILocation(line: 984, column: 14, scope: !10785)
!10789 = !DILocation(line: 985, column: 34, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10785, file: !512, line: 985, column: 10)
!10791 = !DILocation(line: 985, column: 40, scope: !10790)
!10792 = !DILocation(line: 985, column: 52, scope: !10790)
!10793 = !DILocation(line: 985, column: 61, scope: !10790)
!10794 = !DILocation(line: 985, column: 94, scope: !10790)
!10795 = !DILocation(line: 985, column: 104, scope: !10790)
!10796 = !DILocation(line: 985, column: 113, scope: !10790)
!10797 = !DILocation(line: 985, column: 68, scope: !10790)
!10798 = !DILocation(line: 985, column: 10, scope: !10785)
!10799 = !DILocation(line: 986, column: 7, scope: !10790)
!10800 = !DILocation(line: 987, column: 5, scope: !10785)
!10801 = !DILocation(line: 983, column: 55, scope: !10802)
!10802 = !DILexicalBlockFile(scope: !10782, file: !512, discriminator: 5)
!10803 = !DILocation(line: 983, column: 59, scope: !10802)
!10804 = !DILocation(line: 983, column: 52, scope: !10802)
!10805 = !DILocation(line: 983, column: 5, scope: !10802)
!10806 = distinct !{!10806, !10807}
!10807 = !DILocation(line: 983, column: 5, scope: !10765)
!10808 = !DILocation(line: 988, column: 10, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10765, file: !512, line: 988, column: 9)
!10810 = !DILocation(line: 988, column: 9, scope: !10765)
!10811 = !DILocation(line: 990, column: 7, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10809, file: !512, line: 988, column: 13)
!10813 = !DILocation(line: 990, column: 13, scope: !10812)
!10814 = !DILocation(line: 990, column: 54, scope: !10812)
!10815 = !DILocation(line: 990, column: 60, scope: !10812)
!10816 = !DILocation(line: 990, column: 72, scope: !10812)
!10817 = !DILocation(line: 990, column: 81, scope: !10812)
!10818 = !DILocation(line: 990, column: 20, scope: !10812)
!10819 = !DILocation(line: 989, column: 6, scope: !10812)
!10820 = !DILocation(line: 991, column: 6, scope: !10812)
!10821 = !DILocation(line: 993, column: 4, scope: !10765)
!10822 = !DILocation(line: 994, column: 3, scope: !10668)
!10823 = !DILocation(line: 995, column: 11, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10825, file: !512, line: 995, column: 8)
!10825 = distinct !DILexicalBlock(scope: !10661, file: !512, line: 994, column: 10)
!10826 = !DILocation(line: 995, column: 17, scope: !10824)
!10827 = !DILocation(line: 995, column: 22, scope: !10824)
!10828 = !DILocation(line: 995, column: 8, scope: !10824)
!10829 = !DILocation(line: 995, column: 13, scope: !10830)
!10830 = !DILexicalBlockFile(scope: !10824, file: !512, discriminator: 1)
!10831 = !DILocation(line: 995, column: 19, scope: !10830)
!10832 = !DILocation(line: 995, column: 25, scope: !10830)
!10833 = !DILocation(line: 995, column: 30, scope: !10830)
!10834 = !DILocation(line: 995, column: 8, scope: !10830)
!10835 = !DILocation(line: 995, column: 12, scope: !10836)
!10836 = !DILexicalBlockFile(scope: !10824, file: !512, discriminator: 2)
!10837 = !DILocation(line: 995, column: 18, scope: !10836)
!10838 = !DILocation(line: 995, column: 24, scope: !10836)
!10839 = !DILocation(line: 995, column: 29, scope: !10836)
!10840 = !DILocation(line: 995, column: 8, scope: !10836)
!10841 = !DILocation(line: 1000, column: 9, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !512, line: 1000, column: 9)
!10843 = distinct !DILexicalBlock(scope: !10824, file: !512, line: 995, column: 12)
!10844 = !DILocation(line: 1000, column: 13, scope: !10842)
!10845 = !DILocation(line: 1000, column: 24, scope: !10842)
!10846 = !DILocation(line: 1000, column: 30, scope: !10842)
!10847 = !DILocation(line: 1000, column: 36, scope: !10842)
!10848 = !DILocation(line: 1000, column: 19, scope: !10842)
!10849 = !DILocation(line: 1000, column: 9, scope: !10843)
!10850 = !DILocation(line: 1002, column: 72, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10842, file: !512, line: 1000, column: 44)
!10852 = !DILocation(line: 1002, column: 78, scope: !10851)
!10853 = !DILocation(line: 1001, column: 6, scope: !10851)
!10854 = !DILocation(line: 1003, column: 8, scope: !10851)
!10855 = !DILocation(line: 1003, column: 14, scope: !10851)
!10856 = !DILocation(line: 1003, column: 21, scope: !10851)
!10857 = !DILocation(line: 1003, column: 6, scope: !10851)
!10858 = !DILocation(line: 1004, column: 6, scope: !10851)
!10859 = !DILocation(line: 1007, column: 17, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10843, file: !512, line: 1007, column: 5)
!10861 = !DILocation(line: 1007, column: 23, scope: !10860)
!10862 = !DILocation(line: 1007, column: 16, scope: !10860)
!10863 = !DILocation(line: 1007, column: 15, scope: !10860)
!10864 = !DILocation(line: 1007, column: 15, scope: !10865)
!10865 = !DILexicalBlockFile(scope: !10860, file: !512, discriminator: 1)
!10866 = !DILocation(line: 1007, column: 16, scope: !10867)
!10867 = !DILexicalBlockFile(scope: !10860, file: !512, discriminator: 2)
!10868 = !DILocation(line: 1007, column: 22, scope: !10867)
!10869 = !DILocation(line: 1007, column: 28, scope: !10867)
!10870 = !DILocation(line: 1007, column: 15, scope: !10867)
!10871 = !DILocation(line: 1007, column: 15, scope: !10872)
!10872 = !DILexicalBlockFile(scope: !10860, file: !512, discriminator: 3)
!10873 = !DILocation(line: 1007, column: 12, scope: !10872)
!10874 = !DILocation(line: 1007, column: 10, scope: !10872)
!10875 = !DILocation(line: 1007, column: 35, scope: !10876)
!10876 = !DILexicalBlockFile(scope: !10877, file: !512, discriminator: 4)
!10877 = distinct !DILexicalBlock(scope: !10860, file: !512, line: 1007, column: 5)
!10878 = !DILocation(line: 1007, column: 5, scope: !10876)
!10879 = !DILocation(line: 1008, column: 20, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10877, file: !512, line: 1007, column: 57)
!10881 = !DILocation(line: 1008, column: 24, scope: !10880)
!10882 = !DILocation(line: 1008, column: 18, scope: !10880)
!10883 = !DILocation(line: 1008, column: 16, scope: !10880)
!10884 = !DILocation(line: 1009, column: 28, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10880, file: !512, line: 1009, column: 10)
!10886 = !DILocation(line: 1009, column: 34, scope: !10885)
!10887 = !DILocation(line: 1009, column: 45, scope: !10885)
!10888 = !DILocation(line: 1009, column: 11, scope: !10885)
!10889 = !DILocation(line: 1009, column: 10, scope: !10880)
!10890 = !DILocation(line: 1012, column: 12, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10885, file: !512, line: 1009, column: 52)
!10892 = !DILocation(line: 1012, column: 18, scope: !10891)
!10893 = !DILocation(line: 1012, column: 25, scope: !10891)
!10894 = !DILocation(line: 1012, column: 31, scope: !10891)
!10895 = !DILocation(line: 1013, column: 32, scope: !10891)
!10896 = !DILocation(line: 1013, column: 43, scope: !10891)
!10897 = !DILocation(line: 1013, column: 45, scope: !10891)
!10898 = !DILocation(line: 1013, column: 31, scope: !10891)
!10899 = !DILocation(line: 1014, column: 12, scope: !10891)
!10900 = !DILocation(line: 1013, column: 12, scope: !10891)
!10901 = !DILocation(line: 1010, column: 7, scope: !10891)
!10902 = !DILocation(line: 1015, column: 9, scope: !10891)
!10903 = !DILocation(line: 1015, column: 15, scope: !10891)
!10904 = !DILocation(line: 1015, column: 22, scope: !10891)
!10905 = !DILocation(line: 1015, column: 7, scope: !10891)
!10906 = !DILocation(line: 1016, column: 7, scope: !10891)
!10907 = !DILocation(line: 1018, column: 5, scope: !10880)
!10908 = !DILocation(line: 1007, column: 46, scope: !10909)
!10909 = !DILexicalBlockFile(scope: !10877, file: !512, discriminator: 5)
!10910 = !DILocation(line: 1007, column: 50, scope: !10909)
!10911 = !DILocation(line: 1007, column: 43, scope: !10909)
!10912 = !DILocation(line: 1007, column: 5, scope: !10909)
!10913 = distinct !{!10913, !10914}
!10914 = !DILocation(line: 1007, column: 5, scope: !10843)
!10915 = !DILocation(line: 1019, column: 4, scope: !10843)
!10916 = !DILocation(line: 1022, column: 8, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10825, file: !512, line: 1022, column: 8)
!10918 = !DILocation(line: 1022, column: 21, scope: !10917)
!10919 = !DILocation(line: 1022, column: 44, scope: !10917)
!10920 = !DILocation(line: 1022, column: 50, scope: !10921)
!10921 = !DILexicalBlockFile(scope: !10917, file: !512, discriminator: 1)
!10922 = !DILocation(line: 1022, column: 56, scope: !10921)
!10923 = !DILocation(line: 1022, column: 70, scope: !10921)
!10924 = !DILocation(line: 1022, column: 47, scope: !10921)
!10925 = !DILocation(line: 1022, column: 52, scope: !10926)
!10926 = !DILexicalBlockFile(scope: !10917, file: !512, discriminator: 2)
!10927 = !DILocation(line: 1022, column: 58, scope: !10926)
!10928 = !DILocation(line: 1022, column: 73, scope: !10926)
!10929 = !DILocation(line: 1022, column: 78, scope: !10926)
!10930 = !DILocation(line: 1022, column: 47, scope: !10926)
!10931 = !DILocation(line: 1022, column: 51, scope: !10932)
!10932 = !DILexicalBlockFile(scope: !10917, file: !512, discriminator: 3)
!10933 = !DILocation(line: 1022, column: 57, scope: !10932)
!10934 = !DILocation(line: 1022, column: 72, scope: !10932)
!10935 = !DILocation(line: 1022, column: 77, scope: !10932)
!10936 = !DILocation(line: 1022, column: 8, scope: !10932)
!10937 = !DILocation(line: 1023, column: 17, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !512, line: 1023, column: 5)
!10939 = distinct !DILexicalBlock(scope: !10917, file: !512, line: 1022, column: 51)
!10940 = !DILocation(line: 1023, column: 23, scope: !10938)
!10941 = !DILocation(line: 1023, column: 16, scope: !10938)
!10942 = !DILocation(line: 1023, column: 15, scope: !10938)
!10943 = !DILocation(line: 1023, column: 15, scope: !10944)
!10944 = !DILexicalBlockFile(scope: !10938, file: !512, discriminator: 1)
!10945 = !DILocation(line: 1023, column: 16, scope: !10946)
!10946 = !DILexicalBlockFile(scope: !10938, file: !512, discriminator: 2)
!10947 = !DILocation(line: 1023, column: 22, scope: !10946)
!10948 = !DILocation(line: 1023, column: 37, scope: !10946)
!10949 = !DILocation(line: 1023, column: 15, scope: !10946)
!10950 = !DILocation(line: 1023, column: 15, scope: !10951)
!10951 = !DILexicalBlockFile(scope: !10938, file: !512, discriminator: 3)
!10952 = !DILocation(line: 1023, column: 12, scope: !10951)
!10953 = !DILocation(line: 1023, column: 10, scope: !10951)
!10954 = !DILocation(line: 1023, column: 44, scope: !10955)
!10955 = !DILexicalBlockFile(scope: !10956, file: !512, discriminator: 4)
!10956 = distinct !DILexicalBlock(scope: !10938, file: !512, line: 1023, column: 5)
!10957 = !DILocation(line: 1023, column: 5, scope: !10955)
!10958 = !DILocation(line: 1024, column: 18, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10956, file: !512, line: 1023, column: 66)
!10960 = !DILocation(line: 1024, column: 22, scope: !10959)
!10961 = !DILocation(line: 1024, column: 16, scope: !10959)
!10962 = !DILocation(line: 1024, column: 14, scope: !10959)
!10963 = !DILocalVariable(name: "__a", scope: !10964, file: !512, line: 1025, type: !251)
!10964 = distinct !DILexicalBlock(scope: !10965, file: !512, line: 1025, column: 25)
!10965 = distinct !DILexicalBlock(scope: !10959, file: !512, line: 1025, column: 9)
!10966 = !DILocation(line: 1025, column: 50, scope: !10964)
!10967 = !DILocation(line: 1025, column: 35, scope: !10964)
!10968 = !DILocation(line: 1025, column: 41, scope: !10964)
!10969 = !DILocation(line: 1025, column: 53, scope: !10964)
!10970 = !DILocalVariable(name: "__b", scope: !10964, file: !512, line: 1025, type: !251)
!10971 = !DILocation(line: 1025, column: 34, scope: !10964)
!10972 = !DILocation(line: 1025, column: 44, scope: !10964)
!10973 = !DILocation(line: 1025, column: 12, scope: !10964)
!10974 = !DILocation(line: 1025, column: 17, scope: !10964)
!10975 = !DILocation(line: 1025, column: 25, scope: !10964)
!10976 = !DILocation(line: 1025, column: 43, scope: !10964)
!10977 = !DILocation(line: 1025, column: 48, scope: !10964)
!10978 = !DILocation(line: 1025, column: 56, scope: !10964)
!10979 = !DILocation(line: 1025, column: 40, scope: !10964)
!10980 = !DILocation(line: 1025, column: 71, scope: !10964)
!10981 = !DILocation(line: 1025, column: 74, scope: !10982)
!10982 = !DILexicalBlockFile(scope: !10964, file: !512, discriminator: 1)
!10983 = !DILocation(line: 1025, column: 79, scope: !10982)
!10984 = !DILocation(line: 1025, column: 87, scope: !10982)
!10985 = !DILocation(line: 1025, column: 105, scope: !10982)
!10986 = !DILocation(line: 1025, column: 110, scope: !10982)
!10987 = !DILocation(line: 1025, column: 118, scope: !10982)
!10988 = !DILocation(line: 1025, column: 102, scope: !10982)
!10989 = !DILocation(line: 1025, column: 133, scope: !10982)
!10990 = !DILocation(line: 1025, column: 136, scope: !10991)
!10991 = !DILexicalBlockFile(scope: !10964, file: !512, discriminator: 2)
!10992 = !DILocation(line: 1025, column: 141, scope: !10991)
!10993 = !DILocation(line: 1025, column: 149, scope: !10991)
!10994 = !DILocation(line: 1025, column: 167, scope: !10991)
!10995 = !DILocation(line: 1025, column: 172, scope: !10991)
!10996 = !DILocation(line: 1025, column: 180, scope: !10991)
!10997 = !DILocation(line: 1025, column: 164, scope: !10991)
!10998 = !DILocation(line: 1025, column: 195, scope: !10991)
!10999 = !DILocation(line: 1025, column: 198, scope: !11000)
!11000 = !DILexicalBlockFile(scope: !10964, file: !512, discriminator: 3)
!11001 = !DILocation(line: 1025, column: 203, scope: !11000)
!11002 = !DILocation(line: 1025, column: 211, scope: !11000)
!11003 = !DILocation(line: 1025, column: 229, scope: !11000)
!11004 = !DILocation(line: 1025, column: 234, scope: !11000)
!11005 = !DILocation(line: 1025, column: 242, scope: !11000)
!11006 = !DILocation(line: 1025, column: 226, scope: !11000)
!11007 = !DILocation(line: 1025, column: 195, scope: !11008)
!11008 = !DILexicalBlockFile(scope: !10964, file: !512, discriminator: 4)
!11009 = !DILocation(line: 1025, column: 12, scope: !11008)
!11010 = !DILocation(line: 1025, column: 258, scope: !11008)
!11011 = !DILocation(line: 1025, column: 24, scope: !11008)
!11012 = !DILocation(line: 1025, column: 9, scope: !11008)
!11013 = !DILocation(line: 1026, column: 7, scope: !10965)
!11014 = !DILocation(line: 1027, column: 5, scope: !10959)
!11015 = !DILocation(line: 1023, column: 55, scope: !11016)
!11016 = !DILexicalBlockFile(scope: !10956, file: !512, discriminator: 5)
!11017 = !DILocation(line: 1023, column: 59, scope: !11016)
!11018 = !DILocation(line: 1023, column: 52, scope: !11016)
!11019 = !DILocation(line: 1023, column: 5, scope: !11016)
!11020 = distinct !{!11020, !11021}
!11021 = !DILocation(line: 1023, column: 5, scope: !10939)
!11022 = !DILocation(line: 1028, column: 10, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !10939, file: !512, line: 1028, column: 9)
!11024 = !DILocation(line: 1028, column: 9, scope: !10939)
!11025 = !DILocation(line: 1030, column: 7, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11023, file: !512, line: 1028, column: 13)
!11027 = !DILocation(line: 1030, column: 13, scope: !11026)
!11028 = !DILocation(line: 1030, column: 65, scope: !11026)
!11029 = !DILocation(line: 1030, column: 71, scope: !11026)
!11030 = !DILocation(line: 1030, column: 83, scope: !11026)
!11031 = !DILocation(line: 1030, column: 39, scope: !11026)
!11032 = !DILocation(line: 1031, column: 12, scope: !11026)
!11033 = !DILocation(line: 1030, column: 20, scope: !11026)
!11034 = !DILocation(line: 1029, column: 6, scope: !11026)
!11035 = !DILocation(line: 1032, column: 6, scope: !11026)
!11036 = !DILocation(line: 1034, column: 4, scope: !10939)
!11037 = !DILocation(line: 1036, column: 2, scope: !10662)
!11038 = !DILocation(line: 1038, column: 6, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 1038, column: 6)
!11040 = !DILocation(line: 1038, column: 10, scope: !11039)
!11041 = !DILocation(line: 1038, column: 19, scope: !11039)
!11042 = !DILocation(line: 1038, column: 6, scope: !9971)
!11043 = !DILocation(line: 1039, column: 5, scope: !11039)
!11044 = !DILocation(line: 1039, column: 11, scope: !11039)
!11045 = !DILocation(line: 1039, column: 18, scope: !11039)
!11046 = !DILocation(line: 1039, column: 3, scope: !11039)
!11047 = !DILocation(line: 1041, column: 6, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !9971, file: !512, line: 1041, column: 6)
!11049 = !DILocation(line: 1041, column: 12, scope: !11048)
!11050 = !DILocation(line: 1041, column: 20, scope: !11048)
!11051 = !DILocation(line: 1041, column: 25, scope: !11048)
!11052 = !DILocation(line: 1041, column: 28, scope: !11053)
!11053 = !DILexicalBlockFile(scope: !11048, file: !512, discriminator: 1)
!11054 = !DILocation(line: 1041, column: 34, scope: !11053)
!11055 = !DILocation(line: 1041, column: 40, scope: !11053)
!11056 = !DILocation(line: 1041, column: 6, scope: !11053)
!11057 = !DILocation(line: 1045, column: 22, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11048, file: !512, line: 1041, column: 46)
!11059 = !DILocation(line: 1045, column: 26, scope: !11058)
!11060 = !DILocation(line: 1045, column: 29, scope: !11058)
!11061 = !DILocation(line: 1045, column: 16, scope: !11058)
!11062 = !DILocation(line: 1045, column: 40, scope: !11058)
!11063 = !DILocation(line: 1045, column: 50, scope: !11058)
!11064 = !DILocation(line: 1045, column: 13, scope: !11058)
!11065 = !DILocation(line: 1046, column: 7, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11058, file: !512, line: 1046, column: 7)
!11067 = !DILocation(line: 1046, column: 13, scope: !11066)
!11068 = !DILocation(line: 1046, column: 33, scope: !11066)
!11069 = !DILocation(line: 1046, column: 30, scope: !11066)
!11070 = !DILocation(line: 1046, column: 7, scope: !11058)
!11071 = !DILocation(line: 1048, column: 5, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11066, file: !512, line: 1046, column: 44)
!11073 = !DILocation(line: 1048, column: 11, scope: !11072)
!11074 = !DILocation(line: 1048, column: 18, scope: !11072)
!11075 = !DILocation(line: 1048, column: 24, scope: !11072)
!11076 = !DILocation(line: 1048, column: 41, scope: !11072)
!11077 = !DILocation(line: 1048, column: 62, scope: !11072)
!11078 = !DILocation(line: 1048, column: 72, scope: !11072)
!11079 = !DILocation(line: 1047, column: 4, scope: !11072)
!11080 = !DILocation(line: 1049, column: 3, scope: !11072)
!11081 = !DILocation(line: 1050, column: 2, scope: !11058)
!11082 = !DILocation(line: 1052, column: 2, scope: !9971)
!11083 = !DILocation(line: 1053, column: 1, scope: !9971)
!11084 = distinct !DISubprogram(name: "vrrp_in_chk_ipsecah", scope: !512, file: !512, line: 562, type: !11085, isLocal: true, isDefinition: true, scopeLine: 563, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11085 = !DISubroutineType(types: !11086)
!11086 = !{!350, !537, !230}
!11087 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11084, file: !512, line: 562, type: !537)
!11088 = !DILocation(line: 562, column: 30, scope: !11084)
!11089 = !DILocalVariable(name: "buffer", arg: 2, scope: !11084, file: !512, line: 562, type: !230)
!11090 = !DILocation(line: 562, column: 42, scope: !11084)
!11091 = !DILocalVariable(name: "ip", scope: !11084, file: !512, line: 564, type: !184)
!11092 = !DILocation(line: 564, column: 16, scope: !11084)
!11093 = !DILocation(line: 564, column: 39, scope: !11084)
!11094 = !DILocation(line: 564, column: 21, scope: !11084)
!11095 = !DILocalVariable(name: "ah", scope: !11084, file: !512, line: 565, type: !276)
!11096 = !DILocation(line: 565, column: 14, scope: !11084)
!11097 = !DILocation(line: 565, column: 44, scope: !11084)
!11098 = !DILocation(line: 565, column: 35, scope: !11084)
!11099 = !DILocation(line: 565, column: 50, scope: !11084)
!11100 = !DILocation(line: 565, column: 54, scope: !11084)
!11101 = !DILocation(line: 565, column: 58, scope: !11084)
!11102 = !DILocation(line: 565, column: 47, scope: !11084)
!11103 = !DILocation(line: 565, column: 19, scope: !11084)
!11104 = !DILocalVariable(name: "digest", scope: !11084, file: !512, line: 566, type: !1339)
!11105 = !DILocation(line: 566, column: 16, scope: !11084)
!11106 = !DILocalVariable(name: "backup_auth_data", scope: !11084, file: !512, line: 567, type: !287)
!11107 = !DILocation(line: 567, column: 7, scope: !11084)
!11108 = !DILocation(line: 576, column: 2, scope: !11084)
!11109 = !DILocation(line: 576, column: 6, scope: !11084)
!11110 = !DILocation(line: 576, column: 10, scope: !11084)
!11111 = !DILocation(line: 577, column: 2, scope: !11084)
!11112 = !DILocation(line: 577, column: 6, scope: !11084)
!11113 = !DILocation(line: 577, column: 15, scope: !11084)
!11114 = !DILocation(line: 578, column: 2, scope: !11084)
!11115 = !DILocation(line: 578, column: 6, scope: !11084)
!11116 = !DILocation(line: 578, column: 12, scope: !11084)
!11117 = !DILocation(line: 579, column: 9, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11084, file: !512, line: 579, column: 6)
!11119 = !DILocation(line: 579, column: 15, scope: !11118)
!11120 = !DILocation(line: 579, column: 29, scope: !11118)
!11121 = !DILocation(line: 579, column: 6, scope: !11118)
!11122 = !DILocation(line: 579, column: 11, scope: !11123)
!11123 = !DILexicalBlockFile(scope: !11118, file: !512, discriminator: 1)
!11124 = !DILocation(line: 579, column: 17, scope: !11123)
!11125 = !DILocation(line: 579, column: 32, scope: !11123)
!11126 = !DILocation(line: 579, column: 37, scope: !11123)
!11127 = !DILocation(line: 579, column: 6, scope: !11123)
!11128 = !DILocation(line: 579, column: 10, scope: !11129)
!11129 = !DILexicalBlockFile(scope: !11118, file: !512, discriminator: 2)
!11130 = !DILocation(line: 579, column: 16, scope: !11129)
!11131 = !DILocation(line: 579, column: 31, scope: !11129)
!11132 = !DILocation(line: 579, column: 36, scope: !11129)
!11133 = !DILocation(line: 579, column: 6, scope: !11129)
!11134 = !DILocation(line: 580, column: 3, scope: !11118)
!11135 = !DILocation(line: 580, column: 7, scope: !11118)
!11136 = !DILocation(line: 580, column: 11, scope: !11118)
!11137 = !DILocation(line: 581, column: 2, scope: !11084)
!11138 = !DILocation(line: 581, column: 27, scope: !11084)
!11139 = !DILocation(line: 581, column: 31, scope: !11084)
!11140 = !DILocation(line: 582, column: 9, scope: !11084)
!11141 = !DILocation(line: 582, column: 13, scope: !11084)
!11142 = !DILocation(line: 582, column: 2, scope: !11084)
!11143 = !DILocation(line: 583, column: 2, scope: !11084)
!11144 = !DILocation(line: 586, column: 29, scope: !11084)
!11145 = !DILocation(line: 587, column: 4, scope: !11084)
!11146 = !DILocation(line: 587, column: 23, scope: !11147)
!11147 = !DILexicalBlockFile(scope: !11084, file: !512, discriminator: 1)
!11148 = !DILocation(line: 587, column: 21, scope: !11084)
!11149 = !DILocation(line: 587, column: 57, scope: !11084)
!11150 = !DILocation(line: 587, column: 44, scope: !11151)
!11151 = !DILexicalBlockFile(scope: !11084, file: !512, discriminator: 2)
!11152 = !DILocation(line: 587, column: 42, scope: !11084)
!11153 = !DILocation(line: 588, column: 6, scope: !11084)
!11154 = !DILocation(line: 588, column: 12, scope: !11084)
!11155 = !DILocation(line: 589, column: 6, scope: !11084)
!11156 = !DILocation(line: 586, column: 2, scope: !11084)
!11157 = !DILocation(line: 591, column: 13, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11084, file: !512, line: 591, column: 6)
!11159 = !DILocation(line: 591, column: 31, scope: !11158)
!11160 = !DILocation(line: 591, column: 6, scope: !11158)
!11161 = !DILocation(line: 591, column: 45, scope: !11158)
!11162 = !DILocation(line: 591, column: 6, scope: !11084)
!11163 = !DILocation(line: 595, column: 8, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11158, file: !512, line: 591, column: 51)
!11165 = !DILocation(line: 595, column: 14, scope: !11164)
!11166 = !DILocation(line: 592, column: 3, scope: !11164)
!11167 = !DILocation(line: 596, column: 3, scope: !11164)
!11168 = !DILocation(line: 600, column: 6, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11084, file: !512, line: 600, column: 6)
!11170 = !DILocation(line: 600, column: 10, scope: !11169)
!11171 = !DILocation(line: 600, column: 17, scope: !11169)
!11172 = !DILocation(line: 600, column: 21, scope: !11169)
!11173 = !DILocation(line: 600, column: 14, scope: !11169)
!11174 = !DILocation(line: 600, column: 6, scope: !11084)
!11175 = !DILocation(line: 602, column: 8, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11169, file: !512, line: 600, column: 28)
!11177 = !DILocation(line: 602, column: 12, scope: !11176)
!11178 = !DILocation(line: 602, column: 19, scope: !11176)
!11179 = !DILocation(line: 602, column: 23, scope: !11176)
!11180 = !DILocation(line: 601, column: 3, scope: !11176)
!11181 = !DILocation(line: 603, column: 3, scope: !11176)
!11182 = !DILocation(line: 610, column: 12, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11084, file: !512, line: 610, column: 6)
!11184 = !DILocation(line: 610, column: 16, scope: !11183)
!11185 = !DILocation(line: 610, column: 6, scope: !11183)
!11186 = !DILocation(line: 610, column: 30, scope: !11183)
!11187 = !DILocation(line: 610, column: 36, scope: !11183)
!11188 = !DILocation(line: 610, column: 52, scope: !11183)
!11189 = !DILocation(line: 610, column: 28, scope: !11183)
!11190 = !DILocation(line: 610, column: 6, scope: !11084)
!11191 = !DILocation(line: 611, column: 44, scope: !11183)
!11192 = !DILocation(line: 611, column: 48, scope: !11183)
!11193 = !DILocation(line: 611, column: 38, scope: !11183)
!11194 = !DILocation(line: 611, column: 3, scope: !11183)
!11195 = !DILocation(line: 611, column: 9, scope: !11183)
!11196 = !DILocation(line: 611, column: 25, scope: !11183)
!11197 = !DILocation(line: 611, column: 36, scope: !11183)
!11198 = !DILocation(line: 615, column: 6, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11183, file: !512, line: 612, column: 7)
!11200 = !DILocation(line: 615, column: 12, scope: !11199)
!11201 = !DILocation(line: 615, column: 25, scope: !11199)
!11202 = !DILocation(line: 615, column: 29, scope: !11199)
!11203 = !DILocation(line: 615, column: 19, scope: !11199)
!11204 = !DILocation(line: 616, column: 6, scope: !11199)
!11205 = !DILocation(line: 616, column: 12, scope: !11199)
!11206 = !DILocation(line: 616, column: 28, scope: !11199)
!11207 = !DILocation(line: 613, column: 3, scope: !11199)
!11208 = !DILocation(line: 617, column: 3, scope: !11199)
!11209 = !DILocation(line: 620, column: 2, scope: !11084)
!11210 = !DILocation(line: 621, column: 1, scope: !11084)
!11211 = distinct !DISubprogram(name: "vrrp_csum_mcast", scope: !512, file: !512, line: 533, type: !1810, isLocal: true, isDefinition: true, scopeLine: 534, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11212 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11211, file: !512, line: 533, type: !537)
!11213 = !DILocation(line: 533, column: 25, scope: !11211)
!11214 = !DILocalVariable(name: "bufptr", scope: !11211, file: !512, line: 535, type: !230)
!11215 = !DILocation(line: 535, column: 8, scope: !11211)
!11216 = !DILocation(line: 535, column: 17, scope: !11211)
!11217 = !DILocation(line: 535, column: 23, scope: !11211)
!11218 = !DILocalVariable(name: "hd", scope: !11211, file: !512, line: 536, type: !206)
!11219 = !DILocation(line: 536, column: 13, scope: !11211)
!11220 = !DILocation(line: 538, column: 12, scope: !11211)
!11221 = !DILocation(line: 538, column: 9, scope: !11211)
!11222 = !DILocation(line: 541, column: 6, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11211, file: !512, line: 541, column: 6)
!11224 = !DILocation(line: 541, column: 12, scope: !11223)
!11225 = !DILocation(line: 541, column: 22, scope: !11223)
!11226 = !DILocation(line: 541, column: 6, scope: !11211)
!11227 = !DILocation(line: 542, column: 13, scope: !11223)
!11228 = !DILocation(line: 542, column: 10, scope: !11223)
!11229 = !DILocation(line: 542, column: 3, scope: !11223)
!11230 = !DILocation(line: 545, column: 20, scope: !11211)
!11231 = !DILocation(line: 545, column: 7, scope: !11211)
!11232 = !DILocation(line: 545, column: 5, scope: !11211)
!11233 = !DILocalVariable(name: "ip", scope: !11211, file: !512, line: 547, type: !184)
!11234 = !DILocation(line: 547, column: 16, scope: !11211)
!11235 = !DILocation(line: 547, column: 39, scope: !11211)
!11236 = !DILocation(line: 547, column: 45, scope: !11211)
!11237 = !DILocation(line: 547, column: 21, scope: !11211)
!11238 = !DILocation(line: 548, column: 6, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11211, file: !512, line: 548, column: 6)
!11240 = !DILocation(line: 548, column: 12, scope: !11239)
!11241 = !DILocation(line: 548, column: 34, scope: !11239)
!11242 = !DILocation(line: 548, column: 63, scope: !11239)
!11243 = !DILocation(line: 549, column: 6, scope: !11239)
!11244 = !DILocation(line: 549, column: 10, scope: !11239)
!11245 = !DILocation(line: 549, column: 19, scope: !11239)
!11246 = !DILocation(line: 549, column: 32, scope: !11239)
!11247 = !DILocation(line: 549, column: 50, scope: !11239)
!11248 = !DILocation(line: 549, column: 59, scope: !11239)
!11249 = !DILocation(line: 549, column: 16, scope: !11239)
!11250 = !DILocation(line: 548, column: 6, scope: !11251)
!11251 = !DILexicalBlockFile(scope: !11211, file: !512, discriminator: 1)
!11252 = !DILocation(line: 551, column: 42, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11239, file: !512, line: 549, column: 67)
!11254 = !DILocation(line: 551, column: 46, scope: !11253)
!11255 = !DILocation(line: 551, column: 54, scope: !11253)
!11256 = !DILocation(line: 551, column: 58, scope: !11253)
!11257 = !DILocation(line: 551, column: 65, scope: !11253)
!11258 = !DILocation(line: 551, column: 78, scope: !11253)
!11259 = !DILocation(line: 551, column: 96, scope: !11253)
!11260 = !DILocation(line: 551, column: 105, scope: !11253)
!11261 = !DILocation(line: 551, column: 16, scope: !11253)
!11262 = !DILocation(line: 551, column: 3, scope: !11253)
!11263 = !DILocation(line: 551, column: 7, scope: !11253)
!11264 = !DILocation(line: 551, column: 14, scope: !11253)
!11265 = !DILocation(line: 552, column: 2, scope: !11253)
!11266 = !DILocation(line: 553, column: 1, scope: !11211)
!11267 = distinct !DISubprogram(name: "vrrp_in_chk_vips", scope: !512, file: !512, line: 626, type: !11268, isLocal: true, isDefinition: true, scopeLine: 627, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{!300, !537, !311, !291}
!11270 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11267, file: !512, line: 626, type: !537)
!11271 = !DILocation(line: 626, column: 27, scope: !11267)
!11272 = !DILocalVariable(name: "ipaddress", arg: 2, scope: !11267, file: !512, line: 626, type: !311)
!11273 = !DILocation(line: 626, column: 47, scope: !11267)
!11274 = !DILocalVariable(name: "buffer", arg: 3, scope: !11267, file: !512, line: 626, type: !291)
!11275 = !DILocation(line: 626, column: 73, scope: !11267)
!11276 = !DILocalVariable(name: "i", scope: !11267, file: !512, line: 628, type: !292)
!11277 = !DILocation(line: 628, column: 9, scope: !11267)
!11278 = !DILocation(line: 630, column: 6, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11267, file: !512, line: 630, column: 6)
!11280 = !DILocation(line: 630, column: 12, scope: !11279)
!11281 = !DILocation(line: 630, column: 19, scope: !11279)
!11282 = !DILocation(line: 630, column: 6, scope: !11267)
!11283 = !DILocation(line: 631, column: 10, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11285, file: !512, line: 631, column: 3)
!11285 = distinct !DILexicalBlock(scope: !11279, file: !512, line: 630, column: 30)
!11286 = !DILocation(line: 631, column: 8, scope: !11284)
!11287 = !DILocation(line: 631, column: 15, scope: !11288)
!11288 = !DILexicalBlockFile(scope: !11289, file: !512, discriminator: 1)
!11289 = distinct !DILexicalBlock(scope: !11284, file: !512, line: 631, column: 3)
!11290 = !DILocation(line: 631, column: 21, scope: !11288)
!11291 = !DILocation(line: 631, column: 27, scope: !11288)
!11292 = !DILocation(line: 631, column: 33, scope: !11288)
!11293 = !DILocation(line: 631, column: 19, scope: !11288)
!11294 = !DILocation(line: 631, column: 17, scope: !11288)
!11295 = !DILocation(line: 631, column: 3, scope: !11288)
!11296 = !DILocation(line: 632, column: 17, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11298, file: !512, line: 632, column: 8)
!11298 = distinct !DILexicalBlock(scope: !11289, file: !512, line: 631, column: 46)
!11299 = !DILocation(line: 632, column: 28, scope: !11297)
!11300 = !DILocation(line: 632, column: 30, scope: !11297)
!11301 = !DILocation(line: 632, column: 34, scope: !11297)
!11302 = !DILocation(line: 632, column: 43, scope: !11297)
!11303 = !DILocation(line: 632, column: 16, scope: !11297)
!11304 = !DILocation(line: 632, column: 51, scope: !11297)
!11305 = !DILocation(line: 632, column: 60, scope: !11297)
!11306 = !DILocation(line: 632, column: 62, scope: !11297)
!11307 = !DILocation(line: 632, column: 58, scope: !11297)
!11308 = !DILocation(line: 632, column: 9, scope: !11297)
!11309 = !DILocation(line: 632, column: 8, scope: !11298)
!11310 = !DILocation(line: 633, column: 5, scope: !11297)
!11311 = !DILocation(line: 634, column: 3, scope: !11298)
!11312 = !DILocation(line: 631, column: 42, scope: !11313)
!11313 = !DILexicalBlockFile(scope: !11289, file: !512, discriminator: 2)
!11314 = !DILocation(line: 631, column: 3, scope: !11313)
!11315 = distinct !{!11315, !11316}
!11316 = !DILocation(line: 631, column: 3, scope: !11285)
!11317 = !DILocation(line: 635, column: 2, scope: !11285)
!11318 = !DILocation(line: 635, column: 13, scope: !11319)
!11319 = !DILexicalBlockFile(scope: !11320, file: !512, discriminator: 1)
!11320 = distinct !DILexicalBlock(scope: !11279, file: !512, line: 635, column: 13)
!11321 = !DILocation(line: 635, column: 19, scope: !11319)
!11322 = !DILocation(line: 635, column: 26, scope: !11319)
!11323 = !DILocation(line: 636, column: 10, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !512, line: 636, column: 3)
!11325 = distinct !DILexicalBlock(scope: !11320, file: !512, line: 635, column: 38)
!11326 = !DILocation(line: 636, column: 8, scope: !11324)
!11327 = !DILocation(line: 636, column: 15, scope: !11328)
!11328 = !DILexicalBlockFile(scope: !11329, file: !512, discriminator: 1)
!11329 = distinct !DILexicalBlock(scope: !11324, file: !512, line: 636, column: 3)
!11330 = !DILocation(line: 636, column: 21, scope: !11328)
!11331 = !DILocation(line: 636, column: 27, scope: !11328)
!11332 = !DILocation(line: 636, column: 33, scope: !11328)
!11333 = !DILocation(line: 636, column: 19, scope: !11328)
!11334 = !DILocation(line: 636, column: 17, scope: !11328)
!11335 = !DILocation(line: 636, column: 3, scope: !11328)
!11336 = !DILocation(line: 637, column: 17, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !512, line: 637, column: 8)
!11338 = distinct !DILexicalBlock(scope: !11329, file: !512, line: 636, column: 46)
!11339 = !DILocation(line: 637, column: 28, scope: !11337)
!11340 = !DILocation(line: 637, column: 30, scope: !11337)
!11341 = !DILocation(line: 637, column: 16, scope: !11337)
!11342 = !DILocation(line: 637, column: 41, scope: !11337)
!11343 = !DILocation(line: 637, column: 50, scope: !11337)
!11344 = !DILocation(line: 637, column: 52, scope: !11337)
!11345 = !DILocation(line: 637, column: 48, scope: !11337)
!11346 = !DILocation(line: 637, column: 9, scope: !11337)
!11347 = !DILocation(line: 637, column: 8, scope: !11338)
!11348 = !DILocation(line: 638, column: 5, scope: !11337)
!11349 = !DILocation(line: 639, column: 3, scope: !11338)
!11350 = !DILocation(line: 636, column: 42, scope: !11351)
!11351 = !DILexicalBlockFile(scope: !11329, file: !512, discriminator: 2)
!11352 = !DILocation(line: 636, column: 3, scope: !11351)
!11353 = distinct !{!11353, !11354}
!11354 = !DILocation(line: 636, column: 3, scope: !11325)
!11355 = !DILocation(line: 640, column: 2, scope: !11325)
!11356 = !DILocation(line: 642, column: 2, scope: !11267)
!11357 = !DILocation(line: 643, column: 1, scope: !11267)
!11358 = distinct !DISubprogram(name: "ka_magic_open", scope: !11359, file: !11359, line: 32, type: !11360, isLocal: true, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11359 = !DIFile(filename: "../../lib/keepalived_magic.h", directory: "/home/lichi/Desktop/keepalived/[lib]keepalived--vrrp--libvrrp.a")
!11360 = !DISubroutineType(types: !11361)
!11361 = !{!5400}
!11362 = !DILocalVariable(name: "magic", scope: !11358, file: !11359, line: 34, type: !5400)
!11363 = !DILocation(line: 34, column: 10, scope: !11358)
!11364 = !DILocation(line: 34, column: 18, scope: !11358)
!11365 = !DILocation(line: 35, column: 7, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11358, file: !11359, line: 35, column: 6)
!11367 = !DILocation(line: 35, column: 6, scope: !11358)
!11368 = !DILocation(line: 36, column: 3, scope: !11366)
!11369 = !DILocation(line: 37, column: 22, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11366, file: !11359, line: 37, column: 11)
!11371 = !DILocation(line: 37, column: 11, scope: !11370)
!11372 = !DILocation(line: 37, column: 11, scope: !11366)
!11373 = !DILocation(line: 38, column: 3, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11370, file: !11359, line: 37, column: 35)
!11375 = !DILocation(line: 39, column: 15, scope: !11374)
!11376 = !DILocation(line: 39, column: 3, scope: !11374)
!11377 = !DILocation(line: 40, column: 9, scope: !11374)
!11378 = !DILocation(line: 41, column: 2, scope: !11374)
!11379 = !DILocation(line: 43, column: 9, scope: !11358)
!11380 = !DILocation(line: 43, column: 2, scope: !11358)
!11381 = distinct !DISubprogram(name: "check_track_script_secure", scope: !512, file: !512, line: 198, type: !11382, isLocal: true, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{!300, !5315, !5400}
!11384 = !DILocalVariable(name: "script", arg: 1, scope: !11381, file: !512, line: 198, type: !5315)
!11385 = !DILocation(line: 198, column: 42, scope: !11381)
!11386 = !DILocalVariable(name: "magic", arg: 2, scope: !11381, file: !512, line: 198, type: !5400)
!11387 = !DILocation(line: 198, column: 58, scope: !11381)
!11388 = !DILocalVariable(name: "flags", scope: !11381, file: !512, line: 200, type: !300)
!11389 = !DILocation(line: 200, column: 6, scope: !11381)
!11390 = !DILocation(line: 202, column: 6, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11381, file: !512, line: 202, column: 6)
!11392 = !DILocation(line: 202, column: 14, scope: !11391)
!11393 = !DILocation(line: 202, column: 6, scope: !11381)
!11394 = !DILocation(line: 203, column: 3, scope: !11391)
!11395 = !DILocation(line: 205, column: 31, scope: !11381)
!11396 = !DILocation(line: 205, column: 39, scope: !11381)
!11397 = !DILocation(line: 205, column: 47, scope: !11381)
!11398 = !DILocation(line: 205, column: 10, scope: !11381)
!11399 = !DILocation(line: 205, column: 8, scope: !11381)
!11400 = !DILocation(line: 208, column: 6, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11381, file: !512, line: 208, column: 6)
!11402 = !DILocation(line: 208, column: 12, scope: !11401)
!11403 = !DILocation(line: 208, column: 6, scope: !11381)
!11404 = !DILocation(line: 209, column: 90, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11401, file: !512, line: 208, column: 20)
!11406 = !DILocation(line: 209, column: 98, scope: !11405)
!11407 = !DILocation(line: 209, column: 3, scope: !11405)
!11408 = !DILocation(line: 210, column: 3, scope: !11405)
!11409 = !DILocation(line: 210, column: 11, scope: !11405)
!11410 = !DILocation(line: 210, column: 20, scope: !11405)
!11411 = !DILocation(line: 211, column: 2, scope: !11405)
!11412 = !DILocation(line: 212, column: 11, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11401, file: !512, line: 212, column: 11)
!11414 = !DILocation(line: 212, column: 17, scope: !11413)
!11415 = !DILocation(line: 212, column: 11, scope: !11401)
!11416 = !DILocation(line: 213, column: 101, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11413, file: !512, line: 212, column: 25)
!11418 = !DILocation(line: 213, column: 109, scope: !11417)
!11419 = !DILocation(line: 213, column: 3, scope: !11417)
!11420 = !DILocation(line: 214, column: 3, scope: !11417)
!11421 = !DILocation(line: 214, column: 11, scope: !11417)
!11422 = !DILocation(line: 214, column: 20, scope: !11417)
!11423 = !DILocation(line: 215, column: 2, scope: !11417)
!11424 = !DILocation(line: 216, column: 13, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11413, file: !512, line: 216, column: 11)
!11426 = !DILocation(line: 216, column: 19, scope: !11425)
!11427 = !DILocation(line: 216, column: 11, scope: !11413)
!11428 = !DILocation(line: 217, column: 3, scope: !11425)
!11429 = !DILocation(line: 217, column: 11, scope: !11425)
!11430 = !DILocation(line: 217, column: 20, scope: !11425)
!11431 = !DILocation(line: 219, column: 9, scope: !11381)
!11432 = !DILocation(line: 219, column: 2, scope: !11381)
!11433 = !DILocation(line: 220, column: 1, scope: !11381)
!11434 = distinct !DISubprogram(name: "ka_magic_close", scope: !11359, file: !11359, line: 47, type: !11435, isLocal: true, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{null, !5400}
!11437 = !DILocalVariable(name: "magic", arg: 1, scope: !11434, file: !11359, line: 47, type: !5400)
!11438 = !DILocation(line: 47, column: 24, scope: !11434)
!11439 = !DILocation(line: 49, column: 14, scope: !11434)
!11440 = !DILocation(line: 49, column: 2, scope: !11434)
!11441 = !DILocation(line: 50, column: 1, scope: !11434)
!11442 = distinct !DISubprogram(name: "chk_min_cfg", scope: !512, file: !512, line: 2080, type: !5872, isLocal: true, isDefinition: true, scopeLine: 2081, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11443 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11442, file: !512, line: 2080, type: !537)
!11444 = !DILocation(line: 2080, column: 22, scope: !11442)
!11445 = !DILocation(line: 2082, column: 6, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11442, file: !512, line: 2082, column: 6)
!11447 = !DILocation(line: 2082, column: 12, scope: !11446)
!11448 = !DILocation(line: 2082, column: 17, scope: !11446)
!11449 = !DILocation(line: 2082, column: 6, scope: !11442)
!11450 = !DILocation(line: 2083, column: 87, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11446, file: !512, line: 2082, column: 23)
!11452 = !DILocation(line: 2083, column: 93, scope: !11451)
!11453 = !DILocation(line: 2083, column: 3, scope: !11451)
!11454 = !DILocation(line: 2084, column: 3, scope: !11451)
!11455 = !DILocation(line: 2086, column: 7, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11442, file: !512, line: 2086, column: 6)
!11457 = !DILocation(line: 2086, column: 13, scope: !11456)
!11458 = !DILocation(line: 2086, column: 6, scope: !11442)
!11459 = !DILocation(line: 2087, column: 72, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11456, file: !512, line: 2086, column: 18)
!11461 = !DILocation(line: 2087, column: 78, scope: !11460)
!11462 = !DILocation(line: 2087, column: 3, scope: !11460)
!11463 = !DILocation(line: 2088, column: 3, scope: !11460)
!11464 = !DILocation(line: 2091, column: 2, scope: !11442)
!11465 = !DILocation(line: 2092, column: 1, scope: !11442)
!11466 = distinct !DISubprogram(name: "__clear_bit", scope: !81, file: !81, line: 42, type: !11467, isLocal: true, isDefinition: true, scopeLine: 43, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11467 = !DISubroutineType(types: !11468)
!11468 = !{null, !189, !11469}
!11469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64, align: 64)
!11470 = !DILocalVariable(name: "idx", arg: 1, scope: !11466, file: !81, line: 42, type: !189)
!11471 = !DILocation(line: 42, column: 41, scope: !11466)
!11472 = !DILocalVariable(name: "bmap", arg: 2, scope: !11466, file: !81, line: 42, type: !11469)
!11473 = !DILocation(line: 42, column: 61, scope: !11466)
!11474 = !DILocation(line: 44, column: 60, scope: !11466)
!11475 = !DILocation(line: 44, column: 59, scope: !11466)
!11476 = !DILocation(line: 44, column: 65, scope: !11466)
!11477 = !DILocation(line: 44, column: 55, scope: !11466)
!11478 = !DILocation(line: 44, column: 49, scope: !11466)
!11479 = !DILocation(line: 44, column: 9, scope: !11466)
!11480 = !DILocation(line: 44, column: 8, scope: !11466)
!11481 = !DILocation(line: 44, column: 14, scope: !11466)
!11482 = !DILocation(line: 44, column: 2, scope: !11466)
!11483 = !DILocation(line: 44, column: 46, scope: !11466)
!11484 = !DILocation(line: 45, column: 1, scope: !11466)
!11485 = distinct !DISubprogram(name: "__set_bit", scope: !81, file: !81, line: 37, type: !11467, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11486 = !DILocalVariable(name: "idx", arg: 1, scope: !11485, file: !81, line: 37, type: !189)
!11487 = !DILocation(line: 37, column: 39, scope: !11485)
!11488 = !DILocalVariable(name: "bmap", arg: 2, scope: !11485, file: !81, line: 37, type: !11469)
!11489 = !DILocation(line: 37, column: 59, scope: !11485)
!11490 = !DILocation(line: 39, column: 59, scope: !11485)
!11491 = !DILocation(line: 39, column: 58, scope: !11485)
!11492 = !DILocation(line: 39, column: 64, scope: !11485)
!11493 = !DILocation(line: 39, column: 54, scope: !11485)
!11494 = !DILocation(line: 39, column: 9, scope: !11485)
!11495 = !DILocation(line: 39, column: 8, scope: !11485)
!11496 = !DILocation(line: 39, column: 14, scope: !11485)
!11497 = !DILocation(line: 39, column: 2, scope: !11485)
!11498 = !DILocation(line: 39, column: 46, scope: !11485)
!11499 = !DILocation(line: 40, column: 1, scope: !11485)
!11500 = distinct !DISubprogram(name: "add_vrrp_to_track_script", scope: !512, file: !512, line: 2352, type: !11501, isLocal: true, isDefinition: true, scopeLine: 2353, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11501 = !DISubroutineType(types: !11502)
!11502 = !{null, !537, !5388}
!11503 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11500, file: !512, line: 2352, type: !537)
!11504 = !DILocation(line: 2352, column: 34, scope: !11500)
!11505 = !DILocalVariable(name: "sc", arg: 2, scope: !11500, file: !512, line: 2352, type: !5388)
!11506 = !DILocation(line: 2352, column: 54, scope: !11500)
!11507 = !DILocalVariable(name: "tvp", scope: !11500, file: !512, line: 2354, type: !3797)
!11508 = !DILocation(line: 2354, column: 19, scope: !11500)
!11509 = !DILocalVariable(name: "etvp", scope: !11500, file: !512, line: 2354, type: !3797)
!11510 = !DILocation(line: 2354, column: 25, scope: !11500)
!11511 = !DILocalVariable(name: "e", scope: !11500, file: !512, line: 2355, type: !984)
!11512 = !DILocation(line: 2355, column: 10, scope: !11500)
!11513 = !DILocation(line: 2357, column: 9, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11500, file: !512, line: 2357, column: 6)
!11515 = !DILocation(line: 2357, column: 13, scope: !11514)
!11516 = !DILocation(line: 2357, column: 18, scope: !11514)
!11517 = !DILocation(line: 2357, column: 33, scope: !11514)
!11518 = !DILocation(line: 2357, column: 6, scope: !11500)
!11519 = !DILocation(line: 2358, column: 28, scope: !11514)
!11520 = !DILocation(line: 2358, column: 3, scope: !11514)
!11521 = !DILocation(line: 2358, column: 7, scope: !11514)
!11522 = !DILocation(line: 2358, column: 12, scope: !11514)
!11523 = !DILocation(line: 2358, column: 26, scope: !11514)
!11524 = !DILocation(line: 2363, column: 15, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11526, file: !512, line: 2363, column: 3)
!11526 = distinct !DILexicalBlock(scope: !11514, file: !512, line: 2359, column: 7)
!11527 = !DILocation(line: 2363, column: 19, scope: !11525)
!11528 = !DILocation(line: 2363, column: 24, scope: !11525)
!11529 = !DILocation(line: 2363, column: 14, scope: !11525)
!11530 = !DILocation(line: 2363, column: 13, scope: !11525)
!11531 = !DILocation(line: 2363, column: 13, scope: !11532)
!11532 = !DILexicalBlockFile(scope: !11525, file: !512, discriminator: 1)
!11533 = !DILocation(line: 2363, column: 14, scope: !11534)
!11534 = !DILexicalBlockFile(scope: !11525, file: !512, discriminator: 2)
!11535 = !DILocation(line: 2363, column: 18, scope: !11534)
!11536 = !DILocation(line: 2363, column: 23, scope: !11534)
!11537 = !DILocation(line: 2363, column: 39, scope: !11534)
!11538 = !DILocation(line: 2363, column: 13, scope: !11534)
!11539 = !DILocation(line: 2363, column: 13, scope: !11540)
!11540 = !DILexicalBlockFile(scope: !11525, file: !512, discriminator: 3)
!11541 = !DILocation(line: 2363, column: 10, scope: !11540)
!11542 = !DILocation(line: 2363, column: 8, scope: !11540)
!11543 = !DILocation(line: 2363, column: 46, scope: !11544)
!11544 = !DILexicalBlockFile(scope: !11545, file: !512, discriminator: 4)
!11545 = distinct !DILexicalBlock(scope: !11525, file: !512, line: 2363, column: 3)
!11546 = !DILocation(line: 2363, column: 3, scope: !11544)
!11547 = !DILocation(line: 2364, column: 13, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11545, file: !512, line: 2363, column: 68)
!11549 = !DILocation(line: 2364, column: 17, scope: !11548)
!11550 = !DILocation(line: 2364, column: 11, scope: !11548)
!11551 = !DILocation(line: 2364, column: 9, scope: !11548)
!11552 = !DILocation(line: 2365, column: 8, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11548, file: !512, line: 2365, column: 8)
!11554 = !DILocation(line: 2365, column: 14, scope: !11553)
!11555 = !DILocation(line: 2365, column: 22, scope: !11553)
!11556 = !DILocation(line: 2365, column: 19, scope: !11553)
!11557 = !DILocation(line: 2365, column: 8, scope: !11548)
!11558 = !DILocation(line: 2369, column: 7, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11553, file: !512, line: 2365, column: 28)
!11560 = !DILocation(line: 2369, column: 13, scope: !11559)
!11561 = !DILocation(line: 2369, column: 20, scope: !11559)
!11562 = !DILocation(line: 2369, column: 24, scope: !11559)
!11563 = !DILocation(line: 2369, column: 29, scope: !11559)
!11564 = !DILocation(line: 2368, column: 5, scope: !11559)
!11565 = !DILocation(line: 2371, column: 9, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11559, file: !512, line: 2371, column: 9)
!11567 = !DILocation(line: 2371, column: 15, scope: !11566)
!11568 = !DILocation(line: 2371, column: 9, scope: !11559)
!11569 = !DILocation(line: 2372, column: 21, scope: !11566)
!11570 = !DILocation(line: 2372, column: 25, scope: !11566)
!11571 = !DILocation(line: 2372, column: 6, scope: !11566)
!11572 = !DILocation(line: 2372, column: 12, scope: !11566)
!11573 = !DILocation(line: 2372, column: 19, scope: !11566)
!11574 = !DILocation(line: 2373, column: 5, scope: !11559)
!11575 = !DILocation(line: 2375, column: 3, scope: !11548)
!11576 = !DILocation(line: 2363, column: 57, scope: !11577)
!11577 = !DILexicalBlockFile(scope: !11545, file: !512, discriminator: 5)
!11578 = !DILocation(line: 2363, column: 61, scope: !11577)
!11579 = !DILocation(line: 2363, column: 54, scope: !11577)
!11580 = !DILocation(line: 2363, column: 3, scope: !11577)
!11581 = distinct !{!11581, !11582}
!11582 = !DILocation(line: 2363, column: 3, scope: !11526)
!11583 = !DILocation(line: 2378, column: 9, scope: !11500)
!11584 = !DILocation(line: 2378, column: 8, scope: !11500)
!11585 = !DILocation(line: 2378, column: 6, scope: !11500)
!11586 = !DILocation(line: 2379, column: 14, scope: !11500)
!11587 = !DILocation(line: 2379, column: 2, scope: !11500)
!11588 = !DILocation(line: 2379, column: 7, scope: !11500)
!11589 = !DILocation(line: 2379, column: 12, scope: !11500)
!11590 = !DILocation(line: 2380, column: 16, scope: !11500)
!11591 = !DILocation(line: 2380, column: 20, scope: !11500)
!11592 = !DILocation(line: 2380, column: 2, scope: !11500)
!11593 = !DILocation(line: 2380, column: 7, scope: !11500)
!11594 = !DILocation(line: 2380, column: 14, scope: !11500)
!11595 = !DILocation(line: 2381, column: 11, scope: !11500)
!11596 = !DILocation(line: 2381, column: 15, scope: !11500)
!11597 = !DILocation(line: 2381, column: 20, scope: !11500)
!11598 = !DILocation(line: 2381, column: 35, scope: !11500)
!11599 = !DILocation(line: 2381, column: 2, scope: !11500)
!11600 = !DILocation(line: 2382, column: 1, scope: !11500)
!11601 = !DILocation(line: 2382, column: 1, scope: !11602)
!11602 = !DILexicalBlockFile(scope: !11500, file: !512, discriminator: 1)
!11603 = distinct !DISubprogram(name: "add_vrrp_to_track_file", scope: !512, file: !512, line: 2385, type: !11604, isLocal: true, isDefinition: true, scopeLine: 2386, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11604 = !DISubroutineType(types: !11605)
!11605 = !{null, !537, !5905}
!11606 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11603, file: !512, line: 2385, type: !537)
!11607 = !DILocation(line: 2385, column: 32, scope: !11603)
!11608 = !DILocalVariable(name: "tfl", arg: 2, scope: !11603, file: !512, line: 2385, type: !5905)
!11609 = !DILocation(line: 2385, column: 54, scope: !11603)
!11610 = !DILocalVariable(name: "tvp", scope: !11603, file: !512, line: 2387, type: !3797)
!11611 = !DILocation(line: 2387, column: 19, scope: !11603)
!11612 = !DILocalVariable(name: "etvp", scope: !11603, file: !512, line: 2387, type: !3797)
!11613 = !DILocation(line: 2387, column: 25, scope: !11603)
!11614 = !DILocalVariable(name: "e", scope: !11603, file: !512, line: 2388, type: !984)
!11615 = !DILocation(line: 2388, column: 10, scope: !11603)
!11616 = !DILocation(line: 2390, column: 9, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11603, file: !512, line: 2390, column: 6)
!11618 = !DILocation(line: 2390, column: 14, scope: !11617)
!11619 = !DILocation(line: 2390, column: 20, scope: !11617)
!11620 = !DILocation(line: 2390, column: 35, scope: !11617)
!11621 = !DILocation(line: 2390, column: 6, scope: !11603)
!11622 = !DILocation(line: 2391, column: 30, scope: !11617)
!11623 = !DILocation(line: 2391, column: 3, scope: !11617)
!11624 = !DILocation(line: 2391, column: 8, scope: !11617)
!11625 = !DILocation(line: 2391, column: 14, scope: !11617)
!11626 = !DILocation(line: 2391, column: 28, scope: !11617)
!11627 = !DILocation(line: 2396, column: 15, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11629, file: !512, line: 2396, column: 3)
!11629 = distinct !DILexicalBlock(scope: !11617, file: !512, line: 2392, column: 7)
!11630 = !DILocation(line: 2396, column: 20, scope: !11628)
!11631 = !DILocation(line: 2396, column: 26, scope: !11628)
!11632 = !DILocation(line: 2396, column: 14, scope: !11628)
!11633 = !DILocation(line: 2396, column: 13, scope: !11628)
!11634 = !DILocation(line: 2396, column: 13, scope: !11635)
!11635 = !DILexicalBlockFile(scope: !11628, file: !512, discriminator: 1)
!11636 = !DILocation(line: 2396, column: 14, scope: !11637)
!11637 = !DILexicalBlockFile(scope: !11628, file: !512, discriminator: 2)
!11638 = !DILocation(line: 2396, column: 19, scope: !11637)
!11639 = !DILocation(line: 2396, column: 25, scope: !11637)
!11640 = !DILocation(line: 2396, column: 41, scope: !11637)
!11641 = !DILocation(line: 2396, column: 13, scope: !11637)
!11642 = !DILocation(line: 2396, column: 13, scope: !11643)
!11643 = !DILexicalBlockFile(scope: !11628, file: !512, discriminator: 3)
!11644 = !DILocation(line: 2396, column: 10, scope: !11643)
!11645 = !DILocation(line: 2396, column: 8, scope: !11643)
!11646 = !DILocation(line: 2396, column: 48, scope: !11647)
!11647 = !DILexicalBlockFile(scope: !11648, file: !512, discriminator: 4)
!11648 = distinct !DILexicalBlock(scope: !11628, file: !512, line: 2396, column: 3)
!11649 = !DILocation(line: 2396, column: 3, scope: !11647)
!11650 = !DILocation(line: 2397, column: 13, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11648, file: !512, line: 2396, column: 70)
!11652 = !DILocation(line: 2397, column: 17, scope: !11651)
!11653 = !DILocation(line: 2397, column: 11, scope: !11651)
!11654 = !DILocation(line: 2397, column: 9, scope: !11651)
!11655 = !DILocation(line: 2398, column: 8, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11651, file: !512, line: 2398, column: 8)
!11657 = !DILocation(line: 2398, column: 14, scope: !11656)
!11658 = !DILocation(line: 2398, column: 22, scope: !11656)
!11659 = !DILocation(line: 2398, column: 19, scope: !11656)
!11660 = !DILocation(line: 2398, column: 8, scope: !11651)
!11661 = !DILocation(line: 2402, column: 7, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11656, file: !512, line: 2398, column: 28)
!11663 = !DILocation(line: 2402, column: 13, scope: !11662)
!11664 = !DILocation(line: 2402, column: 20, scope: !11662)
!11665 = !DILocation(line: 2402, column: 25, scope: !11662)
!11666 = !DILocation(line: 2402, column: 31, scope: !11662)
!11667 = !DILocation(line: 2401, column: 5, scope: !11662)
!11668 = !DILocation(line: 2404, column: 9, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11662, file: !512, line: 2404, column: 9)
!11670 = !DILocation(line: 2404, column: 15, scope: !11669)
!11671 = !DILocation(line: 2404, column: 9, scope: !11662)
!11672 = !DILocation(line: 2405, column: 21, scope: !11669)
!11673 = !DILocation(line: 2405, column: 26, scope: !11669)
!11674 = !DILocation(line: 2405, column: 6, scope: !11669)
!11675 = !DILocation(line: 2405, column: 12, scope: !11669)
!11676 = !DILocation(line: 2405, column: 19, scope: !11669)
!11677 = !DILocation(line: 2406, column: 5, scope: !11662)
!11678 = !DILocation(line: 2408, column: 3, scope: !11651)
!11679 = !DILocation(line: 2396, column: 59, scope: !11680)
!11680 = !DILexicalBlockFile(scope: !11648, file: !512, discriminator: 5)
!11681 = !DILocation(line: 2396, column: 63, scope: !11680)
!11682 = !DILocation(line: 2396, column: 56, scope: !11680)
!11683 = !DILocation(line: 2396, column: 3, scope: !11680)
!11684 = distinct !{!11684, !11685}
!11685 = !DILocation(line: 2396, column: 3, scope: !11629)
!11686 = !DILocation(line: 2411, column: 9, scope: !11603)
!11687 = !DILocation(line: 2411, column: 8, scope: !11603)
!11688 = !DILocation(line: 2411, column: 6, scope: !11603)
!11689 = !DILocation(line: 2412, column: 14, scope: !11603)
!11690 = !DILocation(line: 2412, column: 2, scope: !11603)
!11691 = !DILocation(line: 2412, column: 7, scope: !11603)
!11692 = !DILocation(line: 2412, column: 12, scope: !11603)
!11693 = !DILocation(line: 2413, column: 16, scope: !11603)
!11694 = !DILocation(line: 2413, column: 21, scope: !11603)
!11695 = !DILocation(line: 2413, column: 2, scope: !11603)
!11696 = !DILocation(line: 2413, column: 7, scope: !11603)
!11697 = !DILocation(line: 2413, column: 14, scope: !11603)
!11698 = !DILocation(line: 2414, column: 11, scope: !11603)
!11699 = !DILocation(line: 2414, column: 16, scope: !11603)
!11700 = !DILocation(line: 2414, column: 22, scope: !11603)
!11701 = !DILocation(line: 2414, column: 37, scope: !11603)
!11702 = !DILocation(line: 2414, column: 2, scope: !11603)
!11703 = !DILocation(line: 2415, column: 1, scope: !11603)
!11704 = !DILocation(line: 2415, column: 1, scope: !11705)
!11705 = !DILexicalBlockFile(scope: !11603, file: !512, discriminator: 1)
!11706 = distinct !DISubprogram(name: "vrrp_alloc_send_buffer", scope: !512, file: !512, line: 1359, type: !1810, isLocal: true, isDefinition: true, scopeLine: 1360, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11707 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11706, file: !512, line: 1359, type: !537)
!11708 = !DILocation(line: 1359, column: 33, scope: !11706)
!11709 = !DILocation(line: 1361, column: 40, scope: !11706)
!11710 = !DILocation(line: 1361, column: 27, scope: !11706)
!11711 = !DILocation(line: 1361, column: 2, scope: !11706)
!11712 = !DILocation(line: 1361, column: 8, scope: !11706)
!11713 = !DILocation(line: 1361, column: 25, scope: !11706)
!11714 = !DILocation(line: 1363, column: 30, scope: !11706)
!11715 = !DILocation(line: 1363, column: 36, scope: !11706)
!11716 = !DILocation(line: 1363, column: 23, scope: !11706)
!11717 = !DILocation(line: 1363, column: 2, scope: !11706)
!11718 = !DILocation(line: 1363, column: 8, scope: !11706)
!11719 = !DILocation(line: 1363, column: 20, scope: !11706)
!11720 = !DILocation(line: 1364, column: 1, scope: !11706)
!11721 = distinct !DISubprogram(name: "vrrp_build_pkt", scope: !512, file: !512, line: 1260, type: !1810, isLocal: true, isDefinition: true, scopeLine: 1261, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11722 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11721, file: !512, line: 1260, type: !537)
!11723 = !DILocation(line: 1260, column: 25, scope: !11721)
!11724 = !DILocalVariable(name: "bufptr", scope: !11721, file: !512, line: 1262, type: !230)
!11725 = !DILocation(line: 1262, column: 8, scope: !11721)
!11726 = !DILocation(line: 1264, column: 6, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11721, file: !512, line: 1264, column: 6)
!11728 = !DILocation(line: 1264, column: 12, scope: !11727)
!11729 = !DILocation(line: 1264, column: 19, scope: !11727)
!11730 = !DILocation(line: 1264, column: 6, scope: !11721)
!11731 = !DILocation(line: 1266, column: 12, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11727, file: !512, line: 1264, column: 30)
!11733 = !DILocation(line: 1266, column: 18, scope: !11732)
!11734 = !DILocation(line: 1266, column: 10, scope: !11732)
!11735 = !DILocation(line: 1269, column: 18, scope: !11732)
!11736 = !DILocation(line: 1269, column: 24, scope: !11732)
!11737 = !DILocation(line: 1269, column: 30, scope: !11732)
!11738 = !DILocation(line: 1269, column: 3, scope: !11732)
!11739 = !DILocation(line: 1272, column: 13, scope: !11732)
!11740 = !DILocation(line: 1272, column: 10, scope: !11732)
!11741 = !DILocation(line: 1275, column: 7, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11732, file: !512, line: 1275, column: 7)
!11743 = !DILocation(line: 1275, column: 13, scope: !11742)
!11744 = !DILocation(line: 1275, column: 23, scope: !11742)
!11745 = !DILocation(line: 1275, column: 7, scope: !11732)
!11746 = !DILocation(line: 1276, column: 14, scope: !11742)
!11747 = !DILocation(line: 1276, column: 11, scope: !11742)
!11748 = !DILocation(line: 1276, column: 4, scope: !11742)
!11749 = !DILocation(line: 1278, column: 19, scope: !11732)
!11750 = !DILocation(line: 1278, column: 25, scope: !11732)
!11751 = !DILocation(line: 1278, column: 49, scope: !11732)
!11752 = !DILocation(line: 1278, column: 55, scope: !11732)
!11753 = !DILocation(line: 1278, column: 33, scope: !11732)
!11754 = !DILocation(line: 1278, column: 3, scope: !11732)
!11755 = !DILocation(line: 1282, column: 7, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11732, file: !512, line: 1282, column: 7)
!11757 = !DILocation(line: 1282, column: 13, scope: !11756)
!11758 = !DILocation(line: 1282, column: 23, scope: !11756)
!11759 = !DILocation(line: 1282, column: 7, scope: !11732)
!11760 = !DILocation(line: 1283, column: 23, scope: !11756)
!11761 = !DILocation(line: 1283, column: 29, scope: !11756)
!11762 = !DILocation(line: 1283, column: 35, scope: !11756)
!11763 = !DILocation(line: 1283, column: 48, scope: !11756)
!11764 = !DILocation(line: 1283, column: 54, scope: !11756)
!11765 = !DILocation(line: 1283, column: 4, scope: !11756)
!11766 = !DILocation(line: 1285, column: 2, scope: !11732)
!11767 = !DILocation(line: 1286, column: 11, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11727, file: !512, line: 1286, column: 11)
!11769 = !DILocation(line: 1286, column: 17, scope: !11768)
!11770 = !DILocation(line: 1286, column: 24, scope: !11768)
!11771 = !DILocation(line: 1286, column: 11, scope: !11727)
!11772 = !DILocation(line: 1287, column: 19, scope: !11768)
!11773 = !DILocation(line: 1287, column: 25, scope: !11768)
!11774 = !DILocation(line: 1287, column: 31, scope: !11768)
!11775 = !DILocation(line: 1287, column: 3, scope: !11768)
!11776 = !DILocation(line: 1288, column: 1, scope: !11721)
!11777 = distinct !DISubprogram(name: "vrrp_build_ip4", scope: !512, file: !512, line: 1057, type: !11778, isLocal: true, isDefinition: true, scopeLine: 1058, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11778 = !DISubroutineType(types: !11779)
!11779 = !{null, !537, !230}
!11780 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11777, file: !512, line: 1057, type: !537)
!11781 = !DILocation(line: 1057, column: 24, scope: !11777)
!11782 = !DILocalVariable(name: "buffer", arg: 2, scope: !11777, file: !512, line: 1057, type: !230)
!11783 = !DILocation(line: 1057, column: 36, scope: !11777)
!11784 = !DILocalVariable(name: "ip", scope: !11777, file: !512, line: 1059, type: !184)
!11785 = !DILocation(line: 1059, column: 16, scope: !11777)
!11786 = !DILocation(line: 1059, column: 39, scope: !11777)
!11787 = !DILocation(line: 1059, column: 21, scope: !11777)
!11788 = !DILocation(line: 1061, column: 2, scope: !11777)
!11789 = !DILocation(line: 1061, column: 6, scope: !11777)
!11790 = !DILocation(line: 1061, column: 10, scope: !11777)
!11791 = !DILocation(line: 1062, column: 2, scope: !11777)
!11792 = !DILocation(line: 1062, column: 6, scope: !11777)
!11793 = !DILocation(line: 1062, column: 14, scope: !11777)
!11794 = !DILocation(line: 1064, column: 2, scope: !11777)
!11795 = !DILocation(line: 1064, column: 6, scope: !11777)
!11796 = !DILocation(line: 1064, column: 10, scope: !11777)
!11797 = !DILocation(line: 1065, column: 64, scope: !11777)
!11798 = !DILocation(line: 1065, column: 51, scope: !11777)
!11799 = !DILocation(line: 1065, column: 49, scope: !11777)
!11800 = !DILocation(line: 1065, column: 16, scope: !11777)
!11801 = !DILocation(line: 1065, column: 2, scope: !11777)
!11802 = !DILocation(line: 1065, column: 6, scope: !11777)
!11803 = !DILocation(line: 1065, column: 14, scope: !11777)
!11804 = !DILocation(line: 1066, column: 22, scope: !11777)
!11805 = !DILocation(line: 1066, column: 26, scope: !11777)
!11806 = !DILocation(line: 1066, column: 16, scope: !11777)
!11807 = !DILocation(line: 1066, column: 2, scope: !11777)
!11808 = !DILocation(line: 1066, column: 6, scope: !11777)
!11809 = !DILocation(line: 1066, column: 14, scope: !11777)
!11810 = !DILocation(line: 1067, column: 2, scope: !11777)
!11811 = !DILocation(line: 1067, column: 6, scope: !11777)
!11812 = !DILocation(line: 1067, column: 9, scope: !11777)
!11813 = !DILocation(line: 1068, column: 2, scope: !11777)
!11814 = !DILocation(line: 1068, column: 6, scope: !11777)
!11815 = !DILocation(line: 1068, column: 15, scope: !11777)
!11816 = !DILocation(line: 1069, column: 2, scope: !11777)
!11817 = !DILocation(line: 1069, column: 6, scope: !11777)
!11818 = !DILocation(line: 1069, column: 10, scope: !11777)
!11819 = !DILocation(line: 1073, column: 18, scope: !11777)
!11820 = !DILocation(line: 1073, column: 24, scope: !11777)
!11821 = !DILocation(line: 1073, column: 34, scope: !11777)
!11822 = !DILocation(line: 1073, column: 17, scope: !11777)
!11823 = !DILocation(line: 1073, column: 2, scope: !11777)
!11824 = !DILocation(line: 1073, column: 6, scope: !11777)
!11825 = !DILocation(line: 1073, column: 15, scope: !11777)
!11826 = !DILocation(line: 1078, column: 17, scope: !11777)
!11827 = !DILocation(line: 1078, column: 24, scope: !11777)
!11828 = !DILocation(line: 1078, column: 30, scope: !11777)
!11829 = !DILocation(line: 1078, column: 15, scope: !11777)
!11830 = !DILocation(line: 1078, column: 69, scope: !11831)
!11831 = !DILexicalBlockFile(scope: !11777, file: !512, discriminator: 1)
!11832 = !DILocation(line: 1078, column: 76, scope: !11831)
!11833 = !DILocation(line: 1078, column: 84, scope: !11831)
!11834 = !DILocation(line: 1078, column: 93, scope: !11831)
!11835 = !DILocation(line: 1078, column: 15, scope: !11831)
!11836 = !DILocation(line: 1078, column: 105, scope: !11837)
!11837 = !DILexicalBlockFile(scope: !11777, file: !512, discriminator: 2)
!11838 = !DILocation(line: 1078, column: 112, scope: !11837)
!11839 = !DILocation(line: 1078, column: 118, scope: !11837)
!11840 = !DILocation(line: 1078, column: 127, scope: !11837)
!11841 = !DILocation(line: 1078, column: 15, scope: !11837)
!11842 = !DILocation(line: 1078, column: 15, scope: !11843)
!11843 = !DILexicalBlockFile(scope: !11777, file: !512, discriminator: 3)
!11844 = !DILocation(line: 1078, column: 2, scope: !11843)
!11845 = !DILocation(line: 1078, column: 6, scope: !11843)
!11846 = !DILocation(line: 1078, column: 12, scope: !11843)
!11847 = !DILocation(line: 1081, column: 9, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11777, file: !512, line: 1081, column: 6)
!11849 = !DILocation(line: 1081, column: 15, scope: !11848)
!11850 = !DILocation(line: 1081, column: 29, scope: !11848)
!11851 = !DILocation(line: 1081, column: 6, scope: !11848)
!11852 = !DILocation(line: 1081, column: 11, scope: !11853)
!11853 = !DILexicalBlockFile(scope: !11848, file: !512, discriminator: 1)
!11854 = !DILocation(line: 1081, column: 17, scope: !11853)
!11855 = !DILocation(line: 1081, column: 32, scope: !11853)
!11856 = !DILocation(line: 1081, column: 37, scope: !11853)
!11857 = !DILocation(line: 1081, column: 6, scope: !11853)
!11858 = !DILocation(line: 1081, column: 10, scope: !11859)
!11859 = !DILexicalBlockFile(scope: !11848, file: !512, discriminator: 2)
!11860 = !DILocation(line: 1081, column: 16, scope: !11859)
!11861 = !DILocation(line: 1081, column: 31, scope: !11859)
!11862 = !DILocation(line: 1081, column: 36, scope: !11859)
!11863 = !DILocation(line: 1081, column: 6, scope: !11859)
!11864 = !DILocalVariable(name: "addr", scope: !11865, file: !512, line: 1082, type: !981)
!11865 = distinct !DILexicalBlock(scope: !11848, file: !512, line: 1081, column: 10)
!11866 = !DILocation(line: 1082, column: 28, scope: !11865)
!11867 = !DILocation(line: 1082, column: 40, scope: !11865)
!11868 = !DILocation(line: 1082, column: 46, scope: !11865)
!11869 = !DILocation(line: 1082, column: 39, scope: !11865)
!11870 = !DILocation(line: 1082, column: 38, scope: !11865)
!11871 = !DILocation(line: 1082, column: 38, scope: !11872)
!11872 = !DILexicalBlockFile(scope: !11865, file: !512, discriminator: 1)
!11873 = !DILocation(line: 1082, column: 37, scope: !11874)
!11874 = !DILexicalBlockFile(scope: !11865, file: !512, discriminator: 2)
!11875 = !DILocation(line: 1082, column: 43, scope: !11874)
!11876 = !DILocation(line: 1082, column: 58, scope: !11874)
!11877 = !DILocation(line: 1082, column: 38, scope: !11874)
!11878 = !DILocation(line: 1082, column: 38, scope: !11879)
!11879 = !DILexicalBlockFile(scope: !11865, file: !512, discriminator: 3)
!11880 = !DILocation(line: 1082, column: 66, scope: !11879)
!11881 = !DILocation(line: 1082, column: 35, scope: !11879)
!11882 = !DILocation(line: 1082, column: 28, scope: !11879)
!11883 = !DILocation(line: 1083, column: 32, scope: !11865)
!11884 = !DILocation(line: 1083, column: 15, scope: !11865)
!11885 = !DILocation(line: 1083, column: 3, scope: !11865)
!11886 = !DILocation(line: 1083, column: 7, scope: !11865)
!11887 = !DILocation(line: 1083, column: 13, scope: !11865)
!11888 = !DILocation(line: 1084, column: 2, scope: !11865)
!11889 = !DILocation(line: 1086, column: 15, scope: !11848)
!11890 = !DILocation(line: 1086, column: 28, scope: !11848)
!11891 = !DILocation(line: 1086, column: 46, scope: !11848)
!11892 = !DILocation(line: 1086, column: 55, scope: !11848)
!11893 = !DILocation(line: 1086, column: 3, scope: !11848)
!11894 = !DILocation(line: 1086, column: 7, scope: !11848)
!11895 = !DILocation(line: 1086, column: 13, scope: !11848)
!11896 = !DILocation(line: 1088, column: 2, scope: !11777)
!11897 = !DILocation(line: 1088, column: 6, scope: !11777)
!11898 = !DILocation(line: 1088, column: 12, scope: !11777)
!11899 = !DILocation(line: 1089, column: 1, scope: !11777)
!11900 = distinct !DISubprogram(name: "vrrp_build_vrrp", scope: !512, file: !512, line: 1250, type: !11901, isLocal: true, isDefinition: true, scopeLine: 1251, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11901 = !DISubroutineType(types: !11902)
!11902 = !{null, !537, !230, !184}
!11903 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11900, file: !512, line: 1250, type: !537)
!11904 = !DILocation(line: 1250, column: 25, scope: !11900)
!11905 = !DILocalVariable(name: "buffer", arg: 2, scope: !11900, file: !512, line: 1250, type: !230)
!11906 = !DILocation(line: 1250, column: 37, scope: !11900)
!11907 = !DILocalVariable(name: "ip_hdr", arg: 3, scope: !11900, file: !512, line: 1250, type: !184)
!11908 = !DILocation(line: 1250, column: 59, scope: !11900)
!11909 = !DILocation(line: 1252, column: 6, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11900, file: !512, line: 1252, column: 6)
!11911 = !DILocation(line: 1252, column: 12, scope: !11910)
!11912 = !DILocation(line: 1252, column: 20, scope: !11910)
!11913 = !DILocation(line: 1252, column: 6, scope: !11900)
!11914 = !DILocation(line: 1253, column: 22, scope: !11910)
!11915 = !DILocation(line: 1253, column: 28, scope: !11910)
!11916 = !DILocation(line: 1253, column: 36, scope: !11910)
!11917 = !DILocation(line: 1253, column: 3, scope: !11910)
!11918 = !DILocation(line: 1255, column: 22, scope: !11910)
!11919 = !DILocation(line: 1255, column: 28, scope: !11910)
!11920 = !DILocation(line: 1255, column: 3, scope: !11910)
!11921 = !DILocation(line: 1256, column: 1, scope: !11900)
!11922 = distinct !DISubprogram(name: "vrrp_build_ipsecah", scope: !512, file: !512, line: 1094, type: !11923, isLocal: true, isDefinition: true, scopeLine: 1095, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11923 = !DISubroutineType(types: !11924)
!11924 = !{null, !537, !230, !292}
!11925 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11922, file: !512, line: 1094, type: !537)
!11926 = !DILocation(line: 1094, column: 29, scope: !11922)
!11927 = !DILocalVariable(name: "buffer", arg: 2, scope: !11922, file: !512, line: 1094, type: !230)
!11928 = !DILocation(line: 1094, column: 41, scope: !11922)
!11929 = !DILocalVariable(name: "buflen", arg: 3, scope: !11922, file: !512, line: 1094, type: !292)
!11930 = !DILocation(line: 1094, column: 56, scope: !11922)
!11931 = !DILocalVariable(name: "digest", scope: !11922, file: !512, line: 1096, type: !1339)
!11932 = !DILocation(line: 1096, column: 16, scope: !11922)
!11933 = !DILocalVariable(name: "ip", scope: !11922, file: !512, line: 1097, type: !184)
!11934 = !DILocation(line: 1097, column: 16, scope: !11922)
!11935 = !DILocation(line: 1097, column: 39, scope: !11922)
!11936 = !DILocation(line: 1097, column: 21, scope: !11922)
!11937 = !DILocalVariable(name: "ah", scope: !11922, file: !512, line: 1098, type: !276)
!11938 = !DILocation(line: 1098, column: 14, scope: !11922)
!11939 = !DILocation(line: 1098, column: 35, scope: !11922)
!11940 = !DILocation(line: 1098, column: 42, scope: !11922)
!11941 = !DILocation(line: 1098, column: 19, scope: !11922)
!11942 = !DILocation(line: 1101, column: 2, scope: !11922)
!11943 = !DILocation(line: 1101, column: 6, scope: !11922)
!11944 = !DILocation(line: 1101, column: 18, scope: !11922)
!11945 = !DILocation(line: 1104, column: 28, scope: !11922)
!11946 = !DILocation(line: 1104, column: 32, scope: !11922)
!11947 = !DILocation(line: 1104, column: 22, scope: !11922)
!11948 = !DILocation(line: 1104, column: 43, scope: !11949)
!11949 = !DILexicalBlockFile(scope: !11922, file: !512, discriminator: 1)
!11950 = !DILocation(line: 1104, column: 41, scope: !11922)
!11951 = !DILocation(line: 1104, column: 16, scope: !11952)
!11952 = !DILexicalBlockFile(scope: !11922, file: !512, discriminator: 2)
!11953 = !DILocation(line: 1104, column: 2, scope: !11922)
!11954 = !DILocation(line: 1104, column: 6, scope: !11922)
!11955 = !DILocation(line: 1104, column: 14, scope: !11922)
!11956 = !DILocation(line: 1107, column: 2, scope: !11922)
!11957 = !DILocation(line: 1107, column: 6, scope: !11922)
!11958 = !DILocation(line: 1107, column: 18, scope: !11922)
!11959 = !DILocation(line: 1122, column: 12, scope: !11922)
!11960 = !DILocation(line: 1122, column: 16, scope: !11922)
!11961 = !DILocation(line: 1122, column: 2, scope: !11922)
!11962 = !DILocation(line: 1122, column: 6, scope: !11922)
!11963 = !DILocation(line: 1122, column: 10, scope: !11922)
!11964 = !DILocation(line: 1128, column: 29, scope: !11922)
!11965 = !DILocation(line: 1128, column: 37, scope: !11922)
!11966 = !DILocation(line: 1128, column: 45, scope: !11922)
!11967 = !DILocation(line: 1128, column: 51, scope: !11922)
!11968 = !DILocation(line: 1128, column: 88, scope: !11922)
!11969 = !DILocation(line: 1128, column: 2, scope: !11922)
!11970 = !DILocation(line: 1129, column: 9, scope: !11922)
!11971 = !DILocation(line: 1129, column: 13, scope: !11922)
!11972 = !DILocation(line: 1129, column: 2, scope: !11922)
!11973 = !DILocation(line: 1130, column: 1, scope: !11922)
!11974 = distinct !DISubprogram(name: "vrrp_build_vrrp_v3", scope: !512, file: !512, line: 1194, type: !11901, isLocal: true, isDefinition: true, scopeLine: 1195, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!11975 = !DILocalVariable(name: "vrrp", arg: 1, scope: !11974, file: !512, line: 1194, type: !537)
!11976 = !DILocation(line: 1194, column: 28, scope: !11974)
!11977 = !DILocalVariable(name: "buffer", arg: 2, scope: !11974, file: !512, line: 1194, type: !230)
!11978 = !DILocation(line: 1194, column: 40, scope: !11974)
!11979 = !DILocalVariable(name: "ip", arg: 3, scope: !11974, file: !512, line: 1194, type: !184)
!11980 = !DILocation(line: 1194, column: 62, scope: !11974)
!11981 = !DILocalVariable(name: "i", scope: !11974, file: !512, line: 1196, type: !300)
!11982 = !DILocation(line: 1196, column: 6, scope: !11974)
!11983 = !DILocalVariable(name: "hd", scope: !11974, file: !512, line: 1197, type: !206)
!11984 = !DILocation(line: 1197, column: 13, scope: !11974)
!11985 = !DILocation(line: 1197, column: 32, scope: !11974)
!11986 = !DILocation(line: 1197, column: 18, scope: !11974)
!11987 = !DILocalVariable(name: "iparr", scope: !11974, file: !512, line: 1198, type: !507)
!11988 = !DILocation(line: 1198, column: 18, scope: !11974)
!11989 = !DILocalVariable(name: "ip6arr", scope: !11974, file: !512, line: 1199, type: !508)
!11990 = !DILocation(line: 1199, column: 19, scope: !11974)
!11991 = !DILocalVariable(name: "e", scope: !11974, file: !512, line: 1200, type: !984)
!11992 = !DILocation(line: 1200, column: 10, scope: !11974)
!11993 = !DILocalVariable(name: "ip_addr", scope: !11974, file: !512, line: 1201, type: !311)
!11994 = !DILocation(line: 1201, column: 16, scope: !11974)
!11995 = !DILocalVariable(name: "ipv4_phdr", scope: !11974, file: !512, line: 1202, type: !10001)
!11996 = !DILocation(line: 1202, column: 14, scope: !11974)
!11997 = !DILocation(line: 1205, column: 2, scope: !11974)
!11998 = !DILocation(line: 1205, column: 6, scope: !11974)
!11999 = !DILocation(line: 1205, column: 16, scope: !11974)
!12000 = !DILocation(line: 1206, column: 13, scope: !11974)
!12001 = !DILocation(line: 1206, column: 19, scope: !11974)
!12002 = !DILocation(line: 1206, column: 2, scope: !11974)
!12003 = !DILocation(line: 1206, column: 6, scope: !11974)
!12004 = !DILocation(line: 1206, column: 11, scope: !11974)
!12005 = !DILocation(line: 1207, column: 17, scope: !11974)
!12006 = !DILocation(line: 1207, column: 23, scope: !11974)
!12007 = !DILocation(line: 1207, column: 2, scope: !11974)
!12008 = !DILocation(line: 1207, column: 6, scope: !11974)
!12009 = !DILocation(line: 1207, column: 15, scope: !11974)
!12010 = !DILocation(line: 1208, column: 28, scope: !11974)
!12011 = !DILocation(line: 1208, column: 34, scope: !11974)
!12012 = !DILocation(line: 1208, column: 39, scope: !11974)
!12013 = !DILocation(line: 1208, column: 25, scope: !11974)
!12014 = !DILocation(line: 1208, column: 30, scope: !12015)
!12015 = !DILexicalBlockFile(scope: !11974, file: !512, discriminator: 1)
!12016 = !DILocation(line: 1208, column: 36, scope: !12015)
!12017 = !DILocation(line: 1208, column: 42, scope: !12015)
!12018 = !DILocation(line: 1208, column: 47, scope: !12015)
!12019 = !DILocation(line: 1208, column: 25, scope: !12015)
!12020 = !DILocation(line: 1208, column: 29, scope: !12021)
!12021 = !DILexicalBlockFile(scope: !11974, file: !512, discriminator: 2)
!12022 = !DILocation(line: 1208, column: 35, scope: !12021)
!12023 = !DILocation(line: 1208, column: 41, scope: !12021)
!12024 = !DILocation(line: 1208, column: 46, scope: !12021)
!12025 = !DILocation(line: 1208, column: 24, scope: !12021)
!12026 = !DILocation(line: 1208, column: 33, scope: !12027)
!12027 = !DILexicalBlockFile(scope: !11974, file: !512, discriminator: 3)
!12028 = !DILocation(line: 1208, column: 39, scope: !12027)
!12029 = !DILocation(line: 1208, column: 45, scope: !12027)
!12030 = !DILocation(line: 1208, column: 24, scope: !12027)
!12031 = !DILocation(line: 1208, column: 24, scope: !12032)
!12032 = !DILexicalBlockFile(scope: !11974, file: !512, discriminator: 4)
!12033 = !DILocation(line: 1208, column: 24, scope: !12034)
!12034 = !DILexicalBlockFile(scope: !11974, file: !512, discriminator: 5)
!12035 = !DILocation(line: 1208, column: 14, scope: !12034)
!12036 = !DILocation(line: 1208, column: 2, scope: !12034)
!12037 = !DILocation(line: 1208, column: 6, scope: !12034)
!12038 = !DILocation(line: 1208, column: 12, scope: !12034)
!12039 = !DILocation(line: 1209, column: 28, scope: !11974)
!12040 = !DILocation(line: 1209, column: 34, scope: !11974)
!12041 = !DILocation(line: 1209, column: 44, scope: !11974)
!12042 = !DILocation(line: 1209, column: 54, scope: !11974)
!12043 = !DILocation(line: 1209, column: 27, scope: !11974)
!12044 = !DILocation(line: 1209, column: 21, scope: !11974)
!12045 = !DILocation(line: 1209, column: 2, scope: !11974)
!12046 = !DILocation(line: 1209, column: 6, scope: !11974)
!12047 = !DILocation(line: 1209, column: 9, scope: !11974)
!12048 = !DILocation(line: 1209, column: 19, scope: !11974)
!12049 = !DILocation(line: 1213, column: 2, scope: !11974)
!12050 = !DILocation(line: 1213, column: 6, scope: !11974)
!12051 = !DILocation(line: 1213, column: 13, scope: !11974)
!12052 = !DILocation(line: 1216, column: 6, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !11974, file: !512, line: 1216, column: 6)
!12054 = !DILocation(line: 1216, column: 12, scope: !12053)
!12055 = !DILocation(line: 1216, column: 19, scope: !12053)
!12056 = !DILocation(line: 1216, column: 6, scope: !11974)
!12057 = !DILocation(line: 1218, column: 40, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12053, file: !512, line: 1216, column: 30)
!12059 = !DILocation(line: 1218, column: 31, scope: !12058)
!12060 = !DILocation(line: 1218, column: 43, scope: !12058)
!12061 = !DILocation(line: 1218, column: 11, scope: !12058)
!12062 = !DILocation(line: 1218, column: 9, scope: !12058)
!12063 = !DILocation(line: 1219, column: 16, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12058, file: !512, line: 1219, column: 3)
!12065 = !DILocation(line: 1219, column: 22, scope: !12064)
!12066 = !DILocation(line: 1219, column: 15, scope: !12064)
!12067 = !DILocation(line: 1219, column: 32, scope: !12068)
!12068 = !DILexicalBlockFile(scope: !12064, file: !512, discriminator: 1)
!12069 = !DILocation(line: 1219, column: 38, scope: !12068)
!12070 = !DILocation(line: 1219, column: 31, scope: !12068)
!12071 = !DILocation(line: 1219, column: 30, scope: !12068)
!12072 = !DILocation(line: 1219, column: 30, scope: !12073)
!12073 = !DILexicalBlockFile(scope: !12064, file: !512, discriminator: 2)
!12074 = !DILocation(line: 1219, column: 5, scope: !12075)
!12075 = !DILexicalBlockFile(scope: !12064, file: !512, discriminator: 3)
!12076 = !DILocation(line: 1219, column: 11, scope: !12075)
!12077 = !DILocation(line: 1219, column: 17, scope: !12075)
!12078 = !DILocation(line: 1219, column: 30, scope: !12075)
!12079 = !DILocation(line: 1219, column: 30, scope: !12080)
!12080 = !DILexicalBlockFile(scope: !12064, file: !512, discriminator: 4)
!12081 = !DILocation(line: 1219, column: 15, scope: !12080)
!12082 = !DILocation(line: 1219, column: 15, scope: !12083)
!12083 = !DILexicalBlockFile(scope: !12064, file: !512, discriminator: 5)
!12084 = !DILocation(line: 1219, column: 15, scope: !12085)
!12085 = !DILexicalBlockFile(scope: !12064, file: !512, discriminator: 6)
!12086 = !DILocation(line: 1219, column: 12, scope: !12085)
!12087 = !DILocation(line: 1219, column: 8, scope: !12085)
!12088 = !DILocation(line: 1219, column: 6, scope: !12089)
!12089 = !DILexicalBlockFile(scope: !12090, file: !512, discriminator: 7)
!12090 = distinct !DILexicalBlock(scope: !12064, file: !512, line: 1219, column: 3)
!12091 = !DILocation(line: 1219, column: 5, scope: !12089)
!12092 = !DILocation(line: 1219, column: 9, scope: !12089)
!12093 = !DILocation(line: 1219, column: 27, scope: !12094)
!12094 = !DILexicalBlockFile(scope: !12090, file: !512, discriminator: 8)
!12095 = !DILocation(line: 1219, column: 31, scope: !12094)
!12096 = !DILocation(line: 1219, column: 25, scope: !12094)
!12097 = !DILocation(line: 1219, column: 23, scope: !12094)
!12098 = !DILocation(line: 1219, column: 3, scope: !12099)
!12099 = !DILexicalBlockFile(scope: !12064, file: !512, discriminator: 9)
!12100 = !DILocation(line: 1220, column: 11, scope: !12090)
!12101 = !DILocation(line: 1220, column: 4, scope: !12090)
!12102 = !DILocation(line: 1220, column: 17, scope: !12090)
!12103 = !DILocation(line: 1220, column: 26, scope: !12090)
!12104 = !DILocation(line: 1220, column: 28, scope: !12090)
!12105 = !DILocation(line: 1220, column: 32, scope: !12090)
!12106 = !DILocation(line: 1219, column: 50, scope: !12107)
!12107 = !DILexicalBlockFile(scope: !12090, file: !512, discriminator: 10)
!12108 = !DILocation(line: 1219, column: 54, scope: !12107)
!12109 = !DILocation(line: 1219, column: 47, scope: !12107)
!12110 = !DILocation(line: 1219, column: 3, scope: !12107)
!12111 = distinct !{!12111, !12112}
!12112 = !DILocation(line: 1219, column: 3, scope: !12058)
!12113 = !DILocation(line: 1223, column: 22, scope: !12058)
!12114 = !DILocation(line: 1223, column: 29, scope: !12058)
!12115 = !DILocation(line: 1223, column: 35, scope: !12058)
!12116 = !DILocation(line: 1223, column: 20, scope: !12058)
!12117 = !DILocation(line: 1223, column: 74, scope: !12118)
!12118 = !DILexicalBlockFile(scope: !12058, file: !512, discriminator: 1)
!12119 = !DILocation(line: 1223, column: 81, scope: !12118)
!12120 = !DILocation(line: 1223, column: 89, scope: !12118)
!12121 = !DILocation(line: 1223, column: 98, scope: !12118)
!12122 = !DILocation(line: 1223, column: 20, scope: !12118)
!12123 = !DILocation(line: 1223, column: 110, scope: !12124)
!12124 = !DILexicalBlockFile(scope: !12058, file: !512, discriminator: 2)
!12125 = !DILocation(line: 1223, column: 117, scope: !12124)
!12126 = !DILocation(line: 1223, column: 123, scope: !12124)
!12127 = !DILocation(line: 1223, column: 132, scope: !12124)
!12128 = !DILocation(line: 1223, column: 20, scope: !12124)
!12129 = !DILocation(line: 1223, column: 20, scope: !12130)
!12130 = !DILexicalBlockFile(scope: !12058, file: !512, discriminator: 3)
!12131 = !DILocation(line: 1223, column: 13, scope: !12130)
!12132 = !DILocation(line: 1223, column: 17, scope: !12130)
!12133 = !DILocation(line: 1225, column: 7, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12058, file: !512, line: 1225, column: 7)
!12135 = !DILocation(line: 1225, column: 13, scope: !12134)
!12136 = !DILocation(line: 1225, column: 35, scope: !12134)
!12137 = !DILocation(line: 1225, column: 7, scope: !12058)
!12138 = !DILocation(line: 1226, column: 20, scope: !12134)
!12139 = !DILocation(line: 1226, column: 33, scope: !12134)
!12140 = !DILocation(line: 1226, column: 51, scope: !12134)
!12141 = !DILocation(line: 1226, column: 60, scope: !12134)
!12142 = !DILocation(line: 1226, column: 14, scope: !12134)
!12143 = !DILocation(line: 1226, column: 18, scope: !12134)
!12144 = !DILocation(line: 1226, column: 4, scope: !12134)
!12145 = !DILocation(line: 1229, column: 20, scope: !12134)
!12146 = !DILocation(line: 1229, column: 24, scope: !12134)
!12147 = !DILocation(line: 1229, column: 14, scope: !12134)
!12148 = !DILocation(line: 1229, column: 18, scope: !12134)
!12149 = !DILocation(line: 1230, column: 13, scope: !12058)
!12150 = !DILocation(line: 1230, column: 18, scope: !12058)
!12151 = !DILocation(line: 1231, column: 13, scope: !12058)
!12152 = !DILocation(line: 1231, column: 19, scope: !12058)
!12153 = !DILocation(line: 1232, column: 38, scope: !12058)
!12154 = !DILocation(line: 1232, column: 25, scope: !12058)
!12155 = !DILocation(line: 1232, column: 19, scope: !12118)
!12156 = !DILocation(line: 1232, column: 13, scope: !12058)
!12157 = !DILocation(line: 1232, column: 17, scope: !12058)
!12158 = !DILocation(line: 1235, column: 11, scope: !12058)
!12159 = !DILocation(line: 1235, column: 58, scope: !12058)
!12160 = !DILocation(line: 1235, column: 64, scope: !12058)
!12161 = !DILocation(line: 1235, column: 3, scope: !12058)
!12162 = !DILocation(line: 1236, column: 37, scope: !12058)
!12163 = !DILocation(line: 1236, column: 24, scope: !12058)
!12164 = !DILocation(line: 1236, column: 54, scope: !12058)
!12165 = !DILocation(line: 1236, column: 41, scope: !12058)
!12166 = !DILocation(line: 1236, column: 61, scope: !12058)
!12167 = !DILocation(line: 1236, column: 67, scope: !12058)
!12168 = !DILocation(line: 1236, column: 16, scope: !12118)
!12169 = !DILocation(line: 1236, column: 3, scope: !12058)
!12170 = !DILocation(line: 1236, column: 7, scope: !12058)
!12171 = !DILocation(line: 1236, column: 14, scope: !12058)
!12172 = !DILocation(line: 1237, column: 2, scope: !12058)
!12173 = !DILocation(line: 1237, column: 13, scope: !12174)
!12174 = !DILexicalBlockFile(scope: !12175, file: !512, discriminator: 1)
!12175 = distinct !DILexicalBlock(scope: !12053, file: !512, line: 1237, column: 13)
!12176 = !DILocation(line: 1237, column: 19, scope: !12174)
!12177 = !DILocation(line: 1237, column: 26, scope: !12174)
!12178 = !DILocation(line: 1238, column: 41, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12175, file: !512, line: 1237, column: 38)
!12180 = !DILocation(line: 1238, column: 32, scope: !12179)
!12181 = !DILocation(line: 1238, column: 44, scope: !12179)
!12182 = !DILocation(line: 1238, column: 12, scope: !12179)
!12183 = !DILocation(line: 1238, column: 10, scope: !12179)
!12184 = !DILocation(line: 1239, column: 10, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !12179, file: !512, line: 1239, column: 7)
!12186 = !DILocation(line: 1239, column: 16, scope: !12185)
!12187 = !DILocation(line: 1239, column: 21, scope: !12185)
!12188 = !DILocation(line: 1239, column: 7, scope: !12185)
!12189 = !DILocation(line: 1239, column: 12, scope: !12190)
!12190 = !DILexicalBlockFile(scope: !12185, file: !512, discriminator: 1)
!12191 = !DILocation(line: 1239, column: 18, scope: !12190)
!12192 = !DILocation(line: 1239, column: 24, scope: !12190)
!12193 = !DILocation(line: 1239, column: 29, scope: !12190)
!12194 = !DILocation(line: 1239, column: 7, scope: !12190)
!12195 = !DILocation(line: 1239, column: 11, scope: !12196)
!12196 = !DILexicalBlockFile(scope: !12185, file: !512, discriminator: 2)
!12197 = !DILocation(line: 1239, column: 17, scope: !12196)
!12198 = !DILocation(line: 1239, column: 23, scope: !12196)
!12199 = !DILocation(line: 1239, column: 28, scope: !12196)
!12200 = !DILocation(line: 1239, column: 7, scope: !12196)
!12201 = !DILocation(line: 1240, column: 16, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12203, file: !512, line: 1240, column: 4)
!12203 = distinct !DILexicalBlock(scope: !12185, file: !512, line: 1239, column: 11)
!12204 = !DILocation(line: 1240, column: 22, scope: !12202)
!12205 = !DILocation(line: 1240, column: 15, scope: !12202)
!12206 = !DILocation(line: 1240, column: 14, scope: !12202)
!12207 = !DILocation(line: 1240, column: 14, scope: !12208)
!12208 = !DILexicalBlockFile(scope: !12202, file: !512, discriminator: 1)
!12209 = !DILocation(line: 1240, column: 15, scope: !12210)
!12210 = !DILexicalBlockFile(scope: !12202, file: !512, discriminator: 2)
!12211 = !DILocation(line: 1240, column: 21, scope: !12210)
!12212 = !DILocation(line: 1240, column: 27, scope: !12210)
!12213 = !DILocation(line: 1240, column: 14, scope: !12210)
!12214 = !DILocation(line: 1240, column: 14, scope: !12215)
!12215 = !DILexicalBlockFile(scope: !12202, file: !512, discriminator: 3)
!12216 = !DILocation(line: 1240, column: 11, scope: !12215)
!12217 = !DILocation(line: 1240, column: 9, scope: !12215)
!12218 = !DILocation(line: 1240, column: 34, scope: !12219)
!12219 = !DILexicalBlockFile(scope: !12220, file: !512, discriminator: 4)
!12220 = distinct !DILexicalBlock(scope: !12202, file: !512, line: 1240, column: 4)
!12221 = !DILocation(line: 1240, column: 4, scope: !12219)
!12222 = !DILocation(line: 1241, column: 17, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12220, file: !512, line: 1240, column: 56)
!12224 = !DILocation(line: 1241, column: 21, scope: !12223)
!12225 = !DILocation(line: 1241, column: 15, scope: !12223)
!12226 = !DILocation(line: 1241, column: 13, scope: !12223)
!12227 = !DILocation(line: 1242, column: 13, scope: !12223)
!12228 = !DILocation(line: 1242, column: 5, scope: !12223)
!12229 = !DILocation(line: 1242, column: 19, scope: !12223)
!12230 = !DILocation(line: 1242, column: 28, scope: !12223)
!12231 = !DILocation(line: 1242, column: 30, scope: !12223)
!12232 = !DILocation(line: 1243, column: 4, scope: !12223)
!12233 = !DILocation(line: 1240, column: 45, scope: !12234)
!12234 = !DILexicalBlockFile(scope: !12220, file: !512, discriminator: 5)
!12235 = !DILocation(line: 1240, column: 49, scope: !12234)
!12236 = !DILocation(line: 1240, column: 42, scope: !12234)
!12237 = !DILocation(line: 1240, column: 4, scope: !12234)
!12238 = distinct !{!12238, !12239}
!12239 = !DILocation(line: 1240, column: 4, scope: !12203)
!12240 = !DILocation(line: 1244, column: 3, scope: !12203)
!12241 = !DILocation(line: 1245, column: 2, scope: !12179)
!12242 = !DILocation(line: 1246, column: 1, scope: !11974)
!12243 = distinct !DISubprogram(name: "vrrp_build_vrrp_v2", scope: !512, file: !512, line: 1135, type: !11778, isLocal: true, isDefinition: true, scopeLine: 1136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!12244 = !DILocalVariable(name: "vrrp", arg: 1, scope: !12243, file: !512, line: 1135, type: !537)
!12245 = !DILocation(line: 1135, column: 28, scope: !12243)
!12246 = !DILocalVariable(name: "buffer", arg: 2, scope: !12243, file: !512, line: 1135, type: !230)
!12247 = !DILocation(line: 1135, column: 40, scope: !12243)
!12248 = !DILocalVariable(name: "i", scope: !12243, file: !512, line: 1137, type: !300)
!12249 = !DILocation(line: 1137, column: 6, scope: !12243)
!12250 = !DILocalVariable(name: "hd", scope: !12243, file: !512, line: 1138, type: !206)
!12251 = !DILocation(line: 1138, column: 13, scope: !12243)
!12252 = !DILocation(line: 1138, column: 32, scope: !12243)
!12253 = !DILocation(line: 1138, column: 18, scope: !12243)
!12254 = !DILocalVariable(name: "iparr", scope: !12243, file: !512, line: 1139, type: !507)
!12255 = !DILocation(line: 1139, column: 18, scope: !12243)
!12256 = !DILocalVariable(name: "ip6arr", scope: !12243, file: !512, line: 1140, type: !508)
!12257 = !DILocation(line: 1140, column: 19, scope: !12243)
!12258 = !DILocalVariable(name: "e", scope: !12243, file: !512, line: 1141, type: !984)
!12259 = !DILocation(line: 1141, column: 10, scope: !12243)
!12260 = !DILocalVariable(name: "ip_addr", scope: !12243, file: !512, line: 1142, type: !311)
!12261 = !DILocation(line: 1142, column: 16, scope: !12243)
!12262 = !DILocation(line: 1145, column: 2, scope: !12243)
!12263 = !DILocation(line: 1145, column: 6, scope: !12243)
!12264 = !DILocation(line: 1145, column: 16, scope: !12243)
!12265 = !DILocation(line: 1146, column: 13, scope: !12243)
!12266 = !DILocation(line: 1146, column: 19, scope: !12243)
!12267 = !DILocation(line: 1146, column: 2, scope: !12243)
!12268 = !DILocation(line: 1146, column: 6, scope: !12243)
!12269 = !DILocation(line: 1146, column: 11, scope: !12243)
!12270 = !DILocation(line: 1147, column: 17, scope: !12243)
!12271 = !DILocation(line: 1147, column: 23, scope: !12243)
!12272 = !DILocation(line: 1147, column: 2, scope: !12243)
!12273 = !DILocation(line: 1147, column: 6, scope: !12243)
!12274 = !DILocation(line: 1147, column: 15, scope: !12243)
!12275 = !DILocation(line: 1148, column: 28, scope: !12243)
!12276 = !DILocation(line: 1148, column: 34, scope: !12243)
!12277 = !DILocation(line: 1148, column: 39, scope: !12243)
!12278 = !DILocation(line: 1148, column: 25, scope: !12243)
!12279 = !DILocation(line: 1148, column: 30, scope: !12280)
!12280 = !DILexicalBlockFile(scope: !12243, file: !512, discriminator: 1)
!12281 = !DILocation(line: 1148, column: 36, scope: !12280)
!12282 = !DILocation(line: 1148, column: 42, scope: !12280)
!12283 = !DILocation(line: 1148, column: 47, scope: !12280)
!12284 = !DILocation(line: 1148, column: 25, scope: !12280)
!12285 = !DILocation(line: 1148, column: 29, scope: !12286)
!12286 = !DILexicalBlockFile(scope: !12243, file: !512, discriminator: 2)
!12287 = !DILocation(line: 1148, column: 35, scope: !12286)
!12288 = !DILocation(line: 1148, column: 41, scope: !12286)
!12289 = !DILocation(line: 1148, column: 46, scope: !12286)
!12290 = !DILocation(line: 1148, column: 24, scope: !12286)
!12291 = !DILocation(line: 1148, column: 42, scope: !12292)
!12292 = !DILexicalBlockFile(scope: !12243, file: !512, discriminator: 3)
!12293 = !DILocation(line: 1148, column: 48, scope: !12292)
!12294 = !DILocation(line: 1148, column: 54, scope: !12292)
!12295 = !DILocation(line: 1148, column: 31, scope: !12292)
!12296 = !DILocation(line: 1148, column: 24, scope: !12292)
!12297 = !DILocation(line: 1148, column: 24, scope: !12298)
!12298 = !DILexicalBlockFile(scope: !12243, file: !512, discriminator: 4)
!12299 = !DILocation(line: 1148, column: 24, scope: !12300)
!12300 = !DILexicalBlockFile(scope: !12243, file: !512, discriminator: 5)
!12301 = !DILocation(line: 1148, column: 14, scope: !12300)
!12302 = !DILocation(line: 1148, column: 2, scope: !12300)
!12303 = !DILocation(line: 1148, column: 6, scope: !12300)
!12304 = !DILocation(line: 1148, column: 12, scope: !12300)
!12305 = !DILocation(line: 1150, column: 21, scope: !12243)
!12306 = !DILocation(line: 1150, column: 27, scope: !12243)
!12307 = !DILocation(line: 1150, column: 2, scope: !12243)
!12308 = !DILocation(line: 1150, column: 6, scope: !12243)
!12309 = !DILocation(line: 1150, column: 9, scope: !12243)
!12310 = !DILocation(line: 1150, column: 19, scope: !12243)
!12311 = !DILocation(line: 1154, column: 31, scope: !12243)
!12312 = !DILocation(line: 1154, column: 37, scope: !12243)
!12313 = !DILocation(line: 1154, column: 47, scope: !12243)
!12314 = !DILocation(line: 1154, column: 21, scope: !12243)
!12315 = !DILocation(line: 1154, column: 2, scope: !12243)
!12316 = !DILocation(line: 1154, column: 6, scope: !12243)
!12317 = !DILocation(line: 1154, column: 9, scope: !12243)
!12318 = !DILocation(line: 1154, column: 19, scope: !12243)
!12319 = !DILocation(line: 1157, column: 6, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12243, file: !512, line: 1157, column: 6)
!12321 = !DILocation(line: 1157, column: 12, scope: !12320)
!12322 = !DILocation(line: 1157, column: 19, scope: !12320)
!12323 = !DILocation(line: 1157, column: 6, scope: !12243)
!12324 = !DILocation(line: 1159, column: 40, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12320, file: !512, line: 1157, column: 30)
!12326 = !DILocation(line: 1159, column: 31, scope: !12325)
!12327 = !DILocation(line: 1159, column: 43, scope: !12325)
!12328 = !DILocation(line: 1159, column: 11, scope: !12325)
!12329 = !DILocation(line: 1159, column: 9, scope: !12325)
!12330 = !DILocation(line: 1160, column: 10, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12325, file: !512, line: 1160, column: 7)
!12332 = !DILocation(line: 1160, column: 16, scope: !12331)
!12333 = !DILocation(line: 1160, column: 21, scope: !12331)
!12334 = !DILocation(line: 1160, column: 7, scope: !12331)
!12335 = !DILocation(line: 1160, column: 12, scope: !12336)
!12336 = !DILexicalBlockFile(scope: !12331, file: !512, discriminator: 1)
!12337 = !DILocation(line: 1160, column: 18, scope: !12336)
!12338 = !DILocation(line: 1160, column: 24, scope: !12336)
!12339 = !DILocation(line: 1160, column: 29, scope: !12336)
!12340 = !DILocation(line: 1160, column: 7, scope: !12336)
!12341 = !DILocation(line: 1160, column: 11, scope: !12342)
!12342 = !DILexicalBlockFile(scope: !12331, file: !512, discriminator: 2)
!12343 = !DILocation(line: 1160, column: 17, scope: !12342)
!12344 = !DILocation(line: 1160, column: 23, scope: !12342)
!12345 = !DILocation(line: 1160, column: 28, scope: !12342)
!12346 = !DILocation(line: 1160, column: 7, scope: !12342)
!12347 = !DILocation(line: 1161, column: 16, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !512, line: 1161, column: 4)
!12349 = distinct !DILexicalBlock(scope: !12331, file: !512, line: 1160, column: 11)
!12350 = !DILocation(line: 1161, column: 22, scope: !12348)
!12351 = !DILocation(line: 1161, column: 15, scope: !12348)
!12352 = !DILocation(line: 1161, column: 14, scope: !12348)
!12353 = !DILocation(line: 1161, column: 14, scope: !12354)
!12354 = !DILexicalBlockFile(scope: !12348, file: !512, discriminator: 1)
!12355 = !DILocation(line: 1161, column: 15, scope: !12356)
!12356 = !DILexicalBlockFile(scope: !12348, file: !512, discriminator: 2)
!12357 = !DILocation(line: 1161, column: 21, scope: !12356)
!12358 = !DILocation(line: 1161, column: 27, scope: !12356)
!12359 = !DILocation(line: 1161, column: 14, scope: !12356)
!12360 = !DILocation(line: 1161, column: 14, scope: !12361)
!12361 = !DILexicalBlockFile(scope: !12348, file: !512, discriminator: 3)
!12362 = !DILocation(line: 1161, column: 11, scope: !12361)
!12363 = !DILocation(line: 1161, column: 9, scope: !12361)
!12364 = !DILocation(line: 1161, column: 34, scope: !12365)
!12365 = !DILexicalBlockFile(scope: !12366, file: !512, discriminator: 4)
!12366 = distinct !DILexicalBlock(scope: !12348, file: !512, line: 1161, column: 4)
!12367 = !DILocation(line: 1161, column: 4, scope: !12365)
!12368 = !DILocation(line: 1162, column: 17, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12366, file: !512, line: 1161, column: 56)
!12370 = !DILocation(line: 1162, column: 21, scope: !12369)
!12371 = !DILocation(line: 1162, column: 15, scope: !12369)
!12372 = !DILocation(line: 1162, column: 13, scope: !12369)
!12373 = !DILocation(line: 1163, column: 12, scope: !12369)
!12374 = !DILocation(line: 1163, column: 5, scope: !12369)
!12375 = !DILocation(line: 1163, column: 18, scope: !12369)
!12376 = !DILocation(line: 1163, column: 27, scope: !12369)
!12377 = !DILocation(line: 1163, column: 29, scope: !12369)
!12378 = !DILocation(line: 1163, column: 33, scope: !12369)
!12379 = !DILocation(line: 1164, column: 4, scope: !12369)
!12380 = !DILocation(line: 1161, column: 45, scope: !12381)
!12381 = !DILexicalBlockFile(scope: !12366, file: !512, discriminator: 5)
!12382 = !DILocation(line: 1161, column: 49, scope: !12381)
!12383 = !DILocation(line: 1161, column: 42, scope: !12381)
!12384 = !DILocation(line: 1161, column: 4, scope: !12381)
!12385 = distinct !{!12385, !12386}
!12386 = !DILocation(line: 1161, column: 4, scope: !12349)
!12387 = !DILocation(line: 1165, column: 3, scope: !12349)
!12388 = !DILocation(line: 1169, column: 7, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12325, file: !512, line: 1169, column: 7)
!12390 = !DILocation(line: 1169, column: 13, scope: !12389)
!12391 = !DILocation(line: 1169, column: 23, scope: !12389)
!12392 = !DILocation(line: 1169, column: 7, scope: !12325)
!12393 = !DILocalVariable(name: "vip_count", scope: !12394, file: !512, line: 1170, type: !189)
!12394 = distinct !DILexicalBlock(scope: !12389, file: !512, line: 1169, column: 29)
!12395 = !DILocation(line: 1170, column: 13, scope: !12394)
!12396 = !DILocation(line: 1170, column: 29, scope: !12394)
!12397 = !DILocation(line: 1170, column: 35, scope: !12394)
!12398 = !DILocation(line: 1170, column: 40, scope: !12394)
!12399 = !DILocation(line: 1170, column: 26, scope: !12394)
!12400 = !DILocation(line: 1170, column: 31, scope: !12401)
!12401 = !DILexicalBlockFile(scope: !12394, file: !512, discriminator: 1)
!12402 = !DILocation(line: 1170, column: 37, scope: !12401)
!12403 = !DILocation(line: 1170, column: 43, scope: !12401)
!12404 = !DILocation(line: 1170, column: 48, scope: !12401)
!12405 = !DILocation(line: 1170, column: 26, scope: !12401)
!12406 = !DILocation(line: 1170, column: 30, scope: !12407)
!12407 = !DILexicalBlockFile(scope: !12394, file: !512, discriminator: 2)
!12408 = !DILocation(line: 1170, column: 36, scope: !12407)
!12409 = !DILocation(line: 1170, column: 42, scope: !12407)
!12410 = !DILocation(line: 1170, column: 47, scope: !12407)
!12411 = !DILocation(line: 1170, column: 25, scope: !12407)
!12412 = !DILocation(line: 1170, column: 34, scope: !12413)
!12413 = !DILexicalBlockFile(scope: !12394, file: !512, discriminator: 3)
!12414 = !DILocation(line: 1170, column: 40, scope: !12413)
!12415 = !DILocation(line: 1170, column: 46, scope: !12413)
!12416 = !DILocation(line: 1170, column: 25, scope: !12413)
!12417 = !DILocation(line: 1170, column: 25, scope: !12418)
!12418 = !DILexicalBlockFile(scope: !12394, file: !512, discriminator: 4)
!12419 = !DILocation(line: 1170, column: 25, scope: !12420)
!12420 = !DILexicalBlockFile(scope: !12394, file: !512, discriminator: 5)
!12421 = !DILocation(line: 1170, column: 13, scope: !12420)
!12422 = !DILocalVariable(name: "pw", scope: !12394, file: !512, line: 1171, type: !230)
!12423 = !DILocation(line: 1171, column: 10, scope: !12394)
!12424 = !DILocation(line: 1171, column: 24, scope: !12394)
!12425 = !DILocation(line: 1171, column: 15, scope: !12394)
!12426 = !DILocation(line: 1171, column: 27, scope: !12394)
!12427 = !DILocation(line: 1171, column: 44, scope: !12394)
!12428 = !DILocation(line: 1171, column: 54, scope: !12394)
!12429 = !DILocation(line: 1171, column: 42, scope: !12394)
!12430 = !DILocation(line: 1172, column: 11, scope: !12394)
!12431 = !DILocation(line: 1172, column: 15, scope: !12394)
!12432 = !DILocation(line: 1172, column: 21, scope: !12394)
!12433 = !DILocation(line: 1172, column: 4, scope: !12394)
!12434 = !DILocation(line: 1173, column: 3, scope: !12394)
!12435 = !DILocation(line: 1177, column: 3, scope: !12325)
!12436 = !DILocation(line: 1177, column: 7, scope: !12325)
!12437 = !DILocation(line: 1177, column: 14, scope: !12325)
!12438 = !DILocation(line: 1178, column: 36, scope: !12325)
!12439 = !DILocation(line: 1178, column: 24, scope: !12325)
!12440 = !DILocation(line: 1178, column: 53, scope: !12325)
!12441 = !DILocation(line: 1178, column: 40, scope: !12325)
!12442 = !DILocation(line: 1178, column: 16, scope: !12443)
!12443 = !DILexicalBlockFile(scope: !12325, file: !512, discriminator: 1)
!12444 = !DILocation(line: 1178, column: 3, scope: !12325)
!12445 = !DILocation(line: 1178, column: 7, scope: !12325)
!12446 = !DILocation(line: 1178, column: 14, scope: !12325)
!12447 = !DILocation(line: 1179, column: 2, scope: !12325)
!12448 = !DILocation(line: 1179, column: 13, scope: !12449)
!12449 = !DILexicalBlockFile(scope: !12450, file: !512, discriminator: 1)
!12450 = distinct !DILexicalBlock(scope: !12320, file: !512, line: 1179, column: 13)
!12451 = !DILocation(line: 1179, column: 19, scope: !12449)
!12452 = !DILocation(line: 1179, column: 26, scope: !12449)
!12453 = !DILocation(line: 1180, column: 41, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12450, file: !512, line: 1179, column: 38)
!12455 = !DILocation(line: 1180, column: 32, scope: !12454)
!12456 = !DILocation(line: 1180, column: 44, scope: !12454)
!12457 = !DILocation(line: 1180, column: 12, scope: !12454)
!12458 = !DILocation(line: 1180, column: 10, scope: !12454)
!12459 = !DILocation(line: 1181, column: 10, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12454, file: !512, line: 1181, column: 7)
!12461 = !DILocation(line: 1181, column: 16, scope: !12460)
!12462 = !DILocation(line: 1181, column: 21, scope: !12460)
!12463 = !DILocation(line: 1181, column: 7, scope: !12460)
!12464 = !DILocation(line: 1181, column: 12, scope: !12465)
!12465 = !DILexicalBlockFile(scope: !12460, file: !512, discriminator: 1)
!12466 = !DILocation(line: 1181, column: 18, scope: !12465)
!12467 = !DILocation(line: 1181, column: 24, scope: !12465)
!12468 = !DILocation(line: 1181, column: 29, scope: !12465)
!12469 = !DILocation(line: 1181, column: 7, scope: !12465)
!12470 = !DILocation(line: 1181, column: 11, scope: !12471)
!12471 = !DILexicalBlockFile(scope: !12460, file: !512, discriminator: 2)
!12472 = !DILocation(line: 1181, column: 17, scope: !12471)
!12473 = !DILocation(line: 1181, column: 23, scope: !12471)
!12474 = !DILocation(line: 1181, column: 28, scope: !12471)
!12475 = !DILocation(line: 1181, column: 7, scope: !12471)
!12476 = !DILocation(line: 1182, column: 16, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12478, file: !512, line: 1182, column: 4)
!12478 = distinct !DILexicalBlock(scope: !12460, file: !512, line: 1181, column: 11)
!12479 = !DILocation(line: 1182, column: 22, scope: !12477)
!12480 = !DILocation(line: 1182, column: 15, scope: !12477)
!12481 = !DILocation(line: 1182, column: 14, scope: !12477)
!12482 = !DILocation(line: 1182, column: 14, scope: !12483)
!12483 = !DILexicalBlockFile(scope: !12477, file: !512, discriminator: 1)
!12484 = !DILocation(line: 1182, column: 15, scope: !12485)
!12485 = !DILexicalBlockFile(scope: !12477, file: !512, discriminator: 2)
!12486 = !DILocation(line: 1182, column: 21, scope: !12485)
!12487 = !DILocation(line: 1182, column: 27, scope: !12485)
!12488 = !DILocation(line: 1182, column: 14, scope: !12485)
!12489 = !DILocation(line: 1182, column: 14, scope: !12490)
!12490 = !DILexicalBlockFile(scope: !12477, file: !512, discriminator: 3)
!12491 = !DILocation(line: 1182, column: 11, scope: !12490)
!12492 = !DILocation(line: 1182, column: 9, scope: !12490)
!12493 = !DILocation(line: 1182, column: 34, scope: !12494)
!12494 = !DILexicalBlockFile(scope: !12495, file: !512, discriminator: 4)
!12495 = distinct !DILexicalBlock(scope: !12477, file: !512, line: 1182, column: 4)
!12496 = !DILocation(line: 1182, column: 4, scope: !12494)
!12497 = !DILocation(line: 1183, column: 17, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12495, file: !512, line: 1182, column: 56)
!12499 = !DILocation(line: 1183, column: 21, scope: !12498)
!12500 = !DILocation(line: 1183, column: 15, scope: !12498)
!12501 = !DILocation(line: 1183, column: 13, scope: !12498)
!12502 = !DILocation(line: 1184, column: 13, scope: !12498)
!12503 = !DILocation(line: 1184, column: 5, scope: !12498)
!12504 = !DILocation(line: 1184, column: 19, scope: !12498)
!12505 = !DILocation(line: 1184, column: 28, scope: !12498)
!12506 = !DILocation(line: 1184, column: 30, scope: !12498)
!12507 = !DILocation(line: 1185, column: 4, scope: !12498)
!12508 = !DILocation(line: 1182, column: 45, scope: !12509)
!12509 = !DILexicalBlockFile(scope: !12495, file: !512, discriminator: 5)
!12510 = !DILocation(line: 1182, column: 49, scope: !12509)
!12511 = !DILocation(line: 1182, column: 42, scope: !12509)
!12512 = !DILocation(line: 1182, column: 4, scope: !12509)
!12513 = distinct !{!12513, !12514}
!12514 = !DILocation(line: 1182, column: 4, scope: !12478)
!12515 = !DILocation(line: 1186, column: 3, scope: !12478)
!12516 = !DILocation(line: 1188, column: 3, scope: !12454)
!12517 = !DILocation(line: 1188, column: 7, scope: !12454)
!12518 = !DILocation(line: 1188, column: 14, scope: !12454)
!12519 = !DILocation(line: 1189, column: 2, scope: !12454)
!12520 = !DILocation(line: 1190, column: 1, scope: !12243)
!12521 = distinct !DISubprogram(name: "clear_diff_vrrp_vip_list", scope: !512, file: !512, line: 3535, type: !12522, isLocal: true, isDefinition: true, scopeLine: 3536, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !526)
!12522 = !DISubroutineType(types: !12523)
!12523 = !{null, !537, !2287, !400, !400}
!12524 = !DILocalVariable(name: "vrrp", arg: 1, scope: !12521, file: !512, line: 3535, type: !537)
!12525 = !DILocation(line: 3535, column: 34, scope: !12521)
!12526 = !DILocalVariable(name: "h", arg: 2, scope: !12521, file: !512, line: 3535, type: !2287)
!12527 = !DILocation(line: 3535, column: 59, scope: !12521)
!12528 = !DILocalVariable(name: "l", arg: 3, scope: !12521, file: !512, line: 3535, type: !400)
!12529 = !DILocation(line: 3535, column: 67, scope: !12521)
!12530 = !DILocalVariable(name: "n", arg: 4, scope: !12521, file: !512, line: 3535, type: !400)
!12531 = !DILocation(line: 3535, column: 75, scope: !12521)
!12532 = !DILocation(line: 3537, column: 21, scope: !12521)
!12533 = !DILocation(line: 3537, column: 24, scope: !12521)
!12534 = !DILocation(line: 3537, column: 27, scope: !12521)
!12535 = !DILocation(line: 3537, column: 2, scope: !12521)
!12536 = !DILocation(line: 3539, column: 8, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12521, file: !512, line: 3539, column: 6)
!12538 = !DILocation(line: 3539, column: 11, scope: !12537)
!12539 = !DILocation(line: 3539, column: 5, scope: !12537)
!12540 = !DILocation(line: 3539, column: 10, scope: !12541)
!12541 = !DILexicalBlockFile(scope: !12537, file: !512, discriminator: 1)
!12542 = !DILocation(line: 3539, column: 14, scope: !12541)
!12543 = !DILocation(line: 3539, column: 19, scope: !12541)
!12544 = !DILocation(line: 3539, column: 5, scope: !12541)
!12545 = !DILocation(line: 3539, column: 9, scope: !12546)
!12546 = !DILexicalBlockFile(scope: !12537, file: !512, discriminator: 2)
!12547 = !DILocation(line: 3539, column: 13, scope: !12546)
!12548 = !DILocation(line: 3539, column: 18, scope: !12546)
!12549 = !DILocation(line: 3539, column: 6, scope: !12546)
!12550 = !DILocation(line: 3540, column: 3, scope: !12537)
!12551 = !DILocation(line: 3543, column: 6, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12521, file: !512, line: 3543, column: 6)
!12553 = !DILocation(line: 3543, column: 12, scope: !12552)
!12554 = !DILocation(line: 3543, column: 26, scope: !12552)
!12555 = !DILocation(line: 3543, column: 33, scope: !12552)
!12556 = !DILocation(line: 3543, column: 36, scope: !12557)
!12557 = !DILexicalBlockFile(scope: !12552, file: !512, discriminator: 1)
!12558 = !DILocation(line: 3543, column: 42, scope: !12557)
!12559 = !DILocation(line: 3543, column: 6, scope: !12557)
!12560 = !DILocation(line: 3544, column: 33, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12552, file: !512, line: 3543, column: 50)
!12562 = !DILocation(line: 3544, column: 36, scope: !12561)
!12563 = !DILocation(line: 3544, column: 3, scope: !12561)
!12564 = !DILocation(line: 3545, column: 3, scope: !12561)
!12565 = !DILocation(line: 3545, column: 9, scope: !12561)
!12566 = !DILocation(line: 3545, column: 27, scope: !12561)
!12567 = !DILocation(line: 3546, column: 2, scope: !12561)
!12568 = !DILocation(line: 3547, column: 3, scope: !12552)
!12569 = !DILocation(line: 3547, column: 9, scope: !12552)
!12570 = !DILocation(line: 3547, column: 27, scope: !12552)
!12571 = !DILocation(line: 3548, column: 1, scope: !12521)
