; ModuleID = './asyncsocket.o.i'
source_filename = "./asyncsocket.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.AsyncSocketVTable = type { i32 (%struct.AsyncSocket*)*, i32 (%struct.AsyncSocket*, i32, i32, i8*, i32)*, i32 (%struct.AsyncSocket*, i32, i32, i8*, i32*)*, i32 (%struct.AsyncSocket*)*, i32 (%struct.AsyncSocket*)*, i32 (%struct.AsyncSocket*, i8**)*, i32 (%struct.AsyncSocket*, i32, i8**)*, i32 (%struct.AsyncSocket*)*, i32 (%struct.AsyncSocket*, i32, void (%struct.AsyncSocket*, i8*)*)*, i8 (%struct.AsyncSocket*, %struct._SSLVerifyParam*, i8*)*, i32 (%struct.AsyncSocket*, %struct._SSLVerifyParam*, i8*, void (i8, %struct.AsyncSocket*, i8*)*, i8*)*, i8 (%struct.AsyncSocket*, i8*)*, i32 (%struct.AsyncSocket*, i8*, void (i8, %struct.AsyncSocket*, i8*)*, i8*)*, i32 (%struct.AsyncSocket*, i32)*, i32 (%struct.AsyncSocket*, i8*, i32, i8, i8*, i8*)*, i32 (%struct.AsyncSocket*, i8*, i32, i8*, i8*)*, i32 (%struct.AsyncSocket*)*, i32 (%struct.AsyncSocket*, i8*, i32, void (i8*, i32, %struct.AsyncSocket*, i8*)*, i8*)*, i32 (%struct.AsyncSocket*)*, i32 (%struct.AsyncSocket*, %struct.AsyncSocketNetworkStats*)*, i32 (%struct.AsyncSocket*)*, i32 (%struct.AsyncSocket*, i32*, i8**, i8**, i8)*, i32 (%struct.AsyncSocket*)*, i32 (%struct.AsyncSocket*, i32*, i32*)*, i32 (%struct.AsyncSocket*, i32*, i32*)*, i32 (%struct.AsyncSocket*)*, i8* (%struct.AsyncSocket*)*, i8* (%struct.AsyncSocket*)*, i16 (%struct.AsyncSocket*)*, i8* (%struct.AsyncSocket*)*, i32 (%struct.AsyncSocket*, i8*, i8*, i8*)*, i32 (%struct.AsyncSocket*, i8*, i32, i32*, i32)*, i32 (%struct.AsyncSocket*, i8*, i32, i32*, i32)*, i32 (%struct.AsyncSocket*, i8*, i32, i32*, i32)*, i32 (%struct.AsyncSocket*, i8, i32)*, i32 (%struct.AsyncSocket*, i32)*, i32 (%struct.AsyncSocket**, i32, i32, i32*)*, void (%struct.AsyncSocket*)* }
%struct.AsyncSocket = type { i32, i32, %struct.AsyncSocketPollParams, i32, i8, i8, void (i32, %struct.AsyncSocket*, i8*)*, i8*, i8*, i32, i32, void (i8*, i32, %struct.AsyncSocket*, i8*)*, i8*, i8, %struct.AsyncSocketVTable* }
%struct.AsyncSocketPollParams = type { i32, %struct.MXUserRecLock*, %struct.PollClassSet, %struct.IVmdbPoll* }
%struct.MXUserRecLock = type opaque
%struct.PollClassSet = type { i64 }
%struct.IVmdbPoll = type opaque
%struct._SSLVerifyParam = type opaque
%struct.AsyncSocketNetworkStats = type { i32, i32, i32, i32, i32, double }
%struct.AsyncTCPSocket = type { %struct.AsyncSocket, i32, %struct.SSLSockStruct*, i32, %struct.sockaddr_storage, i32, %struct.sockaddr_storage, i32, void (%struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)*, i32, i8*, void (i8*)*, void (i8*)*, void (i8*)*, i32, void (%struct.AsyncSocket*, i8*)*, i8*, i8, i8, %struct.SendBufList*, %struct.SendBufList**, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i32, %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket*, %struct.anon }
%struct.SSLSockStruct = type opaque
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.SendBufList = type { %struct.SendBufList*, i8*, i32, void (i8*, i32, %struct.AsyncSocket*, i8*)*, i8* }
%struct.anon = type { i8, i32 }
%struct.sockaddr_vm = type { i16, i16, i32, i32, [4 x i8] }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.sockaddr_un = type { i16, [108 x i8] }
%struct.pollfd = type { i32, i16, i16 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon }
%union.anon = type { [4 x i32] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"SOCKET Could not resolve IPv6 listener socket port number.\0A\00", align 1
@.str.2 = private unnamed_addr constant [77 x i8] c"SOCKET Failed to reuse IPv6 localhost port number for IPv4 listener socket.\0A\00", align 1
@.str.3 = private unnamed_addr constant [60 x i8] c"SOCKET Could not resolve IPv4 listener socket port number.\0A\00", align 1
@.str.4 = private unnamed_addr constant [77 x i8] c"SOCKET Failed to reuse IPv4 localhost port number for IPv6 listener socket.\0A\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"::1\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"SOCKET invalid arguments to connect!\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"SOCKET creating new socket, connecting to %u:%u\0A\00", align 1
@.str.9 = private unnamed_addr constant [56 x i8] c"SOCKET Path '%s' is too long for a unix domain socket!\0A\00", align 1
@.str.10 = private unnamed_addr constant [46 x i8] c"SOCKET creating new socket, connecting to %s\0A\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"SOCKET %d (%d) \00", align 1
@.str.12 = private unnamed_addr constant [35 x i8] c"busy: another thread in recv loop\0A\00", align 1
@.str.13 = private unnamed_addr constant [47 x i8] c"%s: failed to poll on the socket during read.\0A\00", align 1
@__FUNCTION__.AsyncSocket_TCPDrainRecv = private unnamed_addr constant [25 x i8] c"AsyncSocket_TCPDrainRecv\00", align 1
@.str.14 = private unnamed_addr constant [51 x i8] c"SOCKET reregister recvCb after DrainRecv (ref %d)\0A\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"SOCKET creating new socket listening on %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"Created new %s %s listener for (%s)\0A\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"IPv4\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"IPv6\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.20 = private unnamed_addr constant [58 x i8] c"SOCKET Could not create %s listener socket, error %d: %s\0A\00", align 1
@.str.21 = private unnamed_addr constant [51 x i8] c"SOCKET Could not resolve listener socket address.\0A\00", align 1
@.str.22 = private unnamed_addr constant [52 x i8] c"SOCKET port number requested (%d) is out of range.\0A\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.24 = private unnamed_addr constant [43 x i8] c"SOCKET getaddrinfo failed for host %s: %s\0A\00", align 1
@AsyncTCPSocketResolveAddr.unknownAddr = internal global [10 x i8] c"(Unknown)\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"[%s]:%u\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"%s:%u\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"/dev/vsock\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"/vmfs/devices/char/vsock/vsock\00", align 1
@.str.29 = private unnamed_addr constant [50 x i8] c"SOCKET could not create new socket, error %d: %s\0A\00", align 1
@.str.30 = private unnamed_addr constant [42 x i8] c"creating new listening socket on port %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [49 x i8] c"SOCKET could not set SO_REUSEADDR, error %d: %s\0A\00", align 1
@.str.32 = private unnamed_addr constant [46 x i8] c"SOCKET Cannot set IPV6_V6ONLY socket option.\0A\00", align 1
@.str.33 = private unnamed_addr constant [44 x i8] c"SOCKET Could not bind socket, error %d: %s\0A\00", align 1
@.str.34 = private unnamed_addr constant [37 x i8] c"SOCKET invalid arguments to listen!\0A\00", align 1
@.str.35 = private unnamed_addr constant [49 x i8] c"SOCKET could not listen on socket, error %d: %s\0A\00", align 1
@.str.36 = private unnamed_addr constant [37 x i8] c"could not register accept callback!\0A\00", align 1
@.str.37 = private unnamed_addr constant [30 x i8] c"spurious accept notification\0A\00", align 1
@.str.38 = private unnamed_addr constant [36 x i8] c"accept: new connection was aborted\0A\00", align 1
@.str.39 = private unnamed_addr constant [38 x i8] c"accept failed on fd %d, error %d: %s\0A\00", align 1
@.str.40 = private unnamed_addr constant [79 x i8] c"accept rejected on fd %d due to a IPv4-mapped IPv6 remote connection address.\0A\00", align 1
@.str.41 = private unnamed_addr constant [54 x i8] c"SOCKET Failed to resolve %s address '%s' and port %u\0A\00", align 1
@.str.42 = private unnamed_addr constant [54 x i8] c"SOCKET creating new %s socket, connecting to %s (%s)\0A\00", align 1
@.str.43 = private unnamed_addr constant [41 x i8] c"SOCKET %s connection attempt failed: %s\0A\00", align 1
@.str.44 = private unnamed_addr constant [46 x i8] c"SOCKET failed to create socket, error %d: %s\0A\00", align 1
@.str.45 = private unnamed_addr constant [37 x i8] c"SOCKET connect failed, error %d: %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [41 x i8] c"failed to register callback in connect!\0A\00", align 1
@.str.47 = private unnamed_addr constant [66 x i8] c"SOCKET getsockopt for connect on fd %d failed with error %d : %s\0A\00", align 1
@.str.48 = private unnamed_addr constant [66 x i8] c"SOCKET getsockname for connect on fd %d failed with error %d: %s\0A\00", align 1
@asyncTCPSocketVTable = internal constant %struct.AsyncSocketVTable { i32 (%struct.AsyncSocket*)* @AsyncSocketGetState, i32 (%struct.AsyncSocket*, i32, i32, i8*, i32)* @AsyncTCPSocketSetOption, i32 (%struct.AsyncSocket*, i32, i32, i8*, i32*)* @AsyncTCPSocketGetOption, i32 (%struct.AsyncSocket*)* @AsyncTCPSocketGetGenericErrno, i32 (%struct.AsyncSocket*)* @AsyncTCPSocketGetFd, i32 (%struct.AsyncSocket*, i8**)* @AsyncTCPSocketGetRemoteIPStr, i32 (%struct.AsyncSocket*, i32, i8**)* @AsyncTCPSocketGetINETIPStr, i32 (%struct.AsyncSocket*)* @AsyncTCPSocketGetPort, i32 (%struct.AsyncSocket*, i32, void (%struct.AsyncSocket*, i8*)*)* @AsyncTCPSocketSetCloseOptions, i8 (%struct.AsyncSocket*, %struct._SSLVerifyParam*, i8*)* @AsyncTCPSocketConnectSSL, i32 (%struct.AsyncSocket*, %struct._SSLVerifyParam*, i8*, void (i8, %struct.AsyncSocket*, i8*)*, i8*)* @AsyncTCPSocketStartSslConnect, i8 (%struct.AsyncSocket*, i8*)* @AsyncTCPSocketAcceptSSL, i32 (%struct.AsyncSocket*, i8*, void (i8, %struct.AsyncSocket*, i8*)*, i8*)* @AsyncTCPSocketStartSslAccept, i32 (%struct.AsyncSocket*, i32)* @AsyncTCPSocketFlush, i32 (%struct.AsyncSocket*, i8*, i32, i8, i8*, i8*)* @AsyncTCPSocketRecv, i32 (%struct.AsyncSocket*, i8*, i32, i8*, i8*)* @AsyncTCPSocketRecvPassedFd, i32 (%struct.AsyncSocket*)* @AsyncTCPSocketGetReceivedFd, i32 (%struct.AsyncSocket*, i8*, i32, void (i8*, i32, %struct.AsyncSocket*, i8*)*, i8*)* @AsyncTCPSocketSend, i32 (%struct.AsyncSocket*)* @AsyncTCPSocketIsSendBufferFull, i32 (%struct.AsyncSocket*, %struct.AsyncSocketNetworkStats*)* null, i32 (%struct.AsyncSocket*)* @AsyncTCPSocketClose, i32 (%struct.AsyncSocket*, i32*, i8**, i8**, i8)* @AsyncTCPSocketCancelRecv, i32 (%struct.AsyncSocket*)* @AsyncTCPSocketCancelCbForClose, i32 (%struct.AsyncSocket*, i32*, i32*)* @AsyncTCPSocketGetLocalVMCIAddress, i32 (%struct.AsyncSocket*, i32*, i32*)* @AsyncTCPSocketGetRemoteVMCIAddress, i32 (%struct.AsyncSocket*)* null, i8* (%struct.AsyncSocket*)* null, i8* (%struct.AsyncSocket*)* null, i16 (%struct.AsyncSocket*)* null, i8* (%struct.AsyncSocket*)* null, i32 (%struct.AsyncSocket*, i8*, i8*, i8*)* null, i32 (%struct.AsyncSocket*, i8*, i32, i32*, i32)* @AsyncTCPSocketRecvBlocking, i32 (%struct.AsyncSocket*, i8*, i32, i32*, i32)* @AsyncTCPSocketRecvPartialBlocking, i32 (%struct.AsyncSocket*, i8*, i32, i32*, i32)* @AsyncTCPSocketSendBlocking, i32 (%struct.AsyncSocket*, i8, i32)* @AsyncTCPSocketDoOneMsg, i32 (%struct.AsyncSocket*, i32)* @AsyncTCPSocketWaitForConnection, i32 (%struct.AsyncSocket**, i32, i32, i32*)* @AsyncTCPSocketWaitForReadMultiple, void (%struct.AsyncSocket*)* @AsyncTCPSocketDestroy }, align 8
@.str.49 = private unnamed_addr constant [70 x i8] c"%s: Option layer [%d] (option [%d]) is not supported for TCP socket.\0A\00", align 1
@__FUNCTION__.AsyncTCPSocketSetOption = private unnamed_addr constant [24 x i8] c"AsyncTCPSocketSetOption\00", align 1
@.str.50 = private unnamed_addr constant [37 x i8] c"%s: sendLowLatencyMode set to [%d].\0A\00", align 1
@.str.51 = private unnamed_addr constant [110 x i8] c"%s: Option layer/level [%d], option/name [%d]: could not set OS option for TCP socket; option not supported.\0A\00", align 1
@.str.52 = private unnamed_addr constant [104 x i8] c"%s: Option layer/level [%d], option/name [%d]: could not set OS option for TCP socket; error [%d: %s].\0A\00", align 1
@.str.53 = private unnamed_addr constant [91 x i8] c"%s: Option layer/level [%d], option/name [%d]: successfully set OS option for TCP socket.\0A\00", align 1
@__FUNCTION__.AsyncTCPSocketGetOption = private unnamed_addr constant [24 x i8] c"AsyncTCPSocketGetOption\00", align 1
@.str.54 = private unnamed_addr constant [33 x i8] c"%s: sendLowLatencyMode is [%d].\0A\00", align 1
@.str.55 = private unnamed_addr constant [110 x i8] c"%s: Option layer/level [%d], option/name [%d]: could not get OS option for TCP socket; option not supported.\0A\00", align 1
@.str.56 = private unnamed_addr constant [104 x i8] c"%s: Option layer/level [%d], option/name [%d]: could not get OS option for TCP socket; error [%d: %s].\0A\00", align 1
@.str.57 = private unnamed_addr constant [91 x i8] c"%s: Option layer/level [%d], option/name [%d]: successfully got OS option for TCP socket.\0A\00", align 1
@.str.58 = private unnamed_addr constant [34 x i8] c"%s: Output string is not usable.\0A\00", align 1
@__FUNCTION__.AsyncTCPSocketGetINETIPStr = private unnamed_addr constant [27 x i8] c"AsyncTCPSocketGetINETIPStr\00", align 1
@.str.59 = private unnamed_addr constant [32 x i8] c"%s: could not find IP address.\0A\00", align 1
@.str.60 = private unnamed_addr constant [30 x i8] c"%s: could not locate socket.\0A\00", align 1
@__FUNCTION__.AsyncTCPSocketGetAddr = private unnamed_addr constant [22 x i8] c"AsyncTCPSocketGetAddr\00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"VERIFY %s:%d\0A\00", align 1
@.str.62 = private unnamed_addr constant [14 x i8] c"asyncsocket.c\00", align 1
@.str.63 = private unnamed_addr constant [41 x i8] c"An SSL operation was already initiated.\0A\00", align 1
@.str.64 = private unnamed_addr constant [42 x i8] c"failed to reinstall ssl accept callback!\0A\00", align 1
@.str.65 = private unnamed_addr constant [45 x i8] c"SOCKET Flush called with invalid arguments!\0A\00", align 1
@.str.66 = private unnamed_addr constant [42 x i8] c"flush called but state is not connected!\0A\00", align 1
@.str.67 = private unnamed_addr constant [14 x i8] c"flush failed\0A\00", align 1
@.str.68 = private unnamed_addr constant [17 x i8] c"flush timed out\0A\00", align 1
@.str.69 = private unnamed_addr constant [41 x i8] c"write buffers on a disconnected socket!\0A\00", align 1
@.str.70 = private unnamed_addr constant [39 x i8] c"socket write() should never return 0.\0A\00", align 1
@.str.71 = private unnamed_addr constant [19 x i8] c"NOT_REACHED %s:%d\0A\00", align 1
@.str.72 = private unnamed_addr constant [19 x i8] c"send error %d: %s\0A\00", align 1
@.str.73 = private unnamed_addr constant [42 x i8] c"owner closed connection in send callback\0A\00", align 1
@.str.74 = private unnamed_addr constant [34 x i8] c"%s: no registered error handler!\0A\00", align 1
@__FUNCTION__.AsyncTCPSocketRecv = private unnamed_addr constant [19 x i8] c"AsyncTCPSocketRecv\00", align 1
@.str.75 = private unnamed_addr constant [44 x i8] c"SOCKET Recv called with invalid arguments!\0A\00", align 1
@.str.76 = private unnamed_addr constant [41 x i8] c"recv called but state is not connected!\0A\00", align 1
@.str.77 = private unnamed_addr constant [47 x i8] c"Recv called while a blocking recv is pending.\0A\00", align 1
@__FUNCTION__.AsyncTCPSocketRecvPassedFd = private unnamed_addr constant [27 x i8] c"AsyncTCPSocketRecvPassedFd\00", align 1
@.str.78 = private unnamed_addr constant [53 x i8] c"SOCKET Failed to receive fd on disconnected socket!\0A\00", align 1
@.str.79 = private unnamed_addr constant [65 x i8] c"SOCKET Send called with invalid arguments!buffer: %p length: %d\0A\00", align 1
@.str.80 = private unnamed_addr constant [41 x i8] c"send called but state is not connected!\0A\00", align 1
@.str.81 = private unnamed_addr constant [38 x i8] c"%s() called on already closed asock!\0A\00", align 1
@__FUNCTION__.AsyncTCPSocketClose = private unnamed_addr constant [20 x i8] c"AsyncTCPSocketClose\00", align 1
@.str.82 = private unnamed_addr constant [47 x i8] c"AsyncTCPSocket_Flush failed: %s. Closing now.\0A\00", align 1
@.str.83 = private unnamed_addr constant [23 x i8] c"Connection failed: %s\0A\00", align 1
@.str.84 = private unnamed_addr constant [23 x i8] c"NOT_IMPLEMENTED %s:%d\0A\00", align 1
@.str.85 = private unnamed_addr constant [57 x i8] c"SOCKET Failed to cancel request on disconnected socket!\0A\00", align 1
@.str.86 = private unnamed_addr constant [64 x i8] c"SOCKET Cannot cancel request while a blocking recv is pending.\0A\00", align 1
@.str.87 = private unnamed_addr constant [67 x i8] c"SOCKET Can't cancel request as socket has send operation pending.\0A\00", align 1
@.str.88 = private unnamed_addr constant [45 x i8] c"blocking %s detected peer closed connection\0A\00", align 1
@.str.89 = private unnamed_addr constant [5 x i8] c"recv\00", align 1
@.str.90 = private unnamed_addr constant [5 x i8] c"send\00", align 1
@.str.91 = private unnamed_addr constant [26 x i8] c"blocking %s error %d: %s\0A\00", align 1
@__FUNCTION__.AsyncTCPSocketDoOneMsg = private unnamed_addr constant [23 x i8] c"AsyncTCPSocketDoOneMsg\00", align 1
@.str.92 = private unnamed_addr constant [50 x i8] c"SOCKET reregister recvCb after DoOneMsg (ref %d)\0A\00", align 1
@.str.93 = private unnamed_addr constant [48 x i8] c"%s: failed to poll on the socket during write.\0A\00", align 1
@.str.94 = private unnamed_addr constant [36 x i8] c"wait for connection: accept failed\0A\00", align 1
@.str.95 = private unnamed_addr constant [43 x i8] c"failed to install listen accept callback!\0A\00", align 1
@.str.96 = private unnamed_addr constant [41 x i8] c"%s: Timeout waiting for a ready socket.\0A\00", align 1
@__FUNCTION__.AsyncTCPSocketPollWork = private unnamed_addr constant [23 x i8] c"AsyncTCPSocketPollWork\00", align 1
@.str.97 = private unnamed_addr constant [37 x i8] c"%s: Socket interrupted by a signal.\0A\00", align 1
@.str.98 = private unnamed_addr constant [30 x i8] c"%s: Failed with error %d: %s\0A\00", align 1
@.str.99 = private unnamed_addr constant [41 x i8] c"%s: Socket error lookup returned %d: %s\0A\00", align 1
@.str.100 = private unnamed_addr constant [30 x i8] c"%s: Last socket error %d: %s\0A\00", align 1
@.str.101 = private unnamed_addr constant [38 x i8] c"%s: Failed to return a ready socket.\0A\00", align 1
@.str.102 = private unnamed_addr constant [51 x i8] c"SOCKET failed to make fd %d non-blocking!: %d, %s\0A\00", align 1
@.str.103 = private unnamed_addr constant [37 x i8] c"%s: Failed to find listener socket.\0A\00", align 1
@__FUNCTION__.AsyncTCPSocketPoll = private unnamed_addr constant [19 x i8] c"AsyncTCPSocketPoll\00", align 1
@.str.104 = private unnamed_addr constant [40 x i8] c"recv detected client closed connection\0A\00", align 1
@.str.105 = private unnamed_addr constant [19 x i8] c"recv error %d: %s\0A\00", align 1
@.str.106 = private unnamed_addr constant [34 x i8] c"failed to install recv callback!\0A\00", align 1
@.str.107 = private unnamed_addr constant [37 x i8] c"installing recv RTime poll callback\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @AsyncTCPSocket_Init() #0 !dbg !471 {
  ret i32 0, !dbg !474
}

; Function Attrs: nounwind uwtable
define %struct.AsyncSocket* @AsyncSocket_Listen(i8*, i32, void (%struct.AsyncSocket*, i8*)*, i8*, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !475 {
  %7 = alloca %struct.AsyncSocket*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct.AsyncSocketPollParams*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca %struct.AsyncTCPSocket*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct.AsyncTCPSocket*, align 8
  %18 = alloca %struct.AsyncTCPSocket*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.AsyncTCPSocket*, align 8
  store i8* %0, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !479, metadata !480), !dbg !481
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !482, metadata !480), !dbg !483
  store void (%struct.AsyncSocket*, i8*)* %2, void (%struct.AsyncSocket*, i8*)** %10, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %10, metadata !484, metadata !480), !dbg !485
  store i8* %3, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !486, metadata !480), !dbg !487
  store %struct.AsyncSocketPollParams* %4, %struct.AsyncSocketPollParams** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %12, metadata !488, metadata !480), !dbg !489
  store i32* %5, i32** %13, align 8
  call void @llvm.dbg.declare(metadata i32** %13, metadata !490, metadata !480), !dbg !491
  %22 = load i8*, i8** %8, align 8, !dbg !492
  %23 = icmp ne i8* %22, null, !dbg !494
  br i1 %23, label %24, label %43, !dbg !495

; <label>:24:                                     ; preds = %6
  %25 = load i8*, i8** %8, align 8, !dbg !496
  %26 = load i8, i8* %25, align 1, !dbg !498
  %27 = sext i8 %26 to i32, !dbg !498
  %28 = icmp ne i32 %27, 0, !dbg !499
  br i1 %28, label %29, label %43, !dbg !500

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %8, align 8, !dbg !501
  %31 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0)) #10, !dbg !502
  %32 = icmp ne i32 %31, 0, !dbg !502
  br i1 %32, label %33, label %43, !dbg !503

; <label>:33:                                     ; preds = %29
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %14, metadata !505, metadata !480), !dbg !507
  %34 = load i8*, i8** %8, align 8, !dbg !508
  %35 = load i32, i32* %9, align 4, !dbg !509
  %36 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %10, align 8, !dbg !510
  %37 = load i8*, i8** %11, align 8, !dbg !511
  %38 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %12, align 8, !dbg !512
  %39 = load i32*, i32** %13, align 8, !dbg !513
  %40 = call %struct.AsyncTCPSocket* @AsyncTCPSocketListenerCreateImpl(i8* %34, i32 %35, i32 0, void (%struct.AsyncSocket*, i8*)* %36, i8* %37, %struct.AsyncSocketPollParams* %38, i32* %39), !dbg !514
  store %struct.AsyncTCPSocket* %40, %struct.AsyncTCPSocket** %14, align 8, !dbg !515
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !516
  %42 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %41), !dbg !517
  store %struct.AsyncSocket* %42, %struct.AsyncSocket** %7, align 8, !dbg !518
  br label %189, !dbg !518

; <label>:43:                                     ; preds = %29, %24, %6
  call void @llvm.dbg.declare(metadata i8* %15, metadata !519, metadata !480), !dbg !521
  %44 = load i8*, i8** %8, align 8, !dbg !522
  %45 = icmp ne i8* %44, null, !dbg !523
  br i1 %45, label %46, label %51, !dbg !524

; <label>:46:                                     ; preds = %43
  %47 = load i8*, i8** %8, align 8, !dbg !525
  %48 = call i32 @strcmp(i8* %47, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0)) #10, !dbg !527
  %49 = icmp ne i32 %48, 0, !dbg !528
  %50 = xor i1 %49, true, !dbg !528
  br label %51

; <label>:51:                                     ; preds = %46, %43
  %52 = phi i1 [ false, %43 ], [ %50, %46 ]
  %53 = zext i1 %52 to i32, !dbg !529
  %54 = trunc i32 %53 to i8, !dbg !531
  store i8 %54, i8* %15, align 1, !dbg !532
  call void @llvm.dbg.declare(metadata i32* %16, metadata !533, metadata !480), !dbg !534
  %55 = load i32, i32* %9, align 4, !dbg !535
  store i32 %55, i32* %16, align 4, !dbg !534
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %17, metadata !536, metadata !480), !dbg !537
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %17, align 8, !dbg !537
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %18, metadata !538, metadata !480), !dbg !539
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %18, align 8, !dbg !539
  call void @llvm.dbg.declare(metadata i32* %19, metadata !540, metadata !480), !dbg !541
  call void @llvm.dbg.declare(metadata i32* %20, metadata !542, metadata !480), !dbg !543
  %56 = load i8*, i8** %8, align 8, !dbg !544
  %57 = load i32, i32* %9, align 4, !dbg !545
  %58 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %10, align 8, !dbg !546
  %59 = load i8*, i8** %11, align 8, !dbg !547
  %60 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %12, align 8, !dbg !548
  %61 = call %struct.AsyncTCPSocket* @AsyncTCPSocketListenerCreateImpl(i8* %56, i32 %57, i32 10, void (%struct.AsyncSocket*, i8*)* %58, i8* %59, %struct.AsyncSocketPollParams* %60, i32* %20), !dbg !549
  store %struct.AsyncTCPSocket* %61, %struct.AsyncTCPSocket** %17, align 8, !dbg !550
  %62 = load i8, i8* %15, align 1, !dbg !551
  %63 = sext i8 %62 to i32, !dbg !551
  %64 = icmp ne i32 %63, 0, !dbg !551
  br i1 %64, label %65, label %77, !dbg !553

; <label>:65:                                     ; preds = %51
  %66 = load i32, i32* %9, align 4, !dbg !554
  %67 = icmp eq i32 %66, 0, !dbg !556
  br i1 %67, label %68, label %77, !dbg !557

; <label>:68:                                     ; preds = %65
  %69 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !558
  %70 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %69), !dbg !560
  %71 = call i32 @AsyncSocket_GetPort(%struct.AsyncSocket* %70), !dbg !561
  store i32 %71, i32* %16, align 4, !dbg !563
  %72 = load i32, i32* %16, align 4, !dbg !564
  %73 = icmp eq i32 %72, -1, !dbg !566
  br i1 %73, label %74, label %76, !dbg !567

; <label>:74:                                     ; preds = %68
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i32 0, i32 0)), !dbg !568
  %75 = load i32, i32* %9, align 4, !dbg !570
  store i32 %75, i32* %16, align 4, !dbg !571
  br label %76, !dbg !572

; <label>:76:                                     ; preds = %74, %68
  br label %77, !dbg !573

; <label>:77:                                     ; preds = %76, %65, %51
  %78 = load i8*, i8** %8, align 8, !dbg !574
  %79 = load i32, i32* %16, align 4, !dbg !575
  %80 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %10, align 8, !dbg !576
  %81 = load i8*, i8** %11, align 8, !dbg !577
  %82 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %12, align 8, !dbg !578
  %83 = call %struct.AsyncTCPSocket* @AsyncTCPSocketListenerCreateImpl(i8* %78, i32 %79, i32 2, void (%struct.AsyncSocket*, i8*)* %80, i8* %81, %struct.AsyncSocketPollParams* %82, i32* %19), !dbg !579
  store %struct.AsyncTCPSocket* %83, %struct.AsyncTCPSocket** %18, align 8, !dbg !580
  %84 = load i8, i8* %15, align 1, !dbg !581
  %85 = sext i8 %84 to i32, !dbg !581
  %86 = icmp ne i32 %85, 0, !dbg !581
  br i1 %86, label %87, label %127, !dbg !583

; <label>:87:                                     ; preds = %77
  %88 = load i32, i32* %9, align 4, !dbg !584
  %89 = icmp eq i32 %88, 0, !dbg !586
  br i1 %89, label %90, label %127, !dbg !587

; <label>:90:                                     ; preds = %87
  %91 = load i32, i32* %19, align 4, !dbg !588
  %92 = icmp eq i32 %91, 11, !dbg !590
  br i1 %92, label %93, label %127, !dbg !591

; <label>:93:                                     ; preds = %90
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.2, i32 0, i32 0)), !dbg !592
  %94 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !594
  %95 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %94), !dbg !595
  %96 = call i32 @AsyncSocket_Close(%struct.AsyncSocket* %95), !dbg !596
  store i32 0, i32* %19, align 4, !dbg !598
  %97 = load i8*, i8** %8, align 8, !dbg !599
  %98 = load i32, i32* %9, align 4, !dbg !600
  %99 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %10, align 8, !dbg !601
  %100 = load i8*, i8** %11, align 8, !dbg !602
  %101 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %12, align 8, !dbg !603
  %102 = call %struct.AsyncTCPSocket* @AsyncTCPSocketListenerCreateImpl(i8* %97, i32 %98, i32 2, void (%struct.AsyncSocket*, i8*)* %99, i8* %100, %struct.AsyncSocketPollParams* %101, i32* %19), !dbg !604
  store %struct.AsyncTCPSocket* %102, %struct.AsyncTCPSocket** %18, align 8, !dbg !605
  %103 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !606
  %104 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %103), !dbg !607
  %105 = call i32 @AsyncSocket_GetPort(%struct.AsyncSocket* %104), !dbg !608
  store i32 %105, i32* %16, align 4, !dbg !609
  %106 = load i32, i32* %16, align 4, !dbg !610
  %107 = icmp eq i32 %106, -1, !dbg !612
  br i1 %107, label %108, label %110, !dbg !613

; <label>:108:                                    ; preds = %93
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i32 0, i32 0)), !dbg !614
  %109 = load i32, i32* %9, align 4, !dbg !616
  store i32 %109, i32* %16, align 4, !dbg !617
  br label %110, !dbg !618

; <label>:110:                                    ; preds = %108, %93
  store i32 0, i32* %20, align 4, !dbg !619
  %111 = load i8*, i8** %8, align 8, !dbg !620
  %112 = load i32, i32* %16, align 4, !dbg !621
  %113 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %10, align 8, !dbg !622
  %114 = load i8*, i8** %11, align 8, !dbg !623
  %115 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %12, align 8, !dbg !624
  %116 = call %struct.AsyncTCPSocket* @AsyncTCPSocketListenerCreateImpl(i8* %111, i32 %112, i32 10, void (%struct.AsyncSocket*, i8*)* %113, i8* %114, %struct.AsyncSocketPollParams* %115, i32* %20), !dbg !625
  store %struct.AsyncTCPSocket* %116, %struct.AsyncTCPSocket** %17, align 8, !dbg !626
  %117 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !627
  %118 = icmp ne %struct.AsyncTCPSocket* %117, null, !dbg !627
  br i1 %118, label %126, label %119, !dbg !629

; <label>:119:                                    ; preds = %110
  %120 = load i32, i32* %20, align 4, !dbg !630
  %121 = icmp eq i32 %120, 11, !dbg !632
  br i1 %121, label %122, label %126, !dbg !633

; <label>:122:                                    ; preds = %119
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.4, i32 0, i32 0)), !dbg !634
  %123 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !636
  %124 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %123), !dbg !637
  %125 = call i32 @AsyncSocket_Close(%struct.AsyncSocket* %124), !dbg !638
  br label %126, !dbg !640

; <label>:126:                                    ; preds = %122, %119, %110
  br label %127, !dbg !641

; <label>:127:                                    ; preds = %126, %90, %87, %77
  %128 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !642
  %129 = icmp ne %struct.AsyncTCPSocket* %128, null, !dbg !642
  br i1 %129, label %130, label %155, !dbg !644

; <label>:130:                                    ; preds = %127
  %131 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !645
  %132 = icmp ne %struct.AsyncTCPSocket* %131, null, !dbg !645
  br i1 %132, label %133, label %155, !dbg !647

; <label>:133:                                    ; preds = %130
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %21, metadata !648, metadata !480), !dbg !650
  %134 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %12, align 8, !dbg !651
  %135 = call %struct.AsyncTCPSocket* @AsyncTCPSocketCreate(%struct.AsyncSocketPollParams* %134), !dbg !652
  store %struct.AsyncTCPSocket* %135, %struct.AsyncTCPSocket** %21, align 8, !dbg !653
  %136 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %21, align 8, !dbg !654
  call void @AsyncTCPSocketSetState(%struct.AsyncTCPSocket* %136, i32 0), !dbg !655
  %137 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !656
  %138 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %21, align 8, !dbg !657
  %139 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %138, i32 0, i32 35, !dbg !658
  store %struct.AsyncTCPSocket* %137, %struct.AsyncTCPSocket** %139, align 8, !dbg !659
  %140 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !660
  %141 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %21, align 8, !dbg !661
  %142 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %141, i32 0, i32 34, !dbg !662
  store %struct.AsyncTCPSocket* %140, %struct.AsyncTCPSocket** %142, align 8, !dbg !663
  %143 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !664
  %144 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %143), !dbg !665
  %145 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %21, align 8, !dbg !666
  %146 = bitcast %struct.AsyncTCPSocket* %145 to i8*, !dbg !666
  %147 = call i32 @AsyncSocket_SetErrorFn(%struct.AsyncSocket* %144, void (i32, %struct.AsyncSocket*, i8*)* @AsyncTCPSocketListenerError, i8* %146), !dbg !667
  %148 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !669
  %149 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %148), !dbg !670
  %150 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %21, align 8, !dbg !671
  %151 = bitcast %struct.AsyncTCPSocket* %150 to i8*, !dbg !671
  %152 = call i32 @AsyncSocket_SetErrorFn(%struct.AsyncSocket* %149, void (i32, %struct.AsyncSocket*, i8*)* @AsyncTCPSocketListenerError, i8* %151), !dbg !672
  %153 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %21, align 8, !dbg !673
  %154 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %153), !dbg !674
  store %struct.AsyncSocket* %154, %struct.AsyncSocket** %7, align 8, !dbg !675
  br label %189, !dbg !675

; <label>:155:                                    ; preds = %130, %127
  %156 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !676
  %157 = icmp ne %struct.AsyncTCPSocket* %156, null, !dbg !676
  br i1 %157, label %158, label %161, !dbg !678

; <label>:158:                                    ; preds = %155
  %159 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !679
  %160 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %159), !dbg !681
  store %struct.AsyncSocket* %160, %struct.AsyncSocket** %7, align 8, !dbg !682
  br label %189, !dbg !682

; <label>:161:                                    ; preds = %155
  %162 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !683
  %163 = icmp ne %struct.AsyncTCPSocket* %162, null, !dbg !683
  br i1 %163, label %164, label %167, !dbg !685

; <label>:164:                                    ; preds = %161
  %165 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !686
  %166 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %165), !dbg !688
  store %struct.AsyncSocket* %166, %struct.AsyncSocket** %7, align 8, !dbg !689
  br label %189, !dbg !689

; <label>:167:                                    ; preds = %161
  br label %168

; <label>:168:                                    ; preds = %167
  br label %169

; <label>:169:                                    ; preds = %168
  %170 = load i32*, i32** %13, align 8, !dbg !690
  %171 = icmp ne i32* %170, null, !dbg !690
  br i1 %171, label %172, label %188, !dbg !692

; <label>:172:                                    ; preds = %169
  %173 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !693
  %174 = icmp ne %struct.AsyncTCPSocket* %173, null, !dbg !693
  br i1 %174, label %178, label %175, !dbg !696

; <label>:175:                                    ; preds = %172
  %176 = load i32, i32* %20, align 4, !dbg !697
  %177 = load i32*, i32** %13, align 8, !dbg !699
  store i32 %176, i32* %177, align 4, !dbg !700
  br label %187, !dbg !701

; <label>:178:                                    ; preds = %172
  %179 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !702
  %180 = icmp ne %struct.AsyncTCPSocket* %179, null, !dbg !702
  br i1 %180, label %184, label %181, !dbg !705

; <label>:181:                                    ; preds = %178
  %182 = load i32, i32* %19, align 4, !dbg !706
  %183 = load i32*, i32** %13, align 8, !dbg !708
  store i32 %182, i32* %183, align 4, !dbg !709
  br label %186, !dbg !710

; <label>:184:                                    ; preds = %178
  %185 = load i32*, i32** %13, align 8, !dbg !711
  store i32 12, i32* %185, align 4, !dbg !713
  br label %186

; <label>:186:                                    ; preds = %184, %181
  br label %187

; <label>:187:                                    ; preds = %186, %175
  br label %188, !dbg !714

; <label>:188:                                    ; preds = %187, %169
  store %struct.AsyncSocket* null, %struct.AsyncSocket** %7, align 8, !dbg !715
  br label %189, !dbg !715

; <label>:189:                                    ; preds = %188, %164, %158, %133, %33
  %190 = load %struct.AsyncSocket*, %struct.AsyncSocket** %7, align 8, !dbg !716
  ret %struct.AsyncSocket* %190, !dbg !716
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define internal %struct.AsyncTCPSocket* @AsyncTCPSocketListenerCreateImpl(i8*, i32, i32, void (%struct.AsyncSocket*, i8*)*, i8*, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !717 {
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.AsyncSocketPollParams*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca %struct.AsyncTCPSocket*, align 8
  %16 = alloca %struct.sockaddr_storage, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !720, metadata !480), !dbg !721
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !722, metadata !480), !dbg !723
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !724, metadata !480), !dbg !725
  store void (%struct.AsyncSocket*, i8*)* %3, void (%struct.AsyncSocket*, i8*)** %11, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %11, metadata !726, metadata !480), !dbg !727
  store i8* %4, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !728, metadata !480), !dbg !729
  store %struct.AsyncSocketPollParams* %5, %struct.AsyncSocketPollParams** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %13, metadata !730, metadata !480), !dbg !731
  store i32* %6, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !732, metadata !480), !dbg !733
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %15, metadata !734, metadata !480), !dbg !735
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %15, align 8, !dbg !735
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %16, metadata !736, metadata !480), !dbg !737
  call void @llvm.dbg.declare(metadata i32* %17, metadata !738, metadata !480), !dbg !739
  call void @llvm.dbg.declare(metadata i8** %18, metadata !740, metadata !480), !dbg !741
  store i8* null, i8** %18, align 8, !dbg !741
  call void @llvm.dbg.declare(metadata i32* %19, metadata !742, metadata !480), !dbg !743
  %20 = load i8*, i8** %8, align 8, !dbg !744
  %21 = load i32, i32* %9, align 4, !dbg !745
  %22 = load i32, i32* %10, align 4, !dbg !746
  %23 = call i32 @AsyncTCPSocketResolveAddr(i8* %20, i32 %21, i32 %22, i8 signext 1, %struct.sockaddr_storage* %16, i32* %17, i8** %18), !dbg !747
  store i32 %23, i32* %19, align 4, !dbg !743
  %24 = load i32, i32* %19, align 4, !dbg !748
  %25 = icmp eq i32 %24, 0, !dbg !750
  br i1 %25, label %26, label %63, !dbg !751

; <label>:26:                                     ; preds = %7
  %27 = load i32, i32* %17, align 4, !dbg !752
  %28 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %11, align 8, !dbg !754
  %29 = load i8*, i8** %12, align 8, !dbg !755
  %30 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %13, align 8, !dbg !756
  %31 = load i32*, i32** %14, align 8, !dbg !757
  %32 = call %struct.AsyncTCPSocket* @AsyncTCPSocketListenImpl(%struct.sockaddr_storage* %16, i32 %27, void (%struct.AsyncSocket*, i8*)* %28, i8* %29, %struct.AsyncSocketPollParams* %30, i32* %31), !dbg !758
  store %struct.AsyncTCPSocket* %32, %struct.AsyncTCPSocket** %15, align 8, !dbg !759
  %33 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %15, align 8, !dbg !760
  %34 = icmp ne %struct.AsyncTCPSocket* %33, null, !dbg !760
  br i1 %34, label %35, label %50, !dbg !762

; <label>:35:                                     ; preds = %26
  br label %36, !dbg !763, !llvm.loop !765

; <label>:36:                                     ; preds = %35
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %15, align 8, !dbg !766
  %38 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %37), !dbg !769
  %39 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %38), !dbg !770
  %40 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %15, align 8, !dbg !772
  %41 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %40), !dbg !773
  %42 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %41), !dbg !775
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %39, i32 %42), !dbg !777
  %43 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %16, i32 0, i32 0, !dbg !779
  %44 = load i16, i16* %43, align 8, !dbg !779
  %45 = zext i16 %44 to i32, !dbg !780
  %46 = icmp eq i32 %45, 2, !dbg !781
  %47 = select i1 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), !dbg !780
  %48 = load i8*, i8** %18, align 8, !dbg !782
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i32 0, i32 0), i8* %47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i8* %48), !dbg !783
  br label %49, !dbg !785

; <label>:49:                                     ; preds = %36
  br label %61, !dbg !786

; <label>:50:                                     ; preds = %26
  %51 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %16, i32 0, i32 0, !dbg !787
  %52 = load i16, i16* %51, align 8, !dbg !787
  %53 = zext i16 %52 to i32, !dbg !789
  %54 = icmp eq i32 %53, 2, !dbg !790
  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), !dbg !789
  %56 = load i32*, i32** %14, align 8, !dbg !791
  %57 = load i32, i32* %56, align 4, !dbg !792
  %58 = load i32*, i32** %14, align 8, !dbg !793
  %59 = load i32, i32* %58, align 4, !dbg !794
  %60 = call i8* @AsyncSocket_Err2String(i32 %59), !dbg !795
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.20, i32 0, i32 0), i8* %55, i32 %57, i8* %60), !dbg !796
  br label %61

; <label>:61:                                     ; preds = %50, %49
  %62 = load i8*, i8** %18, align 8, !dbg !797
  call void @free(i8* %62) #8, !dbg !798
  br label %69, !dbg !799

; <label>:63:                                     ; preds = %7
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.21, i32 0, i32 0)), !dbg !800
  %64 = load i32*, i32** %14, align 8, !dbg !802
  %65 = icmp ne i32* %64, null, !dbg !802
  br i1 %65, label %66, label %68, !dbg !804

; <label>:66:                                     ; preds = %63
  %67 = load i32*, i32** %14, align 8, !dbg !805
  store i32 15, i32* %67, align 4, !dbg !807
  br label %68, !dbg !808

; <label>:68:                                     ; preds = %66, %63
  br label %69

; <label>:69:                                     ; preds = %68, %61
  %70 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %15, align 8, !dbg !809
  ret %struct.AsyncTCPSocket* %70, !dbg !810
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket*) #3 !dbg !811 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !814, metadata !480), !dbg !815
  %3 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !816
  %4 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %3, i32 0, i32 0, !dbg !817
  ret %struct.AsyncSocket* %4, !dbg !818
}

declare i32 @AsyncSocket_GetPort(%struct.AsyncSocket*) #4

declare void @Log(i8*, ...) #4

declare i32 @AsyncSocket_Close(%struct.AsyncSocket*) #4

; Function Attrs: nounwind uwtable
define internal %struct.AsyncTCPSocket* @AsyncTCPSocketCreate(%struct.AsyncSocketPollParams*) #0 !dbg !819 {
  %2 = alloca %struct.AsyncSocketPollParams*, align 8
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocketPollParams* %0, %struct.AsyncSocketPollParams** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %2, metadata !822, metadata !480), !dbg !823
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !824, metadata !480), !dbg !825
  %4 = call i8* @UtilSafeCalloc0(i64 1, i64 568), !dbg !826
  %5 = bitcast i8* %4 to %struct.AsyncTCPSocket*, !dbg !826
  store %struct.AsyncTCPSocket* %5, %struct.AsyncTCPSocket** %3, align 8, !dbg !827
  %6 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !828
  %7 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %6), !dbg !829
  %8 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %2, align 8, !dbg !830
  call void @AsyncSocketInitSocket(%struct.AsyncSocket* %7, %struct.AsyncSocketPollParams* %8, %struct.AsyncSocketVTable* @asyncTCPSocketVTable), !dbg !831
  %9 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !833
  %10 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %9, i32 0, i32 1, !dbg !834
  store i32 -1, i32* %10, align 8, !dbg !835
  %11 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !836
  %12 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %11, i32 0, i32 32, !dbg !837
  store i8 0, i8* %12, align 2, !dbg !838
  %13 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !839
  %14 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %13, i32 0, i32 27, !dbg !840
  store i8 0, i8* %14, align 1, !dbg !841
  %15 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !842
  %16 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %15, i32 0, i32 21, !dbg !843
  %17 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !844
  %18 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %17, i32 0, i32 22, !dbg !845
  store %struct.SendBufList** %16, %struct.SendBufList*** %18, align 8, !dbg !846
  %19 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !847
  %20 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %19, i32 0, i32 36, !dbg !848
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %20, i32 0, i32 1, !dbg !849
  store i32 -1, i32* %21, align 4, !dbg !850
  %22 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %2, align 8, !dbg !851
  %23 = icmp ne %struct.AsyncSocketPollParams* %22, null, !dbg !851
  br i1 %23, label %24, label %34, !dbg !853

; <label>:24:                                     ; preds = %1
  %25 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %2, align 8, !dbg !854
  %26 = getelementptr inbounds %struct.AsyncSocketPollParams, %struct.AsyncSocketPollParams* %25, i32 0, i32 3, !dbg !856
  %27 = load %struct.IVmdbPoll*, %struct.IVmdbPoll** %26, align 8, !dbg !856
  %28 = icmp ne %struct.IVmdbPoll* %27, null, !dbg !854
  br i1 %28, label %29, label %34, !dbg !857

; <label>:29:                                     ; preds = %24
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !858
  %31 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %30, i32 0, i32 14, !dbg !860
  store void (i8*)* @AsyncTCPSocketIPollSendCallback, void (i8*)** %31, align 8, !dbg !861
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !862
  %33 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %32, i32 0, i32 15, !dbg !863
  store void (i8*)* @AsyncTCPSocketIPollRecvCallback, void (i8*)** %33, align 8, !dbg !864
  br label %39, !dbg !865

; <label>:34:                                     ; preds = %24, %1
  %35 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !866
  %36 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %35, i32 0, i32 14, !dbg !868
  store void (i8*)* @AsyncTCPSocketSendCallback, void (i8*)** %36, align 8, !dbg !869
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !870
  %38 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %37, i32 0, i32 15, !dbg !871
  store void (i8*)* @AsyncTCPSocketRecvCallback, void (i8*)** %38, align 8, !dbg !872
  br label %39

; <label>:39:                                     ; preds = %34, %29
  %40 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !873
  ret %struct.AsyncTCPSocket* %40, !dbg !874
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @AsyncTCPSocketSetState(%struct.AsyncTCPSocket*, i32) #3 !dbg !875 {
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !878, metadata !480), !dbg !879
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !880, metadata !480), !dbg !881
  %5 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !882
  %6 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %5), !dbg !883
  %7 = load i32, i32* %4, align 4, !dbg !884
  call void @AsyncSocketSetState(%struct.AsyncSocket* %6, i32 %7), !dbg !885
  ret void, !dbg !887
}

declare i32 @AsyncSocket_SetErrorFn(%struct.AsyncSocket*, void (i32, %struct.AsyncSocket*, i8*)*, i8*) #4

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketListenerError(i32, %struct.AsyncSocket*, i8*) #0 !dbg !888 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.AsyncSocket*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.AsyncSocket*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !889, metadata !480), !dbg !890
  store %struct.AsyncSocket* %1, %struct.AsyncSocket** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %5, metadata !891, metadata !480), !dbg !892
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !893, metadata !480), !dbg !894
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %7, metadata !895, metadata !480), !dbg !896
  %8 = load i8*, i8** %6, align 8, !dbg !897
  %9 = bitcast i8* %8 to %struct.AsyncSocket*, !dbg !897
  store %struct.AsyncSocket* %9, %struct.AsyncSocket** %7, align 8, !dbg !896
  %10 = load %struct.AsyncSocket*, %struct.AsyncSocket** %7, align 8, !dbg !898
  %11 = load i32, i32* %4, align 4, !dbg !899
  call void @AsyncSocketHandleError(%struct.AsyncSocket* %10, i32 %11), !dbg !900
  ret void, !dbg !901
}

; Function Attrs: nounwind uwtable
define %struct.AsyncSocket* @AsyncSocket_ListenLoopback(i32, void (%struct.AsyncSocket*, i8*)*, i8*, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !902 {
  %6 = alloca %struct.AsyncSocket*, align 8
  %7 = alloca i32, align 4
  %8 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.AsyncSocketPollParams*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca %struct.AsyncTCPSocket*, align 8
  %13 = alloca %struct.AsyncTCPSocket*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.AsyncTCPSocket*, align 8
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !905, metadata !480), !dbg !906
  store void (%struct.AsyncSocket*, i8*)* %1, void (%struct.AsyncSocket*, i8*)** %8, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %8, metadata !907, metadata !480), !dbg !908
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !909, metadata !480), !dbg !910
  store %struct.AsyncSocketPollParams* %3, %struct.AsyncSocketPollParams** %10, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %10, metadata !911, metadata !480), !dbg !912
  store i32* %4, i32** %11, align 8
  call void @llvm.dbg.declare(metadata i32** %11, metadata !913, metadata !480), !dbg !914
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %12, metadata !915, metadata !480), !dbg !916
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %12, align 8, !dbg !916
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %13, metadata !917, metadata !480), !dbg !918
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %13, align 8, !dbg !918
  call void @llvm.dbg.declare(metadata i32* %14, metadata !919, metadata !480), !dbg !920
  call void @llvm.dbg.declare(metadata i32* %15, metadata !921, metadata !480), !dbg !922
  %17 = load i32, i32* %7, align 4, !dbg !923
  %18 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %8, align 8, !dbg !924
  %19 = load i8*, i8** %9, align 8, !dbg !925
  %20 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %10, align 8, !dbg !926
  %21 = call %struct.AsyncTCPSocket* @AsyncTCPSocketListenerCreateImpl(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i32 %17, i32 10, void (%struct.AsyncSocket*, i8*)* %18, i8* %19, %struct.AsyncSocketPollParams* %20, i32* %15), !dbg !927
  store %struct.AsyncTCPSocket* %21, %struct.AsyncTCPSocket** %12, align 8, !dbg !928
  %22 = load i32, i32* %7, align 4, !dbg !929
  %23 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %8, align 8, !dbg !930
  %24 = load i8*, i8** %9, align 8, !dbg !931
  %25 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %10, align 8, !dbg !932
  %26 = call %struct.AsyncTCPSocket* @AsyncTCPSocketListenerCreateImpl(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i32 %22, i32 2, void (%struct.AsyncSocket*, i8*)* %23, i8* %24, %struct.AsyncSocketPollParams* %25, i32* %14), !dbg !933
  store %struct.AsyncTCPSocket* %26, %struct.AsyncTCPSocket** %13, align 8, !dbg !934
  %27 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !935
  %28 = icmp ne %struct.AsyncTCPSocket* %27, null, !dbg !935
  br i1 %28, label %29, label %44, !dbg !937

; <label>:29:                                     ; preds = %5
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %13, align 8, !dbg !938
  %31 = icmp ne %struct.AsyncTCPSocket* %30, null, !dbg !938
  br i1 %31, label %32, label %44, !dbg !940

; <label>:32:                                     ; preds = %29
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %16, metadata !941, metadata !480), !dbg !943
  %33 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %10, align 8, !dbg !944
  %34 = call %struct.AsyncTCPSocket* @AsyncTCPSocketCreate(%struct.AsyncSocketPollParams* %33), !dbg !945
  store %struct.AsyncTCPSocket* %34, %struct.AsyncTCPSocket** %16, align 8, !dbg !946
  %35 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !947
  call void @AsyncTCPSocketSetState(%struct.AsyncTCPSocket* %35, i32 0), !dbg !948
  %36 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !949
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !950
  %38 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %37, i32 0, i32 35, !dbg !951
  store %struct.AsyncTCPSocket* %36, %struct.AsyncTCPSocket** %38, align 8, !dbg !952
  %39 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %13, align 8, !dbg !953
  %40 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !954
  %41 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %40, i32 0, i32 34, !dbg !955
  store %struct.AsyncTCPSocket* %39, %struct.AsyncTCPSocket** %41, align 8, !dbg !956
  %42 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !957
  %43 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %42), !dbg !958
  store %struct.AsyncSocket* %43, %struct.AsyncSocket** %6, align 8, !dbg !959
  br label %78, !dbg !959

; <label>:44:                                     ; preds = %29, %5
  %45 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !960
  %46 = icmp ne %struct.AsyncTCPSocket* %45, null, !dbg !960
  br i1 %46, label %47, label %50, !dbg !962

; <label>:47:                                     ; preds = %44
  %48 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !963
  %49 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %48), !dbg !965
  store %struct.AsyncSocket* %49, %struct.AsyncSocket** %6, align 8, !dbg !966
  br label %78, !dbg !966

; <label>:50:                                     ; preds = %44
  %51 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %13, align 8, !dbg !967
  %52 = icmp ne %struct.AsyncTCPSocket* %51, null, !dbg !967
  br i1 %52, label %53, label %56, !dbg !969

; <label>:53:                                     ; preds = %50
  %54 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %13, align 8, !dbg !970
  %55 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %54), !dbg !972
  store %struct.AsyncSocket* %55, %struct.AsyncSocket** %6, align 8, !dbg !973
  br label %78, !dbg !973

; <label>:56:                                     ; preds = %50
  br label %57

; <label>:57:                                     ; preds = %56
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i32*, i32** %11, align 8, !dbg !974
  %60 = icmp ne i32* %59, null, !dbg !974
  br i1 %60, label %61, label %77, !dbg !976

; <label>:61:                                     ; preds = %58
  %62 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !977
  %63 = icmp ne %struct.AsyncTCPSocket* %62, null, !dbg !977
  br i1 %63, label %67, label %64, !dbg !980

; <label>:64:                                     ; preds = %61
  %65 = load i32, i32* %15, align 4, !dbg !981
  %66 = load i32*, i32** %11, align 8, !dbg !983
  store i32 %65, i32* %66, align 4, !dbg !984
  br label %76, !dbg !985

; <label>:67:                                     ; preds = %61
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %13, align 8, !dbg !986
  %69 = icmp ne %struct.AsyncTCPSocket* %68, null, !dbg !986
  br i1 %69, label %73, label %70, !dbg !989

; <label>:70:                                     ; preds = %67
  %71 = load i32, i32* %14, align 4, !dbg !990
  %72 = load i32*, i32** %11, align 8, !dbg !992
  store i32 %71, i32* %72, align 4, !dbg !993
  br label %75, !dbg !994

; <label>:73:                                     ; preds = %67
  %74 = load i32*, i32** %11, align 8, !dbg !995
  store i32 12, i32* %74, align 4, !dbg !997
  br label %75

; <label>:75:                                     ; preds = %73, %70
  br label %76

; <label>:76:                                     ; preds = %75, %64
  br label %77, !dbg !998

; <label>:77:                                     ; preds = %76, %58
  store %struct.AsyncSocket* null, %struct.AsyncSocket** %6, align 8, !dbg !999
  br label %78, !dbg !999

; <label>:78:                                     ; preds = %77, %53, %47, %32
  %79 = load %struct.AsyncSocket*, %struct.AsyncSocket** %6, align 8, !dbg !1000
  ret %struct.AsyncSocket* %79, !dbg !1000
}

; Function Attrs: nounwind uwtable
define %struct.AsyncSocket* @AsyncSocket_ListenVMCI(i32, i32, void (%struct.AsyncSocket*, i8*)*, i8*, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1001 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct.AsyncSocketPollParams*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca %struct.sockaddr_vm, align 4
  %14 = alloca %struct.AsyncTCPSocket*, align 8
  %15 = alloca i32, align 4
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1004, metadata !480), !dbg !1005
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1006, metadata !480), !dbg !1007
  store void (%struct.AsyncSocket*, i8*)* %2, void (%struct.AsyncSocket*, i8*)** %9, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %9, metadata !1008, metadata !480), !dbg !1009
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1010, metadata !480), !dbg !1011
  store %struct.AsyncSocketPollParams* %4, %struct.AsyncSocketPollParams** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %11, metadata !1012, metadata !480), !dbg !1013
  store i32* %5, i32** %12, align 8
  call void @llvm.dbg.declare(metadata i32** %12, metadata !1014, metadata !480), !dbg !1015
  call void @llvm.dbg.declare(metadata %struct.sockaddr_vm* %13, metadata !1016, metadata !480), !dbg !1017
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %14, metadata !1018, metadata !480), !dbg !1019
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1020, metadata !480), !dbg !1021
  store i32 -1, i32* %15, align 4, !dbg !1021
  %16 = bitcast %struct.sockaddr_vm* %13 to i8*, !dbg !1022
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 16, i32 4, i1 false), !dbg !1022
  %17 = call i32 @VMCISock_GetAFValueFd(i32* %15), !dbg !1023
  %18 = trunc i32 %17 to i16, !dbg !1023
  %19 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %13, i32 0, i32 0, !dbg !1024
  store i16 %18, i16* %19, align 4, !dbg !1025
  %20 = load i32, i32* %7, align 4, !dbg !1026
  %21 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %13, i32 0, i32 3, !dbg !1027
  store i32 %20, i32* %21, align 4, !dbg !1028
  %22 = load i32, i32* %8, align 4, !dbg !1029
  %23 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %13, i32 0, i32 2, !dbg !1030
  store i32 %22, i32* %23, align 4, !dbg !1031
  %24 = bitcast %struct.sockaddr_vm* %13 to %struct.sockaddr_storage*, !dbg !1032
  %25 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %9, align 8, !dbg !1033
  %26 = load i8*, i8** %10, align 8, !dbg !1034
  %27 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %11, align 8, !dbg !1035
  %28 = load i32*, i32** %12, align 8, !dbg !1036
  %29 = call %struct.AsyncTCPSocket* @AsyncTCPSocketListenImpl(%struct.sockaddr_storage* %24, i32 16, void (%struct.AsyncSocket*, i8*)* %25, i8* %26, %struct.AsyncSocketPollParams* %27, i32* %28), !dbg !1037
  store %struct.AsyncTCPSocket* %29, %struct.AsyncTCPSocket** %14, align 8, !dbg !1038
  %30 = load i32, i32* %15, align 4, !dbg !1039
  call void @VMCISock_ReleaseAFValueFd(i32 %30), !dbg !1040
  %31 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !1041
  %32 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %31), !dbg !1042
  ret %struct.AsyncSocket* %32, !dbg !1043
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @VMCISock_GetAFValueFd(i32*) #3 !dbg !1044 {
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  call void @llvm.dbg.declare(metadata i32** %3, metadata !1047, metadata !480), !dbg !1048
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1049, metadata !480), !dbg !1050
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1051, metadata !480), !dbg !1052
  store i32 -1, i32* %5, align 4, !dbg !1052
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1053, metadata !480), !dbg !1055
  %7 = call i32 @socket(i32 40, i32 2, i32 0) #8, !dbg !1056
  store i32 %7, i32* %6, align 4, !dbg !1055
  %8 = load i32, i32* %6, align 4, !dbg !1057
  %9 = icmp ne i32 %8, -1, !dbg !1059
  br i1 %9, label %10, label %18, !dbg !1060

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* %6, align 4, !dbg !1061
  %12 = call i32 @close(i32 %11), !dbg !1063
  %13 = load i32*, i32** %3, align 8, !dbg !1064
  %14 = icmp ne i32* %13, null, !dbg !1064
  br i1 %14, label %15, label %17, !dbg !1066

; <label>:15:                                     ; preds = %10
  %16 = load i32*, i32** %3, align 8, !dbg !1067
  store i32 -1, i32* %16, align 4, !dbg !1069
  br label %17, !dbg !1070

; <label>:17:                                     ; preds = %15, %10
  store i32 40, i32* %2, align 4, !dbg !1071
  br label %48, !dbg !1071

; <label>:18:                                     ; preds = %1
  %19 = call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i32 0), !dbg !1072
  store i32 %19, i32* %4, align 4, !dbg !1073
  %20 = load i32, i32* %4, align 4, !dbg !1074
  %21 = icmp slt i32 %20, 0, !dbg !1076
  br i1 %21, label %22, label %28, !dbg !1077

; <label>:22:                                     ; preds = %18
  %23 = call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i32 0, i32 0), i32 0), !dbg !1078
  store i32 %23, i32* %4, align 4, !dbg !1080
  %24 = load i32, i32* %4, align 4, !dbg !1081
  %25 = icmp slt i32 %24, 0, !dbg !1083
  br i1 %25, label %26, label %27, !dbg !1084

; <label>:26:                                     ; preds = %22
  store i32 -1, i32* %2, align 4, !dbg !1085
  br label %48, !dbg !1085

; <label>:27:                                     ; preds = %22
  br label %28, !dbg !1087

; <label>:28:                                     ; preds = %27, %18
  %29 = load i32, i32* %4, align 4, !dbg !1088
  %30 = call i32 (i32, i64, ...) @ioctl(i32 %29, i64 1976, i32* %5) #8, !dbg !1090
  %31 = icmp slt i32 %30, 0, !dbg !1091
  br i1 %31, label %32, label %33, !dbg !1092

; <label>:32:                                     ; preds = %28
  store i32 -1, i32* %5, align 4, !dbg !1093
  br label %33, !dbg !1095

; <label>:33:                                     ; preds = %32, %28
  %34 = load i32, i32* %5, align 4, !dbg !1096
  %35 = icmp slt i32 %34, 0, !dbg !1098
  br i1 %35, label %36, label %39, !dbg !1099

; <label>:36:                                     ; preds = %33
  %37 = load i32, i32* %4, align 4, !dbg !1100
  %38 = call i32 @close(i32 %37), !dbg !1102
  br label %46, !dbg !1103

; <label>:39:                                     ; preds = %33
  %40 = load i32*, i32** %3, align 8, !dbg !1104
  %41 = icmp ne i32* %40, null, !dbg !1104
  br i1 %41, label %42, label %45, !dbg !1104

; <label>:42:                                     ; preds = %39
  %43 = load i32, i32* %4, align 4, !dbg !1107
  %44 = load i32*, i32** %3, align 8, !dbg !1109
  store i32 %43, i32* %44, align 4, !dbg !1110
  br label %45, !dbg !1111

; <label>:45:                                     ; preds = %42, %39
  br label %46

; <label>:46:                                     ; preds = %45, %36
  %47 = load i32, i32* %5, align 4, !dbg !1112
  store i32 %47, i32* %2, align 4, !dbg !1113
  br label %48, !dbg !1113

; <label>:48:                                     ; preds = %46, %26, %17
  %49 = load i32, i32* %2, align 4, !dbg !1114
  ret i32 %49, !dbg !1114
}

; Function Attrs: nounwind uwtable
define internal %struct.AsyncTCPSocket* @AsyncTCPSocketListenImpl(%struct.sockaddr_storage*, i32, void (%struct.AsyncSocket*, i8*)*, i8*, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1115 {
  %7 = alloca %struct.AsyncTCPSocket*, align 8
  %8 = alloca %struct.sockaddr_storage*, align 8
  %9 = alloca i32, align 4
  %10 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct.AsyncSocketPollParams*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.sockaddr_storage* %0, %struct.sockaddr_storage** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %8, metadata !1118, metadata !480), !dbg !1119
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1120, metadata !480), !dbg !1121
  store void (%struct.AsyncSocket*, i8*)* %2, void (%struct.AsyncSocket*, i8*)** %10, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %10, metadata !1122, metadata !480), !dbg !1123
  store i8* %3, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1124, metadata !480), !dbg !1125
  store %struct.AsyncSocketPollParams* %4, %struct.AsyncSocketPollParams** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %12, metadata !1126, metadata !480), !dbg !1127
  store i32* %5, i32** %13, align 8
  call void @llvm.dbg.declare(metadata i32** %13, metadata !1128, metadata !480), !dbg !1129
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %14, metadata !1130, metadata !480), !dbg !1131
  %15 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %8, align 8, !dbg !1132
  %16 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %15, i32 0, i32 0, !dbg !1133
  %17 = load i16, i16* %16, align 8, !dbg !1133
  %18 = zext i16 %17 to i32, !dbg !1132
  %19 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %12, align 8, !dbg !1134
  %20 = load i32*, i32** %13, align 8, !dbg !1135
  %21 = call %struct.AsyncTCPSocket* @AsyncTCPSocketInit(i32 %18, %struct.AsyncSocketPollParams* %19, i32* %20), !dbg !1136
  store %struct.AsyncTCPSocket* %21, %struct.AsyncTCPSocket** %14, align 8, !dbg !1131
  %22 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !1137
  %23 = icmp ne %struct.AsyncTCPSocket* %22, null, !dbg !1139
  br i1 %23, label %24, label %43, !dbg !1140

; <label>:24:                                     ; preds = %6
  %25 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !1141
  %26 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %8, align 8, !dbg !1144
  %27 = load i32, i32* %9, align 4, !dbg !1145
  %28 = load i32*, i32** %13, align 8, !dbg !1146
  %29 = call signext i8 @AsyncTCPSocketBind(%struct.AsyncTCPSocket* %25, %struct.sockaddr_storage* %26, i32 %27, i32* %28), !dbg !1147
  %30 = sext i8 %29 to i32, !dbg !1147
  %31 = icmp ne i32 %30, 0, !dbg !1147
  br i1 %31, label %32, label %42, !dbg !1148

; <label>:32:                                     ; preds = %24
  %33 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !1149
  %34 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %10, align 8, !dbg !1150
  %35 = load i8*, i8** %11, align 8, !dbg !1151
  %36 = load i32*, i32** %13, align 8, !dbg !1152
  %37 = call signext i8 @AsyncTCPSocketListen(%struct.AsyncTCPSocket* %33, void (%struct.AsyncSocket*, i8*)* %34, i8* %35, i32* %36), !dbg !1153
  %38 = sext i8 %37 to i32, !dbg !1153
  %39 = icmp ne i32 %38, 0, !dbg !1153
  br i1 %39, label %40, label %42, !dbg !1154

; <label>:40:                                     ; preds = %32
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !1156
  store %struct.AsyncTCPSocket* %41, %struct.AsyncTCPSocket** %7, align 8, !dbg !1158
  br label %44, !dbg !1158

; <label>:42:                                     ; preds = %32, %24
  br label %43, !dbg !1159

; <label>:43:                                     ; preds = %42, %6
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %7, align 8, !dbg !1160
  br label %44, !dbg !1160

; <label>:44:                                     ; preds = %43, %40
  %45 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %7, align 8, !dbg !1161
  ret %struct.AsyncTCPSocket* %45, !dbg !1161
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @VMCISock_ReleaseAFValueFd(i32) #3 !dbg !1162 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !1165, metadata !480), !dbg !1166
  %3 = load i32, i32* %2, align 4, !dbg !1167
  %4 = icmp sge i32 %3, 0, !dbg !1169
  br i1 %4, label %5, label %8, !dbg !1170

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !1171
  %7 = call i32 @close(i32 %6), !dbg !1173
  br label %8, !dbg !1174

; <label>:8:                                      ; preds = %5, %1
  ret void, !dbg !1175
}

; Function Attrs: nounwind uwtable
define %struct.AsyncSocket* @AsyncSocket_Connect(i8*, i32, void (%struct.AsyncSocket*, i8*)*, i8*, i32, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1176 {
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.AsyncSocketPollParams*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.AsyncTCPSocket*, align 8
  store i8* %0, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1180, metadata !480), !dbg !1181
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1182, metadata !480), !dbg !1183
  store void (%struct.AsyncSocket*, i8*)* %2, void (%struct.AsyncSocket*, i8*)** %10, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %10, metadata !1184, metadata !480), !dbg !1185
  store i8* %3, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1186, metadata !480), !dbg !1187
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1188, metadata !480), !dbg !1189
  store %struct.AsyncSocketPollParams* %5, %struct.AsyncSocketPollParams** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %13, metadata !1190, metadata !480), !dbg !1191
  store i32* %6, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !1192, metadata !480), !dbg !1193
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1194, metadata !480), !dbg !1195
  store i32 6, i32* %15, align 4, !dbg !1195
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %16, metadata !1196, metadata !480), !dbg !1197
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %16, align 8, !dbg !1197
  %17 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %10, align 8, !dbg !1198
  %18 = icmp ne void (%struct.AsyncSocket*, i8*)* %17, null, !dbg !1198
  br i1 %18, label %19, label %22, !dbg !1200

; <label>:19:                                     ; preds = %7
  %20 = load i8*, i8** %8, align 8, !dbg !1201
  %21 = icmp ne i8* %20, null, !dbg !1201
  br i1 %21, label %24, label %22, !dbg !1203

; <label>:22:                                     ; preds = %19, %7
  store i32 5, i32* %15, align 4, !dbg !1204
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0)), !dbg !1206
  %23 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !1207
  br label %43, !dbg !1208

; <label>:24:                                     ; preds = %19
  %25 = load i8*, i8** %8, align 8, !dbg !1209
  %26 = load i32, i32* %9, align 4, !dbg !1210
  %27 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %10, align 8, !dbg !1211
  %28 = load i8*, i8** %11, align 8, !dbg !1212
  %29 = load i32, i32* %12, align 4, !dbg !1213
  %30 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %13, align 8, !dbg !1214
  %31 = call %struct.AsyncTCPSocket* @AsyncTCPSocketConnectImpl(i32 2, i8* %25, i32 %26, void (%struct.AsyncSocket*, i8*)* %27, i8* %28, i32 %29, %struct.AsyncSocketPollParams* %30, i32* %15), !dbg !1215
  store %struct.AsyncTCPSocket* %31, %struct.AsyncTCPSocket** %16, align 8, !dbg !1216
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !1217
  %33 = icmp ne %struct.AsyncTCPSocket* %32, null, !dbg !1217
  br i1 %33, label %42, label %34, !dbg !1219

; <label>:34:                                     ; preds = %24
  %35 = load i8*, i8** %8, align 8, !dbg !1220
  %36 = load i32, i32* %9, align 4, !dbg !1222
  %37 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %10, align 8, !dbg !1223
  %38 = load i8*, i8** %11, align 8, !dbg !1224
  %39 = load i32, i32* %12, align 4, !dbg !1225
  %40 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %13, align 8, !dbg !1226
  %41 = call %struct.AsyncTCPSocket* @AsyncTCPSocketConnectImpl(i32 10, i8* %35, i32 %36, void (%struct.AsyncSocket*, i8*)* %37, i8* %38, i32 %39, %struct.AsyncSocketPollParams* %40, i32* %15), !dbg !1227
  store %struct.AsyncTCPSocket* %41, %struct.AsyncTCPSocket** %16, align 8, !dbg !1228
  br label %42, !dbg !1229

; <label>:42:                                     ; preds = %34, %24
  br label %43, !dbg !1230

; <label>:43:                                     ; preds = %42, %22
  %44 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !1232
  %45 = icmp ne %struct.AsyncTCPSocket* %44, null, !dbg !1232
  br i1 %45, label %52, label %46, !dbg !1234

; <label>:46:                                     ; preds = %43
  %47 = load i32*, i32** %14, align 8, !dbg !1235
  %48 = icmp ne i32* %47, null, !dbg !1235
  br i1 %48, label %49, label %52, !dbg !1237

; <label>:49:                                     ; preds = %46
  %50 = load i32, i32* %15, align 4, !dbg !1238
  %51 = load i32*, i32** %14, align 8, !dbg !1240
  store i32 %50, i32* %51, align 4, !dbg !1241
  br label %52, !dbg !1242

; <label>:52:                                     ; preds = %49, %46, %43
  %53 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !1243
  %54 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %53), !dbg !1244
  ret %struct.AsyncSocket* %54, !dbg !1245
}

declare void @Warning(i8*, ...) #4

declare i32 @assert(...) #4

; Function Attrs: nounwind uwtable
define internal %struct.AsyncTCPSocket* @AsyncTCPSocketConnectImpl(i32, i8*, i32, void (%struct.AsyncSocket*, i8*)*, i8*, i32, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1246 {
  %9 = alloca %struct.AsyncTCPSocket*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.AsyncSocketPollParams*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca %struct.sockaddr_storage, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.AsyncTCPSocket*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1249, metadata !480), !dbg !1250
  store i8* %1, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1251, metadata !480), !dbg !1252
  store i32 %2, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1253, metadata !480), !dbg !1254
  store void (%struct.AsyncSocket*, i8*)* %3, void (%struct.AsyncSocket*, i8*)** %13, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %13, metadata !1255, metadata !480), !dbg !1256
  store i8* %4, i8** %14, align 8
  call void @llvm.dbg.declare(metadata i8** %14, metadata !1257, metadata !480), !dbg !1258
  store i32 %5, i32* %15, align 4
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1259, metadata !480), !dbg !1260
  store %struct.AsyncSocketPollParams* %6, %struct.AsyncSocketPollParams** %16, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %16, metadata !1261, metadata !480), !dbg !1262
  store i32* %7, i32** %17, align 8
  call void @llvm.dbg.declare(metadata i32** %17, metadata !1263, metadata !480), !dbg !1264
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %18, metadata !1265, metadata !480), !dbg !1266
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1267, metadata !480), !dbg !1268
  call void @llvm.dbg.declare(metadata i32* %20, metadata !1269, metadata !480), !dbg !1270
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %21, metadata !1271, metadata !480), !dbg !1272
  call void @llvm.dbg.declare(metadata i8** %22, metadata !1273, metadata !480), !dbg !1274
  store i8* null, i8** %22, align 8, !dbg !1274
  call void @llvm.dbg.declare(metadata i32* %23, metadata !1275, metadata !480), !dbg !1276
  %24 = load i8*, i8** %11, align 8, !dbg !1277
  %25 = load i32, i32* %12, align 4, !dbg !1278
  %26 = load i32, i32* %10, align 4, !dbg !1279
  %27 = call i32 @AsyncTCPSocketResolveAddr(i8* %24, i32 %25, i32 %26, i8 signext 0, %struct.sockaddr_storage* %18, i32* %23, i8** %22), !dbg !1280
  store i32 %27, i32* %19, align 4, !dbg !1281
  %28 = load i32, i32* %19, align 4, !dbg !1282
  %29 = icmp ne i32 0, %28, !dbg !1284
  br i1 %29, label %30, label %37, !dbg !1285

; <label>:30:                                     ; preds = %8
  %31 = load i32, i32* %10, align 4, !dbg !1286
  %32 = icmp eq i32 %31, 2, !dbg !1288
  %33 = select i1 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), !dbg !1286
  %34 = load i8*, i8** %11, align 8, !dbg !1289
  %35 = load i32, i32* %12, align 4, !dbg !1290
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.41, i32 0, i32 0), i8* %33, i8* %34, i32 %35), !dbg !1291
  store i32 15, i32* %20, align 4, !dbg !1292
  %36 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !1293
  br label %61, !dbg !1294

; <label>:37:                                     ; preds = %8
  %38 = load i32, i32* %10, align 4, !dbg !1295
  %39 = icmp eq i32 %38, 2, !dbg !1296
  %40 = select i1 %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), !dbg !1295
  %41 = load i8*, i8** %22, align 8, !dbg !1297
  %42 = load i8*, i8** %11, align 8, !dbg !1298
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.42, i32 0, i32 0), i8* %40, i8* %41, i8* %42), !dbg !1299
  %43 = load i8*, i8** %22, align 8, !dbg !1300
  call void @free(i8* %43) #8, !dbg !1301
  %44 = load i32, i32* %23, align 4, !dbg !1302
  %45 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %13, align 8, !dbg !1303
  %46 = load i8*, i8** %14, align 8, !dbg !1304
  %47 = load i32, i32* %15, align 4, !dbg !1305
  %48 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %16, align 8, !dbg !1306
  %49 = call %struct.AsyncTCPSocket* @AsyncTCPSocketConnect(%struct.sockaddr_storage* %18, i32 %44, void (%struct.AsyncSocket*, i8*)* %45, i8* %46, i32 %47, %struct.AsyncSocketPollParams* %48, i32* %20), !dbg !1307
  store %struct.AsyncTCPSocket* %49, %struct.AsyncTCPSocket** %21, align 8, !dbg !1308
  %50 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %21, align 8, !dbg !1309
  %51 = icmp ne %struct.AsyncTCPSocket* %50, null, !dbg !1309
  br i1 %51, label %59, label %52, !dbg !1311

; <label>:52:                                     ; preds = %37
  %53 = load i32, i32* %10, align 4, !dbg !1312
  %54 = icmp eq i32 %53, 2, !dbg !1314
  %55 = select i1 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), !dbg !1312
  %56 = load i32, i32* %20, align 4, !dbg !1315
  %57 = call i8* @AsyncSocket_MsgError(i32 %56), !dbg !1316
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.43, i32 0, i32 0), i8* %55, i8* %57), !dbg !1317
  %58 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !1318
  br label %61, !dbg !1319

; <label>:59:                                     ; preds = %37
  %60 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %21, align 8, !dbg !1320
  store %struct.AsyncTCPSocket* %60, %struct.AsyncTCPSocket** %9, align 8, !dbg !1321
  br label %68, !dbg !1321

; <label>:61:                                     ; preds = %52, %30
  %62 = load i32*, i32** %17, align 8, !dbg !1322
  %63 = icmp ne i32* %62, null, !dbg !1322
  br i1 %63, label %64, label %67, !dbg !1324

; <label>:64:                                     ; preds = %61
  %65 = load i32, i32* %20, align 4, !dbg !1325
  %66 = load i32*, i32** %17, align 8, !dbg !1327
  store i32 %65, i32* %66, align 4, !dbg !1328
  br label %67, !dbg !1329

; <label>:67:                                     ; preds = %64, %61
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %9, align 8, !dbg !1330
  br label %68, !dbg !1330

; <label>:68:                                     ; preds = %67, %59
  %69 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !1331
  ret %struct.AsyncTCPSocket* %69, !dbg !1331
}

; Function Attrs: nounwind uwtable
define %struct.AsyncSocket* @AsyncSocket_ConnectVMCI(i32, i32, void (%struct.AsyncSocket*, i8*)*, i8*, i32, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1333 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.AsyncSocketPollParams*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.sockaddr_vm, align 4
  %17 = alloca %struct.AsyncTCPSocket*, align 8
  store i32 %0, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1336, metadata !480), !dbg !1337
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1338, metadata !480), !dbg !1339
  store void (%struct.AsyncSocket*, i8*)* %2, void (%struct.AsyncSocket*, i8*)** %10, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %10, metadata !1340, metadata !480), !dbg !1341
  store i8* %3, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1342, metadata !480), !dbg !1343
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1344, metadata !480), !dbg !1345
  store %struct.AsyncSocketPollParams* %5, %struct.AsyncSocketPollParams** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %13, metadata !1346, metadata !480), !dbg !1347
  store i32* %6, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !1348, metadata !480), !dbg !1349
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1350, metadata !480), !dbg !1351
  store i32 -1, i32* %15, align 4, !dbg !1351
  call void @llvm.dbg.declare(metadata %struct.sockaddr_vm* %16, metadata !1352, metadata !480), !dbg !1353
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %17, metadata !1354, metadata !480), !dbg !1355
  %18 = bitcast %struct.sockaddr_vm* %16 to i8*, !dbg !1356
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 16, i32 4, i1 false), !dbg !1356
  %19 = call i32 @VMCISock_GetAFValueFd(i32* %15), !dbg !1357
  %20 = trunc i32 %19 to i16, !dbg !1357
  %21 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %16, i32 0, i32 0, !dbg !1358
  store i16 %20, i16* %21, align 4, !dbg !1359
  %22 = load i32, i32* %8, align 4, !dbg !1360
  %23 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %16, i32 0, i32 3, !dbg !1361
  store i32 %22, i32* %23, align 4, !dbg !1362
  %24 = load i32, i32* %9, align 4, !dbg !1363
  %25 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %16, i32 0, i32 2, !dbg !1364
  store i32 %24, i32* %25, align 4, !dbg !1365
  %26 = load i32, i32* %8, align 4, !dbg !1366
  %27 = load i32, i32* %9, align 4, !dbg !1367
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i32 0, i32 0), i32 %26, i32 %27), !dbg !1368
  %28 = bitcast %struct.sockaddr_vm* %16 to %struct.sockaddr_storage*, !dbg !1369
  %29 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %10, align 8, !dbg !1370
  %30 = load i8*, i8** %11, align 8, !dbg !1371
  %31 = load i32, i32* %12, align 4, !dbg !1372
  %32 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %13, align 8, !dbg !1373
  %33 = load i32*, i32** %14, align 8, !dbg !1374
  %34 = call %struct.AsyncTCPSocket* @AsyncTCPSocketConnect(%struct.sockaddr_storage* %28, i32 16, void (%struct.AsyncSocket*, i8*)* %29, i8* %30, i32 %31, %struct.AsyncSocketPollParams* %32, i32* %33), !dbg !1375
  store %struct.AsyncTCPSocket* %34, %struct.AsyncTCPSocket** %17, align 8, !dbg !1376
  %35 = load i32, i32* %15, align 4, !dbg !1377
  call void @VMCISock_ReleaseAFValueFd(i32 %35), !dbg !1378
  %36 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !1379
  %37 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %36), !dbg !1380
  ret %struct.AsyncSocket* %37, !dbg !1381
}

; Function Attrs: nounwind uwtable
define internal %struct.AsyncTCPSocket* @AsyncTCPSocketConnect(%struct.sockaddr_storage*, i32, void (%struct.AsyncSocket*, i8*)*, i8*, i32, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1382 {
  %8 = alloca %struct.AsyncTCPSocket*, align 8
  %9 = alloca %struct.sockaddr_storage*, align 8
  %10 = alloca i32, align 4
  %11 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.AsyncSocketPollParams*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.AsyncTCPSocket*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %struct.sockaddr_storage* %0, %struct.sockaddr_storage** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %9, metadata !1385, metadata !480), !dbg !1386
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1387, metadata !480), !dbg !1388
  store void (%struct.AsyncSocket*, i8*)* %2, void (%struct.AsyncSocket*, i8*)** %11, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %11, metadata !1389, metadata !480), !dbg !1390
  store i8* %3, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1391, metadata !480), !dbg !1392
  store i32 %4, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1393, metadata !480), !dbg !1394
  store %struct.AsyncSocketPollParams* %5, %struct.AsyncSocketPollParams** %14, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %14, metadata !1395, metadata !480), !dbg !1396
  store i32* %6, i32** %15, align 8
  call void @llvm.dbg.declare(metadata i32** %15, metadata !1397, metadata !480), !dbg !1398
  call void @llvm.dbg.declare(metadata i32* %16, metadata !1399, metadata !480), !dbg !1400
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1401, metadata !480), !dbg !1403
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %18, metadata !1404, metadata !480), !dbg !1405
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %18, align 8, !dbg !1405
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1406, metadata !480), !dbg !1407
  store i32 1, i32* %19, align 4, !dbg !1407
  call void @llvm.dbg.declare(metadata i32* %20, metadata !1408, metadata !480), !dbg !1409
  %21 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %11, align 8, !dbg !1410
  %22 = icmp ne void (%struct.AsyncSocket*, i8*)* %21, null, !dbg !1410
  br i1 %22, label %25, label %23, !dbg !1412

; <label>:23:                                     ; preds = %7
  store i32 5, i32* %19, align 4, !dbg !1413
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0)), !dbg !1415
  %24 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !1416
  br label %124, !dbg !1417

; <label>:25:                                     ; preds = %7
  %26 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %9, align 8, !dbg !1418
  %27 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %26, i32 0, i32 0, !dbg !1420
  %28 = load i16, i16* %27, align 8, !dbg !1420
  %29 = zext i16 %28 to i32, !dbg !1418
  %30 = call i32 @socket(i32 %29, i32 1, i32 0) #8, !dbg !1421
  store i32 %30, i32* %16, align 4, !dbg !1422
  %31 = icmp eq i32 %30, -1, !dbg !1423
  br i1 %31, label %32, label %39, !dbg !1424

; <label>:32:                                     ; preds = %25
  %33 = call i32* @__errno_location() #1, !dbg !1425
  %34 = load i32, i32* %33, align 4, !dbg !1428
  store i32 %34, i32* %20, align 4, !dbg !1429
  %35 = load i32, i32* %20, align 4, !dbg !1430
  %36 = load i32, i32* %20, align 4, !dbg !1431
  %37 = call i8* @Err_Errno2String(i32 %36), !dbg !1432
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.44, i32 0, i32 0), i32 %35, i8* %37), !dbg !1433
  store i32 6, i32* %19, align 4, !dbg !1434
  %38 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !1435
  br label %124, !dbg !1436

; <label>:39:                                     ; preds = %25
  %40 = load i32, i32* %16, align 4, !dbg !1437
  %41 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %14, align 8, !dbg !1439
  %42 = call %struct.AsyncTCPSocket* @AsyncTCPSocketAttachToFd(i32 %40, %struct.AsyncSocketPollParams* %41, i32* %19), !dbg !1440
  store %struct.AsyncTCPSocket* %42, %struct.AsyncTCPSocket** %18, align 8, !dbg !1441
  %43 = icmp eq %struct.AsyncTCPSocket* %42, null, !dbg !1442
  br i1 %43, label %44, label %48, !dbg !1443

; <label>:44:                                     ; preds = %39
  %45 = load i32, i32* %16, align 4, !dbg !1444
  %46 = call i32 @close(i32 %45), !dbg !1447
  %47 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !1448
  br label %124, !dbg !1449

; <label>:48:                                     ; preds = %39
  %49 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1450
  call void @AsyncTCPSocketLock(%struct.AsyncTCPSocket* %49), !dbg !1451
  %50 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1452
  %51 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %50, i32 0, i32 1, !dbg !1454
  %52 = load i32, i32* %51, align 8, !dbg !1454
  %53 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %9, align 8, !dbg !1455
  %54 = bitcast %struct.sockaddr_storage* %53 to %struct.sockaddr*, !dbg !1456
  %55 = load i32, i32* %10, align 4, !dbg !1457
  %56 = call i32 @connect(i32 %52, %struct.sockaddr* %54, i32 %55), !dbg !1458
  %57 = icmp ne i32 %56, 0, !dbg !1459
  br i1 %57, label %58, label %78, !dbg !1460

; <label>:58:                                     ; preds = %48
  %59 = call i32* @__errno_location() #1, !dbg !1461
  %60 = load i32, i32* %59, align 4, !dbg !1464
  %61 = icmp eq i32 %60, 115, !dbg !1465
  br i1 %61, label %62, label %67, !dbg !1466

; <label>:62:                                     ; preds = %58
  br label %63, !dbg !1467, !llvm.loop !1469

; <label>:63:                                     ; preds = %62
  br label %64, !dbg !1470

; <label>:64:                                     ; preds = %63
  %65 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1473
  %66 = call i32 (%struct.AsyncTCPSocket*, i8, i32, void (i8*)*, ...) @AsyncTCPSocketPollAdd(%struct.AsyncTCPSocket* %65, i8 signext 1, i32 8, void (i8*)* @AsyncTCPSocketConnectCallback), !dbg !1474
  store i32 %66, i32* %17, align 4, !dbg !1475
  br label %77, !dbg !1476

; <label>:67:                                     ; preds = %58
  %68 = call i32* @__errno_location() #1, !dbg !1477
  %69 = load i32, i32* %68, align 4, !dbg !1479
  store i32 %69, i32* %20, align 4, !dbg !1480
  %70 = load i32, i32* %20, align 4, !dbg !1481
  %71 = load i32, i32* %20, align 4, !dbg !1482
  %72 = call i8* @Err_Errno2String(i32 %71), !dbg !1483
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.45, i32 0, i32 0), i32 %70, i8* %72), !dbg !1484
  %73 = load i32, i32* %20, align 4, !dbg !1485
  %74 = icmp eq i32 %73, 101, !dbg !1486
  %75 = select i1 %74, i32 14, i32 6, !dbg !1487
  store i32 %75, i32* %19, align 4, !dbg !1488
  %76 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !1489
  br label %116, !dbg !1490

; <label>:77:                                     ; preds = %64
  br label %83, !dbg !1491

; <label>:78:                                     ; preds = %48
  br label %79, !dbg !1492, !llvm.loop !1494

; <label>:79:                                     ; preds = %78
  br label %80, !dbg !1495

; <label>:80:                                     ; preds = %79
  %81 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1498
  %82 = call i32 (%struct.AsyncTCPSocket*, i8, i32, void (i8*)*, ...) @AsyncTCPSocketPollAdd(%struct.AsyncTCPSocket* %81, i8 signext 0, i32 0, void (i8*)* @AsyncTCPSocketConnectCallback, i32 0), !dbg !1499
  store i32 %82, i32* %17, align 4, !dbg !1500
  br label %83

; <label>:83:                                     ; preds = %80, %77
  %84 = load i32, i32* %17, align 4, !dbg !1501
  %85 = icmp ne i32 %84, 0, !dbg !1503
  br i1 %85, label %86, label %96, !dbg !1504

; <label>:86:                                     ; preds = %83
  br label %87, !dbg !1505, !llvm.loop !1507

; <label>:87:                                     ; preds = %86
  %88 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1508
  %89 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %88), !dbg !1511
  %90 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %89), !dbg !1512
  %91 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1514
  %92 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %91), !dbg !1515
  %93 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %92), !dbg !1517
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %90, i32 %93), !dbg !1519
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.46, i32 0, i32 0)), !dbg !1521
  br label %94, !dbg !1523

; <label>:94:                                     ; preds = %87
  store i32 8, i32* %19, align 4, !dbg !1524
  %95 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !1525
  br label %116, !dbg !1526

; <label>:96:                                     ; preds = %83
  %97 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1527
  call void @AsyncTCPSocketSetState(%struct.AsyncTCPSocket* %97, i32 1), !dbg !1528
  %98 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %11, align 8, !dbg !1529
  %99 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1530
  %100 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %99, i32 0, i32 8, !dbg !1531
  store void (%struct.AsyncSocket*, i8*)* %98, void (%struct.AsyncSocket*, i8*)** %100, align 8, !dbg !1532
  %101 = load i8*, i8** %12, align 8, !dbg !1533
  %102 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1534
  %103 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %102, i32 0, i32 12, !dbg !1535
  store i8* %101, i8** %103, align 8, !dbg !1536
  %104 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1537
  %105 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %104, i32 0, i32 6, !dbg !1538
  %106 = bitcast %struct.sockaddr_storage* %105 to i8*, !dbg !1539
  %107 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %9, align 8, !dbg !1540
  %108 = bitcast %struct.sockaddr_storage* %107 to i8*, !dbg !1539
  %109 = load i32, i32* %10, align 4, !dbg !1541
  %110 = zext i32 %109 to i64, !dbg !1541
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %108, i64 %110, i32 8, i1 false), !dbg !1539
  %111 = load i32, i32* %10, align 4, !dbg !1542
  %112 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1543
  %113 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %112, i32 0, i32 7, !dbg !1544
  store i32 %111, i32* %113, align 8, !dbg !1545
  %114 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1546
  call void @AsyncTCPSocketUnlock(%struct.AsyncTCPSocket* %114), !dbg !1547
  %115 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1548
  store %struct.AsyncTCPSocket* %115, %struct.AsyncTCPSocket** %8, align 8, !dbg !1549
  br label %131, !dbg !1549

; <label>:116:                                    ; preds = %94, %67
  %117 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1550
  %118 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %117, i32 0, i32 2, !dbg !1551
  %119 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %118, align 8, !dbg !1551
  %120 = call i32 @SSL_Shutdown(%struct.SSLSockStruct* %119), !dbg !1552
  %121 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1553
  call void @AsyncTCPSocketUnlock(%struct.AsyncTCPSocket* %121), !dbg !1554
  %122 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %18, align 8, !dbg !1555
  %123 = bitcast %struct.AsyncTCPSocket* %122 to i8*, !dbg !1555
  call void @free(i8* %123) #8, !dbg !1556
  br label %124, !dbg !1556

; <label>:124:                                    ; preds = %116, %44, %32, %23
  %125 = load i32*, i32** %15, align 8, !dbg !1557
  %126 = icmp ne i32* %125, null, !dbg !1557
  br i1 %126, label %127, label %130, !dbg !1559

; <label>:127:                                    ; preds = %124
  %128 = load i32, i32* %19, align 4, !dbg !1560
  %129 = load i32*, i32** %15, align 8, !dbg !1562
  store i32 %128, i32* %129, align 4, !dbg !1563
  br label %130, !dbg !1564

; <label>:130:                                    ; preds = %127, %124
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %8, align 8, !dbg !1565
  br label %131, !dbg !1565

; <label>:131:                                    ; preds = %130, %96
  %132 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !1566
  ret %struct.AsyncTCPSocket* %132, !dbg !1566
}

; Function Attrs: nounwind uwtable
define %struct.AsyncSocket* @AsyncSocket_ConnectUnixDomain(i8*, void (%struct.AsyncSocket*, i8*)*, i8*, i32, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1567 {
  %7 = alloca %struct.AsyncSocket*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.AsyncSocketPollParams*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca %struct.sockaddr_un, align 2
  %15 = alloca %struct.AsyncTCPSocket*, align 8
  store i8* %0, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !1570, metadata !480), !dbg !1571
  store void (%struct.AsyncSocket*, i8*)* %1, void (%struct.AsyncSocket*, i8*)** %9, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %9, metadata !1572, metadata !480), !dbg !1573
  store i8* %2, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1574, metadata !480), !dbg !1575
  store i32 %3, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1576, metadata !480), !dbg !1577
  store %struct.AsyncSocketPollParams* %4, %struct.AsyncSocketPollParams** %12, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %12, metadata !1578, metadata !480), !dbg !1579
  store i32* %5, i32** %13, align 8
  call void @llvm.dbg.declare(metadata i32** %13, metadata !1580, metadata !480), !dbg !1581
  call void @llvm.dbg.declare(metadata %struct.sockaddr_un* %14, metadata !1582, metadata !480), !dbg !1591
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %15, metadata !1592, metadata !480), !dbg !1593
  %16 = bitcast %struct.sockaddr_un* %14 to i8*, !dbg !1594
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 110, i32 2, i1 false), !dbg !1594
  %17 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %14, i32 0, i32 0, !dbg !1595
  store i16 1, i16* %17, align 2, !dbg !1596
  %18 = load i8*, i8** %8, align 8, !dbg !1597
  %19 = call i64 @strlen(i8* %18) #10, !dbg !1599
  %20 = add i64 %19, 1, !dbg !1600
  %21 = icmp ugt i64 %20, 108, !dbg !1601
  br i1 %21, label %22, label %24, !dbg !1602

; <label>:22:                                     ; preds = %6
  %23 = load i8*, i8** %8, align 8, !dbg !1603
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i32 0, i32 0), i8* %23), !dbg !1605
  store %struct.AsyncSocket* null, %struct.AsyncSocket** %7, align 8, !dbg !1606
  br label %39, !dbg !1606

; <label>:24:                                     ; preds = %6
  %25 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %14, i32 0, i32 1, !dbg !1607
  %26 = getelementptr inbounds [108 x i8], [108 x i8]* %25, i32 0, i32 0, !dbg !1608
  %27 = load i8*, i8** %8, align 8, !dbg !1609
  %28 = call i8* @Str_Strcpy(i8* %26, i8* %27, i64 108), !dbg !1610
  %29 = load i8*, i8** %8, align 8, !dbg !1611
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.10, i32 0, i32 0), i8* %29), !dbg !1612
  %30 = bitcast %struct.sockaddr_un* %14 to %struct.sockaddr_storage*, !dbg !1613
  %31 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %9, align 8, !dbg !1614
  %32 = load i8*, i8** %10, align 8, !dbg !1615
  %33 = load i32, i32* %11, align 4, !dbg !1616
  %34 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %12, align 8, !dbg !1617
  %35 = load i32*, i32** %13, align 8, !dbg !1618
  %36 = call %struct.AsyncTCPSocket* @AsyncTCPSocketConnect(%struct.sockaddr_storage* %30, i32 110, void (%struct.AsyncSocket*, i8*)* %31, i8* %32, i32 %33, %struct.AsyncSocketPollParams* %34, i32* %35), !dbg !1619
  store %struct.AsyncTCPSocket* %36, %struct.AsyncTCPSocket** %15, align 8, !dbg !1620
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %15, align 8, !dbg !1621
  %38 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %37), !dbg !1622
  store %struct.AsyncSocket* %38, %struct.AsyncSocket** %7, align 8, !dbg !1623
  br label %39, !dbg !1623

; <label>:39:                                     ; preds = %24, %22
  %40 = load %struct.AsyncSocket*, %struct.AsyncSocket** %7, align 8, !dbg !1624
  ret %struct.AsyncSocket* %40, !dbg !1624
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #2

declare i8* @Str_Strcpy(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define %struct.AsyncSocket* @AsyncSocket_AttachToFd(i32, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1625 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.AsyncSocketPollParams*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.AsyncTCPSocket*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1628, metadata !480), !dbg !1629
  store %struct.AsyncSocketPollParams* %1, %struct.AsyncSocketPollParams** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %5, metadata !1630, metadata !480), !dbg !1631
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !1632, metadata !480), !dbg !1633
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %7, metadata !1634, metadata !480), !dbg !1635
  %8 = load i32, i32* %4, align 4, !dbg !1636
  %9 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %5, align 8, !dbg !1637
  %10 = load i32*, i32** %6, align 8, !dbg !1638
  %11 = call %struct.AsyncTCPSocket* @AsyncTCPSocketAttachToFd(i32 %8, %struct.AsyncSocketPollParams* %9, i32* %10), !dbg !1639
  store %struct.AsyncTCPSocket* %11, %struct.AsyncTCPSocket** %7, align 8, !dbg !1640
  %12 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %7, align 8, !dbg !1641
  %13 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %12), !dbg !1642
  ret %struct.AsyncSocket* %13, !dbg !1643
}

; Function Attrs: nounwind uwtable
define internal %struct.AsyncTCPSocket* @AsyncTCPSocketAttachToFd(i32, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1644 {
  %4 = alloca %struct.AsyncTCPSocket*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.AsyncSocketPollParams*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %struct.SSLSockStruct*, align 8
  %9 = alloca %struct.AsyncTCPSocket*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1647, metadata !480), !dbg !1648
  store %struct.AsyncSocketPollParams* %1, %struct.AsyncSocketPollParams** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %6, metadata !1649, metadata !480), !dbg !1650
  store i32* %2, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !1651, metadata !480), !dbg !1652
  call void @llvm.dbg.declare(metadata %struct.SSLSockStruct** %8, metadata !1653, metadata !480), !dbg !1654
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %9, metadata !1655, metadata !480), !dbg !1656
  %10 = load i32, i32* %5, align 4, !dbg !1657
  %11 = call %struct.SSLSockStruct* @SSL_New(i32 %10, i8 signext 0), !dbg !1659
  store %struct.SSLSockStruct* %11, %struct.SSLSockStruct** %8, align 8, !dbg !1660
  %12 = icmp ne %struct.SSLSockStruct* %11, null, !dbg !1660
  br i1 %12, label %19, label %13, !dbg !1661

; <label>:13:                                     ; preds = %3
  %14 = load i32*, i32** %7, align 8, !dbg !1662
  %15 = icmp ne i32* %14, null, !dbg !1662
  br i1 %15, label %16, label %18, !dbg !1665

; <label>:16:                                     ; preds = %13
  %17 = load i32*, i32** %7, align 8, !dbg !1666
  store i32 12, i32* %17, align 4, !dbg !1668
  br label %18, !dbg !1669

; <label>:18:                                     ; preds = %16, %13
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %4, align 8, !dbg !1670
  br label %31, !dbg !1670

; <label>:19:                                     ; preds = %3
  %20 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %8, align 8, !dbg !1671
  %21 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %6, align 8, !dbg !1672
  %22 = load i32*, i32** %7, align 8, !dbg !1673
  %23 = call %struct.AsyncTCPSocket* @AsyncTCPSocketAttachToSSLSock(%struct.SSLSockStruct* %20, %struct.AsyncSocketPollParams* %21, i32* %22), !dbg !1674
  store %struct.AsyncTCPSocket* %23, %struct.AsyncTCPSocket** %9, align 8, !dbg !1675
  %24 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !1676
  %25 = icmp ne %struct.AsyncTCPSocket* %24, null, !dbg !1676
  br i1 %25, label %26, label %28, !dbg !1678

; <label>:26:                                     ; preds = %19
  %27 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !1679
  store %struct.AsyncTCPSocket* %27, %struct.AsyncTCPSocket** %4, align 8, !dbg !1681
  br label %31, !dbg !1681

; <label>:28:                                     ; preds = %19
  %29 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %8, align 8, !dbg !1682
  %30 = call i32 @SSL_Shutdown(%struct.SSLSockStruct* %29), !dbg !1683
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %4, align 8, !dbg !1684
  br label %31, !dbg !1684

; <label>:31:                                     ; preds = %28, %26, %18
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !1685
  ret %struct.AsyncTCPSocket* %32, !dbg !1685
}

; Function Attrs: nounwind uwtable
define %struct.AsyncSocket* @AsyncSocket_AttachToSSLSock(%struct.SSLSockStruct*, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1686 {
  %4 = alloca %struct.SSLSockStruct*, align 8
  %5 = alloca %struct.AsyncSocketPollParams*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.SSLSockStruct* %0, %struct.SSLSockStruct** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.SSLSockStruct** %4, metadata !1689, metadata !480), !dbg !1690
  store %struct.AsyncSocketPollParams* %1, %struct.AsyncSocketPollParams** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %5, metadata !1691, metadata !480), !dbg !1692
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !1693, metadata !480), !dbg !1694
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %7, metadata !1695, metadata !480), !dbg !1696
  %8 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %4, align 8, !dbg !1697
  %9 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %5, align 8, !dbg !1698
  %10 = load i32*, i32** %6, align 8, !dbg !1699
  %11 = call %struct.AsyncTCPSocket* @AsyncTCPSocketAttachToSSLSock(%struct.SSLSockStruct* %8, %struct.AsyncSocketPollParams* %9, i32* %10), !dbg !1700
  store %struct.AsyncTCPSocket* %11, %struct.AsyncTCPSocket** %7, align 8, !dbg !1701
  %12 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %7, align 8, !dbg !1702
  %13 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %12), !dbg !1703
  ret %struct.AsyncSocket* %13, !dbg !1704
}

; Function Attrs: nounwind uwtable
define internal %struct.AsyncTCPSocket* @AsyncTCPSocketAttachToSSLSock(%struct.SSLSockStruct*, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !1705 {
  %4 = alloca %struct.AsyncTCPSocket*, align 8
  %5 = alloca %struct.SSLSockStruct*, align 8
  %6 = alloca %struct.AsyncSocketPollParams*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %struct.AsyncTCPSocket*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.SSLSockStruct* %0, %struct.SSLSockStruct** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.SSLSockStruct** %5, metadata !1708, metadata !480), !dbg !1709
  store %struct.AsyncSocketPollParams* %1, %struct.AsyncSocketPollParams** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %6, metadata !1710, metadata !480), !dbg !1711
  store i32* %2, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !1712, metadata !480), !dbg !1713
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %8, metadata !1714, metadata !480), !dbg !1715
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1716, metadata !480), !dbg !1717
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1718, metadata !480), !dbg !1719
  %12 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %5, align 8, !dbg !1720
  %13 = call i32 @SSL_GetFd(%struct.SSLSockStruct* %12), !dbg !1721
  store i32 %13, i32* %9, align 4, !dbg !1722
  %14 = load i32, i32* %9, align 4, !dbg !1723
  %15 = call i32 @AsyncTCPSocketMakeNonBlocking(i32 %14), !dbg !1725
  %16 = icmp ne i32 %15, 0, !dbg !1726
  br i1 %16, label %17, label %25, !dbg !1727

; <label>:17:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata i32* %11, metadata !1728, metadata !480), !dbg !1730
  %18 = call i32* @__errno_location() #1, !dbg !1731
  %19 = load i32, i32* %18, align 4, !dbg !1732
  store i32 %19, i32* %11, align 4, !dbg !1730
  %20 = load i32, i32* %9, align 4, !dbg !1733
  %21 = load i32, i32* %11, align 4, !dbg !1734
  %22 = load i32, i32* %11, align 4, !dbg !1735
  %23 = call i8* @Err_Errno2String(i32 %22), !dbg !1736
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.102, i32 0, i32 0), i32 %20, i32 %21, i8* %23), !dbg !1737
  store i32 1, i32* %10, align 4, !dbg !1738
  %24 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !1739
  br label %39, !dbg !1740

; <label>:25:                                     ; preds = %3
  %26 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %6, align 8, !dbg !1741
  %27 = call %struct.AsyncTCPSocket* @AsyncTCPSocketCreate(%struct.AsyncSocketPollParams* %26), !dbg !1742
  store %struct.AsyncTCPSocket* %27, %struct.AsyncTCPSocket** %8, align 8, !dbg !1743
  %28 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !1744
  call void @AsyncTCPSocketSetState(%struct.AsyncTCPSocket* %28, i32 2), !dbg !1745
  %29 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %5, align 8, !dbg !1746
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !1747
  %31 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %30, i32 0, i32 2, !dbg !1748
  store %struct.SSLSockStruct* %29, %struct.SSLSockStruct** %31, align 8, !dbg !1749
  %32 = load i32, i32* %9, align 4, !dbg !1750
  %33 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !1751
  %34 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %33, i32 0, i32 1, !dbg !1752
  store i32 %32, i32* %34, align 8, !dbg !1753
  %35 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %5, align 8, !dbg !1754
  call void @SSL_SetCloseOnShutdownFlag(%struct.SSLSockStruct* %35), !dbg !1755
  br label %36, !dbg !1756, !llvm.loop !1757

; <label>:36:                                     ; preds = %25
  br label %37, !dbg !1758

; <label>:37:                                     ; preds = %36
  %38 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !1761
  store %struct.AsyncTCPSocket* %38, %struct.AsyncTCPSocket** %4, align 8, !dbg !1762
  br label %46, !dbg !1762

; <label>:39:                                     ; preds = %17
  %40 = load i32*, i32** %7, align 8, !dbg !1763
  %41 = icmp ne i32* %40, null, !dbg !1763
  br i1 %41, label %42, label %45, !dbg !1765

; <label>:42:                                     ; preds = %39
  %43 = load i32, i32* %10, align 4, !dbg !1766
  %44 = load i32*, i32** %7, align 8, !dbg !1768
  store i32 %43, i32* %44, align 4, !dbg !1769
  br label %45, !dbg !1770

; <label>:45:                                     ; preds = %42, %39
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %4, align 8, !dbg !1771
  br label %46, !dbg !1771

; <label>:46:                                     ; preds = %45, %37
  %47 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !1772
  ret %struct.AsyncTCPSocket* %47, !dbg !1772
}

; Function Attrs: nounwind uwtable
define i32 @AsyncSocket_TCPDrainRecv(%struct.AsyncSocket*, i32) #0 !dbg !1774 {
  %3 = alloca %struct.AsyncSocket*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.AsyncTCPSocket*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %3, metadata !1775, metadata !480), !dbg !1776
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1777, metadata !480), !dbg !1778
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %5, metadata !1779, metadata !480), !dbg !1780
  %13 = load %struct.AsyncSocket*, %struct.AsyncSocket** %3, align 8, !dbg !1781
  %14 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %13), !dbg !1782
  store %struct.AsyncTCPSocket* %14, %struct.AsyncTCPSocket** %5, align 8, !dbg !1780
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1783, metadata !480), !dbg !1784
  call void @llvm.dbg.declare(metadata i8* %7, metadata !1785, metadata !480), !dbg !1786
  store i8 0, i8* %7, align 1, !dbg !1786
  call void @llvm.dbg.declare(metadata i8* %8, metadata !1787, metadata !480), !dbg !1788
  store i8 0, i8* %8, align 1, !dbg !1788
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1789, metadata !480), !dbg !1790
  store i32 0, i32* %9, align 4, !dbg !1790
  call void @llvm.dbg.declare(metadata i64* %10, metadata !1791, metadata !480), !dbg !1797
  %15 = call i64 @Hostinfo_SystemTimerMS(), !dbg !1798
  store i64 %15, i64* %10, align 8, !dbg !1797
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1799, metadata !480), !dbg !1800
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1801
  %17 = call signext i8 @AsyncTCPSocketIsLocked(%struct.AsyncTCPSocket* %16), !dbg !1803
  %18 = icmp ne i8 %17, 0, !dbg !1803
  br i1 %18, label %19, label %22, !dbg !1804

; <label>:19:                                     ; preds = %2
  %20 = call signext i8 @Poll_LockingEnabled(), !dbg !1805
  %21 = icmp ne i8 %20, 0, !dbg !1805
  br i1 %21, label %24, label %22, !dbg !1807

; <label>:22:                                     ; preds = %19, %2
  %23 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1808
  call void @AsyncTCPSocketLock(%struct.AsyncTCPSocket* %23), !dbg !1810
  store i8 1, i8* %8, align 1, !dbg !1811
  br label %24, !dbg !1812

; <label>:24:                                     ; preds = %22, %19
  %25 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1813
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %25), !dbg !1814
  br label %26, !dbg !1815

; <label>:26:                                     ; preds = %24, %130
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %12, metadata !1816, metadata !480), !dbg !1818
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %12, align 8, !dbg !1818
  %27 = load i32, i32* %9, align 4, !dbg !1819
  %28 = add i32 %27, 1, !dbg !1819
  store i32 %28, i32* %9, align 4, !dbg !1819
  %29 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1820
  %30 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %29, i32 0, i32 32, !dbg !1822
  %31 = load i8, i8* %30, align 2, !dbg !1822
  %32 = icmp ne i8 %31, 0, !dbg !1820
  br i1 %32, label %33, label %60, !dbg !1823

; <label>:33:                                     ; preds = %26
  br label %34, !dbg !1824, !llvm.loop !1826

; <label>:34:                                     ; preds = %33
  %35 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1827
  %36 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %35), !dbg !1830
  %37 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %36), !dbg !1831
  %38 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1833
  %39 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %38), !dbg !1834
  %40 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %39), !dbg !1836
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %37, i32 %40), !dbg !1838
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i32 0, i32 0)), !dbg !1840
  br label %41, !dbg !1842

; <label>:41:                                     ; preds = %34
  store i32 16, i32* %6, align 4, !dbg !1843
  %42 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1844
  call void @AsyncTCPSocketUnlock(%struct.AsyncTCPSocket* %42), !dbg !1845
  %43 = load i32, i32* %9, align 4, !dbg !1846
  %44 = call i32 @mssb32(i32 %43), !dbg !1847
  %45 = sdiv i32 %44, 2, !dbg !1848
  %46 = shl i32 100, %45, !dbg !1849
  %47 = load i32, i32* %4, align 4, !dbg !1850
  %48 = icmp slt i32 %46, %47, !dbg !1851
  br i1 %48, label %49, label %54, !dbg !1852

; <label>:49:                                     ; preds = %41
  %50 = load i32, i32* %9, align 4, !dbg !1853
  %51 = call i32 @mssb32(i32 %50), !dbg !1855
  %52 = sdiv i32 %51, 2, !dbg !1856
  %53 = shl i32 100, %52, !dbg !1857
  br label %56, !dbg !1858

; <label>:54:                                     ; preds = %41
  %55 = load i32, i32* %4, align 4, !dbg !1859
  br label %56, !dbg !1861

; <label>:56:                                     ; preds = %54, %49
  %57 = phi i32 [ %53, %49 ], [ %55, %54 ], !dbg !1862
  %58 = sext i32 %57 to i64, !dbg !1864
  call void @Util_Usleep(i64 %58), !dbg !1865
  %59 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1866
  call void @AsyncTCPSocketLock(%struct.AsyncTCPSocket* %59), !dbg !1867
  br label %103, !dbg !1868

; <label>:60:                                     ; preds = %26
  %61 = load i8, i8* %7, align 1, !dbg !1869
  %62 = icmp ne i8 %61, 0, !dbg !1869
  br i1 %62, label %67, label %63, !dbg !1871

; <label>:63:                                     ; preds = %60
  %64 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1872
  call void @AsyncTCPSocketCancelRecvCb(%struct.AsyncTCPSocket* %64), !dbg !1874
  %65 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1875
  %66 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %65, i32 0, i32 19, !dbg !1876
  store i8 1, i8* %66, align 8, !dbg !1877
  store i8 1, i8* %7, align 1, !dbg !1878
  br label %67, !dbg !1879

; <label>:67:                                     ; preds = %63, %60
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1880
  %69 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %68, i32 0, i32 33, !dbg !1881
  %70 = load i32, i32* %69, align 4, !dbg !1882
  %71 = add i32 %70, 1, !dbg !1882
  store i32 %71, i32* %69, align 4, !dbg !1882
  %72 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1883
  %73 = call i32 @AsyncTCPSocketPoll(%struct.AsyncTCPSocket* %72, i8 signext 1, i32 0, %struct.AsyncTCPSocket** %12), !dbg !1884
  store i32 %73, i32* %6, align 4, !dbg !1885
  %74 = load i32, i32* %6, align 4, !dbg !1886
  %75 = icmp ne i32 %74, 0, !dbg !1888
  br i1 %75, label %76, label %89, !dbg !1889

; <label>:76:                                     ; preds = %67
  %77 = load i32, i32* %6, align 4, !dbg !1890
  %78 = icmp eq i32 %77, 1, !dbg !1893
  br i1 %78, label %79, label %88, !dbg !1894

; <label>:79:                                     ; preds = %76
  br label %80, !dbg !1895, !llvm.loop !1897

; <label>:80:                                     ; preds = %79
  %81 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1898
  %82 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %81), !dbg !1901
  %83 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %82), !dbg !1902
  %84 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1904
  %85 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %84), !dbg !1905
  %86 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %85), !dbg !1907
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %83, i32 %86), !dbg !1909
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__FUNCTION__.AsyncSocket_TCPDrainRecv, i32 0, i32 0)), !dbg !1911
  br label %87, !dbg !1913

; <label>:87:                                     ; preds = %80
  br label %88, !dbg !1914

; <label>:88:                                     ; preds = %87, %76
  br label %98, !dbg !1915

; <label>:89:                                     ; preds = %67
  %90 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1916
  %91 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %90), !dbg !1919
  %92 = sext i8 %91 to i32, !dbg !1919
  %93 = icmp eq i32 %92, 2, !dbg !1920
  br i1 %93, label %94, label %97, !dbg !1919

; <label>:94:                                     ; preds = %89
  %95 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1921
  %96 = call i32 @AsyncTCPSocketFillRecvBuffer(%struct.AsyncTCPSocket* %95), !dbg !1923
  store i32 %96, i32* %6, align 4, !dbg !1924
  br label %97, !dbg !1925

; <label>:97:                                     ; preds = %94, %89
  br label %98

; <label>:98:                                     ; preds = %97, %88
  %99 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1926
  %100 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %99, i32 0, i32 33, !dbg !1927
  %101 = load i32, i32* %100, align 4, !dbg !1928
  %102 = add i32 %101, -1, !dbg !1928
  store i32 %102, i32* %100, align 4, !dbg !1928
  br label %103, !dbg !1926

; <label>:103:                                    ; preds = %98, %56
  %104 = load i32, i32* %6, align 4, !dbg !1929
  %105 = icmp eq i32 %104, 4, !dbg !1931
  br i1 %105, label %116, label %106, !dbg !1932

; <label>:106:                                    ; preds = %103
  %107 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1933
  %108 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %107), !dbg !1934
  %109 = sext i8 %108 to i32, !dbg !1934
  %110 = icmp eq i32 %109, 4, !dbg !1935
  br i1 %110, label %116, label %111, !dbg !1936

; <label>:111:                                    ; preds = %106
  %112 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1937
  %113 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %112, i32 0, i32 19, !dbg !1938
  %114 = load i8, i8* %113, align 8, !dbg !1938
  %115 = icmp ne i8 %114, 0, !dbg !1937
  br i1 %115, label %117, label %116, !dbg !1939

; <label>:116:                                    ; preds = %111, %106, %103
  store i32 0, i32* %6, align 4, !dbg !1941
  br label %139, !dbg !1943

; <label>:117:                                    ; preds = %111
  %118 = load i32, i32* %6, align 4, !dbg !1944
  %119 = icmp eq i32 %118, 1, !dbg !1946
  br i1 %119, label %120, label %121, !dbg !1947

; <label>:120:                                    ; preds = %117
  br label %139, !dbg !1948

; <label>:121:                                    ; preds = %117
  %122 = call i64 @Hostinfo_SystemTimerMS(), !dbg !1950
  store i64 %122, i64* %11, align 8, !dbg !1951
  %123 = load i64, i64* %11, align 8, !dbg !1952
  %124 = load i64, i64* %10, align 8, !dbg !1954
  %125 = load i32, i32* %4, align 4, !dbg !1955
  %126 = sext i32 %125 to i64, !dbg !1955
  %127 = add nsw i64 %124, %126, !dbg !1956
  %128 = icmp sge i64 %123, %127, !dbg !1957
  br i1 %128, label %129, label %130, !dbg !1958

; <label>:129:                                    ; preds = %121
  store i32 2, i32* %6, align 4, !dbg !1959
  br label %139, !dbg !1961

; <label>:130:                                    ; preds = %121
  %131 = load i64, i64* %11, align 8, !dbg !1962
  %132 = load i64, i64* %10, align 8, !dbg !1963
  %133 = sub nsw i64 %131, %132, !dbg !1964
  %134 = load i32, i32* %4, align 4, !dbg !1965
  %135 = sext i32 %134 to i64, !dbg !1965
  %136 = sub nsw i64 %135, %133, !dbg !1965
  %137 = trunc i64 %136 to i32, !dbg !1965
  store i32 %137, i32* %4, align 4, !dbg !1965
  %138 = load i64, i64* %11, align 8, !dbg !1966
  store i64 %138, i64* %10, align 8, !dbg !1967
  br label %26, !dbg !1968, !llvm.loop !1970

; <label>:139:                                    ; preds = %129, %120, %116
  %140 = load i8, i8* %7, align 1, !dbg !1971
  %141 = icmp ne i8 %140, 0, !dbg !1971
  br i1 %141, label %142, label %155, !dbg !1973

; <label>:142:                                    ; preds = %139
  %143 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1974
  %144 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %143, i32 0, i32 19, !dbg !1976
  store i8 0, i8* %144, align 8, !dbg !1977
  %145 = load i32, i32* %6, align 4, !dbg !1978
  %146 = icmp eq i32 %145, 2, !dbg !1980
  br i1 %146, label %147, label %154, !dbg !1981

; <label>:147:                                    ; preds = %142
  %148 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1982
  %149 = call i32 @AsyncTCPSocketRegisterRecvCb(%struct.AsyncTCPSocket* %148), !dbg !1984
  store i32 %149, i32* %6, align 4, !dbg !1985
  %150 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1986
  %151 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %150), !dbg !1987
  %152 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %151, i32 0, i32 1, !dbg !1988
  %153 = load i32, i32* %152, align 4, !dbg !1988
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.14, i32 0, i32 0), i32 %153), !dbg !1989
  br label %154, !dbg !1990

; <label>:154:                                    ; preds = %147, %142
  br label %155, !dbg !1991

; <label>:155:                                    ; preds = %154, %139
  %156 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1992
  %157 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %156, i32 0, i32 19, !dbg !1994
  %158 = load i8, i8* %157, align 8, !dbg !1994
  %159 = icmp ne i8 %158, 0, !dbg !1992
  br i1 %159, label %164, label %160, !dbg !1995

; <label>:160:                                    ; preds = %155
  %161 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !1996
  %162 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %161, i32 0, i32 0, !dbg !1998
  %163 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %162, i32 0, i32 8, !dbg !1999
  store i8* null, i8** %163, align 8, !dbg !2000
  br label %164, !dbg !2001

; <label>:164:                                    ; preds = %160, %155
  %165 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !2002
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %165), !dbg !2003
  %166 = load i8, i8* %8, align 1, !dbg !2004
  %167 = icmp ne i8 %166, 0, !dbg !2004
  br i1 %167, label %168, label %170, !dbg !2006

; <label>:168:                                    ; preds = %164
  %169 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !2007
  call void @AsyncTCPSocketUnlock(%struct.AsyncTCPSocket* %169), !dbg !2009
  br label %170, !dbg !2010

; <label>:170:                                    ; preds = %168, %164
  %171 = load i32, i32* %6, align 4, !dbg !2011
  ret i32 %171, !dbg !2012
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket*) #3 !dbg !2013 {
  %2 = alloca %struct.AsyncSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %2, metadata !2016, metadata !480), !dbg !2017
  %3 = load %struct.AsyncSocket*, %struct.AsyncSocket** %2, align 8, !dbg !2018
  %4 = bitcast %struct.AsyncSocket* %3 to %struct.AsyncTCPSocket*, !dbg !2019
  ret %struct.AsyncTCPSocket* %4, !dbg !2020
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @Hostinfo_SystemTimerMS() #3 !dbg !2021 {
  %1 = call i64 @Hostinfo_SystemTimerNS(), !dbg !2025
  %2 = udiv i64 %1, 1000000, !dbg !2026
  ret i64 %2, !dbg !2027
}

; Function Attrs: inlinehint nounwind uwtable
define internal signext i8 @AsyncTCPSocketIsLocked(%struct.AsyncTCPSocket*) #3 !dbg !2028 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !2031, metadata !480), !dbg !2032
  %3 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2033
  %4 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %3), !dbg !2034
  %5 = call signext i8 @AsyncSocketIsLocked(%struct.AsyncSocket* %4), !dbg !2035
  ret i8 %5, !dbg !2037
}

declare signext i8 @Poll_LockingEnabled() #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @AsyncTCPSocketLock(%struct.AsyncTCPSocket*) #3 !dbg !2038 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !2041, metadata !480), !dbg !2042
  %3 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2043
  %4 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %3), !dbg !2044
  call void @AsyncSocketLock(%struct.AsyncSocket* %4), !dbg !2045
  ret void, !dbg !2047
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket*) #3 !dbg !2048 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !2049, metadata !480), !dbg !2050
  %3 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2051
  %4 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %3), !dbg !2052
  call void @AsyncSocketAddRef(%struct.AsyncSocket* %4), !dbg !2053
  ret void, !dbg !2055
}

declare i32 @AsyncSocket_GetID(%struct.AsyncSocket*) #4

declare i32 @AsyncSocket_GetFd(%struct.AsyncSocket*) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @AsyncTCPSocketUnlock(%struct.AsyncTCPSocket*) #3 !dbg !2056 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !2057, metadata !480), !dbg !2058
  %3 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2059
  %4 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %3), !dbg !2060
  call void @AsyncSocketUnlock(%struct.AsyncSocket* %4), !dbg !2061
  ret void, !dbg !2063
}

declare void @Util_Usleep(i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @mssb32(i32) #3 !dbg !2064 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2069, metadata !480), !dbg !2070
  %3 = load i32, i32* %2, align 4, !dbg !2071
  %4 = call i32 @mssb32_0(i32 %3), !dbg !2072
  %5 = add nsw i32 %4, 1, !dbg !2073
  ret i32 %5, !dbg !2074
}

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketCancelRecvCb(%struct.AsyncTCPSocket*) #0 !dbg !2075 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  %3 = alloca i8, align 1
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !2076, metadata !480), !dbg !2077
  %4 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2078
  %5 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %4, i32 0, i32 20, !dbg !2080
  %6 = load i8, i8* %5, align 1, !dbg !2080
  %7 = icmp ne i8 %6, 0, !dbg !2078
  br i1 %7, label %8, label %16, !dbg !2081

; <label>:8:                                      ; preds = %1
  %9 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2082
  %10 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2084
  %11 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %10, i32 0, i32 15, !dbg !2085
  %12 = load void (i8*)*, void (i8*)** %11, align 8, !dbg !2085
  %13 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %9, i8 signext 0, i32 0, void (i8*)* %12), !dbg !2086
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2087
  %15 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %14, i32 0, i32 20, !dbg !2088
  store i8 0, i8* %15, align 1, !dbg !2089
  br label %16, !dbg !2090

; <label>:16:                                     ; preds = %8, %1
  %17 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2091
  %18 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %17, i32 0, i32 19, !dbg !2093
  %19 = load i8, i8* %18, align 8, !dbg !2093
  %20 = icmp ne i8 %19, 0, !dbg !2091
  br i1 %20, label %21, label %31, !dbg !2094

; <label>:21:                                     ; preds = %16
  call void @llvm.dbg.declare(metadata i8* %3, metadata !2095, metadata !480), !dbg !2097
  br label %22, !dbg !2098, !llvm.loop !2099

; <label>:22:                                     ; preds = %21
  br label %23, !dbg !2100

; <label>:23:                                     ; preds = %22
  %24 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2103
  %25 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2104
  %26 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %25, i32 0, i32 15, !dbg !2105
  %27 = load void (i8*)*, void (i8*)** %26, align 8, !dbg !2105
  %28 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %24, i8 signext 1, i32 5, void (i8*)* %27), !dbg !2106
  store i8 %28, i8* %3, align 1, !dbg !2107
  %29 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2108
  %30 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %29, i32 0, i32 19, !dbg !2109
  store i8 0, i8* %30, align 8, !dbg !2110
  br label %31, !dbg !2111

; <label>:31:                                     ; preds = %23, %16
  ret void, !dbg !2112
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketPoll(%struct.AsyncTCPSocket*, i8 signext, i32, %struct.AsyncTCPSocket**) #0 !dbg !2113 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.AsyncTCPSocket*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca %struct.AsyncTCPSocket**, align 8
  %10 = alloca [2 x %struct.AsyncTCPSocket*], align 16
  %11 = alloca [2 x %struct.pollfd], align 16
  %12 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %6, metadata !2116, metadata !480), !dbg !2117
  store i8 %1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !2118, metadata !480), !dbg !2119
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2120, metadata !480), !dbg !2121
  store %struct.AsyncTCPSocket** %3, %struct.AsyncTCPSocket*** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket*** %9, metadata !2122, metadata !480), !dbg !2123
  call void @llvm.dbg.declare(metadata [2 x %struct.AsyncTCPSocket*]* %10, metadata !2124, metadata !480), !dbg !2128
  call void @llvm.dbg.declare(metadata [2 x %struct.pollfd]* %11, metadata !2129, metadata !480), !dbg !2131
  call void @llvm.dbg.declare(metadata i32* %12, metadata !2132, metadata !480), !dbg !2133
  store i32 0, i32* %12, align 4, !dbg !2133
  %13 = load i8, i8* %7, align 1, !dbg !2134
  %14 = sext i8 %13 to i32, !dbg !2134
  %15 = icmp ne i32 %14, 0, !dbg !2134
  br i1 %15, label %16, label %81, !dbg !2136

; <label>:16:                                     ; preds = %4
  %17 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2137
  %18 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %17, i32 0, i32 1, !dbg !2139
  %19 = load i32, i32* %18, align 8, !dbg !2139
  %20 = icmp eq i32 %19, -1, !dbg !2140
  br i1 %20, label %21, label %81, !dbg !2141

; <label>:21:                                     ; preds = %16
  %22 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2142
  %23 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %22, i32 0, i32 34, !dbg !2145
  %24 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %23, align 8, !dbg !2145
  %25 = icmp ne %struct.AsyncTCPSocket* %24, null, !dbg !2142
  br i1 %25, label %40, label %26, !dbg !2146

; <label>:26:                                     ; preds = %21
  %27 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2147
  %28 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %27, i32 0, i32 35, !dbg !2149
  %29 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %28, align 8, !dbg !2149
  %30 = icmp ne %struct.AsyncTCPSocket* %29, null, !dbg !2147
  br i1 %30, label %40, label %31, !dbg !2150

; <label>:31:                                     ; preds = %26
  br label %32, !dbg !2151, !llvm.loop !2153

; <label>:32:                                     ; preds = %31
  %33 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2154
  %34 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %33), !dbg !2157
  %35 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %34), !dbg !2158
  %36 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2160
  %37 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %36), !dbg !2161
  %38 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %37), !dbg !2163
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %35, i32 %38), !dbg !2165
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.AsyncTCPSocketPoll, i32 0, i32 0)), !dbg !2167
  br label %39, !dbg !2169

; <label>:39:                                     ; preds = %32
  store i32 1, i32* %5, align 4, !dbg !2170
  br label %97, !dbg !2170

; <label>:40:                                     ; preds = %26, %21
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2171
  %42 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %41, i32 0, i32 35, !dbg !2173
  %43 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %42, align 8, !dbg !2173
  %44 = icmp ne %struct.AsyncTCPSocket* %43, null, !dbg !2171
  br i1 %44, label %45, label %60, !dbg !2174

; <label>:45:                                     ; preds = %40
  %46 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2175
  %47 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %46, i32 0, i32 35, !dbg !2177
  %48 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %47, align 8, !dbg !2177
  %49 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %48, i32 0, i32 1, !dbg !2178
  %50 = load i32, i32* %49, align 8, !dbg !2178
  %51 = icmp ne i32 %50, -1, !dbg !2179
  br i1 %51, label %52, label %60, !dbg !2180

; <label>:52:                                     ; preds = %45
  %53 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2181
  %54 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %53, i32 0, i32 35, !dbg !2183
  %55 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %54, align 8, !dbg !2183
  %56 = load i32, i32* %12, align 4, !dbg !2184
  %57 = add nsw i32 %56, 1, !dbg !2184
  store i32 %57, i32* %12, align 4, !dbg !2184
  %58 = sext i32 %56 to i64, !dbg !2185
  %59 = getelementptr inbounds [2 x %struct.AsyncTCPSocket*], [2 x %struct.AsyncTCPSocket*]* %10, i64 0, i64 %58, !dbg !2185
  store %struct.AsyncTCPSocket* %55, %struct.AsyncTCPSocket** %59, align 8, !dbg !2186
  br label %60, !dbg !2187

; <label>:60:                                     ; preds = %52, %45, %40
  %61 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2188
  %62 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %61, i32 0, i32 34, !dbg !2190
  %63 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %62, align 8, !dbg !2190
  %64 = icmp ne %struct.AsyncTCPSocket* %63, null, !dbg !2188
  br i1 %64, label %65, label %80, !dbg !2191

; <label>:65:                                     ; preds = %60
  %66 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2192
  %67 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %66, i32 0, i32 34, !dbg !2194
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %67, align 8, !dbg !2194
  %69 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %68, i32 0, i32 1, !dbg !2195
  %70 = load i32, i32* %69, align 8, !dbg !2195
  %71 = icmp ne i32 %70, -1, !dbg !2196
  br i1 %71, label %72, label %80, !dbg !2197

; <label>:72:                                     ; preds = %65
  %73 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2198
  %74 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %73, i32 0, i32 34, !dbg !2200
  %75 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %74, align 8, !dbg !2200
  %76 = load i32, i32* %12, align 4, !dbg !2201
  %77 = add nsw i32 %76, 1, !dbg !2201
  store i32 %77, i32* %12, align 4, !dbg !2201
  %78 = sext i32 %76 to i64, !dbg !2202
  %79 = getelementptr inbounds [2 x %struct.AsyncTCPSocket*], [2 x %struct.AsyncTCPSocket*]* %10, i64 0, i64 %78, !dbg !2202
  store %struct.AsyncTCPSocket* %75, %struct.AsyncTCPSocket** %79, align 8, !dbg !2203
  br label %80, !dbg !2204

; <label>:80:                                     ; preds = %72, %65, %60
  br label %87, !dbg !2205

; <label>:81:                                     ; preds = %16, %4
  %82 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2206
  %83 = load i32, i32* %12, align 4, !dbg !2208
  %84 = add nsw i32 %83, 1, !dbg !2208
  store i32 %84, i32* %12, align 4, !dbg !2208
  %85 = sext i32 %83 to i64, !dbg !2209
  %86 = getelementptr inbounds [2 x %struct.AsyncTCPSocket*], [2 x %struct.AsyncTCPSocket*]* %10, i64 0, i64 %85, !dbg !2209
  store %struct.AsyncTCPSocket* %82, %struct.AsyncTCPSocket** %86, align 8, !dbg !2210
  br label %87

; <label>:87:                                     ; preds = %81, %80
  %88 = getelementptr inbounds [2 x %struct.AsyncTCPSocket*], [2 x %struct.AsyncTCPSocket*]* %10, i32 0, i32 0, !dbg !2211
  %89 = load i32, i32* %12, align 4, !dbg !2212
  %90 = getelementptr inbounds [2 x %struct.pollfd], [2 x %struct.pollfd]* %11, i32 0, i32 0, !dbg !2213
  %91 = bitcast %struct.pollfd* %90 to i8*, !dbg !2213
  %92 = load i8, i8* %7, align 1, !dbg !2214
  %93 = load i32, i32* %8, align 4, !dbg !2215
  %94 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2216
  %95 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !2217
  %96 = call i32 @AsyncTCPSocketPollWork(%struct.AsyncTCPSocket** %88, i32 %89, i8* %91, i8 signext %92, i32 %93, %struct.AsyncTCPSocket* %94, %struct.AsyncTCPSocket** %95), !dbg !2218
  store i32 %96, i32* %5, align 4, !dbg !2219
  br label %97, !dbg !2219

; <label>:97:                                     ; preds = %87, %39
  %98 = load i32, i32* %5, align 4, !dbg !2220
  ret i32 %98, !dbg !2220
}

; Function Attrs: inlinehint nounwind uwtable
define internal signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket*) #3 !dbg !2221 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !2222, metadata !480), !dbg !2223
  %3 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2224
  %4 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %3), !dbg !2225
  %5 = call i32 @AsyncSocketGetState(%struct.AsyncSocket* %4), !dbg !2226
  %6 = trunc i32 %5 to i8, !dbg !2228
  ret i8 %6, !dbg !2229
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketFillRecvBuffer(%struct.AsyncTCPSocket*) #0 !dbg !2230 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !2233, metadata !480), !dbg !2234
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2235, metadata !480), !dbg !2236
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2237, metadata !480), !dbg !2238
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2239, metadata !480), !dbg !2240
  store i32 0, i32* %6, align 4, !dbg !2240
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2241, metadata !480), !dbg !2242
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2243, metadata !480), !dbg !2244
  store i32 0, i32* %8, align 4, !dbg !2244
  %10 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2245
  %11 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %10, i32 0, i32 0, !dbg !2246
  %12 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %11, i32 0, i32 10, !dbg !2247
  %13 = load i32, i32* %12, align 4, !dbg !2247
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2248
  %15 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %14, i32 0, i32 0, !dbg !2249
  %16 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %15, i32 0, i32 9, !dbg !2250
  %17 = load i32, i32* %16, align 8, !dbg !2250
  %18 = sub nsw i32 %13, %17, !dbg !2251
  store i32 %18, i32* %5, align 4, !dbg !2252
  %19 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2253
  %20 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %19, i32 0, i32 0, !dbg !2255
  %21 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %20, i32 0, i32 8, !dbg !2256
  %22 = load i8*, i8** %21, align 8, !dbg !2256
  %23 = icmp ne i8* %22, null, !dbg !2253
  br i1 %23, label %28, label %24, !dbg !2257

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* %5, align 4, !dbg !2258
  %26 = icmp eq i32 %25, 0, !dbg !2260
  br i1 %26, label %27, label %28, !dbg !2261

; <label>:27:                                     ; preds = %24
  store i32 0, i32* %2, align 4, !dbg !2262
  br label %171, !dbg !2262

; <label>:28:                                     ; preds = %24, %1
  %29 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2264
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %29), !dbg !2265
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2266
  %31 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %30, i32 0, i32 32, !dbg !2267
  store i8 1, i8* %31, align 2, !dbg !2268
  br label %32, !dbg !2269, !llvm.loop !2270

; <label>:32:                                     ; preds = %162, %28
  %33 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2271
  %34 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %33, i32 0, i32 36, !dbg !2274
  %35 = getelementptr inbounds %struct.anon, %struct.anon* %34, i32 0, i32 0, !dbg !2275
  %36 = load i8, i8* %35, align 8, !dbg !2275
  %37 = icmp ne i8 %36, 0, !dbg !2271
  br i1 %37, label %38, label %67, !dbg !2276

; <label>:38:                                     ; preds = %32
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2277, metadata !480), !dbg !2279
  %39 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2280
  %40 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %39, i32 0, i32 2, !dbg !2281
  %41 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %40, align 8, !dbg !2281
  %42 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2282
  %43 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %42, i32 0, i32 0, !dbg !2283
  %44 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %43, i32 0, i32 8, !dbg !2284
  %45 = load i8*, i8** %44, align 8, !dbg !2284
  %46 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2285
  %47 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %46, i32 0, i32 0, !dbg !2286
  %48 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %47, i32 0, i32 9, !dbg !2287
  %49 = load i32, i32* %48, align 8, !dbg !2287
  %50 = sext i32 %49 to i64, !dbg !2288
  %51 = getelementptr inbounds i8, i8* %45, i64 %50, !dbg !2288
  %52 = load i32, i32* %5, align 4, !dbg !2289
  %53 = sext i32 %52 to i64, !dbg !2289
  %54 = call i64 @SSL_RecvDataAndFd(%struct.SSLSockStruct* %41, i8* %51, i64 %53, i32* %9), !dbg !2290
  %55 = trunc i64 %54 to i32, !dbg !2290
  store i32 %55, i32* %4, align 4, !dbg !2291
  %56 = load i32, i32* %9, align 4, !dbg !2292
  %57 = icmp ne i32 %56, -1, !dbg !2294
  br i1 %57, label %58, label %66, !dbg !2295

; <label>:58:                                     ; preds = %38
  %59 = load i32, i32* %9, align 4, !dbg !2296
  %60 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2298
  %61 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %60, i32 0, i32 36, !dbg !2299
  %62 = getelementptr inbounds %struct.anon, %struct.anon* %61, i32 0, i32 1, !dbg !2300
  store i32 %59, i32* %62, align 4, !dbg !2301
  %63 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2302
  %64 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %63, i32 0, i32 36, !dbg !2303
  %65 = getelementptr inbounds %struct.anon, %struct.anon* %64, i32 0, i32 0, !dbg !2304
  store i8 0, i8* %65, align 8, !dbg !2305
  br label %66, !dbg !2306

; <label>:66:                                     ; preds = %58, %38
  br label %85, !dbg !2307

; <label>:67:                                     ; preds = %32
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2308
  %69 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %68, i32 0, i32 2, !dbg !2310
  %70 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %69, align 8, !dbg !2310
  %71 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2311
  %72 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %71, i32 0, i32 0, !dbg !2312
  %73 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %72, i32 0, i32 8, !dbg !2313
  %74 = load i8*, i8** %73, align 8, !dbg !2313
  %75 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2314
  %76 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %75, i32 0, i32 0, !dbg !2315
  %77 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %76, i32 0, i32 9, !dbg !2316
  %78 = load i32, i32* %77, align 8, !dbg !2316
  %79 = sext i32 %78 to i64, !dbg !2317
  %80 = getelementptr inbounds i8, i8* %74, i64 %79, !dbg !2317
  %81 = load i32, i32* %5, align 4, !dbg !2318
  %82 = sext i32 %81 to i64, !dbg !2318
  %83 = call i64 @SSL_Read(%struct.SSLSockStruct* %70, i8* %80, i64 %82), !dbg !2319
  %84 = trunc i64 %83 to i32, !dbg !2319
  store i32 %84, i32* %4, align 4, !dbg !2320
  br label %85

; <label>:85:                                     ; preds = %67, %66
  %86 = load i32, i32* %4, align 4, !dbg !2321
  %87 = icmp sgt i32 %86, 0, !dbg !2323
  br i1 %87, label %88, label %105, !dbg !2324

; <label>:88:                                     ; preds = %85
  br label %89, !dbg !2325, !llvm.loop !2327

; <label>:89:                                     ; preds = %88
  br label %90, !dbg !2328

; <label>:90:                                     ; preds = %89
  %91 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2331
  %92 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %91, i32 0, i32 30, !dbg !2332
  store i8 1, i8* %92, align 8, !dbg !2333
  %93 = load i32, i32* %4, align 4, !dbg !2334
  %94 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2335
  %95 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %94, i32 0, i32 0, !dbg !2336
  %96 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %95, i32 0, i32 9, !dbg !2337
  %97 = load i32, i32* %96, align 8, !dbg !2338
  %98 = add nsw i32 %97, %93, !dbg !2338
  store i32 %98, i32* %96, align 8, !dbg !2338
  %99 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2339
  %100 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %99, i32 0, i32 0, !dbg !2341
  %101 = call signext i8 @AsyncSocketCheckAndDispatchRecv(%struct.AsyncSocket* %100, i32* %7), !dbg !2342
  %102 = icmp ne i8 %101, 0, !dbg !2342
  br i1 %102, label %103, label %104, !dbg !2343

; <label>:103:                                    ; preds = %90
  br label %166, !dbg !2344

; <label>:104:                                    ; preds = %90
  br label %139, !dbg !2346

; <label>:105:                                    ; preds = %85
  %106 = load i32, i32* %4, align 4, !dbg !2347
  %107 = icmp eq i32 %106, 0, !dbg !2350
  br i1 %107, label %108, label %117, !dbg !2347

; <label>:108:                                    ; preds = %105
  br label %109, !dbg !2351, !llvm.loop !2353

; <label>:109:                                    ; preds = %108
  %110 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2354
  %111 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %110), !dbg !2357
  %112 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %111), !dbg !2358
  %113 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2360
  %114 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %113), !dbg !2361
  %115 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %114), !dbg !2363
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %112, i32 %115), !dbg !2365
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.104, i32 0, i32 0)), !dbg !2367
  br label %116, !dbg !2369

; <label>:116:                                    ; preds = %109
  store i32 4, i32* %7, align 4, !dbg !2370
  br label %166, !dbg !2371

; <label>:117:                                    ; preds = %105
  %118 = call i32* @__errno_location() #1, !dbg !2372
  %119 = load i32, i32* %118, align 4, !dbg !2374
  store i32 %119, i32* %6, align 4, !dbg !2375
  %120 = icmp eq i32 %119, 11, !dbg !2376
  br i1 %120, label %121, label %124, !dbg !2377

; <label>:121:                                    ; preds = %117
  br label %122, !dbg !2378, !llvm.loop !2380

; <label>:122:                                    ; preds = %121
  br label %123, !dbg !2381

; <label>:123:                                    ; preds = %122
  br label %165, !dbg !2384

; <label>:124:                                    ; preds = %117
  br label %125, !dbg !2385, !llvm.loop !2387

; <label>:125:                                    ; preds = %124
  %126 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2388
  %127 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %126), !dbg !2391
  %128 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %127), !dbg !2392
  %129 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2394
  %130 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %129), !dbg !2395
  %131 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %130), !dbg !2397
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %128, i32 %131), !dbg !2399
  %132 = load i32, i32* %6, align 4, !dbg !2401
  %133 = load i32, i32* %6, align 4, !dbg !2402
  %134 = call i8* @Err_Errno2String(i32 %133), !dbg !2403
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.105, i32 0, i32 0), i32 %132, i8* %134), !dbg !2405
  br label %135, !dbg !2407

; <label>:135:                                    ; preds = %125
  %136 = load i32, i32* %6, align 4, !dbg !2408
  %137 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2409
  %138 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %137, i32 0, i32 3, !dbg !2410
  store i32 %136, i32* %138, align 8, !dbg !2411
  store i32 1, i32* %7, align 4, !dbg !2412
  br label %166, !dbg !2413

; <label>:139:                                    ; preds = %104
  %140 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2414
  %141 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %140, i32 0, i32 0, !dbg !2415
  %142 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %141, i32 0, i32 10, !dbg !2416
  %143 = load i32, i32* %142, align 4, !dbg !2416
  %144 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2417
  %145 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %144, i32 0, i32 0, !dbg !2418
  %146 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %145, i32 0, i32 9, !dbg !2419
  %147 = load i32, i32* %146, align 8, !dbg !2419
  %148 = sub nsw i32 %143, %147, !dbg !2420
  store i32 %148, i32* %5, align 4, !dbg !2421
  %149 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2422
  %150 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %149, i32 0, i32 2, !dbg !2423
  %151 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %150, align 8, !dbg !2423
  %152 = call i32 @SSL_Pending(%struct.SSLSockStruct* %151), !dbg !2424
  store i32 %152, i32* %8, align 4, !dbg !2425
  %153 = load i32, i32* %5, align 4, !dbg !2426
  %154 = load i32, i32* %8, align 4, !dbg !2427
  %155 = icmp slt i32 %153, %154, !dbg !2428
  br i1 %155, label %156, label %158, !dbg !2429

; <label>:156:                                    ; preds = %139
  %157 = load i32, i32* %5, align 4, !dbg !2430
  br label %160, !dbg !2432

; <label>:158:                                    ; preds = %139
  %159 = load i32, i32* %8, align 4, !dbg !2433
  br label %160, !dbg !2435

; <label>:160:                                    ; preds = %158, %156
  %161 = phi i32 [ %157, %156 ], [ %159, %158 ], !dbg !2436
  store i32 %161, i32* %5, align 4, !dbg !2438
  br label %162, !dbg !2439

; <label>:162:                                    ; preds = %160
  %163 = load i32, i32* %5, align 4, !dbg !2440
  %164 = icmp ne i32 %163, 0, !dbg !2442
  br i1 %164, label %32, label %165, !dbg !2442, !llvm.loop !2270

; <label>:165:                                    ; preds = %162, %123
  store i32 0, i32* %7, align 4, !dbg !2443
  br label %166, !dbg !2444

; <label>:166:                                    ; preds = %165, %135, %116, %103
  %167 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2445
  %168 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %167, i32 0, i32 32, !dbg !2446
  store i8 0, i8* %168, align 2, !dbg !2447
  %169 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !2448
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %169), !dbg !2449
  %170 = load i32, i32* %7, align 4, !dbg !2450
  store i32 %170, i32* %2, align 4, !dbg !2451
  br label %171, !dbg !2451

; <label>:171:                                    ; preds = %166, %27
  %172 = load i32, i32* %2, align 4, !dbg !2452
  ret i32 %172, !dbg !2452
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketRegisterRecvCb(%struct.AsyncTCPSocket*) #0 !dbg !2453 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !2454, metadata !480), !dbg !2455
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2456, metadata !480), !dbg !2457
  store i32 0, i32* %3, align 4, !dbg !2457
  %5 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2458
  %6 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %5, i32 0, i32 19, !dbg !2460
  %7 = load i8, i8* %6, align 8, !dbg !2460
  %8 = icmp ne i8 %7, 0, !dbg !2458
  br i1 %8, label %31, label %9, !dbg !2461

; <label>:9:                                      ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2462, metadata !480), !dbg !2464
  br label %10, !dbg !2465, !llvm.loop !2466

; <label>:10:                                     ; preds = %9
  br label %11, !dbg !2467

; <label>:11:                                     ; preds = %10
  %12 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2470
  %13 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2471
  %14 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %13, i32 0, i32 15, !dbg !2472
  %15 = load void (i8*)*, void (i8*)** %14, align 8, !dbg !2472
  %16 = call i32 (%struct.AsyncTCPSocket*, i8, i32, void (i8*)*, ...) @AsyncTCPSocketPollAdd(%struct.AsyncTCPSocket* %12, i8 signext 1, i32 5, void (i8*)* %15), !dbg !2473
  store i32 %16, i32* %4, align 4, !dbg !2474
  %17 = load i32, i32* %4, align 4, !dbg !2475
  %18 = icmp ne i32 %17, 0, !dbg !2477
  br i1 %18, label %19, label %28, !dbg !2478

; <label>:19:                                     ; preds = %11
  br label %20, !dbg !2479, !llvm.loop !2481

; <label>:20:                                     ; preds = %19
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2482
  %22 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %21), !dbg !2485
  %23 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %22), !dbg !2486
  %24 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2488
  %25 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %24), !dbg !2489
  %26 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %25), !dbg !2491
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %23, i32 %26), !dbg !2493
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.106, i32 0, i32 0)), !dbg !2495
  br label %27, !dbg !2497

; <label>:27:                                     ; preds = %20
  store i32 8, i32* %3, align 4, !dbg !2498
  br label %61, !dbg !2499

; <label>:28:                                     ; preds = %11
  %29 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2500
  %30 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %29, i32 0, i32 19, !dbg !2501
  store i8 1, i8* %30, align 8, !dbg !2502
  br label %31, !dbg !2503

; <label>:31:                                     ; preds = %28, %1
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2504
  %33 = call signext i8 @AsyncTCPSocketHasDataPending(%struct.AsyncTCPSocket* %32), !dbg !2506
  %34 = sext i8 %33 to i32, !dbg !2506
  %35 = icmp ne i32 %34, 0, !dbg !2506
  br i1 %35, label %36, label %60, !dbg !2507

; <label>:36:                                     ; preds = %31
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2508
  %38 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %37, i32 0, i32 32, !dbg !2510
  %39 = load i8, i8* %38, align 2, !dbg !2510
  %40 = icmp ne i8 %39, 0, !dbg !2508
  br i1 %40, label %60, label %41, !dbg !2511

; <label>:41:                                     ; preds = %36
  br label %42, !dbg !2512, !llvm.loop !2514

; <label>:42:                                     ; preds = %41
  %43 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2515
  %44 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %43), !dbg !2520
  %45 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %44), !dbg !2521
  %46 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2523
  %47 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %46), !dbg !2524
  %48 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %47), !dbg !2526
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %45, i32 %48), !dbg !2528
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.107, i32 0, i32 0)), !dbg !2530
  br label %49, !dbg !2532

; <label>:49:                                     ; preds = %42
  %50 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2533
  %51 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2535
  %52 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %51, i32 0, i32 15, !dbg !2536
  %53 = load void (i8*)*, void (i8*)** %52, align 8, !dbg !2536
  %54 = call i32 (%struct.AsyncTCPSocket*, i8, i32, void (i8*)*, ...) @AsyncTCPSocketPollAdd(%struct.AsyncTCPSocket* %50, i8 signext 0, i32 0, void (i8*)* %53, i32 0), !dbg !2537
  %55 = icmp ne i32 %54, 0, !dbg !2538
  br i1 %55, label %56, label %57, !dbg !2539

; <label>:56:                                     ; preds = %49
  store i32 8, i32* %3, align 4, !dbg !2540
  br label %61, !dbg !2542

; <label>:57:                                     ; preds = %49
  %58 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2543
  %59 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %58, i32 0, i32 20, !dbg !2544
  store i8 1, i8* %59, align 1, !dbg !2545
  br label %60, !dbg !2546

; <label>:60:                                     ; preds = %57, %36, %31
  br label %61, !dbg !2547

; <label>:61:                                     ; preds = %60, %56, %27
  %62 = load i32, i32* %3, align 4, !dbg !2549
  ret i32 %62, !dbg !2550
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket*) #3 !dbg !2551 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !2552, metadata !480), !dbg !2553
  %3 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !2554
  %4 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %3), !dbg !2555
  call void @AsyncSocketRelease(%struct.AsyncSocket* %4), !dbg !2556
  ret void, !dbg !2558
}

; Function Attrs: nounwind uwtable
define %struct.AsyncSocket* @AsyncSocket_ListenSocketUDS(i8*, void (%struct.AsyncSocket*, i8*)*, i8*, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !2559 {
  %6 = alloca i8*, align 8
  %7 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.AsyncSocketPollParams*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca %struct.sockaddr_un, align 2
  %12 = alloca %struct.AsyncTCPSocket*, align 8
  store i8* %0, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2562, metadata !480), !dbg !2563
  store void (%struct.AsyncSocket*, i8*)* %1, void (%struct.AsyncSocket*, i8*)** %7, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %7, metadata !2564, metadata !480), !dbg !2565
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2566, metadata !480), !dbg !2567
  store %struct.AsyncSocketPollParams* %3, %struct.AsyncSocketPollParams** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %9, metadata !2568, metadata !480), !dbg !2569
  store i32* %4, i32** %10, align 8
  call void @llvm.dbg.declare(metadata i32** %10, metadata !2570, metadata !480), !dbg !2571
  call void @llvm.dbg.declare(metadata %struct.sockaddr_un* %11, metadata !2572, metadata !480), !dbg !2573
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %12, metadata !2574, metadata !480), !dbg !2575
  %13 = bitcast %struct.sockaddr_un* %11 to i8*, !dbg !2576
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 110, i32 2, i1 false), !dbg !2576
  %14 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %11, i32 0, i32 0, !dbg !2577
  store i16 1, i16* %14, align 2, !dbg !2578
  %15 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %11, i32 0, i32 1, !dbg !2579
  %16 = getelementptr inbounds [108 x i8], [108 x i8]* %15, i32 0, i32 0, !dbg !2580
  %17 = load i8*, i8** %6, align 8, !dbg !2581
  %18 = call i8* @Str_Strcpy(i8* %16, i8* %17, i64 108), !dbg !2582
  %19 = load i8*, i8** %6, align 8, !dbg !2583
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i32 0, i32 0), i8* %19), !dbg !2584
  %20 = bitcast %struct.sockaddr_un* %11 to %struct.sockaddr_storage*, !dbg !2585
  %21 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %7, align 8, !dbg !2586
  %22 = load i8*, i8** %8, align 8, !dbg !2587
  %23 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %9, align 8, !dbg !2588
  %24 = load i32*, i32** %10, align 8, !dbg !2589
  %25 = call %struct.AsyncTCPSocket* @AsyncTCPSocketListenImpl(%struct.sockaddr_storage* %20, i32 110, void (%struct.AsyncSocket*, i8*)* %21, i8* %22, %struct.AsyncSocketPollParams* %23, i32* %24), !dbg !2590
  store %struct.AsyncTCPSocket* %25, %struct.AsyncTCPSocket** %12, align 8, !dbg !2591
  %26 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !2592
  %27 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %26), !dbg !2593
  ret %struct.AsyncSocket* %27, !dbg !2594
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketResolveAddr(i8*, i32, i32, i8 signext, %struct.sockaddr_storage*, i32*, i8**) #0 !dbg !460 {
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca %struct.sockaddr_storage*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i8**, align 8
  %16 = alloca %struct.addrinfo, align 8
  %17 = alloca %struct.addrinfo*, align 8
  %18 = alloca %struct.addrinfo*, align 8
  %19 = alloca i32, align 4
  %20 = alloca [6 x i8], align 1
  %21 = alloca [54 x i8], align 16
  store i8* %0, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !2595, metadata !480), !dbg !2596
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2597, metadata !480), !dbg !2598
  store i32 %2, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2599, metadata !480), !dbg !2600
  store i8 %3, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !2601, metadata !480), !dbg !2602
  store %struct.sockaddr_storage* %4, %struct.sockaddr_storage** %13, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %13, metadata !2603, metadata !480), !dbg !2604
  store i32* %5, i32** %14, align 8
  call void @llvm.dbg.declare(metadata i32** %14, metadata !2605, metadata !480), !dbg !2606
  store i8** %6, i8*** %15, align 8
  call void @llvm.dbg.declare(metadata i8*** %15, metadata !2607, metadata !480), !dbg !2608
  call void @llvm.dbg.declare(metadata %struct.addrinfo* %16, metadata !2609, metadata !480), !dbg !2622
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %17, metadata !2623, metadata !480), !dbg !2624
  store %struct.addrinfo* null, %struct.addrinfo** %17, align 8, !dbg !2624
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %18, metadata !2625, metadata !480), !dbg !2626
  store %struct.addrinfo* null, %struct.addrinfo** %18, align 8, !dbg !2626
  call void @llvm.dbg.declare(metadata i32* %19, metadata !2627, metadata !480), !dbg !2628
  store i32 0, i32* %19, align 4, !dbg !2628
  call void @llvm.dbg.declare(metadata [6 x i8]* %20, metadata !2629, metadata !480), !dbg !2633
  %22 = load i32, i32* %10, align 4, !dbg !2634
  %23 = icmp ugt i32 %22, 65535, !dbg !2636
  br i1 %23, label %24, label %26, !dbg !2637

; <label>:24:                                     ; preds = %7
  %25 = load i32, i32* %10, align 4, !dbg !2638
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.22, i32 0, i32 0), i32 %25), !dbg !2640
  store i32 -8, i32* %8, align 4, !dbg !2641
  br label %157, !dbg !2641

; <label>:26:                                     ; preds = %7
  %27 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i32 0, i32 0, !dbg !2642
  %28 = load i32, i32* %10, align 4, !dbg !2643
  %29 = call i32 (i8*, i64, i8*, ...) @Str_Sprintf(i8* %27, i64 6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0), i32 %28), !dbg !2644
  %30 = bitcast %struct.addrinfo* %16 to i8*, !dbg !2645
  call void @llvm.memset.p0i8.i64(i8* %30, i8 0, i64 48, i32 8, i1 false), !dbg !2645
  %31 = load i32, i32* %11, align 4, !dbg !2646
  %32 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %16, i32 0, i32 1, !dbg !2647
  store i32 %31, i32* %32, align 4, !dbg !2648
  %33 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %16, i32 0, i32 2, !dbg !2649
  store i32 1, i32* %33, align 8, !dbg !2650
  %34 = load i8, i8* %12, align 1, !dbg !2651
  %35 = icmp ne i8 %34, 0, !dbg !2651
  br i1 %35, label %36, label %38, !dbg !2653

; <label>:36:                                     ; preds = %26
  %37 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %16, i32 0, i32 0, !dbg !2654
  store i32 1, i32* %37, align 8, !dbg !2656
  br label %38, !dbg !2657

; <label>:38:                                     ; preds = %36, %26
  %39 = load i8*, i8** %9, align 8, !dbg !2658
  %40 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i32 0, i32 0, !dbg !2659
  %41 = call i32 @getaddrinfo(i8* %39, i8* %40, %struct.addrinfo* %16, %struct.addrinfo** %17), !dbg !2660
  store i32 %41, i32* %19, align 4, !dbg !2661
  %42 = load i32, i32* %19, align 4, !dbg !2662
  %43 = icmp ne i32 0, %42, !dbg !2664
  br i1 %43, label %44, label %48, !dbg !2665

; <label>:44:                                     ; preds = %38
  %45 = load i8*, i8** %9, align 8, !dbg !2666
  %46 = load i32, i32* %19, align 4, !dbg !2668
  %47 = call i8* @gai_strerror(i32 %46) #8, !dbg !2669
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24, i32 0, i32 0), i8* %45, i8* %47), !dbg !2670
  br label %150, !dbg !2671

; <label>:48:                                     ; preds = %38
  %49 = load %struct.addrinfo*, %struct.addrinfo** %17, align 8, !dbg !2672
  store %struct.addrinfo* %49, %struct.addrinfo** %18, align 8, !dbg !2674
  br label %50, !dbg !2675

; <label>:50:                                     ; preds = %145, %48
  %51 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2676
  %52 = icmp ne %struct.addrinfo* null, %51, !dbg !2679
  br i1 %52, label %53, label %149, !dbg !2680

; <label>:53:                                     ; preds = %50
  %54 = load i32, i32* %11, align 4, !dbg !2681
  %55 = icmp eq i32 %54, 0, !dbg !2684
  br i1 %55, label %56, label %66, !dbg !2685

; <label>:56:                                     ; preds = %53
  %57 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2686
  %58 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %57, i32 0, i32 1, !dbg !2688
  %59 = load i32, i32* %58, align 4, !dbg !2688
  %60 = icmp eq i32 %59, 2, !dbg !2689
  br i1 %60, label %72, label %61, !dbg !2690

; <label>:61:                                     ; preds = %56
  %62 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2691
  %63 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %62, i32 0, i32 1, !dbg !2692
  %64 = load i32, i32* %63, align 4, !dbg !2692
  %65 = icmp eq i32 %64, 10, !dbg !2693
  br i1 %65, label %72, label %66, !dbg !2694

; <label>:66:                                     ; preds = %61, %53
  %67 = load i32, i32* %11, align 4, !dbg !2695
  %68 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2696
  %69 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %68, i32 0, i32 1, !dbg !2697
  %70 = load i32, i32* %69, align 4, !dbg !2697
  %71 = icmp eq i32 %67, %70, !dbg !2698
  br i1 %71, label %72, label %144, !dbg !2699

; <label>:72:                                     ; preds = %66, %61, %56
  %73 = load i8**, i8*** %15, align 8, !dbg !2701
  %74 = icmp ne i8** %73, null, !dbg !2704
  br i1 %74, label %75, label %129, !dbg !2705

; <label>:75:                                     ; preds = %72
  call void @llvm.dbg.declare(metadata [54 x i8]* %21, metadata !2706, metadata !480), !dbg !2711
  %76 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2712
  %77 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %76, i32 0, i32 1, !dbg !2714
  %78 = load i32, i32* %77, align 4, !dbg !2714
  %79 = icmp eq i32 %78, 2, !dbg !2715
  br i1 %79, label %80, label %96, !dbg !2716

; <label>:80:                                     ; preds = %75
  %81 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2717
  %82 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %81, i32 0, i32 1, !dbg !2718
  %83 = load i32, i32* %82, align 4, !dbg !2718
  %84 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2719
  %85 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %84, i32 0, i32 5, !dbg !2720
  %86 = load %struct.sockaddr*, %struct.sockaddr** %85, align 8, !dbg !2720
  %87 = bitcast %struct.sockaddr* %86 to %struct.sockaddr_in*, !dbg !2721
  %88 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %87, i32 0, i32 2, !dbg !2721
  %89 = bitcast %struct.in_addr* %88 to i8*, !dbg !2722
  %90 = getelementptr inbounds [54 x i8], [54 x i8]* %21, i32 0, i32 0, !dbg !2723
  %91 = call i8* @inet_ntop(i32 %83, i8* %89, i8* %90, i32 46) #8, !dbg !2724
  %92 = icmp ne i8* %91, null, !dbg !2724
  br i1 %92, label %96, label %93, !dbg !2725

; <label>:93:                                     ; preds = %80
  %94 = call i8* @UtilSafeStrdup0(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @AsyncTCPSocketResolveAddr.unknownAddr, i32 0, i32 0)), !dbg !2727
  %95 = load i8**, i8*** %15, align 8, !dbg !2729
  store i8* %94, i8** %95, align 8, !dbg !2730
  br label %128, !dbg !2731

; <label>:96:                                     ; preds = %80, %75
  %97 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2732
  %98 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %97, i32 0, i32 1, !dbg !2735
  %99 = load i32, i32* %98, align 4, !dbg !2735
  %100 = icmp eq i32 %99, 10, !dbg !2736
  br i1 %100, label %101, label %117, !dbg !2737

; <label>:101:                                    ; preds = %96
  %102 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2738
  %103 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %102, i32 0, i32 1, !dbg !2739
  %104 = load i32, i32* %103, align 4, !dbg !2739
  %105 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2740
  %106 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %105, i32 0, i32 5, !dbg !2741
  %107 = load %struct.sockaddr*, %struct.sockaddr** %106, align 8, !dbg !2741
  %108 = bitcast %struct.sockaddr* %107 to %struct.sockaddr_in6*, !dbg !2742
  %109 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %108, i32 0, i32 3, !dbg !2742
  %110 = bitcast %struct.in6_addr* %109 to i8*, !dbg !2743
  %111 = getelementptr inbounds [54 x i8], [54 x i8]* %21, i32 0, i32 0, !dbg !2744
  %112 = call i8* @inet_ntop(i32 %104, i8* %110, i8* %111, i32 46) #8, !dbg !2745
  %113 = icmp ne i8* %112, null, !dbg !2745
  br i1 %113, label %117, label %114, !dbg !2746

; <label>:114:                                    ; preds = %101
  %115 = call i8* @UtilSafeStrdup0(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @AsyncTCPSocketResolveAddr.unknownAddr, i32 0, i32 0)), !dbg !2748
  %116 = load i8**, i8*** %15, align 8, !dbg !2750
  store i8* %115, i8** %116, align 8, !dbg !2751
  br label %127, !dbg !2752

; <label>:117:                                    ; preds = %101, %96
  %118 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2753
  %119 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %118, i32 0, i32 1, !dbg !2755
  %120 = load i32, i32* %119, align 4, !dbg !2755
  %121 = icmp eq i32 %120, 10, !dbg !2756
  %122 = select i1 %121, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), !dbg !2753
  %123 = getelementptr inbounds [54 x i8], [54 x i8]* %21, i32 0, i32 0, !dbg !2757
  %124 = load i32, i32* %10, align 4, !dbg !2758
  %125 = call i8* (i64*, i8*, ...) @Str_SafeAsprintf(i64* null, i8* %122, i8* %123, i32 %124), !dbg !2759
  %126 = load i8**, i8*** %15, align 8, !dbg !2760
  store i8* %125, i8** %126, align 8, !dbg !2761
  br label %127

; <label>:127:                                    ; preds = %117, %114
  br label %128

; <label>:128:                                    ; preds = %127, %93
  br label %129, !dbg !2762

; <label>:129:                                    ; preds = %128, %72
  %130 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %13, align 8, !dbg !2763
  %131 = bitcast %struct.sockaddr_storage* %130 to i8*, !dbg !2764
  %132 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2765
  %133 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %132, i32 0, i32 5, !dbg !2766
  %134 = load %struct.sockaddr*, %struct.sockaddr** %133, align 8, !dbg !2766
  %135 = bitcast %struct.sockaddr* %134 to i8*, !dbg !2764
  %136 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2767
  %137 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %136, i32 0, i32 4, !dbg !2768
  %138 = load i32, i32* %137, align 8, !dbg !2768
  %139 = zext i32 %138 to i64, !dbg !2767
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %135, i64 %139, i32 2, i1 false), !dbg !2764
  %140 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2769
  %141 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %140, i32 0, i32 4, !dbg !2770
  %142 = load i32, i32* %141, align 8, !dbg !2770
  %143 = load i32*, i32** %14, align 8, !dbg !2771
  store i32 %142, i32* %143, align 4, !dbg !2772
  br label %149, !dbg !2773

; <label>:144:                                    ; preds = %66
  br label %145, !dbg !2774

; <label>:145:                                    ; preds = %144
  %146 = load %struct.addrinfo*, %struct.addrinfo** %18, align 8, !dbg !2775
  %147 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %146, i32 0, i32 7, !dbg !2776
  %148 = load %struct.addrinfo*, %struct.addrinfo** %147, align 8, !dbg !2776
  store %struct.addrinfo* %148, %struct.addrinfo** %18, align 8, !dbg !2777
  br label %50, !dbg !2779, !llvm.loop !2780

; <label>:149:                                    ; preds = %129, %50
  br label %150, !dbg !2782

; <label>:150:                                    ; preds = %149, %44
  %151 = load %struct.addrinfo*, %struct.addrinfo** %17, align 8, !dbg !2784
  %152 = icmp ne %struct.addrinfo* null, %151, !dbg !2786
  br i1 %152, label %153, label %155, !dbg !2787

; <label>:153:                                    ; preds = %150
  %154 = load %struct.addrinfo*, %struct.addrinfo** %17, align 8, !dbg !2788
  call void @freeaddrinfo(%struct.addrinfo* %154) #8, !dbg !2790
  br label %155, !dbg !2791

; <label>:155:                                    ; preds = %153, %150
  %156 = load i32, i32* %19, align 4, !dbg !2792
  store i32 %156, i32* %8, align 4, !dbg !2793
  br label %157, !dbg !2793

; <label>:157:                                    ; preds = %155, %24
  %158 = load i32, i32* %8, align 4, !dbg !2794
  ret i32 %158, !dbg !2794
}

declare i8* @AsyncSocket_Err2String(i32) #4

; Function Attrs: nounwind
declare void @free(i8*) #6

declare i32 @Str_Sprintf(i8*, i64, i8*, ...) #4

declare i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #4

; Function Attrs: nounwind
declare i8* @gai_strerror(i32) #6

; Function Attrs: nounwind
declare i8* @inet_ntop(i32, i8*, i8*, i32) #6

declare i8* @UtilSafeStrdup0(i8*) #4

declare i8* @Str_SafeAsprintf(i64*, i8*, ...) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind
declare void @freeaddrinfo(%struct.addrinfo*) #6

declare void @AsyncSocketSetState(%struct.AsyncSocket*, i32) #4

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #6

declare i32 @close(i32) #4

declare i32 @open64(i8*, i32, ...) #4

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) #6

; Function Attrs: nounwind uwtable
define internal %struct.AsyncTCPSocket* @AsyncTCPSocketInit(i32, %struct.AsyncSocketPollParams*, i32*) #0 !dbg !2795 {
  %4 = alloca %struct.AsyncTCPSocket*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.AsyncSocketPollParams*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %struct.AsyncTCPSocket*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2796, metadata !480), !dbg !2797
  store %struct.AsyncSocketPollParams* %1, %struct.AsyncSocketPollParams** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocketPollParams** %6, metadata !2798, metadata !480), !dbg !2799
  store i32* %2, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !2800, metadata !480), !dbg !2801
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %8, metadata !2802, metadata !480), !dbg !2803
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %8, align 8, !dbg !2803
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2804, metadata !480), !dbg !2805
  store i32 1, i32* %9, align 4, !dbg !2805
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2806, metadata !480), !dbg !2807
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2808, metadata !480), !dbg !2809
  %12 = load i32, i32* %5, align 4, !dbg !2810
  %13 = call i32 @socket(i32 %12, i32 1, i32 0) #8, !dbg !2812
  store i32 %13, i32* %11, align 4, !dbg !2813
  %14 = icmp eq i32 %13, -1, !dbg !2814
  br i1 %14, label %15, label %22, !dbg !2815

; <label>:15:                                     ; preds = %3
  %16 = call i32* @__errno_location() #1, !dbg !2816
  %17 = load i32, i32* %16, align 4, !dbg !2818
  store i32 %17, i32* %10, align 4, !dbg !2819
  %18 = load i32, i32* %10, align 4, !dbg !2820
  %19 = load i32, i32* %10, align 4, !dbg !2821
  %20 = call i8* @Err_Errno2String(i32 %19), !dbg !2822
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.29, i32 0, i32 0), i32 %18, i8* %20), !dbg !2823
  %21 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !2824
  br label %34, !dbg !2825

; <label>:22:                                     ; preds = %3
  %23 = load i32, i32* %11, align 4, !dbg !2826
  %24 = load %struct.AsyncSocketPollParams*, %struct.AsyncSocketPollParams** %6, align 8, !dbg !2828
  %25 = call %struct.AsyncTCPSocket* @AsyncTCPSocketAttachToFd(i32 %23, %struct.AsyncSocketPollParams* %24, i32* %9), !dbg !2829
  store %struct.AsyncTCPSocket* %25, %struct.AsyncTCPSocket** %8, align 8, !dbg !2830
  %26 = icmp eq %struct.AsyncTCPSocket* %25, null, !dbg !2831
  br i1 %26, label %27, label %29, !dbg !2832

; <label>:27:                                     ; preds = %22
  %28 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !2833
  br label %31, !dbg !2836

; <label>:29:                                     ; preds = %22
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !2837
  store %struct.AsyncTCPSocket* %30, %struct.AsyncTCPSocket** %4, align 8, !dbg !2838
  br label %41, !dbg !2838

; <label>:31:                                     ; preds = %27
  %32 = load i32, i32* %11, align 4, !dbg !2839
  %33 = call i32 @close(i32 %32), !dbg !2840
  br label %34, !dbg !2840

; <label>:34:                                     ; preds = %31, %15
  %35 = load i32*, i32** %7, align 8, !dbg !2841
  %36 = icmp ne i32* %35, null, !dbg !2841
  br i1 %36, label %37, label %40, !dbg !2843

; <label>:37:                                     ; preds = %34
  %38 = load i32, i32* %9, align 4, !dbg !2844
  %39 = load i32*, i32** %7, align 8, !dbg !2846
  store i32 %38, i32* %39, align 4, !dbg !2847
  br label %40, !dbg !2848

; <label>:40:                                     ; preds = %37, %34
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %4, align 8, !dbg !2849
  br label %41, !dbg !2849

; <label>:41:                                     ; preds = %40, %29
  %42 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !2850
  ret %struct.AsyncTCPSocket* %42, !dbg !2850
}

; Function Attrs: nounwind uwtable
define internal signext i8 @AsyncTCPSocketBind(%struct.AsyncTCPSocket*, %struct.sockaddr_storage*, i32, i32*) #0 !dbg !2852 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.AsyncTCPSocket*, align 8
  %7 = alloca %struct.sockaddr_storage*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %6, metadata !2855, metadata !480), !dbg !2856
  store %struct.sockaddr_storage* %1, %struct.sockaddr_storage** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %7, metadata !2857, metadata !480), !dbg !2858
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2859, metadata !480), !dbg !2860
  store i32* %3, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !2861, metadata !480), !dbg !2862
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2863, metadata !480), !dbg !2864
  store i32 10, i32* %10, align 4, !dbg !2864
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2865, metadata !480), !dbg !2866
  call void @llvm.dbg.declare(metadata i32* %12, metadata !2867, metadata !480), !dbg !2868
  %15 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %7, align 8, !dbg !2869
  %16 = call i32 @AsyncTCPSocketGetPortFromAddr(%struct.sockaddr_storage* %15), !dbg !2870
  store i32 %16, i32* %12, align 4, !dbg !2871
  br label %17, !dbg !2872, !llvm.loop !2873

; <label>:17:                                     ; preds = %4
  %18 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2874
  %19 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %18), !dbg !2877
  %20 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %19), !dbg !2878
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2880
  %22 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %21), !dbg !2881
  %23 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %22), !dbg !2883
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %20, i32 %23), !dbg !2885
  %24 = load i32, i32* %12, align 4, !dbg !2887
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30, i32 0, i32 0), i32 %24), !dbg !2888
  br label %25, !dbg !2890

; <label>:25:                                     ; preds = %17
  %26 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %7, align 8, !dbg !2891
  %27 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %26, i32 0, i32 0, !dbg !2893
  %28 = load i16, i16* %27, align 8, !dbg !2893
  %29 = zext i16 %28 to i32, !dbg !2891
  %30 = icmp eq i32 %29, 2, !dbg !2894
  br i1 %30, label %37, label %31, !dbg !2895

; <label>:31:                                     ; preds = %25
  %32 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %7, align 8, !dbg !2896
  %33 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %32, i32 0, i32 0, !dbg !2898
  %34 = load i16, i16* %33, align 8, !dbg !2898
  %35 = zext i16 %34 to i32, !dbg !2896
  %36 = icmp eq i32 %35, 10, !dbg !2899
  br i1 %36, label %37, label %54, !dbg !2900

; <label>:37:                                     ; preds = %31, %25
  call void @llvm.dbg.declare(metadata i32* %13, metadata !2901, metadata !480), !dbg !2903
  %38 = load i32, i32* %12, align 4, !dbg !2904
  %39 = icmp ne i32 %38, 0, !dbg !2905
  %40 = zext i1 %39 to i32, !dbg !2905
  store i32 %40, i32* %13, align 4, !dbg !2903
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2906
  %42 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %41, i32 0, i32 1, !dbg !2908
  %43 = load i32, i32* %42, align 8, !dbg !2908
  %44 = bitcast i32* %13 to i8*, !dbg !2909
  %45 = call i32 @setsockopt(i32 %43, i32 1, i32 2, i8* %44, i32 4) #8, !dbg !2910
  %46 = icmp ne i32 %45, 0, !dbg !2911
  br i1 %46, label %47, label %53, !dbg !2912

; <label>:47:                                     ; preds = %37
  %48 = call i32* @__errno_location() #1, !dbg !2913
  %49 = load i32, i32* %48, align 4, !dbg !2915
  store i32 %49, i32* %11, align 4, !dbg !2916
  %50 = load i32, i32* %11, align 4, !dbg !2917
  %51 = load i32, i32* %11, align 4, !dbg !2918
  %52 = call i8* @Err_Errno2String(i32 %51), !dbg !2919
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.31, i32 0, i32 0), i32 %50, i8* %52), !dbg !2920
  br label %53, !dbg !2921

; <label>:53:                                     ; preds = %47, %37
  br label %54, !dbg !2922

; <label>:54:                                     ; preds = %53, %31
  %55 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %7, align 8, !dbg !2923
  %56 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %55, i32 0, i32 0, !dbg !2925
  %57 = load i16, i16* %56, align 8, !dbg !2925
  %58 = zext i16 %57 to i32, !dbg !2923
  %59 = icmp eq i32 %58, 10, !dbg !2926
  br i1 %59, label %60, label %73, !dbg !2927

; <label>:60:                                     ; preds = %54
  %61 = call signext i8 @AsyncTCPSocketOSVersionSupportsV4Mapped(), !dbg !2928
  %62 = sext i8 %61 to i32, !dbg !2928
  %63 = icmp ne i32 %62, 0, !dbg !2928
  br i1 %63, label %64, label %73, !dbg !2930

; <label>:64:                                     ; preds = %60
  call void @llvm.dbg.declare(metadata i32* %14, metadata !2931, metadata !480), !dbg !2933
  store i32 1, i32* %14, align 4, !dbg !2933
  %65 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2934
  %66 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %65, i32 0, i32 1, !dbg !2936
  %67 = load i32, i32* %66, align 8, !dbg !2936
  %68 = bitcast i32* %14 to i8*, !dbg !2937
  %69 = call i32 @setsockopt(i32 %67, i32 41, i32 26, i8* %68, i32 4) #8, !dbg !2938
  %70 = icmp ne i32 %69, 0, !dbg !2939
  br i1 %70, label %71, label %72, !dbg !2940

; <label>:71:                                     ; preds = %64
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.32, i32 0, i32 0)), !dbg !2941
  br label %72, !dbg !2943

; <label>:72:                                     ; preds = %71, %64
  br label %73, !dbg !2944

; <label>:73:                                     ; preds = %72, %60, %54
  %74 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2945
  %75 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %74, i32 0, i32 1, !dbg !2947
  %76 = load i32, i32* %75, align 8, !dbg !2947
  %77 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %7, align 8, !dbg !2948
  %78 = bitcast %struct.sockaddr_storage* %77 to %struct.sockaddr*, !dbg !2949
  %79 = load i32, i32* %8, align 4, !dbg !2950
  %80 = call i32 @bind(i32 %76, %struct.sockaddr* %78, i32 %79) #8, !dbg !2951
  %81 = icmp ne i32 %80, 0, !dbg !2952
  br i1 %81, label %82, label %93, !dbg !2953

; <label>:82:                                     ; preds = %73
  %83 = call i32* @__errno_location() #1, !dbg !2954
  %84 = load i32, i32* %83, align 4, !dbg !2956
  store i32 %84, i32* %11, align 4, !dbg !2957
  %85 = load i32, i32* %11, align 4, !dbg !2958
  %86 = icmp eq i32 %85, 98, !dbg !2960
  br i1 %86, label %87, label %88, !dbg !2961

; <label>:87:                                     ; preds = %82
  store i32 11, i32* %10, align 4, !dbg !2962
  br label %88, !dbg !2964

; <label>:88:                                     ; preds = %87, %82
  %89 = load i32, i32* %11, align 4, !dbg !2965
  %90 = load i32, i32* %11, align 4, !dbg !2966
  %91 = call i8* @Err_Errno2String(i32 %90), !dbg !2967
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.33, i32 0, i32 0), i32 %89, i8* %91), !dbg !2968
  %92 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !2969
  br label %94, !dbg !2970

; <label>:93:                                     ; preds = %73
  store i8 1, i8* %5, align 1, !dbg !2971
  br label %107, !dbg !2971

; <label>:94:                                     ; preds = %88
  %95 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2972
  %96 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %95, i32 0, i32 2, !dbg !2973
  %97 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %96, align 8, !dbg !2973
  %98 = call i32 @SSL_Shutdown(%struct.SSLSockStruct* %97), !dbg !2974
  %99 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !2975
  %100 = bitcast %struct.AsyncTCPSocket* %99 to i8*, !dbg !2975
  call void @free(i8* %100) #8, !dbg !2976
  %101 = load i32*, i32** %9, align 8, !dbg !2977
  %102 = icmp ne i32* %101, null, !dbg !2977
  br i1 %102, label %103, label %106, !dbg !2979

; <label>:103:                                    ; preds = %94
  %104 = load i32, i32* %10, align 4, !dbg !2980
  %105 = load i32*, i32** %9, align 8, !dbg !2982
  store i32 %104, i32* %105, align 4, !dbg !2983
  br label %106, !dbg !2984

; <label>:106:                                    ; preds = %103, %94
  store i8 0, i8* %5, align 1, !dbg !2985
  br label %107, !dbg !2985

; <label>:107:                                    ; preds = %106, %93
  %108 = load i8, i8* %5, align 1, !dbg !2986
  ret i8 %108, !dbg !2986
}

; Function Attrs: nounwind uwtable
define internal signext i8 @AsyncTCPSocketListen(%struct.AsyncTCPSocket*, void (%struct.AsyncSocket*, i8*)*, i8*, i32*) #0 !dbg !2987 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.AsyncTCPSocket*, align 8
  %7 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %6, metadata !2990, metadata !480), !dbg !2991
  store void (%struct.AsyncSocket*, i8*)* %1, void (%struct.AsyncSocket*, i8*)** %7, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %7, metadata !2992, metadata !480), !dbg !2993
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2994, metadata !480), !dbg !2995
  store i32* %3, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !2996, metadata !480), !dbg !2997
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2998, metadata !480), !dbg !2999
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3000, metadata !480), !dbg !3001
  %13 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %7, align 8, !dbg !3002
  %14 = icmp ne void (%struct.AsyncSocket*, i8*)* %13, null, !dbg !3002
  br i1 %14, label %17, label %15, !dbg !3004

; <label>:15:                                     ; preds = %4
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.34, i32 0, i32 0)), !dbg !3005
  store i32 5, i32* %11, align 4, !dbg !3007
  %16 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !3008
  br label %56, !dbg !3009

; <label>:17:                                     ; preds = %4
  %18 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3010
  %19 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %18, i32 0, i32 1, !dbg !3012
  %20 = load i32, i32* %19, align 8, !dbg !3012
  %21 = call i32 @listen(i32 %20, i32 5) #8, !dbg !3013
  %22 = icmp ne i32 %21, 0, !dbg !3014
  br i1 %22, label %23, label %30, !dbg !3015

; <label>:23:                                     ; preds = %17
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3016, metadata !480), !dbg !3018
  %24 = call i32* @__errno_location() #1, !dbg !3019
  %25 = load i32, i32* %24, align 4, !dbg !3021
  store i32 %25, i32* %12, align 4, !dbg !3018
  %26 = load i32, i32* %12, align 4, !dbg !3022
  %27 = load i32, i32* %12, align 4, !dbg !3023
  %28 = call i8* @Err_Errno2String(i32 %27), !dbg !3024
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 %26, i8* %28), !dbg !3025
  store i32 12, i32* %11, align 4, !dbg !3026
  %29 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !3027
  br label %56, !dbg !3028

; <label>:30:                                     ; preds = %17
  %31 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3029
  call void @AsyncTCPSocketLock(%struct.AsyncTCPSocket* %31), !dbg !3030
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3031
  %33 = call i32 (%struct.AsyncTCPSocket*, i8, i32, void (i8*)*, ...) @AsyncTCPSocketPollAdd(%struct.AsyncTCPSocket* %32, i8 signext 1, i32 5, void (i8*)* @AsyncTCPSocketAcceptCallback), !dbg !3032
  store i32 %33, i32* %10, align 4, !dbg !3033
  %34 = load i32, i32* %10, align 4, !dbg !3034
  %35 = icmp ne i32 %34, 0, !dbg !3036
  br i1 %35, label %36, label %47, !dbg !3037

; <label>:36:                                     ; preds = %30
  br label %37, !dbg !3038, !llvm.loop !3040

; <label>:37:                                     ; preds = %36
  %38 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3041
  %39 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %38), !dbg !3044
  %40 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %39), !dbg !3045
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3047
  %42 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %41), !dbg !3048
  %43 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %42), !dbg !3050
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %40, i32 %43), !dbg !3052
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.36, i32 0, i32 0)), !dbg !3054
  br label %44, !dbg !3056

; <label>:44:                                     ; preds = %37
  store i32 8, i32* %11, align 4, !dbg !3057
  %45 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3058
  call void @AsyncTCPSocketUnlock(%struct.AsyncTCPSocket* %45), !dbg !3059
  %46 = call i32 (i32, ...) bitcast (i32 (...)* @assert to i32 (i32, ...)*)(i32 0), !dbg !3060
  br label %56, !dbg !3061

; <label>:47:                                     ; preds = %30
  %48 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3062
  call void @AsyncTCPSocketSetState(%struct.AsyncTCPSocket* %48, i32 0), !dbg !3063
  %49 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %7, align 8, !dbg !3064
  %50 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3065
  %51 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %50, i32 0, i32 8, !dbg !3066
  store void (%struct.AsyncSocket*, i8*)* %49, void (%struct.AsyncSocket*, i8*)** %51, align 8, !dbg !3067
  %52 = load i8*, i8** %8, align 8, !dbg !3068
  %53 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3069
  %54 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %53, i32 0, i32 12, !dbg !3070
  store i8* %52, i8** %54, align 8, !dbg !3071
  %55 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3072
  call void @AsyncTCPSocketUnlock(%struct.AsyncTCPSocket* %55), !dbg !3073
  store i8 1, i8* %5, align 1, !dbg !3074
  br label %69, !dbg !3074

; <label>:56:                                     ; preds = %44, %23, %15
  %57 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3075
  %58 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %57, i32 0, i32 2, !dbg !3076
  %59 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %58, align 8, !dbg !3076
  %60 = call i32 @SSL_Shutdown(%struct.SSLSockStruct* %59), !dbg !3077
  %61 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3078
  %62 = bitcast %struct.AsyncTCPSocket* %61 to i8*, !dbg !3078
  call void @free(i8* %62) #8, !dbg !3079
  %63 = load i32*, i32** %9, align 8, !dbg !3080
  %64 = icmp ne i32* %63, null, !dbg !3080
  br i1 %64, label %65, label %68, !dbg !3082

; <label>:65:                                     ; preds = %56
  %66 = load i32, i32* %11, align 4, !dbg !3083
  %67 = load i32*, i32** %9, align 8, !dbg !3085
  store i32 %66, i32* %67, align 4, !dbg !3086
  br label %68, !dbg !3087

; <label>:68:                                     ; preds = %65, %56
  store i8 0, i8* %5, align 1, !dbg !3088
  br label %69, !dbg !3088

; <label>:69:                                     ; preds = %68, %47
  %70 = load i8, i8* %5, align 1, !dbg !3089
  ret i8 %70, !dbg !3089
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

declare i8* @Err_Errno2String(i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetPortFromAddr(%struct.sockaddr_storage*) #0 !dbg !3090 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.sockaddr_storage*, align 8
  store %struct.sockaddr_storage* %0, %struct.sockaddr_storage** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %3, metadata !3093, metadata !480), !dbg !3094
  %4 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %3, align 8, !dbg !3095
  %5 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %4, i32 0, i32 0, !dbg !3097
  %6 = load i16, i16* %5, align 8, !dbg !3097
  %7 = zext i16 %6 to i32, !dbg !3095
  %8 = icmp eq i32 2, %7, !dbg !3098
  br i1 %8, label %9, label %16, !dbg !3099

; <label>:9:                                      ; preds = %1
  %10 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %3, align 8, !dbg !3100
  %11 = bitcast %struct.sockaddr_storage* %10 to %struct.sockaddr_in*, !dbg !3102
  %12 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 1, !dbg !3102
  %13 = load i16, i16* %12, align 2, !dbg !3102
  %14 = call zeroext i16 @ntohs(i16 zeroext %13) #1, !dbg !3103
  %15 = zext i16 %14 to i32, !dbg !3103
  store i32 %15, i32* %2, align 4, !dbg !3104
  br label %41, !dbg !3104

; <label>:16:                                     ; preds = %1
  %17 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %3, align 8, !dbg !3105
  %18 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %17, i32 0, i32 0, !dbg !3107
  %19 = load i16, i16* %18, align 8, !dbg !3107
  %20 = zext i16 %19 to i32, !dbg !3105
  %21 = icmp eq i32 10, %20, !dbg !3108
  br i1 %21, label %22, label %29, !dbg !3109

; <label>:22:                                     ; preds = %16
  %23 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %3, align 8, !dbg !3110
  %24 = bitcast %struct.sockaddr_storage* %23 to %struct.sockaddr_in6*, !dbg !3112
  %25 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %24, i32 0, i32 1, !dbg !3112
  %26 = load i16, i16* %25, align 2, !dbg !3112
  %27 = call zeroext i16 @ntohs(i16 zeroext %26) #1, !dbg !3113
  %28 = zext i16 %27 to i32, !dbg !3113
  store i32 %28, i32* %2, align 4, !dbg !3114
  br label %41, !dbg !3114

; <label>:29:                                     ; preds = %16
  %30 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %3, align 8, !dbg !3115
  %31 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %30, i32 0, i32 0, !dbg !3117
  %32 = load i16, i16* %31, align 8, !dbg !3117
  %33 = zext i16 %32 to i32, !dbg !3115
  %34 = icmp eq i32 1, %33, !dbg !3118
  br i1 %34, label %35, label %36, !dbg !3119

; <label>:35:                                     ; preds = %29
  store i32 -1, i32* %2, align 4, !dbg !3120
  br label %41, !dbg !3120

; <label>:36:                                     ; preds = %29
  %37 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %3, align 8, !dbg !3122
  %38 = bitcast %struct.sockaddr_storage* %37 to %struct.sockaddr_vm*, !dbg !3124
  %39 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %38, i32 0, i32 2, !dbg !3124
  %40 = load i32, i32* %39, align 4, !dbg !3124
  store i32 %40, i32* %2, align 4, !dbg !3125
  br label %41, !dbg !3125

; <label>:41:                                     ; preds = %36, %35, %22, %9
  %42 = load i32, i32* %2, align 4, !dbg !3126
  ret i32 %42, !dbg !3126
}

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #6

; Function Attrs: nounwind uwtable
define internal signext i8 @AsyncTCPSocketOSVersionSupportsV4Mapped() #0 !dbg !3127 {
  ret i8 1, !dbg !3130
}

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) #6

declare i32 @SSL_Shutdown(%struct.SSLSockStruct*) #4

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #7

; Function Attrs: nounwind
declare i32 @listen(i32, i32) #6

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketPollAdd(%struct.AsyncTCPSocket*, i8 signext, i32, void (i8*)*, ...) #0 !dbg !3131 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.AsyncTCPSocket*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca void (i8*)*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %6, metadata !3134, metadata !480), !dbg !3135
  store i8 %1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !3136, metadata !480), !dbg !3137
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3138, metadata !480), !dbg !3139
  store void (i8*)* %3, void (i8*)** %9, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %9, metadata !3140, metadata !480), !dbg !3141
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3142, metadata !480), !dbg !3143
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3144, metadata !480), !dbg !3145
  %13 = load i8, i8* %7, align 1, !dbg !3146
  %14 = icmp ne i8 %13, 0, !dbg !3146
  br i1 %14, label %15, label %21, !dbg !3148

; <label>:15:                                     ; preds = %4
  store i32 2, i32* %10, align 4, !dbg !3149
  %16 = load i32, i32* %8, align 4, !dbg !3151
  %17 = or i32 %16, 16, !dbg !3151
  store i32 %17, i32* %8, align 4, !dbg !3151
  %18 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3152
  %19 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %18, i32 0, i32 1, !dbg !3153
  %20 = load i32, i32* %19, align 8, !dbg !3153
  store i32 %20, i32* %11, align 4, !dbg !3154
  br label %44, !dbg !3155

; <label>:21:                                     ; preds = %4
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %12, metadata !3156, metadata !480), !dbg !3172
  %22 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %12, i32 0, i32 0, !dbg !3173
  %23 = bitcast %struct.__va_list_tag* %22 to i8*, !dbg !3173
  call void @llvm.va_start(i8* %23), !dbg !3173
  store i32 1, i32* %10, align 4, !dbg !3174
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %12, i32 0, i32 0, !dbg !3175
  %25 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %24, i32 0, i32 0, !dbg !3175
  %26 = load i32, i32* %25, align 16, !dbg !3175
  %27 = icmp ule i32 %26, 40, !dbg !3175
  br i1 %27, label %28, label %34, !dbg !3175

; <label>:28:                                     ; preds = %21
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %24, i32 0, i32 3, !dbg !3176
  %30 = load i8*, i8** %29, align 16, !dbg !3176
  %31 = getelementptr i8, i8* %30, i32 %26, !dbg !3176
  %32 = bitcast i8* %31 to i32*, !dbg !3176
  %33 = add i32 %26, 8, !dbg !3176
  store i32 %33, i32* %25, align 16, !dbg !3176
  br label %39, !dbg !3176

; <label>:34:                                     ; preds = %21
  %35 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %24, i32 0, i32 2, !dbg !3178
  %36 = load i8*, i8** %35, align 8, !dbg !3178
  %37 = bitcast i8* %36 to i32*, !dbg !3178
  %38 = getelementptr i8, i8* %36, i32 8, !dbg !3178
  store i8* %38, i8** %35, align 8, !dbg !3178
  br label %39, !dbg !3178

; <label>:39:                                     ; preds = %34, %28
  %40 = phi i32* [ %32, %28 ], [ %37, %34 ], !dbg !3180
  %41 = load i32, i32* %40, align 4, !dbg !3180
  store i32 %41, i32* %11, align 4, !dbg !3182
  %42 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %12, i32 0, i32 0, !dbg !3183
  %43 = bitcast %struct.__va_list_tag* %42 to i8*, !dbg !3183
  call void @llvm.va_end(i8* %43), !dbg !3183
  br label %44

; <label>:44:                                     ; preds = %39, %15
  %45 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3184
  %46 = call %struct.AsyncSocketPollParams* @AsyncTCPSocketPollParams(%struct.AsyncTCPSocket* %45), !dbg !3186
  %47 = getelementptr inbounds %struct.AsyncSocketPollParams, %struct.AsyncSocketPollParams* %46, i32 0, i32 3, !dbg !3187
  %48 = load %struct.IVmdbPoll*, %struct.IVmdbPoll** %47, align 8, !dbg !3187
  %49 = icmp ne %struct.IVmdbPoll* %48, null, !dbg !3188
  br i1 %49, label %50, label %57, !dbg !3189

; <label>:50:                                     ; preds = %44
  %51 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3190
  %52 = load i8, i8* %7, align 1, !dbg !3192
  %53 = load i32, i32* %8, align 4, !dbg !3193
  %54 = load void (i8*)*, void (i8*)** %9, align 8, !dbg !3194
  %55 = load i32, i32* %11, align 4, !dbg !3195
  %56 = call i32 @AsyncTCPSocketIPollAdd(%struct.AsyncTCPSocket* %51, i8 signext %52, i32 %53, void (i8*)* %54, i32 %55), !dbg !3196
  store i32 %56, i32* %5, align 4, !dbg !3197
  br label %80, !dbg !3197

; <label>:57:                                     ; preds = %44
  %58 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3198
  %59 = call %struct.AsyncSocketPollParams* @AsyncTCPSocketPollParams(%struct.AsyncTCPSocket* %58), !dbg !3199
  %60 = getelementptr inbounds %struct.AsyncSocketPollParams, %struct.AsyncSocketPollParams* %59, i32 0, i32 2, !dbg !3200
  %61 = load i32, i32* %8, align 4, !dbg !3201
  %62 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3202
  %63 = call %struct.AsyncSocketPollParams* @AsyncTCPSocketPollParams(%struct.AsyncTCPSocket* %62), !dbg !3203
  %64 = getelementptr inbounds %struct.AsyncSocketPollParams, %struct.AsyncSocketPollParams* %63, i32 0, i32 0, !dbg !3204
  %65 = load i32, i32* %64, align 8, !dbg !3204
  %66 = or i32 %61, %65, !dbg !3205
  %67 = load void (i8*)*, void (i8*)** %9, align 8, !dbg !3206
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3207
  %69 = bitcast %struct.AsyncTCPSocket* %68 to i8*, !dbg !3207
  %70 = load i32, i32* %10, align 4, !dbg !3208
  %71 = load i32, i32* %11, align 4, !dbg !3209
  %72 = sext i32 %71 to i64, !dbg !3209
  %73 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !3210
  %74 = call %struct.AsyncSocketPollParams* @AsyncTCPSocketPollParams(%struct.AsyncTCPSocket* %73), !dbg !3211
  %75 = getelementptr inbounds %struct.AsyncSocketPollParams, %struct.AsyncSocketPollParams* %74, i32 0, i32 1, !dbg !3212
  %76 = load %struct.MXUserRecLock*, %struct.MXUserRecLock** %75, align 8, !dbg !3212
  %77 = getelementptr inbounds %struct.PollClassSet, %struct.PollClassSet* %60, i32 0, i32 0, !dbg !3213
  %78 = load i64, i64* %77, align 8, !dbg !3213
  %79 = call i32 @Poll_Callback(i64 %78, i32 %66, void (i8*)* %67, i8* %69, i32 %70, i64 %72, %struct.MXUserRecLock* %76), !dbg !3214
  store i32 %79, i32* %5, align 4, !dbg !3216
  br label %80, !dbg !3216

; <label>:80:                                     ; preds = %57, %50
  %81 = load i32, i32* %5, align 4, !dbg !3217
  ret i32 %81, !dbg !3217
}

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketAcceptCallback(i8*) #0 !dbg !3218 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3219, metadata !480), !dbg !3220
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !3221, metadata !480), !dbg !3222
  %5 = load i8*, i8** %2, align 8, !dbg !3223
  %6 = bitcast i8* %5 to %struct.AsyncTCPSocket*, !dbg !3223
  store %struct.AsyncTCPSocket* %6, %struct.AsyncTCPSocket** %3, align 8, !dbg !3222
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3224, metadata !480), !dbg !3225
  %7 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3226
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %7), !dbg !3227
  %8 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3228
  %9 = call i32 @AsyncTCPSocketAcceptInternal(%struct.AsyncTCPSocket* %8), !dbg !3229
  store i32 %9, i32* %4, align 4, !dbg !3230
  %10 = load i32, i32* %4, align 4, !dbg !3231
  %11 = icmp eq i32 %10, 7, !dbg !3233
  br i1 %11, label %12, label %15, !dbg !3234

; <label>:12:                                     ; preds = %1
  %13 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3235
  %14 = load i32, i32* %4, align 4, !dbg !3237
  call void @AsyncTCPSocketHandleError(%struct.AsyncTCPSocket* %13, i32 %14), !dbg !3238
  br label %15, !dbg !3239

; <label>:15:                                     ; preds = %12, %1
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3240
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %16), !dbg !3241
  ret void, !dbg !3242
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.AsyncSocketPollParams* @AsyncTCPSocketPollParams(%struct.AsyncTCPSocket*) #3 !dbg !3243 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !3246, metadata !480), !dbg !3247
  %3 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !3248
  %4 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %3), !dbg !3249
  %5 = call %struct.AsyncSocketPollParams* @AsyncSocketGetPollParams(%struct.AsyncSocket* %4), !dbg !3250
  ret %struct.AsyncSocketPollParams* %5, !dbg !3252
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketIPollAdd(%struct.AsyncTCPSocket*, i8 signext, i32, void (i8*)*, i32) #0 !dbg !3253 {
  %6 = alloca %struct.AsyncTCPSocket*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca void (i8*)*, align 8
  %10 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %6, metadata !3256, metadata !480), !dbg !3257
  store i8 %1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !3258, metadata !480), !dbg !3259
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3260, metadata !480), !dbg !3261
  store void (i8*)* %3, void (i8*)** %9, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %9, metadata !3262, metadata !480), !dbg !3263
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3264, metadata !480), !dbg !3265
  ret i32 1, !dbg !3266
}

declare i32 @Poll_Callback(i64, i32, void (i8*)*, i8*, i32, i64, %struct.MXUserRecLock*) #4

declare %struct.AsyncSocketPollParams* @AsyncSocketGetPollParams(%struct.AsyncSocket*) #4

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketAcceptInternal(%struct.AsyncTCPSocket*) #0 !dbg !3267 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca %struct.AsyncTCPSocket*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.sockaddr_storage, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.sockaddr_in6*, align 8
  %10 = alloca %struct.in6_addr*, align 8
  %11 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !3268, metadata !480), !dbg !3269
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %4, metadata !3270, metadata !480), !dbg !3271
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3272, metadata !480), !dbg !3273
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3274, metadata !480), !dbg !3275
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %7, metadata !3276, metadata !480), !dbg !3277
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3278, metadata !480), !dbg !3279
  store i32 128, i32* %8, align 4, !dbg !3279
  %12 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3280
  %13 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %12, i32 0, i32 1, !dbg !3282
  %14 = load i32, i32* %13, align 8, !dbg !3282
  %15 = bitcast %struct.sockaddr_storage* %7 to %struct.sockaddr*, !dbg !3283
  %16 = call i32 @accept(i32 %14, %struct.sockaddr* %15, i32* %8), !dbg !3284
  store i32 %16, i32* %6, align 4, !dbg !3285
  %17 = icmp eq i32 %16, -1, !dbg !3286
  br i1 %17, label %18, label %62, !dbg !3287

; <label>:18:                                     ; preds = %1
  %19 = call i32* @__errno_location() #1, !dbg !3288
  %20 = load i32, i32* %19, align 4, !dbg !3290
  store i32 %20, i32* %5, align 4, !dbg !3291
  %21 = load i32, i32* %5, align 4, !dbg !3292
  %22 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3293
  %23 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %22, i32 0, i32 3, !dbg !3294
  store i32 %21, i32* %23, align 8, !dbg !3295
  %24 = load i32, i32* %5, align 4, !dbg !3296
  %25 = icmp eq i32 %24, 11, !dbg !3298
  br i1 %25, label %26, label %35, !dbg !3299

; <label>:26:                                     ; preds = %18
  br label %27, !dbg !3300, !llvm.loop !3302

; <label>:27:                                     ; preds = %26
  %28 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3303
  %29 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %28), !dbg !3306
  %30 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %29), !dbg !3307
  %31 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3309
  %32 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %31), !dbg !3310
  %33 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %32), !dbg !3312
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %30, i32 %33), !dbg !3314
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i32 0, i32 0)), !dbg !3316
  br label %34, !dbg !3318

; <label>:34:                                     ; preds = %27
  store i32 1, i32* %2, align 4, !dbg !3319
  br label %153, !dbg !3319

; <label>:35:                                     ; preds = %18
  %36 = load i32, i32* %5, align 4, !dbg !3320
  %37 = icmp eq i32 %36, 103, !dbg !3322
  br i1 %37, label %38, label %47, !dbg !3323

; <label>:38:                                     ; preds = %35
  br label %39, !dbg !3324, !llvm.loop !3326

; <label>:39:                                     ; preds = %38
  %40 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3327
  %41 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %40), !dbg !3330
  %42 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %41), !dbg !3331
  %43 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3333
  %44 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %43), !dbg !3334
  %45 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %44), !dbg !3336
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %42, i32 %45), !dbg !3338
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.38, i32 0, i32 0)), !dbg !3340
  br label %46, !dbg !3342

; <label>:46:                                     ; preds = %39
  store i32 1, i32* %2, align 4, !dbg !3343
  br label %153, !dbg !3343

; <label>:47:                                     ; preds = %35
  br label %48, !dbg !3344, !llvm.loop !3346

; <label>:48:                                     ; preds = %47
  %49 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3347
  %50 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %49), !dbg !3350
  %51 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %50), !dbg !3351
  %52 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3353
  %53 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %52), !dbg !3354
  %54 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %53), !dbg !3356
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %51, i32 %54), !dbg !3358
  %55 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3360
  %56 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %55, i32 0, i32 1, !dbg !3361
  %57 = load i32, i32* %56, align 8, !dbg !3361
  %58 = load i32, i32* %5, align 4, !dbg !3362
  %59 = load i32, i32* %5, align 4, !dbg !3363
  %60 = call i8* @Err_Errno2String(i32 %59), !dbg !3364
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.39, i32 0, i32 0), i32 %57, i32 %58, i8* %60), !dbg !3366
  br label %61, !dbg !3368

; <label>:61:                                     ; preds = %48
  store i32 7, i32* %2, align 4, !dbg !3369
  br label %153, !dbg !3369

; <label>:62:                                     ; preds = %1
  %63 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %7, i32 0, i32 0, !dbg !3370
  %64 = load i16, i16* %63, align 8, !dbg !3370
  %65 = zext i16 %64 to i32, !dbg !3372
  %66 = icmp eq i32 %65, 10, !dbg !3373
  br i1 %66, label %67, label %116, !dbg !3374

; <label>:67:                                     ; preds = %62
  %68 = call signext i8 @AsyncTCPSocketOSVersionSupportsV4Mapped(), !dbg !3375
  %69 = sext i8 %68 to i32, !dbg !3375
  %70 = icmp ne i32 %69, 0, !dbg !3375
  br i1 %70, label %71, label %116, !dbg !3376

; <label>:71:                                     ; preds = %67
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %9, metadata !3378, metadata !480), !dbg !3380
  %72 = bitcast %struct.sockaddr_storage* %7 to %struct.sockaddr_in6*, !dbg !3381
  store %struct.sockaddr_in6* %72, %struct.sockaddr_in6** %9, align 8, !dbg !3380
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %10, metadata !3382, metadata !480), !dbg !3385
  %73 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %9, align 8, !dbg !3386
  %74 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %73, i32 0, i32 3, !dbg !3387
  store %struct.in6_addr* %74, %struct.in6_addr** %10, align 8, !dbg !3385
  %75 = load %struct.in6_addr*, %struct.in6_addr** %10, align 8, !dbg !3388
  %76 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %75, i32 0, i32 0, !dbg !3389
  %77 = bitcast %union.anon* %76 to [4 x i32]*, !dbg !3390
  %78 = getelementptr inbounds [4 x i32], [4 x i32]* %77, i64 0, i64 0, !dbg !3388
  %79 = load i32, i32* %78, align 4, !dbg !3388
  %80 = icmp eq i32 %79, 0, !dbg !3391
  br i1 %80, label %81, label %96, !dbg !3392

; <label>:81:                                     ; preds = %71
  %82 = load %struct.in6_addr*, %struct.in6_addr** %10, align 8, !dbg !3393
  %83 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %82, i32 0, i32 0, !dbg !3395
  %84 = bitcast %union.anon* %83 to [4 x i32]*, !dbg !3396
  %85 = getelementptr inbounds [4 x i32], [4 x i32]* %84, i64 0, i64 1, !dbg !3393
  %86 = load i32, i32* %85, align 4, !dbg !3393
  %87 = icmp eq i32 %86, 0, !dbg !3397
  br i1 %87, label %88, label %96, !dbg !3398

; <label>:88:                                     ; preds = %81
  %89 = load %struct.in6_addr*, %struct.in6_addr** %10, align 8, !dbg !3399
  %90 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %89, i32 0, i32 0, !dbg !3401
  %91 = bitcast %union.anon* %90 to [4 x i32]*, !dbg !3402
  %92 = getelementptr inbounds [4 x i32], [4 x i32]* %91, i64 0, i64 2, !dbg !3399
  %93 = load i32, i32* %92, align 4, !dbg !3399
  %94 = call i32 @htonl(i32 65535) #1, !dbg !3403
  %95 = icmp eq i32 %93, %94, !dbg !3404
  br label %96

; <label>:96:                                     ; preds = %88, %81, %71
  %97 = phi i1 [ false, %81 ], [ false, %71 ], [ %95, %88 ]
  %98 = zext i1 %97 to i32, !dbg !3405
  store i32 %98, i32* %11, align 4, !dbg !3407
  %99 = load i32, i32* %11, align 4, !dbg !3408
  %100 = icmp ne i32 %99, 0, !dbg !3409
  br i1 %100, label %101, label %115, !dbg !3410

; <label>:101:                                    ; preds = %96
  br label %102, !dbg !3411, !llvm.loop !3413

; <label>:102:                                    ; preds = %101
  %103 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3414
  %104 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %103), !dbg !3417
  %105 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %104), !dbg !3418
  %106 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3420
  %107 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %106), !dbg !3421
  %108 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %107), !dbg !3423
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %105, i32 %108), !dbg !3425
  %109 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3427
  %110 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %109, i32 0, i32 1, !dbg !3428
  %111 = load i32, i32* %110, align 8, !dbg !3428
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.40, i32 0, i32 0), i32 %111), !dbg !3429
  br label %112, !dbg !3431

; <label>:112:                                    ; preds = %102
  %113 = load i32, i32* %6, align 4, !dbg !3432
  %114 = call i32 @close(i32 %113), !dbg !3433
  store i32 7, i32* %2, align 4, !dbg !3434
  br label %153, !dbg !3434

; <label>:115:                                    ; preds = %96
  br label %116, !dbg !3435

; <label>:116:                                    ; preds = %115, %67, %62
  %117 = load i32, i32* %6, align 4, !dbg !3436
  %118 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3437
  %119 = call %struct.AsyncSocketPollParams* @AsyncTCPSocketPollParams(%struct.AsyncTCPSocket* %118), !dbg !3438
  %120 = call %struct.AsyncTCPSocket* @AsyncTCPSocketAttachToFd(i32 %117, %struct.AsyncSocketPollParams* %119, i32* null), !dbg !3439
  store %struct.AsyncTCPSocket* %120, %struct.AsyncTCPSocket** %4, align 8, !dbg !3440
  %121 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !3441
  %122 = icmp ne %struct.AsyncTCPSocket* %121, null, !dbg !3441
  br i1 %122, label %126, label %123, !dbg !3443

; <label>:123:                                    ; preds = %116
  %124 = load i32, i32* %6, align 4, !dbg !3444
  %125 = call i32 @close(i32 %124), !dbg !3446
  store i32 7, i32* %2, align 4, !dbg !3447
  br label %153, !dbg !3447

; <label>:126:                                    ; preds = %116
  %127 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !3448
  %128 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %127, i32 0, i32 6, !dbg !3449
  %129 = bitcast %struct.sockaddr_storage* %128 to i8*, !dbg !3450
  %130 = bitcast %struct.sockaddr_storage* %7 to i8*, !dbg !3450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* %130, i64 128, i32 8, i1 false), !dbg !3450
  %131 = load i32, i32* %8, align 4, !dbg !3451
  %132 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !3452
  %133 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %132, i32 0, i32 7, !dbg !3453
  store i32 %131, i32* %133, align 8, !dbg !3454
  %134 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !3455
  call void @AsyncTCPSocketSetState(%struct.AsyncTCPSocket* %134, i32 2), !dbg !3456
  %135 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3457
  %136 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %135, i32 0, i32 15, !dbg !3458
  %137 = load void (i8*)*, void (i8*)** %136, align 8, !dbg !3458
  %138 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !3459
  %139 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %138, i32 0, i32 15, !dbg !3460
  store void (i8*)* %137, void (i8*)** %139, align 8, !dbg !3461
  %140 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3462
  %141 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %140, i32 0, i32 14, !dbg !3463
  %142 = load void (i8*)*, void (i8*)** %141, align 8, !dbg !3463
  %143 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !3464
  %144 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %143, i32 0, i32 14, !dbg !3465
  store void (i8*)* %142, void (i8*)** %144, align 8, !dbg !3466
  %145 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3467
  %146 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %145, i32 0, i32 8, !dbg !3468
  %147 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %146, align 8, !dbg !3468
  %148 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !3469
  %149 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %148), !dbg !3470
  %150 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3471
  %151 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %150, i32 0, i32 12, !dbg !3472
  %152 = load i8*, i8** %151, align 8, !dbg !3472
  call void %147(%struct.AsyncSocket* %149, i8* %152), !dbg !3473
  store i32 0, i32* %2, align 4, !dbg !3474
  br label %153, !dbg !3474

; <label>:153:                                    ; preds = %126, %123, %112, %61, %46, %34
  %154 = load i32, i32* %2, align 4, !dbg !3475
  ret i32 %154, !dbg !3475
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @AsyncTCPSocketHandleError(%struct.AsyncTCPSocket*, i32) #3 !dbg !3476 {
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !3479, metadata !480), !dbg !3480
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3481, metadata !480), !dbg !3482
  %5 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3483
  %6 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %5), !dbg !3484
  %7 = load i32, i32* %4, align 4, !dbg !3485
  call void @AsyncSocketHandleError(%struct.AsyncSocket* %6, i32 %7), !dbg !3486
  ret void, !dbg !3488
}

declare i32 @accept(i32, %struct.sockaddr*, i32*) #4

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #7

declare void @AsyncSocketHandleError(%struct.AsyncSocket*, i32) #4

declare i8* @AsyncSocket_MsgError(i32) #4

declare i32 @connect(i32, %struct.sockaddr*, i32) #4

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketConnectCallback(i8*) #0 !dbg !3489 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3490, metadata !480), !dbg !3491
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !3492, metadata !480), !dbg !3493
  %5 = load i8*, i8** %2, align 8, !dbg !3494
  %6 = bitcast i8* %5 to %struct.AsyncTCPSocket*, !dbg !3494
  store %struct.AsyncTCPSocket* %6, %struct.AsyncTCPSocket** %3, align 8, !dbg !3493
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3495, metadata !480), !dbg !3496
  %7 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3497
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %7), !dbg !3498
  %8 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3499
  %9 = call i32 @AsyncTCPSocketConnectInternal(%struct.AsyncTCPSocket* %8), !dbg !3500
  store i32 %9, i32* %4, align 4, !dbg !3501
  %10 = load i32, i32* %4, align 4, !dbg !3502
  %11 = icmp ne i32 %10, 0, !dbg !3504
  br i1 %11, label %12, label %15, !dbg !3505

; <label>:12:                                     ; preds = %1
  %13 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3506
  %14 = load i32, i32* %4, align 4, !dbg !3508
  call void @AsyncTCPSocketHandleError(%struct.AsyncTCPSocket* %13, i32 %14), !dbg !3509
  br label %15, !dbg !3510

; <label>:15:                                     ; preds = %12, %1
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3511
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %16), !dbg !3512
  ret void, !dbg !3513
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketConnectInternal(%struct.AsyncTCPSocket*) #0 !dbg !3514 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !3515, metadata !480), !dbg !3516
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3517, metadata !480), !dbg !3518
  store i32 0, i32* %4, align 4, !dbg !3518
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3519, metadata !480), !dbg !3520
  store i32 4, i32* %5, align 4, !dbg !3520
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3521, metadata !480), !dbg !3522
  %7 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3523
  %8 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %7, i32 0, i32 1, !dbg !3525
  %9 = load i32, i32* %8, align 8, !dbg !3525
  %10 = bitcast i32* %4 to i8*, !dbg !3526
  %11 = bitcast i32* %5 to i8*, !dbg !3527
  %12 = bitcast i8* %11 to i32*, !dbg !3527
  %13 = call i32 @getsockopt(i32 %9, i32 1, i32 4, i8* %10, i32* %12) #8, !dbg !3528
  %14 = icmp ne i32 %13, 0, !dbg !3529
  br i1 %14, label %15, label %27, !dbg !3530

; <label>:15:                                     ; preds = %1
  %16 = call i32* @__errno_location() #1, !dbg !3531
  %17 = load i32, i32* %16, align 4, !dbg !3533
  store i32 %17, i32* %6, align 4, !dbg !3534
  %18 = load i32, i32* %6, align 4, !dbg !3535
  %19 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3536
  %20 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %19, i32 0, i32 3, !dbg !3537
  store i32 %18, i32* %20, align 8, !dbg !3538
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3539
  %22 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %21, i32 0, i32 1, !dbg !3540
  %23 = load i32, i32* %22, align 8, !dbg !3540
  %24 = load i32, i32* %6, align 4, !dbg !3541
  %25 = load i32, i32* %6, align 4, !dbg !3542
  %26 = call i8* @Err_Errno2String(i32 %25), !dbg !3543
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.47, i32 0, i32 0), i32 %23, i32 %24, i8* %26), !dbg !3544
  store i32 1, i32* %2, align 4, !dbg !3545
  br label %72, !dbg !3545

; <label>:27:                                     ; preds = %1
  %28 = load i32, i32* %4, align 4, !dbg !3546
  %29 = icmp ne i32 %28, 0, !dbg !3548
  br i1 %29, label %30, label %36, !dbg !3549

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* %4, align 4, !dbg !3550
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3552
  %33 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %32, i32 0, i32 3, !dbg !3553
  store i32 %31, i32* %33, align 8, !dbg !3554
  br label %34, !dbg !3555, !llvm.loop !3556

; <label>:34:                                     ; preds = %30
  br label %35, !dbg !3557

; <label>:35:                                     ; preds = %34
  store i32 1, i32* %2, align 4, !dbg !3560
  br label %72, !dbg !3560

; <label>:36:                                     ; preds = %27
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3561
  %38 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %37, i32 0, i32 5, !dbg !3562
  store i32 128, i32* %38, align 8, !dbg !3563
  %39 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3564
  %40 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %39, i32 0, i32 1, !dbg !3566
  %41 = load i32, i32* %40, align 8, !dbg !3566
  %42 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3567
  %43 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %42, i32 0, i32 4, !dbg !3568
  %44 = bitcast %struct.sockaddr_storage* %43 to %struct.sockaddr*, !dbg !3569
  %45 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3570
  %46 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %45, i32 0, i32 5, !dbg !3571
  %47 = call i32 @getsockname(i32 %41, %struct.sockaddr* %44, i32* %46) #8, !dbg !3572
  %48 = icmp ne i32 %47, 0, !dbg !3573
  br i1 %48, label %49, label %61, !dbg !3574

; <label>:49:                                     ; preds = %36
  %50 = call i32* @__errno_location() #1, !dbg !3575
  %51 = load i32, i32* %50, align 4, !dbg !3577
  store i32 %51, i32* %6, align 4, !dbg !3578
  %52 = load i32, i32* %6, align 4, !dbg !3579
  %53 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3580
  %54 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %53, i32 0, i32 3, !dbg !3581
  store i32 %52, i32* %54, align 8, !dbg !3582
  %55 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3583
  %56 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %55, i32 0, i32 1, !dbg !3584
  %57 = load i32, i32* %56, align 8, !dbg !3584
  %58 = load i32, i32* %6, align 4, !dbg !3585
  %59 = load i32, i32* %6, align 4, !dbg !3586
  %60 = call i8* @Err_Errno2String(i32 %59), !dbg !3587
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.48, i32 0, i32 0), i32 %57, i32 %58, i8* %60), !dbg !3588
  store i32 1, i32* %2, align 4, !dbg !3589
  br label %72, !dbg !3589

; <label>:61:                                     ; preds = %36
  br label %62, !dbg !3590

; <label>:62:                                     ; preds = %61
  %63 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3592
  call void @AsyncTCPSocketSetState(%struct.AsyncTCPSocket* %63, i32 2), !dbg !3593
  %64 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3594
  %65 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %64, i32 0, i32 8, !dbg !3595
  %66 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %65, align 8, !dbg !3595
  %67 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3596
  %68 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %67), !dbg !3597
  %69 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3598
  %70 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %69, i32 0, i32 12, !dbg !3599
  %71 = load i8*, i8** %70, align 8, !dbg !3599
  call void %66(%struct.AsyncSocket* %68, i8* %71), !dbg !3600
  store i32 0, i32* %2, align 4, !dbg !3602
  br label %72, !dbg !3602

; <label>:72:                                     ; preds = %62, %49, %35, %15
  %73 = load i32, i32* %2, align 4, !dbg !3603
  ret i32 %73, !dbg !3603
}

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) #6

; Function Attrs: nounwind
declare i32 @getsockname(i32, %struct.sockaddr*, i32*) #6

declare i8* @UtilSafeCalloc0(i64, i64) #4

declare void @AsyncSocketInitSocket(%struct.AsyncSocket*, %struct.AsyncSocketPollParams*, %struct.AsyncSocketVTable*) #4

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketIPollSendCallback(i8*) #0 !dbg !3604 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3605, metadata !480), !dbg !3606
  call void (i8*, ...) @Panic(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i32 0, i32 0), i32 5027) #11, !dbg !3607
  unreachable, !dbg !3607
                                                  ; No predecessors!
  ret void, !dbg !3608
}

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketIPollRecvCallback(i8*) #0 !dbg !3609 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3610, metadata !480), !dbg !3611
  call void (i8*, ...) @Panic(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i32 0, i32 0), i32 4890) #11, !dbg !3612
  unreachable, !dbg !3612
                                                  ; No predecessors!
  ret void, !dbg !3613
}

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketSendCallback(i8*) #0 !dbg !3614 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3615, metadata !480), !dbg !3616
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !3617, metadata !480), !dbg !3618
  %6 = load i8*, i8** %2, align 8, !dbg !3619
  %7 = bitcast i8* %6 to %struct.AsyncTCPSocket*, !dbg !3619
  store %struct.AsyncTCPSocket* %7, %struct.AsyncTCPSocket** %3, align 8, !dbg !3618
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3620, metadata !480), !dbg !3621
  %8 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3622
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %8), !dbg !3623
  %9 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3624
  %10 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %9, i32 0, i32 24, !dbg !3625
  store i8 0, i8* %10, align 4, !dbg !3626
  %11 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3627
  %12 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %11, i32 0, i32 25, !dbg !3628
  store i8 0, i8* %12, align 1, !dbg !3629
  %13 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3630
  %14 = call i32 @AsyncTCPSocketWriteBuffers(%struct.AsyncTCPSocket* %13), !dbg !3631
  store i32 %14, i32* %4, align 4, !dbg !3632
  %15 = load i32, i32* %4, align 4, !dbg !3633
  %16 = icmp ne i32 %15, 0, !dbg !3635
  br i1 %16, label %17, label %23, !dbg !3636

; <label>:17:                                     ; preds = %1
  %18 = load i32, i32* %4, align 4, !dbg !3637
  %19 = icmp ne i32 %18, 9, !dbg !3638
  br i1 %19, label %20, label %23, !dbg !3639

; <label>:20:                                     ; preds = %17
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3641
  %22 = load i32, i32* %4, align 4, !dbg !3643
  call void @AsyncTCPSocketHandleError(%struct.AsyncTCPSocket* %21, i32 %22), !dbg !3644
  br label %50, !dbg !3645

; <label>:23:                                     ; preds = %17, %1
  %24 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3646
  %25 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %24, i32 0, i32 21, !dbg !3649
  %26 = load %struct.SendBufList*, %struct.SendBufList** %25, align 8, !dbg !3649
  %27 = icmp ne %struct.SendBufList* %26, null, !dbg !3646
  br i1 %27, label %28, label %49, !dbg !3650

; <label>:28:                                     ; preds = %23
  %29 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3651
  %30 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %29, i32 0, i32 24, !dbg !3653
  %31 = load i8, i8* %30, align 4, !dbg !3653
  %32 = icmp ne i8 %31, 0, !dbg !3651
  br i1 %32, label %49, label %33, !dbg !3654

; <label>:33:                                     ; preds = %28
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3655, metadata !480), !dbg !3657
  %34 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3658
  %35 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3660
  %36 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %35, i32 0, i32 14, !dbg !3661
  %37 = load void (i8*)*, void (i8*)** %36, align 8, !dbg !3661
  %38 = call i32 (%struct.AsyncTCPSocket*, i8, i32, void (i8*)*, ...) @AsyncTCPSocketPollAdd(%struct.AsyncTCPSocket* %34, i8 signext 1, i32 8, void (i8*)* %37), !dbg !3662
  store i32 %38, i32* %5, align 4, !dbg !3663
  %39 = load i32, i32* %5, align 4, !dbg !3664
  %40 = icmp eq i32 %39, 0, !dbg !3667
  %41 = xor i1 %40, true, !dbg !3668
  %42 = zext i1 %41 to i32, !dbg !3668
  %43 = sext i32 %42 to i64, !dbg !3669
  %44 = icmp ne i64 %43, 0, !dbg !3670
  br i1 %44, label %45, label %46, !dbg !3671

; <label>:45:                                     ; preds = %33
  call void (i8*, ...) @Panic(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i32 0, i32 0), i32 4995) #11, !dbg !3672
  unreachable, !dbg !3672

; <label>:46:                                     ; preds = %33
  %47 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3675
  %48 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %47, i32 0, i32 24, !dbg !3676
  store i8 1, i8* %48, align 4, !dbg !3677
  br label %49, !dbg !3678

; <label>:49:                                     ; preds = %46, %28, %23
  br label %50

; <label>:50:                                     ; preds = %49, %20
  %51 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3679
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %51), !dbg !3680
  ret void, !dbg !3681
}

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketRecvCallback(i8*) #0 !dbg !3682 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3683, metadata !480), !dbg !3684
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !3685, metadata !480), !dbg !3686
  %5 = load i8*, i8** %2, align 8, !dbg !3687
  %6 = bitcast i8* %5 to %struct.AsyncTCPSocket*, !dbg !3687
  store %struct.AsyncTCPSocket* %6, %struct.AsyncTCPSocket** %3, align 8, !dbg !3686
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3688, metadata !480), !dbg !3689
  %7 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3690
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %7), !dbg !3691
  %8 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3692
  %9 = call i32 @AsyncTCPSocketFillRecvBuffer(%struct.AsyncTCPSocket* %8), !dbg !3693
  store i32 %9, i32* %4, align 4, !dbg !3694
  %10 = load i32, i32* %4, align 4, !dbg !3695
  %11 = icmp eq i32 %10, 1, !dbg !3697
  br i1 %11, label %15, label %12, !dbg !3698

; <label>:12:                                     ; preds = %1
  %13 = load i32, i32* %4, align 4, !dbg !3699
  %14 = icmp eq i32 %13, 4, !dbg !3701
  br i1 %14, label %15, label %18, !dbg !3702

; <label>:15:                                     ; preds = %12, %1
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3703
  %17 = load i32, i32* %4, align 4, !dbg !3705
  call void @AsyncTCPSocketHandleError(%struct.AsyncTCPSocket* %16, i32 %17), !dbg !3706
  br label %18, !dbg !3707

; <label>:18:                                     ; preds = %15, %12
  %19 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !3708
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %19), !dbg !3709
  ret void, !dbg !3710
}

declare i32 @AsyncSocketGetState(%struct.AsyncSocket*) #4

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketSetOption(%struct.AsyncSocket*, i32, i32, i8*, i32) #0 !dbg !3711 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.AsyncSocket*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.AsyncTCPSocket*, align 8
  %13 = alloca i8, align 1
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %7, metadata !3712, metadata !480), !dbg !3713
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3714, metadata !480), !dbg !3715
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3716, metadata !480), !dbg !3717
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3718, metadata !480), !dbg !3719
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3720, metadata !480), !dbg !3721
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %12, metadata !3722, metadata !480), !dbg !3723
  %14 = load %struct.AsyncSocket*, %struct.AsyncSocket** %7, align 8, !dbg !3724
  %15 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %14), !dbg !3725
  store %struct.AsyncTCPSocket* %15, %struct.AsyncTCPSocket** %12, align 8, !dbg !3723
  call void @llvm.dbg.declare(metadata i8* %13, metadata !3726, metadata !480), !dbg !3727
  %16 = load i32, i32* %8, align 4, !dbg !3728
  switch i32 %16, label %18 [
    i32 1, label %17
    i32 6, label %17
    i32 1001, label %17
  ], !dbg !3729

; <label>:17:                                     ; preds = %5, %5, %5
  br label %29, !dbg !3730

; <label>:18:                                     ; preds = %5
  br label %19, !dbg !3732, !llvm.loop !3733

; <label>:19:                                     ; preds = %18
  %20 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3734
  %21 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %20), !dbg !3737
  %22 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %21), !dbg !3738
  %23 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3740
  %24 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %23), !dbg !3741
  %25 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %24), !dbg !3743
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %22, i32 %25), !dbg !3745
  %26 = load i32, i32* %8, align 4, !dbg !3747
  %27 = load i32, i32* %9, align 4, !dbg !3748
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.AsyncTCPSocketSetOption, i32 0, i32 0), i32 %26, i32 %27), !dbg !3749
  br label %28, !dbg !3751

; <label>:28:                                     ; preds = %19
  store i32 5, i32* %6, align 4, !dbg !3752
  br label %120, !dbg !3752

; <label>:29:                                     ; preds = %17
  %30 = load i32, i32* %8, align 4, !dbg !3753
  %31 = icmp eq i32 %30, 1001, !dbg !3755
  br i1 %31, label %32, label %52, !dbg !3756

; <label>:32:                                     ; preds = %29
  %33 = load i32, i32* %9, align 4, !dbg !3757
  %34 = icmp eq i32 %33, 0, !dbg !3758
  br i1 %34, label %35, label %52, !dbg !3759

; <label>:35:                                     ; preds = %32
  %36 = load i8*, i8** %10, align 8, !dbg !3761
  %37 = load i8, i8* %36, align 1, !dbg !3763
  %38 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3764
  %39 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %38, i32 0, i32 28, !dbg !3765
  store i8 %37, i8* %39, align 8, !dbg !3766
  br label %40, !dbg !3767, !llvm.loop !3768

; <label>:40:                                     ; preds = %35
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3769
  %42 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %41), !dbg !3772
  %43 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %42), !dbg !3773
  %44 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3775
  %45 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %44), !dbg !3776
  %46 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %45), !dbg !3778
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %43, i32 %46), !dbg !3780
  %47 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3782
  %48 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %47, i32 0, i32 28, !dbg !3783
  %49 = load i8, i8* %48, align 8, !dbg !3783
  %50 = sext i8 %49 to i32, !dbg !3784
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.AsyncTCPSocketSetOption, i32 0, i32 0), i32 %50), !dbg !3785
  br label %51, !dbg !3787

; <label>:51:                                     ; preds = %40
  store i32 0, i32* %6, align 4, !dbg !3788
  br label %120, !dbg !3788

; <label>:52:                                     ; preds = %32, %29
  store i8 0, i8* %13, align 1, !dbg !3789
  %53 = load i32, i32* %8, align 4, !dbg !3790
  %54 = icmp eq i32 %53, 1, !dbg !3792
  br i1 %54, label %55, label %59, !dbg !3793

; <label>:55:                                     ; preds = %52
  %56 = load i32, i32* %9, align 4, !dbg !3794
  switch i32 %56, label %58 [
    i32 7, label %57
    i32 8, label %57
  ], !dbg !3796

; <label>:57:                                     ; preds = %55, %55
  store i8 1, i8* %13, align 1, !dbg !3797
  br label %58, !dbg !3799

; <label>:58:                                     ; preds = %57, %55
  br label %63, !dbg !3800

; <label>:59:                                     ; preds = %52
  %60 = load i32, i32* %9, align 4, !dbg !3801
  switch i32 %60, label %62 [
    i32 4, label %61
    i32 5, label %61
    i32 6, label %61
    i32 1, label %61
  ], !dbg !3803

; <label>:61:                                     ; preds = %59, %59, %59, %59
  store i8 1, i8* %13, align 1, !dbg !3804
  br label %62, !dbg !3806

; <label>:62:                                     ; preds = %61, %59
  br label %63

; <label>:63:                                     ; preds = %62, %58
  %64 = load i8, i8* %13, align 1, !dbg !3807
  %65 = icmp ne i8 %64, 0, !dbg !3807
  br i1 %65, label %77, label %66, !dbg !3809

; <label>:66:                                     ; preds = %63
  br label %67, !dbg !3810, !llvm.loop !3812

; <label>:67:                                     ; preds = %66
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3813
  %69 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %68), !dbg !3816
  %70 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %69), !dbg !3817
  %71 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3819
  %72 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %71), !dbg !3820
  %73 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %72), !dbg !3822
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %70, i32 %73), !dbg !3824
  %74 = load i32, i32* %8, align 4, !dbg !3826
  %75 = load i32, i32* %9, align 4, !dbg !3827
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.AsyncTCPSocketSetOption, i32 0, i32 0), i32 %74, i32 %75), !dbg !3828
  br label %76, !dbg !3830

; <label>:76:                                     ; preds = %67
  store i32 5, i32* %6, align 4, !dbg !3831
  br label %120, !dbg !3831

; <label>:77:                                     ; preds = %63
  %78 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3832
  %79 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %78, i32 0, i32 1, !dbg !3834
  %80 = load i32, i32* %79, align 8, !dbg !3834
  %81 = load i32, i32* %8, align 4, !dbg !3835
  %82 = load i32, i32* %9, align 4, !dbg !3836
  %83 = load i8*, i8** %10, align 8, !dbg !3837
  %84 = load i32, i32* %11, align 4, !dbg !3838
  %85 = call i32 @setsockopt(i32 %80, i32 %81, i32 %82, i8* %83, i32 %84) #8, !dbg !3839
  %86 = icmp ne i32 %85, 0, !dbg !3840
  br i1 %86, label %87, label %109, !dbg !3841

; <label>:87:                                     ; preds = %77
  %88 = call i32* @__errno_location() #1, !dbg !3842
  %89 = load i32, i32* %88, align 4, !dbg !3844
  %90 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3845
  %91 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %90, i32 0, i32 3, !dbg !3846
  store i32 %89, i32* %91, align 8, !dbg !3847
  br label %92, !dbg !3848, !llvm.loop !3849

; <label>:92:                                     ; preds = %87
  %93 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3850
  %94 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %93), !dbg !3853
  %95 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %94), !dbg !3854
  %96 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3856
  %97 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %96), !dbg !3857
  %98 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %97), !dbg !3859
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %95, i32 %98), !dbg !3861
  %99 = load i32, i32* %8, align 4, !dbg !3863
  %100 = load i32, i32* %9, align 4, !dbg !3864
  %101 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3865
  %102 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %101, i32 0, i32 3, !dbg !3866
  %103 = load i32, i32* %102, align 8, !dbg !3866
  %104 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3867
  %105 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %104, i32 0, i32 3, !dbg !3868
  %106 = load i32, i32* %105, align 8, !dbg !3868
  %107 = call i8* @Err_Errno2String(i32 %106), !dbg !3869
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.AsyncTCPSocketSetOption, i32 0, i32 0), i32 %99, i32 %100, i32 %103, i8* %107), !dbg !3871
  br label %108, !dbg !3873

; <label>:108:                                    ; preds = %92
  store i32 1, i32* %6, align 4, !dbg !3874
  br label %120, !dbg !3874

; <label>:109:                                    ; preds = %77
  br label %110, !dbg !3875, !llvm.loop !3876

; <label>:110:                                    ; preds = %109
  %111 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3877
  %112 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %111), !dbg !3880
  %113 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %112), !dbg !3881
  %114 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3883
  %115 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %114), !dbg !3884
  %116 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %115), !dbg !3886
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %113, i32 %116), !dbg !3888
  %117 = load i32, i32* %8, align 4, !dbg !3890
  %118 = load i32, i32* %9, align 4, !dbg !3891
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.AsyncTCPSocketSetOption, i32 0, i32 0), i32 %117, i32 %118), !dbg !3892
  br label %119, !dbg !3894

; <label>:119:                                    ; preds = %110
  store i32 0, i32* %6, align 4, !dbg !3895
  br label %120, !dbg !3895

; <label>:120:                                    ; preds = %119, %108, %76, %51, %28
  %121 = load i32, i32* %6, align 4, !dbg !3896
  ret i32 %121, !dbg !3896
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetOption(%struct.AsyncSocket*, i32, i32, i8*, i32*) #0 !dbg !3897 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.AsyncSocket*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca %struct.AsyncTCPSocket*, align 8
  %13 = alloca i8, align 1
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %7, metadata !3898, metadata !480), !dbg !3899
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3900, metadata !480), !dbg !3901
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3902, metadata !480), !dbg !3903
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3904, metadata !480), !dbg !3905
  store i32* %4, i32** %11, align 8
  call void @llvm.dbg.declare(metadata i32** %11, metadata !3906, metadata !480), !dbg !3907
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %12, metadata !3908, metadata !480), !dbg !3909
  %14 = load %struct.AsyncSocket*, %struct.AsyncSocket** %7, align 8, !dbg !3910
  %15 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %14), !dbg !3911
  store %struct.AsyncTCPSocket* %15, %struct.AsyncTCPSocket** %12, align 8, !dbg !3909
  call void @llvm.dbg.declare(metadata i8* %13, metadata !3912, metadata !480), !dbg !3913
  %16 = load i32, i32* %8, align 4, !dbg !3914
  switch i32 %16, label %18 [
    i32 1, label %17
    i32 6, label %17
    i32 1001, label %17
  ], !dbg !3915

; <label>:17:                                     ; preds = %5, %5, %5
  br label %29, !dbg !3916

; <label>:18:                                     ; preds = %5
  br label %19, !dbg !3918, !llvm.loop !3919

; <label>:19:                                     ; preds = %18
  %20 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3920
  %21 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %20), !dbg !3923
  %22 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %21), !dbg !3924
  %23 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3926
  %24 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %23), !dbg !3927
  %25 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %24), !dbg !3929
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %22, i32 %25), !dbg !3931
  %26 = load i32, i32* %8, align 4, !dbg !3933
  %27 = load i32, i32* %9, align 4, !dbg !3934
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.AsyncTCPSocketGetOption, i32 0, i32 0), i32 %26, i32 %27), !dbg !3935
  br label %28, !dbg !3937

; <label>:28:                                     ; preds = %19
  store i32 5, i32* %6, align 4, !dbg !3938
  br label %121, !dbg !3938

; <label>:29:                                     ; preds = %17
  %30 = load i32, i32* %8, align 4, !dbg !3939
  %31 = icmp eq i32 %30, 1001, !dbg !3941
  br i1 %31, label %32, label %53, !dbg !3942

; <label>:32:                                     ; preds = %29
  %33 = load i32, i32* %9, align 4, !dbg !3943
  %34 = icmp eq i32 %33, 0, !dbg !3944
  br i1 %34, label %35, label %53, !dbg !3945

; <label>:35:                                     ; preds = %32
  %36 = load i32*, i32** %11, align 8, !dbg !3947
  store i32 1, i32* %36, align 4, !dbg !3949
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3950
  %38 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %37, i32 0, i32 28, !dbg !3951
  %39 = load i8, i8* %38, align 8, !dbg !3951
  %40 = load i8*, i8** %10, align 8, !dbg !3952
  store i8 %39, i8* %40, align 1, !dbg !3953
  br label %41, !dbg !3954, !llvm.loop !3955

; <label>:41:                                     ; preds = %35
  %42 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3956
  %43 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %42), !dbg !3959
  %44 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %43), !dbg !3960
  %45 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3962
  %46 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %45), !dbg !3963
  %47 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %46), !dbg !3965
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %44, i32 %47), !dbg !3967
  %48 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !3969
  %49 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %48, i32 0, i32 28, !dbg !3970
  %50 = load i8, i8* %49, align 8, !dbg !3970
  %51 = sext i8 %50 to i32, !dbg !3971
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.AsyncTCPSocketGetOption, i32 0, i32 0), i32 %51), !dbg !3972
  br label %52, !dbg !3974

; <label>:52:                                     ; preds = %41
  store i32 0, i32* %6, align 4, !dbg !3975
  br label %121, !dbg !3975

; <label>:53:                                     ; preds = %32, %29
  store i8 0, i8* %13, align 1, !dbg !3976
  %54 = load i32, i32* %8, align 4, !dbg !3977
  %55 = icmp eq i32 %54, 1, !dbg !3979
  br i1 %55, label %56, label %60, !dbg !3980

; <label>:56:                                     ; preds = %53
  %57 = load i32, i32* %9, align 4, !dbg !3981
  switch i32 %57, label %59 [
    i32 7, label %58
    i32 8, label %58
  ], !dbg !3983

; <label>:58:                                     ; preds = %56, %56
  store i8 1, i8* %13, align 1, !dbg !3984
  br label %59, !dbg !3986

; <label>:59:                                     ; preds = %58, %56
  br label %64, !dbg !3987

; <label>:60:                                     ; preds = %53
  %61 = load i32, i32* %9, align 4, !dbg !3988
  switch i32 %61, label %63 [
    i32 4, label %62
    i32 5, label %62
    i32 6, label %62
    i32 1, label %62
  ], !dbg !3990

; <label>:62:                                     ; preds = %60, %60, %60, %60
  store i8 1, i8* %13, align 1, !dbg !3991
  br label %63, !dbg !3993

; <label>:63:                                     ; preds = %62, %60
  br label %64

; <label>:64:                                     ; preds = %63, %59
  %65 = load i8, i8* %13, align 1, !dbg !3994
  %66 = icmp ne i8 %65, 0, !dbg !3994
  br i1 %66, label %78, label %67, !dbg !3996

; <label>:67:                                     ; preds = %64
  br label %68, !dbg !3997, !llvm.loop !3999

; <label>:68:                                     ; preds = %67
  %69 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4000
  %70 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %69), !dbg !4003
  %71 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %70), !dbg !4004
  %72 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4006
  %73 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %72), !dbg !4007
  %74 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %73), !dbg !4009
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %71, i32 %74), !dbg !4011
  %75 = load i32, i32* %8, align 4, !dbg !4013
  %76 = load i32, i32* %9, align 4, !dbg !4014
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.AsyncTCPSocketGetOption, i32 0, i32 0), i32 %75, i32 %76), !dbg !4015
  br label %77, !dbg !4017

; <label>:77:                                     ; preds = %68
  store i32 5, i32* %6, align 4, !dbg !4018
  br label %121, !dbg !4018

; <label>:78:                                     ; preds = %64
  %79 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4019
  %80 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %79, i32 0, i32 1, !dbg !4021
  %81 = load i32, i32* %80, align 8, !dbg !4021
  %82 = load i32, i32* %8, align 4, !dbg !4022
  %83 = load i32, i32* %9, align 4, !dbg !4023
  %84 = load i8*, i8** %10, align 8, !dbg !4024
  %85 = load i32*, i32** %11, align 8, !dbg !4025
  %86 = call i32 @getsockopt(i32 %81, i32 %82, i32 %83, i8* %84, i32* %85) #8, !dbg !4026
  %87 = icmp ne i32 %86, 0, !dbg !4027
  br i1 %87, label %88, label %110, !dbg !4028

; <label>:88:                                     ; preds = %78
  %89 = call i32* @__errno_location() #1, !dbg !4029
  %90 = load i32, i32* %89, align 4, !dbg !4031
  %91 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4032
  %92 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %91, i32 0, i32 3, !dbg !4033
  store i32 %90, i32* %92, align 8, !dbg !4034
  br label %93, !dbg !4035, !llvm.loop !4036

; <label>:93:                                     ; preds = %88
  %94 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4037
  %95 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %94), !dbg !4040
  %96 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %95), !dbg !4041
  %97 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4043
  %98 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %97), !dbg !4044
  %99 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %98), !dbg !4046
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %96, i32 %99), !dbg !4048
  %100 = load i32, i32* %8, align 4, !dbg !4050
  %101 = load i32, i32* %9, align 4, !dbg !4051
  %102 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4052
  %103 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %102, i32 0, i32 3, !dbg !4053
  %104 = load i32, i32* %103, align 8, !dbg !4053
  %105 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4054
  %106 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %105, i32 0, i32 3, !dbg !4055
  %107 = load i32, i32* %106, align 8, !dbg !4055
  %108 = call i8* @Err_Errno2String(i32 %107), !dbg !4056
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.AsyncTCPSocketGetOption, i32 0, i32 0), i32 %100, i32 %101, i32 %104, i8* %108), !dbg !4058
  br label %109, !dbg !4060

; <label>:109:                                    ; preds = %93
  store i32 1, i32* %6, align 4, !dbg !4061
  br label %121, !dbg !4061

; <label>:110:                                    ; preds = %78
  br label %111, !dbg !4062, !llvm.loop !4063

; <label>:111:                                    ; preds = %110
  %112 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4064
  %113 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %112), !dbg !4067
  %114 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %113), !dbg !4068
  %115 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4070
  %116 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %115), !dbg !4071
  %117 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %116), !dbg !4073
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %114, i32 %117), !dbg !4075
  %118 = load i32, i32* %8, align 4, !dbg !4077
  %119 = load i32, i32* %9, align 4, !dbg !4078
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.AsyncTCPSocketGetOption, i32 0, i32 0), i32 %118, i32 %119), !dbg !4079
  br label %120, !dbg !4081

; <label>:120:                                    ; preds = %111
  store i32 0, i32* %6, align 4, !dbg !4082
  br label %121, !dbg !4082

; <label>:121:                                    ; preds = %120, %109, %77, %52, %28
  %122 = load i32, i32* %6, align 4, !dbg !4083
  ret i32 %122, !dbg !4083
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetGenericErrno(%struct.AsyncSocket*) #0 !dbg !4084 {
  %2 = alloca %struct.AsyncSocket*, align 8
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %2, metadata !4085, metadata !480), !dbg !4086
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !4087, metadata !480), !dbg !4088
  %4 = load %struct.AsyncSocket*, %struct.AsyncSocket** %2, align 8, !dbg !4089
  %5 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %4), !dbg !4090
  store %struct.AsyncTCPSocket* %5, %struct.AsyncTCPSocket** %3, align 8, !dbg !4088
  %6 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !4091
  %7 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %6, i32 0, i32 3, !dbg !4092
  %8 = load i32, i32* %7, align 8, !dbg !4092
  ret i32 %8, !dbg !4093
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetFd(%struct.AsyncSocket*) #0 !dbg !4094 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.AsyncSocket*, align 8
  %4 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %3, metadata !4095, metadata !480), !dbg !4096
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %4, metadata !4097, metadata !480), !dbg !4098
  %5 = load %struct.AsyncSocket*, %struct.AsyncSocket** %3, align 8, !dbg !4099
  %6 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %5), !dbg !4100
  store %struct.AsyncTCPSocket* %6, %struct.AsyncTCPSocket** %4, align 8, !dbg !4098
  %7 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4101
  %8 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %7, i32 0, i32 1, !dbg !4103
  %9 = load i32, i32* %8, align 8, !dbg !4103
  %10 = icmp ne i32 %9, -1, !dbg !4104
  br i1 %10, label %11, label %15, !dbg !4105

; <label>:11:                                     ; preds = %1
  %12 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4106
  %13 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %12, i32 0, i32 1, !dbg !4108
  %14 = load i32, i32* %13, align 8, !dbg !4108
  store i32 %14, i32* %2, align 4, !dbg !4109
  br label %52, !dbg !4109

; <label>:15:                                     ; preds = %1
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4110
  %17 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %16, i32 0, i32 34, !dbg !4112
  %18 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !4112
  %19 = icmp ne %struct.AsyncTCPSocket* %18, null, !dbg !4110
  br i1 %19, label %20, label %33, !dbg !4113

; <label>:20:                                     ; preds = %15
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4114
  %22 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %21, i32 0, i32 34, !dbg !4116
  %23 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %22, align 8, !dbg !4116
  %24 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %23, i32 0, i32 1, !dbg !4117
  %25 = load i32, i32* %24, align 8, !dbg !4117
  %26 = icmp ne i32 %25, -1, !dbg !4118
  br i1 %26, label %27, label %33, !dbg !4119

; <label>:27:                                     ; preds = %20
  %28 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4120
  %29 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %28, i32 0, i32 34, !dbg !4122
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %29, align 8, !dbg !4122
  %31 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %30, i32 0, i32 1, !dbg !4123
  %32 = load i32, i32* %31, align 8, !dbg !4123
  store i32 %32, i32* %2, align 4, !dbg !4124
  br label %52, !dbg !4124

; <label>:33:                                     ; preds = %20, %15
  %34 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4125
  %35 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %34, i32 0, i32 35, !dbg !4127
  %36 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %35, align 8, !dbg !4127
  %37 = icmp ne %struct.AsyncTCPSocket* %36, null, !dbg !4125
  br i1 %37, label %38, label %51, !dbg !4128

; <label>:38:                                     ; preds = %33
  %39 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4129
  %40 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %39, i32 0, i32 35, !dbg !4131
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %40, align 8, !dbg !4131
  %42 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %41, i32 0, i32 1, !dbg !4132
  %43 = load i32, i32* %42, align 8, !dbg !4132
  %44 = icmp ne i32 %43, -1, !dbg !4133
  br i1 %44, label %45, label %51, !dbg !4134

; <label>:45:                                     ; preds = %38
  %46 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4135
  %47 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %46, i32 0, i32 35, !dbg !4137
  %48 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %47, align 8, !dbg !4137
  %49 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %48, i32 0, i32 1, !dbg !4138
  %50 = load i32, i32* %49, align 8, !dbg !4138
  store i32 %50, i32* %2, align 4, !dbg !4139
  br label %52, !dbg !4139

; <label>:51:                                     ; preds = %38, %33
  store i32 -1, i32* %2, align 4, !dbg !4140
  br label %52, !dbg !4140

; <label>:52:                                     ; preds = %51, %45, %27, %11
  %53 = load i32, i32* %2, align 4, !dbg !4142
  ret i32 %53, !dbg !4142
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetRemoteIPStr(%struct.AsyncSocket*, i8**) #0 !dbg !4143 {
  %3 = alloca %struct.AsyncSocket*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca %struct.AsyncTCPSocket*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [1025 x i8], align 16
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %3, metadata !4144, metadata !480), !dbg !4145
  store i8** %1, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !4146, metadata !480), !dbg !4147
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %5, metadata !4148, metadata !480), !dbg !4149
  %8 = load %struct.AsyncSocket*, %struct.AsyncSocket** %3, align 8, !dbg !4150
  %9 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %8), !dbg !4151
  store %struct.AsyncTCPSocket* %9, %struct.AsyncTCPSocket** %5, align 8, !dbg !4149
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4152, metadata !480), !dbg !4153
  store i32 0, i32* %6, align 4, !dbg !4153
  %10 = load i8**, i8*** %4, align 8, !dbg !4154
  %11 = icmp eq i8** %10, null, !dbg !4156
  br i1 %11, label %32, label %12, !dbg !4157

; <label>:12:                                     ; preds = %2
  %13 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !4158
  %14 = icmp eq %struct.AsyncTCPSocket* %13, null, !dbg !4160
  br i1 %14, label %32, label %15, !dbg !4161

; <label>:15:                                     ; preds = %12
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !4162
  %17 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %16), !dbg !4163
  %18 = sext i8 %17 to i32, !dbg !4163
  %19 = icmp ne i32 %18, 2, !dbg !4164
  br i1 %19, label %32, label %20, !dbg !4165

; <label>:20:                                     ; preds = %15
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !4166
  %22 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %21, i32 0, i32 7, !dbg !4167
  %23 = load i32, i32* %22, align 8, !dbg !4167
  %24 = zext i32 %23 to i64, !dbg !4166
  %25 = icmp ne i64 %24, 16, !dbg !4168
  br i1 %25, label %26, label %33, !dbg !4169

; <label>:26:                                     ; preds = %20
  %27 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !4170
  %28 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %27, i32 0, i32 7, !dbg !4171
  %29 = load i32, i32* %28, align 8, !dbg !4171
  %30 = zext i32 %29 to i64, !dbg !4170
  %31 = icmp ne i64 %30, 28, !dbg !4172
  br i1 %31, label %32, label %33, !dbg !4173

; <label>:32:                                     ; preds = %26, %15, %12, %2
  store i32 1, i32* %6, align 4, !dbg !4175
  br label %49, !dbg !4177

; <label>:33:                                     ; preds = %26, %20
  call void @llvm.dbg.declare(metadata [1025 x i8]* %7, metadata !4178, metadata !480), !dbg !4183
  %34 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !4184
  %35 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %34, i32 0, i32 6, !dbg !4186
  %36 = bitcast %struct.sockaddr_storage* %35 to %struct.sockaddr*, !dbg !4187
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !4188
  %38 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %37, i32 0, i32 7, !dbg !4189
  %39 = load i32, i32* %38, align 8, !dbg !4189
  %40 = getelementptr inbounds [1025 x i8], [1025 x i8]* %7, i32 0, i32 0, !dbg !4190
  %41 = call i32 @getnameinfo(%struct.sockaddr* %36, i32 %39, i8* %40, i32 1025, i8* null, i32 0, i32 1), !dbg !4191
  %42 = icmp ne i32 %41, 0, !dbg !4192
  br i1 %42, label %43, label %44, !dbg !4193

; <label>:43:                                     ; preds = %33
  store i32 1, i32* %6, align 4, !dbg !4194
  br label %48, !dbg !4196

; <label>:44:                                     ; preds = %33
  %45 = getelementptr inbounds [1025 x i8], [1025 x i8]* %7, i32 0, i32 0, !dbg !4197
  %46 = call i8* @UtilSafeStrdup0(i8* %45), !dbg !4199
  %47 = load i8**, i8*** %4, align 8, !dbg !4200
  store i8* %46, i8** %47, align 8, !dbg !4201
  br label %48

; <label>:48:                                     ; preds = %44, %43
  br label %49

; <label>:49:                                     ; preds = %48, %32
  %50 = load i32, i32* %6, align 4, !dbg !4202
  ret i32 %50, !dbg !4203
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetINETIPStr(%struct.AsyncSocket*, i32, i8**) #0 !dbg !4204 {
  %4 = alloca %struct.AsyncSocket*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca %struct.AsyncTCPSocket*, align 8
  %8 = alloca %struct.sockaddr_storage, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [1025 x i8], align 16
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %4, metadata !4205, metadata !480), !dbg !4206
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4207, metadata !480), !dbg !4208
  store i8** %2, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !4209, metadata !480), !dbg !4210
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %7, metadata !4211, metadata !480), !dbg !4212
  %12 = load %struct.AsyncSocket*, %struct.AsyncSocket** %4, align 8, !dbg !4213
  %13 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %12), !dbg !4214
  store %struct.AsyncTCPSocket* %13, %struct.AsyncTCPSocket** %7, align 8, !dbg !4212
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %8, metadata !4215, metadata !480), !dbg !4216
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4217, metadata !480), !dbg !4218
  store i32 128, i32* %9, align 4, !dbg !4218
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4219, metadata !480), !dbg !4220
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %7, align 8, !dbg !4221
  %15 = load i32, i32* %5, align 4, !dbg !4222
  %16 = call i32 @AsyncTCPSocketGetAddr(%struct.AsyncTCPSocket* %14, i32 %15, %struct.sockaddr_storage* %8, i32* %9), !dbg !4223
  store i32 %16, i32* %10, align 4, !dbg !4224
  %17 = load i32, i32* %10, align 4, !dbg !4225
  %18 = icmp eq i32 %17, 0, !dbg !4227
  br i1 %18, label %19, label %52, !dbg !4228

; <label>:19:                                     ; preds = %3
  call void @llvm.dbg.declare(metadata [1025 x i8]* %11, metadata !4229, metadata !480), !dbg !4231
  %20 = load i8**, i8*** %6, align 8, !dbg !4232
  %21 = icmp eq i8** %20, null, !dbg !4234
  br i1 %21, label %22, label %31, !dbg !4235

; <label>:22:                                     ; preds = %19
  br label %23, !dbg !4236, !llvm.loop !4238

; <label>:23:                                     ; preds = %22
  %24 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %7, align 8, !dbg !4239
  %25 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %24), !dbg !4242
  %26 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %25), !dbg !4243
  %27 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %7, align 8, !dbg !4245
  %28 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %27), !dbg !4246
  %29 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %28), !dbg !4248
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %26, i32 %29), !dbg !4250
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.AsyncTCPSocketGetINETIPStr, i32 0, i32 0)), !dbg !4252
  br label %30, !dbg !4254

; <label>:30:                                     ; preds = %23
  store i32 5, i32* %10, align 4, !dbg !4255
  br label %51, !dbg !4256

; <label>:31:                                     ; preds = %19
  %32 = bitcast %struct.sockaddr_storage* %8 to %struct.sockaddr*, !dbg !4257
  %33 = load i32, i32* %9, align 4, !dbg !4260
  %34 = getelementptr inbounds [1025 x i8], [1025 x i8]* %11, i32 0, i32 0, !dbg !4261
  %35 = call i32 @getnameinfo(%struct.sockaddr* %32, i32 %33, i8* %34, i32 1025, i8* null, i32 0, i32 1), !dbg !4262
  %36 = icmp eq i32 %35, 0, !dbg !4263
  br i1 %36, label %37, label %41, !dbg !4262

; <label>:37:                                     ; preds = %31
  %38 = getelementptr inbounds [1025 x i8], [1025 x i8]* %11, i32 0, i32 0, !dbg !4264
  %39 = call i8* @UtilSafeStrdup0(i8* %38), !dbg !4266
  %40 = load i8**, i8*** %6, align 8, !dbg !4267
  store i8* %39, i8** %40, align 8, !dbg !4268
  br label %50, !dbg !4269

; <label>:41:                                     ; preds = %31
  br label %42, !dbg !4270, !llvm.loop !4272

; <label>:42:                                     ; preds = %41
  %43 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %7, align 8, !dbg !4273
  %44 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %43), !dbg !4276
  %45 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %44), !dbg !4277
  %46 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %7, align 8, !dbg !4279
  %47 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %46), !dbg !4280
  %48 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %47), !dbg !4282
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %45, i32 %48), !dbg !4284
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.AsyncTCPSocketGetINETIPStr, i32 0, i32 0)), !dbg !4286
  br label %49, !dbg !4288

; <label>:49:                                     ; preds = %42
  store i32 1, i32* %10, align 4, !dbg !4289
  br label %50

; <label>:50:                                     ; preds = %49, %37
  br label %51

; <label>:51:                                     ; preds = %50, %30
  br label %52, !dbg !4290

; <label>:52:                                     ; preds = %51, %3
  %53 = load i32, i32* %10, align 4, !dbg !4291
  ret i32 %53, !dbg !4292
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetPort(%struct.AsyncSocket*) #0 !dbg !4293 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.AsyncSocket*, align 8
  %4 = alloca %struct.AsyncTCPSocket*, align 8
  %5 = alloca %struct.AsyncTCPSocket*, align 8
  %6 = alloca %struct.sockaddr_storage, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %3, metadata !4294, metadata !480), !dbg !4295
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %4, metadata !4296, metadata !480), !dbg !4297
  %9 = load %struct.AsyncSocket*, %struct.AsyncSocket** %3, align 8, !dbg !4298
  %10 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %9), !dbg !4299
  store %struct.AsyncTCPSocket* %10, %struct.AsyncTCPSocket** %4, align 8, !dbg !4297
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %5, metadata !4300, metadata !480), !dbg !4301
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %6, metadata !4302, metadata !480), !dbg !4303
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4304, metadata !480), !dbg !4305
  store i32 128, i32* %7, align 4, !dbg !4305
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4306, metadata !480), !dbg !4307
  store i32 -1, i32* %8, align 4, !dbg !4307
  %11 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4308
  %12 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %11, i32 0, i32 1, !dbg !4310
  %13 = load i32, i32* %12, align 8, !dbg !4310
  %14 = icmp ne i32 %13, -1, !dbg !4311
  br i1 %14, label %15, label %17, !dbg !4312

; <label>:15:                                     ; preds = %1
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4313
  store %struct.AsyncTCPSocket* %16, %struct.AsyncTCPSocket** %5, align 8, !dbg !4315
  br label %53, !dbg !4316

; <label>:17:                                     ; preds = %1
  %18 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4317
  %19 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %18, i32 0, i32 35, !dbg !4320
  %20 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %19, align 8, !dbg !4320
  %21 = icmp ne %struct.AsyncTCPSocket* %20, null, !dbg !4317
  br i1 %21, label %22, label %33, !dbg !4321

; <label>:22:                                     ; preds = %17
  %23 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4322
  %24 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %23, i32 0, i32 35, !dbg !4324
  %25 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %24, align 8, !dbg !4324
  %26 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %25, i32 0, i32 1, !dbg !4325
  %27 = load i32, i32* %26, align 8, !dbg !4325
  %28 = icmp ne i32 %27, -1, !dbg !4326
  br i1 %28, label %29, label %33, !dbg !4327

; <label>:29:                                     ; preds = %22
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4328
  %31 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %30, i32 0, i32 35, !dbg !4330
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %31, align 8, !dbg !4330
  store %struct.AsyncTCPSocket* %32, %struct.AsyncTCPSocket** %5, align 8, !dbg !4331
  br label %52, !dbg !4332

; <label>:33:                                     ; preds = %22, %17
  %34 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4333
  %35 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %34, i32 0, i32 34, !dbg !4336
  %36 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %35, align 8, !dbg !4336
  %37 = icmp ne %struct.AsyncTCPSocket* %36, null, !dbg !4333
  br i1 %37, label %38, label %49, !dbg !4337

; <label>:38:                                     ; preds = %33
  %39 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4338
  %40 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %39, i32 0, i32 34, !dbg !4340
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %40, align 8, !dbg !4340
  %42 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %41, i32 0, i32 1, !dbg !4341
  %43 = load i32, i32* %42, align 8, !dbg !4341
  %44 = icmp ne i32 %43, -1, !dbg !4342
  br i1 %44, label %45, label %49, !dbg !4343

; <label>:45:                                     ; preds = %38
  %46 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4344
  %47 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %46, i32 0, i32 34, !dbg !4346
  %48 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %47, align 8, !dbg !4346
  store %struct.AsyncTCPSocket* %48, %struct.AsyncTCPSocket** %5, align 8, !dbg !4347
  br label %51, !dbg !4348

; <label>:49:                                     ; preds = %38, %33
  %50 = load i32, i32* %8, align 4, !dbg !4349
  store i32 %50, i32* %2, align 4, !dbg !4351
  br label %60, !dbg !4351

; <label>:51:                                     ; preds = %45
  br label %52

; <label>:52:                                     ; preds = %51, %29
  br label %53

; <label>:53:                                     ; preds = %52, %15
  %54 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %5, align 8, !dbg !4352
  %55 = call i32 @AsyncTCPSocketGetAddr(%struct.AsyncTCPSocket* %54, i32 0, %struct.sockaddr_storage* %6, i32* %7), !dbg !4354
  %56 = icmp eq i32 %55, 0, !dbg !4355
  br i1 %56, label %57, label %59, !dbg !4356

; <label>:57:                                     ; preds = %53
  %58 = call i32 @AsyncTCPSocketGetPortFromAddr(%struct.sockaddr_storage* %6), !dbg !4357
  store i32 %58, i32* %2, align 4, !dbg !4359
  br label %60, !dbg !4359

; <label>:59:                                     ; preds = %53
  store i32 -1, i32* %2, align 4, !dbg !4360
  br label %60, !dbg !4360

; <label>:60:                                     ; preds = %59, %57, %49
  %61 = load i32, i32* %2, align 4, !dbg !4362
  ret i32 %61, !dbg !4362
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketSetCloseOptions(%struct.AsyncSocket*, i32, void (%struct.AsyncSocket*, i8*)*) #0 !dbg !4363 {
  %4 = alloca %struct.AsyncSocket*, align 8
  %5 = alloca i32, align 4
  %6 = alloca void (%struct.AsyncSocket*, i8*)*, align 8
  %7 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %4, metadata !4364, metadata !480), !dbg !4365
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4366, metadata !480), !dbg !4367
  store void (%struct.AsyncSocket*, i8*)* %2, void (%struct.AsyncSocket*, i8*)** %6, align 8
  call void @llvm.dbg.declare(metadata void (%struct.AsyncSocket*, i8*)** %6, metadata !4368, metadata !480), !dbg !4369
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %7, metadata !4370, metadata !480), !dbg !4371
  %8 = load %struct.AsyncSocket*, %struct.AsyncSocket** %4, align 8, !dbg !4372
  %9 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %8), !dbg !4373
  store %struct.AsyncTCPSocket* %9, %struct.AsyncTCPSocket** %7, align 8, !dbg !4371
  %10 = load i32, i32* %5, align 4, !dbg !4374
  %11 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %7, align 8, !dbg !4375
  %12 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %11, i32 0, i32 16, !dbg !4376
  store i32 %10, i32* %12, align 8, !dbg !4377
  %13 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %6, align 8, !dbg !4378
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %7, align 8, !dbg !4379
  %15 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %14, i32 0, i32 17, !dbg !4380
  store void (%struct.AsyncSocket*, i8*)* %13, void (%struct.AsyncSocket*, i8*)** %15, align 8, !dbg !4381
  %16 = load void (%struct.AsyncSocket*, i8*)*, void (%struct.AsyncSocket*, i8*)** %6, align 8, !dbg !4382
  %17 = icmp eq void (%struct.AsyncSocket*, i8*)* %16, null, !dbg !4385
  %18 = xor i1 %17, true, !dbg !4386
  %19 = zext i1 %18 to i32, !dbg !4386
  %20 = sext i32 %19 to i64, !dbg !4387
  %21 = icmp ne i64 %20, 0, !dbg !4388
  br i1 %21, label %22, label %23, !dbg !4389

; <label>:22:                                     ; preds = %3
  call void (i8*, ...) @Panic(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i32 0, i32 0), i32 4509) #11, !dbg !4390
  unreachable, !dbg !4390

; <label>:23:                                     ; preds = %3
  ret i32 0, !dbg !4393
}

; Function Attrs: nounwind uwtable
define internal signext i8 @AsyncTCPSocketConnectSSL(%struct.AsyncSocket*, %struct._SSLVerifyParam*, i8*) #0 !dbg !4394 {
  %4 = alloca %struct.AsyncSocket*, align 8
  %5 = alloca %struct._SSLVerifyParam*, align 8
  %6 = alloca i8*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %4, metadata !4399, metadata !480), !dbg !4400
  store %struct._SSLVerifyParam* %1, %struct._SSLVerifyParam** %5, align 8
  call void @llvm.dbg.declare(metadata %struct._SSLVerifyParam** %5, metadata !4401, metadata !480), !dbg !4402
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4403, metadata !480), !dbg !4404
  ret i8 0, !dbg !4405
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketStartSslConnect(%struct.AsyncSocket*, %struct._SSLVerifyParam*, i8*, void (i8, %struct.AsyncSocket*, i8*)*, i8*) #0 !dbg !4406 {
  %6 = alloca %struct.AsyncSocket*, align 8
  %7 = alloca %struct._SSLVerifyParam*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca void (i8, %struct.AsyncSocket*, i8*)*, align 8
  %10 = alloca i8*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %6, metadata !4409, metadata !480), !dbg !4410
  store %struct._SSLVerifyParam* %1, %struct._SSLVerifyParam** %7, align 8
  call void @llvm.dbg.declare(metadata %struct._SSLVerifyParam** %7, metadata !4411, metadata !480), !dbg !4412
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4413, metadata !480), !dbg !4414
  store void (i8, %struct.AsyncSocket*, i8*)* %3, void (i8, %struct.AsyncSocket*, i8*)** %9, align 8
  call void @llvm.dbg.declare(metadata void (i8, %struct.AsyncSocket*, i8*)** %9, metadata !4415, metadata !480), !dbg !4416
  store i8* %4, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4417, metadata !480), !dbg !4418
  ret i32 5, !dbg !4419
}

; Function Attrs: nounwind uwtable
define internal signext i8 @AsyncTCPSocketAcceptSSL(%struct.AsyncSocket*, i8*) #0 !dbg !4420 {
  %3 = alloca %struct.AsyncSocket*, align 8
  %4 = alloca i8*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %3, metadata !4421, metadata !480), !dbg !4422
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4423, metadata !480), !dbg !4424
  ret i8 0, !dbg !4425
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketStartSslAccept(%struct.AsyncSocket*, i8*, void (i8, %struct.AsyncSocket*, i8*)*, i8*) #0 !dbg !4426 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.AsyncSocket*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca void (i8, %struct.AsyncSocket*, i8*)*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.AsyncTCPSocket*, align 8
  %11 = alloca i8, align 1
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %6, metadata !4427, metadata !480), !dbg !4428
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4429, metadata !480), !dbg !4430
  store void (i8, %struct.AsyncSocket*, i8*)* %2, void (i8, %struct.AsyncSocket*, i8*)** %8, align 8
  call void @llvm.dbg.declare(metadata void (i8, %struct.AsyncSocket*, i8*)** %8, metadata !4431, metadata !480), !dbg !4432
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4433, metadata !480), !dbg !4434
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %10, metadata !4435, metadata !480), !dbg !4436
  %12 = load %struct.AsyncSocket*, %struct.AsyncSocket** %6, align 8, !dbg !4437
  %13 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %12), !dbg !4438
  store %struct.AsyncTCPSocket* %13, %struct.AsyncTCPSocket** %10, align 8, !dbg !4436
  call void @llvm.dbg.declare(metadata i8* %11, metadata !4439, metadata !480), !dbg !4440
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !4441
  %15 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %14, i32 0, i32 9, !dbg !4443
  %16 = load void (i8, %struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)** %15, align 8, !dbg !4443
  %17 = icmp ne void (i8, %struct.AsyncSocket*, i8*)* %16, null, !dbg !4441
  br i1 %17, label %23, label %18, !dbg !4444

; <label>:18:                                     ; preds = %4
  %19 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !4445
  %20 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %19, i32 0, i32 10, !dbg !4447
  %21 = load void (i8, %struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)** %20, align 8, !dbg !4447
  %22 = icmp ne void (i8, %struct.AsyncSocket*, i8*)* %21, null, !dbg !4445
  br i1 %22, label %23, label %32, !dbg !4448

; <label>:23:                                     ; preds = %18, %4
  br label %24, !dbg !4449, !llvm.loop !4451

; <label>:24:                                     ; preds = %23
  %25 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !4452
  %26 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %25), !dbg !4455
  %27 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %26), !dbg !4456
  %28 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !4458
  %29 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %28), !dbg !4459
  %30 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %29), !dbg !4461
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %27, i32 %30), !dbg !4463
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.63, i32 0, i32 0)), !dbg !4465
  br label %31, !dbg !4467

; <label>:31:                                     ; preds = %24
  store i32 1, i32* %5, align 4, !dbg !4468
  br label %54, !dbg !4468

; <label>:32:                                     ; preds = %18
  %33 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !4469
  %34 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %33, i32 0, i32 2, !dbg !4470
  %35 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %34, align 8, !dbg !4470
  %36 = load i8*, i8** %7, align 8, !dbg !4471
  %37 = call signext i8 @SSL_SetupAcceptWithContext(%struct.SSLSockStruct* %35, i8* %36), !dbg !4472
  store i8 %37, i8* %11, align 1, !dbg !4473
  %38 = load i8, i8* %11, align 1, !dbg !4474
  %39 = icmp ne i8 %38, 0, !dbg !4474
  br i1 %39, label %45, label %40, !dbg !4476

; <label>:40:                                     ; preds = %32
  %41 = load void (i8, %struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)** %8, align 8, !dbg !4477
  %42 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !4479
  %43 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %42), !dbg !4480
  %44 = load i8*, i8** %9, align 8, !dbg !4481
  call void %41(i8 signext 0, %struct.AsyncSocket* %43, i8* %44), !dbg !4482
  store i32 1, i32* %5, align 4, !dbg !4484
  br label %54, !dbg !4484

; <label>:45:                                     ; preds = %32
  %46 = load void (i8, %struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)** %8, align 8, !dbg !4485
  %47 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !4486
  %48 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %47, i32 0, i32 9, !dbg !4487
  store void (i8, %struct.AsyncSocket*, i8*)* %46, void (i8, %struct.AsyncSocket*, i8*)** %48, align 8, !dbg !4488
  %49 = load i8*, i8** %9, align 8, !dbg !4489
  %50 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !4490
  %51 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %50, i32 0, i32 12, !dbg !4491
  store i8* %49, i8** %51, align 8, !dbg !4492
  %52 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !4493
  %53 = bitcast %struct.AsyncTCPSocket* %52 to i8*, !dbg !4493
  call void @AsyncTCPSocketSslAcceptCallback(i8* %53), !dbg !4494
  store i32 0, i32* %5, align 4, !dbg !4495
  br label %54, !dbg !4495

; <label>:54:                                     ; preds = %45, %40, %31
  %55 = load i32, i32* %5, align 4, !dbg !4496
  ret i32 %55, !dbg !4496
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketFlush(%struct.AsyncSocket*, i32) #0 !dbg !4497 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.AsyncSocket*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.AsyncTCPSocket*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %4, metadata !4498, metadata !480), !dbg !4499
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4500, metadata !480), !dbg !4501
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %6, metadata !4502, metadata !480), !dbg !4503
  %11 = load %struct.AsyncSocket*, %struct.AsyncSocket** %4, align 8, !dbg !4504
  %12 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %11), !dbg !4505
  store %struct.AsyncTCPSocket* %12, %struct.AsyncTCPSocket** %6, align 8, !dbg !4503
  call void @llvm.dbg.declare(metadata i64* %7, metadata !4506, metadata !480), !dbg !4507
  call void @llvm.dbg.declare(metadata i64* %8, metadata !4508, metadata !480), !dbg !4509
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4510, metadata !480), !dbg !4511
  %13 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4512
  %14 = icmp eq %struct.AsyncTCPSocket* %13, null, !dbg !4514
  br i1 %14, label %15, label %16, !dbg !4515

; <label>:15:                                     ; preds = %2
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.65, i32 0, i32 0)), !dbg !4516
  store i32 5, i32* %3, align 4, !dbg !4518
  br label %95, !dbg !4518

; <label>:16:                                     ; preds = %2
  %17 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4519
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %17), !dbg !4520
  %18 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4521
  %19 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %18), !dbg !4523
  %20 = sext i8 %19 to i32, !dbg !4523
  %21 = icmp ne i32 %20, 2, !dbg !4524
  br i1 %21, label %22, label %31, !dbg !4525

; <label>:22:                                     ; preds = %16
  br label %23, !dbg !4526, !llvm.loop !4528

; <label>:23:                                     ; preds = %22
  %24 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4529
  %25 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %24), !dbg !4532
  %26 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %25), !dbg !4533
  %27 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4535
  %28 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %27), !dbg !4536
  %29 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %28), !dbg !4538
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %26, i32 %29), !dbg !4540
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.66, i32 0, i32 0)), !dbg !4542
  br label %30, !dbg !4544

; <label>:30:                                     ; preds = %23
  store i32 5, i32* %9, align 4, !dbg !4545
  br label %92, !dbg !4546

; <label>:31:                                     ; preds = %16
  %32 = call i64 @Hostinfo_SystemTimerUS(), !dbg !4547
  %33 = sdiv i64 %32, 1000, !dbg !4548
  store i64 %33, i64* %7, align 8, !dbg !4549
  %34 = load i64, i64* %7, align 8, !dbg !4550
  %35 = load i32, i32* %5, align 4, !dbg !4551
  %36 = sext i32 %35 to i64, !dbg !4551
  %37 = add nsw i64 %34, %36, !dbg !4552
  store i64 %37, i64* %8, align 8, !dbg !4553
  br label %38, !dbg !4554

; <label>:38:                                     ; preds = %90, %31
  %39 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4555
  %40 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %39, i32 0, i32 21, !dbg !4557
  %41 = load %struct.SendBufList*, %struct.SendBufList** %40, align 8, !dbg !4557
  %42 = icmp ne %struct.SendBufList* %41, null, !dbg !4558
  br i1 %42, label %43, label %91, !dbg !4558

; <label>:43:                                     ; preds = %38
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %10, metadata !4559, metadata !480), !dbg !4561
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %10, align 8, !dbg !4561
  %44 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4562
  %45 = load i64, i64* %8, align 8, !dbg !4563
  %46 = load i64, i64* %7, align 8, !dbg !4564
  %47 = sub nsw i64 %45, %46, !dbg !4565
  %48 = trunc i64 %47 to i32, !dbg !4563
  %49 = call i32 @AsyncTCPSocketPoll(%struct.AsyncTCPSocket* %44, i8 signext 0, i32 %48, %struct.AsyncTCPSocket** %10), !dbg !4566
  store i32 %49, i32* %9, align 4, !dbg !4567
  %50 = load i32, i32* %9, align 4, !dbg !4568
  %51 = icmp ne i32 %50, 0, !dbg !4570
  br i1 %51, label %52, label %61, !dbg !4571

; <label>:52:                                     ; preds = %43
  br label %53, !dbg !4572, !llvm.loop !4574

; <label>:53:                                     ; preds = %52
  %54 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4575
  %55 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %54), !dbg !4578
  %56 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %55), !dbg !4579
  %57 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4581
  %58 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %57), !dbg !4582
  %59 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %58), !dbg !4584
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %56, i32 %59), !dbg !4586
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0)), !dbg !4588
  br label %60, !dbg !4590

; <label>:60:                                     ; preds = %53
  br label %92, !dbg !4591

; <label>:61:                                     ; preds = %43
  %62 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4592
  %63 = call i32 @AsyncTCPSocketWriteBuffers(%struct.AsyncTCPSocket* %62), !dbg !4594
  store i32 %63, i32* %9, align 4, !dbg !4595
  %64 = icmp ne i32 %63, 0, !dbg !4596
  br i1 %64, label %65, label %66, !dbg !4597

; <label>:65:                                     ; preds = %61
  br label %92, !dbg !4598

; <label>:66:                                     ; preds = %61
  %67 = load i32, i32* %5, align 4, !dbg !4600
  %68 = icmp sge i32 %67, 0, !dbg !4602
  br i1 %68, label %69, label %90, !dbg !4603

; <label>:69:                                     ; preds = %66
  %70 = call i64 @Hostinfo_SystemTimerUS(), !dbg !4604
  %71 = sdiv i64 %70, 1000, !dbg !4606
  store i64 %71, i64* %7, align 8, !dbg !4607
  %72 = load i64, i64* %7, align 8, !dbg !4608
  %73 = load i64, i64* %8, align 8, !dbg !4610
  %74 = icmp sgt i64 %72, %73, !dbg !4611
  br i1 %74, label %75, label %89, !dbg !4612

; <label>:75:                                     ; preds = %69
  %76 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4613
  %77 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %76, i32 0, i32 21, !dbg !4615
  %78 = load %struct.SendBufList*, %struct.SendBufList** %77, align 8, !dbg !4615
  %79 = icmp ne %struct.SendBufList* %78, null, !dbg !4613
  br i1 %79, label %80, label %89, !dbg !4616

; <label>:80:                                     ; preds = %75
  br label %81, !dbg !4617, !llvm.loop !4619

; <label>:81:                                     ; preds = %80
  %82 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4620
  %83 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %82), !dbg !4623
  %84 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %83), !dbg !4624
  %85 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4626
  %86 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %85), !dbg !4627
  %87 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %86), !dbg !4629
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %84, i32 %87), !dbg !4631
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.68, i32 0, i32 0)), !dbg !4633
  br label %88, !dbg !4635

; <label>:88:                                     ; preds = %81
  store i32 2, i32* %9, align 4, !dbg !4636
  br label %92, !dbg !4637

; <label>:89:                                     ; preds = %75, %69
  br label %90, !dbg !4638

; <label>:90:                                     ; preds = %89, %66
  br label %38, !dbg !4639, !llvm.loop !4641

; <label>:91:                                     ; preds = %38
  store i32 0, i32* %9, align 4, !dbg !4642
  br label %92, !dbg !4643

; <label>:92:                                     ; preds = %91, %88, %65, %60, %30
  %93 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !4644
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %93), !dbg !4645
  %94 = load i32, i32* %9, align 4, !dbg !4646
  store i32 %94, i32* %3, align 4, !dbg !4647
  br label %95, !dbg !4647

; <label>:95:                                     ; preds = %92, %15
  %96 = load i32, i32* %3, align 4, !dbg !4648
  ret i32 %96, !dbg !4648
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketRecv(%struct.AsyncSocket*, i8*, i32, i8 signext, i8*, i8*) #0 !dbg !4649 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.AsyncSocket*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.AsyncTCPSocket*, align 8
  %15 = alloca i32, align 4
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %8, metadata !4650, metadata !480), !dbg !4651
  store i8* %1, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4652, metadata !480), !dbg !4653
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4654, metadata !480), !dbg !4655
  store i8 %3, i8* %11, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !4656, metadata !480), !dbg !4657
  store i8* %4, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4658, metadata !480), !dbg !4659
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4660, metadata !480), !dbg !4661
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %14, metadata !4662, metadata !480), !dbg !4663
  %16 = load %struct.AsyncSocket*, %struct.AsyncSocket** %8, align 8, !dbg !4664
  %17 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %16), !dbg !4665
  store %struct.AsyncTCPSocket* %17, %struct.AsyncTCPSocket** %14, align 8, !dbg !4663
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4666, metadata !480), !dbg !4667
  %18 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4668
  %19 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %18, i32 0, i32 0, !dbg !4670
  %20 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %19, i32 0, i32 6, !dbg !4671
  %21 = load void (i32, %struct.AsyncSocket*, i8*)*, void (i32, %struct.AsyncSocket*, i8*)** %20, align 8, !dbg !4671
  %22 = icmp ne void (i32, %struct.AsyncSocket*, i8*)* %21, null, !dbg !4668
  br i1 %22, label %32, label %23, !dbg !4672

; <label>:23:                                     ; preds = %6
  br label %24, !dbg !4673, !llvm.loop !4675

; <label>:24:                                     ; preds = %23
  %25 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4676
  %26 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %25), !dbg !4679
  %27 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %26), !dbg !4680
  %28 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4682
  %29 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %28), !dbg !4683
  %30 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %29), !dbg !4685
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %27, i32 %30), !dbg !4687
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.AsyncTCPSocketRecv, i32 0, i32 0)), !dbg !4689
  br label %31, !dbg !4691

; <label>:31:                                     ; preds = %24
  store i32 5, i32* %7, align 4, !dbg !4692
  br label %91, !dbg !4692

; <label>:32:                                     ; preds = %6
  %33 = load i8*, i8** %9, align 8, !dbg !4693
  %34 = icmp ne i8* %33, null, !dbg !4693
  br i1 %34, label %35, label %41, !dbg !4695

; <label>:35:                                     ; preds = %32
  %36 = load i8*, i8** %12, align 8, !dbg !4696
  %37 = icmp ne i8* %36, null, !dbg !4696
  br i1 %37, label %38, label %41, !dbg !4698

; <label>:38:                                     ; preds = %35
  %39 = load i32, i32* %10, align 4, !dbg !4699
  %40 = icmp sle i32 %39, 0, !dbg !4701
  br i1 %40, label %41, label %42, !dbg !4702

; <label>:41:                                     ; preds = %38, %35, %32
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.75, i32 0, i32 0)), !dbg !4703
  store i32 5, i32* %7, align 4, !dbg !4705
  br label %91, !dbg !4705

; <label>:42:                                     ; preds = %38
  %43 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4706
  %44 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %43), !dbg !4708
  %45 = sext i8 %44 to i32, !dbg !4708
  %46 = icmp ne i32 %45, 2, !dbg !4709
  br i1 %46, label %47, label %56, !dbg !4710

; <label>:47:                                     ; preds = %42
  br label %48, !dbg !4711, !llvm.loop !4713

; <label>:48:                                     ; preds = %47
  %49 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4714
  %50 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %49), !dbg !4717
  %51 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %50), !dbg !4718
  %52 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4720
  %53 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %52), !dbg !4721
  %54 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %53), !dbg !4723
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %51, i32 %54), !dbg !4725
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.76, i32 0, i32 0)), !dbg !4727
  br label %55, !dbg !4729

; <label>:55:                                     ; preds = %48
  store i32 3, i32* %7, align 4, !dbg !4730
  br label %91, !dbg !4730

; <label>:56:                                     ; preds = %42
  %57 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4731
  %58 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %57, i32 0, i32 33, !dbg !4733
  %59 = load i32, i32* %58, align 4, !dbg !4733
  %60 = icmp ne i32 %59, 0, !dbg !4731
  br i1 %60, label %61, label %75, !dbg !4734

; <label>:61:                                     ; preds = %56
  %62 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4735
  %63 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %62, i32 0, i32 32, !dbg !4737
  %64 = load i8, i8* %63, align 2, !dbg !4737
  %65 = icmp ne i8 %64, 0, !dbg !4735
  br i1 %65, label %75, label %66, !dbg !4738

; <label>:66:                                     ; preds = %61
  br label %67, !dbg !4739, !llvm.loop !4741

; <label>:67:                                     ; preds = %66
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4742
  %69 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %68), !dbg !4745
  %70 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %69), !dbg !4746
  %71 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4748
  %72 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %71), !dbg !4749
  %73 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %72), !dbg !4751
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %70, i32 %73), !dbg !4753
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.77, i32 0, i32 0)), !dbg !4755
  br label %74, !dbg !4757

; <label>:74:                                     ; preds = %67
  store i32 5, i32* %7, align 4, !dbg !4758
  br label %91, !dbg !4758

; <label>:75:                                     ; preds = %61, %56
  %76 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4759
  %77 = call i32 @AsyncTCPSocketRegisterRecvCb(%struct.AsyncTCPSocket* %76), !dbg !4760
  store i32 %77, i32* %15, align 4, !dbg !4761
  %78 = load i32, i32* %15, align 4, !dbg !4762
  %79 = icmp ne i32 %78, 0, !dbg !4764
  br i1 %79, label %80, label %82, !dbg !4765

; <label>:80:                                     ; preds = %75
  %81 = load i32, i32* %15, align 4, !dbg !4766
  store i32 %81, i32* %7, align 4, !dbg !4768
  br label %91, !dbg !4768

; <label>:82:                                     ; preds = %75
  %83 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !4769
  %84 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %83), !dbg !4770
  %85 = load i8*, i8** %9, align 8, !dbg !4771
  %86 = load i32, i32* %10, align 4, !dbg !4772
  %87 = load i8, i8* %11, align 1, !dbg !4773
  %88 = load i8*, i8** %12, align 8, !dbg !4774
  %89 = load i8*, i8** %13, align 8, !dbg !4775
  %90 = call i32 @AsyncSocketSetRecvBuf(%struct.AsyncSocket* %84, i8* %85, i32 %86, i8 signext %87, i8* %88, i8* %89), !dbg !4776
  store i32 0, i32* %7, align 4, !dbg !4778
  br label %91, !dbg !4778

; <label>:91:                                     ; preds = %82, %80, %74, %55, %41, %31
  %92 = load i32, i32* %7, align 4, !dbg !4779
  ret i32 %92, !dbg !4779
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketRecvPassedFd(%struct.AsyncSocket*, i8*, i32, i8*, i8*) #0 !dbg !4780 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.AsyncSocket*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct.AsyncTCPSocket*, align 8
  %13 = alloca i32, align 4
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %7, metadata !4781, metadata !480), !dbg !4782
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4783, metadata !480), !dbg !4784
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4785, metadata !480), !dbg !4786
  store i8* %3, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4787, metadata !480), !dbg !4788
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4789, metadata !480), !dbg !4790
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %12, metadata !4791, metadata !480), !dbg !4792
  %14 = load %struct.AsyncSocket*, %struct.AsyncSocket** %7, align 8, !dbg !4793
  %15 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %14), !dbg !4794
  store %struct.AsyncTCPSocket* %15, %struct.AsyncTCPSocket** %12, align 8, !dbg !4792
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4795, metadata !480), !dbg !4796
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4797
  %17 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %16, i32 0, i32 0, !dbg !4799
  %18 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %17, i32 0, i32 6, !dbg !4800
  %19 = load void (i32, %struct.AsyncSocket*, i8*)*, void (i32, %struct.AsyncSocket*, i8*)** %18, align 8, !dbg !4800
  %20 = icmp ne void (i32, %struct.AsyncSocket*, i8*)* %19, null, !dbg !4797
  br i1 %20, label %30, label %21, !dbg !4801

; <label>:21:                                     ; preds = %5
  br label %22, !dbg !4802, !llvm.loop !4804

; <label>:22:                                     ; preds = %21
  %23 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4805
  %24 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %23), !dbg !4808
  %25 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %24), !dbg !4809
  %26 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4811
  %27 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %26), !dbg !4812
  %28 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %27), !dbg !4814
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %25, i32 %28), !dbg !4816
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.AsyncTCPSocketRecvPassedFd, i32 0, i32 0)), !dbg !4818
  br label %29, !dbg !4820

; <label>:29:                                     ; preds = %22
  store i32 5, i32* %6, align 4, !dbg !4821
  br label %64, !dbg !4821

; <label>:30:                                     ; preds = %5
  %31 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4822
  %32 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %31, i32 0, i32 36, !dbg !4824
  %33 = getelementptr inbounds %struct.anon, %struct.anon* %32, i32 0, i32 1, !dbg !4825
  %34 = load i32, i32* %33, align 4, !dbg !4825
  %35 = icmp ne i32 %34, -1, !dbg !4826
  br i1 %35, label %36, label %45, !dbg !4827

; <label>:36:                                     ; preds = %30
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4828
  %38 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %37, i32 0, i32 36, !dbg !4830
  %39 = getelementptr inbounds %struct.anon, %struct.anon* %38, i32 0, i32 1, !dbg !4831
  %40 = load i32, i32* %39, align 4, !dbg !4831
  %41 = call i32 @close(i32 %40), !dbg !4832
  %42 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4833
  %43 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %42, i32 0, i32 36, !dbg !4834
  %44 = getelementptr inbounds %struct.anon, %struct.anon* %43, i32 0, i32 1, !dbg !4835
  store i32 -1, i32* %44, align 4, !dbg !4836
  br label %45, !dbg !4837

; <label>:45:                                     ; preds = %36, %30
  %46 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4838
  %47 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %46, i32 0, i32 36, !dbg !4839
  %48 = getelementptr inbounds %struct.anon, %struct.anon* %47, i32 0, i32 0, !dbg !4840
  store i8 1, i8* %48, align 8, !dbg !4841
  %49 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4842
  %50 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %49), !dbg !4843
  %51 = load i8*, i8** %8, align 8, !dbg !4844
  %52 = load i32, i32* %9, align 4, !dbg !4845
  %53 = load i8*, i8** %10, align 8, !dbg !4846
  %54 = load i8*, i8** %11, align 8, !dbg !4847
  %55 = call i32 @AsyncTCPSocketRecv(%struct.AsyncSocket* %50, i8* %51, i32 %52, i8 signext 0, i8* %53, i8* %54), !dbg !4848
  store i32 %55, i32* %13, align 4, !dbg !4850
  %56 = load i32, i32* %13, align 4, !dbg !4851
  %57 = icmp ne i32 %56, 0, !dbg !4853
  br i1 %57, label %58, label %62, !dbg !4854

; <label>:58:                                     ; preds = %45
  %59 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4855
  %60 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %59, i32 0, i32 36, !dbg !4857
  %61 = getelementptr inbounds %struct.anon, %struct.anon* %60, i32 0, i32 0, !dbg !4858
  store i8 0, i8* %61, align 8, !dbg !4859
  br label %62, !dbg !4860

; <label>:62:                                     ; preds = %58, %45
  %63 = load i32, i32* %13, align 4, !dbg !4861
  store i32 %63, i32* %6, align 4, !dbg !4862
  br label %64, !dbg !4862

; <label>:64:                                     ; preds = %62, %29
  %65 = load i32, i32* %6, align 4, !dbg !4863
  ret i32 %65, !dbg !4863
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetReceivedFd(%struct.AsyncSocket*) #0 !dbg !4864 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.AsyncSocket*, align 8
  %4 = alloca %struct.AsyncTCPSocket*, align 8
  %5 = alloca i32, align 4
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %3, metadata !4865, metadata !480), !dbg !4866
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %4, metadata !4867, metadata !480), !dbg !4868
  %6 = load %struct.AsyncSocket*, %struct.AsyncSocket** %3, align 8, !dbg !4869
  %7 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %6), !dbg !4870
  store %struct.AsyncTCPSocket* %7, %struct.AsyncTCPSocket** %4, align 8, !dbg !4868
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4871, metadata !480), !dbg !4872
  %8 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4873
  %9 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %8), !dbg !4875
  %10 = sext i8 %9 to i32, !dbg !4875
  %11 = icmp ne i32 %10, 2, !dbg !4876
  br i1 %11, label %12, label %13, !dbg !4877

; <label>:12:                                     ; preds = %1
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.78, i32 0, i32 0)), !dbg !4878
  store i32 -1, i32* %2, align 4, !dbg !4880
  br label %25, !dbg !4880

; <label>:13:                                     ; preds = %1
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4881
  %15 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %14, i32 0, i32 36, !dbg !4882
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %15, i32 0, i32 1, !dbg !4883
  %17 = load i32, i32* %16, align 4, !dbg !4883
  store i32 %17, i32* %5, align 4, !dbg !4884
  %18 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4885
  %19 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %18, i32 0, i32 36, !dbg !4886
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %19, i32 0, i32 1, !dbg !4887
  store i32 -1, i32* %20, align 4, !dbg !4888
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !4889
  %22 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %21, i32 0, i32 36, !dbg !4890
  %23 = getelementptr inbounds %struct.anon, %struct.anon* %22, i32 0, i32 0, !dbg !4891
  store i8 0, i8* %23, align 8, !dbg !4892
  %24 = load i32, i32* %5, align 4, !dbg !4893
  store i32 %24, i32* %2, align 4, !dbg !4894
  br label %25, !dbg !4894

; <label>:25:                                     ; preds = %13, %12
  %26 = load i32, i32* %2, align 4, !dbg !4895
  ret i32 %26, !dbg !4895
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketSend(%struct.AsyncSocket*, i8*, i32, void (i8*, i32, %struct.AsyncSocket*, i8*)*, i8*) #0 !dbg !4896 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.AsyncSocket*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca void (i8*, i32, %struct.AsyncSocket*, i8*)*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct.AsyncTCPSocket*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca %struct.SendBufList**, align 8
  %16 = alloca %struct.SendBufList*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %7, metadata !4897, metadata !480), !dbg !4898
  store i8* %1, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4899, metadata !480), !dbg !4900
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4901, metadata !480), !dbg !4902
  store void (i8*, i32, %struct.AsyncSocket*, i8*)* %3, void (i8*, i32, %struct.AsyncSocket*, i8*)** %10, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, %struct.AsyncSocket*, i8*)** %10, metadata !4903, metadata !480), !dbg !4904
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4905, metadata !480), !dbg !4906
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %12, metadata !4907, metadata !480), !dbg !4908
  %17 = load %struct.AsyncSocket*, %struct.AsyncSocket** %7, align 8, !dbg !4909
  %18 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %17), !dbg !4910
  store %struct.AsyncTCPSocket* %18, %struct.AsyncTCPSocket** %12, align 8, !dbg !4908
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4911, metadata !480), !dbg !4912
  call void @llvm.dbg.declare(metadata i8* %14, metadata !4913, metadata !480), !dbg !4914
  store i8 0, i8* %14, align 1, !dbg !4914
  call void @llvm.dbg.declare(metadata %struct.SendBufList*** %15, metadata !4915, metadata !480), !dbg !4916
  call void @llvm.dbg.declare(metadata %struct.SendBufList** %16, metadata !4917, metadata !480), !dbg !4918
  %19 = load i8*, i8** %8, align 8, !dbg !4919
  %20 = icmp ne i8* %19, null, !dbg !4919
  br i1 %20, label %21, label %24, !dbg !4921

; <label>:21:                                     ; preds = %5
  %22 = load i32, i32* %9, align 4, !dbg !4922
  %23 = icmp sle i32 %22, 0, !dbg !4924
  br i1 %23, label %24, label %27, !dbg !4925

; <label>:24:                                     ; preds = %21, %5
  %25 = load i8*, i8** %8, align 8, !dbg !4926
  %26 = load i32, i32* %9, align 4, !dbg !4928
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.79, i32 0, i32 0), i8* %25, i32 %26), !dbg !4929
  store i32 5, i32* %6, align 4, !dbg !4930
  br label %152, !dbg !4930

; <label>:27:                                     ; preds = %21
  %28 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4931
  %29 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %28), !dbg !4933
  %30 = sext i8 %29 to i32, !dbg !4933
  %31 = icmp ne i32 %30, 2, !dbg !4934
  br i1 %31, label %32, label %41, !dbg !4935

; <label>:32:                                     ; preds = %27
  br label %33, !dbg !4936, !llvm.loop !4938

; <label>:33:                                     ; preds = %32
  %34 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4939
  %35 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %34), !dbg !4942
  %36 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %35), !dbg !4943
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4945
  %38 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %37), !dbg !4946
  %39 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %38), !dbg !4948
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %36, i32 %39), !dbg !4950
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.80, i32 0, i32 0)), !dbg !4952
  br label %40, !dbg !4954

; <label>:40:                                     ; preds = %33
  store i32 3, i32* %6, align 4, !dbg !4955
  br label %152, !dbg !4955

; <label>:41:                                     ; preds = %27
  %42 = call i8* @UtilSafeCalloc0(i64 1, i64 40), !dbg !4956
  %43 = bitcast i8* %42 to %struct.SendBufList*, !dbg !4956
  store %struct.SendBufList* %43, %struct.SendBufList** %16, align 8, !dbg !4957
  %44 = load i8*, i8** %8, align 8, !dbg !4958
  %45 = load %struct.SendBufList*, %struct.SendBufList** %16, align 8, !dbg !4959
  %46 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %45, i32 0, i32 1, !dbg !4960
  store i8* %44, i8** %46, align 8, !dbg !4961
  %47 = load i32, i32* %9, align 4, !dbg !4962
  %48 = load %struct.SendBufList*, %struct.SendBufList** %16, align 8, !dbg !4963
  %49 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %48, i32 0, i32 2, !dbg !4964
  store i32 %47, i32* %49, align 8, !dbg !4965
  %50 = load void (i8*, i32, %struct.AsyncSocket*, i8*)*, void (i8*, i32, %struct.AsyncSocket*, i8*)** %10, align 8, !dbg !4966
  %51 = load %struct.SendBufList*, %struct.SendBufList** %16, align 8, !dbg !4967
  %52 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %51, i32 0, i32 3, !dbg !4968
  store void (i8*, i32, %struct.AsyncSocket*, i8*)* %50, void (i8*, i32, %struct.AsyncSocket*, i8*)** %52, align 8, !dbg !4969
  %53 = load i8*, i8** %11, align 8, !dbg !4970
  %54 = load %struct.SendBufList*, %struct.SendBufList** %16, align 8, !dbg !4971
  %55 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %54, i32 0, i32 4, !dbg !4972
  store i8* %53, i8** %55, align 8, !dbg !4973
  %56 = load %struct.SendBufList*, %struct.SendBufList** %16, align 8, !dbg !4974
  %57 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4975
  %58 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %57, i32 0, i32 22, !dbg !4976
  %59 = load %struct.SendBufList**, %struct.SendBufList*** %58, align 8, !dbg !4976
  store %struct.SendBufList* %56, %struct.SendBufList** %59, align 8, !dbg !4977
  %60 = load %struct.SendBufList*, %struct.SendBufList** %16, align 8, !dbg !4978
  %61 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %60, i32 0, i32 0, !dbg !4979
  %62 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4980
  %63 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %62, i32 0, i32 22, !dbg !4981
  store %struct.SendBufList** %61, %struct.SendBufList*** %63, align 8, !dbg !4982
  %64 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4983
  %65 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %64, i32 0, i32 21, !dbg !4984
  %66 = load %struct.SendBufList*, %struct.SendBufList** %65, align 8, !dbg !4984
  %67 = load %struct.SendBufList*, %struct.SendBufList** %16, align 8, !dbg !4985
  %68 = icmp eq %struct.SendBufList* %66, %67, !dbg !4986
  %69 = zext i1 %68 to i32, !dbg !4986
  %70 = trunc i32 %69 to i8, !dbg !4987
  store i8 %70, i8* %14, align 1, !dbg !4988
  %71 = load i8, i8* %14, align 1, !dbg !4989
  %72 = sext i8 %71 to i32, !dbg !4989
  %73 = icmp ne i32 %72, 0, !dbg !4989
  br i1 %73, label %74, label %112, !dbg !4991

; <label>:74:                                     ; preds = %41
  %75 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4992
  %76 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %75, i32 0, i32 24, !dbg !4994
  %77 = load i8, i8* %76, align 4, !dbg !4994
  %78 = icmp ne i8 %77, 0, !dbg !4992
  br i1 %78, label %112, label %79, !dbg !4995

; <label>:79:                                     ; preds = %74
  %80 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !4996
  %81 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %80, i32 0, i32 28, !dbg !4999
  %82 = load i8, i8* %81, align 8, !dbg !4999
  %83 = icmp ne i8 %82, 0, !dbg !4996
  br i1 %83, label %84, label %98, !dbg !5000

; <label>:84:                                     ; preds = %79
  %85 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5001
  %86 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %85, i32 0, i32 29, !dbg !5003
  %87 = load i32, i32* %86, align 4, !dbg !5004
  %88 = add nsw i32 %87, 1, !dbg !5004
  store i32 %88, i32* %86, align 4, !dbg !5004
  %89 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5005
  %90 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %89, i32 0, i32 14, !dbg !5006
  %91 = load void (i8*)*, void (i8*)** %90, align 8, !dbg !5006
  %92 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5007
  %93 = bitcast %struct.AsyncTCPSocket* %92 to i8*, !dbg !5008
  call void %91(i8* %93), !dbg !5005
  %94 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5009
  %95 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %94, i32 0, i32 29, !dbg !5010
  %96 = load i32, i32* %95, align 4, !dbg !5011
  %97 = add nsw i32 %96, -1, !dbg !5011
  store i32 %97, i32* %95, align 4, !dbg !5011
  br label %111, !dbg !5012

; <label>:98:                                     ; preds = %79
  %99 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5013
  %100 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5016
  %101 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %100, i32 0, i32 14, !dbg !5017
  %102 = load void (i8*)*, void (i8*)** %101, align 8, !dbg !5017
  %103 = call i32 (%struct.AsyncTCPSocket*, i8, i32, void (i8*)*, ...) @AsyncTCPSocketPollAdd(%struct.AsyncTCPSocket* %99, i8 signext 1, i32 8, void (i8*)* %102), !dbg !5018
  %104 = icmp ne i32 %103, 0, !dbg !5019
  br i1 %104, label %105, label %108, !dbg !5020

; <label>:105:                                    ; preds = %98
  store i32 8, i32* %13, align 4, !dbg !5021
  br label %106, !dbg !5023, !llvm.loop !5024

; <label>:106:                                    ; preds = %105
  br label %107, !dbg !5025

; <label>:107:                                    ; preds = %106
  br label %113, !dbg !5028

; <label>:108:                                    ; preds = %98
  %109 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5029
  %110 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %109, i32 0, i32 24, !dbg !5030
  store i8 1, i8* %110, align 4, !dbg !5031
  br label %111

; <label>:111:                                    ; preds = %108, %84
  br label %112, !dbg !5032

; <label>:112:                                    ; preds = %111, %74, %41
  store i32 0, i32* %6, align 4, !dbg !5033
  br label %152, !dbg !5033

; <label>:113:                                    ; preds = %107
  %114 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5034
  %115 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %114, i32 0, i32 21, !dbg !5035
  store %struct.SendBufList** %115, %struct.SendBufList*** %15, align 8, !dbg !5036
  %116 = load %struct.SendBufList**, %struct.SendBufList*** %15, align 8, !dbg !5037
  %117 = load %struct.SendBufList*, %struct.SendBufList** %116, align 8, !dbg !5039
  %118 = icmp ne %struct.SendBufList* %117, null, !dbg !5040
  br i1 %118, label %119, label %150, !dbg !5041

; <label>:119:                                    ; preds = %113
  %120 = load i8, i8* %14, align 1, !dbg !5042
  %121 = icmp ne i8 %120, 0, !dbg !5042
  br i1 %121, label %134, label %122, !dbg !5045

; <label>:122:                                    ; preds = %119
  br label %123, !dbg !5046, !llvm.loop !5048

; <label>:123:                                    ; preds = %127, %122
  %124 = load %struct.SendBufList**, %struct.SendBufList*** %15, align 8, !dbg !5049
  %125 = load %struct.SendBufList*, %struct.SendBufList** %124, align 8, !dbg !5051
  %126 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %125, i32 0, i32 0, !dbg !5052
  store %struct.SendBufList** %126, %struct.SendBufList*** %15, align 8, !dbg !5053
  br label %127, !dbg !5054

; <label>:127:                                    ; preds = %123
  %128 = load %struct.SendBufList**, %struct.SendBufList*** %15, align 8, !dbg !5055
  %129 = load %struct.SendBufList*, %struct.SendBufList** %128, align 8, !dbg !5057
  %130 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %129, i32 0, i32 0, !dbg !5058
  %131 = load %struct.SendBufList*, %struct.SendBufList** %130, align 8, !dbg !5058
  %132 = icmp ne %struct.SendBufList* %131, null, !dbg !5059
  br i1 %132, label %123, label %133, !dbg !5060, !llvm.loop !5048

; <label>:133:                                    ; preds = %127
  br label %134, !dbg !5061

; <label>:134:                                    ; preds = %133, %119
  %135 = load %struct.SendBufList**, %struct.SendBufList*** %15, align 8, !dbg !5062
  %136 = load %struct.SendBufList*, %struct.SendBufList** %135, align 8, !dbg !5064
  %137 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %136, i32 0, i32 1, !dbg !5065
  %138 = load i8*, i8** %137, align 8, !dbg !5065
  %139 = load i8*, i8** %8, align 8, !dbg !5066
  %140 = icmp eq i8* %138, %139, !dbg !5067
  br i1 %140, label %141, label %149, !dbg !5068

; <label>:141:                                    ; preds = %134
  %142 = load %struct.SendBufList**, %struct.SendBufList*** %15, align 8, !dbg !5069
  %143 = load %struct.SendBufList*, %struct.SendBufList** %142, align 8, !dbg !5071
  %144 = bitcast %struct.SendBufList* %143 to i8*, !dbg !5071
  call void @free(i8* %144) #8, !dbg !5072
  %145 = load %struct.SendBufList**, %struct.SendBufList*** %15, align 8, !dbg !5073
  store %struct.SendBufList* null, %struct.SendBufList** %145, align 8, !dbg !5074
  %146 = load %struct.SendBufList**, %struct.SendBufList*** %15, align 8, !dbg !5075
  %147 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5076
  %148 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %147, i32 0, i32 22, !dbg !5077
  store %struct.SendBufList** %146, %struct.SendBufList*** %148, align 8, !dbg !5078
  br label %149, !dbg !5079

; <label>:149:                                    ; preds = %141, %134
  br label %150, !dbg !5080

; <label>:150:                                    ; preds = %149, %113
  %151 = load i32, i32* %13, align 4, !dbg !5081
  store i32 %151, i32* %6, align 4, !dbg !5082
  br label %152, !dbg !5082

; <label>:152:                                    ; preds = %150, %112, %40, %24
  %153 = load i32, i32* %6, align 4, !dbg !5083
  ret i32 %153, !dbg !5083
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketIsSendBufferFull(%struct.AsyncSocket*) #0 !dbg !5084 {
  %2 = alloca %struct.AsyncSocket*, align 8
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %2, metadata !5085, metadata !480), !dbg !5086
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !5087, metadata !480), !dbg !5088
  %4 = load %struct.AsyncSocket*, %struct.AsyncSocket** %2, align 8, !dbg !5089
  %5 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %4), !dbg !5090
  store %struct.AsyncTCPSocket* %5, %struct.AsyncTCPSocket** %3, align 8, !dbg !5088
  %6 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5091
  %7 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %6, i32 0, i32 27, !dbg !5092
  %8 = load i8, i8* %7, align 1, !dbg !5092
  %9 = sext i8 %8 to i32, !dbg !5091
  ret i32 %9, !dbg !5093
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketClose(%struct.AsyncSocket*) #0 !dbg !5094 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.AsyncSocket*, align 8
  %4 = alloca %struct.AsyncTCPSocket*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %3, metadata !5095, metadata !480), !dbg !5096
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %4, metadata !5097, metadata !480), !dbg !5098
  %8 = load %struct.AsyncSocket*, %struct.AsyncSocket** %3, align 8, !dbg !5099
  %9 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %8), !dbg !5100
  store %struct.AsyncTCPSocket* %9, %struct.AsyncTCPSocket** %4, align 8, !dbg !5098
  %10 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5101
  %11 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %10), !dbg !5103
  %12 = sext i8 %11 to i32, !dbg !5103
  %13 = icmp eq i32 %12, 4, !dbg !5104
  br i1 %13, label %14, label %15, !dbg !5105

; <label>:14:                                     ; preds = %1
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.AsyncTCPSocketClose, i32 0, i32 0)), !dbg !5106
  store i32 9, i32* %2, align 4, !dbg !5108
  br label %181, !dbg !5108

; <label>:15:                                     ; preds = %1
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5109
  %17 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %16, i32 0, i32 34, !dbg !5111
  %18 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %17, align 8, !dbg !5111
  %19 = icmp ne %struct.AsyncTCPSocket* %18, null, !dbg !5109
  br i1 %19, label %25, label %20, !dbg !5112

; <label>:20:                                     ; preds = %15
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5113
  %22 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %21, i32 0, i32 35, !dbg !5115
  %23 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %22, align 8, !dbg !5115
  %24 = icmp ne %struct.AsyncTCPSocket* %23, null, !dbg !5113
  br i1 %24, label %25, label %48, !dbg !5116

; <label>:25:                                     ; preds = %20, %15
  %26 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5117
  %27 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %26, i32 0, i32 34, !dbg !5120
  %28 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %27, align 8, !dbg !5120
  %29 = icmp ne %struct.AsyncTCPSocket* %28, null, !dbg !5117
  br i1 %29, label %30, label %36, !dbg !5121

; <label>:30:                                     ; preds = %25
  %31 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5122
  %32 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %31, i32 0, i32 34, !dbg !5124
  %33 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %32, align 8, !dbg !5124
  %34 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %33), !dbg !5125
  %35 = call i32 @AsyncSocket_Close(%struct.AsyncSocket* %34), !dbg !5126
  br label %36, !dbg !5128

; <label>:36:                                     ; preds = %30, %25
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5129
  %38 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %37, i32 0, i32 35, !dbg !5131
  %39 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %38, align 8, !dbg !5131
  %40 = icmp ne %struct.AsyncTCPSocket* %39, null, !dbg !5129
  br i1 %40, label %41, label %47, !dbg !5132

; <label>:41:                                     ; preds = %36
  %42 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5133
  %43 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %42, i32 0, i32 35, !dbg !5135
  %44 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %43, align 8, !dbg !5135
  %45 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %44), !dbg !5136
  %46 = call i32 @AsyncSocket_Close(%struct.AsyncSocket* %45), !dbg !5137
  br label %47, !dbg !5139

; <label>:47:                                     ; preds = %41, %36
  br label %179, !dbg !5140

; <label>:48:                                     ; preds = %20
  call void @llvm.dbg.declare(metadata i8* %5, metadata !5141, metadata !480), !dbg !5143
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5144, metadata !480), !dbg !5145
  %49 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5146
  %50 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %49, i32 0, i32 16, !dbg !5148
  %51 = load i32, i32* %50, align 8, !dbg !5148
  %52 = icmp ne i32 %51, 0, !dbg !5146
  br i1 %52, label %53, label %85, !dbg !5149

; <label>:53:                                     ; preds = %48
  %54 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5150
  %55 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %54), !dbg !5151
  %56 = sext i8 %55 to i32, !dbg !5151
  %57 = icmp eq i32 %56, 2, !dbg !5152
  br i1 %57, label %58, label %85, !dbg !5153

; <label>:58:                                     ; preds = %53
  %59 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5154
  %60 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %59, i32 0, i32 0, !dbg !5155
  %61 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %60, i32 0, i32 5, !dbg !5156
  %62 = load i8, i8* %61, align 1, !dbg !5156
  %63 = icmp ne i8 %62, 0, !dbg !5154
  br i1 %63, label %85, label %64, !dbg !5157

; <label>:64:                                     ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5159, metadata !480), !dbg !5161
  %65 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5162
  %66 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %65), !dbg !5163
  %67 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5164
  %68 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %67, i32 0, i32 16, !dbg !5165
  %69 = load i32, i32* %68, align 8, !dbg !5165
  %70 = call i32 @AsyncTCPSocketFlush(%struct.AsyncSocket* %66, i32 %69), !dbg !5166
  store i32 %70, i32* %7, align 4, !dbg !5161
  %71 = load i32, i32* %7, align 4, !dbg !5168
  %72 = icmp ne i32 %71, 0, !dbg !5170
  br i1 %72, label %73, label %84, !dbg !5171

; <label>:73:                                     ; preds = %64
  br label %74, !dbg !5172, !llvm.loop !5174

; <label>:74:                                     ; preds = %73
  %75 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5175
  %76 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %75), !dbg !5178
  %77 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %76), !dbg !5179
  %78 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5181
  %79 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %78), !dbg !5182
  %80 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %79), !dbg !5184
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %77, i32 %80), !dbg !5186
  %81 = load i32, i32* %7, align 4, !dbg !5188
  %82 = call i8* @AsyncSocket_Err2String(i32 %81), !dbg !5189
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.82, i32 0, i32 0), i8* %82), !dbg !5191
  br label %83, !dbg !5193

; <label>:83:                                     ; preds = %74
  br label %84, !dbg !5194

; <label>:84:                                     ; preds = %83, %64
  br label %85, !dbg !5195

; <label>:85:                                     ; preds = %84, %58, %53, %48
  br label %86, !dbg !5196, !llvm.loop !5197

; <label>:86:                                     ; preds = %85
  br label %87, !dbg !5198

; <label>:87:                                     ; preds = %86
  %88 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5201
  %89 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %88), !dbg !5202
  %90 = sext i8 %89 to i32, !dbg !5202
  store i32 %90, i32* %6, align 4, !dbg !5203
  %91 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5204
  call void @AsyncTCPSocketSetState(%struct.AsyncTCPSocket* %91, i32 4), !dbg !5205
  %92 = load i32, i32* %6, align 4, !dbg !5206
  switch i32 %92, label %117 [
    i32 0, label %93
    i32 1, label %97
    i32 2, label %108
    i32 3, label %114
  ], !dbg !5207

; <label>:93:                                     ; preds = %87
  br label %94, !dbg !5208, !llvm.loop !5210

; <label>:94:                                     ; preds = %93
  br label %95, !dbg !5211

; <label>:95:                                     ; preds = %94
  %96 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5214
  call void @AsyncTCPSocketCancelListenCb(%struct.AsyncTCPSocket* %96), !dbg !5215
  br label %118, !dbg !5216

; <label>:97:                                     ; preds = %87
  br label %98, !dbg !5217, !llvm.loop !5218

; <label>:98:                                     ; preds = %97
  br label %99, !dbg !5219

; <label>:99:                                     ; preds = %98
  %100 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5222
  %101 = call signext i8 @AsyncTCPSocketCancelCbForConnectingClose(%struct.AsyncTCPSocket* %100), !dbg !5223
  store i8 %101, i8* %5, align 1, !dbg !5224
  %102 = load i8, i8* %5, align 1, !dbg !5225
  %103 = icmp ne i8 %102, 0, !dbg !5225
  br i1 %103, label %107, label %104, !dbg !5227

; <label>:104:                                    ; preds = %99
  br label %105, !dbg !5228, !llvm.loop !5230

; <label>:105:                                    ; preds = %104
  br label %106, !dbg !5231

; <label>:106:                                    ; preds = %105
  br label %107, !dbg !5234

; <label>:107:                                    ; preds = %106, %99
  br label %118, !dbg !5235

; <label>:108:                                    ; preds = %87
  br label %109, !dbg !5236, !llvm.loop !5237

; <label>:109:                                    ; preds = %108
  br label %110, !dbg !5238

; <label>:110:                                    ; preds = %109
  %111 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5241
  %112 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %111), !dbg !5242
  %113 = call i32 @AsyncTCPSocketCancelCbForClose(%struct.AsyncSocket* %112), !dbg !5243
  br label %118, !dbg !5245

; <label>:114:                                    ; preds = %87
  br label %115, !dbg !5246, !llvm.loop !5247

; <label>:115:                                    ; preds = %114
  br label %116, !dbg !5248

; <label>:116:                                    ; preds = %115
  br label %118, !dbg !5251

; <label>:117:                                    ; preds = %87
  call void (i8*, ...) @Panic(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i32 0, i32 0), i32 4607) #11, !dbg !5252
  unreachable, !dbg !5252

; <label>:118:                                    ; preds = %116, %110, %107, %95
  %119 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5253
  %120 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %119, i32 0, i32 13, !dbg !5255
  %121 = load void (i8*)*, void (i8*)** %120, align 8, !dbg !5255
  %122 = icmp ne void (i8*)* %121, null, !dbg !5253
  br i1 %122, label %123, label %128, !dbg !5256

; <label>:123:                                    ; preds = %118
  %124 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5257
  %125 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %124, i8 signext 0, i32 1, void (i8*)* @AsyncTCPSocketConnectErrorCheck), !dbg !5259
  store i8 %125, i8* %5, align 1, !dbg !5260
  %126 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5261
  %127 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %126, i32 0, i32 13, !dbg !5262
  store void (i8*)* null, void (i8*)** %127, align 8, !dbg !5263
  br label %128, !dbg !5264

; <label>:128:                                    ; preds = %123, %118
  %129 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5265
  %130 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %129, i32 0, i32 10, !dbg !5267
  %131 = load void (i8, %struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)** %130, align 8, !dbg !5267
  %132 = icmp ne void (i8, %struct.AsyncSocket*, i8*)* %131, null, !dbg !5265
  br i1 %132, label %133, label %144, !dbg !5268

; <label>:133:                                    ; preds = %128
  %134 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5269
  %135 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %134, i32 0, i32 11, !dbg !5271
  %136 = load i32, i32* %135, align 8, !dbg !5271
  %137 = icmp sgt i32 %136, 0, !dbg !5272
  br i1 %137, label %138, label %144, !dbg !5273

; <label>:138:                                    ; preds = %133
  %139 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5274
  %140 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5276
  %141 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %140, i32 0, i32 11, !dbg !5277
  %142 = load i32, i32* %141, align 8, !dbg !5277
  %143 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %139, i8 signext 1, i32 %142, void (i8*)* @AsyncTCPSocketSslConnectCallback), !dbg !5278
  store i8 %143, i8* %5, align 1, !dbg !5279
  br label %144, !dbg !5280

; <label>:144:                                    ; preds = %138, %133, %128
  %145 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5281
  %146 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %145, i32 0, i32 9, !dbg !5283
  %147 = load void (i8, %struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)** %146, align 8, !dbg !5283
  %148 = icmp ne void (i8, %struct.AsyncSocket*, i8*)* %147, null, !dbg !5281
  br i1 %148, label %149, label %160, !dbg !5284

; <label>:149:                                    ; preds = %144
  %150 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5285
  %151 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %150, i32 0, i32 11, !dbg !5287
  %152 = load i32, i32* %151, align 8, !dbg !5287
  %153 = icmp sgt i32 %152, 0, !dbg !5288
  br i1 %153, label %154, label %160, !dbg !5289

; <label>:154:                                    ; preds = %149
  %155 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5290
  %156 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5292
  %157 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %156, i32 0, i32 11, !dbg !5293
  %158 = load i32, i32* %157, align 8, !dbg !5293
  %159 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %155, i8 signext 1, i32 %158, void (i8*)* @AsyncTCPSocketSslAcceptCallback), !dbg !5294
  store i8 %159, i8* %5, align 1, !dbg !5295
  br label %160, !dbg !5296

; <label>:160:                                    ; preds = %154, %149, %144
  %161 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5297
  %162 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %161, i32 0, i32 11, !dbg !5298
  store i32 0, i32* %162, align 8, !dbg !5299
  %163 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5300
  %164 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %163, i32 0, i32 2, !dbg !5301
  %165 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %164, align 8, !dbg !5301
  %166 = call i32 @SSL_Shutdown(%struct.SSLSockStruct* %165), !dbg !5302
  %167 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5303
  %168 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %167, i32 0, i32 36, !dbg !5305
  %169 = getelementptr inbounds %struct.anon, %struct.anon* %168, i32 0, i32 1, !dbg !5306
  %170 = load i32, i32* %169, align 4, !dbg !5306
  %171 = icmp ne i32 %170, -1, !dbg !5307
  br i1 %171, label %172, label %178, !dbg !5308

; <label>:172:                                    ; preds = %160
  %173 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !5309
  %174 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %173, i32 0, i32 36, !dbg !5311
  %175 = getelementptr inbounds %struct.anon, %struct.anon* %174, i32 0, i32 1, !dbg !5312
  %176 = load i32, i32* %175, align 4, !dbg !5312
  %177 = call i32 @close(i32 %176), !dbg !5313
  br label %178, !dbg !5314

; <label>:178:                                    ; preds = %172, %160
  br label %179

; <label>:179:                                    ; preds = %178, %47
  %180 = load %struct.AsyncSocket*, %struct.AsyncSocket** %3, align 8, !dbg !5315
  call void @AsyncSocketTeardownSocket(%struct.AsyncSocket* %180), !dbg !5316
  store i32 0, i32* %2, align 4, !dbg !5317
  br label %181, !dbg !5317

; <label>:181:                                    ; preds = %179, %14
  %182 = load i32, i32* %2, align 4, !dbg !5318
  ret i32 %182, !dbg !5318
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketCancelRecv(%struct.AsyncSocket*, i32*, i8**, i8**, i8 signext) #0 !dbg !5319 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.AsyncSocket*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8, align 1
  %12 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %7, metadata !5320, metadata !480), !dbg !5321
  store i32* %1, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !5322, metadata !480), !dbg !5323
  store i8** %2, i8*** %9, align 8
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !5324, metadata !480), !dbg !5325
  store i8** %3, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !5326, metadata !480), !dbg !5327
  store i8 %4, i8* %11, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !5328, metadata !480), !dbg !5329
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %12, metadata !5330, metadata !480), !dbg !5331
  %13 = load %struct.AsyncSocket*, %struct.AsyncSocket** %7, align 8, !dbg !5332
  %14 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %13), !dbg !5333
  store %struct.AsyncTCPSocket* %14, %struct.AsyncTCPSocket** %12, align 8, !dbg !5331
  %15 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5334
  %16 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %15), !dbg !5336
  %17 = sext i8 %16 to i32, !dbg !5336
  %18 = icmp ne i32 %17, 2, !dbg !5337
  br i1 %18, label %19, label %20, !dbg !5338

; <label>:19:                                     ; preds = %5
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.85, i32 0, i32 0)), !dbg !5339
  store i32 5, i32* %6, align 4, !dbg !5341
  br label %71, !dbg !5341

; <label>:20:                                     ; preds = %5
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5342
  %22 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %21, i32 0, i32 33, !dbg !5344
  %23 = load i32, i32* %22, align 4, !dbg !5344
  %24 = icmp ne i32 %23, 0, !dbg !5342
  br i1 %24, label %25, label %31, !dbg !5345

; <label>:25:                                     ; preds = %20
  %26 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5346
  %27 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %26, i32 0, i32 32, !dbg !5348
  %28 = load i8, i8* %27, align 2, !dbg !5348
  %29 = icmp ne i8 %28, 0, !dbg !5346
  br i1 %29, label %31, label %30, !dbg !5349

; <label>:30:                                     ; preds = %25
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.86, i32 0, i32 0)), !dbg !5350
  store i32 5, i32* %6, align 4, !dbg !5352
  br label %71, !dbg !5352

; <label>:31:                                     ; preds = %25, %20
  %32 = load i8, i8* %11, align 1, !dbg !5353
  %33 = icmp ne i8 %32, 0, !dbg !5353
  br i1 %33, label %46, label %34, !dbg !5355

; <label>:34:                                     ; preds = %31
  %35 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5356
  %36 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %35, i32 0, i32 21, !dbg !5358
  %37 = load %struct.SendBufList*, %struct.SendBufList** %36, align 8, !dbg !5358
  %38 = icmp ne %struct.SendBufList* %37, null, !dbg !5356
  br i1 %38, label %45, label %39, !dbg !5359

; <label>:39:                                     ; preds = %34
  %40 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5360
  %41 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %40, i32 0, i32 24, !dbg !5362
  %42 = load i8, i8* %41, align 4, !dbg !5362
  %43 = sext i8 %42 to i32, !dbg !5360
  %44 = icmp ne i32 %43, 0, !dbg !5360
  br i1 %44, label %45, label %46, !dbg !5363

; <label>:45:                                     ; preds = %39, %34
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.87, i32 0, i32 0)), !dbg !5364
  store i32 5, i32* %6, align 4, !dbg !5366
  br label %71, !dbg !5366

; <label>:46:                                     ; preds = %39, %31
  %47 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5367
  call void @AsyncTCPSocketCancelRecvCb(%struct.AsyncTCPSocket* %47), !dbg !5368
  %48 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5369
  %49 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %48), !dbg !5370
  %50 = load i32*, i32** %8, align 8, !dbg !5371
  %51 = load i8**, i8*** %9, align 8, !dbg !5372
  %52 = load i8**, i8*** %10, align 8, !dbg !5373
  call void @AsyncSocketCancelRecv(%struct.AsyncSocket* %49, i32* %50, i8** %51, i8** %52), !dbg !5374
  %53 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5376
  %54 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %53, i32 0, i32 36, !dbg !5378
  %55 = getelementptr inbounds %struct.anon, %struct.anon* %54, i32 0, i32 1, !dbg !5379
  %56 = load i32, i32* %55, align 4, !dbg !5379
  %57 = icmp ne i32 %56, -1, !dbg !5380
  br i1 %57, label %58, label %67, !dbg !5381

; <label>:58:                                     ; preds = %46
  %59 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5382
  %60 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %59, i32 0, i32 36, !dbg !5384
  %61 = getelementptr inbounds %struct.anon, %struct.anon* %60, i32 0, i32 1, !dbg !5385
  %62 = load i32, i32* %61, align 4, !dbg !5385
  %63 = call i32 @close(i32 %62), !dbg !5386
  %64 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5387
  %65 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %64, i32 0, i32 36, !dbg !5388
  %66 = getelementptr inbounds %struct.anon, %struct.anon* %65, i32 0, i32 1, !dbg !5389
  store i32 -1, i32* %66, align 4, !dbg !5390
  br label %67, !dbg !5391

; <label>:67:                                     ; preds = %58, %46
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !5392
  %69 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %68, i32 0, i32 36, !dbg !5393
  %70 = getelementptr inbounds %struct.anon, %struct.anon* %69, i32 0, i32 0, !dbg !5394
  store i8 0, i8* %70, align 8, !dbg !5395
  store i32 0, i32* %6, align 4, !dbg !5396
  br label %71, !dbg !5396

; <label>:71:                                     ; preds = %67, %45, %30, %19
  %72 = load i32, i32* %6, align 4, !dbg !5397
  ret i32 %72, !dbg !5397
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketCancelCbForClose(%struct.AsyncSocket*) #0 !dbg !5398 {
  %2 = alloca %struct.AsyncSocket*, align 8
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i8, align 1
  %5 = alloca %struct.SendBufList*, align 8
  %6 = alloca i32, align 4
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %2, metadata !5399, metadata !480), !dbg !5400
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !5401, metadata !480), !dbg !5402
  %7 = load %struct.AsyncSocket*, %struct.AsyncSocket** %2, align 8, !dbg !5403
  %8 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %7), !dbg !5404
  store %struct.AsyncTCPSocket* %8, %struct.AsyncTCPSocket** %3, align 8, !dbg !5402
  call void @llvm.dbg.declare(metadata i8* %4, metadata !5405, metadata !480), !dbg !5406
  %9 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5407
  %10 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %9), !dbg !5409
  %11 = sext i8 %10 to i32, !dbg !5409
  %12 = icmp eq i32 %11, 2, !dbg !5410
  br i1 %12, label %13, label %15, !dbg !5411

; <label>:13:                                     ; preds = %1
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5412
  call void @AsyncTCPSocketSetState(%struct.AsyncTCPSocket* %14, i32 3), !dbg !5414
  br label %15, !dbg !5415

; <label>:15:                                     ; preds = %13, %1
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5416
  %17 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %16, i32 0, i32 20, !dbg !5418
  %18 = load i8, i8* %17, align 1, !dbg !5418
  %19 = icmp ne i8 %18, 0, !dbg !5416
  br i1 %19, label %20, label %28, !dbg !5419

; <label>:20:                                     ; preds = %15
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5420
  %22 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5422
  %23 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %22, i32 0, i32 15, !dbg !5423
  %24 = load void (i8*)*, void (i8*)** %23, align 8, !dbg !5423
  %25 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %21, i8 signext 0, i32 0, void (i8*)* %24), !dbg !5424
  %26 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5425
  %27 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %26, i32 0, i32 20, !dbg !5426
  store i8 0, i8* %27, align 1, !dbg !5427
  br label %28, !dbg !5428

; <label>:28:                                     ; preds = %20, %15
  %29 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5429
  %30 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %29, i32 0, i32 19, !dbg !5431
  %31 = load i8, i8* %30, align 8, !dbg !5431
  %32 = icmp ne i8 %31, 0, !dbg !5429
  br i1 %32, label %33, label %46, !dbg !5432

; <label>:33:                                     ; preds = %28
  br label %34, !dbg !5433, !llvm.loop !5435

; <label>:34:                                     ; preds = %33
  br label %35, !dbg !5436

; <label>:35:                                     ; preds = %34
  %36 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5439
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5440
  %38 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %37, i32 0, i32 15, !dbg !5441
  %39 = load void (i8*)*, void (i8*)** %38, align 8, !dbg !5441
  %40 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %36, i8 signext 1, i32 5, void (i8*)* %39), !dbg !5442
  store i8 %40, i8* %4, align 1, !dbg !5443
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5444
  %42 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %41, i32 0, i32 19, !dbg !5445
  store i8 0, i8* %42, align 8, !dbg !5446
  %43 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5447
  %44 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %43, i32 0, i32 0, !dbg !5448
  %45 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %44, i32 0, i32 8, !dbg !5449
  store i8* null, i8** %45, align 8, !dbg !5450
  br label %46, !dbg !5451

; <label>:46:                                     ; preds = %35, %28
  %47 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5452
  %48 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %47, i32 0, i32 24, !dbg !5454
  %49 = load i8, i8* %48, align 4, !dbg !5454
  %50 = icmp ne i8 %49, 0, !dbg !5452
  br i1 %50, label %51, label %75, !dbg !5455

; <label>:51:                                     ; preds = %46
  br label %52, !dbg !5456, !llvm.loop !5458

; <label>:52:                                     ; preds = %51
  br label %53, !dbg !5459

; <label>:53:                                     ; preds = %52
  %54 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5462
  %55 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %54, i32 0, i32 25, !dbg !5464
  %56 = load i8, i8* %55, align 1, !dbg !5464
  %57 = icmp ne i8 %56, 0, !dbg !5462
  br i1 %57, label %58, label %64, !dbg !5465

; <label>:58:                                     ; preds = %53
  %59 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5466
  %60 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5468
  %61 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %60, i32 0, i32 14, !dbg !5469
  %62 = load void (i8*)*, void (i8*)** %61, align 8, !dbg !5469
  %63 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %59, i8 signext 0, i32 0, void (i8*)* %62), !dbg !5470
  store i8 %63, i8* %4, align 1, !dbg !5471
  br label %70, !dbg !5472

; <label>:64:                                     ; preds = %53
  %65 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5473
  %66 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5475
  %67 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %66, i32 0, i32 14, !dbg !5476
  %68 = load void (i8*)*, void (i8*)** %67, align 8, !dbg !5476
  %69 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %65, i8 signext 1, i32 8, void (i8*)* %68), !dbg !5477
  store i8 %69, i8* %4, align 1, !dbg !5478
  br label %70

; <label>:70:                                     ; preds = %64, %58
  %71 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5479
  %72 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %71, i32 0, i32 24, !dbg !5480
  store i8 0, i8* %72, align 4, !dbg !5481
  %73 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5482
  %74 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %73, i32 0, i32 25, !dbg !5483
  store i8 0, i8* %74, align 1, !dbg !5484
  br label %75, !dbg !5485

; <label>:75:                                     ; preds = %70, %46
  %76 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5486
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %76), !dbg !5487
  br label %77, !dbg !5488

; <label>:77:                                     ; preds = %115, %75
  %78 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5489
  %79 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %78, i32 0, i32 21, !dbg !5491
  %80 = load %struct.SendBufList*, %struct.SendBufList** %79, align 8, !dbg !5491
  %81 = icmp ne %struct.SendBufList* %80, null, !dbg !5492
  br i1 %81, label %82, label %118, !dbg !5492

; <label>:82:                                     ; preds = %77
  call void @llvm.dbg.declare(metadata %struct.SendBufList** %5, metadata !5493, metadata !480), !dbg !5495
  %83 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5496
  %84 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %83, i32 0, i32 21, !dbg !5497
  %85 = load %struct.SendBufList*, %struct.SendBufList** %84, align 8, !dbg !5497
  store %struct.SendBufList* %85, %struct.SendBufList** %5, align 8, !dbg !5495
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5498, metadata !480), !dbg !5499
  %86 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5500
  %87 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %86, i32 0, i32 23, !dbg !5501
  %88 = load i32, i32* %87, align 8, !dbg !5501
  store i32 %88, i32* %6, align 4, !dbg !5499
  %89 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5502
  %90 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %89, i32 0, i32 21, !dbg !5503
  %91 = load %struct.SendBufList*, %struct.SendBufList** %90, align 8, !dbg !5503
  %92 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %91, i32 0, i32 0, !dbg !5504
  %93 = load %struct.SendBufList*, %struct.SendBufList** %92, align 8, !dbg !5504
  %94 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5505
  %95 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %94, i32 0, i32 21, !dbg !5506
  store %struct.SendBufList* %93, %struct.SendBufList** %95, align 8, !dbg !5507
  %96 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5508
  %97 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %96, i32 0, i32 23, !dbg !5509
  store i32 0, i32* %97, align 8, !dbg !5510
  %98 = load %struct.SendBufList*, %struct.SendBufList** %5, align 8, !dbg !5511
  %99 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %98, i32 0, i32 3, !dbg !5513
  %100 = load void (i8*, i32, %struct.AsyncSocket*, i8*)*, void (i8*, i32, %struct.AsyncSocket*, i8*)** %99, align 8, !dbg !5513
  %101 = icmp ne void (i8*, i32, %struct.AsyncSocket*, i8*)* %100, null, !dbg !5511
  br i1 %101, label %102, label %115, !dbg !5514

; <label>:102:                                    ; preds = %82
  %103 = load %struct.SendBufList*, %struct.SendBufList** %5, align 8, !dbg !5515
  %104 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %103, i32 0, i32 3, !dbg !5517
  %105 = load void (i8*, i32, %struct.AsyncSocket*, i8*)*, void (i8*, i32, %struct.AsyncSocket*, i8*)** %104, align 8, !dbg !5517
  %106 = load %struct.SendBufList*, %struct.SendBufList** %5, align 8, !dbg !5518
  %107 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %106, i32 0, i32 1, !dbg !5519
  %108 = load i8*, i8** %107, align 8, !dbg !5519
  %109 = load i32, i32* %6, align 4, !dbg !5520
  %110 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5521
  %111 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %110), !dbg !5522
  %112 = load %struct.SendBufList*, %struct.SendBufList** %5, align 8, !dbg !5523
  %113 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %112, i32 0, i32 4, !dbg !5524
  %114 = load i8*, i8** %113, align 8, !dbg !5524
  call void %105(i8* %108, i32 %109, %struct.AsyncSocket* %111, i8* %114), !dbg !5525
  br label %115, !dbg !5527

; <label>:115:                                    ; preds = %102, %82
  %116 = load %struct.SendBufList*, %struct.SendBufList** %5, align 8, !dbg !5528
  %117 = bitcast %struct.SendBufList* %116 to i8*, !dbg !5528
  call void @free(i8* %117) #8, !dbg !5529
  br label %77, !dbg !5530, !llvm.loop !5532

; <label>:118:                                    ; preds = %77
  %119 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !5533
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %119), !dbg !5534
  ret i32 0, !dbg !5535
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetLocalVMCIAddress(%struct.AsyncSocket*, i32*, i32*) #0 !dbg !5536 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.AsyncSocket*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %5, metadata !5537, metadata !480), !dbg !5538
  store i32* %1, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !5539, metadata !480), !dbg !5540
  store i32* %2, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !5541, metadata !480), !dbg !5542
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %8, metadata !5543, metadata !480), !dbg !5544
  %9 = load %struct.AsyncSocket*, %struct.AsyncSocket** %5, align 8, !dbg !5545
  %10 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %9), !dbg !5546
  store %struct.AsyncTCPSocket* %10, %struct.AsyncTCPSocket** %8, align 8, !dbg !5544
  %11 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5547
  %12 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %11, i32 0, i32 5, !dbg !5549
  %13 = load i32, i32* %12, align 8, !dbg !5549
  %14 = zext i32 %13 to i64, !dbg !5547
  %15 = icmp ne i64 %14, 16, !dbg !5550
  br i1 %15, label %16, label %17, !dbg !5551

; <label>:16:                                     ; preds = %3
  store i32 1, i32* %4, align 4, !dbg !5552
  br label %38, !dbg !5552

; <label>:17:                                     ; preds = %3
  %18 = load i32*, i32** %6, align 8, !dbg !5554
  %19 = icmp ne i32* %18, null, !dbg !5556
  br i1 %19, label %20, label %27, !dbg !5557

; <label>:20:                                     ; preds = %17
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5558
  %22 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %21, i32 0, i32 4, !dbg !5560
  %23 = bitcast %struct.sockaddr_storage* %22 to %struct.sockaddr_vm*, !dbg !5561
  %24 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %23, i32 0, i32 3, !dbg !5561
  %25 = load i32, i32* %24, align 8, !dbg !5561
  %26 = load i32*, i32** %6, align 8, !dbg !5562
  store i32 %25, i32* %26, align 4, !dbg !5563
  br label %27, !dbg !5564

; <label>:27:                                     ; preds = %20, %17
  %28 = load i32*, i32** %7, align 8, !dbg !5565
  %29 = icmp ne i32* %28, null, !dbg !5567
  br i1 %29, label %30, label %37, !dbg !5568

; <label>:30:                                     ; preds = %27
  %31 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5569
  %32 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %31, i32 0, i32 4, !dbg !5571
  %33 = bitcast %struct.sockaddr_storage* %32 to %struct.sockaddr_vm*, !dbg !5572
  %34 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %33, i32 0, i32 2, !dbg !5572
  %35 = load i32, i32* %34, align 4, !dbg !5572
  %36 = load i32*, i32** %7, align 8, !dbg !5573
  store i32 %35, i32* %36, align 4, !dbg !5574
  br label %37, !dbg !5575

; <label>:37:                                     ; preds = %30, %27
  store i32 0, i32* %4, align 4, !dbg !5576
  br label %38, !dbg !5576

; <label>:38:                                     ; preds = %37, %16
  %39 = load i32, i32* %4, align 4, !dbg !5577
  ret i32 %39, !dbg !5577
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetRemoteVMCIAddress(%struct.AsyncSocket*, i32*, i32*) #0 !dbg !5578 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.AsyncSocket*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %5, metadata !5579, metadata !480), !dbg !5580
  store i32* %1, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !5581, metadata !480), !dbg !5582
  store i32* %2, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !5583, metadata !480), !dbg !5584
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %8, metadata !5585, metadata !480), !dbg !5586
  %9 = load %struct.AsyncSocket*, %struct.AsyncSocket** %5, align 8, !dbg !5587
  %10 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %9), !dbg !5588
  store %struct.AsyncTCPSocket* %10, %struct.AsyncTCPSocket** %8, align 8, !dbg !5586
  %11 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5589
  %12 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %11, i32 0, i32 7, !dbg !5591
  %13 = load i32, i32* %12, align 8, !dbg !5591
  %14 = zext i32 %13 to i64, !dbg !5589
  %15 = icmp ne i64 %14, 16, !dbg !5592
  br i1 %15, label %16, label %17, !dbg !5593

; <label>:16:                                     ; preds = %3
  store i32 1, i32* %4, align 4, !dbg !5594
  br label %38, !dbg !5594

; <label>:17:                                     ; preds = %3
  %18 = load i32*, i32** %6, align 8, !dbg !5596
  %19 = icmp ne i32* %18, null, !dbg !5598
  br i1 %19, label %20, label %27, !dbg !5599

; <label>:20:                                     ; preds = %17
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5600
  %22 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %21, i32 0, i32 6, !dbg !5602
  %23 = bitcast %struct.sockaddr_storage* %22 to %struct.sockaddr_vm*, !dbg !5603
  %24 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %23, i32 0, i32 3, !dbg !5603
  %25 = load i32, i32* %24, align 8, !dbg !5603
  %26 = load i32*, i32** %6, align 8, !dbg !5604
  store i32 %25, i32* %26, align 4, !dbg !5605
  br label %27, !dbg !5606

; <label>:27:                                     ; preds = %20, %17
  %28 = load i32*, i32** %7, align 8, !dbg !5607
  %29 = icmp ne i32* %28, null, !dbg !5609
  br i1 %29, label %30, label %37, !dbg !5610

; <label>:30:                                     ; preds = %27
  %31 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5611
  %32 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %31, i32 0, i32 6, !dbg !5613
  %33 = bitcast %struct.sockaddr_storage* %32 to %struct.sockaddr_vm*, !dbg !5614
  %34 = getelementptr inbounds %struct.sockaddr_vm, %struct.sockaddr_vm* %33, i32 0, i32 2, !dbg !5614
  %35 = load i32, i32* %34, align 4, !dbg !5614
  %36 = load i32*, i32** %7, align 8, !dbg !5615
  store i32 %35, i32* %36, align 4, !dbg !5616
  br label %37, !dbg !5617

; <label>:37:                                     ; preds = %30, %27
  store i32 0, i32* %4, align 4, !dbg !5618
  br label %38, !dbg !5618

; <label>:38:                                     ; preds = %37, %16
  %39 = load i32, i32* %4, align 4, !dbg !5619
  ret i32 %39, !dbg !5619
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketRecvBlocking(%struct.AsyncSocket*, i8*, i32, i32*, i32) #0 !dbg !5620 {
  %6 = alloca %struct.AsyncSocket*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %6, metadata !5621, metadata !480), !dbg !5622
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5623, metadata !480), !dbg !5624
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5625, metadata !480), !dbg !5626
  store i32* %3, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !5627, metadata !480), !dbg !5628
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5629, metadata !480), !dbg !5630
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %11, metadata !5631, metadata !480), !dbg !5632
  %12 = load %struct.AsyncSocket*, %struct.AsyncSocket** %6, align 8, !dbg !5633
  %13 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %12), !dbg !5634
  store %struct.AsyncTCPSocket* %13, %struct.AsyncTCPSocket** %11, align 8, !dbg !5632
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %11, align 8, !dbg !5635
  %15 = load i8*, i8** %7, align 8, !dbg !5636
  %16 = load i32, i32* %8, align 4, !dbg !5637
  %17 = load i32*, i32** %9, align 8, !dbg !5638
  %18 = load i32, i32* %10, align 4, !dbg !5639
  %19 = call i32 @AsyncTCPSocketBlockingWork(%struct.AsyncTCPSocket* %14, i8 signext 1, i8* %15, i32 %16, i32* %17, i32 %18, i8 signext 0), !dbg !5640
  ret i32 %19, !dbg !5641
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketRecvPartialBlocking(%struct.AsyncSocket*, i8*, i32, i32*, i32) #0 !dbg !5642 {
  %6 = alloca %struct.AsyncSocket*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %6, metadata !5643, metadata !480), !dbg !5644
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5645, metadata !480), !dbg !5646
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5647, metadata !480), !dbg !5648
  store i32* %3, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !5649, metadata !480), !dbg !5650
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5651, metadata !480), !dbg !5652
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %11, metadata !5653, metadata !480), !dbg !5654
  %12 = load %struct.AsyncSocket*, %struct.AsyncSocket** %6, align 8, !dbg !5655
  %13 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %12), !dbg !5656
  store %struct.AsyncTCPSocket* %13, %struct.AsyncTCPSocket** %11, align 8, !dbg !5654
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %11, align 8, !dbg !5657
  %15 = load i8*, i8** %7, align 8, !dbg !5658
  %16 = load i32, i32* %8, align 4, !dbg !5659
  %17 = load i32*, i32** %9, align 8, !dbg !5660
  %18 = load i32, i32* %10, align 4, !dbg !5661
  %19 = call i32 @AsyncTCPSocketBlockingWork(%struct.AsyncTCPSocket* %14, i8 signext 1, i8* %15, i32 %16, i32* %17, i32 %18, i8 signext 1), !dbg !5662
  ret i32 %19, !dbg !5663
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketSendBlocking(%struct.AsyncSocket*, i8*, i32, i32*, i32) #0 !dbg !5664 {
  %6 = alloca %struct.AsyncSocket*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %6, metadata !5665, metadata !480), !dbg !5666
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5667, metadata !480), !dbg !5668
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5669, metadata !480), !dbg !5670
  store i32* %3, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !5671, metadata !480), !dbg !5672
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5673, metadata !480), !dbg !5674
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %11, metadata !5675, metadata !480), !dbg !5676
  %12 = load %struct.AsyncSocket*, %struct.AsyncSocket** %6, align 8, !dbg !5677
  %13 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %12), !dbg !5678
  store %struct.AsyncTCPSocket* %13, %struct.AsyncTCPSocket** %11, align 8, !dbg !5676
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %11, align 8, !dbg !5679
  %15 = load i8*, i8** %7, align 8, !dbg !5680
  %16 = load i32, i32* %8, align 4, !dbg !5681
  %17 = load i32*, i32** %9, align 8, !dbg !5682
  %18 = load i32, i32* %10, align 4, !dbg !5683
  %19 = call i32 @AsyncTCPSocketBlockingWork(%struct.AsyncTCPSocket* %14, i8 signext 0, i8* %15, i32 %16, i32* %17, i32 %18, i8 signext 0), !dbg !5684
  ret i32 %19, !dbg !5685
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketDoOneMsg(%struct.AsyncSocket*, i8 signext, i32) #0 !dbg !5686 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.AsyncSocket*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca %struct.AsyncTCPSocket*, align 8
  %9 = alloca %struct.AsyncTCPSocket*, align 8
  %10 = alloca i32, align 4
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %5, metadata !5687, metadata !480), !dbg !5688
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !5689, metadata !480), !dbg !5690
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5691, metadata !480), !dbg !5692
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %8, metadata !5693, metadata !480), !dbg !5694
  %11 = load %struct.AsyncSocket*, %struct.AsyncSocket** %5, align 8, !dbg !5695
  %12 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %11), !dbg !5696
  store %struct.AsyncTCPSocket* %12, %struct.AsyncTCPSocket** %8, align 8, !dbg !5694
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %9, metadata !5697, metadata !480), !dbg !5698
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %9, align 8, !dbg !5698
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5699, metadata !480), !dbg !5700
  %13 = load i8, i8* %6, align 1, !dbg !5701
  %14 = icmp ne i8 %13, 0, !dbg !5701
  br i1 %14, label %15, label %100, !dbg !5703

; <label>:15:                                     ; preds = %3
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5704
  %17 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %16, i32 0, i32 32, !dbg !5707
  %18 = load i8, i8* %17, align 2, !dbg !5707
  %19 = icmp ne i8 %18, 0, !dbg !5704
  br i1 %19, label %20, label %29, !dbg !5708

; <label>:20:                                     ; preds = %15
  br label %21, !dbg !5709, !llvm.loop !5711

; <label>:21:                                     ; preds = %20
  %22 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5712
  %23 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %22), !dbg !5715
  %24 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %23), !dbg !5716
  %25 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5718
  %26 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %25), !dbg !5719
  %27 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %26), !dbg !5721
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %24, i32 %27), !dbg !5723
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i32 0, i32 0)), !dbg !5725
  br label %28, !dbg !5727

; <label>:28:                                     ; preds = %21
  store i32 16, i32* %4, align 4, !dbg !5728
  br label %128, !dbg !5728

; <label>:29:                                     ; preds = %15
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5729
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %30), !dbg !5730
  %31 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5731
  call void @AsyncTCPSocketCancelRecvCb(%struct.AsyncTCPSocket* %31), !dbg !5732
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5733
  %33 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %32, i32 0, i32 19, !dbg !5734
  store i8 1, i8* %33, align 8, !dbg !5735
  %34 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5736
  %35 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %34, i32 0, i32 33, !dbg !5737
  %36 = load i32, i32* %35, align 4, !dbg !5738
  %37 = add i32 %36, 1, !dbg !5738
  store i32 %37, i32* %35, align 4, !dbg !5738
  %38 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5739
  %39 = load i8, i8* %6, align 1, !dbg !5740
  %40 = load i32, i32* %7, align 4, !dbg !5741
  %41 = call i32 @AsyncTCPSocketPoll(%struct.AsyncTCPSocket* %38, i8 signext %39, i32 %40, %struct.AsyncTCPSocket** %9), !dbg !5742
  store i32 %41, i32* %10, align 4, !dbg !5743
  %42 = load i32, i32* %10, align 4, !dbg !5744
  %43 = icmp ne i32 %42, 0, !dbg !5746
  br i1 %43, label %44, label %57, !dbg !5747

; <label>:44:                                     ; preds = %29
  %45 = load i32, i32* %10, align 4, !dbg !5748
  %46 = icmp eq i32 %45, 1, !dbg !5751
  br i1 %46, label %47, label %56, !dbg !5752

; <label>:47:                                     ; preds = %44
  br label %48, !dbg !5753, !llvm.loop !5755

; <label>:48:                                     ; preds = %47
  %49 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5756
  %50 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %49), !dbg !5759
  %51 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %50), !dbg !5760
  %52 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5762
  %53 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %52), !dbg !5763
  %54 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %53), !dbg !5765
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %51, i32 %54), !dbg !5767
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.AsyncTCPSocketDoOneMsg, i32 0, i32 0)), !dbg !5769
  br label %55, !dbg !5771

; <label>:55:                                     ; preds = %48
  br label %56, !dbg !5772

; <label>:56:                                     ; preds = %55, %44
  br label %60, !dbg !5773

; <label>:57:                                     ; preds = %29
  %58 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5774
  %59 = call i32 @AsyncTCPSocketFillRecvBuffer(%struct.AsyncTCPSocket* %58), !dbg !5776
  store i32 %59, i32* %10, align 4, !dbg !5777
  br label %60

; <label>:60:                                     ; preds = %57, %56
  %61 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5778
  %62 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %61, i32 0, i32 33, !dbg !5779
  %63 = load i32, i32* %62, align 4, !dbg !5780
  %64 = add i32 %63, -1, !dbg !5780
  store i32 %64, i32* %62, align 4, !dbg !5780
  %65 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5781
  %66 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %65), !dbg !5783
  %67 = sext i8 %66 to i32, !dbg !5783
  %68 = icmp ne i32 %67, 4, !dbg !5784
  br i1 %68, label %69, label %98, !dbg !5785

; <label>:69:                                     ; preds = %60
  %70 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5786
  %71 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %70, i32 0, i32 19, !dbg !5788
  %72 = load i8, i8* %71, align 8, !dbg !5788
  %73 = sext i8 %72 to i32, !dbg !5786
  %74 = icmp ne i32 %73, 0, !dbg !5786
  br i1 %74, label %75, label %98, !dbg !5789

; <label>:75:                                     ; preds = %69
  %76 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5790
  %77 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %76, i32 0, i32 19, !dbg !5792
  store i8 0, i8* %77, align 8, !dbg !5793
  %78 = load i32, i32* %10, align 4, !dbg !5794
  %79 = icmp eq i32 %78, 0, !dbg !5796
  br i1 %79, label %83, label %80, !dbg !5797

; <label>:80:                                     ; preds = %75
  %81 = load i32, i32* %10, align 4, !dbg !5798
  %82 = icmp eq i32 %81, 2, !dbg !5800
  br i1 %82, label %83, label %90, !dbg !5801

; <label>:83:                                     ; preds = %80, %75
  %84 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5802
  %85 = call i32 @AsyncTCPSocketRegisterRecvCb(%struct.AsyncTCPSocket* %84), !dbg !5804
  store i32 %85, i32* %10, align 4, !dbg !5805
  %86 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5806
  %87 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %86), !dbg !5807
  %88 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %87, i32 0, i32 1, !dbg !5808
  %89 = load i32, i32* %88, align 4, !dbg !5808
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.92, i32 0, i32 0), i32 %89), !dbg !5809
  br label %90, !dbg !5810

; <label>:90:                                     ; preds = %83, %80
  %91 = load i32, i32* %10, align 4, !dbg !5811
  %92 = icmp ne i32 %91, 0, !dbg !5813
  br i1 %92, label %93, label %97, !dbg !5814

; <label>:93:                                     ; preds = %90
  %94 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5815
  %95 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %94, i32 0, i32 0, !dbg !5817
  %96 = getelementptr inbounds %struct.AsyncSocket, %struct.AsyncSocket* %95, i32 0, i32 8, !dbg !5818
  store i8* null, i8** %96, align 8, !dbg !5819
  br label %97, !dbg !5820

; <label>:97:                                     ; preds = %93, %90
  br label %98, !dbg !5821

; <label>:98:                                     ; preds = %97, %69, %60
  %99 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5822
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %99), !dbg !5823
  br label %126, !dbg !5824

; <label>:100:                                    ; preds = %3
  %101 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5825
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %101), !dbg !5827
  %102 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5828
  %103 = load i8, i8* %6, align 1, !dbg !5829
  %104 = load i32, i32* %7, align 4, !dbg !5830
  %105 = call i32 @AsyncTCPSocketPoll(%struct.AsyncTCPSocket* %102, i8 signext %103, i32 %104, %struct.AsyncTCPSocket** %9), !dbg !5831
  store i32 %105, i32* %10, align 4, !dbg !5832
  %106 = load i32, i32* %10, align 4, !dbg !5833
  %107 = icmp ne i32 %106, 0, !dbg !5835
  br i1 %107, label %108, label %121, !dbg !5836

; <label>:108:                                    ; preds = %100
  %109 = load i32, i32* %10, align 4, !dbg !5837
  %110 = icmp eq i32 %109, 1, !dbg !5840
  br i1 %110, label %111, label %120, !dbg !5841

; <label>:111:                                    ; preds = %108
  br label %112, !dbg !5842, !llvm.loop !5844

; <label>:112:                                    ; preds = %111
  %113 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5845
  %114 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %113), !dbg !5848
  %115 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %114), !dbg !5849
  %116 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5851
  %117 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %116), !dbg !5852
  %118 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %117), !dbg !5854
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %115, i32 %118), !dbg !5856
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.AsyncTCPSocketDoOneMsg, i32 0, i32 0)), !dbg !5858
  br label %119, !dbg !5860

; <label>:119:                                    ; preds = %112
  br label %120, !dbg !5861

; <label>:120:                                    ; preds = %119, %108
  br label %124, !dbg !5862

; <label>:121:                                    ; preds = %100
  %122 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5863
  %123 = call i32 @AsyncTCPSocketWriteBuffers(%struct.AsyncTCPSocket* %122), !dbg !5865
  store i32 %123, i32* %10, align 4, !dbg !5866
  br label %124

; <label>:124:                                    ; preds = %121, %120
  %125 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %8, align 8, !dbg !5867
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %125), !dbg !5868
  br label %126

; <label>:126:                                    ; preds = %124, %98
  %127 = load i32, i32* %10, align 4, !dbg !5869
  store i32 %127, i32* %4, align 4, !dbg !5870
  br label %128, !dbg !5870

; <label>:128:                                    ; preds = %126, %28
  %129 = load i32, i32* %4, align 4, !dbg !5871
  ret i32 %129, !dbg !5871
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketWaitForConnection(%struct.AsyncSocket*, i32) #0 !dbg !5872 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.AsyncSocket*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.AsyncTCPSocket*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %4, metadata !5873, metadata !480), !dbg !5874
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5875, metadata !480), !dbg !5876
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %6, metadata !5877, metadata !480), !dbg !5878
  %13 = load %struct.AsyncSocket*, %struct.AsyncSocket** %4, align 8, !dbg !5879
  %14 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %13), !dbg !5880
  store %struct.AsyncTCPSocket* %14, %struct.AsyncTCPSocket** %6, align 8, !dbg !5878
  call void @llvm.dbg.declare(metadata i8* %7, metadata !5881, metadata !480), !dbg !5882
  store i8 0, i8* %7, align 1, !dbg !5882
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5883, metadata !480), !dbg !5884
  call void @llvm.dbg.declare(metadata i64* %9, metadata !5885, metadata !480), !dbg !5886
  call void @llvm.dbg.declare(metadata i64* %10, metadata !5887, metadata !480), !dbg !5888
  call void @llvm.dbg.declare(metadata i8* %11, metadata !5889, metadata !480), !dbg !5890
  store i8 0, i8* %11, align 1, !dbg !5890
  %15 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5891
  %16 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %15), !dbg !5893
  %17 = sext i8 %16 to i32, !dbg !5893
  %18 = icmp eq i32 %17, 2, !dbg !5894
  br i1 %18, label %19, label %20, !dbg !5895

; <label>:19:                                     ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !5896
  br label %215, !dbg !5896

; <label>:20:                                     ; preds = %2
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5898
  %22 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %21), !dbg !5900
  %23 = sext i8 %22 to i32, !dbg !5900
  %24 = icmp ne i32 %23, 0, !dbg !5901
  br i1 %24, label %25, label %31, !dbg !5902

; <label>:25:                                     ; preds = %20
  %26 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5903
  %27 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %26), !dbg !5904
  %28 = sext i8 %27 to i32, !dbg !5904
  %29 = icmp ne i32 %28, 1, !dbg !5905
  br i1 %29, label %30, label %31, !dbg !5906

; <label>:30:                                     ; preds = %25
  store i32 1, i32* %3, align 4, !dbg !5908
  br label %215, !dbg !5908

; <label>:31:                                     ; preds = %25, %20
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5910
  %33 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %32), !dbg !5911
  %34 = sext i8 %33 to i32, !dbg !5911
  %35 = icmp eq i32 %34, 0, !dbg !5912
  %36 = zext i1 %35 to i32, !dbg !5912
  %37 = trunc i32 %36 to i8, !dbg !5911
  store i8 %37, i8* %7, align 1, !dbg !5913
  %38 = load i8, i8* %7, align 1, !dbg !5914
  %39 = icmp ne i8 %38, 0, !dbg !5914
  br i1 %39, label %40, label %67, !dbg !5916

; <label>:40:                                     ; preds = %31
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5917
  %42 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %41, i32 0, i32 1, !dbg !5920
  %43 = load i32, i32* %42, align 8, !dbg !5920
  %44 = icmp eq i32 %43, -1, !dbg !5921
  br i1 %44, label %45, label %64, !dbg !5922

; <label>:45:                                     ; preds = %40
  %46 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5923
  %47 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %46, i32 0, i32 34, !dbg !5926
  %48 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %47, align 8, !dbg !5926
  %49 = icmp ne %struct.AsyncTCPSocket* %48, null, !dbg !5923
  br i1 %49, label %50, label %54, !dbg !5927

; <label>:50:                                     ; preds = %45
  %51 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5928
  %52 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %51, i32 0, i32 34, !dbg !5930
  %53 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %52, align 8, !dbg !5930
  call void @AsyncTCPSocketCancelListenCb(%struct.AsyncTCPSocket* %53), !dbg !5931
  br label %54, !dbg !5932

; <label>:54:                                     ; preds = %50, %45
  %55 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5933
  %56 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %55, i32 0, i32 35, !dbg !5935
  %57 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %56, align 8, !dbg !5935
  %58 = icmp ne %struct.AsyncTCPSocket* %57, null, !dbg !5933
  br i1 %58, label %59, label %63, !dbg !5936

; <label>:59:                                     ; preds = %54
  %60 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5937
  %61 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %60, i32 0, i32 35, !dbg !5939
  %62 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %61, align 8, !dbg !5939
  call void @AsyncTCPSocketCancelListenCb(%struct.AsyncTCPSocket* %62), !dbg !5940
  br label %63, !dbg !5941

; <label>:63:                                     ; preds = %59, %54
  br label %66, !dbg !5942

; <label>:64:                                     ; preds = %40
  %65 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5943
  call void @AsyncTCPSocketCancelListenCb(%struct.AsyncTCPSocket* %65), !dbg !5945
  br label %66

; <label>:66:                                     ; preds = %64, %63
  store i8 1, i8* %11, align 1, !dbg !5946
  br label %91, !dbg !5947

; <label>:67:                                     ; preds = %31
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5948
  %69 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %68, i8 signext 1, i32 8, void (i8*)* @AsyncTCPSocketConnectCallback), !dbg !5950
  %70 = sext i8 %69 to i32, !dbg !5950
  %71 = icmp ne i32 %70, 0, !dbg !5950
  br i1 %71, label %77, label %72, !dbg !5951

; <label>:72:                                     ; preds = %67
  %73 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5952
  %74 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %73, i8 signext 0, i32 0, void (i8*)* @AsyncTCPSocketConnectCallback), !dbg !5953
  %75 = sext i8 %74 to i32, !dbg !5953
  %76 = icmp ne i32 %75, 0, !dbg !5954
  br label %77, !dbg !5954

; <label>:77:                                     ; preds = %72, %67
  %78 = phi i1 [ true, %67 ], [ %76, %72 ]
  %79 = zext i1 %78 to i32, !dbg !5956
  %80 = trunc i32 %79 to i8, !dbg !5958
  store i8 %80, i8* %11, align 1, !dbg !5959
  %81 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5960
  %82 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %81, i32 0, i32 13, !dbg !5962
  %83 = load void (i8*)*, void (i8*)** %82, align 8, !dbg !5962
  %84 = icmp ne void (i8*)* %83, null, !dbg !5960
  br i1 %84, label %85, label %90, !dbg !5963

; <label>:85:                                     ; preds = %77
  %86 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5964
  %87 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %86, i8 signext 0, i32 1, void (i8*)* @AsyncTCPSocketConnectErrorCheck), !dbg !5966
  store i8 %87, i8* %11, align 1, !dbg !5967
  %88 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5968
  %89 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %88, i32 0, i32 13, !dbg !5969
  store void (i8*)* null, void (i8*)** %89, align 8, !dbg !5970
  br label %90, !dbg !5971

; <label>:90:                                     ; preds = %85, %77
  br label %91

; <label>:91:                                     ; preds = %90, %66
  %92 = call i64 @Hostinfo_SystemTimerUS(), !dbg !5972
  %93 = sdiv i64 %92, 1000, !dbg !5973
  store i64 %93, i64* %9, align 8, !dbg !5974
  %94 = load i64, i64* %9, align 8, !dbg !5975
  %95 = load i32, i32* %5, align 4, !dbg !5976
  %96 = sext i32 %95 to i64, !dbg !5976
  %97 = add nsw i64 %94, %96, !dbg !5977
  store i64 %97, i64* %10, align 8, !dbg !5978
  br label %98, !dbg !5979, !llvm.loop !5980

; <label>:98:                                     ; preds = %143, %91
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %12, metadata !5981, metadata !480), !dbg !5983
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %12, align 8, !dbg !5983
  %99 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !5984
  %100 = load i8, i8* %7, align 1, !dbg !5985
  %101 = load i64, i64* %10, align 8, !dbg !5986
  %102 = load i64, i64* %9, align 8, !dbg !5987
  %103 = sub nsw i64 %101, %102, !dbg !5988
  %104 = trunc i64 %103 to i32, !dbg !5986
  %105 = call i32 @AsyncTCPSocketPoll(%struct.AsyncTCPSocket* %99, i8 signext %100, i32 %104, %struct.AsyncTCPSocket** %12), !dbg !5989
  store i32 %105, i32* %8, align 4, !dbg !5990
  %106 = load i32, i32* %8, align 4, !dbg !5991
  %107 = icmp ne i32 %106, 0, !dbg !5993
  br i1 %107, label %108, label %109, !dbg !5994

; <label>:108:                                    ; preds = %98
  br label %146, !dbg !5995

; <label>:109:                                    ; preds = %98
  %110 = call i64 @Hostinfo_SystemTimerUS(), !dbg !5997
  %111 = sdiv i64 %110, 1000, !dbg !5998
  store i64 %111, i64* %9, align 8, !dbg !5999
  %112 = load i8, i8* %7, align 1, !dbg !6000
  %113 = icmp ne i8 %112, 0, !dbg !6000
  br i1 %113, label %114, label %129, !dbg !6002

; <label>:114:                                    ; preds = %109
  %115 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !6003
  %116 = call i32 @AsyncTCPSocketAcceptInternal(%struct.AsyncTCPSocket* %115), !dbg !6006
  %117 = icmp ne i32 %116, 0, !dbg !6007
  br i1 %117, label %118, label %127, !dbg !6008

; <label>:118:                                    ; preds = %114
  br label %119, !dbg !6009, !llvm.loop !6011

; <label>:119:                                    ; preds = %118
  %120 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6012
  %121 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %120), !dbg !6015
  %122 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %121), !dbg !6016
  %123 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6018
  %124 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %123), !dbg !6019
  %125 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %124), !dbg !6021
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %122, i32 %125), !dbg !6023
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.94, i32 0, i32 0)), !dbg !6025
  br label %126, !dbg !6027

; <label>:126:                                    ; preds = %119
  br label %128, !dbg !6028

; <label>:127:                                    ; preds = %114
  store i32 0, i32* %8, align 4, !dbg !6029
  br label %146, !dbg !6031

; <label>:128:                                    ; preds = %126
  br label %132, !dbg !6032

; <label>:129:                                    ; preds = %109
  %130 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %12, align 8, !dbg !6033
  %131 = call i32 @AsyncTCPSocketConnectInternal(%struct.AsyncTCPSocket* %130), !dbg !6035
  store i32 %131, i32* %8, align 4, !dbg !6036
  br label %146, !dbg !6037

; <label>:132:                                    ; preds = %128
  br label %133, !dbg !6038

; <label>:133:                                    ; preds = %132
  %134 = load i64, i64* %9, align 8, !dbg !6039
  %135 = load i64, i64* %10, align 8, !dbg !6040
  %136 = icmp slt i64 %134, %135, !dbg !6041
  br i1 %136, label %137, label %140, !dbg !6042

; <label>:137:                                    ; preds = %133
  %138 = load i32, i32* %5, align 4, !dbg !6043
  %139 = icmp sgt i32 %138, 0, !dbg !6045
  br i1 %139, label %143, label %140, !dbg !6046

; <label>:140:                                    ; preds = %137, %133
  %141 = load i32, i32* %5, align 4, !dbg !6047
  %142 = icmp slt i32 %141, 0, !dbg !6049
  br label %143, !dbg !6050

; <label>:143:                                    ; preds = %140, %137
  %144 = phi i1 [ true, %137 ], [ %142, %140 ]
  br i1 %144, label %98, label %145, !dbg !6051, !llvm.loop !5980

; <label>:145:                                    ; preds = %143
  store i32 2, i32* %8, align 4, !dbg !6053
  br label %146, !dbg !6054

; <label>:146:                                    ; preds = %145, %129, %127, %108
  %147 = load i8, i8* %7, align 1, !dbg !6055
  %148 = sext i8 %147 to i32, !dbg !6055
  %149 = icmp ne i32 %148, 0, !dbg !6055
  br i1 %149, label %150, label %213, !dbg !6057

; <label>:150:                                    ; preds = %146
  %151 = load i8, i8* %11, align 1, !dbg !6058
  %152 = sext i8 %151 to i32, !dbg !6058
  %153 = icmp ne i32 %152, 0, !dbg !6058
  br i1 %153, label %154, label %213, !dbg !6060

; <label>:154:                                    ; preds = %150
  %155 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6061
  %156 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %155, i32 0, i32 1, !dbg !6064
  %157 = load i32, i32* %156, align 8, !dbg !6064
  %158 = icmp eq i32 %157, -1, !dbg !6065
  br i1 %158, label %159, label %200, !dbg !6066

; <label>:159:                                    ; preds = %154
  %160 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6067
  %161 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %160, i32 0, i32 34, !dbg !6070
  %162 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %161, align 8, !dbg !6070
  %163 = icmp ne %struct.AsyncTCPSocket* %162, null, !dbg !6067
  br i1 %163, label %164, label %179, !dbg !6071

; <label>:164:                                    ; preds = %159
  %165 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6072
  %166 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %165, i32 0, i32 34, !dbg !6073
  %167 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %166, align 8, !dbg !6073
  %168 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %167), !dbg !6074
  %169 = sext i8 %168 to i32, !dbg !6074
  %170 = icmp ne i32 %169, 4, !dbg !6075
  br i1 %170, label %171, label %179, !dbg !6076

; <label>:171:                                    ; preds = %164
  %172 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6078
  %173 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %172, i32 0, i32 34, !dbg !6081
  %174 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %173, align 8, !dbg !6081
  %175 = call signext i8 @AsyncTCPSocketAddListenCb(%struct.AsyncTCPSocket* %174), !dbg !6082
  %176 = icmp ne i8 %175, 0, !dbg !6082
  br i1 %176, label %178, label %177, !dbg !6083

; <label>:177:                                    ; preds = %171
  store i32 8, i32* %8, align 4, !dbg !6084
  br label %178, !dbg !6086

; <label>:178:                                    ; preds = %177, %171
  br label %179, !dbg !6087

; <label>:179:                                    ; preds = %178, %164, %159
  %180 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6088
  %181 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %180, i32 0, i32 35, !dbg !6090
  %182 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %181, align 8, !dbg !6090
  %183 = icmp ne %struct.AsyncTCPSocket* %182, null, !dbg !6088
  br i1 %183, label %184, label %199, !dbg !6091

; <label>:184:                                    ; preds = %179
  %185 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6092
  %186 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %185, i32 0, i32 35, !dbg !6093
  %187 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %186, align 8, !dbg !6093
  %188 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %187), !dbg !6094
  %189 = sext i8 %188 to i32, !dbg !6094
  %190 = icmp ne i32 %189, 4, !dbg !6095
  br i1 %190, label %191, label %199, !dbg !6096

; <label>:191:                                    ; preds = %184
  %192 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6097
  %193 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %192, i32 0, i32 35, !dbg !6100
  %194 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %193, align 8, !dbg !6100
  %195 = call signext i8 @AsyncTCPSocketAddListenCb(%struct.AsyncTCPSocket* %194), !dbg !6101
  %196 = icmp ne i8 %195, 0, !dbg !6101
  br i1 %196, label %198, label %197, !dbg !6102

; <label>:197:                                    ; preds = %191
  store i32 8, i32* %8, align 4, !dbg !6103
  br label %198, !dbg !6105

; <label>:198:                                    ; preds = %197, %191
  br label %199, !dbg !6106

; <label>:199:                                    ; preds = %198, %184, %179
  br label %212, !dbg !6107

; <label>:200:                                    ; preds = %154
  %201 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6108
  %202 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %201), !dbg !6111
  %203 = sext i8 %202 to i32, !dbg !6111
  %204 = icmp ne i32 %203, 4, !dbg !6112
  br i1 %204, label %205, label %211, !dbg !6111

; <label>:205:                                    ; preds = %200
  %206 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6113
  %207 = call signext i8 @AsyncTCPSocketAddListenCb(%struct.AsyncTCPSocket* %206), !dbg !6116
  %208 = icmp ne i8 %207, 0, !dbg !6116
  br i1 %208, label %210, label %209, !dbg !6117

; <label>:209:                                    ; preds = %205
  store i32 8, i32* %8, align 4, !dbg !6118
  br label %210, !dbg !6120

; <label>:210:                                    ; preds = %209, %205
  br label %211, !dbg !6121

; <label>:211:                                    ; preds = %210, %200
  br label %212

; <label>:212:                                    ; preds = %211, %199
  br label %213, !dbg !6122

; <label>:213:                                    ; preds = %212, %150, %146
  %214 = load i32, i32* %8, align 4, !dbg !6123
  store i32 %214, i32* %3, align 4, !dbg !6124
  br label %215, !dbg !6124

; <label>:215:                                    ; preds = %213, %30, %19
  %216 = load i32, i32* %3, align 4, !dbg !6125
  ret i32 %216, !dbg !6125
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketWaitForReadMultiple(%struct.AsyncSocket**, i32, i32, i32*) #0 !dbg !6126 {
  %5 = alloca %struct.AsyncSocket**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.AsyncTCPSocket*, align 8
  %12 = alloca %struct.pollfd*, align 8
  %13 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncSocket** %0, %struct.AsyncSocket*** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket*** %5, metadata !6127, metadata !480), !dbg !6128
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6129, metadata !480), !dbg !6130
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6131, metadata !480), !dbg !6132
  store i32* %3, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !6133, metadata !480), !dbg !6134
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6135, metadata !480), !dbg !6136
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6137, metadata !480), !dbg !6138
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %11, metadata !6139, metadata !480), !dbg !6140
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %11, align 8, !dbg !6140
  call void @llvm.dbg.declare(metadata %struct.pollfd** %12, metadata !6141, metadata !480), !dbg !6142
  %14 = load i32, i32* %6, align 4, !dbg !6143
  %15 = sext i32 %14 to i64, !dbg !6144
  %16 = call i8* @UtilSafeCalloc0(i64 %15, i64 8), !dbg !6145
  %17 = bitcast i8* %16 to %struct.pollfd*, !dbg !6145
  store %struct.pollfd* %17, %struct.pollfd** %12, align 8, !dbg !6142
  store i32 0, i32* %9, align 4, !dbg !6146
  br label %18, !dbg !6148

; <label>:18:                                     ; preds = %23, %4
  %19 = load i32, i32* %9, align 4, !dbg !6149
  %20 = load i32, i32* %6, align 4, !dbg !6152
  %21 = icmp slt i32 %19, %20, !dbg !6153
  br i1 %21, label %22, label %26, !dbg !6154

; <label>:22:                                     ; preds = %18
  br label %23, !dbg !6155

; <label>:23:                                     ; preds = %22
  %24 = load i32, i32* %9, align 4, !dbg !6157
  %25 = add nsw i32 %24, 1, !dbg !6157
  store i32 %25, i32* %9, align 4, !dbg !6157
  br label %18, !dbg !6159, !llvm.loop !6160

; <label>:26:                                     ; preds = %18
  %27 = load %struct.AsyncSocket**, %struct.AsyncSocket*** %5, align 8, !dbg !6162
  %28 = bitcast %struct.AsyncSocket** %27 to %struct.AsyncTCPSocket**, !dbg !6163
  %29 = load i32, i32* %6, align 4, !dbg !6164
  %30 = load %struct.pollfd*, %struct.pollfd** %12, align 8, !dbg !6165
  %31 = bitcast %struct.pollfd* %30 to i8*, !dbg !6165
  %32 = load i32, i32* %7, align 4, !dbg !6166
  %33 = call i32 @AsyncTCPSocketPollWork(%struct.AsyncTCPSocket** %28, i32 %29, i8* %31, i8 signext 1, i32 %32, %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %11), !dbg !6167
  store i32 %33, i32* %10, align 4, !dbg !6168
  %34 = load i32, i32* %6, align 4, !dbg !6169
  %35 = sub nsw i32 %34, 1, !dbg !6171
  store i32 %35, i32* %9, align 4, !dbg !6172
  br label %36, !dbg !6173

; <label>:36:                                     ; preds = %53, %26
  %37 = load i32, i32* %9, align 4, !dbg !6174
  %38 = icmp sge i32 %37, 0, !dbg !6177
  br i1 %38, label %39, label %56, !dbg !6178

; <label>:39:                                     ; preds = %36
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %13, metadata !6179, metadata !480), !dbg !6181
  %40 = load i32, i32* %9, align 4, !dbg !6182
  %41 = sext i32 %40 to i64, !dbg !6183
  %42 = load %struct.AsyncSocket**, %struct.AsyncSocket*** %5, align 8, !dbg !6183
  %43 = getelementptr inbounds %struct.AsyncSocket*, %struct.AsyncSocket** %42, i64 %41, !dbg !6183
  %44 = load %struct.AsyncSocket*, %struct.AsyncSocket** %43, align 8, !dbg !6183
  %45 = call %struct.AsyncTCPSocket* @TCPSocket(%struct.AsyncSocket* %44), !dbg !6184
  store %struct.AsyncTCPSocket* %45, %struct.AsyncTCPSocket** %13, align 8, !dbg !6181
  %46 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %11, align 8, !dbg !6185
  %47 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %13, align 8, !dbg !6187
  %48 = icmp eq %struct.AsyncTCPSocket* %46, %47, !dbg !6188
  br i1 %48, label %49, label %52, !dbg !6189

; <label>:49:                                     ; preds = %39
  %50 = load i32, i32* %9, align 4, !dbg !6190
  %51 = load i32*, i32** %8, align 8, !dbg !6192
  store i32 %50, i32* %51, align 4, !dbg !6193
  br label %52, !dbg !6194

; <label>:52:                                     ; preds = %49, %39
  br label %53, !dbg !6195

; <label>:53:                                     ; preds = %52
  %54 = load i32, i32* %9, align 4, !dbg !6196
  %55 = add nsw i32 %54, -1, !dbg !6196
  store i32 %55, i32* %9, align 4, !dbg !6196
  br label %36, !dbg !6198, !llvm.loop !6199

; <label>:56:                                     ; preds = %36
  %57 = load %struct.pollfd*, %struct.pollfd** %12, align 8, !dbg !6201
  %58 = bitcast %struct.pollfd* %57 to i8*, !dbg !6201
  call void @free(i8* %58) #8, !dbg !6202
  %59 = load i32, i32* %10, align 4, !dbg !6203
  ret i32 %59, !dbg !6204
}

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketDestroy(%struct.AsyncSocket*) #0 !dbg !6205 {
  %2 = alloca %struct.AsyncSocket*, align 8
  store %struct.AsyncSocket* %0, %struct.AsyncSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncSocket** %2, metadata !6206, metadata !480), !dbg !6207
  %3 = load %struct.AsyncSocket*, %struct.AsyncSocket** %2, align 8, !dbg !6208
  %4 = bitcast %struct.AsyncSocket* %3 to i8*, !dbg !6208
  call void @free(i8* %4) #8, !dbg !6209
  ret void, !dbg !6210
}

declare i32 @getnameinfo(%struct.sockaddr*, i32, i8*, i32, i8*, i32, i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketGetAddr(%struct.AsyncTCPSocket*, i32, %struct.sockaddr_storage*, i32*) #0 !dbg !6211 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.AsyncTCPSocket*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.sockaddr_storage*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %struct.AsyncTCPSocket*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.sockaddr_storage, align 8
  %13 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %6, metadata !6214, metadata !480), !dbg !6215
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6216, metadata !480), !dbg !6217
  store %struct.sockaddr_storage* %2, %struct.sockaddr_storage** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage** %8, metadata !6218, metadata !480), !dbg !6219
  store i32* %3, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !6220, metadata !480), !dbg !6221
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %10, metadata !6222, metadata !480), !dbg !6223
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6224, metadata !480), !dbg !6225
  call void @llvm.dbg.declare(metadata %struct.sockaddr_storage* %12, metadata !6226, metadata !480), !dbg !6227
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6228, metadata !480), !dbg !6229
  store i32 128, i32* %13, align 4, !dbg !6229
  %14 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6230
  %15 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %14, i32 0, i32 1, !dbg !6232
  %16 = load i32, i32* %15, align 8, !dbg !6232
  %17 = icmp ne i32 %16, -1, !dbg !6233
  br i1 %17, label %18, label %20, !dbg !6234

; <label>:18:                                     ; preds = %4
  %19 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6235
  store %struct.AsyncTCPSocket* %19, %struct.AsyncTCPSocket** %10, align 8, !dbg !6237
  br label %67, !dbg !6238

; <label>:20:                                     ; preds = %4
  %21 = load i32, i32* %7, align 4, !dbg !6239
  %22 = icmp eq i32 %21, 0, !dbg !6242
  br i1 %22, label %26, label %23, !dbg !6243

; <label>:23:                                     ; preds = %20
  %24 = load i32, i32* %7, align 4, !dbg !6244
  %25 = icmp eq i32 %24, 10, !dbg !6246
  br i1 %25, label %26, label %42, !dbg !6247

; <label>:26:                                     ; preds = %23, %20
  %27 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6248
  %28 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %27, i32 0, i32 35, !dbg !6249
  %29 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %28, align 8, !dbg !6249
  %30 = icmp ne %struct.AsyncTCPSocket* %29, null, !dbg !6248
  br i1 %30, label %31, label %42, !dbg !6250

; <label>:31:                                     ; preds = %26
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6251
  %33 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %32, i32 0, i32 35, !dbg !6252
  %34 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %33, align 8, !dbg !6252
  %35 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %34, i32 0, i32 1, !dbg !6253
  %36 = load i32, i32* %35, align 8, !dbg !6253
  %37 = icmp ne i32 %36, -1, !dbg !6254
  br i1 %37, label %38, label %42, !dbg !6255

; <label>:38:                                     ; preds = %31
  %39 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6257
  %40 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %39, i32 0, i32 35, !dbg !6259
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %40, align 8, !dbg !6259
  store %struct.AsyncTCPSocket* %41, %struct.AsyncTCPSocket** %10, align 8, !dbg !6260
  br label %66, !dbg !6261

; <label>:42:                                     ; preds = %31, %26, %23
  %43 = load i32, i32* %7, align 4, !dbg !6262
  %44 = icmp eq i32 %43, 0, !dbg !6265
  br i1 %44, label %48, label %45, !dbg !6266

; <label>:45:                                     ; preds = %42
  %46 = load i32, i32* %7, align 4, !dbg !6267
  %47 = icmp eq i32 %46, 2, !dbg !6269
  br i1 %47, label %48, label %64, !dbg !6270

; <label>:48:                                     ; preds = %45, %42
  %49 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6271
  %50 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %49, i32 0, i32 34, !dbg !6272
  %51 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %50, align 8, !dbg !6272
  %52 = icmp ne %struct.AsyncTCPSocket* %51, null, !dbg !6271
  br i1 %52, label %53, label %64, !dbg !6273

; <label>:53:                                     ; preds = %48
  %54 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6274
  %55 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %54, i32 0, i32 34, !dbg !6275
  %56 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %55, align 8, !dbg !6275
  %57 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %56, i32 0, i32 1, !dbg !6276
  %58 = load i32, i32* %57, align 8, !dbg !6276
  %59 = icmp ne i32 %58, -1, !dbg !6277
  br i1 %59, label %60, label %64, !dbg !6278

; <label>:60:                                     ; preds = %53
  %61 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6280
  %62 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %61, i32 0, i32 34, !dbg !6282
  %63 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %62, align 8, !dbg !6282
  store %struct.AsyncTCPSocket* %63, %struct.AsyncTCPSocket** %10, align 8, !dbg !6283
  br label %65, !dbg !6284

; <label>:64:                                     ; preds = %53, %48, %45
  store i32 5, i32* %5, align 4, !dbg !6285
  br label %105, !dbg !6285

; <label>:65:                                     ; preds = %60
  br label %66

; <label>:66:                                     ; preds = %65, %38
  br label %67

; <label>:67:                                     ; preds = %66, %18
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !6287
  %69 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %68, i32 0, i32 1, !dbg !6288
  %70 = load i32, i32* %69, align 8, !dbg !6288
  store i32 %70, i32* %11, align 4, !dbg !6289
  %71 = load i32, i32* %11, align 4, !dbg !6290
  %72 = bitcast %struct.sockaddr_storage* %12 to %struct.sockaddr*, !dbg !6292
  %73 = call i32 @getsockname(i32 %71, %struct.sockaddr* %72, i32* %13) #8, !dbg !6293
  %74 = icmp eq i32 %73, 0, !dbg !6294
  br i1 %74, label %75, label %96, !dbg !6295

; <label>:75:                                     ; preds = %67
  %76 = load i32, i32* %7, align 4, !dbg !6296
  %77 = icmp ne i32 %76, 0, !dbg !6299
  br i1 %77, label %78, label %85, !dbg !6300

; <label>:78:                                     ; preds = %75
  %79 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %12, i32 0, i32 0, !dbg !6301
  %80 = load i16, i16* %79, align 8, !dbg !6301
  %81 = zext i16 %80 to i32, !dbg !6303
  %82 = load i32, i32* %7, align 4, !dbg !6304
  %83 = icmp ne i32 %81, %82, !dbg !6305
  br i1 %83, label %84, label %85, !dbg !6306

; <label>:84:                                     ; preds = %78
  store i32 5, i32* %5, align 4, !dbg !6307
  br label %105, !dbg !6307

; <label>:85:                                     ; preds = %78, %75
  %86 = load %struct.sockaddr_storage*, %struct.sockaddr_storage** %8, align 8, !dbg !6309
  %87 = bitcast %struct.sockaddr_storage* %86 to i8*, !dbg !6310
  %88 = bitcast %struct.sockaddr_storage* %12 to i8*, !dbg !6310
  %89 = load i32*, i32** %9, align 8, !dbg !6311
  %90 = load i32, i32* %89, align 4, !dbg !6312
  %91 = load i32, i32* %13, align 4, !dbg !6313
  %92 = call i32 @Min(i32 %90, i32 %91), !dbg !6314
  %93 = sext i32 %92 to i64, !dbg !6314
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 %93, i32 8, i1 false), !dbg !6315
  %94 = load i32, i32* %13, align 4, !dbg !6317
  %95 = load i32*, i32** %9, align 8, !dbg !6318
  store i32 %94, i32* %95, align 4, !dbg !6319
  store i32 0, i32* %5, align 4, !dbg !6320
  br label %105, !dbg !6320

; <label>:96:                                     ; preds = %67
  br label %97, !dbg !6321, !llvm.loop !6323

; <label>:97:                                     ; preds = %96
  %98 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !6324
  %99 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %98), !dbg !6327
  %100 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %99), !dbg !6328
  %101 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %10, align 8, !dbg !6330
  %102 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %101), !dbg !6331
  %103 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %102), !dbg !6333
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %100, i32 %103), !dbg !6335
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.AsyncTCPSocketGetAddr, i32 0, i32 0)), !dbg !6337
  br label %104, !dbg !6339

; <label>:104:                                    ; preds = %97
  store i32 1, i32* %5, align 4, !dbg !6340
  br label %105, !dbg !6340

; <label>:105:                                    ; preds = %104, %85, %84, %64
  %106 = load i32, i32* %5, align 4, !dbg !6341
  ret i32 %106, !dbg !6341
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @Min(i32, i32) #3 !dbg !6342 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6346, metadata !480), !dbg !6347
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6348, metadata !480), !dbg !6349
  %5 = load i32, i32* %3, align 4, !dbg !6350
  %6 = load i32, i32* %4, align 4, !dbg !6351
  %7 = icmp slt i32 %5, %6, !dbg !6352
  br i1 %7, label %8, label %10, !dbg !6350

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* %3, align 4, !dbg !6353
  br label %12, !dbg !6355

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* %4, align 4, !dbg !6356
  br label %12, !dbg !6358

; <label>:12:                                     ; preds = %10, %8
  %13 = phi i32 [ %9, %8 ], [ %11, %10 ], !dbg !6359
  ret i32 %13, !dbg !6361
}

; Function Attrs: noreturn
declare void @Panic(i8*, ...) #9

declare signext i8 @SSL_SetupAcceptWithContext(%struct.SSLSockStruct*, i8*) #4

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketSslAcceptCallback(i8*) #0 !dbg !6362 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.AsyncTCPSocket*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6363, metadata !480), !dbg !6364
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6365, metadata !480), !dbg !6366
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %4, metadata !6367, metadata !480), !dbg !6368
  %6 = load i8*, i8** %2, align 8, !dbg !6369
  %7 = bitcast i8* %6 to %struct.AsyncTCPSocket*, !dbg !6369
  store %struct.AsyncTCPSocket* %7, %struct.AsyncTCPSocket** %4, align 8, !dbg !6368
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6370, metadata !480), !dbg !6371
  %8 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6372
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %8), !dbg !6373
  %9 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6374
  %10 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %9, i32 0, i32 11, !dbg !6375
  store i32 0, i32* %10, align 8, !dbg !6376
  %11 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6377
  %12 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %11, i32 0, i32 2, !dbg !6378
  %13 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %12, align 8, !dbg !6378
  %14 = call i32 @SSL_TryCompleteAccept(%struct.SSLSockStruct* %13), !dbg !6379
  store i32 %14, i32* %3, align 4, !dbg !6380
  %15 = load i32, i32* %3, align 4, !dbg !6381
  %16 = icmp sgt i32 %15, 0, !dbg !6383
  br i1 %16, label %17, label %26, !dbg !6384

; <label>:17:                                     ; preds = %1
  %18 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6385
  %19 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %18, i32 0, i32 9, !dbg !6387
  %20 = load void (i8, %struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)** %19, align 8, !dbg !6387
  %21 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6388
  %22 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %21), !dbg !6389
  %23 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6390
  %24 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %23, i32 0, i32 12, !dbg !6391
  %25 = load i8*, i8** %24, align 8, !dbg !6391
  call void %20(i8 signext 1, %struct.AsyncSocket* %22, i8* %25), !dbg !6392
  br label %75, !dbg !6394

; <label>:26:                                     ; preds = %1
  %27 = load i32, i32* %3, align 4, !dbg !6395
  %28 = icmp slt i32 %27, 0, !dbg !6398
  br i1 %28, label %29, label %38, !dbg !6395

; <label>:29:                                     ; preds = %26
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6399
  %31 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %30, i32 0, i32 9, !dbg !6401
  %32 = load void (i8, %struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)** %31, align 8, !dbg !6401
  %33 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6402
  %34 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %33), !dbg !6403
  %35 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6404
  %36 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %35, i32 0, i32 12, !dbg !6405
  %37 = load i8*, i8** %36, align 8, !dbg !6405
  call void %32(i8 signext 0, %struct.AsyncSocket* %34, i8* %37), !dbg !6406
  br label %74, !dbg !6408

; <label>:38:                                     ; preds = %26
  %39 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6409
  %40 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %39, i32 0, i32 2, !dbg !6411
  %41 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %40, align 8, !dbg !6411
  %42 = call i32 @SSL_WantRead(%struct.SSLSockStruct* %41), !dbg !6412
  %43 = icmp ne i32 %42, 0, !dbg !6412
  %44 = select i1 %43, i32 4, i32 8, !dbg !6412
  %45 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6413
  %46 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %45, i32 0, i32 11, !dbg !6414
  store i32 %44, i32* %46, align 8, !dbg !6415
  %47 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6416
  %48 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6417
  %49 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %48, i32 0, i32 11, !dbg !6418
  %50 = load i32, i32* %49, align 8, !dbg !6418
  %51 = call i32 (%struct.AsyncTCPSocket*, i8, i32, void (i8*)*, ...) @AsyncTCPSocketPollAdd(%struct.AsyncTCPSocket* %47, i8 signext 1, i32 %50, void (i8*)* @AsyncTCPSocketSslAcceptCallback), !dbg !6419
  store i32 %51, i32* %5, align 4, !dbg !6420
  %52 = load i32, i32* %5, align 4, !dbg !6421
  %53 = icmp ne i32 %52, 0, !dbg !6423
  br i1 %53, label %54, label %73, !dbg !6424

; <label>:54:                                     ; preds = %38
  br label %55, !dbg !6425, !llvm.loop !6427

; <label>:55:                                     ; preds = %54
  %56 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6428
  %57 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %56), !dbg !6431
  %58 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %57), !dbg !6432
  %59 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6434
  %60 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %59), !dbg !6435
  %61 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %60), !dbg !6437
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %58, i32 %61), !dbg !6439
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.64, i32 0, i32 0)), !dbg !6441
  br label %62, !dbg !6443

; <label>:62:                                     ; preds = %55
  %63 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6444
  %64 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %63, i32 0, i32 11, !dbg !6445
  store i32 0, i32* %64, align 8, !dbg !6446
  %65 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6447
  %66 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %65, i32 0, i32 9, !dbg !6448
  %67 = load void (i8, %struct.AsyncSocket*, i8*)*, void (i8, %struct.AsyncSocket*, i8*)** %66, align 8, !dbg !6448
  %68 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6449
  %69 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %68), !dbg !6450
  %70 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6451
  %71 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %70, i32 0, i32 12, !dbg !6452
  %72 = load i8*, i8** %71, align 8, !dbg !6452
  call void %67(i8 signext 0, %struct.AsyncSocket* %69, i8* %72), !dbg !6453
  br label %73, !dbg !6455

; <label>:73:                                     ; preds = %62, %38
  br label %74

; <label>:74:                                     ; preds = %73, %29
  br label %75

; <label>:75:                                     ; preds = %74, %17
  %76 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %4, align 8, !dbg !6456
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %76), !dbg !6457
  ret void, !dbg !6458
}

declare i32 @SSL_TryCompleteAccept(%struct.SSLSockStruct*) #4

declare i32 @SSL_WantRead(%struct.SSLSockStruct*) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @Hostinfo_SystemTimerUS() #3 !dbg !6459 {
  %1 = call i64 @Hostinfo_SystemTimerNS(), !dbg !6460
  %2 = udiv i64 %1, 1000, !dbg !6461
  ret i64 %2, !dbg !6462
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketWriteBuffers(%struct.AsyncTCPSocket*) #0 !dbg !6463 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.SendBufList*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !6464, metadata !480), !dbg !6465
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6466, metadata !480), !dbg !6467
  %10 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6468
  %11 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %10, i32 0, i32 21, !dbg !6470
  %12 = load %struct.SendBufList*, %struct.SendBufList** %11, align 8, !dbg !6470
  %13 = icmp eq %struct.SendBufList* %12, null, !dbg !6471
  br i1 %13, label %14, label %15, !dbg !6472

; <label>:14:                                     ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !6473
  br label %143, !dbg !6473

; <label>:15:                                     ; preds = %1
  %16 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6475
  %17 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %16), !dbg !6477
  %18 = sext i8 %17 to i32, !dbg !6477
  %19 = icmp ne i32 %18, 2, !dbg !6478
  br i1 %19, label %20, label %29, !dbg !6479

; <label>:20:                                     ; preds = %15
  br label %21, !dbg !6480, !llvm.loop !6482

; <label>:21:                                     ; preds = %20
  %22 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6483
  %23 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %22), !dbg !6486
  %24 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %23), !dbg !6487
  %25 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6489
  %26 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %25), !dbg !6490
  %27 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %26), !dbg !6492
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %24, i32 %27), !dbg !6494
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.69, i32 0, i32 0)), !dbg !6496
  br label %28, !dbg !6498

; <label>:28:                                     ; preds = %21
  store i32 1, i32* %2, align 4, !dbg !6499
  br label %143, !dbg !6499

; <label>:29:                                     ; preds = %15
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6500
  call void @AsyncTCPSocketAddRef(%struct.AsyncTCPSocket* %30), !dbg !6501
  br label %31, !dbg !6502

; <label>:31:                                     ; preds = %138, %29
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6503
  %33 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %32, i32 0, i32 21, !dbg !6505
  %34 = load %struct.SendBufList*, %struct.SendBufList** %33, align 8, !dbg !6505
  %35 = icmp ne %struct.SendBufList* %34, null, !dbg !6503
  br i1 %35, label %36, label %41, !dbg !6506

; <label>:36:                                     ; preds = %31
  %37 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6507
  %38 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %37), !dbg !6509
  %39 = sext i8 %38 to i32, !dbg !6509
  %40 = icmp eq i32 %39, 2, !dbg !6510
  br label %41

; <label>:41:                                     ; preds = %36, %31
  %42 = phi i1 [ false, %31 ], [ %40, %36 ]
  br i1 %42, label %43, label %139, !dbg !6511

; <label>:43:                                     ; preds = %41
  call void @llvm.dbg.declare(metadata %struct.SendBufList** %5, metadata !6513, metadata !480), !dbg !6515
  %44 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6516
  %45 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %44, i32 0, i32 21, !dbg !6517
  %46 = load %struct.SendBufList*, %struct.SendBufList** %45, align 8, !dbg !6517
  store %struct.SendBufList* %46, %struct.SendBufList** %5, align 8, !dbg !6515
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6518, metadata !480), !dbg !6519
  store i32 0, i32* %6, align 4, !dbg !6519
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6520, metadata !480), !dbg !6521
  store i32 0, i32* %7, align 4, !dbg !6521
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6522, metadata !480), !dbg !6523
  %47 = load %struct.SendBufList*, %struct.SendBufList** %5, align 8, !dbg !6524
  %48 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %47, i32 0, i32 2, !dbg !6525
  %49 = load i32, i32* %48, align 8, !dbg !6525
  %50 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6526
  %51 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %50, i32 0, i32 23, !dbg !6527
  %52 = load i32, i32* %51, align 8, !dbg !6527
  %53 = sub nsw i32 %49, %52, !dbg !6528
  store i32 %53, i32* %8, align 4, !dbg !6523
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6529, metadata !480), !dbg !6530
  %54 = load %struct.SendBufList*, %struct.SendBufList** %5, align 8, !dbg !6531
  %55 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %54, i32 0, i32 2, !dbg !6532
  %56 = load i32, i32* %55, align 8, !dbg !6532
  store i32 %56, i32* %9, align 4, !dbg !6530
  %57 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6533
  %58 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %57, i32 0, i32 2, !dbg !6534
  %59 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %58, align 8, !dbg !6534
  %60 = load %struct.SendBufList*, %struct.SendBufList** %5, align 8, !dbg !6535
  %61 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %60, i32 0, i32 1, !dbg !6536
  %62 = load i8*, i8** %61, align 8, !dbg !6536
  %63 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6537
  %64 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %63, i32 0, i32 23, !dbg !6538
  %65 = load i32, i32* %64, align 8, !dbg !6538
  %66 = sext i32 %65 to i64, !dbg !6539
  %67 = getelementptr inbounds i8, i8* %62, i64 %66, !dbg !6539
  %68 = load i32, i32* %8, align 4, !dbg !6540
  %69 = sext i32 %68 to i64, !dbg !6540
  %70 = call i64 @SSL_Write(%struct.SSLSockStruct* %59, i8* %67, i64 %69), !dbg !6541
  %71 = trunc i64 %70 to i32, !dbg !6541
  store i32 %71, i32* %7, align 4, !dbg !6542
  %72 = load i32, i32* %7, align 4, !dbg !6543
  %73 = icmp sgt i32 %72, 0, !dbg !6545
  br i1 %73, label %74, label %96, !dbg !6546

; <label>:74:                                     ; preds = %43
  br label %75, !dbg !6547, !llvm.loop !6549

; <label>:75:                                     ; preds = %74
  br label %76, !dbg !6550

; <label>:76:                                     ; preds = %75
  %77 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6553
  %78 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %77, i32 0, i32 27, !dbg !6554
  store i8 0, i8* %78, align 1, !dbg !6555
  %79 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6556
  %80 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %79, i32 0, i32 30, !dbg !6557
  store i8 1, i8* %80, align 8, !dbg !6558
  %81 = load i32, i32* %7, align 4, !dbg !6559
  %82 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6561
  %83 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %82, i32 0, i32 23, !dbg !6562
  %84 = load i32, i32* %83, align 8, !dbg !6563
  %85 = add nsw i32 %84, %81, !dbg !6563
  store i32 %85, i32* %83, align 8, !dbg !6563
  %86 = load i32, i32* %9, align 4, !dbg !6564
  %87 = icmp eq i32 %85, %86, !dbg !6565
  br i1 %87, label %88, label %95, !dbg !6566

; <label>:88:                                     ; preds = %76
  %89 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6567
  %90 = call i32 @AsyncTCPSocketDispatchSentBuffer(%struct.AsyncTCPSocket* %89), !dbg !6569
  store i32 %90, i32* %4, align 4, !dbg !6570
  %91 = load i32, i32* %4, align 4, !dbg !6571
  %92 = icmp ne i32 %91, 0, !dbg !6573
  br i1 %92, label %93, label %94, !dbg !6574

; <label>:93:                                     ; preds = %88
  br label %140, !dbg !6575

; <label>:94:                                     ; preds = %88
  br label %95, !dbg !6577

; <label>:95:                                     ; preds = %94, %76
  br label %138, !dbg !6578

; <label>:96:                                     ; preds = %43
  %97 = load i32, i32* %7, align 4, !dbg !6579
  %98 = icmp eq i32 %97, 0, !dbg !6582
  br i1 %98, label %99, label %108, !dbg !6579

; <label>:99:                                     ; preds = %96
  br label %100, !dbg !6583, !llvm.loop !6585

; <label>:100:                                    ; preds = %99
  %101 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6586
  %102 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %101), !dbg !6589
  %103 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %102), !dbg !6590
  %104 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6592
  %105 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %104), !dbg !6593
  %106 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %105), !dbg !6595
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %103, i32 %106), !dbg !6597
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.70, i32 0, i32 0)), !dbg !6599
  br label %107, !dbg !6601

; <label>:107:                                    ; preds = %100
  call void (i8*, ...) @Panic(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i32 0, i32 0), i32 3501) #11, !dbg !6602
  unreachable, !dbg !6602

; <label>:108:                                    ; preds = %96
  %109 = call i32* @__errno_location() #1, !dbg !6603
  %110 = load i32, i32* %109, align 4, !dbg !6605
  store i32 %110, i32* %6, align 4, !dbg !6606
  %111 = icmp ne i32 %110, 11, !dbg !6607
  br i1 %111, label %112, label %135, !dbg !6608

; <label>:112:                                    ; preds = %108
  br label %113, !dbg !6609, !llvm.loop !6611

; <label>:113:                                    ; preds = %112
  %114 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6612
  %115 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %114), !dbg !6615
  %116 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %115), !dbg !6616
  %117 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6618
  %118 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %117), !dbg !6619
  %119 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %118), !dbg !6621
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %116, i32 %119), !dbg !6623
  %120 = load i32, i32* %6, align 4, !dbg !6625
  %121 = load i32, i32* %6, align 4, !dbg !6626
  %122 = call i8* @Err_Errno2String(i32 %121), !dbg !6627
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i32 0, i32 0), i32 %120, i8* %122), !dbg !6629
  br label %123, !dbg !6631

; <label>:123:                                    ; preds = %113
  %124 = load i32, i32* %6, align 4, !dbg !6632
  %125 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6633
  %126 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %125, i32 0, i32 3, !dbg !6634
  store i32 %124, i32* %126, align 8, !dbg !6635
  %127 = load i32, i32* %6, align 4, !dbg !6636
  %128 = icmp eq i32 %127, 32, !dbg !6638
  br i1 %128, label %132, label %129, !dbg !6639

; <label>:129:                                    ; preds = %123
  %130 = load i32, i32* %6, align 4, !dbg !6640
  %131 = icmp eq i32 %130, 104, !dbg !6642
  br i1 %131, label %132, label %133, !dbg !6643

; <label>:132:                                    ; preds = %129, %123
  store i32 4, i32* %4, align 4, !dbg !6644
  br label %134, !dbg !6646

; <label>:133:                                    ; preds = %129
  store i32 1, i32* %4, align 4, !dbg !6647
  br label %134

; <label>:134:                                    ; preds = %133, %132
  br label %140, !dbg !6649

; <label>:135:                                    ; preds = %108
  %136 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6650
  %137 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %136, i32 0, i32 27, !dbg !6652
  store i8 1, i8* %137, align 1, !dbg !6653
  br label %139, !dbg !6654

; <label>:138:                                    ; preds = %95
  br label %31, !dbg !6655, !llvm.loop !6657

; <label>:139:                                    ; preds = %135, %41
  store i32 0, i32* %4, align 4, !dbg !6658
  br label %140, !dbg !6659

; <label>:140:                                    ; preds = %139, %134, %93
  %141 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6660
  call void @AsyncTCPSocketRelease(%struct.AsyncTCPSocket* %141), !dbg !6661
  %142 = load i32, i32* %4, align 4, !dbg !6662
  store i32 %142, i32* %2, align 4, !dbg !6663
  br label %143, !dbg !6663

; <label>:143:                                    ; preds = %140, %28, %14
  %144 = load i32, i32* %2, align 4, !dbg !6664
  ret i32 %144, !dbg !6664
}

declare i64 @Hostinfo_SystemTimerNS() #4

declare i64 @SSL_Write(%struct.SSLSockStruct*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketDispatchSentBuffer(%struct.AsyncTCPSocket*) #0 !dbg !6665 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.SendBufList*, align 8
  %5 = alloca %struct.SendBufList, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !6666, metadata !480), !dbg !6667
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6668, metadata !480), !dbg !6669
  store i32 0, i32* %3, align 4, !dbg !6669
  call void @llvm.dbg.declare(metadata %struct.SendBufList** %4, metadata !6670, metadata !480), !dbg !6671
  %6 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6672
  %7 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %6, i32 0, i32 21, !dbg !6673
  %8 = load %struct.SendBufList*, %struct.SendBufList** %7, align 8, !dbg !6673
  store %struct.SendBufList* %8, %struct.SendBufList** %4, align 8, !dbg !6671
  call void @llvm.dbg.declare(metadata %struct.SendBufList* %5, metadata !6674, metadata !480), !dbg !6675
  %9 = load %struct.SendBufList*, %struct.SendBufList** %4, align 8, !dbg !6676
  %10 = bitcast %struct.SendBufList* %5 to i8*, !dbg !6677
  %11 = bitcast %struct.SendBufList* %9 to i8*, !dbg !6677
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 40, i32 8, i1 false), !dbg !6677
  %12 = load %struct.SendBufList*, %struct.SendBufList** %4, align 8, !dbg !6678
  %13 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %12, i32 0, i32 0, !dbg !6679
  %14 = load %struct.SendBufList*, %struct.SendBufList** %13, align 8, !dbg !6679
  %15 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6680
  %16 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %15, i32 0, i32 21, !dbg !6681
  store %struct.SendBufList* %14, %struct.SendBufList** %16, align 8, !dbg !6682
  %17 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6683
  %18 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %17, i32 0, i32 21, !dbg !6685
  %19 = load %struct.SendBufList*, %struct.SendBufList** %18, align 8, !dbg !6685
  %20 = icmp eq %struct.SendBufList* %19, null, !dbg !6686
  br i1 %20, label %21, label %26, !dbg !6687

; <label>:21:                                     ; preds = %1
  %22 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6688
  %23 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %22, i32 0, i32 21, !dbg !6690
  %24 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6691
  %25 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %24, i32 0, i32 22, !dbg !6692
  store %struct.SendBufList** %23, %struct.SendBufList*** %25, align 8, !dbg !6693
  br label %26, !dbg !6694

; <label>:26:                                     ; preds = %21, %1
  %27 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6695
  %28 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %27, i32 0, i32 23, !dbg !6696
  store i32 0, i32* %28, align 8, !dbg !6697
  %29 = load %struct.SendBufList*, %struct.SendBufList** %4, align 8, !dbg !6698
  %30 = bitcast %struct.SendBufList* %29 to i8*, !dbg !6698
  call void @free(i8* %30) #8, !dbg !6699
  %31 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %5, i32 0, i32 3, !dbg !6700
  %32 = load void (i8*, i32, %struct.AsyncSocket*, i8*)*, void (i8*, i32, %struct.AsyncSocket*, i8*)** %31, align 8, !dbg !6700
  %33 = icmp ne void (i8*, i32, %struct.AsyncSocket*, i8*)* %32, null, !dbg !6702
  br i1 %33, label %34, label %59, !dbg !6703

; <label>:34:                                     ; preds = %26
  %35 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %5, i32 0, i32 3, !dbg !6704
  %36 = load void (i8*, i32, %struct.AsyncSocket*, i8*)*, void (i8*, i32, %struct.AsyncSocket*, i8*)** %35, align 8, !dbg !6704
  %37 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %5, i32 0, i32 1, !dbg !6706
  %38 = load i8*, i8** %37, align 8, !dbg !6706
  %39 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %5, i32 0, i32 2, !dbg !6707
  %40 = load i32, i32* %39, align 8, !dbg !6707
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6708
  %42 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %41), !dbg !6709
  %43 = getelementptr inbounds %struct.SendBufList, %struct.SendBufList* %5, i32 0, i32 4, !dbg !6710
  %44 = load i8*, i8** %43, align 8, !dbg !6710
  call void %36(i8* %38, i32 %40, %struct.AsyncSocket* %42, i8* %44), !dbg !6711
  %45 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6713
  %46 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %45), !dbg !6715
  %47 = sext i8 %46 to i32, !dbg !6715
  %48 = icmp eq i32 %47, 4, !dbg !6716
  br i1 %48, label %49, label %58, !dbg !6717

; <label>:49:                                     ; preds = %34
  br label %50, !dbg !6718, !llvm.loop !6720

; <label>:50:                                     ; preds = %49
  %51 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6721
  %52 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %51), !dbg !6724
  %53 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %52), !dbg !6725
  %54 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6727
  %55 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %54), !dbg !6728
  %56 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %55), !dbg !6730
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %53, i32 %56), !dbg !6732
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.73, i32 0, i32 0)), !dbg !6734
  br label %57, !dbg !6736

; <label>:57:                                     ; preds = %50
  store i32 9, i32* %3, align 4, !dbg !6737
  br label %58, !dbg !6738

; <label>:58:                                     ; preds = %57, %34
  br label %59, !dbg !6739

; <label>:59:                                     ; preds = %58, %26
  %60 = load i32, i32* %3, align 4, !dbg !6740
  ret i32 %60, !dbg !6741
}

declare i32 @AsyncSocketSetRecvBuf(%struct.AsyncSocket*, i8*, i32, i8 signext, i8*, i8*) #4

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketCancelListenCb(%struct.AsyncTCPSocket*) #0 !dbg !6742 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  %3 = alloca i8, align 1
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !6743, metadata !480), !dbg !6744
  call void @llvm.dbg.declare(metadata i8* %3, metadata !6745, metadata !480), !dbg !6746
  %4 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6747
  %5 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %4, i8 signext 1, i32 5, void (i8*)* @AsyncTCPSocketAcceptCallback), !dbg !6748
  store i8 %5, i8* %3, align 1, !dbg !6749
  ret void, !dbg !6750
}

; Function Attrs: nounwind uwtable
define internal signext i8 @AsyncTCPSocketCancelCbForConnectingClose(%struct.AsyncTCPSocket*) #0 !dbg !6751 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !6752, metadata !480), !dbg !6753
  %3 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6754
  %4 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %3, i8 signext 1, i32 8, void (i8*)* @AsyncTCPSocketConnectCallback), !dbg !6755
  %5 = sext i8 %4 to i32, !dbg !6755
  %6 = icmp ne i32 %5, 0, !dbg !6755
  br i1 %6, label %12, label %7, !dbg !6756

; <label>:7:                                      ; preds = %1
  %8 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !6757
  %9 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %8, i8 signext 0, i32 0, void (i8*)* @AsyncTCPSocketConnectCallback), !dbg !6758
  %10 = sext i8 %9 to i32, !dbg !6758
  %11 = icmp ne i32 %10, 0, !dbg !6759
  br label %12, !dbg !6759

; <label>:12:                                     ; preds = %7, %1
  %13 = phi i1 [ true, %1 ], [ %11, %7 ]
  %14 = zext i1 %13 to i32, !dbg !6761
  %15 = trunc i32 %14 to i8, !dbg !6763
  ret i8 %15, !dbg !6764
}

; Function Attrs: nounwind uwtable
define internal signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket*, i8 signext, i32, void (i8*)*) #0 !dbg !6765 {
  %5 = alloca i8, align 1
  %6 = alloca %struct.AsyncTCPSocket*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca void (i8*)*, align 8
  %10 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %6, metadata !6768, metadata !480), !dbg !6769
  store i8 %1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !6770, metadata !480), !dbg !6771
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6772, metadata !480), !dbg !6773
  store void (i8*)* %3, void (i8*)** %9, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %9, metadata !6774, metadata !480), !dbg !6775
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6776, metadata !480), !dbg !6777
  %11 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6778
  %12 = call %struct.AsyncSocketPollParams* @AsyncTCPSocketPollParams(%struct.AsyncTCPSocket* %11), !dbg !6780
  %13 = getelementptr inbounds %struct.AsyncSocketPollParams, %struct.AsyncSocketPollParams* %12, i32 0, i32 3, !dbg !6781
  %14 = load %struct.IVmdbPoll*, %struct.IVmdbPoll** %13, align 8, !dbg !6781
  %15 = icmp ne %struct.IVmdbPoll* %14, null, !dbg !6782
  br i1 %15, label %16, label %22, !dbg !6783

; <label>:16:                                     ; preds = %4
  %17 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6784
  %18 = load i8, i8* %7, align 1, !dbg !6786
  %19 = load i32, i32* %8, align 4, !dbg !6787
  %20 = load void (i8*)*, void (i8*)** %9, align 8, !dbg !6788
  %21 = call signext i8 @AsyncTCPSocketIPollRemove(%struct.AsyncTCPSocket* %17, i8 signext %18, i32 %19, void (i8*)* %20), !dbg !6789
  store i8 %21, i8* %5, align 1, !dbg !6790
  br label %46, !dbg !6790

; <label>:22:                                     ; preds = %4
  %23 = load i8, i8* %7, align 1, !dbg !6791
  %24 = icmp ne i8 %23, 0, !dbg !6791
  br i1 %24, label %25, label %28, !dbg !6793

; <label>:25:                                     ; preds = %22
  store i32 2, i32* %10, align 4, !dbg !6794
  %26 = load i32, i32* %8, align 4, !dbg !6796
  %27 = or i32 %26, 16, !dbg !6796
  store i32 %27, i32* %8, align 4, !dbg !6796
  br label %29, !dbg !6797

; <label>:28:                                     ; preds = %22
  store i32 1, i32* %10, align 4, !dbg !6798
  br label %29

; <label>:29:                                     ; preds = %28, %25
  %30 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6800
  %31 = call %struct.AsyncSocketPollParams* @AsyncTCPSocketPollParams(%struct.AsyncTCPSocket* %30), !dbg !6801
  %32 = getelementptr inbounds %struct.AsyncSocketPollParams, %struct.AsyncSocketPollParams* %31, i32 0, i32 2, !dbg !6802
  %33 = load i32, i32* %8, align 4, !dbg !6803
  %34 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6804
  %35 = call %struct.AsyncSocketPollParams* @AsyncTCPSocketPollParams(%struct.AsyncTCPSocket* %34), !dbg !6805
  %36 = getelementptr inbounds %struct.AsyncSocketPollParams, %struct.AsyncSocketPollParams* %35, i32 0, i32 0, !dbg !6806
  %37 = load i32, i32* %36, align 8, !dbg !6806
  %38 = or i32 %33, %37, !dbg !6807
  %39 = load void (i8*)*, void (i8*)** %9, align 8, !dbg !6808
  %40 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %6, align 8, !dbg !6809
  %41 = bitcast %struct.AsyncTCPSocket* %40 to i8*, !dbg !6809
  %42 = load i32, i32* %10, align 4, !dbg !6810
  %43 = getelementptr inbounds %struct.PollClassSet, %struct.PollClassSet* %32, i32 0, i32 0, !dbg !6811
  %44 = load i64, i64* %43, align 8, !dbg !6811
  %45 = call signext i8 @Poll_CallbackRemove(i64 %44, i32 %38, void (i8*)* %39, i8* %41, i32 %42), !dbg !6812
  store i8 %45, i8* %5, align 1, !dbg !6814
  br label %46, !dbg !6814

; <label>:46:                                     ; preds = %29, %16
  %47 = load i8, i8* %5, align 1, !dbg !6815
  ret i8 %47, !dbg !6815
}

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketConnectErrorCheck(i8*) #0 !dbg !6816 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.AsyncTCPSocket*, align 8
  %4 = alloca i8, align 1
  %5 = alloca void (i8*)*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6817, metadata !480), !dbg !6818
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %3, metadata !6819, metadata !480), !dbg !6820
  %8 = load i8*, i8** %2, align 8, !dbg !6821
  %9 = bitcast i8* %8 to %struct.AsyncTCPSocket*, !dbg !6821
  store %struct.AsyncTCPSocket* %9, %struct.AsyncTCPSocket** %3, align 8, !dbg !6820
  call void @llvm.dbg.declare(metadata i8* %4, metadata !6822, metadata !480), !dbg !6823
  call void @llvm.dbg.declare(metadata void (i8*)** %5, metadata !6824, metadata !480), !dbg !6825
  store void (i8*)* null, void (i8*)** %5, align 8, !dbg !6825
  %10 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6826
  %11 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %10), !dbg !6828
  %12 = sext i8 %11 to i32, !dbg !6828
  %13 = icmp eq i32 %12, 1, !dbg !6829
  br i1 %13, label %14, label %57, !dbg !6830

; <label>:14:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6831, metadata !480), !dbg !6833
  store i32 0, i32* %6, align 4, !dbg !6833
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6834, metadata !480), !dbg !6835
  store i32 4, i32* %7, align 4, !dbg !6835
  %15 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6836
  %16 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %15, i32 0, i32 1, !dbg !6838
  %17 = load i32, i32* %16, align 8, !dbg !6838
  %18 = bitcast i32* %6 to i8*, !dbg !6839
  %19 = bitcast i32* %7 to i8*, !dbg !6840
  %20 = bitcast i8* %19 to i32*, !dbg !6840
  %21 = call i32 @getsockopt(i32 %17, i32 1, i32 4, i8* %18, i32* %20) #8, !dbg !6841
  %22 = icmp eq i32 %21, 0, !dbg !6842
  br i1 %22, label %23, label %31, !dbg !6843

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* %6, align 4, !dbg !6844
  %25 = icmp eq i32 %24, 0, !dbg !6847
  br i1 %25, label %26, label %27, !dbg !6848

; <label>:26:                                     ; preds = %23
  br label %68, !dbg !6849

; <label>:27:                                     ; preds = %23
  %28 = load i32, i32* %6, align 4, !dbg !6851
  %29 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6852
  %30 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %29, i32 0, i32 3, !dbg !6853
  store i32 %28, i32* %30, align 8, !dbg !6854
  br label %36, !dbg !6855

; <label>:31:                                     ; preds = %14
  %32 = call i32* @__errno_location() #1, !dbg !6856
  %33 = load i32, i32* %32, align 4, !dbg !6858
  %34 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6859
  %35 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %34, i32 0, i32 3, !dbg !6860
  store i32 %33, i32* %35, align 8, !dbg !6861
  br label %36

; <label>:36:                                     ; preds = %31, %27
  br label %37, !dbg !6862, !llvm.loop !6863

; <label>:37:                                     ; preds = %36
  %38 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6864
  %39 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %38), !dbg !6867
  %40 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %39), !dbg !6868
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6870
  %42 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %41), !dbg !6871
  %43 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %42), !dbg !6873
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %40, i32 %43), !dbg !6875
  %44 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6877
  %45 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %44, i32 0, i32 3, !dbg !6878
  %46 = load i32, i32* %45, align 8, !dbg !6878
  %47 = call i8* @Err_Errno2String(i32 %46), !dbg !6879
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83, i32 0, i32 0), i8* %47), !dbg !6881
  br label %48, !dbg !6883

; <label>:48:                                     ; preds = %37
  %49 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6884
  %50 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6885
  %51 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %50, i32 0, i32 13, !dbg !6886
  %52 = load void (i8*)*, void (i8*)** %51, align 8, !dbg !6886
  %53 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %49, i8 signext 1, i32 8, void (i8*)* %52), !dbg !6887
  store i8 %53, i8* %4, align 1, !dbg !6888
  %54 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6889
  %55 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %54, i32 0, i32 13, !dbg !6890
  %56 = load void (i8*)*, void (i8*)** %55, align 8, !dbg !6890
  store void (i8*)* %56, void (i8*)** %5, align 8, !dbg !6891
  br label %57, !dbg !6892

; <label>:57:                                     ; preds = %48, %1
  %58 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6893
  %59 = call signext i8 @AsyncTCPSocketPollRemove(%struct.AsyncTCPSocket* %58, i8 signext 0, i32 1, void (i8*)* @AsyncTCPSocketConnectErrorCheck), !dbg !6894
  store i8 %59, i8* %4, align 1, !dbg !6895
  %60 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6896
  %61 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %60, i32 0, i32 13, !dbg !6897
  store void (i8*)* null, void (i8*)** %61, align 8, !dbg !6898
  %62 = load void (i8*)*, void (i8*)** %5, align 8, !dbg !6899
  %63 = icmp ne void (i8*)* %62, null, !dbg !6899
  br i1 %63, label %64, label %68, !dbg !6901

; <label>:64:                                     ; preds = %57
  %65 = load void (i8*)*, void (i8*)** %5, align 8, !dbg !6902
  %66 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %3, align 8, !dbg !6904
  %67 = bitcast %struct.AsyncTCPSocket* %66 to i8*, !dbg !6904
  call void %65(i8* %67), !dbg !6902
  br label %68, !dbg !6905

; <label>:68:                                     ; preds = %26, %64, %57
  ret void, !dbg !6906
}

; Function Attrs: nounwind uwtable
define internal void @AsyncTCPSocketSslConnectCallback(i8*) #0 !dbg !6907 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6908, metadata !480), !dbg !6909
  call void (i8*, ...) @Panic(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i32 0, i32 0), i32 5518) #11, !dbg !6910
  unreachable, !dbg !6910
                                                  ; No predecessors!
  ret void, !dbg !6911
}

declare void @AsyncSocketTeardownSocket(%struct.AsyncSocket*) #4

; Function Attrs: nounwind uwtable
define internal signext i8 @AsyncTCPSocketIPollRemove(%struct.AsyncTCPSocket*, i8 signext, i32, void (i8*)*) #0 !dbg !6912 {
  %5 = alloca %struct.AsyncTCPSocket*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca void (i8*)*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %5, metadata !6913, metadata !480), !dbg !6914
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !6915, metadata !480), !dbg !6916
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6917, metadata !480), !dbg !6918
  store void (i8*)* %3, void (i8*)** %8, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %8, metadata !6919, metadata !480), !dbg !6920
  ret i8 0, !dbg !6921
}

declare signext i8 @Poll_CallbackRemove(i64, i32, void (i8*)*, i8*, i32) #4

declare void @AsyncSocketCancelRecv(%struct.AsyncSocket*, i32*, i8**, i8**) #4

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketBlockingWork(%struct.AsyncTCPSocket*, i8 signext, i8*, i32, i32*, i32, i8 signext) #0 !dbg !6922 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.AsyncTCPSocket*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %9, metadata !6925, metadata !480), !dbg !6926
  store i8 %1, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !6927, metadata !480), !dbg !6928
  store i8* %2, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !6929, metadata !480), !dbg !6930
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6931, metadata !480), !dbg !6932
  store i32* %4, i32** %13, align 8
  call void @llvm.dbg.declare(metadata i32** %13, metadata !6933, metadata !480), !dbg !6934
  store i32 %5, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !6935, metadata !480), !dbg !6936
  store i8 %6, i8* %15, align 1
  call void @llvm.dbg.declare(metadata i8* %15, metadata !6937, metadata !480), !dbg !6938
  call void @llvm.dbg.declare(metadata i64* %16, metadata !6939, metadata !480), !dbg !6940
  call void @llvm.dbg.declare(metadata i64* %17, metadata !6941, metadata !480), !dbg !6942
  call void @llvm.dbg.declare(metadata i32* %18, metadata !6943, metadata !480), !dbg !6944
  %22 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !6945
  %23 = icmp eq %struct.AsyncTCPSocket* %22, null, !dbg !6947
  br i1 %23, label %30, label %24, !dbg !6948

; <label>:24:                                     ; preds = %7
  %25 = load i8*, i8** %11, align 8, !dbg !6949
  %26 = icmp eq i8* %25, null, !dbg !6951
  br i1 %26, label %30, label %27, !dbg !6952

; <label>:27:                                     ; preds = %24
  %28 = load i32, i32* %12, align 4, !dbg !6953
  %29 = icmp sle i32 %28, 0, !dbg !6955
  br i1 %29, label %30, label %31, !dbg !6956

; <label>:30:                                     ; preds = %27, %24, %7
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.75, i32 0, i32 0)), !dbg !6957
  store i32 5, i32* %8, align 4, !dbg !6959
  br label %170, !dbg !6959

; <label>:31:                                     ; preds = %27
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !6960
  %33 = call signext i8 @AsyncTCPSocketGetState(%struct.AsyncTCPSocket* %32), !dbg !6962
  %34 = sext i8 %33 to i32, !dbg !6962
  %35 = icmp ne i32 %34, 2, !dbg !6963
  br i1 %35, label %36, label %45, !dbg !6964

; <label>:36:                                     ; preds = %31
  br label %37, !dbg !6965, !llvm.loop !6967

; <label>:37:                                     ; preds = %36
  %38 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !6968
  %39 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %38), !dbg !6971
  %40 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %39), !dbg !6972
  %41 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !6974
  %42 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %41), !dbg !6975
  %43 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %42), !dbg !6977
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %40, i32 %43), !dbg !6979
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.76, i32 0, i32 0)), !dbg !6981
  br label %44, !dbg !6983

; <label>:44:                                     ; preds = %37
  store i32 3, i32* %8, align 4, !dbg !6984
  br label %170, !dbg !6984

; <label>:45:                                     ; preds = %31
  %46 = load i32*, i32** %13, align 8, !dbg !6985
  %47 = icmp ne i32* %46, null, !dbg !6985
  br i1 %47, label %48, label %50, !dbg !6987

; <label>:48:                                     ; preds = %45
  %49 = load i32*, i32** %13, align 8, !dbg !6988
  store i32 0, i32* %49, align 4, !dbg !6990
  br label %50, !dbg !6991

; <label>:50:                                     ; preds = %48, %45
  %51 = call i64 @Hostinfo_SystemTimerUS(), !dbg !6992
  %52 = sdiv i64 %51, 1000, !dbg !6993
  store i64 %52, i64* %16, align 8, !dbg !6994
  %53 = load i64, i64* %16, align 8, !dbg !6995
  %54 = load i32, i32* %14, align 4, !dbg !6996
  %55 = sext i32 %54 to i64, !dbg !6996
  %56 = add nsw i64 %53, %55, !dbg !6997
  store i64 %56, i64* %17, align 8, !dbg !6998
  br label %57, !dbg !6999, !llvm.loop !7000

; <label>:57:                                     ; preds = %169, %50
  call void @llvm.dbg.declare(metadata i32* %19, metadata !7001, metadata !480), !dbg !7003
  call void @llvm.dbg.declare(metadata i32* %20, metadata !7004, metadata !480), !dbg !7005
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %21, metadata !7006, metadata !480), !dbg !7007
  store %struct.AsyncTCPSocket* null, %struct.AsyncTCPSocket** %21, align 8, !dbg !7007
  %58 = load i8, i8* %10, align 1, !dbg !7008
  %59 = sext i8 %58 to i32, !dbg !7008
  %60 = icmp ne i32 %59, 0, !dbg !7008
  br i1 %60, label %61, label %69, !dbg !7008

; <label>:61:                                     ; preds = %57
  %62 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !7010
  %63 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %62, i32 0, i32 2, !dbg !7012
  %64 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %63, align 8, !dbg !7012
  %65 = load i8*, i8** %11, align 8, !dbg !7013
  %66 = load i32, i32* %12, align 4, !dbg !7014
  %67 = sext i32 %66 to i64, !dbg !7014
  %68 = call i64 @SSL_Read(%struct.SSLSockStruct* %64, i8* %65, i64 %67), !dbg !7015
  br label %77, !dbg !7016

; <label>:69:                                     ; preds = %57
  %70 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !7017
  %71 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %70, i32 0, i32 2, !dbg !7018
  %72 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %71, align 8, !dbg !7018
  %73 = load i8*, i8** %11, align 8, !dbg !7019
  %74 = load i32, i32* %12, align 4, !dbg !7020
  %75 = sext i32 %74 to i64, !dbg !7020
  %76 = call i64 @SSL_Write(%struct.SSLSockStruct* %72, i8* %73, i64 %75), !dbg !7021
  br label %77, !dbg !7022

; <label>:77:                                     ; preds = %69, %61
  %78 = phi i64 [ %68, %61 ], [ %76, %69 ], !dbg !7024
  %79 = trunc i64 %78 to i32, !dbg !7024
  store i32 %79, i32* %19, align 4, !dbg !7026
  %80 = icmp sgt i32 %79, 0, !dbg !7027
  br i1 %80, label %81, label %105, !dbg !7028

; <label>:81:                                     ; preds = %77
  %82 = load i32*, i32** %13, align 8, !dbg !7029
  %83 = icmp ne i32* %82, null, !dbg !7029
  br i1 %83, label %84, label %89, !dbg !7032

; <label>:84:                                     ; preds = %81
  %85 = load i32, i32* %19, align 4, !dbg !7033
  %86 = load i32*, i32** %13, align 8, !dbg !7035
  %87 = load i32, i32* %86, align 4, !dbg !7036
  %88 = add nsw i32 %87, %85, !dbg !7036
  store i32 %88, i32* %86, align 4, !dbg !7036
  br label %89, !dbg !7037

; <label>:89:                                     ; preds = %84, %81
  %90 = load i32, i32* %19, align 4, !dbg !7038
  %91 = load i32, i32* %12, align 4, !dbg !7039
  %92 = sub nsw i32 %91, %90, !dbg !7039
  store i32 %92, i32* %12, align 4, !dbg !7039
  %93 = load i32, i32* %12, align 4, !dbg !7040
  %94 = icmp eq i32 %93, 0, !dbg !7042
  br i1 %94, label %99, label %95, !dbg !7043

; <label>:95:                                     ; preds = %89
  %96 = load i8, i8* %15, align 1, !dbg !7044
  %97 = sext i8 %96 to i32, !dbg !7044
  %98 = icmp ne i32 %97, 0, !dbg !7044
  br i1 %98, label %99, label %100, !dbg !7046

; <label>:99:                                     ; preds = %95, %89
  store i32 0, i32* %8, align 4, !dbg !7047
  br label %170, !dbg !7047

; <label>:100:                                    ; preds = %95
  %101 = load i8*, i8** %11, align 8, !dbg !7049
  %102 = load i32, i32* %19, align 4, !dbg !7050
  %103 = sext i32 %102 to i64, !dbg !7051
  %104 = getelementptr inbounds i8, i8* %101, i64 %103, !dbg !7051
  store i8* %104, i8** %11, align 8, !dbg !7052
  br label %146, !dbg !7053

; <label>:105:                                    ; preds = %77
  %106 = load i32, i32* %19, align 4, !dbg !7054
  %107 = icmp eq i32 %106, 0, !dbg !7057
  br i1 %107, label %108, label %121, !dbg !7054

; <label>:108:                                    ; preds = %105
  br label %109, !dbg !7058, !llvm.loop !7060

; <label>:109:                                    ; preds = %108
  %110 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !7061
  %111 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %110), !dbg !7064
  %112 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %111), !dbg !7065
  %113 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !7067
  %114 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %113), !dbg !7068
  %115 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %114), !dbg !7070
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %112, i32 %115), !dbg !7072
  %116 = load i8, i8* %10, align 1, !dbg !7074
  %117 = sext i8 %116 to i32, !dbg !7074
  %118 = icmp ne i32 %117, 0, !dbg !7074
  %119 = select i1 %118, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i32 0, i32 0), !dbg !7074
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.88, i32 0, i32 0), i8* %119), !dbg !7075
  br label %120, !dbg !7077

; <label>:120:                                    ; preds = %109
  store i32 4, i32* %8, align 4, !dbg !7078
  br label %170, !dbg !7078

; <label>:121:                                    ; preds = %105
  %122 = call i32* @__errno_location() #1, !dbg !7079
  %123 = load i32, i32* %122, align 4, !dbg !7081
  store i32 %123, i32* %18, align 4, !dbg !7082
  %124 = icmp ne i32 %123, 11, !dbg !7083
  br i1 %124, label %125, label %144, !dbg !7084

; <label>:125:                                    ; preds = %121
  %126 = load i32, i32* %18, align 4, !dbg !7085
  %127 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !7087
  %128 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %127, i32 0, i32 3, !dbg !7088
  store i32 %126, i32* %128, align 8, !dbg !7089
  br label %129, !dbg !7090, !llvm.loop !7091

; <label>:129:                                    ; preds = %125
  %130 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !7092
  %131 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %130), !dbg !7095
  %132 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %131), !dbg !7096
  %133 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !7098
  %134 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %133), !dbg !7099
  %135 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %134), !dbg !7101
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %132, i32 %135), !dbg !7103
  %136 = load i8, i8* %10, align 1, !dbg !7105
  %137 = sext i8 %136 to i32, !dbg !7105
  %138 = icmp ne i32 %137, 0, !dbg !7105
  %139 = select i1 %138, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i32 0, i32 0), !dbg !7105
  %140 = load i32, i32* %18, align 4, !dbg !7106
  %141 = load i32, i32* %18, align 4, !dbg !7107
  %142 = call i8* @Err_Errno2String(i32 %141), !dbg !7108
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.91, i32 0, i32 0), i8* %139, i32 %140, i8* %142), !dbg !7110
  br label %143, !dbg !7112

; <label>:143:                                    ; preds = %129
  store i32 1, i32* %8, align 4, !dbg !7113
  br label %170, !dbg !7113

; <label>:144:                                    ; preds = %121
  br label %145

; <label>:145:                                    ; preds = %144
  br label %146

; <label>:146:                                    ; preds = %145, %100
  %147 = call i64 @Hostinfo_SystemTimerUS(), !dbg !7114
  %148 = sdiv i64 %147, 1000, !dbg !7115
  store i64 %148, i64* %16, align 8, !dbg !7116
  %149 = load i64, i64* %16, align 8, !dbg !7117
  %150 = load i64, i64* %17, align 8, !dbg !7119
  %151 = icmp sge i64 %149, %150, !dbg !7120
  br i1 %151, label %152, label %156, !dbg !7121

; <label>:152:                                    ; preds = %146
  %153 = load i32, i32* %14, align 4, !dbg !7122
  %154 = icmp sge i32 %153, 0, !dbg !7124
  br i1 %154, label %155, label %156, !dbg !7125

; <label>:155:                                    ; preds = %152
  store i32 2, i32* %8, align 4, !dbg !7126
  br label %170, !dbg !7126

; <label>:156:                                    ; preds = %152, %146
  %157 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %9, align 8, !dbg !7128
  %158 = load i8, i8* %10, align 1, !dbg !7129
  %159 = load i64, i64* %17, align 8, !dbg !7130
  %160 = load i64, i64* %16, align 8, !dbg !7131
  %161 = sub nsw i64 %159, %160, !dbg !7132
  %162 = trunc i64 %161 to i32, !dbg !7130
  %163 = call i32 @AsyncTCPSocketPoll(%struct.AsyncTCPSocket* %157, i8 signext %158, i32 %162, %struct.AsyncTCPSocket** %21), !dbg !7133
  store i32 %163, i32* %20, align 4, !dbg !7134
  %164 = load i32, i32* %20, align 4, !dbg !7135
  %165 = icmp ne i32 %164, 0, !dbg !7137
  br i1 %165, label %166, label %168, !dbg !7138

; <label>:166:                                    ; preds = %156
  %167 = load i32, i32* %20, align 4, !dbg !7139
  store i32 %167, i32* %8, align 4, !dbg !7141
  br label %170, !dbg !7141

; <label>:168:                                    ; preds = %156
  br label %169, !dbg !7142

; <label>:169:                                    ; preds = %168
  br i1 true, label %57, label %170, !dbg !7143, !llvm.loop !7000

; <label>:170:                                    ; preds = %30, %44, %99, %120, %143, %155, %166, %169
  %171 = load i32, i32* %8, align 4, !dbg !7145
  ret i32 %171, !dbg !7145
}

declare i64 @SSL_Read(%struct.SSLSockStruct*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal signext i8 @AsyncTCPSocketAddListenCb(%struct.AsyncTCPSocket*) #0 !dbg !7146 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  %3 = alloca i32, align 4
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !7147, metadata !480), !dbg !7148
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7149, metadata !480), !dbg !7150
  %4 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !7151
  %5 = call i32 (%struct.AsyncTCPSocket*, i8, i32, void (i8*)*, ...) @AsyncTCPSocketPollAdd(%struct.AsyncTCPSocket* %4, i8 signext 1, i32 5, void (i8*)* @AsyncTCPSocketAcceptCallback), !dbg !7152
  store i32 %5, i32* %3, align 4, !dbg !7153
  %6 = load i32, i32* %3, align 4, !dbg !7154
  %7 = icmp ne i32 %6, 0, !dbg !7156
  br i1 %7, label %8, label %17, !dbg !7157

; <label>:8:                                      ; preds = %1
  br label %9, !dbg !7158, !llvm.loop !7160

; <label>:9:                                      ; preds = %8
  %10 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !7161
  %11 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %10), !dbg !7164
  %12 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %11), !dbg !7165
  %13 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !7167
  %14 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %13), !dbg !7168
  %15 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %14), !dbg !7170
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %12, i32 %15), !dbg !7172
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.95, i32 0, i32 0)), !dbg !7174
  br label %16, !dbg !7176

; <label>:16:                                     ; preds = %9
  br label %17, !dbg !7177

; <label>:17:                                     ; preds = %16, %1
  %18 = load i32, i32* %3, align 4, !dbg !7178
  %19 = icmp eq i32 %18, 0, !dbg !7179
  %20 = zext i1 %19 to i32, !dbg !7179
  %21 = trunc i32 %20 to i8, !dbg !7178
  ret i8 %21, !dbg !7180
}

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketPollWork(%struct.AsyncTCPSocket**, i32, i8*, i8 signext, i32, %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket**) #0 !dbg !7181 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.AsyncTCPSocket**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca %struct.AsyncTCPSocket*, align 8
  %15 = alloca %struct.AsyncTCPSocket**, align 8
  %16 = alloca %struct.AsyncTCPSocket*, align 8
  %17 = alloca %struct.pollfd*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store %struct.AsyncTCPSocket** %0, %struct.AsyncTCPSocket*** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket*** %9, metadata !7184, metadata !480), !dbg !7185
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7186, metadata !480), !dbg !7187
  store i8* %2, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !7188, metadata !480), !dbg !7189
  store i8 %3, i8* %12, align 1
  call void @llvm.dbg.declare(metadata i8* %12, metadata !7190, metadata !480), !dbg !7191
  store i32 %4, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !7192, metadata !480), !dbg !7193
  store %struct.AsyncTCPSocket* %5, %struct.AsyncTCPSocket** %14, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %14, metadata !7194, metadata !480), !dbg !7195
  store %struct.AsyncTCPSocket** %6, %struct.AsyncTCPSocket*** %15, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket*** %15, metadata !7196, metadata !480), !dbg !7197
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %16, metadata !7198, metadata !480), !dbg !7199
  %25 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !7200
  %26 = icmp ne %struct.AsyncTCPSocket* %25, null, !dbg !7200
  br i1 %26, label %27, label %29, !dbg !7200

; <label>:27:                                     ; preds = %7
  %28 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !7201
  br label %33, !dbg !7203

; <label>:29:                                     ; preds = %7
  %30 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7204
  %31 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %30, i64 0, !dbg !7204
  %32 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %31, align 8, !dbg !7204
  br label %33, !dbg !7206

; <label>:33:                                     ; preds = %29, %27
  %34 = phi %struct.AsyncTCPSocket* [ %28, %27 ], [ %32, %29 ], !dbg !7207
  store %struct.AsyncTCPSocket* %34, %struct.AsyncTCPSocket** %16, align 8, !dbg !7209
  call void @llvm.dbg.declare(metadata %struct.pollfd** %17, metadata !7210, metadata !480), !dbg !7211
  %35 = load i8*, i8** %11, align 8, !dbg !7212
  %36 = bitcast i8* %35 to %struct.pollfd*, !dbg !7213
  store %struct.pollfd* %36, %struct.pollfd** %17, align 8, !dbg !7211
  call void @llvm.dbg.declare(metadata i32* %18, metadata !7214, metadata !480), !dbg !7215
  call void @llvm.dbg.declare(metadata i32* %19, metadata !7216, metadata !480), !dbg !7217
  store i32 0, i32* %18, align 4, !dbg !7218
  br label %37, !dbg !7220

; <label>:37:                                     ; preds = %63, %33
  %38 = load i32, i32* %18, align 4, !dbg !7221
  %39 = load i32, i32* %10, align 4, !dbg !7224
  %40 = icmp slt i32 %38, %39, !dbg !7225
  br i1 %40, label %41, label %66, !dbg !7226

; <label>:41:                                     ; preds = %37
  %42 = load i8, i8* %12, align 1, !dbg !7227
  %43 = sext i8 %42 to i32, !dbg !7227
  %44 = icmp ne i32 %43, 0, !dbg !7227
  br i1 %44, label %45, label %62, !dbg !7230

; <label>:45:                                     ; preds = %41
  %46 = load i32, i32* %18, align 4, !dbg !7231
  %47 = sext i32 %46 to i64, !dbg !7233
  %48 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7233
  %49 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %48, i64 %47, !dbg !7233
  %50 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %49, align 8, !dbg !7233
  %51 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %50, i32 0, i32 2, !dbg !7234
  %52 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %51, align 8, !dbg !7234
  %53 = call i32 @SSL_Pending(%struct.SSLSockStruct* %52), !dbg !7235
  %54 = icmp ne i32 %53, 0, !dbg !7235
  br i1 %54, label %55, label %62, !dbg !7236

; <label>:55:                                     ; preds = %45
  %56 = load i32, i32* %18, align 4, !dbg !7237
  %57 = sext i32 %56 to i64, !dbg !7239
  %58 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7239
  %59 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %58, i64 %57, !dbg !7239
  %60 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %59, align 8, !dbg !7239
  %61 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %15, align 8, !dbg !7240
  store %struct.AsyncTCPSocket* %60, %struct.AsyncTCPSocket** %61, align 8, !dbg !7241
  store i32 0, i32* %8, align 4, !dbg !7242
  br label %350, !dbg !7242

; <label>:62:                                     ; preds = %45, %41
  br label %63, !dbg !7243

; <label>:63:                                     ; preds = %62
  %64 = load i32, i32* %18, align 4, !dbg !7244
  %65 = add nsw i32 %64, 1, !dbg !7244
  store i32 %65, i32* %18, align 4, !dbg !7244
  br label %37, !dbg !7246, !llvm.loop !7247

; <label>:66:                                     ; preds = %37
  br label %67, !dbg !7249

; <label>:67:                                     ; preds = %66, %168
  store i32 0, i32* %18, align 4, !dbg !7250
  br label %68, !dbg !7253

; <label>:68:                                     ; preds = %95, %67
  %69 = load i32, i32* %18, align 4, !dbg !7254
  %70 = load i32, i32* %10, align 4, !dbg !7257
  %71 = icmp slt i32 %69, %70, !dbg !7258
  br i1 %71, label %72, label %98, !dbg !7259

; <label>:72:                                     ; preds = %68
  %73 = load i32, i32* %18, align 4, !dbg !7260
  %74 = sext i32 %73 to i64, !dbg !7262
  %75 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7262
  %76 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %75, i64 %74, !dbg !7262
  %77 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %76, align 8, !dbg !7262
  %78 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %77, i32 0, i32 1, !dbg !7263
  %79 = load i32, i32* %78, align 8, !dbg !7263
  %80 = load i32, i32* %18, align 4, !dbg !7264
  %81 = sext i32 %80 to i64, !dbg !7265
  %82 = load %struct.pollfd*, %struct.pollfd** %17, align 8, !dbg !7265
  %83 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %82, i64 %81, !dbg !7265
  %84 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %83, i32 0, i32 0, !dbg !7266
  store i32 %79, i32* %84, align 4, !dbg !7267
  %85 = load i8, i8* %12, align 1, !dbg !7268
  %86 = sext i8 %85 to i32, !dbg !7268
  %87 = icmp ne i32 %86, 0, !dbg !7268
  %88 = select i1 %87, i32 1, i32 4, !dbg !7268
  %89 = trunc i32 %88 to i16, !dbg !7268
  %90 = load i32, i32* %18, align 4, !dbg !7269
  %91 = sext i32 %90 to i64, !dbg !7270
  %92 = load %struct.pollfd*, %struct.pollfd** %17, align 8, !dbg !7270
  %93 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %92, i64 %91, !dbg !7270
  %94 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %93, i32 0, i32 1, !dbg !7271
  store i16 %89, i16* %94, align 4, !dbg !7272
  br label %95, !dbg !7273

; <label>:95:                                     ; preds = %72
  %96 = load i32, i32* %18, align 4, !dbg !7274
  %97 = add nsw i32 %96, 1, !dbg !7274
  store i32 %97, i32* %18, align 4, !dbg !7274
  br label %68, !dbg !7276, !llvm.loop !7277

; <label>:98:                                     ; preds = %68
  %99 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !7279
  %100 = icmp ne %struct.AsyncTCPSocket* %99, null, !dbg !7281
  br i1 %100, label %101, label %109, !dbg !7282

; <label>:101:                                    ; preds = %98
  %102 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !7283
  call void @AsyncTCPSocketUnlock(%struct.AsyncTCPSocket* %102), !dbg !7285
  %103 = load %struct.pollfd*, %struct.pollfd** %17, align 8, !dbg !7286
  %104 = load i32, i32* %10, align 4, !dbg !7287
  %105 = sext i32 %104 to i64, !dbg !7287
  %106 = load i32, i32* %13, align 4, !dbg !7288
  %107 = call i32 @poll(%struct.pollfd* %103, i64 %105, i32 %106), !dbg !7289
  store i32 %107, i32* %19, align 4, !dbg !7290
  %108 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !7291
  call void @AsyncTCPSocketLock(%struct.AsyncTCPSocket* %108), !dbg !7292
  br label %144, !dbg !7293

; <label>:109:                                    ; preds = %98
  %110 = load i32, i32* %10, align 4, !dbg !7294
  %111 = sub nsw i32 %110, 1, !dbg !7297
  store i32 %111, i32* %18, align 4, !dbg !7298
  br label %112, !dbg !7299

; <label>:112:                                    ; preds = %121, %109
  %113 = load i32, i32* %18, align 4, !dbg !7300
  %114 = icmp sge i32 %113, 0, !dbg !7303
  br i1 %114, label %115, label %124, !dbg !7304

; <label>:115:                                    ; preds = %112
  %116 = load i32, i32* %18, align 4, !dbg !7305
  %117 = sext i32 %116 to i64, !dbg !7307
  %118 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7307
  %119 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %118, i64 %117, !dbg !7307
  %120 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %119, align 8, !dbg !7307
  call void @AsyncTCPSocketUnlock(%struct.AsyncTCPSocket* %120), !dbg !7308
  br label %121, !dbg !7309

; <label>:121:                                    ; preds = %115
  %122 = load i32, i32* %18, align 4, !dbg !7310
  %123 = add nsw i32 %122, -1, !dbg !7310
  store i32 %123, i32* %18, align 4, !dbg !7310
  br label %112, !dbg !7312, !llvm.loop !7313

; <label>:124:                                    ; preds = %112
  %125 = load %struct.pollfd*, %struct.pollfd** %17, align 8, !dbg !7315
  %126 = load i32, i32* %10, align 4, !dbg !7316
  %127 = sext i32 %126 to i64, !dbg !7316
  %128 = load i32, i32* %13, align 4, !dbg !7317
  %129 = call i32 @poll(%struct.pollfd* %125, i64 %127, i32 %128), !dbg !7318
  store i32 %129, i32* %19, align 4, !dbg !7319
  store i32 0, i32* %18, align 4, !dbg !7320
  br label %130, !dbg !7322

; <label>:130:                                    ; preds = %140, %124
  %131 = load i32, i32* %18, align 4, !dbg !7323
  %132 = load i32, i32* %10, align 4, !dbg !7326
  %133 = icmp slt i32 %131, %132, !dbg !7327
  br i1 %133, label %134, label %143, !dbg !7328

; <label>:134:                                    ; preds = %130
  %135 = load i32, i32* %18, align 4, !dbg !7329
  %136 = sext i32 %135 to i64, !dbg !7331
  %137 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7331
  %138 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %137, i64 %136, !dbg !7331
  %139 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %138, align 8, !dbg !7331
  call void @AsyncTCPSocketLock(%struct.AsyncTCPSocket* %139), !dbg !7332
  br label %140, !dbg !7333

; <label>:140:                                    ; preds = %134
  %141 = load i32, i32* %18, align 4, !dbg !7334
  %142 = add nsw i32 %141, 1, !dbg !7334
  store i32 %142, i32* %18, align 4, !dbg !7334
  br label %130, !dbg !7336, !llvm.loop !7337

; <label>:143:                                    ; preds = %130
  br label %144

; <label>:144:                                    ; preds = %143, %101
  %145 = load i32, i32* %19, align 4, !dbg !7339
  switch i32 %145, label %205 [
    i32 0, label %146
    i32 -1, label %155
  ], !dbg !7340

; <label>:146:                                    ; preds = %144
  br label %147, !dbg !7341, !llvm.loop !7343

; <label>:147:                                    ; preds = %146
  %148 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !7344
  %149 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %148), !dbg !7347
  %150 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %149), !dbg !7348
  %151 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !7350
  %152 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %151), !dbg !7351
  %153 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %152), !dbg !7353
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %150, i32 %153), !dbg !7355
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.AsyncTCPSocketPollWork, i32 0, i32 0)), !dbg !7357
  br label %154, !dbg !7359

; <label>:154:                                    ; preds = %147
  store i32 2, i32* %8, align 4, !dbg !7360
  br label %350, !dbg !7360

; <label>:155:                                    ; preds = %144
  call void @llvm.dbg.declare(metadata i32* %20, metadata !7361, metadata !480), !dbg !7363
  %156 = call i32* @__errno_location() #1, !dbg !7364
  %157 = load i32, i32* %156, align 4, !dbg !7365
  store i32 %157, i32* %20, align 4, !dbg !7363
  %158 = load i32, i32* %20, align 4, !dbg !7366
  %159 = icmp eq i32 %158, 4, !dbg !7368
  br i1 %159, label %160, label %169, !dbg !7369

; <label>:160:                                    ; preds = %155
  br label %161, !dbg !7370, !llvm.loop !7372

; <label>:161:                                    ; preds = %160
  %162 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !7373
  %163 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %162), !dbg !7376
  %164 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %163), !dbg !7377
  %165 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !7379
  %166 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %165), !dbg !7380
  %167 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %166), !dbg !7382
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %164, i32 %167), !dbg !7384
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.AsyncTCPSocketPollWork, i32 0, i32 0)), !dbg !7386
  br label %168, !dbg !7388

; <label>:168:                                    ; preds = %161
  br label %67, !dbg !7389, !llvm.loop !7390

; <label>:169:                                    ; preds = %155
  %170 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !7391
  %171 = icmp ne %struct.AsyncTCPSocket* %170, null, !dbg !7393
  br i1 %171, label %172, label %176, !dbg !7394

; <label>:172:                                    ; preds = %169
  %173 = load i32, i32* %20, align 4, !dbg !7395
  %174 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %14, align 8, !dbg !7397
  %175 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %174, i32 0, i32 3, !dbg !7398
  store i32 %173, i32* %175, align 8, !dbg !7399
  br label %193, !dbg !7400

; <label>:176:                                    ; preds = %169
  store i32 0, i32* %18, align 4, !dbg !7401
  br label %177, !dbg !7404

; <label>:177:                                    ; preds = %189, %176
  %178 = load i32, i32* %18, align 4, !dbg !7405
  %179 = load i32, i32* %10, align 4, !dbg !7408
  %180 = icmp slt i32 %178, %179, !dbg !7409
  br i1 %180, label %181, label %192, !dbg !7410

; <label>:181:                                    ; preds = %177
  %182 = load i32, i32* %20, align 4, !dbg !7411
  %183 = load i32, i32* %18, align 4, !dbg !7413
  %184 = sext i32 %183 to i64, !dbg !7414
  %185 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7414
  %186 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %185, i64 %184, !dbg !7414
  %187 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %186, align 8, !dbg !7414
  %188 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %187, i32 0, i32 3, !dbg !7415
  store i32 %182, i32* %188, align 8, !dbg !7416
  br label %189, !dbg !7417

; <label>:189:                                    ; preds = %181
  %190 = load i32, i32* %18, align 4, !dbg !7418
  %191 = add nsw i32 %190, 1, !dbg !7418
  store i32 %191, i32* %18, align 4, !dbg !7418
  br label %177, !dbg !7420, !llvm.loop !7421

; <label>:192:                                    ; preds = %177
  br label %193

; <label>:193:                                    ; preds = %192, %172
  br label %194, !dbg !7423, !llvm.loop !7424

; <label>:194:                                    ; preds = %193
  %195 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !7425
  %196 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %195), !dbg !7428
  %197 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %196), !dbg !7429
  %198 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !7431
  %199 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %198), !dbg !7432
  %200 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %199), !dbg !7434
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %197, i32 %200), !dbg !7436
  %201 = load i32, i32* %20, align 4, !dbg !7438
  %202 = load i32, i32* %20, align 4, !dbg !7439
  %203 = call i8* @Err_Errno2String(i32 %202), !dbg !7440
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.AsyncTCPSocketPollWork, i32 0, i32 0), i32 %201, i8* %203), !dbg !7442
  br label %204, !dbg !7444

; <label>:204:                                    ; preds = %194
  store i32 1, i32* %8, align 4, !dbg !7445
  br label %350, !dbg !7445

; <label>:205:                                    ; preds = %144
  call void @llvm.dbg.declare(metadata i8* %21, metadata !7446, metadata !480), !dbg !7448
  store i8 0, i8* %21, align 1, !dbg !7448
  store i32 0, i32* %18, align 4, !dbg !7449
  br label %206, !dbg !7451

; <label>:206:                                    ; preds = %222, %205
  %207 = load i32, i32* %18, align 4, !dbg !7452
  %208 = load i32, i32* %10, align 4, !dbg !7455
  %209 = icmp slt i32 %207, %208, !dbg !7456
  br i1 %209, label %210, label %225, !dbg !7457

; <label>:210:                                    ; preds = %206
  %211 = load i32, i32* %18, align 4, !dbg !7458
  %212 = sext i32 %211 to i64, !dbg !7461
  %213 = load %struct.pollfd*, %struct.pollfd** %17, align 8, !dbg !7461
  %214 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %213, i64 %212, !dbg !7461
  %215 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %214, i32 0, i32 2, !dbg !7462
  %216 = load i16, i16* %215, align 2, !dbg !7462
  %217 = sext i16 %216 to i32, !dbg !7461
  %218 = and i32 %217, 40, !dbg !7463
  %219 = icmp ne i32 %218, 0, !dbg !7463
  br i1 %219, label %220, label %221, !dbg !7464

; <label>:220:                                    ; preds = %210
  store i8 1, i8* %21, align 1, !dbg !7465
  br label %221, !dbg !7467

; <label>:221:                                    ; preds = %220, %210
  br label %222, !dbg !7468

; <label>:222:                                    ; preds = %221
  %223 = load i32, i32* %18, align 4, !dbg !7469
  %224 = add nsw i32 %223, 1, !dbg !7469
  store i32 %224, i32* %18, align 4, !dbg !7469
  br label %206, !dbg !7471, !llvm.loop !7472

; <label>:225:                                    ; preds = %206
  %226 = load i8, i8* %21, align 1, !dbg !7474
  %227 = icmp ne i8 %226, 0, !dbg !7474
  br i1 %227, label %228, label %311, !dbg !7476

; <label>:228:                                    ; preds = %225
  call void @llvm.dbg.declare(metadata i32* %22, metadata !7477, metadata !480), !dbg !7479
  store i32 0, i32* %22, align 4, !dbg !7479
  call void @llvm.dbg.declare(metadata i32* %23, metadata !7480, metadata !480), !dbg !7481
  call void @llvm.dbg.declare(metadata i32* %24, metadata !7482, metadata !480), !dbg !7483
  store i32 4, i32* %24, align 4, !dbg !7483
  store i32 0, i32* %18, align 4, !dbg !7484
  br label %229, !dbg !7486

; <label>:229:                                    ; preds = %307, %228
  %230 = load i32, i32* %18, align 4, !dbg !7487
  %231 = load i32, i32* %10, align 4, !dbg !7490
  %232 = icmp slt i32 %230, %231, !dbg !7491
  br i1 %232, label %233, label %310, !dbg !7492

; <label>:233:                                    ; preds = %229
  %234 = load i32, i32* %18, align 4, !dbg !7493
  %235 = sext i32 %234 to i64, !dbg !7496
  %236 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7496
  %237 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %236, i64 %235, !dbg !7496
  %238 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %237, align 8, !dbg !7496
  %239 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %238, i32 0, i32 1, !dbg !7497
  %240 = load i32, i32* %239, align 8, !dbg !7497
  %241 = bitcast i32* %22 to i8*, !dbg !7498
  %242 = bitcast i32* %24 to i8*, !dbg !7499
  %243 = bitcast i8* %242 to i32*, !dbg !7499
  %244 = call i32 @getsockopt(i32 %240, i32 1, i32 4, i8* %241, i32* %243) #8, !dbg !7500
  %245 = icmp eq i32 %244, 0, !dbg !7501
  br i1 %245, label %246, label %277, !dbg !7502

; <label>:246:                                    ; preds = %233
  %247 = load i32, i32* %22, align 4, !dbg !7503
  %248 = icmp ne i32 %247, 0, !dbg !7503
  br i1 %248, label %249, label %276, !dbg !7506

; <label>:249:                                    ; preds = %246
  %250 = load i32, i32* %22, align 4, !dbg !7507
  %251 = load i32, i32* %18, align 4, !dbg !7509
  %252 = sext i32 %251 to i64, !dbg !7510
  %253 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7510
  %254 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %253, i64 %252, !dbg !7510
  %255 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %254, align 8, !dbg !7510
  %256 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %255, i32 0, i32 3, !dbg !7511
  store i32 %250, i32* %256, align 8, !dbg !7512
  br label %257, !dbg !7513, !llvm.loop !7514

; <label>:257:                                    ; preds = %249
  %258 = load i32, i32* %18, align 4, !dbg !7515
  %259 = sext i32 %258 to i64, !dbg !7518
  %260 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7518
  %261 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %260, i64 %259, !dbg !7518
  %262 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %261, align 8, !dbg !7518
  %263 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %262), !dbg !7519
  %264 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %263), !dbg !7520
  %265 = load i32, i32* %18, align 4, !dbg !7522
  %266 = sext i32 %265 to i64, !dbg !7523
  %267 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7523
  %268 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %267, i64 %266, !dbg !7523
  %269 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %268, align 8, !dbg !7523
  %270 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %269), !dbg !7524
  %271 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %270), !dbg !7526
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %264, i32 %271), !dbg !7528
  %272 = load i32, i32* %22, align 4, !dbg !7530
  %273 = load i32, i32* %22, align 4, !dbg !7531
  %274 = call i8* @Err_Errno2String(i32 %273), !dbg !7532
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.AsyncTCPSocketPollWork, i32 0, i32 0), i32 %272, i8* %274), !dbg !7534
  br label %275, !dbg !7536

; <label>:275:                                    ; preds = %257
  br label %276, !dbg !7537

; <label>:276:                                    ; preds = %275, %246
  br label %306, !dbg !7538

; <label>:277:                                    ; preds = %233
  %278 = call i32* @__errno_location() #1, !dbg !7539
  %279 = load i32, i32* %278, align 4, !dbg !7541
  store i32 %279, i32* %23, align 4, !dbg !7542
  %280 = load i32, i32* %23, align 4, !dbg !7543
  %281 = load i32, i32* %18, align 4, !dbg !7544
  %282 = sext i32 %281 to i64, !dbg !7545
  %283 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7545
  %284 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %283, i64 %282, !dbg !7545
  %285 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %284, align 8, !dbg !7545
  %286 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %285, i32 0, i32 3, !dbg !7546
  store i32 %280, i32* %286, align 8, !dbg !7547
  br label %287, !dbg !7548, !llvm.loop !7549

; <label>:287:                                    ; preds = %277
  %288 = load i32, i32* %18, align 4, !dbg !7550
  %289 = sext i32 %288 to i64, !dbg !7553
  %290 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7553
  %291 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %290, i64 %289, !dbg !7553
  %292 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %291, align 8, !dbg !7553
  %293 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %292), !dbg !7554
  %294 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %293), !dbg !7555
  %295 = load i32, i32* %18, align 4, !dbg !7557
  %296 = sext i32 %295 to i64, !dbg !7558
  %297 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7558
  %298 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %297, i64 %296, !dbg !7558
  %299 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %298, align 8, !dbg !7558
  %300 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %299), !dbg !7559
  %301 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %300), !dbg !7561
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %294, i32 %301), !dbg !7563
  %302 = load i32, i32* %23, align 4, !dbg !7565
  %303 = load i32, i32* %23, align 4, !dbg !7566
  %304 = call i8* @Err_Errno2String(i32 %303), !dbg !7567
  call void (i8*, ...) @Log(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.AsyncTCPSocketPollWork, i32 0, i32 0), i32 %302, i8* %304), !dbg !7569
  br label %305, !dbg !7571

; <label>:305:                                    ; preds = %287
  br label %306

; <label>:306:                                    ; preds = %305, %276
  br label %307, !dbg !7572

; <label>:307:                                    ; preds = %306
  %308 = load i32, i32* %18, align 4, !dbg !7573
  %309 = add nsw i32 %308, 1, !dbg !7573
  store i32 %309, i32* %18, align 4, !dbg !7573
  br label %229, !dbg !7575, !llvm.loop !7576

; <label>:310:                                    ; preds = %229
  store i32 1, i32* %8, align 4, !dbg !7578
  br label %350, !dbg !7578

; <label>:311:                                    ; preds = %225
  store i32 0, i32* %18, align 4, !dbg !7579
  br label %312, !dbg !7581

; <label>:312:                                    ; preds = %338, %311
  %313 = load i32, i32* %18, align 4, !dbg !7582
  %314 = load i32, i32* %10, align 4, !dbg !7585
  %315 = icmp slt i32 %313, %314, !dbg !7586
  br i1 %315, label %316, label %341, !dbg !7587

; <label>:316:                                    ; preds = %312
  %317 = load i32, i32* %18, align 4, !dbg !7588
  %318 = sext i32 %317 to i64, !dbg !7591
  %319 = load %struct.pollfd*, %struct.pollfd** %17, align 8, !dbg !7591
  %320 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %319, i64 %318, !dbg !7591
  %321 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %320, i32 0, i32 2, !dbg !7592
  %322 = load i16, i16* %321, align 2, !dbg !7592
  %323 = sext i16 %322 to i32, !dbg !7591
  %324 = load i8, i8* %12, align 1, !dbg !7593
  %325 = sext i8 %324 to i32, !dbg !7593
  %326 = icmp ne i32 %325, 0, !dbg !7593
  %327 = select i1 %326, i32 1, i32 4, !dbg !7593
  %328 = and i32 %323, %327, !dbg !7594
  %329 = icmp ne i32 %328, 0, !dbg !7594
  br i1 %329, label %330, label %337, !dbg !7595

; <label>:330:                                    ; preds = %316
  %331 = load i32, i32* %18, align 4, !dbg !7596
  %332 = sext i32 %331 to i64, !dbg !7598
  %333 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %9, align 8, !dbg !7598
  %334 = getelementptr inbounds %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %333, i64 %332, !dbg !7598
  %335 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %334, align 8, !dbg !7598
  %336 = load %struct.AsyncTCPSocket**, %struct.AsyncTCPSocket*** %15, align 8, !dbg !7599
  store %struct.AsyncTCPSocket* %335, %struct.AsyncTCPSocket** %336, align 8, !dbg !7600
  store i32 0, i32* %8, align 4, !dbg !7601
  br label %350, !dbg !7601

; <label>:337:                                    ; preds = %316
  br label %338, !dbg !7602

; <label>:338:                                    ; preds = %337
  %339 = load i32, i32* %18, align 4, !dbg !7603
  %340 = add nsw i32 %339, 1, !dbg !7603
  store i32 %340, i32* %18, align 4, !dbg !7603
  br label %312, !dbg !7605, !llvm.loop !7606

; <label>:341:                                    ; preds = %312
  br label %342, !dbg !7608, !llvm.loop !7609

; <label>:342:                                    ; preds = %341
  %343 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !7610
  %344 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %343), !dbg !7613
  %345 = call i32 @AsyncSocket_GetID(%struct.AsyncSocket* %344), !dbg !7614
  %346 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %16, align 8, !dbg !7616
  %347 = call %struct.AsyncSocket* @BaseSocket(%struct.AsyncTCPSocket* %346), !dbg !7617
  %348 = call i32 @AsyncSocket_GetFd(%struct.AsyncSocket* %347), !dbg !7619
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 %345, i32 %348), !dbg !7621
  call void (i8*, ...) @Warning(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.AsyncTCPSocketPollWork, i32 0, i32 0)), !dbg !7623
  br label %349, !dbg !7625

; <label>:349:                                    ; preds = %342
  store i32 1, i32* %8, align 4, !dbg !7626
  br label %350, !dbg !7626

; <label>:350:                                    ; preds = %349, %330, %310, %204, %154, %55
  %351 = load i32, i32* %8, align 4, !dbg !7627
  ret i32 %351, !dbg !7627
}

declare i32 @SSL_Pending(%struct.SSLSockStruct*) #4

declare i32 @poll(%struct.pollfd*, i64, i32) #4

declare %struct.SSLSockStruct* @SSL_New(i32, i8 signext) #4

declare i32 @SSL_GetFd(%struct.SSLSockStruct*) #4

; Function Attrs: nounwind uwtable
define internal i32 @AsyncTCPSocketMakeNonBlocking(i32) #0 !dbg !7628 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7631, metadata !480), !dbg !7632
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7633, metadata !480), !dbg !7634
  %5 = load i32, i32* %3, align 4, !dbg !7635
  %6 = call i32 (i32, i32, ...) @fcntl(i32 %5, i32 3), !dbg !7637
  store i32 %6, i32* %4, align 4, !dbg !7638
  %7 = icmp slt i32 %6, 0, !dbg !7639
  br i1 %7, label %8, label %9, !dbg !7640

; <label>:8:                                      ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !7641
  br label %21, !dbg !7641

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* %4, align 4, !dbg !7643
  %11 = and i32 %10, 2048, !dbg !7645
  %12 = icmp ne i32 %11, 0, !dbg !7645
  br i1 %12, label %20, label %13, !dbg !7646

; <label>:13:                                     ; preds = %9
  %14 = load i32, i32* %3, align 4, !dbg !7647
  %15 = load i32, i32* %4, align 4, !dbg !7649
  %16 = or i32 %15, 2048, !dbg !7650
  %17 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 4, i32 %16), !dbg !7651
  %18 = icmp slt i32 %17, 0, !dbg !7652
  br i1 %18, label %19, label %20, !dbg !7653

; <label>:19:                                     ; preds = %13
  store i32 1, i32* %2, align 4, !dbg !7654
  br label %21, !dbg !7654

; <label>:20:                                     ; preds = %13, %9
  store i32 0, i32* %2, align 4, !dbg !7656
  br label %21, !dbg !7656

; <label>:21:                                     ; preds = %20, %19, %8
  %22 = load i32, i32* %2, align 4, !dbg !7657
  ret i32 %22, !dbg !7657
}

declare void @SSL_SetCloseOnShutdownFlag(%struct.SSLSockStruct*) #4

declare i32 @fcntl(i32, i32, ...) #4

declare signext i8 @AsyncSocketIsLocked(%struct.AsyncSocket*) #4

declare void @AsyncSocketLock(%struct.AsyncSocket*) #4

declare void @AsyncSocketAddRef(%struct.AsyncSocket*) #4

declare void @AsyncSocketUnlock(%struct.AsyncSocket*) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @mssb32_0(i32) #3 !dbg !7658 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7661, metadata !480), !dbg !7662
  %5 = load i32, i32* %3, align 4, !dbg !7663
  %6 = icmp eq i32 %5, 0, !dbg !7665
  %7 = zext i1 %6 to i32, !dbg !7665
  %8 = sext i32 %7 to i64, !dbg !7666
  %9 = icmp ne i64 %8, 0, !dbg !7667
  br i1 %9, label %10, label %11, !dbg !7668

; <label>:10:                                     ; preds = %1
  store i32 -1, i32* %2, align 4, !dbg !7669
  br label %15, !dbg !7669

; <label>:11:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7671, metadata !480), !dbg !7673
  %12 = load i32, i32* %3, align 4, !dbg !7674
  %13 = call i32 asm "bsrl $1, $0\0A", "=r,rm,~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %12) #10, !dbg !7677, !srcloc !7678
  store i32 %13, i32* %4, align 4, !dbg !7677
  %14 = load i32, i32* %4, align 4, !dbg !7679
  store i32 %14, i32* %2, align 4, !dbg !7680
  br label %15, !dbg !7680

; <label>:15:                                     ; preds = %11, %10
  %16 = load i32, i32* %2, align 4, !dbg !7681
  ret i32 %16, !dbg !7681
}

declare i64 @SSL_RecvDataAndFd(%struct.SSLSockStruct*, i8*, i64, i32*) #4

declare signext i8 @AsyncSocketCheckAndDispatchRecv(%struct.AsyncSocket*, i32*) #4

; Function Attrs: nounwind uwtable
define internal signext i8 @AsyncTCPSocketHasDataPending(%struct.AsyncTCPSocket*) #0 !dbg !7682 {
  %2 = alloca %struct.AsyncTCPSocket*, align 8
  store %struct.AsyncTCPSocket* %0, %struct.AsyncTCPSocket** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.AsyncTCPSocket** %2, metadata !7683, metadata !480), !dbg !7684
  %3 = load %struct.AsyncTCPSocket*, %struct.AsyncTCPSocket** %2, align 8, !dbg !7685
  %4 = getelementptr inbounds %struct.AsyncTCPSocket, %struct.AsyncTCPSocket* %3, i32 0, i32 2, !dbg !7686
  %5 = load %struct.SSLSockStruct*, %struct.SSLSockStruct** %4, align 8, !dbg !7686
  %6 = call i32 @SSL_Pending(%struct.SSLSockStruct* %5), !dbg !7687
  %7 = trunc i32 %6 to i8, !dbg !7687
  ret i8 %7, !dbg !7688
}

declare void @AsyncSocketRelease(%struct.AsyncSocket*) #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!468, !469}
!llvm.ident = !{!470}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.1-4ubuntu3~16.04.2 (tags/RELEASE_391/rc2)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !79, globals: !458)
!1 = !DIFile(filename: "asyncsocket.o.i", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!2 = !{!3, !11, !15, !18, !30, !59, !67, !76}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AsyncSocketState", file: !4, line: 184, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/home/ubuntu_1604/lichi/package_include_openssl_lib/open-vm-tools/open-vm-tools/lib/include/asyncsocket.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!5 = !{!6, !7, !8, !9, !10}
!6 = !DIEnumerator(name: "AsyncSocketListening", value: 0)
!7 = !DIEnumerator(name: "AsyncSocketConnecting", value: 1)
!8 = !DIEnumerator(name: "AsyncSocketConnected", value: 2)
!9 = !DIEnumerator(name: "AsyncSocketCBCancelled", value: 3)
!10 = !DIEnumerator(name: "AsyncSocketClosed", value: 4)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 303, size: 32, align: 32, elements: !12)
!12 = !{!13, !14}
!13 = !DIEnumerator(name: "ASYNC_SOCKET_OPTS_LAYER_BASE", value: 1001)
!14 = !DIEnumerator(name: "ASYNC_SOCKET_OPTS_LAYER_BLAST_PROXY", value: 1002)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 140, size: 32, align: 32, elements: !16)
!16 = !{!17}
!17 = !DIEnumerator(name: "ASOCKCONN_ADDR_IN_NETWORK_BYTE_ORDER", value: 4)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !19, line: 24, size: 32, align: 32, elements: !20)
!19 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!20 = !{!21, !22, !23, !24, !25, !26, !27, !28, !29}
!21 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!22 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!23 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!24 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!25 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!26 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!27 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!28 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!29 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !31, line: 40, size: 32, align: 32, elements: !32)
!31 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!32 = !{!33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58}
!33 = !DIEnumerator(name: "IPPROTO_IP", value: 0)
!34 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1)
!35 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2)
!36 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4)
!37 = !DIEnumerator(name: "IPPROTO_TCP", value: 6)
!38 = !DIEnumerator(name: "IPPROTO_EGP", value: 8)
!39 = !DIEnumerator(name: "IPPROTO_PUP", value: 12)
!40 = !DIEnumerator(name: "IPPROTO_UDP", value: 17)
!41 = !DIEnumerator(name: "IPPROTO_IDP", value: 22)
!42 = !DIEnumerator(name: "IPPROTO_TP", value: 29)
!43 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33)
!44 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41)
!45 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46)
!46 = !DIEnumerator(name: "IPPROTO_GRE", value: 47)
!47 = !DIEnumerator(name: "IPPROTO_ESP", value: 50)
!48 = !DIEnumerator(name: "IPPROTO_AH", value: 51)
!49 = !DIEnumerator(name: "IPPROTO_MTP", value: 92)
!50 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94)
!51 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98)
!52 = !DIEnumerator(name: "IPPROTO_PIM", value: 103)
!53 = !DIEnumerator(name: "IPPROTO_COMP", value: 108)
!54 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132)
!55 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136)
!56 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137)
!57 = !DIEnumerator(name: "IPPROTO_RAW", value: 255)
!58 = !DIEnumerator(name: "IPPROTO_MAX", value: 256)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "VMwareStatus", file: !60, line: 85, size: 32, align: 32, elements: !61)
!60 = !DIFile(filename: "/home/ubuntu_1604/lichi/package_include_openssl_lib/open-vm-tools/open-vm-tools/lib/include/vmware.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!61 = !{!62, !63, !64, !65, !66}
!62 = !DIEnumerator(name: "VMWARE_STATUS_SUCCESS", value: 0)
!63 = !DIEnumerator(name: "VMWARE_STATUS_ERROR", value: 1)
!64 = !DIEnumerator(name: "VMWARE_STATUS_NOMEM", value: 2)
!65 = !DIEnumerator(name: "VMWARE_STATUS_INSUFFICIENT_RESOURCES", value: 3)
!66 = !DIEnumerator(name: "VMWARE_STATUS_INVALID_ARGS", value: 4)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !68, line: 83, size: 32, align: 32, elements: !69)
!68 = !DIFile(filename: "/home/ubuntu_1604/lichi/package_include_openssl_lib/open-vm-tools/open-vm-tools/lib/include/poll.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!69 = !{!70, !71, !72, !73, !74, !75}
!70 = !DIEnumerator(name: "POLL_VIRTUALREALTIME", value: -1)
!71 = !DIEnumerator(name: "POLL_VTIME", value: 0)
!72 = !DIEnumerator(name: "POLL_REALTIME", value: 1)
!73 = !DIEnumerator(name: "POLL_DEVICE", value: 2)
!74 = !DIEnumerator(name: "POLL_MAIN_LOOP", value: 3)
!75 = !DIEnumerator(name: "POLL_NUM_QUEUES", value: 4)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 326, size: 32, align: 32, elements: !77)
!77 = !{!78}
!78 = !DIEnumerator(name: "ASYNC_SOCKET_OPT_SEND_LOW_LATENCY_MODE", value: 0)
!79 = !{!80, !81, !86, !101, !103, !119, !143, !145, !153, !163, !165, !166, !169, !170, !172, !450, !173}
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!81 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32", file: !82, line: 173, baseType: !83)
!82 = !DIFile(filename: "/home/ubuntu_1604/lichi/package_include_openssl_lib/open-vm-tools/open-vm-tools/lib/include/vm_basic_types.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !84, line: 51, baseType: !85)
!84 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!85 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64, align: 64)
!87 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !88, line: 166, size: 1024, align: 64, elements: !89)
!88 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!89 = !{!90, !94, !99}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !87, file: !88, line: 168, baseType: !91, size: 16, align: 16)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !92, line: 28, baseType: !93)
!92 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!93 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !87, file: !88, line: 169, baseType: !95, size: 944, align: 8, offset: 16)
!95 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 944, align: 8, elements: !97)
!96 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!97 = !{!98}
!98 = !DISubrange(count: 118)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !87, file: !88, line: 170, baseType: !100, size: 64, align: 64, offset: 960)
!100 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16", file: !82, line: 175, baseType: !102)
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !84, line: 49, baseType: !93)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64, align: 64)
!104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !31, line: 239, size: 128, align: 32, elements: !105)
!105 = !{!106, !107, !109, !114}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !104, file: !31, line: 241, baseType: !91, size: 16, align: 16)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !104, file: !31, line: 242, baseType: !108, size: 16, align: 16, offset: 16)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !31, line: 119, baseType: !102)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !104, file: !31, line: 243, baseType: !110, size: 32, align: 32, offset: 32)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !31, line: 31, size: 32, align: 32, elements: !111)
!111 = !{!112}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !110, file: !31, line: 33, baseType: !113, size: 32, align: 32)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !31, line: 30, baseType: !83)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !104, file: !31, line: 246, baseType: !115, size: 64, align: 8, offset: 64)
!115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 64, align: 8, elements: !117)
!116 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!117 = !{!118}
!118 = !DISubrange(count: 8)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !31, line: 254, size: 224, align: 32, elements: !121)
!121 = !{!122, !123, !124, !125, !142}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !120, file: !31, line: 256, baseType: !91, size: 16, align: 16)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !120, file: !31, line: 257, baseType: !108, size: 16, align: 16, offset: 16)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !120, file: !31, line: 258, baseType: !83, size: 32, align: 32, offset: 32)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !120, file: !31, line: 259, baseType: !126, size: 128, align: 32, offset: 64)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !31, line: 211, size: 128, align: 32, elements: !127)
!127 = !{!128}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !126, file: !31, line: 220, baseType: !129, size: 128, align: 32)
!129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !126, file: !31, line: 213, size: 128, align: 32, elements: !130)
!130 = !{!131, !136, !138}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !129, file: !31, line: 215, baseType: !132, size: 128, align: 8)
!132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 128, align: 8, elements: !134)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !84, line: 48, baseType: !116)
!134 = !{!135}
!135 = !DISubrange(count: 16)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !129, file: !31, line: 217, baseType: !137, size: 128, align: 16)
!137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 128, align: 16, elements: !117)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !129, file: !31, line: 218, baseType: !139, size: 128, align: 32)
!139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !83, size: 128, align: 32, elements: !140)
!140 = !{!141}
!141 = !DISubrange(count: 4)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !120, file: !31, line: 260, baseType: !83, size: 32, align: 32, offset: 192)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64, align: 64)
!144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64, align: 64)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !88, line: 153, size: 128, align: 16, elements: !147)
!147 = !{!148, !149}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !146, file: !88, line: 155, baseType: !91, size: 16, align: 16)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !146, file: !88, line: 156, baseType: !150, size: 112, align: 8, offset: 16)
!150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 112, align: 8, elements: !151)
!151 = !{!152}
!152 = !DISubrange(count: 14)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64, align: 64)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_vm", file: !155, line: 420, size: 128, align: 32, elements: !156)
!155 = !DIFile(filename: "/home/ubuntu_1604/lichi/package_include_openssl_lib/open-vm-tools/open-vm-tools/lib/include/vmci_sockets.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!156 = !{!157, !158, !159, !160, !161}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "svm_family", scope: !154, file: !155, line: 426, baseType: !91, size: 16, align: 16)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "svm_reserved1", scope: !154, file: !155, line: 429, baseType: !93, size: 16, align: 16, offset: 16)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "svm_port", scope: !154, file: !155, line: 433, baseType: !85, size: 32, align: 32, offset: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "svm_cid", scope: !154, file: !155, line: 436, baseType: !85, size: 32, align: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "svm_zero", scope: !154, file: !155, line: 439, baseType: !162, size: 32, align: 8, offset: 96)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 32, align: 8, elements: !140)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64, align: 64)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !126)
!165 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64, align: 64)
!167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bool", file: !82, line: 230, baseType: !96)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64, align: 64)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64, align: 64)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8", file: !82, line: 177, baseType: !133)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncTCPSocket", file: !175, line: 233, baseType: !176)
!175 = !DIFile(filename: "asyncsocket.c", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AsyncTCPSocket", file: !175, line: 170, size: 4544, align: 64, elements: !177)
!177 = !{!178, !389, !390, !395, !396, !397, !398, !399, !400, !402, !403, !404, !405, !406, !411, !412, !413, !414, !415, !416, !417, !418, !429, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !444, !445}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !176, file: !175, line: 174, baseType: !179, size: 896, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocket", file: !4, line: 155, baseType: !180)
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AsyncSocket", file: !181, line: 47, size: 896, align: 64, elements: !182)
!181 = !DIFile(filename: "asyncSocketBase.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!182 = !{!183, !184, !185, !204, !206, !207, !208, !214, !215, !216, !217, !218, !223, !224, !225}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !180, file: !181, line: 48, baseType: !81, size: 32, align: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "refCount", scope: !180, file: !181, line: 49, baseType: !81, size: 32, align: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "pollParams", scope: !180, file: !181, line: 50, baseType: !186, size: 256, align: 64, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketPollParams", file: !4, line: 174, baseType: !187)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AsyncSocketPollParams", file: !4, line: 169, size: 256, align: 64, elements: !188)
!188 = !{!189, !190, !195, !201}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !187, file: !4, line: 170, baseType: !165, size: 32, align: 32)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !187, file: !4, line: 171, baseType: !191, size: 64, align: 64, offset: 64)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXUserRecLock", file: !193, line: 39, baseType: !194)
!193 = !DIFile(filename: "/home/ubuntu_1604/lichi/package_include_openssl_lib/open-vm-tools/open-vm-tools/lib/include/userlock.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!194 = !DICompositeType(tag: DW_TAG_structure_type, name: "MXUserRecLock", file: !193, line: 39, flags: DIFlagFwdDecl)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "pollClass", scope: !187, file: !4, line: 172, baseType: !196, size: 64, align: 64, offset: 128)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "PollClassSet", file: !68, line: 128, baseType: !197)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PollClassSet", file: !68, line: 126, size: 64, align: 64, elements: !198)
!198 = !{!199}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !197, file: !68, line: 127, baseType: !200, size: 64, align: 64)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !84, line: 122, baseType: !100)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "iPoll", scope: !187, file: !4, line: 173, baseType: !202, size: 64, align: 64, offset: 192)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64, align: 64)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "IVmdbPoll", file: !4, line: 168, flags: DIFlagFwdDecl)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !180, file: !181, line: 51, baseType: !205, size: 32, align: 32, offset: 320)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketState", file: !4, line: 190, baseType: !3)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "inited", scope: !180, file: !181, line: 53, baseType: !168, size: 8, align: 8, offset: 352)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "errorSeen", scope: !180, file: !181, line: 54, baseType: !168, size: 8, align: 8, offset: 360)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "errorFn", scope: !180, file: !181, line: 55, baseType: !209, size: 64, align: 64, offset: 384)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketErrorFn", file: !4, line: 401, baseType: !210)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64, align: 64)
!211 = !DISubroutineType(types: !212)
!212 = !{null, !165, !213, !80}
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "errorClientData", scope: !180, file: !181, line: 56, baseType: !80, size: 64, align: 64, offset: 448)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "recvBuf", scope: !180, file: !181, line: 58, baseType: !80, size: 64, align: 64, offset: 512)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "recvPos", scope: !180, file: !181, line: 59, baseType: !165, size: 32, align: 32, offset: 576)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "recvLen", scope: !180, file: !181, line: 60, baseType: !165, size: 32, align: 32, offset: 608)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "recvFn", scope: !180, file: !181, line: 61, baseType: !219, size: 64, align: 64, offset: 640)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketRecvFn", file: !4, line: 389, baseType: !220)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64, align: 64)
!221 = !DISubroutineType(types: !222)
!222 = !{null, !80, !165, !213, !80}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "recvClientData", scope: !180, file: !181, line: 62, baseType: !80, size: 64, align: 64, offset: 704)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "recvFireOnPartial", scope: !180, file: !181, line: 63, baseType: !168, size: 8, align: 8, offset: 768)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "vt", scope: !180, file: !181, line: 65, baseType: !226, size: 64, align: 64, offset: 832)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketVTable", file: !229, line: 138, baseType: !230)
!229 = !DIFile(filename: "asyncSocketVTable.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AsyncSocketVTable", file: !229, line: 52, size: 2432, align: 64, elements: !231)
!231 = !{!232, !236, !245, !250, !254, !255, !262, !268, !272, !280, !286, !294, !298, !303, !307, !311, !315, !316, !321, !322, !337, !338, !344, !345, !350, !351, !352, !356, !357, !361, !365, !369, !373, !374, !375, !379, !380, !385}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "getState", scope: !230, file: !229, line: 53, baseType: !233, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64, align: 64)
!234 = !DISubroutineType(types: !235)
!235 = !{!205, !213}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "setOption", scope: !230, file: !229, line: 63, baseType: !237, size: 64, align: 64, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64, align: 64)
!238 = !DISubroutineType(types: !239)
!239 = !{!165, !213, !240, !241, !143, !242}
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketOpts_Layer", file: !4, line: 319, baseType: !11)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketOpts_ID", file: !4, line: 284, baseType: !165)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !88, line: 33, baseType: !243)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !244, line: 189, baseType: !85)
!244 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!245 = !DIDerivedType(tag: DW_TAG_member, name: "getOption", scope: !230, file: !229, line: 75, baseType: !246, size: 64, align: 64, offset: 128)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64, align: 64)
!247 = !DISubroutineType(types: !248)
!248 = !{!165, !213, !240, !241, !80, !249}
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64, align: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "getGenericErrno", scope: !230, file: !229, line: 81, baseType: !251, size: 64, align: 64, offset: 192)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DISubroutineType(types: !253)
!253 = !{!165, !213}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "getFd", scope: !230, file: !229, line: 82, baseType: !251, size: 64, align: 64, offset: 256)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "getRemoteIPStr", scope: !230, file: !229, line: 83, baseType: !256, size: 64, align: 64, offset: 320)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64, align: 64)
!257 = !DISubroutineType(types: !258)
!258 = !{!165, !213, !259}
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64, align: 64)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64, align: 64)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !96)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "getINETIPStr", scope: !230, file: !229, line: 84, baseType: !263, size: 64, align: 64, offset: 384)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64, align: 64)
!264 = !DISubroutineType(types: !265)
!265 = !{!165, !213, !165, !266}
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64, align: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64, align: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "getPort", scope: !230, file: !229, line: 85, baseType: !269, size: 64, align: 64, offset: 448)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64, align: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{!85, !213}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "setCloseOptions", scope: !230, file: !229, line: 86, baseType: !273, size: 64, align: 64, offset: 512)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DISubroutineType(types: !275)
!275 = !{!165, !213, !165, !276}
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketCloseFn", file: !4, line: 410, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{null, !213, !80}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "connectSSL", scope: !230, file: !229, line: 88, baseType: !281, size: 64, align: 64, offset: 576)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64, align: 64)
!282 = !DISubroutineType(types: !283)
!283 = !{!168, !213, !284, !80}
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64, align: 64)
!285 = !DICompositeType(tag: DW_TAG_structure_type, name: "_SSLVerifyParam", file: !4, line: 150, flags: DIFlagFwdDecl)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "startSslConnect", scope: !230, file: !229, line: 90, baseType: !287, size: 64, align: 64, offset: 640)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64, align: 64)
!288 = !DISubroutineType(types: !289)
!289 = !{!165, !213, !284, !80, !290, !80}
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketSslConnectFn", file: !4, line: 408, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64, align: 64)
!292 = !DISubroutineType(types: !293)
!293 = !{null, !168, !213, !80}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "acceptSSL", scope: !230, file: !229, line: 94, baseType: !295, size: 64, align: 64, offset: 704)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64, align: 64)
!296 = !DISubroutineType(types: !297)
!297 = !{!168, !213, !80}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "startSslAccept", scope: !230, file: !229, line: 95, baseType: !299, size: 64, align: 64, offset: 768)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64, align: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!165, !213, !80, !302, !80}
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketSslAcceptFn", file: !4, line: 406, baseType: !291)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !230, file: !229, line: 98, baseType: !304, size: 64, align: 64, offset: 832)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64, align: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{!165, !213, !165}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !230, file: !229, line: 99, baseType: !308, size: 64, align: 64, offset: 896)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64, align: 64)
!309 = !DISubroutineType(types: !310)
!310 = !{!165, !213, !80, !165, !168, !80, !80}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "recvPassedFd", scope: !230, file: !229, line: 101, baseType: !312, size: 64, align: 64, offset: 960)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64)
!313 = !DISubroutineType(types: !314)
!314 = !{!165, !213, !80, !165, !80, !80}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "getReceivedFd", scope: !230, file: !229, line: 103, baseType: !251, size: 64, align: 64, offset: 1024)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "send", scope: !230, file: !229, line: 104, baseType: !317, size: 64, align: 64, offset: 1088)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64, align: 64)
!318 = !DISubroutineType(types: !319)
!319 = !{!165, !213, !80, !165, !320, !80}
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketSendFn", file: !4, line: 395, baseType: !220)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "isSendBufferFull", scope: !230, file: !229, line: 106, baseType: !251, size: 64, align: 64, offset: 1152)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "getNetworkStats", scope: !230, file: !229, line: 107, baseType: !323, size: 64, align: 64, offset: 1216)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64, align: 64)
!324 = !DISubroutineType(types: !325)
!325 = !{!165, !213, !326}
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64, align: 64)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketNetworkStats", file: !4, line: 200, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AsyncSocketNetworkStats", file: !4, line: 193, size: 256, align: 64, elements: !329)
!329 = !{!330, !331, !332, !333, !334, !335}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "cwndBytes", scope: !328, file: !4, line: 194, baseType: !81, size: 32, align: 32)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "rttSmoothedAvgMillis", scope: !328, file: !4, line: 195, baseType: !81, size: 32, align: 32, offset: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "rttSmoothedVarMillis", scope: !328, file: !4, line: 196, baseType: !81, size: 32, align: 32, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "queuedBytes", scope: !328, file: !4, line: 197, baseType: !81, size: 32, align: 32, offset: 96)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "inflightBytes", scope: !328, file: !4, line: 198, baseType: !81, size: 32, align: 32, offset: 128)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "packetLossPercent", scope: !328, file: !4, line: 199, baseType: !336, size: 64, align: 64, offset: 192)
!336 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !230, file: !229, line: 109, baseType: !251, size: 64, align: 64, offset: 1280)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "cancelRecv", scope: !230, file: !229, line: 110, baseType: !339, size: 64, align: 64, offset: 1344)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64, align: 64)
!340 = !DISubroutineType(types: !341)
!341 = !{!165, !213, !342, !343, !343, !168}
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64, align: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64, align: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "cancelCbForClose", scope: !230, file: !229, line: 112, baseType: !251, size: 64, align: 64, offset: 1408)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "getLocalVMCIAddress", scope: !230, file: !229, line: 113, baseType: !346, size: 64, align: 64, offset: 1472)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64, align: 64)
!347 = !DISubroutineType(types: !348)
!348 = !{!165, !213, !349, !349}
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64, align: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "getRemoteVMCIAddress", scope: !230, file: !229, line: 114, baseType: !346, size: 64, align: 64, offset: 1536)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "getWebSocketError", scope: !230, file: !229, line: 115, baseType: !251, size: 64, align: 64, offset: 1600)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "getWebSocketURI", scope: !230, file: !229, line: 116, baseType: !353, size: 64, align: 64, offset: 1664)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64, align: 64)
!354 = !DISubroutineType(types: !355)
!355 = !{!267, !213}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "getWebSocketCookie", scope: !230, file: !229, line: 117, baseType: !353, size: 64, align: 64, offset: 1728)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "getWebSocketCloseStatus", scope: !230, file: !229, line: 118, baseType: !358, size: 64, align: 64, offset: 1792)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64, align: 64)
!359 = !DISubroutineType(types: !360)
!360 = !{!101, !213}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "getWebSocketProtocol", scope: !230, file: !229, line: 119, baseType: !362, size: 64, align: 64, offset: 1856)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64, align: 64)
!363 = !DISubroutineType(types: !364)
!364 = !{!260, !213}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "setWebSocketCookie", scope: !230, file: !229, line: 120, baseType: !366, size: 64, align: 64, offset: 1920)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64, align: 64)
!367 = !DISubroutineType(types: !368)
!368 = !{!165, !213, !80, !260, !260}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "recvBlocking", scope: !230, file: !229, line: 122, baseType: !370, size: 64, align: 64, offset: 1984)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64, align: 64)
!371 = !DISubroutineType(types: !372)
!372 = !{!165, !213, !80, !165, !342, !165}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "recvPartialBlocking", scope: !230, file: !229, line: 124, baseType: !370, size: 64, align: 64, offset: 2048)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "sendBlocking", scope: !230, file: !229, line: 126, baseType: !370, size: 64, align: 64, offset: 2112)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "doOneMsg", scope: !230, file: !229, line: 128, baseType: !376, size: 64, align: 64, offset: 2176)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64, align: 64)
!377 = !DISubroutineType(types: !378)
!378 = !{!165, !213, !168, !165}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "waitForConnection", scope: !230, file: !229, line: 129, baseType: !304, size: 64, align: 64, offset: 2240)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "waitForReadMultiple", scope: !230, file: !229, line: 130, baseType: !381, size: 64, align: 64, offset: 2304)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64, align: 64)
!382 = !DISubroutineType(types: !383)
!383 = !{!165, !384, !165, !165, !342}
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64, align: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !230, file: !229, line: 137, baseType: !386, size: 64, align: 64, offset: 2368)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64, align: 64)
!387 = !DISubroutineType(types: !388)
!388 = !{null, !213}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !176, file: !175, line: 179, baseType: !165, size: 32, align: 32, offset: 896)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "sslSock", scope: !176, file: !175, line: 180, baseType: !391, size: 64, align: 64, offset: 960)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSLSock", file: !392, line: 33, baseType: !393)
!392 = !DIFile(filename: "/home/ubuntu_1604/lichi/package_include_openssl_lib/open-vm-tools/open-vm-tools/lib/include/sslDirect.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64, align: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "SSLSockStruct", file: !4, line: 149, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "genericErrno", scope: !176, file: !175, line: 182, baseType: !165, size: 32, align: 32, offset: 1024)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "localAddr", scope: !176, file: !175, line: 184, baseType: !87, size: 1024, align: 64, offset: 1088)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "localAddrLen", scope: !176, file: !175, line: 185, baseType: !242, size: 32, align: 32, offset: 2112)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "remoteAddr", scope: !176, file: !175, line: 186, baseType: !87, size: 1024, align: 64, offset: 2176)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "remoteAddrLen", scope: !176, file: !175, line: 187, baseType: !242, size: 32, align: 32, offset: 3200)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "connectFn", scope: !176, file: !175, line: 189, baseType: !401, size: 64, align: 64, offset: 3264)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketConnectFn", file: !4, line: 404, baseType: !277)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "sslAcceptFn", scope: !176, file: !175, line: 190, baseType: !302, size: 64, align: 64, offset: 3328)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "sslConnectFn", scope: !176, file: !175, line: 191, baseType: !290, size: 64, align: 64, offset: 3392)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "sslPollFlags", scope: !176, file: !175, line: 192, baseType: !165, size: 32, align: 32, offset: 3456)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !176, file: !175, line: 195, baseType: !80, size: 64, align: 64, offset: 3520)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "internalConnectFn", scope: !176, file: !175, line: 197, baseType: !407, size: 64, align: 64, offset: 3584)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "PollerFunction", file: !68, line: 221, baseType: !408)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64, align: 64)
!409 = !DISubroutineType(types: !410)
!410 = !{null, !80}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "internalSendFn", scope: !176, file: !175, line: 198, baseType: !407, size: 64, align: 64, offset: 3648)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "internalRecvFn", scope: !176, file: !175, line: 199, baseType: !407, size: 64, align: 64, offset: 3712)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "flushEnabledMaxWaitMsec", scope: !176, file: !175, line: 202, baseType: !165, size: 32, align: 32, offset: 3776)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "closeCb", scope: !176, file: !175, line: 203, baseType: !276, size: 64, align: 64, offset: 3840)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "closeCbData", scope: !176, file: !175, line: 204, baseType: !80, size: 64, align: 64, offset: 3904)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "recvCb", scope: !176, file: !175, line: 206, baseType: !168, size: 8, align: 8, offset: 3968)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "recvCbTimer", scope: !176, file: !175, line: 207, baseType: !168, size: 8, align: 8, offset: 3976)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "sendBufList", scope: !176, file: !175, line: 209, baseType: !419, size: 64, align: 64, offset: 4032)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "SendBufList", file: !175, line: 167, baseType: !421)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SendBufList", file: !175, line: 161, size: 320, align: 64, elements: !422)
!422 = !{!423, !425, !426, !427, !428}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !421, file: !175, line: 162, baseType: !424, size: 64, align: 64)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64, align: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !421, file: !175, line: 163, baseType: !80, size: 64, align: 64, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !421, file: !175, line: 164, baseType: !165, size: 32, align: 32, offset: 128)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sendFn", scope: !421, file: !175, line: 165, baseType: !320, size: 64, align: 64, offset: 192)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !421, file: !175, line: 166, baseType: !80, size: 64, align: 64, offset: 256)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "sendBufTail", scope: !176, file: !175, line: 210, baseType: !430, size: 64, align: 64, offset: 4096)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64, align: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "sendPos", scope: !176, file: !175, line: 211, baseType: !165, size: 32, align: 32, offset: 4160)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "sendCb", scope: !176, file: !175, line: 212, baseType: !168, size: 8, align: 8, offset: 4192)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "sendCbTimer", scope: !176, file: !175, line: 213, baseType: !168, size: 8, align: 8, offset: 4200)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "sendCbRT", scope: !176, file: !175, line: 214, baseType: !168, size: 8, align: 8, offset: 4208)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "sendBufFull", scope: !176, file: !175, line: 215, baseType: !168, size: 8, align: 8, offset: 4216)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "sendLowLatency", scope: !176, file: !175, line: 216, baseType: !168, size: 8, align: 8, offset: 4224)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "inLowLatencySendCb", scope: !176, file: !175, line: 217, baseType: !165, size: 32, align: 32, offset: 4256)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "sslConnected", scope: !176, file: !175, line: 219, baseType: !168, size: 8, align: 8, offset: 4288)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "inIPollCb", scope: !176, file: !175, line: 221, baseType: !171, size: 8, align: 8, offset: 4296)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "inRecvLoop", scope: !176, file: !175, line: 222, baseType: !168, size: 8, align: 8, offset: 4304)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "inBlockingRecv", scope: !176, file: !175, line: 223, baseType: !81, size: 32, align: 32, offset: 4320)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "listenAsock4", scope: !176, file: !175, line: 225, baseType: !443, size: 64, align: 64, offset: 4352)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64, align: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "listenAsock6", scope: !176, file: !175, line: 226, baseType: !443, size: 64, align: 64, offset: 4416)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "passFd", scope: !176, file: !175, line: 231, baseType: !446, size: 64, align: 32, offset: 4480)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !176, file: !175, line: 228, size: 64, align: 32, elements: !447)
!447 = !{!448, !449}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "expected", scope: !446, file: !175, line: 229, baseType: !168, size: 8, align: 8)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !446, file: !175, line: 230, baseType: !165, size: 32, align: 32, offset: 32)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64, align: 64)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !452, line: 39, size: 64, align: 32, elements: !453)
!452 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/poll.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!453 = !{!454, !455, !457}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !451, file: !452, line: 41, baseType: !165, size: 32, align: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !451, file: !452, line: 42, baseType: !456, size: 16, align: 16, offset: 32)
!456 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !451, file: !452, line: 43, baseType: !456, size: 16, align: 16, offset: 48)
!458 = !{!459, !467}
!459 = distinct !DIGlobalVariable(name: "unknownAddr", scope: !460, file: !175, line: 3188, type: !464, isLocal: true, isDefinition: true, variable: [10 x i8]* @AsyncTCPSocketResolveAddr.unknownAddr)
!460 = distinct !DISubprogram(name: "AsyncTCPSocketResolveAddr", scope: !175, file: !175, line: 3145, type: !461, isLocal: true, isDefinition: true, scopeLine: 3152, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!461 = !DISubroutineType(types: !462)
!462 = !{!165, !260, !85, !165, !168, !86, !249, !266}
!463 = !{}
!464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 80, align: 8, elements: !465)
!465 = !{!466}
!466 = !DISubrange(count: 10)
!467 = distinct !DIGlobalVariable(name: "asyncTCPSocketVTable", scope: !0, file: !175, line: 374, type: !227, isLocal: true, isDefinition: true, variable: %struct.AsyncSocketVTable* @asyncTCPSocketVTable)
!468 = !{i32 2, !"Dwarf Version", i32 4}
!469 = !{i32 2, !"Debug Info Version", i32 3}
!470 = !{!"clang version 3.9.1-4ubuntu3~16.04.2 (tags/RELEASE_391/rc2)"}
!471 = distinct !DISubprogram(name: "AsyncTCPSocket_Init", scope: !175, file: !175, line: 568, type: !472, isLocal: false, isDefinition: true, scopeLine: 569, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!472 = !DISubroutineType(types: !473)
!473 = !{!165}
!474 = !DILocation(line: 576, column: 4, scope: !471)
!475 = distinct !DISubprogram(name: "AsyncSocket_Listen", scope: !175, file: !175, line: 1008, type: !476, isLocal: false, isDefinition: true, scopeLine: 1014, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!476 = !DISubroutineType(types: !477)
!477 = !{!213, !260, !85, !401, !80, !478, !342}
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64, align: 64)
!479 = !DILocalVariable(name: "addrStr", arg: 1, scope: !475, file: !175, line: 1008, type: !260)
!480 = !DIExpression()
!481 = !DILocation(line: 1008, column: 32, scope: !475)
!482 = !DILocalVariable(name: "port", arg: 2, scope: !475, file: !175, line: 1009, type: !85)
!483 = !DILocation(line: 1009, column: 33, scope: !475)
!484 = !DILocalVariable(name: "connectFn", arg: 3, scope: !475, file: !175, line: 1010, type: !401)
!485 = !DILocation(line: 1010, column: 41, scope: !475)
!486 = !DILocalVariable(name: "clientData", arg: 4, scope: !475, file: !175, line: 1011, type: !80)
!487 = !DILocation(line: 1011, column: 26, scope: !475)
!488 = !DILocalVariable(name: "pollParams", arg: 5, scope: !475, file: !175, line: 1012, type: !478)
!489 = !DILocation(line: 1012, column: 43, scope: !475)
!490 = !DILocalVariable(name: "outError", arg: 6, scope: !475, file: !175, line: 1013, type: !342)
!491 = !DILocation(line: 1013, column: 25, scope: !475)
!492 = !DILocation(line: 1015, column: 8, scope: !493)
!493 = distinct !DILexicalBlock(scope: !475, file: !175, line: 1015, column: 8)
!494 = !DILocation(line: 1015, column: 16, scope: !493)
!495 = !DILocation(line: 1015, column: 23, scope: !493)
!496 = !DILocation(line: 1015, column: 27, scope: !497)
!497 = !DILexicalBlockFile(scope: !493, file: !175, discriminator: 1)
!498 = !DILocation(line: 1015, column: 26, scope: !497)
!499 = !DILocation(line: 1015, column: 35, scope: !497)
!500 = !DILocation(line: 1015, column: 43, scope: !497)
!501 = !DILocation(line: 1016, column: 15, scope: !493)
!502 = !DILocation(line: 1016, column: 8, scope: !493)
!503 = !DILocation(line: 1015, column: 8, scope: !504)
!504 = !DILexicalBlockFile(scope: !475, file: !175, discriminator: 2)
!505 = !DILocalVariable(name: "asock", scope: !506, file: !175, line: 1017, type: !173)
!506 = distinct !DILexicalBlock(scope: !493, file: !175, line: 1016, column: 38)
!507 = !DILocation(line: 1017, column: 23, scope: !506)
!508 = !DILocation(line: 1019, column: 48, scope: !506)
!509 = !DILocation(line: 1019, column: 57, scope: !506)
!510 = !DILocation(line: 1020, column: 48, scope: !506)
!511 = !DILocation(line: 1021, column: 48, scope: !506)
!512 = !DILocation(line: 1021, column: 60, scope: !506)
!513 = !DILocation(line: 1022, column: 48, scope: !506)
!514 = !DILocation(line: 1019, column: 15, scope: !506)
!515 = !DILocation(line: 1019, column: 13, scope: !506)
!516 = !DILocation(line: 1023, column: 25, scope: !506)
!517 = !DILocation(line: 1023, column: 14, scope: !506)
!518 = !DILocation(line: 1023, column: 7, scope: !506)
!519 = !DILocalVariable(name: "localhost", scope: !520, file: !175, line: 1025, type: !168)
!520 = distinct !DILexicalBlock(scope: !493, file: !175, line: 1024, column: 11)
!521 = !DILocation(line: 1025, column: 12, scope: !520)
!522 = !DILocation(line: 1025, column: 24, scope: !520)
!523 = !DILocation(line: 1025, column: 32, scope: !520)
!524 = !DILocation(line: 1025, column: 39, scope: !520)
!525 = !DILocation(line: 1025, column: 50, scope: !526)
!526 = !DILexicalBlockFile(scope: !520, file: !175, discriminator: 1)
!527 = !DILocation(line: 1025, column: 43, scope: !526)
!528 = !DILocation(line: 1025, column: 42, scope: !526)
!529 = !DILocation(line: 1025, column: 39, scope: !530)
!530 = !DILexicalBlockFile(scope: !520, file: !175, discriminator: 2)
!531 = !DILocation(line: 1025, column: 24, scope: !530)
!532 = !DILocation(line: 1025, column: 12, scope: !530)
!533 = !DILocalVariable(name: "tempPort", scope: !520, file: !175, line: 1026, type: !85)
!534 = !DILocation(line: 1026, column: 20, scope: !520)
!535 = !DILocation(line: 1026, column: 31, scope: !520)
!536 = !DILocalVariable(name: "asock6", scope: !520, file: !175, line: 1027, type: !173)
!537 = !DILocation(line: 1027, column: 23, scope: !520)
!538 = !DILocalVariable(name: "asock4", scope: !520, file: !175, line: 1028, type: !173)
!539 = !DILocation(line: 1028, column: 23, scope: !520)
!540 = !DILocalVariable(name: "tempError4", scope: !520, file: !175, line: 1029, type: !165)
!541 = !DILocation(line: 1029, column: 11, scope: !520)
!542 = !DILocalVariable(name: "tempError6", scope: !520, file: !175, line: 1030, type: !165)
!543 = !DILocation(line: 1030, column: 11, scope: !520)
!544 = !DILocation(line: 1032, column: 49, scope: !520)
!545 = !DILocation(line: 1032, column: 58, scope: !520)
!546 = !DILocation(line: 1033, column: 49, scope: !520)
!547 = !DILocation(line: 1033, column: 60, scope: !520)
!548 = !DILocation(line: 1034, column: 49, scope: !520)
!549 = !DILocation(line: 1032, column: 16, scope: !520)
!550 = !DILocation(line: 1032, column: 14, scope: !520)
!551 = !DILocation(line: 1037, column: 11, scope: !552)
!552 = distinct !DILexicalBlock(scope: !520, file: !175, line: 1037, column: 11)
!553 = !DILocation(line: 1037, column: 21, scope: !552)
!554 = !DILocation(line: 1037, column: 24, scope: !555)
!555 = !DILexicalBlockFile(scope: !552, file: !175, discriminator: 1)
!556 = !DILocation(line: 1037, column: 29, scope: !555)
!557 = !DILocation(line: 1037, column: 11, scope: !555)
!558 = !DILocation(line: 1038, column: 52, scope: !559)
!559 = distinct !DILexicalBlock(scope: !552, file: !175, line: 1037, column: 35)
!560 = !DILocation(line: 1038, column: 41, scope: !559)
!561 = !DILocation(line: 1038, column: 21, scope: !562)
!562 = !DILexicalBlockFile(scope: !559, file: !175, discriminator: 1)
!563 = !DILocation(line: 1038, column: 19, scope: !559)
!564 = !DILocation(line: 1039, column: 14, scope: !565)
!565 = distinct !DILexicalBlock(scope: !559, file: !175, line: 1039, column: 14)
!566 = !DILocation(line: 1039, column: 23, scope: !565)
!567 = !DILocation(line: 1039, column: 14, scope: !559)
!568 = !DILocation(line: 1040, column: 13, scope: !569)
!569 = distinct !DILexicalBlock(scope: !565, file: !175, line: 1039, column: 48)
!570 = !DILocation(line: 1042, column: 24, scope: !569)
!571 = !DILocation(line: 1042, column: 22, scope: !569)
!572 = !DILocation(line: 1043, column: 10, scope: !569)
!573 = !DILocation(line: 1044, column: 7, scope: !559)
!574 = !DILocation(line: 1046, column: 49, scope: !520)
!575 = !DILocation(line: 1046, column: 58, scope: !520)
!576 = !DILocation(line: 1047, column: 49, scope: !520)
!577 = !DILocation(line: 1047, column: 60, scope: !520)
!578 = !DILocation(line: 1048, column: 49, scope: !520)
!579 = !DILocation(line: 1046, column: 16, scope: !520)
!580 = !DILocation(line: 1046, column: 14, scope: !520)
!581 = !DILocation(line: 1051, column: 11, scope: !582)
!582 = distinct !DILexicalBlock(scope: !520, file: !175, line: 1051, column: 11)
!583 = !DILocation(line: 1051, column: 21, scope: !582)
!584 = !DILocation(line: 1051, column: 24, scope: !585)
!585 = !DILexicalBlockFile(scope: !582, file: !175, discriminator: 1)
!586 = !DILocation(line: 1051, column: 29, scope: !585)
!587 = !DILocation(line: 1051, column: 34, scope: !585)
!588 = !DILocation(line: 1051, column: 37, scope: !589)
!589 = !DILexicalBlockFile(scope: !582, file: !175, discriminator: 2)
!590 = !DILocation(line: 1051, column: 48, scope: !589)
!591 = !DILocation(line: 1051, column: 11, scope: !589)
!592 = !DILocation(line: 1052, column: 10, scope: !593)
!593 = distinct !DILexicalBlock(scope: !582, file: !175, line: 1051, column: 55)
!594 = !DILocation(line: 1054, column: 39, scope: !593)
!595 = !DILocation(line: 1054, column: 28, scope: !593)
!596 = !DILocation(line: 1054, column: 10, scope: !597)
!597 = !DILexicalBlockFile(scope: !593, file: !175, discriminator: 1)
!598 = !DILocation(line: 1056, column: 21, scope: !593)
!599 = !DILocation(line: 1057, column: 52, scope: !593)
!600 = !DILocation(line: 1057, column: 61, scope: !593)
!601 = !DILocation(line: 1058, column: 52, scope: !593)
!602 = !DILocation(line: 1058, column: 63, scope: !593)
!603 = !DILocation(line: 1059, column: 52, scope: !593)
!604 = !DILocation(line: 1057, column: 19, scope: !593)
!605 = !DILocation(line: 1057, column: 17, scope: !593)
!606 = !DILocation(line: 1062, column: 52, scope: !593)
!607 = !DILocation(line: 1062, column: 41, scope: !593)
!608 = !DILocation(line: 1062, column: 21, scope: !597)
!609 = !DILocation(line: 1062, column: 19, scope: !593)
!610 = !DILocation(line: 1063, column: 14, scope: !611)
!611 = distinct !DILexicalBlock(scope: !593, file: !175, line: 1063, column: 14)
!612 = !DILocation(line: 1063, column: 23, scope: !611)
!613 = !DILocation(line: 1063, column: 14, scope: !593)
!614 = !DILocation(line: 1064, column: 13, scope: !615)
!615 = distinct !DILexicalBlock(scope: !611, file: !175, line: 1063, column: 48)
!616 = !DILocation(line: 1066, column: 24, scope: !615)
!617 = !DILocation(line: 1066, column: 22, scope: !615)
!618 = !DILocation(line: 1067, column: 10, scope: !615)
!619 = !DILocation(line: 1069, column: 21, scope: !593)
!620 = !DILocation(line: 1070, column: 52, scope: !593)
!621 = !DILocation(line: 1070, column: 61, scope: !593)
!622 = !DILocation(line: 1071, column: 52, scope: !593)
!623 = !DILocation(line: 1071, column: 63, scope: !593)
!624 = !DILocation(line: 1072, column: 52, scope: !593)
!625 = !DILocation(line: 1070, column: 19, scope: !593)
!626 = !DILocation(line: 1070, column: 17, scope: !593)
!627 = !DILocation(line: 1075, column: 15, scope: !628)
!628 = distinct !DILexicalBlock(scope: !593, file: !175, line: 1075, column: 14)
!629 = !DILocation(line: 1075, column: 22, scope: !628)
!630 = !DILocation(line: 1075, column: 25, scope: !631)
!631 = !DILexicalBlockFile(scope: !628, file: !175, discriminator: 1)
!632 = !DILocation(line: 1075, column: 36, scope: !631)
!633 = !DILocation(line: 1075, column: 14, scope: !631)
!634 = !DILocation(line: 1076, column: 13, scope: !635)
!635 = distinct !DILexicalBlock(scope: !628, file: !175, line: 1075, column: 43)
!636 = !DILocation(line: 1078, column: 42, scope: !635)
!637 = !DILocation(line: 1078, column: 31, scope: !635)
!638 = !DILocation(line: 1078, column: 13, scope: !639)
!639 = !DILexicalBlockFile(scope: !635, file: !175, discriminator: 1)
!640 = !DILocation(line: 1079, column: 10, scope: !635)
!641 = !DILocation(line: 1080, column: 7, scope: !593)
!642 = !DILocation(line: 1082, column: 11, scope: !643)
!643 = distinct !DILexicalBlock(scope: !520, file: !175, line: 1082, column: 11)
!644 = !DILocation(line: 1082, column: 18, scope: !643)
!645 = !DILocation(line: 1082, column: 21, scope: !646)
!646 = !DILexicalBlockFile(scope: !643, file: !175, discriminator: 1)
!647 = !DILocation(line: 1082, column: 11, scope: !646)
!648 = !DILocalVariable(name: "asock", scope: !649, file: !175, line: 1083, type: !173)
!649 = distinct !DILexicalBlock(scope: !643, file: !175, line: 1082, column: 29)
!650 = !DILocation(line: 1083, column: 26, scope: !649)
!651 = !DILocation(line: 1085, column: 39, scope: !649)
!652 = !DILocation(line: 1085, column: 18, scope: !649)
!653 = !DILocation(line: 1085, column: 16, scope: !649)
!654 = !DILocation(line: 1086, column: 33, scope: !649)
!655 = !DILocation(line: 1086, column: 10, scope: !649)
!656 = !DILocation(line: 1087, column: 32, scope: !649)
!657 = !DILocation(line: 1087, column: 10, scope: !649)
!658 = !DILocation(line: 1087, column: 17, scope: !649)
!659 = !DILocation(line: 1087, column: 30, scope: !649)
!660 = !DILocation(line: 1088, column: 32, scope: !649)
!661 = !DILocation(line: 1088, column: 10, scope: !649)
!662 = !DILocation(line: 1088, column: 17, scope: !649)
!663 = !DILocation(line: 1088, column: 30, scope: !649)
!664 = !DILocation(line: 1089, column: 44, scope: !649)
!665 = !DILocation(line: 1089, column: 33, scope: !649)
!666 = !DILocation(line: 1091, column: 33, scope: !649)
!667 = !DILocation(line: 1089, column: 10, scope: !668)
!668 = !DILexicalBlockFile(scope: !649, file: !175, discriminator: 1)
!669 = !DILocation(line: 1092, column: 44, scope: !649)
!670 = !DILocation(line: 1092, column: 33, scope: !649)
!671 = !DILocation(line: 1094, column: 33, scope: !649)
!672 = !DILocation(line: 1092, column: 10, scope: !668)
!673 = !DILocation(line: 1096, column: 28, scope: !649)
!674 = !DILocation(line: 1096, column: 17, scope: !649)
!675 = !DILocation(line: 1096, column: 10, scope: !649)
!676 = !DILocation(line: 1097, column: 18, scope: !677)
!677 = distinct !DILexicalBlock(scope: !643, file: !175, line: 1097, column: 18)
!678 = !DILocation(line: 1097, column: 18, scope: !643)
!679 = !DILocation(line: 1098, column: 28, scope: !680)
!680 = distinct !DILexicalBlock(scope: !677, file: !175, line: 1097, column: 26)
!681 = !DILocation(line: 1098, column: 17, scope: !680)
!682 = !DILocation(line: 1098, column: 10, scope: !680)
!683 = !DILocation(line: 1099, column: 18, scope: !684)
!684 = distinct !DILexicalBlock(scope: !677, file: !175, line: 1099, column: 18)
!685 = !DILocation(line: 1099, column: 18, scope: !677)
!686 = !DILocation(line: 1100, column: 28, scope: !687)
!687 = distinct !DILexicalBlock(scope: !684, file: !175, line: 1099, column: 26)
!688 = !DILocation(line: 1100, column: 17, scope: !687)
!689 = !DILocation(line: 1100, column: 10, scope: !687)
!690 = !DILocation(line: 1103, column: 11, scope: !691)
!691 = distinct !DILexicalBlock(scope: !520, file: !175, line: 1103, column: 11)
!692 = !DILocation(line: 1103, column: 11, scope: !520)
!693 = !DILocation(line: 1105, column: 15, scope: !694)
!694 = distinct !DILexicalBlock(scope: !695, file: !175, line: 1105, column: 14)
!695 = distinct !DILexicalBlock(scope: !691, file: !175, line: 1103, column: 21)
!696 = !DILocation(line: 1105, column: 14, scope: !695)
!697 = !DILocation(line: 1106, column: 25, scope: !698)
!698 = distinct !DILexicalBlock(scope: !694, file: !175, line: 1105, column: 23)
!699 = !DILocation(line: 1106, column: 14, scope: !698)
!700 = !DILocation(line: 1106, column: 23, scope: !698)
!701 = !DILocation(line: 1107, column: 10, scope: !698)
!702 = !DILocation(line: 1107, column: 22, scope: !703)
!703 = !DILexicalBlockFile(scope: !704, file: !175, discriminator: 1)
!704 = distinct !DILexicalBlock(scope: !694, file: !175, line: 1107, column: 21)
!705 = !DILocation(line: 1107, column: 21, scope: !703)
!706 = !DILocation(line: 1108, column: 25, scope: !707)
!707 = distinct !DILexicalBlock(scope: !704, file: !175, line: 1107, column: 30)
!708 = !DILocation(line: 1108, column: 14, scope: !707)
!709 = !DILocation(line: 1108, column: 23, scope: !707)
!710 = !DILocation(line: 1109, column: 10, scope: !707)
!711 = !DILocation(line: 1110, column: 14, scope: !712)
!712 = distinct !DILexicalBlock(scope: !704, file: !175, line: 1109, column: 17)
!713 = !DILocation(line: 1110, column: 23, scope: !712)
!714 = !DILocation(line: 1112, column: 7, scope: !695)
!715 = !DILocation(line: 1114, column: 7, scope: !520)
!716 = !DILocation(line: 1116, column: 1, scope: !475)
!717 = distinct !DISubprogram(name: "AsyncTCPSocketListenerCreateImpl", scope: !175, file: !175, line: 925, type: !718, isLocal: true, isDefinition: true, scopeLine: 933, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!718 = !DISubroutineType(types: !719)
!719 = !{!173, !260, !85, !165, !401, !80, !478, !342}
!720 = !DILocalVariable(name: "addrStr", arg: 1, scope: !717, file: !175, line: 926, type: !260)
!721 = !DILocation(line: 926, column: 16, scope: !717)
!722 = !DILocalVariable(name: "port", arg: 2, scope: !717, file: !175, line: 927, type: !85)
!723 = !DILocation(line: 927, column: 17, scope: !717)
!724 = !DILocalVariable(name: "socketFamily", arg: 3, scope: !717, file: !175, line: 928, type: !165)
!725 = !DILocation(line: 928, column: 8, scope: !717)
!726 = !DILocalVariable(name: "connectFn", arg: 4, scope: !717, file: !175, line: 929, type: !401)
!727 = !DILocation(line: 929, column: 25, scope: !717)
!728 = !DILocalVariable(name: "clientData", arg: 5, scope: !717, file: !175, line: 930, type: !80)
!729 = !DILocation(line: 930, column: 10, scope: !717)
!730 = !DILocalVariable(name: "pollParams", arg: 6, scope: !717, file: !175, line: 931, type: !478)
!731 = !DILocation(line: 931, column: 27, scope: !717)
!732 = !DILocalVariable(name: "outError", arg: 7, scope: !717, file: !175, line: 932, type: !342)
!733 = !DILocation(line: 932, column: 9, scope: !717)
!734 = !DILocalVariable(name: "asock", scope: !717, file: !175, line: 934, type: !173)
!735 = !DILocation(line: 934, column: 20, scope: !717)
!736 = !DILocalVariable(name: "addr", scope: !717, file: !175, line: 935, type: !87)
!737 = !DILocation(line: 935, column: 28, scope: !717)
!738 = !DILocalVariable(name: "addrLen", scope: !717, file: !175, line: 936, type: !242)
!739 = !DILocation(line: 936, column: 14, scope: !717)
!740 = !DILocalVariable(name: "ipString", scope: !717, file: !175, line: 937, type: !267)
!741 = !DILocation(line: 937, column: 10, scope: !717)
!742 = !DILocalVariable(name: "getaddrinfoError", scope: !717, file: !175, line: 938, type: !165)
!743 = !DILocation(line: 938, column: 8, scope: !717)
!744 = !DILocation(line: 938, column: 53, scope: !717)
!745 = !DILocation(line: 938, column: 62, scope: !717)
!746 = !DILocation(line: 938, column: 68, scope: !717)
!747 = !DILocation(line: 938, column: 27, scope: !717)
!748 = !DILocation(line: 942, column: 8, scope: !749)
!749 = distinct !DILexicalBlock(scope: !717, file: !175, line: 942, column: 8)
!750 = !DILocation(line: 942, column: 25, scope: !749)
!751 = !DILocation(line: 942, column: 8, scope: !717)
!752 = !DILocation(line: 943, column: 47, scope: !753)
!753 = distinct !DILexicalBlock(scope: !749, file: !175, line: 942, column: 31)
!754 = !DILocation(line: 943, column: 56, scope: !753)
!755 = !DILocation(line: 943, column: 67, scope: !753)
!756 = !DILocation(line: 944, column: 40, scope: !753)
!757 = !DILocation(line: 945, column: 40, scope: !753)
!758 = !DILocation(line: 943, column: 15, scope: !753)
!759 = !DILocation(line: 943, column: 13, scope: !753)
!760 = !DILocation(line: 947, column: 11, scope: !761)
!761 = distinct !DILexicalBlock(scope: !753, file: !175, line: 947, column: 11)
!762 = !DILocation(line: 947, column: 11, scope: !753)
!763 = !DILocation(line: 948, column: 10, scope: !764)
!764 = distinct !DILexicalBlock(scope: !761, file: !175, line: 947, column: 18)
!765 = distinct !{!765, !763}
!766 = !DILocation(line: 948, column: 70, scope: !767)
!767 = !DILexicalBlockFile(scope: !768, file: !175, discriminator: 1)
!768 = distinct !DILexicalBlock(scope: !764, file: !175, line: 948, column: 13)
!769 = !DILocation(line: 948, column: 59, scope: !767)
!770 = !DILocation(line: 948, column: 41, scope: !771)
!771 = !DILexicalBlockFile(scope: !767, file: !175, discriminator: 2)
!772 = !DILocation(line: 948, column: 108, scope: !767)
!773 = !DILocation(line: 948, column: 97, scope: !774)
!774 = !DILexicalBlockFile(scope: !767, file: !175, discriminator: 3)
!775 = !DILocation(line: 948, column: 79, scope: !776)
!776 = !DILexicalBlockFile(scope: !767, file: !175, discriminator: 4)
!777 = !DILocation(line: 948, column: 15, scope: !778)
!778 = !DILexicalBlockFile(scope: !767, file: !175, discriminator: 5)
!779 = !DILocation(line: 948, column: 169, scope: !767)
!780 = !DILocation(line: 948, column: 164, scope: !767)
!781 = !DILocation(line: 948, column: 179, scope: !767)
!782 = !DILocation(line: 948, column: 38, scope: !767)
!783 = !DILocation(line: 948, column: 118, scope: !784)
!784 = !DILexicalBlockFile(scope: !767, file: !175, discriminator: 6)
!785 = !DILocation(line: 948, column: 49, scope: !767)
!786 = !DILocation(line: 952, column: 7, scope: !764)
!787 = !DILocation(line: 954, column: 19, scope: !788)
!788 = distinct !DILexicalBlock(scope: !761, file: !175, line: 952, column: 14)
!789 = !DILocation(line: 954, column: 14, scope: !788)
!790 = !DILocation(line: 954, column: 29, scope: !788)
!791 = !DILocation(line: 954, column: 59, scope: !788)
!792 = !DILocation(line: 954, column: 58, scope: !788)
!793 = !DILocation(line: 955, column: 38, scope: !788)
!794 = !DILocation(line: 955, column: 37, scope: !788)
!795 = !DILocation(line: 955, column: 14, scope: !788)
!796 = !DILocation(line: 953, column: 10, scope: !788)
!797 = !DILocation(line: 957, column: 12, scope: !753)
!798 = !DILocation(line: 957, column: 7, scope: !753)
!799 = !DILocation(line: 958, column: 4, scope: !753)
!800 = !DILocation(line: 959, column: 7, scope: !801)
!801 = distinct !DILexicalBlock(scope: !749, file: !175, line: 958, column: 11)
!802 = !DILocation(line: 960, column: 11, scope: !803)
!803 = distinct !DILexicalBlock(scope: !801, file: !175, line: 960, column: 11)
!804 = !DILocation(line: 960, column: 11, scope: !801)
!805 = !DILocation(line: 961, column: 11, scope: !806)
!806 = distinct !DILexicalBlock(scope: !803, file: !175, line: 960, column: 21)
!807 = !DILocation(line: 961, column: 20, scope: !806)
!808 = !DILocation(line: 962, column: 7, scope: !806)
!809 = !DILocation(line: 965, column: 11, scope: !717)
!810 = !DILocation(line: 965, column: 4, scope: !717)
!811 = distinct !DISubprogram(name: "BaseSocket", scope: !175, file: !175, line: 429, type: !812, isLocal: true, isDefinition: true, scopeLine: 430, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!812 = !DISubroutineType(types: !813)
!813 = !{!213, !173}
!814 = !DILocalVariable(name: "s", arg: 1, scope: !811, file: !175, line: 429, type: !173)
!815 = !DILocation(line: 429, column: 28, scope: !811)
!816 = !DILocation(line: 432, column: 12, scope: !811)
!817 = !DILocation(line: 432, column: 15, scope: !811)
!818 = !DILocation(line: 432, column: 4, scope: !811)
!819 = distinct !DISubprogram(name: "AsyncTCPSocketCreate", scope: !175, file: !175, line: 2088, type: !820, isLocal: true, isDefinition: true, scopeLine: 2089, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!820 = !DISubroutineType(types: !821)
!821 = !{!173, !478}
!822 = !DILocalVariable(name: "pollParams", arg: 1, scope: !819, file: !175, line: 2088, type: !478)
!823 = !DILocation(line: 2088, column: 45, scope: !819)
!824 = !DILocalVariable(name: "s", scope: !819, file: !175, line: 2090, type: !173)
!825 = !DILocation(line: 2090, column: 20, scope: !819)
!826 = !DILocation(line: 2092, column: 8, scope: !819)
!827 = !DILocation(line: 2092, column: 6, scope: !819)
!828 = !DILocation(line: 2094, column: 37, scope: !819)
!829 = !DILocation(line: 2094, column: 26, scope: !819)
!830 = !DILocation(line: 2094, column: 41, scope: !819)
!831 = !DILocation(line: 2094, column: 4, scope: !832)
!832 = !DILexicalBlockFile(scope: !819, file: !175, discriminator: 1)
!833 = !DILocation(line: 2096, column: 4, scope: !819)
!834 = !DILocation(line: 2096, column: 7, scope: !819)
!835 = !DILocation(line: 2096, column: 10, scope: !819)
!836 = !DILocation(line: 2097, column: 4, scope: !819)
!837 = !DILocation(line: 2097, column: 7, scope: !819)
!838 = !DILocation(line: 2097, column: 18, scope: !819)
!839 = !DILocation(line: 2098, column: 4, scope: !819)
!840 = !DILocation(line: 2098, column: 7, scope: !819)
!841 = !DILocation(line: 2098, column: 19, scope: !819)
!842 = !DILocation(line: 2099, column: 23, scope: !819)
!843 = !DILocation(line: 2099, column: 26, scope: !819)
!844 = !DILocation(line: 2099, column: 4, scope: !819)
!845 = !DILocation(line: 2099, column: 7, scope: !819)
!846 = !DILocation(line: 2099, column: 19, scope: !819)
!847 = !DILocation(line: 2100, column: 4, scope: !819)
!848 = !DILocation(line: 2100, column: 7, scope: !819)
!849 = !DILocation(line: 2100, column: 14, scope: !819)
!850 = !DILocation(line: 2100, column: 17, scope: !819)
!851 = !DILocation(line: 2102, column: 8, scope: !852)
!852 = distinct !DILexicalBlock(scope: !819, file: !175, line: 2102, column: 8)
!853 = !DILocation(line: 2102, column: 19, scope: !852)
!854 = !DILocation(line: 2102, column: 22, scope: !855)
!855 = !DILexicalBlockFile(scope: !852, file: !175, discriminator: 1)
!856 = !DILocation(line: 2102, column: 34, scope: !855)
!857 = !DILocation(line: 2102, column: 8, scope: !855)
!858 = !DILocation(line: 2103, column: 7, scope: !859)
!859 = distinct !DILexicalBlock(scope: !852, file: !175, line: 2102, column: 41)
!860 = !DILocation(line: 2103, column: 10, scope: !859)
!861 = !DILocation(line: 2103, column: 25, scope: !859)
!862 = !DILocation(line: 2104, column: 7, scope: !859)
!863 = !DILocation(line: 2104, column: 10, scope: !859)
!864 = !DILocation(line: 2104, column: 25, scope: !859)
!865 = !DILocation(line: 2105, column: 4, scope: !859)
!866 = !DILocation(line: 2106, column: 7, scope: !867)
!867 = distinct !DILexicalBlock(scope: !852, file: !175, line: 2105, column: 11)
!868 = !DILocation(line: 2106, column: 10, scope: !867)
!869 = !DILocation(line: 2106, column: 25, scope: !867)
!870 = !DILocation(line: 2107, column: 7, scope: !867)
!871 = !DILocation(line: 2107, column: 10, scope: !867)
!872 = !DILocation(line: 2107, column: 25, scope: !867)
!873 = !DILocation(line: 2110, column: 11, scope: !819)
!874 = !DILocation(line: 2110, column: 4, scope: !819)
!875 = distinct !DISubprogram(name: "AsyncTCPSocketSetState", scope: !175, file: !175, line: 519, type: !876, isLocal: true, isDefinition: true, scopeLine: 520, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!876 = !DISubroutineType(types: !877)
!877 = !{null, !173, !205}
!878 = !DILocalVariable(name: "asock", arg: 1, scope: !875, file: !175, line: 519, type: !173)
!879 = !DILocation(line: 519, column: 40, scope: !875)
!880 = !DILocalVariable(name: "state", arg: 2, scope: !875, file: !175, line: 519, type: !205)
!881 = !DILocation(line: 519, column: 64, scope: !875)
!882 = !DILocation(line: 521, column: 35, scope: !875)
!883 = !DILocation(line: 521, column: 24, scope: !875)
!884 = !DILocation(line: 521, column: 43, scope: !875)
!885 = !DILocation(line: 521, column: 4, scope: !886)
!886 = !DILexicalBlockFile(scope: !875, file: !175, discriminator: 1)
!887 = !DILocation(line: 522, column: 1, scope: !875)
!888 = distinct !DISubprogram(name: "AsyncTCPSocketListenerError", scope: !175, file: !175, line: 6050, type: !211, isLocal: true, isDefinition: true, scopeLine: 6053, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!889 = !DILocalVariable(name: "error", arg: 1, scope: !888, file: !175, line: 6050, type: !165)
!890 = !DILocation(line: 6050, column: 33, scope: !888)
!891 = !DILocalVariable(name: "asock", arg: 2, scope: !888, file: !175, line: 6051, type: !213)
!892 = !DILocation(line: 6051, column: 42, scope: !888)
!893 = !DILocalVariable(name: "clientData", arg: 3, scope: !888, file: !175, line: 6052, type: !80)
!894 = !DILocation(line: 6052, column: 35, scope: !888)
!895 = !DILocalVariable(name: "s", scope: !888, file: !175, line: 6054, type: !213)
!896 = !DILocation(line: 6054, column: 17, scope: !888)
!897 = !DILocation(line: 6054, column: 21, scope: !888)
!898 = !DILocation(line: 6057, column: 27, scope: !888)
!899 = !DILocation(line: 6057, column: 30, scope: !888)
!900 = !DILocation(line: 6057, column: 4, scope: !888)
!901 = !DILocation(line: 6058, column: 1, scope: !888)
!902 = distinct !DISubprogram(name: "AsyncSocket_ListenLoopback", scope: !175, file: !175, line: 1138, type: !903, isLocal: false, isDefinition: true, scopeLine: 1143, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!903 = !DISubroutineType(types: !904)
!904 = !{!213, !85, !401, !80, !478, !342}
!905 = !DILocalVariable(name: "port", arg: 1, scope: !902, file: !175, line: 1138, type: !85)
!906 = !DILocation(line: 1138, column: 41, scope: !902)
!907 = !DILocalVariable(name: "connectFn", arg: 2, scope: !902, file: !175, line: 1139, type: !401)
!908 = !DILocation(line: 1139, column: 49, scope: !902)
!909 = !DILocalVariable(name: "clientData", arg: 3, scope: !902, file: !175, line: 1140, type: !80)
!910 = !DILocation(line: 1140, column: 34, scope: !902)
!911 = !DILocalVariable(name: "pollParams", arg: 4, scope: !902, file: !175, line: 1141, type: !478)
!912 = !DILocation(line: 1141, column: 51, scope: !902)
!913 = !DILocalVariable(name: "outError", arg: 5, scope: !902, file: !175, line: 1142, type: !342)
!914 = !DILocation(line: 1142, column: 33, scope: !902)
!915 = !DILocalVariable(name: "asock6", scope: !902, file: !175, line: 1144, type: !173)
!916 = !DILocation(line: 1144, column: 20, scope: !902)
!917 = !DILocalVariable(name: "asock4", scope: !902, file: !175, line: 1145, type: !173)
!918 = !DILocation(line: 1145, column: 20, scope: !902)
!919 = !DILocalVariable(name: "tempError4", scope: !902, file: !175, line: 1146, type: !165)
!920 = !DILocation(line: 1146, column: 8, scope: !902)
!921 = !DILocalVariable(name: "tempError6", scope: !902, file: !175, line: 1147, type: !165)
!922 = !DILocation(line: 1147, column: 8, scope: !902)
!923 = !DILocation(line: 1154, column: 53, scope: !902)
!924 = !DILocation(line: 1155, column: 46, scope: !902)
!925 = !DILocation(line: 1155, column: 57, scope: !902)
!926 = !DILocation(line: 1155, column: 69, scope: !902)
!927 = !DILocation(line: 1154, column: 13, scope: !902)
!928 = !DILocation(line: 1154, column: 11, scope: !902)
!929 = !DILocation(line: 1158, column: 59, scope: !902)
!930 = !DILocation(line: 1159, column: 46, scope: !902)
!931 = !DILocation(line: 1159, column: 57, scope: !902)
!932 = !DILocation(line: 1159, column: 69, scope: !902)
!933 = !DILocation(line: 1158, column: 13, scope: !902)
!934 = !DILocation(line: 1158, column: 11, scope: !902)
!935 = !DILocation(line: 1162, column: 8, scope: !936)
!936 = distinct !DILexicalBlock(scope: !902, file: !175, line: 1162, column: 8)
!937 = !DILocation(line: 1162, column: 15, scope: !936)
!938 = !DILocation(line: 1162, column: 18, scope: !939)
!939 = !DILexicalBlockFile(scope: !936, file: !175, discriminator: 1)
!940 = !DILocation(line: 1162, column: 8, scope: !939)
!941 = !DILocalVariable(name: "asock", scope: !942, file: !175, line: 1163, type: !173)
!942 = distinct !DILexicalBlock(scope: !936, file: !175, line: 1162, column: 26)
!943 = !DILocation(line: 1163, column: 23, scope: !942)
!944 = !DILocation(line: 1165, column: 36, scope: !942)
!945 = !DILocation(line: 1165, column: 15, scope: !942)
!946 = !DILocation(line: 1165, column: 13, scope: !942)
!947 = !DILocation(line: 1166, column: 30, scope: !942)
!948 = !DILocation(line: 1166, column: 7, scope: !942)
!949 = !DILocation(line: 1167, column: 29, scope: !942)
!950 = !DILocation(line: 1167, column: 7, scope: !942)
!951 = !DILocation(line: 1167, column: 14, scope: !942)
!952 = !DILocation(line: 1167, column: 27, scope: !942)
!953 = !DILocation(line: 1168, column: 29, scope: !942)
!954 = !DILocation(line: 1168, column: 7, scope: !942)
!955 = !DILocation(line: 1168, column: 14, scope: !942)
!956 = !DILocation(line: 1168, column: 27, scope: !942)
!957 = !DILocation(line: 1170, column: 25, scope: !942)
!958 = !DILocation(line: 1170, column: 14, scope: !942)
!959 = !DILocation(line: 1170, column: 7, scope: !942)
!960 = !DILocation(line: 1171, column: 15, scope: !961)
!961 = distinct !DILexicalBlock(scope: !936, file: !175, line: 1171, column: 15)
!962 = !DILocation(line: 1171, column: 15, scope: !936)
!963 = !DILocation(line: 1172, column: 25, scope: !964)
!964 = distinct !DILexicalBlock(scope: !961, file: !175, line: 1171, column: 23)
!965 = !DILocation(line: 1172, column: 14, scope: !964)
!966 = !DILocation(line: 1172, column: 7, scope: !964)
!967 = !DILocation(line: 1173, column: 15, scope: !968)
!968 = distinct !DILexicalBlock(scope: !961, file: !175, line: 1173, column: 15)
!969 = !DILocation(line: 1173, column: 15, scope: !961)
!970 = !DILocation(line: 1174, column: 25, scope: !971)
!971 = distinct !DILexicalBlock(scope: !968, file: !175, line: 1173, column: 23)
!972 = !DILocation(line: 1174, column: 14, scope: !971)
!973 = !DILocation(line: 1174, column: 7, scope: !971)
!974 = !DILocation(line: 1177, column: 8, scope: !975)
!975 = distinct !DILexicalBlock(scope: !902, file: !175, line: 1177, column: 8)
!976 = !DILocation(line: 1177, column: 8, scope: !902)
!977 = !DILocation(line: 1179, column: 12, scope: !978)
!978 = distinct !DILexicalBlock(scope: !979, file: !175, line: 1179, column: 11)
!979 = distinct !DILexicalBlock(scope: !975, file: !175, line: 1177, column: 18)
!980 = !DILocation(line: 1179, column: 11, scope: !979)
!981 = !DILocation(line: 1180, column: 22, scope: !982)
!982 = distinct !DILexicalBlock(scope: !978, file: !175, line: 1179, column: 20)
!983 = !DILocation(line: 1180, column: 11, scope: !982)
!984 = !DILocation(line: 1180, column: 20, scope: !982)
!985 = !DILocation(line: 1181, column: 7, scope: !982)
!986 = !DILocation(line: 1181, column: 19, scope: !987)
!987 = !DILexicalBlockFile(scope: !988, file: !175, discriminator: 1)
!988 = distinct !DILexicalBlock(scope: !978, file: !175, line: 1181, column: 18)
!989 = !DILocation(line: 1181, column: 18, scope: !987)
!990 = !DILocation(line: 1182, column: 22, scope: !991)
!991 = distinct !DILexicalBlock(scope: !988, file: !175, line: 1181, column: 27)
!992 = !DILocation(line: 1182, column: 11, scope: !991)
!993 = !DILocation(line: 1182, column: 20, scope: !991)
!994 = !DILocation(line: 1183, column: 7, scope: !991)
!995 = !DILocation(line: 1184, column: 11, scope: !996)
!996 = distinct !DILexicalBlock(scope: !988, file: !175, line: 1183, column: 14)
!997 = !DILocation(line: 1184, column: 20, scope: !996)
!998 = !DILocation(line: 1186, column: 4, scope: !979)
!999 = !DILocation(line: 1188, column: 4, scope: !902)
!1000 = !DILocation(line: 1189, column: 1, scope: !902)
!1001 = distinct !DISubprogram(name: "AsyncSocket_ListenVMCI", scope: !175, file: !175, line: 1210, type: !1002, isLocal: false, isDefinition: true, scopeLine: 1216, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!213, !85, !85, !401, !80, !478, !342}
!1004 = !DILocalVariable(name: "cid", arg: 1, scope: !1001, file: !175, line: 1210, type: !85)
!1005 = !DILocation(line: 1210, column: 37, scope: !1001)
!1006 = !DILocalVariable(name: "port", arg: 2, scope: !1001, file: !175, line: 1211, type: !85)
!1007 = !DILocation(line: 1211, column: 37, scope: !1001)
!1008 = !DILocalVariable(name: "connectFn", arg: 3, scope: !1001, file: !175, line: 1212, type: !401)
!1009 = !DILocation(line: 1212, column: 45, scope: !1001)
!1010 = !DILocalVariable(name: "clientData", arg: 4, scope: !1001, file: !175, line: 1213, type: !80)
!1011 = !DILocation(line: 1213, column: 30, scope: !1001)
!1012 = !DILocalVariable(name: "pollParams", arg: 5, scope: !1001, file: !175, line: 1214, type: !478)
!1013 = !DILocation(line: 1214, column: 47, scope: !1001)
!1014 = !DILocalVariable(name: "outError", arg: 6, scope: !1001, file: !175, line: 1215, type: !342)
!1015 = !DILocation(line: 1215, column: 29, scope: !1001)
!1016 = !DILocalVariable(name: "addr", scope: !1001, file: !175, line: 1217, type: !154)
!1017 = !DILocation(line: 1217, column: 23, scope: !1001)
!1018 = !DILocalVariable(name: "asock", scope: !1001, file: !175, line: 1218, type: !173)
!1019 = !DILocation(line: 1218, column: 20, scope: !1001)
!1020 = !DILocalVariable(name: "vsockDev", scope: !1001, file: !175, line: 1219, type: !165)
!1021 = !DILocation(line: 1219, column: 8, scope: !1001)
!1022 = !DILocation(line: 1221, column: 4, scope: !1001)
!1023 = !DILocation(line: 1222, column: 22, scope: !1001)
!1024 = !DILocation(line: 1222, column: 9, scope: !1001)
!1025 = !DILocation(line: 1222, column: 20, scope: !1001)
!1026 = !DILocation(line: 1223, column: 19, scope: !1001)
!1027 = !DILocation(line: 1223, column: 9, scope: !1001)
!1028 = !DILocation(line: 1223, column: 17, scope: !1001)
!1029 = !DILocation(line: 1224, column: 20, scope: !1001)
!1030 = !DILocation(line: 1224, column: 9, scope: !1001)
!1031 = !DILocation(line: 1224, column: 18, scope: !1001)
!1032 = !DILocation(line: 1226, column: 37, scope: !1001)
!1033 = !DILocation(line: 1228, column: 37, scope: !1001)
!1034 = !DILocation(line: 1228, column: 48, scope: !1001)
!1035 = !DILocation(line: 1228, column: 60, scope: !1001)
!1036 = !DILocation(line: 1229, column: 37, scope: !1001)
!1037 = !DILocation(line: 1226, column: 12, scope: !1001)
!1038 = !DILocation(line: 1226, column: 10, scope: !1001)
!1039 = !DILocation(line: 1231, column: 30, scope: !1001)
!1040 = !DILocation(line: 1231, column: 4, scope: !1001)
!1041 = !DILocation(line: 1232, column: 22, scope: !1001)
!1042 = !DILocation(line: 1232, column: 11, scope: !1001)
!1043 = !DILocation(line: 1232, column: 4, scope: !1001)
!1044 = distinct !DISubprogram(name: "VMCISock_GetAFValueFd", scope: !155, file: !155, line: 657, type: !1045, isLocal: true, isDefinition: true, scopeLine: 658, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!165, !342}
!1047 = !DILocalVariable(name: "outFd", arg: 1, scope: !1044, file: !155, line: 657, type: !342)
!1048 = !DILocation(line: 657, column: 49, scope: !1044)
!1049 = !DILocalVariable(name: "fd", scope: !1044, file: !155, line: 659, type: !165)
!1050 = !DILocation(line: 659, column: 11, scope: !1044)
!1051 = !DILocalVariable(name: "family", scope: !1044, file: !155, line: 660, type: !165)
!1052 = !DILocation(line: 660, column: 11, scope: !1044)
!1053 = !DILocalVariable(name: "s", scope: !1054, file: !155, line: 676, type: !165)
!1054 = distinct !DILexicalBlock(scope: !1044, file: !155, line: 675, column: 7)
!1055 = !DILocation(line: 676, column: 14, scope: !1054)
!1056 = !DILocation(line: 676, column: 18, scope: !1054)
!1057 = !DILocation(line: 677, column: 14, scope: !1058)
!1058 = distinct !DILexicalBlock(scope: !1054, file: !155, line: 677, column: 14)
!1059 = !DILocation(line: 677, column: 16, scope: !1058)
!1060 = !DILocation(line: 677, column: 14, scope: !1054)
!1061 = !DILocation(line: 678, column: 19, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1058, file: !155, line: 677, column: 23)
!1063 = !DILocation(line: 678, column: 13, scope: !1062)
!1064 = !DILocation(line: 679, column: 17, scope: !1065)
!1065 = distinct !DILexicalBlock(scope: !1062, file: !155, line: 679, column: 17)
!1066 = !DILocation(line: 679, column: 17, scope: !1062)
!1067 = !DILocation(line: 680, column: 17, scope: !1068)
!1068 = distinct !DILexicalBlock(scope: !1065, file: !155, line: 679, column: 24)
!1069 = !DILocation(line: 680, column: 23, scope: !1068)
!1070 = !DILocation(line: 681, column: 13, scope: !1068)
!1071 = !DILocation(line: 682, column: 13, scope: !1062)
!1072 = !DILocation(line: 688, column: 12, scope: !1044)
!1073 = !DILocation(line: 688, column: 10, scope: !1044)
!1074 = !DILocation(line: 689, column: 11, scope: !1075)
!1075 = distinct !DILexicalBlock(scope: !1044, file: !155, line: 689, column: 11)
!1076 = !DILocation(line: 689, column: 14, scope: !1075)
!1077 = !DILocation(line: 689, column: 11, scope: !1044)
!1078 = !DILocation(line: 690, column: 15, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1075, file: !155, line: 689, column: 19)
!1080 = !DILocation(line: 690, column: 13, scope: !1079)
!1081 = !DILocation(line: 691, column: 14, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !1079, file: !155, line: 691, column: 14)
!1083 = !DILocation(line: 691, column: 17, scope: !1082)
!1084 = !DILocation(line: 691, column: 14, scope: !1079)
!1085 = !DILocation(line: 692, column: 13, scope: !1086)
!1086 = distinct !DILexicalBlock(scope: !1082, file: !155, line: 691, column: 22)
!1087 = !DILocation(line: 694, column: 7, scope: !1079)
!1088 = !DILocation(line: 696, column: 17, scope: !1089)
!1089 = distinct !DILexicalBlock(scope: !1044, file: !155, line: 696, column: 11)
!1090 = !DILocation(line: 696, column: 11, scope: !1089)
!1091 = !DILocation(line: 696, column: 36, scope: !1089)
!1092 = !DILocation(line: 696, column: 11, scope: !1044)
!1093 = !DILocation(line: 697, column: 17, scope: !1094)
!1094 = distinct !DILexicalBlock(scope: !1089, file: !155, line: 696, column: 41)
!1095 = !DILocation(line: 698, column: 7, scope: !1094)
!1096 = !DILocation(line: 700, column: 11, scope: !1097)
!1097 = distinct !DILexicalBlock(scope: !1044, file: !155, line: 700, column: 11)
!1098 = !DILocation(line: 700, column: 18, scope: !1097)
!1099 = !DILocation(line: 700, column: 11, scope: !1044)
!1100 = !DILocation(line: 701, column: 16, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1097, file: !155, line: 700, column: 23)
!1102 = !DILocation(line: 701, column: 10, scope: !1101)
!1103 = !DILocation(line: 702, column: 7, scope: !1101)
!1104 = !DILocation(line: 702, column: 18, scope: !1105)
!1105 = !DILexicalBlockFile(scope: !1106, file: !155, discriminator: 1)
!1106 = distinct !DILexicalBlock(scope: !1097, file: !155, line: 702, column: 18)
!1107 = !DILocation(line: 703, column: 19, scope: !1108)
!1108 = distinct !DILexicalBlock(scope: !1106, file: !155, line: 702, column: 25)
!1109 = !DILocation(line: 703, column: 11, scope: !1108)
!1110 = !DILocation(line: 703, column: 17, scope: !1108)
!1111 = !DILocation(line: 704, column: 7, scope: !1108)
!1112 = !DILocation(line: 706, column: 14, scope: !1044)
!1113 = !DILocation(line: 706, column: 7, scope: !1044)
!1114 = !DILocation(line: 707, column: 4, scope: !1044)
!1115 = distinct !DISubprogram(name: "AsyncTCPSocketListenImpl", scope: !175, file: !175, line: 885, type: !1116, isLocal: true, isDefinition: true, scopeLine: 891, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!173, !86, !242, !401, !80, !478, !342}
!1118 = !DILocalVariable(name: "addr", arg: 1, scope: !1115, file: !175, line: 885, type: !86)
!1119 = !DILocation(line: 885, column: 51, scope: !1115)
!1120 = !DILocalVariable(name: "addrLen", arg: 2, scope: !1115, file: !175, line: 886, type: !242)
!1121 = !DILocation(line: 886, column: 36, scope: !1115)
!1122 = !DILocalVariable(name: "connectFn", arg: 3, scope: !1115, file: !175, line: 887, type: !401)
!1123 = !DILocation(line: 887, column: 47, scope: !1115)
!1124 = !DILocalVariable(name: "clientData", arg: 4, scope: !1115, file: !175, line: 888, type: !80)
!1125 = !DILocation(line: 888, column: 32, scope: !1115)
!1126 = !DILocalVariable(name: "pollParams", arg: 5, scope: !1115, file: !175, line: 889, type: !478)
!1127 = !DILocation(line: 889, column: 49, scope: !1115)
!1128 = !DILocalVariable(name: "outError", arg: 6, scope: !1115, file: !175, line: 890, type: !342)
!1129 = !DILocation(line: 890, column: 31, scope: !1115)
!1130 = !DILocalVariable(name: "asock", scope: !1115, file: !175, line: 892, type: !173)
!1131 = !DILocation(line: 892, column: 20, scope: !1115)
!1132 = !DILocation(line: 892, column: 47, scope: !1115)
!1133 = !DILocation(line: 892, column: 53, scope: !1115)
!1134 = !DILocation(line: 892, column: 64, scope: !1115)
!1135 = !DILocation(line: 893, column: 47, scope: !1115)
!1136 = !DILocation(line: 892, column: 28, scope: !1115)
!1137 = !DILocation(line: 895, column: 8, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1115, file: !175, line: 895, column: 8)
!1139 = !DILocation(line: 895, column: 14, scope: !1138)
!1140 = !DILocation(line: 895, column: 8, scope: !1115)
!1141 = !DILocation(line: 896, column: 30, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1143, file: !175, line: 896, column: 11)
!1143 = distinct !DILexicalBlock(scope: !1138, file: !175, line: 895, column: 22)
!1144 = !DILocation(line: 896, column: 37, scope: !1142)
!1145 = !DILocation(line: 896, column: 43, scope: !1142)
!1146 = !DILocation(line: 896, column: 52, scope: !1142)
!1147 = !DILocation(line: 896, column: 11, scope: !1142)
!1148 = !DILocation(line: 896, column: 62, scope: !1142)
!1149 = !DILocation(line: 897, column: 32, scope: !1142)
!1150 = !DILocation(line: 897, column: 39, scope: !1142)
!1151 = !DILocation(line: 897, column: 50, scope: !1142)
!1152 = !DILocation(line: 897, column: 62, scope: !1142)
!1153 = !DILocation(line: 897, column: 11, scope: !1142)
!1154 = !DILocation(line: 896, column: 11, scope: !1155)
!1155 = !DILexicalBlockFile(scope: !1143, file: !175, discriminator: 1)
!1156 = !DILocation(line: 898, column: 17, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !1142, file: !175, line: 897, column: 73)
!1158 = !DILocation(line: 898, column: 10, scope: !1157)
!1159 = !DILocation(line: 900, column: 4, scope: !1143)
!1160 = !DILocation(line: 902, column: 4, scope: !1115)
!1161 = !DILocation(line: 903, column: 1, scope: !1115)
!1162 = distinct !DISubprogram(name: "VMCISock_ReleaseAFValueFd", scope: !155, file: !155, line: 772, type: !1163, isLocal: true, isDefinition: true, scopeLine: 773, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{null, !165}
!1165 = !DILocalVariable(name: "fd", arg: 1, scope: !1162, file: !155, line: 772, type: !165)
!1166 = !DILocation(line: 772, column: 53, scope: !1162)
!1167 = !DILocation(line: 774, column: 11, scope: !1168)
!1168 = distinct !DILexicalBlock(scope: !1162, file: !155, line: 774, column: 11)
!1169 = !DILocation(line: 774, column: 14, scope: !1168)
!1170 = !DILocation(line: 774, column: 11, scope: !1162)
!1171 = !DILocation(line: 775, column: 16, scope: !1172)
!1172 = distinct !DILexicalBlock(scope: !1168, file: !155, line: 774, column: 20)
!1173 = !DILocation(line: 775, column: 10, scope: !1172)
!1174 = !DILocation(line: 776, column: 7, scope: !1172)
!1175 = !DILocation(line: 777, column: 4, scope: !1162)
!1176 = distinct !DISubprogram(name: "AsyncSocket_Connect", scope: !175, file: !175, line: 1732, type: !1177, isLocal: false, isDefinition: true, scopeLine: 1739, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!213, !260, !85, !401, !80, !1179, !478, !342}
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "AsyncSocketConnectFlags", file: !4, line: 144, baseType: !15)
!1180 = !DILocalVariable(name: "hostname", arg: 1, scope: !1176, file: !175, line: 1732, type: !260)
!1181 = !DILocation(line: 1732, column: 33, scope: !1176)
!1182 = !DILocalVariable(name: "port", arg: 2, scope: !1176, file: !175, line: 1733, type: !85)
!1183 = !DILocation(line: 1733, column: 34, scope: !1176)
!1184 = !DILocalVariable(name: "connectFn", arg: 3, scope: !1176, file: !175, line: 1734, type: !401)
!1185 = !DILocation(line: 1734, column: 42, scope: !1176)
!1186 = !DILocalVariable(name: "clientData", arg: 4, scope: !1176, file: !175, line: 1735, type: !80)
!1187 = !DILocation(line: 1735, column: 27, scope: !1176)
!1188 = !DILocalVariable(name: "flags", arg: 5, scope: !1176, file: !175, line: 1736, type: !1179)
!1189 = !DILocation(line: 1736, column: 45, scope: !1176)
!1190 = !DILocalVariable(name: "pollParams", arg: 6, scope: !1176, file: !175, line: 1737, type: !478)
!1191 = !DILocation(line: 1737, column: 44, scope: !1176)
!1192 = !DILocalVariable(name: "outError", arg: 7, scope: !1176, file: !175, line: 1738, type: !342)
!1193 = !DILocation(line: 1738, column: 26, scope: !1176)
!1194 = !DILocalVariable(name: "error", scope: !1176, file: !175, line: 1740, type: !165)
!1195 = !DILocation(line: 1740, column: 8, scope: !1176)
!1196 = !DILocalVariable(name: "asock", scope: !1176, file: !175, line: 1741, type: !173)
!1197 = !DILocation(line: 1741, column: 20, scope: !1176)
!1198 = !DILocation(line: 1743, column: 9, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !1176, file: !175, line: 1743, column: 8)
!1200 = !DILocation(line: 1743, column: 19, scope: !1199)
!1201 = !DILocation(line: 1743, column: 23, scope: !1202)
!1202 = !DILexicalBlockFile(scope: !1199, file: !175, discriminator: 1)
!1203 = !DILocation(line: 1743, column: 8, scope: !1202)
!1204 = !DILocation(line: 1744, column: 13, scope: !1205)
!1205 = distinct !DILexicalBlock(scope: !1199, file: !175, line: 1743, column: 33)
!1206 = !DILocation(line: 1745, column: 7, scope: !1205)
!1207 = !DILocation(line: 1746, column: 1, scope: !1205)
!1208 = !DILocation(line: 1747, column: 7, scope: !1205)
!1209 = !DILocation(line: 1749, column: 46, scope: !1176)
!1210 = !DILocation(line: 1749, column: 56, scope: !1176)
!1211 = !DILocation(line: 1749, column: 62, scope: !1176)
!1212 = !DILocation(line: 1750, column: 35, scope: !1176)
!1213 = !DILocation(line: 1750, column: 47, scope: !1176)
!1214 = !DILocation(line: 1750, column: 54, scope: !1176)
!1215 = !DILocation(line: 1750, column: 12, scope: !1176)
!1216 = !DILocation(line: 1750, column: 10, scope: !1176)
!1217 = !DILocation(line: 1751, column: 9, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1176, file: !175, line: 1751, column: 8)
!1219 = !DILocation(line: 1751, column: 8, scope: !1176)
!1220 = !DILocation(line: 1752, column: 50, scope: !1221)
!1221 = distinct !DILexicalBlock(scope: !1218, file: !175, line: 1751, column: 16)
!1222 = !DILocation(line: 1752, column: 60, scope: !1221)
!1223 = !DILocation(line: 1752, column: 66, scope: !1221)
!1224 = !DILocation(line: 1753, column: 38, scope: !1221)
!1225 = !DILocation(line: 1753, column: 50, scope: !1221)
!1226 = !DILocation(line: 1753, column: 57, scope: !1221)
!1227 = !DILocation(line: 1752, column: 15, scope: !1221)
!1228 = !DILocation(line: 1752, column: 13, scope: !1221)
!1229 = !DILocation(line: 1754, column: 4, scope: !1221)
!1230 = !DILocation(line: 1751, column: 9, scope: !1231)
!1231 = !DILexicalBlockFile(scope: !1218, file: !175, discriminator: 1)
!1232 = !DILocation(line: 1757, column: 9, scope: !1233)
!1233 = distinct !DILexicalBlock(scope: !1176, file: !175, line: 1757, column: 8)
!1234 = !DILocation(line: 1757, column: 15, scope: !1233)
!1235 = !DILocation(line: 1757, column: 18, scope: !1236)
!1236 = !DILexicalBlockFile(scope: !1233, file: !175, discriminator: 1)
!1237 = !DILocation(line: 1757, column: 8, scope: !1236)
!1238 = !DILocation(line: 1758, column: 19, scope: !1239)
!1239 = distinct !DILexicalBlock(scope: !1233, file: !175, line: 1757, column: 28)
!1240 = !DILocation(line: 1758, column: 8, scope: !1239)
!1241 = !DILocation(line: 1758, column: 17, scope: !1239)
!1242 = !DILocation(line: 1759, column: 4, scope: !1239)
!1243 = !DILocation(line: 1761, column: 22, scope: !1176)
!1244 = !DILocation(line: 1761, column: 11, scope: !1176)
!1245 = !DILocation(line: 1761, column: 4, scope: !1176)
!1246 = distinct !DISubprogram(name: "AsyncTCPSocketConnectImpl", scope: !175, file: !175, line: 1657, type: !1247, isLocal: true, isDefinition: true, scopeLine: 1665, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!173, !165, !260, !85, !401, !80, !1179, !478, !342}
!1249 = !DILocalVariable(name: "socketFamily", arg: 1, scope: !1246, file: !175, line: 1657, type: !165)
!1250 = !DILocation(line: 1657, column: 31, scope: !1246)
!1251 = !DILocalVariable(name: "hostname", arg: 2, scope: !1246, file: !175, line: 1658, type: !260)
!1252 = !DILocation(line: 1658, column: 39, scope: !1246)
!1253 = !DILocalVariable(name: "port", arg: 3, scope: !1246, file: !175, line: 1659, type: !85)
!1254 = !DILocation(line: 1659, column: 40, scope: !1246)
!1255 = !DILocalVariable(name: "connectFn", arg: 4, scope: !1246, file: !175, line: 1660, type: !401)
!1256 = !DILocation(line: 1660, column: 48, scope: !1246)
!1257 = !DILocalVariable(name: "clientData", arg: 5, scope: !1246, file: !175, line: 1661, type: !80)
!1258 = !DILocation(line: 1661, column: 33, scope: !1246)
!1259 = !DILocalVariable(name: "flags", arg: 6, scope: !1246, file: !175, line: 1662, type: !1179)
!1260 = !DILocation(line: 1662, column: 51, scope: !1246)
!1261 = !DILocalVariable(name: "pollParams", arg: 7, scope: !1246, file: !175, line: 1663, type: !478)
!1262 = !DILocation(line: 1663, column: 50, scope: !1246)
!1263 = !DILocalVariable(name: "outError", arg: 8, scope: !1246, file: !175, line: 1664, type: !342)
!1264 = !DILocation(line: 1664, column: 32, scope: !1246)
!1265 = !DILocalVariable(name: "addr", scope: !1246, file: !175, line: 1666, type: !87)
!1266 = !DILocation(line: 1666, column: 28, scope: !1246)
!1267 = !DILocalVariable(name: "getaddrinfoError", scope: !1246, file: !175, line: 1667, type: !165)
!1268 = !DILocation(line: 1667, column: 8, scope: !1246)
!1269 = !DILocalVariable(name: "error", scope: !1246, file: !175, line: 1668, type: !165)
!1270 = !DILocation(line: 1668, column: 8, scope: !1246)
!1271 = !DILocalVariable(name: "asock", scope: !1246, file: !175, line: 1669, type: !173)
!1272 = !DILocation(line: 1669, column: 20, scope: !1246)
!1273 = !DILocalVariable(name: "ipString", scope: !1246, file: !175, line: 1670, type: !267)
!1274 = !DILocation(line: 1670, column: 10, scope: !1246)
!1275 = !DILocalVariable(name: "addrLen", scope: !1246, file: !175, line: 1671, type: !242)
!1276 = !DILocation(line: 1671, column: 14, scope: !1246)
!1277 = !DILocation(line: 1677, column: 49, scope: !1246)
!1278 = !DILocation(line: 1677, column: 59, scope: !1246)
!1279 = !DILocation(line: 1677, column: 65, scope: !1246)
!1280 = !DILocation(line: 1677, column: 23, scope: !1246)
!1281 = !DILocation(line: 1677, column: 21, scope: !1246)
!1282 = !DILocation(line: 1680, column: 13, scope: !1283)
!1283 = distinct !DILexicalBlock(scope: !1246, file: !175, line: 1680, column: 8)
!1284 = !DILocation(line: 1680, column: 10, scope: !1283)
!1285 = !DILocation(line: 1680, column: 8, scope: !1246)
!1286 = !DILocation(line: 1682, column: 11, scope: !1287)
!1287 = distinct !DILexicalBlock(scope: !1283, file: !175, line: 1680, column: 31)
!1288 = !DILocation(line: 1682, column: 24, scope: !1287)
!1289 = !DILocation(line: 1682, column: 53, scope: !1287)
!1290 = !DILocation(line: 1682, column: 63, scope: !1287)
!1291 = !DILocation(line: 1681, column: 7, scope: !1287)
!1292 = !DILocation(line: 1683, column: 13, scope: !1287)
!1293 = !DILocation(line: 1684, column: 1, scope: !1287)
!1294 = !DILocation(line: 1685, column: 7, scope: !1287)
!1295 = !DILocation(line: 1689, column: 8, scope: !1246)
!1296 = !DILocation(line: 1689, column: 21, scope: !1246)
!1297 = !DILocation(line: 1688, column: 50, scope: !1246)
!1298 = !DILocation(line: 1688, column: 60, scope: !1246)
!1299 = !DILocation(line: 1688, column: 4, scope: !1246)
!1300 = !DILocation(line: 1689, column: 9, scope: !1246)
!1301 = !DILocation(line: 1689, column: 4, scope: !1246)
!1302 = !DILocation(line: 1691, column: 41, scope: !1246)
!1303 = !DILocation(line: 1691, column: 50, scope: !1246)
!1304 = !DILocation(line: 1691, column: 61, scope: !1246)
!1305 = !DILocation(line: 1692, column: 34, scope: !1246)
!1306 = !DILocation(line: 1692, column: 41, scope: !1246)
!1307 = !DILocation(line: 1691, column: 12, scope: !1246)
!1308 = !DILocation(line: 1691, column: 10, scope: !1246)
!1309 = !DILocation(line: 1693, column: 9, scope: !1310)
!1310 = distinct !DILexicalBlock(scope: !1246, file: !175, line: 1693, column: 8)
!1311 = !DILocation(line: 1693, column: 8, scope: !1246)
!1312 = !DILocation(line: 1695, column: 15, scope: !1313)
!1313 = distinct !DILexicalBlock(scope: !1310, file: !175, line: 1693, column: 16)
!1314 = !DILocation(line: 1695, column: 28, scope: !1313)
!1315 = !DILocation(line: 1696, column: 36, scope: !1313)
!1316 = !DILocation(line: 1696, column: 15, scope: !1313)
!1317 = !DILocation(line: 1694, column: 7, scope: !1313)
!1318 = !DILocation(line: 1697, column: 1, scope: !1313)
!1319 = !DILocation(line: 1698, column: 7, scope: !1313)
!1320 = !DILocation(line: 1701, column: 11, scope: !1246)
!1321 = !DILocation(line: 1701, column: 4, scope: !1246)
!1322 = !DILocation(line: 1704, column: 8, scope: !1323)
!1323 = distinct !DILexicalBlock(scope: !1246, file: !175, line: 1704, column: 8)
!1324 = !DILocation(line: 1704, column: 8, scope: !1246)
!1325 = !DILocation(line: 1705, column: 19, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1323, file: !175, line: 1704, column: 18)
!1327 = !DILocation(line: 1705, column: 8, scope: !1326)
!1328 = !DILocation(line: 1705, column: 17, scope: !1326)
!1329 = !DILocation(line: 1706, column: 4, scope: !1326)
!1330 = !DILocation(line: 1708, column: 4, scope: !1246)
!1331 = !DILocation(line: 1708, column: 1, scope: !1332)
!1332 = !DILexicalBlockFile(scope: !1246, file: !175, discriminator: 1)
!1333 = distinct !DISubprogram(name: "AsyncSocket_ConnectVMCI", scope: !175, file: !175, line: 1784, type: !1334, isLocal: false, isDefinition: true, scopeLine: 1791, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!213, !85, !85, !401, !80, !1179, !478, !342}
!1336 = !DILocalVariable(name: "cid", arg: 1, scope: !1333, file: !175, line: 1784, type: !85)
!1337 = !DILocation(line: 1784, column: 38, scope: !1333)
!1338 = !DILocalVariable(name: "port", arg: 2, scope: !1333, file: !175, line: 1785, type: !85)
!1339 = !DILocation(line: 1785, column: 38, scope: !1333)
!1340 = !DILocalVariable(name: "connectFn", arg: 3, scope: !1333, file: !175, line: 1786, type: !401)
!1341 = !DILocation(line: 1786, column: 46, scope: !1333)
!1342 = !DILocalVariable(name: "clientData", arg: 4, scope: !1333, file: !175, line: 1787, type: !80)
!1343 = !DILocation(line: 1787, column: 31, scope: !1333)
!1344 = !DILocalVariable(name: "flags", arg: 5, scope: !1333, file: !175, line: 1788, type: !1179)
!1345 = !DILocation(line: 1788, column: 49, scope: !1333)
!1346 = !DILocalVariable(name: "pollParams", arg: 6, scope: !1333, file: !175, line: 1789, type: !478)
!1347 = !DILocation(line: 1789, column: 48, scope: !1333)
!1348 = !DILocalVariable(name: "outError", arg: 7, scope: !1333, file: !175, line: 1790, type: !342)
!1349 = !DILocation(line: 1790, column: 30, scope: !1333)
!1350 = !DILocalVariable(name: "vsockDev", scope: !1333, file: !175, line: 1792, type: !165)
!1351 = !DILocation(line: 1792, column: 8, scope: !1333)
!1352 = !DILocalVariable(name: "addr", scope: !1333, file: !175, line: 1793, type: !154)
!1353 = !DILocation(line: 1793, column: 23, scope: !1333)
!1354 = !DILocalVariable(name: "asock", scope: !1333, file: !175, line: 1794, type: !173)
!1355 = !DILocation(line: 1794, column: 20, scope: !1333)
!1356 = !DILocation(line: 1796, column: 4, scope: !1333)
!1357 = !DILocation(line: 1797, column: 22, scope: !1333)
!1358 = !DILocation(line: 1797, column: 9, scope: !1333)
!1359 = !DILocation(line: 1797, column: 20, scope: !1333)
!1360 = !DILocation(line: 1798, column: 19, scope: !1333)
!1361 = !DILocation(line: 1798, column: 9, scope: !1333)
!1362 = !DILocation(line: 1798, column: 17, scope: !1333)
!1363 = !DILocation(line: 1799, column: 20, scope: !1333)
!1364 = !DILocation(line: 1799, column: 9, scope: !1333)
!1365 = !DILocation(line: 1799, column: 18, scope: !1333)
!1366 = !DILocation(line: 1801, column: 64, scope: !1333)
!1367 = !DILocation(line: 1801, column: 69, scope: !1333)
!1368 = !DILocation(line: 1801, column: 4, scope: !1333)
!1369 = !DILocation(line: 1803, column: 34, scope: !1333)
!1370 = !DILocation(line: 1804, column: 47, scope: !1333)
!1371 = !DILocation(line: 1804, column: 58, scope: !1333)
!1372 = !DILocation(line: 1805, column: 34, scope: !1333)
!1373 = !DILocation(line: 1805, column: 41, scope: !1333)
!1374 = !DILocation(line: 1805, column: 53, scope: !1333)
!1375 = !DILocation(line: 1803, column: 12, scope: !1333)
!1376 = !DILocation(line: 1803, column: 10, scope: !1333)
!1377 = !DILocation(line: 1807, column: 30, scope: !1333)
!1378 = !DILocation(line: 1807, column: 4, scope: !1333)
!1379 = !DILocation(line: 1808, column: 22, scope: !1333)
!1380 = !DILocation(line: 1808, column: 11, scope: !1333)
!1381 = !DILocation(line: 1808, column: 4, scope: !1333)
!1382 = distinct !DISubprogram(name: "AsyncTCPSocketConnect", scope: !175, file: !175, line: 1940, type: !1383, isLocal: true, isDefinition: true, scopeLine: 1947, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{!173, !86, !242, !401, !80, !1179, !478, !342}
!1385 = !DILocalVariable(name: "addr", arg: 1, scope: !1382, file: !175, line: 1940, type: !86)
!1386 = !DILocation(line: 1940, column: 48, scope: !1382)
!1387 = !DILocalVariable(name: "addrLen", arg: 2, scope: !1382, file: !175, line: 1941, type: !242)
!1388 = !DILocation(line: 1941, column: 33, scope: !1382)
!1389 = !DILocalVariable(name: "connectFn", arg: 3, scope: !1382, file: !175, line: 1942, type: !401)
!1390 = !DILocation(line: 1942, column: 44, scope: !1382)
!1391 = !DILocalVariable(name: "clientData", arg: 4, scope: !1382, file: !175, line: 1943, type: !80)
!1392 = !DILocation(line: 1943, column: 29, scope: !1382)
!1393 = !DILocalVariable(name: "flags", arg: 5, scope: !1382, file: !175, line: 1944, type: !1179)
!1394 = !DILocation(line: 1944, column: 47, scope: !1382)
!1395 = !DILocalVariable(name: "pollParams", arg: 6, scope: !1382, file: !175, line: 1945, type: !478)
!1396 = !DILocation(line: 1945, column: 46, scope: !1382)
!1397 = !DILocalVariable(name: "outError", arg: 7, scope: !1382, file: !175, line: 1946, type: !342)
!1398 = !DILocation(line: 1946, column: 28, scope: !1382)
!1399 = !DILocalVariable(name: "fd", scope: !1382, file: !175, line: 1948, type: !165)
!1400 = !DILocation(line: 1948, column: 8, scope: !1382)
!1401 = !DILocalVariable(name: "pollStatus", scope: !1382, file: !175, line: 1949, type: !1402)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "VMwareStatus", file: !60, line: 91, baseType: !59)
!1403 = !DILocation(line: 1949, column: 17, scope: !1382)
!1404 = !DILocalVariable(name: "asock", scope: !1382, file: !175, line: 1950, type: !173)
!1405 = !DILocation(line: 1950, column: 20, scope: !1382)
!1406 = !DILocalVariable(name: "error", scope: !1382, file: !175, line: 1951, type: !165)
!1407 = !DILocation(line: 1951, column: 8, scope: !1382)
!1408 = !DILocalVariable(name: "sysErr", scope: !1382, file: !175, line: 1952, type: !165)
!1409 = !DILocation(line: 1952, column: 8, scope: !1382)
!1410 = !DILocation(line: 1956, column: 9, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !1382, file: !175, line: 1956, column: 8)
!1412 = !DILocation(line: 1956, column: 8, scope: !1382)
!1413 = !DILocation(line: 1957, column: 13, scope: !1414)
!1414 = distinct !DILexicalBlock(scope: !1411, file: !175, line: 1956, column: 20)
!1415 = !DILocation(line: 1958, column: 7, scope: !1414)
!1416 = !DILocation(line: 1959, column: 1, scope: !1414)
!1417 = !DILocation(line: 1960, column: 7, scope: !1414)
!1418 = !DILocation(line: 1966, column: 21, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1382, file: !175, line: 1966, column: 8)
!1420 = !DILocation(line: 1966, column: 27, scope: !1419)
!1421 = !DILocation(line: 1966, column: 14, scope: !1419)
!1422 = !DILocation(line: 1966, column: 12, scope: !1419)
!1423 = !DILocation(line: 1965, column: 54, scope: !1419)
!1424 = !DILocation(line: 1966, column: 8, scope: !1382)
!1425 = !DILocation(line: 1966, column: 17, scope: !1426)
!1426 = !DILexicalBlockFile(scope: !1427, file: !175, discriminator: 1)
!1427 = distinct !DILexicalBlock(scope: !1419, file: !175, line: 1965, column: 61)
!1428 = !DILocation(line: 1966, column: 16, scope: !1426)
!1429 = !DILocation(line: 1966, column: 14, scope: !1426)
!1430 = !DILocation(line: 1968, column: 15, scope: !1427)
!1431 = !DILocation(line: 1968, column: 40, scope: !1427)
!1432 = !DILocation(line: 1968, column: 23, scope: !1427)
!1433 = !DILocation(line: 1967, column: 7, scope: !1427)
!1434 = !DILocation(line: 1969, column: 13, scope: !1427)
!1435 = !DILocation(line: 1970, column: 1, scope: !1427)
!1436 = !DILocation(line: 1971, column: 7, scope: !1427)
!1437 = !DILocation(line: 1978, column: 42, scope: !1438)
!1438 = distinct !DILexicalBlock(scope: !1382, file: !175, line: 1978, column: 8)
!1439 = !DILocation(line: 1978, column: 46, scope: !1438)
!1440 = !DILocation(line: 1978, column: 17, scope: !1438)
!1441 = !DILocation(line: 1978, column: 15, scope: !1438)
!1442 = !DILocation(line: 1978, column: 67, scope: !1438)
!1443 = !DILocation(line: 1978, column: 8, scope: !1382)
!1444 = !DILocation(line: 1978, column: 13, scope: !1445)
!1445 = !DILexicalBlockFile(scope: !1446, file: !175, discriminator: 1)
!1446 = distinct !DILexicalBlock(scope: !1438, file: !175, line: 1977, column: 75)
!1447 = !DILocation(line: 1978, column: 7, scope: !1445)
!1448 = !DILocation(line: 1979, column: 1, scope: !1446)
!1449 = !DILocation(line: 1980, column: 7, scope: !1446)
!1450 = !DILocation(line: 1993, column: 23, scope: !1382)
!1451 = !DILocation(line: 1993, column: 4, scope: !1382)
!1452 = !DILocation(line: 1994, column: 16, scope: !1453)
!1453 = distinct !DILexicalBlock(scope: !1382, file: !175, line: 1994, column: 8)
!1454 = !DILocation(line: 1994, column: 23, scope: !1453)
!1455 = !DILocation(line: 1994, column: 46, scope: !1453)
!1456 = !DILocation(line: 1994, column: 27, scope: !1453)
!1457 = !DILocation(line: 1994, column: 52, scope: !1453)
!1458 = !DILocation(line: 1994, column: 8, scope: !1453)
!1459 = !DILocation(line: 1994, column: 61, scope: !1453)
!1460 = !DILocation(line: 1994, column: 8, scope: !1382)
!1461 = !DILocation(line: 1995, column: 12, scope: !1462)
!1462 = distinct !DILexicalBlock(scope: !1463, file: !175, line: 1995, column: 10)
!1463 = distinct !DILexicalBlock(scope: !1453, file: !175, line: 1994, column: 67)
!1464 = !DILocation(line: 1995, column: 11, scope: !1462)
!1465 = !DILocation(line: 1995, column: 28, scope: !1462)
!1466 = !DILocation(line: 1995, column: 10, scope: !1463)
!1467 = !DILocation(line: 1997, column: 10, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1462, file: !175, line: 1995, column: 50)
!1469 = distinct !{!1469, !1467}
!1470 = !DILocation(line: 1997, column: 204, scope: !1471)
!1471 = !DILexicalBlockFile(scope: !1472, file: !175, discriminator: 1)
!1472 = distinct !DILexicalBlock(scope: !1468, file: !175, line: 1997, column: 13)
!1473 = !DILocation(line: 1999, column: 45, scope: !1468)
!1474 = !DILocation(line: 1999, column: 23, scope: !1468)
!1475 = !DILocation(line: 1999, column: 21, scope: !1468)
!1476 = !DILocation(line: 2018, column: 7, scope: !1468)
!1477 = !DILocation(line: 2019, column: 20, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1462, file: !175, line: 2018, column: 14)
!1479 = !DILocation(line: 2019, column: 19, scope: !1478)
!1480 = !DILocation(line: 2019, column: 17, scope: !1478)
!1481 = !DILocation(line: 2021, column: 14, scope: !1478)
!1482 = !DILocation(line: 2021, column: 39, scope: !1478)
!1483 = !DILocation(line: 2021, column: 22, scope: !1478)
!1484 = !DILocation(line: 2020, column: 10, scope: !1478)
!1485 = !DILocation(line: 2027, column: 19, scope: !1478)
!1486 = !DILocation(line: 2027, column: 26, scope: !1478)
!1487 = !DILocation(line: 2027, column: 18, scope: !1478)
!1488 = !DILocation(line: 2027, column: 16, scope: !1478)
!1489 = !DILocation(line: 2029, column: 1, scope: !1478)
!1490 = !DILocation(line: 2030, column: 10, scope: !1478)
!1491 = !DILocation(line: 2032, column: 4, scope: !1463)
!1492 = !DILocation(line: 2033, column: 7, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1453, file: !175, line: 2032, column: 11)
!1494 = distinct !{!1494, !1492}
!1495 = !DILocation(line: 2033, column: 212, scope: !1496)
!1496 = !DILexicalBlockFile(scope: !1497, file: !175, discriminator: 1)
!1497 = distinct !DILexicalBlock(scope: !1493, file: !175, line: 2033, column: 10)
!1498 = !DILocation(line: 2035, column: 42, scope: !1493)
!1499 = !DILocation(line: 2035, column: 20, scope: !1493)
!1500 = !DILocation(line: 2035, column: 18, scope: !1493)
!1501 = !DILocation(line: 2039, column: 8, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1382, file: !175, line: 2039, column: 8)
!1503 = !DILocation(line: 2039, column: 19, scope: !1502)
!1504 = !DILocation(line: 2039, column: 8, scope: !1382)
!1505 = !DILocation(line: 2040, column: 7, scope: !1506)
!1506 = distinct !DILexicalBlock(scope: !1502, file: !175, line: 2039, column: 45)
!1507 = distinct !{!1507, !1505}
!1508 = !DILocation(line: 2040, column: 71, scope: !1509)
!1509 = !DILexicalBlockFile(scope: !1510, file: !175, discriminator: 1)
!1510 = distinct !DILexicalBlock(scope: !1506, file: !175, line: 2040, column: 10)
!1511 = !DILocation(line: 2040, column: 60, scope: !1509)
!1512 = !DILocation(line: 2040, column: 42, scope: !1513)
!1513 = !DILexicalBlockFile(scope: !1509, file: !175, discriminator: 2)
!1514 = !DILocation(line: 2040, column: 109, scope: !1509)
!1515 = !DILocation(line: 2040, column: 98, scope: !1516)
!1516 = !DILexicalBlockFile(scope: !1509, file: !175, discriminator: 3)
!1517 = !DILocation(line: 2040, column: 80, scope: !1518)
!1518 = !DILexicalBlockFile(scope: !1509, file: !175, discriminator: 4)
!1519 = !DILocation(line: 2040, column: 12, scope: !1520)
!1520 = !DILexicalBlockFile(scope: !1509, file: !175, discriminator: 5)
!1521 = !DILocation(line: 2040, column: 119, scope: !1522)
!1522 = !DILexicalBlockFile(scope: !1509, file: !175, discriminator: 6)
!1523 = !DILocation(line: 2040, column: 174, scope: !1509)
!1524 = !DILocation(line: 2041, column: 13, scope: !1506)
!1525 = !DILocation(line: 2042, column: 1, scope: !1506)
!1526 = !DILocation(line: 2043, column: 7, scope: !1506)
!1527 = !DILocation(line: 2046, column: 27, scope: !1382)
!1528 = !DILocation(line: 2046, column: 4, scope: !1382)
!1529 = !DILocation(line: 2047, column: 23, scope: !1382)
!1530 = !DILocation(line: 2047, column: 4, scope: !1382)
!1531 = !DILocation(line: 2047, column: 11, scope: !1382)
!1532 = !DILocation(line: 2047, column: 21, scope: !1382)
!1533 = !DILocation(line: 2048, column: 24, scope: !1382)
!1534 = !DILocation(line: 2048, column: 4, scope: !1382)
!1535 = !DILocation(line: 2048, column: 11, scope: !1382)
!1536 = !DILocation(line: 2048, column: 22, scope: !1382)
!1537 = !DILocation(line: 2051, column: 13, scope: !1382)
!1538 = !DILocation(line: 2051, column: 20, scope: !1382)
!1539 = !DILocation(line: 2051, column: 4, scope: !1382)
!1540 = !DILocation(line: 2051, column: 33, scope: !1382)
!1541 = !DILocation(line: 2051, column: 39, scope: !1382)
!1542 = !DILocation(line: 2052, column: 27, scope: !1382)
!1543 = !DILocation(line: 2052, column: 4, scope: !1382)
!1544 = !DILocation(line: 2052, column: 11, scope: !1382)
!1545 = !DILocation(line: 2052, column: 25, scope: !1382)
!1546 = !DILocation(line: 2054, column: 25, scope: !1382)
!1547 = !DILocation(line: 2054, column: 4, scope: !1382)
!1548 = !DILocation(line: 2056, column: 11, scope: !1382)
!1549 = !DILocation(line: 2056, column: 4, scope: !1382)
!1550 = !DILocation(line: 2059, column: 17, scope: !1382)
!1551 = !DILocation(line: 2059, column: 24, scope: !1382)
!1552 = !DILocation(line: 2059, column: 4, scope: !1382)
!1553 = !DILocation(line: 2060, column: 25, scope: !1382)
!1554 = !DILocation(line: 2060, column: 4, scope: !1382)
!1555 = !DILocation(line: 2061, column: 9, scope: !1382)
!1556 = !DILocation(line: 2061, column: 4, scope: !1382)
!1557 = !DILocation(line: 2064, column: 8, scope: !1558)
!1558 = distinct !DILexicalBlock(scope: !1382, file: !175, line: 2064, column: 8)
!1559 = !DILocation(line: 2064, column: 8, scope: !1382)
!1560 = !DILocation(line: 2065, column: 19, scope: !1561)
!1561 = distinct !DILexicalBlock(scope: !1558, file: !175, line: 2064, column: 18)
!1562 = !DILocation(line: 2065, column: 8, scope: !1561)
!1563 = !DILocation(line: 2065, column: 17, scope: !1561)
!1564 = !DILocation(line: 2066, column: 4, scope: !1561)
!1565 = !DILocation(line: 2068, column: 4, scope: !1382)
!1566 = !DILocation(line: 2067, column: 1, scope: !1382)
!1567 = distinct !DISubprogram(name: "AsyncSocket_ConnectUnixDomain", scope: !175, file: !175, line: 1832, type: !1568, isLocal: false, isDefinition: true, scopeLine: 1838, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!213, !260, !401, !80, !1179, !478, !342}
!1570 = !DILocalVariable(name: "path", arg: 1, scope: !1567, file: !175, line: 1832, type: !260)
!1571 = !DILocation(line: 1832, column: 43, scope: !1567)
!1572 = !DILocalVariable(name: "connectFn", arg: 2, scope: !1567, file: !175, line: 1833, type: !401)
!1573 = !DILocation(line: 1833, column: 52, scope: !1567)
!1574 = !DILocalVariable(name: "clientData", arg: 3, scope: !1567, file: !175, line: 1834, type: !80)
!1575 = !DILocation(line: 1834, column: 37, scope: !1567)
!1576 = !DILocalVariable(name: "flags", arg: 4, scope: !1567, file: !175, line: 1835, type: !1179)
!1577 = !DILocation(line: 1835, column: 55, scope: !1567)
!1578 = !DILocalVariable(name: "pollParams", arg: 5, scope: !1567, file: !175, line: 1836, type: !478)
!1579 = !DILocation(line: 1836, column: 54, scope: !1567)
!1580 = !DILocalVariable(name: "outError", arg: 6, scope: !1567, file: !175, line: 1837, type: !342)
!1581 = !DILocation(line: 1837, column: 36, scope: !1567)
!1582 = !DILocalVariable(name: "addr", scope: !1567, file: !175, line: 1839, type: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_un", file: !1584, line: 29, size: 880, align: 16, elements: !1585)
!1584 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/un.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "sun_family", scope: !1583, file: !1584, line: 31, baseType: !91, size: 16, align: 16)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "sun_path", scope: !1583, file: !1584, line: 32, baseType: !1588, size: 864, align: 8, offset: 16)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 864, align: 8, elements: !1589)
!1589 = !{!1590}
!1590 = !DISubrange(count: 108)
!1591 = !DILocation(line: 1839, column: 23, scope: !1567)
!1592 = !DILocalVariable(name: "asock", scope: !1567, file: !175, line: 1840, type: !173)
!1593 = !DILocation(line: 1840, column: 20, scope: !1567)
!1594 = !DILocation(line: 1842, column: 4, scope: !1567)
!1595 = !DILocation(line: 1843, column: 9, scope: !1567)
!1596 = !DILocation(line: 1843, column: 20, scope: !1567)
!1597 = !DILocation(line: 1845, column: 15, scope: !1598)
!1598 = distinct !DILexicalBlock(scope: !1567, file: !175, line: 1845, column: 8)
!1599 = !DILocation(line: 1845, column: 8, scope: !1598)
!1600 = !DILocation(line: 1845, column: 21, scope: !1598)
!1601 = !DILocation(line: 1845, column: 25, scope: !1598)
!1602 = !DILocation(line: 1845, column: 8, scope: !1567)
!1603 = !DILocation(line: 1846, column: 78, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !1598, file: !175, line: 1845, column: 49)
!1605 = !DILocation(line: 1846, column: 7, scope: !1604)
!1606 = !DILocation(line: 1847, column: 7, scope: !1604)
!1607 = !DILocation(line: 1849, column: 20, scope: !1567)
!1608 = !DILocation(line: 1849, column: 15, scope: !1567)
!1609 = !DILocation(line: 1849, column: 30, scope: !1567)
!1610 = !DILocation(line: 1849, column: 4, scope: !1567)
!1611 = !DILocation(line: 1851, column: 61, scope: !1567)
!1612 = !DILocation(line: 1851, column: 4, scope: !1567)
!1613 = !DILocation(line: 1853, column: 34, scope: !1567)
!1614 = !DILocation(line: 1854, column: 44, scope: !1567)
!1615 = !DILocation(line: 1854, column: 55, scope: !1567)
!1616 = !DILocation(line: 1855, column: 31, scope: !1567)
!1617 = !DILocation(line: 1855, column: 38, scope: !1567)
!1618 = !DILocation(line: 1855, column: 50, scope: !1567)
!1619 = !DILocation(line: 1853, column: 12, scope: !1567)
!1620 = !DILocation(line: 1853, column: 10, scope: !1567)
!1621 = !DILocation(line: 1857, column: 22, scope: !1567)
!1622 = !DILocation(line: 1857, column: 11, scope: !1567)
!1623 = !DILocation(line: 1857, column: 4, scope: !1567)
!1624 = !DILocation(line: 1858, column: 1, scope: !1567)
!1625 = distinct !DISubprogram(name: "AsyncSocket_AttachToFd", scope: !175, file: !175, line: 2238, type: !1626, isLocal: false, isDefinition: true, scopeLine: 2241, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!213, !165, !478, !342}
!1628 = !DILocalVariable(name: "fd", arg: 1, scope: !1625, file: !175, line: 2238, type: !165)
!1629 = !DILocation(line: 2238, column: 28, scope: !1625)
!1630 = !DILocalVariable(name: "pollParams", arg: 2, scope: !1625, file: !175, line: 2239, type: !478)
!1631 = !DILocation(line: 2239, column: 47, scope: !1625)
!1632 = !DILocalVariable(name: "outError", arg: 3, scope: !1625, file: !175, line: 2240, type: !342)
!1633 = !DILocation(line: 2240, column: 29, scope: !1625)
!1634 = !DILocalVariable(name: "asock", scope: !1625, file: !175, line: 2242, type: !173)
!1635 = !DILocation(line: 2242, column: 20, scope: !1625)
!1636 = !DILocation(line: 2243, column: 37, scope: !1625)
!1637 = !DILocation(line: 2243, column: 41, scope: !1625)
!1638 = !DILocation(line: 2243, column: 53, scope: !1625)
!1639 = !DILocation(line: 2243, column: 12, scope: !1625)
!1640 = !DILocation(line: 2243, column: 10, scope: !1625)
!1641 = !DILocation(line: 2244, column: 22, scope: !1625)
!1642 = !DILocation(line: 2244, column: 11, scope: !1625)
!1643 = !DILocation(line: 2244, column: 4, scope: !1625)
!1644 = distinct !DISubprogram(name: "AsyncTCPSocketAttachToFd", scope: !175, file: !175, line: 2191, type: !1645, isLocal: true, isDefinition: true, scopeLine: 2194, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!173, !165, !478, !342}
!1647 = !DILocalVariable(name: "fd", arg: 1, scope: !1644, file: !175, line: 2191, type: !165)
!1648 = !DILocation(line: 2191, column: 30, scope: !1644)
!1649 = !DILocalVariable(name: "pollParams", arg: 2, scope: !1644, file: !175, line: 2192, type: !478)
!1650 = !DILocation(line: 2192, column: 49, scope: !1644)
!1651 = !DILocalVariable(name: "outError", arg: 3, scope: !1644, file: !175, line: 2193, type: !342)
!1652 = !DILocation(line: 2193, column: 31, scope: !1644)
!1653 = !DILocalVariable(name: "sslSock", scope: !1644, file: !175, line: 2195, type: !391)
!1654 = !DILocation(line: 2195, column: 12, scope: !1644)
!1655 = !DILocalVariable(name: "asock", scope: !1644, file: !175, line: 2196, type: !173)
!1656 = !DILocation(line: 2196, column: 20, scope: !1644)
!1657 = !DILocation(line: 2202, column: 28, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1644, file: !175, line: 2202, column: 8)
!1659 = !DILocation(line: 2202, column: 20, scope: !1658)
!1660 = !DILocation(line: 2202, column: 18, scope: !1658)
!1661 = !DILocation(line: 2202, column: 8, scope: !1644)
!1662 = !DILocation(line: 2203, column: 11, scope: !1663)
!1663 = distinct !DILexicalBlock(scope: !1664, file: !175, line: 2203, column: 11)
!1664 = distinct !DILexicalBlock(scope: !1658, file: !175, line: 2202, column: 37)
!1665 = !DILocation(line: 2203, column: 11, scope: !1664)
!1666 = !DILocation(line: 2204, column: 11, scope: !1667)
!1667 = distinct !DILexicalBlock(scope: !1663, file: !175, line: 2203, column: 21)
!1668 = !DILocation(line: 2204, column: 20, scope: !1667)
!1669 = !DILocation(line: 2205, column: 7, scope: !1667)
!1670 = !DILocation(line: 2208, column: 7, scope: !1664)
!1671 = !DILocation(line: 2210, column: 42, scope: !1644)
!1672 = !DILocation(line: 2210, column: 51, scope: !1644)
!1673 = !DILocation(line: 2210, column: 63, scope: !1644)
!1674 = !DILocation(line: 2210, column: 12, scope: !1644)
!1675 = !DILocation(line: 2210, column: 10, scope: !1644)
!1676 = !DILocation(line: 2211, column: 8, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1644, file: !175, line: 2211, column: 8)
!1678 = !DILocation(line: 2211, column: 8, scope: !1644)
!1679 = !DILocation(line: 2212, column: 14, scope: !1680)
!1680 = distinct !DILexicalBlock(scope: !1677, file: !175, line: 2211, column: 15)
!1681 = !DILocation(line: 2212, column: 7, scope: !1680)
!1682 = !DILocation(line: 2214, column: 17, scope: !1644)
!1683 = !DILocation(line: 2214, column: 4, scope: !1644)
!1684 = !DILocation(line: 2216, column: 4, scope: !1644)
!1685 = !DILocation(line: 2217, column: 1, scope: !1644)
!1686 = distinct !DISubprogram(name: "AsyncSocket_AttachToSSLSock", scope: !175, file: !175, line: 2265, type: !1687, isLocal: false, isDefinition: true, scopeLine: 2268, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1687 = !DISubroutineType(types: !1688)
!1688 = !{!213, !391, !478, !342}
!1689 = !DILocalVariable(name: "sslSock", arg: 1, scope: !1686, file: !175, line: 2265, type: !391)
!1690 = !DILocation(line: 2265, column: 37, scope: !1686)
!1691 = !DILocalVariable(name: "pollParams", arg: 2, scope: !1686, file: !175, line: 2266, type: !478)
!1692 = !DILocation(line: 2266, column: 52, scope: !1686)
!1693 = !DILocalVariable(name: "outError", arg: 3, scope: !1686, file: !175, line: 2267, type: !342)
!1694 = !DILocation(line: 2267, column: 34, scope: !1686)
!1695 = !DILocalVariable(name: "asock", scope: !1686, file: !175, line: 2269, type: !173)
!1696 = !DILocation(line: 2269, column: 20, scope: !1686)
!1697 = !DILocation(line: 2270, column: 42, scope: !1686)
!1698 = !DILocation(line: 2270, column: 51, scope: !1686)
!1699 = !DILocation(line: 2270, column: 63, scope: !1686)
!1700 = !DILocation(line: 2270, column: 12, scope: !1686)
!1701 = !DILocation(line: 2270, column: 10, scope: !1686)
!1702 = !DILocation(line: 2271, column: 22, scope: !1686)
!1703 = !DILocation(line: 2271, column: 11, scope: !1686)
!1704 = !DILocation(line: 2271, column: 4, scope: !1686)
!1705 = distinct !DISubprogram(name: "AsyncTCPSocketAttachToSSLSock", scope: !175, file: !175, line: 2132, type: !1706, isLocal: true, isDefinition: true, scopeLine: 2135, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!173, !391, !478, !342}
!1708 = !DILocalVariable(name: "sslSock", arg: 1, scope: !1705, file: !175, line: 2132, type: !391)
!1709 = !DILocation(line: 2132, column: 39, scope: !1705)
!1710 = !DILocalVariable(name: "pollParams", arg: 2, scope: !1705, file: !175, line: 2133, type: !478)
!1711 = !DILocation(line: 2133, column: 54, scope: !1705)
!1712 = !DILocalVariable(name: "outError", arg: 3, scope: !1705, file: !175, line: 2134, type: !342)
!1713 = !DILocation(line: 2134, column: 36, scope: !1705)
!1714 = !DILocalVariable(name: "s", scope: !1705, file: !175, line: 2136, type: !173)
!1715 = !DILocation(line: 2136, column: 20, scope: !1705)
!1716 = !DILocalVariable(name: "fd", scope: !1705, file: !175, line: 2137, type: !165)
!1717 = !DILocation(line: 2137, column: 8, scope: !1705)
!1718 = !DILocalVariable(name: "error", scope: !1705, file: !175, line: 2138, type: !165)
!1719 = !DILocation(line: 2138, column: 8, scope: !1705)
!1720 = !DILocation(line: 2142, column: 19, scope: !1705)
!1721 = !DILocation(line: 2142, column: 9, scope: !1705)
!1722 = !DILocation(line: 2142, column: 7, scope: !1705)
!1723 = !DILocation(line: 2144, column: 39, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1705, file: !175, line: 2144, column: 8)
!1725 = !DILocation(line: 2144, column: 9, scope: !1724)
!1726 = !DILocation(line: 2144, column: 44, scope: !1724)
!1727 = !DILocation(line: 2144, column: 8, scope: !1705)
!1728 = !DILocalVariable(name: "sysErr", scope: !1729, file: !175, line: 2145, type: !165)
!1729 = distinct !DILexicalBlock(scope: !1724, file: !175, line: 2144, column: 50)
!1730 = !DILocation(line: 2145, column: 11, scope: !1729)
!1731 = !DILocation(line: 2145, column: 21, scope: !1729)
!1732 = !DILocation(line: 2145, column: 20, scope: !1729)
!1733 = !DILocation(line: 2147, column: 15, scope: !1729)
!1734 = !DILocation(line: 2147, column: 19, scope: !1729)
!1735 = !DILocation(line: 2147, column: 44, scope: !1729)
!1736 = !DILocation(line: 2147, column: 27, scope: !1729)
!1737 = !DILocation(line: 2146, column: 7, scope: !1729)
!1738 = !DILocation(line: 2148, column: 13, scope: !1729)
!1739 = !DILocation(line: 2149, column: 1, scope: !1729)
!1740 = !DILocation(line: 2150, column: 7, scope: !1729)
!1741 = !DILocation(line: 2153, column: 29, scope: !1705)
!1742 = !DILocation(line: 2153, column: 8, scope: !1705)
!1743 = !DILocation(line: 2153, column: 6, scope: !1705)
!1744 = !DILocation(line: 2154, column: 27, scope: !1705)
!1745 = !DILocation(line: 2154, column: 4, scope: !1705)
!1746 = !DILocation(line: 2155, column: 17, scope: !1705)
!1747 = !DILocation(line: 2155, column: 4, scope: !1705)
!1748 = !DILocation(line: 2155, column: 7, scope: !1705)
!1749 = !DILocation(line: 2155, column: 15, scope: !1705)
!1750 = !DILocation(line: 2156, column: 12, scope: !1705)
!1751 = !DILocation(line: 2156, column: 4, scope: !1705)
!1752 = !DILocation(line: 2156, column: 7, scope: !1705)
!1753 = !DILocation(line: 2156, column: 10, scope: !1705)
!1754 = !DILocation(line: 2159, column: 31, scope: !1705)
!1755 = !DILocation(line: 2159, column: 4, scope: !1705)
!1756 = !DILocation(line: 2160, column: 4, scope: !1705)
!1757 = distinct !{!1757, !1756}
!1758 = !DILocation(line: 2160, column: 197, scope: !1759)
!1759 = !DILexicalBlockFile(scope: !1760, file: !175, discriminator: 1)
!1760 = distinct !DILexicalBlock(scope: !1705, file: !175, line: 2160, column: 7)
!1761 = !DILocation(line: 2162, column: 11, scope: !1705)
!1762 = !DILocation(line: 2162, column: 4, scope: !1705)
!1763 = !DILocation(line: 2165, column: 8, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1705, file: !175, line: 2165, column: 8)
!1765 = !DILocation(line: 2165, column: 8, scope: !1705)
!1766 = !DILocation(line: 2166, column: 19, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1764, file: !175, line: 2165, column: 18)
!1768 = !DILocation(line: 2166, column: 8, scope: !1767)
!1769 = !DILocation(line: 2166, column: 17, scope: !1767)
!1770 = !DILocation(line: 2167, column: 4, scope: !1767)
!1771 = !DILocation(line: 2169, column: 4, scope: !1705)
!1772 = !DILocation(line: 2169, column: 1, scope: !1773)
!1773 = !DILexicalBlockFile(scope: !1705, file: !175, discriminator: 1)
!1774 = distinct !DISubprogram(name: "AsyncSocket_TCPDrainRecv", scope: !175, file: !175, line: 4026, type: !305, isLocal: false, isDefinition: true, scopeLine: 4028, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!1775 = !DILocalVariable(name: "base", arg: 1, scope: !1774, file: !175, line: 4026, type: !213)
!1776 = !DILocation(line: 4026, column: 39, scope: !1774)
!1777 = !DILocalVariable(name: "timeoutMS", arg: 2, scope: !1774, file: !175, line: 4027, type: !165)
!1778 = !DILocation(line: 4027, column: 30, scope: !1774)
!1779 = !DILocalVariable(name: "s", scope: !1774, file: !175, line: 4029, type: !173)
!1780 = !DILocation(line: 4029, column: 20, scope: !1774)
!1781 = !DILocation(line: 4029, column: 34, scope: !1774)
!1782 = !DILocation(line: 4029, column: 24, scope: !1774)
!1783 = !DILocalVariable(name: "retVal", scope: !1774, file: !175, line: 4030, type: !165)
!1784 = !DILocation(line: 4030, column: 8, scope: !1774)
!1785 = !DILocalVariable(name: "cbRemoved", scope: !1774, file: !175, line: 4031, type: !168)
!1786 = !DILocation(line: 4031, column: 9, scope: !1774)
!1787 = !DILocalVariable(name: "releaseLock", scope: !1774, file: !175, line: 4032, type: !168)
!1788 = !DILocation(line: 4032, column: 9, scope: !1774)
!1789 = !DILocalVariable(name: "count", scope: !1774, file: !175, line: 4033, type: !85)
!1790 = !DILocation(line: 4033, column: 13, scope: !1774)
!1791 = !DILocalVariable(name: "startMS", scope: !1774, file: !175, line: 4034, type: !1792)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "VmTimeType", file: !82, line: 354, baseType: !1793)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64", file: !82, line: 172, baseType: !1794)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1795, line: 197, baseType: !1796)
!1795 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!1796 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1797 = !DILocation(line: 4034, column: 15, scope: !1774)
!1798 = !DILocation(line: 4034, column: 25, scope: !1774)
!1799 = !DILocalVariable(name: "nowMS", scope: !1774, file: !175, line: 4035, type: !1792)
!1800 = !DILocation(line: 4035, column: 15, scope: !1774)
!1801 = !DILocation(line: 4040, column: 32, scope: !1802)
!1802 = distinct !DILexicalBlock(scope: !1774, file: !175, line: 4040, column: 8)
!1803 = !DILocation(line: 4040, column: 9, scope: !1802)
!1804 = !DILocation(line: 4040, column: 35, scope: !1802)
!1805 = !DILocation(line: 4040, column: 39, scope: !1806)
!1806 = !DILexicalBlockFile(scope: !1802, file: !175, discriminator: 1)
!1807 = !DILocation(line: 4040, column: 8, scope: !1806)
!1808 = !DILocation(line: 4041, column: 26, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1802, file: !175, line: 4040, column: 62)
!1810 = !DILocation(line: 4041, column: 7, scope: !1809)
!1811 = !DILocation(line: 4042, column: 19, scope: !1809)
!1812 = !DILocation(line: 4043, column: 4, scope: !1809)
!1813 = !DILocation(line: 4044, column: 25, scope: !1774)
!1814 = !DILocation(line: 4044, column: 4, scope: !1774)
!1815 = !DILocation(line: 4046, column: 4, scope: !1774)
!1816 = !DILocalVariable(name: "asock", scope: !1817, file: !175, line: 4047, type: !173)
!1817 = distinct !DILexicalBlock(scope: !1774, file: !175, line: 4046, column: 14)
!1818 = !DILocation(line: 4047, column: 23, scope: !1817)
!1819 = !DILocation(line: 4049, column: 12, scope: !1817)
!1820 = !DILocation(line: 4050, column: 11, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1817, file: !175, line: 4050, column: 11)
!1822 = !DILocation(line: 4050, column: 14, scope: !1821)
!1823 = !DILocation(line: 4050, column: 11, scope: !1817)
!1824 = !DILocation(line: 4055, column: 10, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1821, file: !175, line: 4050, column: 26)
!1826 = distinct !{!1826, !1824}
!1827 = !DILocation(line: 4055, column: 70, scope: !1828)
!1828 = !DILexicalBlockFile(scope: !1829, file: !175, discriminator: 1)
!1829 = distinct !DILexicalBlock(scope: !1825, file: !175, line: 4055, column: 13)
!1830 = !DILocation(line: 4055, column: 59, scope: !1828)
!1831 = !DILocation(line: 4055, column: 41, scope: !1832)
!1832 = !DILexicalBlockFile(scope: !1828, file: !175, discriminator: 2)
!1833 = !DILocation(line: 4055, column: 104, scope: !1828)
!1834 = !DILocation(line: 4055, column: 93, scope: !1835)
!1835 = !DILexicalBlockFile(scope: !1828, file: !175, discriminator: 3)
!1836 = !DILocation(line: 4055, column: 75, scope: !1837)
!1837 = !DILexicalBlockFile(scope: !1828, file: !175, discriminator: 4)
!1838 = !DILocation(line: 4055, column: 15, scope: !1839)
!1839 = !DILexicalBlockFile(scope: !1828, file: !175, discriminator: 5)
!1840 = !DILocation(line: 4055, column: 110, scope: !1841)
!1841 = !DILexicalBlockFile(scope: !1828, file: !175, discriminator: 6)
!1842 = !DILocation(line: 4055, column: 155, scope: !1828)
!1843 = !DILocation(line: 4056, column: 17, scope: !1825)
!1844 = !DILocation(line: 4058, column: 31, scope: !1825)
!1845 = !DILocation(line: 4058, column: 10, scope: !1825)
!1846 = !DILocation(line: 4059, column: 40, scope: !1825)
!1847 = !DILocation(line: 4059, column: 33, scope: !1825)
!1848 = !DILocation(line: 4059, column: 47, scope: !1825)
!1849 = !DILocation(line: 4059, column: 29, scope: !1825)
!1850 = !DILocation(line: 4059, column: 56, scope: !1825)
!1851 = !DILocation(line: 4059, column: 53, scope: !1825)
!1852 = !DILocation(line: 4059, column: 23, scope: !1825)
!1853 = !DILocation(line: 4059, column: 86, scope: !1854)
!1854 = !DILexicalBlockFile(scope: !1825, file: !175, discriminator: 1)
!1855 = !DILocation(line: 4059, column: 79, scope: !1854)
!1856 = !DILocation(line: 4059, column: 93, scope: !1854)
!1857 = !DILocation(line: 4059, column: 75, scope: !1854)
!1858 = !DILocation(line: 4059, column: 23, scope: !1854)
!1859 = !DILocation(line: 4059, column: 102, scope: !1860)
!1860 = !DILexicalBlockFile(scope: !1825, file: !175, discriminator: 2)
!1861 = !DILocation(line: 4059, column: 23, scope: !1860)
!1862 = !DILocation(line: 4059, column: 23, scope: !1863)
!1863 = !DILexicalBlockFile(scope: !1825, file: !175, discriminator: 3)
!1864 = !DILocation(line: 4059, column: 22, scope: !1863)
!1865 = !DILocation(line: 4059, column: 10, scope: !1863)
!1866 = !DILocation(line: 4060, column: 29, scope: !1825)
!1867 = !DILocation(line: 4060, column: 10, scope: !1825)
!1868 = !DILocation(line: 4061, column: 10, scope: !1825)
!1869 = !DILocation(line: 4064, column: 12, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1817, file: !175, line: 4064, column: 11)
!1871 = !DILocation(line: 4064, column: 11, scope: !1817)
!1872 = !DILocation(line: 4069, column: 37, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !1870, file: !175, line: 4064, column: 23)
!1874 = !DILocation(line: 4069, column: 10, scope: !1873)
!1875 = !DILocation(line: 4070, column: 10, scope: !1873)
!1876 = !DILocation(line: 4070, column: 13, scope: !1873)
!1877 = !DILocation(line: 4070, column: 20, scope: !1873)
!1878 = !DILocation(line: 4071, column: 20, scope: !1873)
!1879 = !DILocation(line: 4072, column: 7, scope: !1873)
!1880 = !DILocation(line: 4074, column: 7, scope: !1817)
!1881 = !DILocation(line: 4074, column: 10, scope: !1817)
!1882 = !DILocation(line: 4074, column: 24, scope: !1817)
!1883 = !DILocation(line: 4075, column: 35, scope: !1817)
!1884 = !DILocation(line: 4075, column: 16, scope: !1817)
!1885 = !DILocation(line: 4075, column: 14, scope: !1817)
!1886 = !DILocation(line: 4076, column: 11, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1817, file: !175, line: 4076, column: 11)
!1888 = !DILocation(line: 4076, column: 18, scope: !1887)
!1889 = !DILocation(line: 4076, column: 11, scope: !1817)
!1890 = !DILocation(line: 4077, column: 14, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1892, file: !175, line: 4077, column: 14)
!1892 = distinct !DILexicalBlock(scope: !1887, file: !175, line: 4076, column: 24)
!1893 = !DILocation(line: 4077, column: 21, scope: !1891)
!1894 = !DILocation(line: 4077, column: 14, scope: !1892)
!1895 = !DILocation(line: 4078, column: 13, scope: !1896)
!1896 = distinct !DILexicalBlock(scope: !1891, file: !175, line: 4077, column: 27)
!1897 = distinct !{!1897, !1895}
!1898 = !DILocation(line: 4078, column: 77, scope: !1899)
!1899 = !DILexicalBlockFile(scope: !1900, file: !175, discriminator: 1)
!1900 = distinct !DILexicalBlock(scope: !1896, file: !175, line: 4078, column: 16)
!1901 = !DILocation(line: 4078, column: 66, scope: !1899)
!1902 = !DILocation(line: 4078, column: 48, scope: !1903)
!1903 = !DILexicalBlockFile(scope: !1899, file: !175, discriminator: 2)
!1904 = !DILocation(line: 4078, column: 111, scope: !1899)
!1905 = !DILocation(line: 4078, column: 100, scope: !1906)
!1906 = !DILexicalBlockFile(scope: !1899, file: !175, discriminator: 3)
!1907 = !DILocation(line: 4078, column: 82, scope: !1908)
!1908 = !DILexicalBlockFile(scope: !1899, file: !175, discriminator: 4)
!1909 = !DILocation(line: 4078, column: 18, scope: !1910)
!1910 = !DILexicalBlockFile(scope: !1899, file: !175, discriminator: 5)
!1911 = !DILocation(line: 4078, column: 117, scope: !1912)
!1912 = !DILexicalBlockFile(scope: !1899, file: !175, discriminator: 6)
!1913 = !DILocation(line: 4078, column: 192, scope: !1899)
!1914 = !DILocation(line: 4080, column: 10, scope: !1896)
!1915 = !DILocation(line: 4081, column: 7, scope: !1892)
!1916 = !DILocation(line: 4081, column: 41, scope: !1917)
!1917 = !DILexicalBlockFile(scope: !1918, file: !175, discriminator: 1)
!1918 = distinct !DILexicalBlock(scope: !1887, file: !175, line: 4081, column: 18)
!1919 = !DILocation(line: 4081, column: 18, scope: !1917)
!1920 = !DILocation(line: 4081, column: 44, scope: !1917)
!1921 = !DILocation(line: 4083, column: 48, scope: !1922)
!1922 = distinct !DILexicalBlock(scope: !1918, file: !175, line: 4081, column: 69)
!1923 = !DILocation(line: 4083, column: 19, scope: !1922)
!1924 = !DILocation(line: 4083, column: 17, scope: !1922)
!1925 = !DILocation(line: 4084, column: 7, scope: !1922)
!1926 = !DILocation(line: 4085, column: 7, scope: !1817)
!1927 = !DILocation(line: 4085, column: 10, scope: !1817)
!1928 = !DILocation(line: 4085, column: 24, scope: !1817)
!1929 = !DILocation(line: 4088, column: 11, scope: !1930)
!1930 = distinct !DILexicalBlock(scope: !1817, file: !175, line: 4088, column: 11)
!1931 = !DILocation(line: 4088, column: 18, scope: !1930)
!1932 = !DILocation(line: 4088, column: 23, scope: !1930)
!1933 = !DILocation(line: 4089, column: 34, scope: !1930)
!1934 = !DILocation(line: 4089, column: 11, scope: !1930)
!1935 = !DILocation(line: 4089, column: 37, scope: !1930)
!1936 = !DILocation(line: 4089, column: 58, scope: !1930)
!1937 = !DILocation(line: 4090, column: 12, scope: !1930)
!1938 = !DILocation(line: 4090, column: 15, scope: !1930)
!1939 = !DILocation(line: 4088, column: 11, scope: !1940)
!1940 = !DILexicalBlockFile(scope: !1817, file: !175, discriminator: 1)
!1941 = !DILocation(line: 4092, column: 17, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1930, file: !175, line: 4090, column: 23)
!1943 = !DILocation(line: 4093, column: 10, scope: !1942)
!1944 = !DILocation(line: 4095, column: 11, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1817, file: !175, line: 4095, column: 11)
!1946 = !DILocation(line: 4095, column: 18, scope: !1945)
!1947 = !DILocation(line: 4095, column: 11, scope: !1817)
!1948 = !DILocation(line: 4096, column: 10, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1945, file: !175, line: 4095, column: 24)
!1950 = !DILocation(line: 4099, column: 15, scope: !1817)
!1951 = !DILocation(line: 4099, column: 13, scope: !1817)
!1952 = !DILocation(line: 4100, column: 11, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1817, file: !175, line: 4100, column: 11)
!1954 = !DILocation(line: 4100, column: 20, scope: !1953)
!1955 = !DILocation(line: 4100, column: 30, scope: !1953)
!1956 = !DILocation(line: 4100, column: 28, scope: !1953)
!1957 = !DILocation(line: 4100, column: 17, scope: !1953)
!1958 = !DILocation(line: 4100, column: 11, scope: !1817)
!1959 = !DILocation(line: 4101, column: 17, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1953, file: !175, line: 4100, column: 41)
!1961 = !DILocation(line: 4102, column: 10, scope: !1960)
!1962 = !DILocation(line: 4104, column: 20, scope: !1817)
!1963 = !DILocation(line: 4104, column: 28, scope: !1817)
!1964 = !DILocation(line: 4104, column: 26, scope: !1817)
!1965 = !DILocation(line: 4104, column: 17, scope: !1817)
!1966 = !DILocation(line: 4105, column: 17, scope: !1817)
!1967 = !DILocation(line: 4105, column: 15, scope: !1817)
!1968 = !DILocation(line: 4046, column: 4, scope: !1969)
!1969 = !DILexicalBlockFile(scope: !1774, file: !175, discriminator: 1)
!1970 = distinct !{!1970, !1815}
!1971 = !DILocation(line: 4109, column: 8, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1774, file: !175, line: 4109, column: 8)
!1973 = !DILocation(line: 4109, column: 8, scope: !1774)
!1974 = !DILocation(line: 4110, column: 7, scope: !1975)
!1975 = distinct !DILexicalBlock(scope: !1972, file: !175, line: 4109, column: 19)
!1976 = !DILocation(line: 4110, column: 10, scope: !1975)
!1977 = !DILocation(line: 4110, column: 17, scope: !1975)
!1978 = !DILocation(line: 4115, column: 11, scope: !1979)
!1979 = distinct !DILexicalBlock(scope: !1975, file: !175, line: 4115, column: 11)
!1980 = !DILocation(line: 4115, column: 18, scope: !1979)
!1981 = !DILocation(line: 4115, column: 11, scope: !1975)
!1982 = !DILocation(line: 4118, column: 48, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1979, file: !175, line: 4115, column: 24)
!1984 = !DILocation(line: 4118, column: 19, scope: !1983)
!1985 = !DILocation(line: 4118, column: 17, scope: !1983)
!1986 = !DILocation(line: 4120, column: 25, scope: !1983)
!1987 = !DILocation(line: 4120, column: 14, scope: !1983)
!1988 = !DILocation(line: 4120, column: 29, scope: !1983)
!1989 = !DILocation(line: 4119, column: 10, scope: !1983)
!1990 = !DILocation(line: 4121, column: 7, scope: !1983)
!1991 = !DILocation(line: 4122, column: 4, scope: !1975)
!1992 = !DILocation(line: 4123, column: 9, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1774, file: !175, line: 4123, column: 8)
!1994 = !DILocation(line: 4123, column: 12, scope: !1993)
!1995 = !DILocation(line: 4123, column: 8, scope: !1774)
!1996 = !DILocation(line: 4124, column: 7, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1993, file: !175, line: 4123, column: 20)
!1998 = !DILocation(line: 4124, column: 10, scope: !1997)
!1999 = !DILocation(line: 4124, column: 15, scope: !1997)
!2000 = !DILocation(line: 4124, column: 23, scope: !1997)
!2001 = !DILocation(line: 4125, column: 4, scope: !1997)
!2002 = !DILocation(line: 4127, column: 26, scope: !1774)
!2003 = !DILocation(line: 4127, column: 4, scope: !1774)
!2004 = !DILocation(line: 4128, column: 8, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !1774, file: !175, line: 4128, column: 8)
!2006 = !DILocation(line: 4128, column: 8, scope: !1774)
!2007 = !DILocation(line: 4129, column: 28, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !2005, file: !175, line: 4128, column: 21)
!2009 = !DILocation(line: 4129, column: 7, scope: !2008)
!2010 = !DILocation(line: 4130, column: 4, scope: !2008)
!2011 = !DILocation(line: 4131, column: 11, scope: !1774)
!2012 = !DILocation(line: 4131, column: 4, scope: !1774)
!2013 = distinct !DISubprogram(name: "TCPSocket", scope: !175, file: !175, line: 448, type: !2014, isLocal: true, isDefinition: true, scopeLine: 449, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!173, !213}
!2016 = !DILocalVariable(name: "s", arg: 1, scope: !2013, file: !175, line: 448, type: !213)
!2017 = !DILocation(line: 448, column: 24, scope: !2013)
!2018 = !DILocation(line: 452, column: 29, scope: !2013)
!2019 = !DILocation(line: 452, column: 11, scope: !2013)
!2020 = !DILocation(line: 452, column: 4, scope: !2013)
!2021 = distinct !DISubprogram(name: "Hostinfo_SystemTimerMS", scope: !2022, file: !2022, line: 79, type: !2023, isLocal: true, isDefinition: true, scopeLine: 80, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2022 = !DIFile(filename: "/home/ubuntu_1604/lichi/package_include_openssl_lib/open-vm-tools/open-vm-tools/lib/include/hostinfo.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!2023 = !DISubroutineType(types: !2024)
!2024 = !{!1792}
!2025 = !DILocation(line: 81, column: 11, scope: !2021)
!2026 = !DILocation(line: 81, column: 36, scope: !2021)
!2027 = !DILocation(line: 81, column: 4, scope: !2021)
!2028 = distinct !DISubprogram(name: "AsyncTCPSocketIsLocked", scope: !175, file: !175, line: 489, type: !2029, isLocal: true, isDefinition: true, scopeLine: 490, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{!168, !173}
!2031 = !DILocalVariable(name: "asock", arg: 1, scope: !2028, file: !175, line: 489, type: !173)
!2032 = !DILocation(line: 489, column: 40, scope: !2028)
!2033 = !DILocation(line: 491, column: 42, scope: !2028)
!2034 = !DILocation(line: 491, column: 31, scope: !2028)
!2035 = !DILocation(line: 491, column: 11, scope: !2036)
!2036 = !DILexicalBlockFile(scope: !2028, file: !175, discriminator: 1)
!2037 = !DILocation(line: 491, column: 4, scope: !2028)
!2038 = distinct !DISubprogram(name: "AsyncTCPSocketLock", scope: !175, file: !175, line: 477, type: !2039, isLocal: true, isDefinition: true, scopeLine: 478, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{null, !173}
!2041 = !DILocalVariable(name: "asock", arg: 1, scope: !2038, file: !175, line: 477, type: !173)
!2042 = !DILocation(line: 477, column: 36, scope: !2038)
!2043 = !DILocation(line: 479, column: 31, scope: !2038)
!2044 = !DILocation(line: 479, column: 20, scope: !2038)
!2045 = !DILocation(line: 479, column: 4, scope: !2046)
!2046 = !DILexicalBlockFile(scope: !2038, file: !175, discriminator: 1)
!2047 = !DILocation(line: 480, column: 1, scope: !2038)
!2048 = distinct !DISubprogram(name: "AsyncTCPSocketAddRef", scope: !175, file: !175, line: 495, type: !2039, isLocal: true, isDefinition: true, scopeLine: 496, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2049 = !DILocalVariable(name: "asock", arg: 1, scope: !2048, file: !175, line: 495, type: !173)
!2050 = !DILocation(line: 495, column: 38, scope: !2048)
!2051 = !DILocation(line: 497, column: 33, scope: !2048)
!2052 = !DILocation(line: 497, column: 22, scope: !2048)
!2053 = !DILocation(line: 497, column: 4, scope: !2054)
!2054 = !DILexicalBlockFile(scope: !2048, file: !175, discriminator: 1)
!2055 = !DILocation(line: 498, column: 1, scope: !2048)
!2056 = distinct !DISubprogram(name: "AsyncTCPSocketUnlock", scope: !175, file: !175, line: 483, type: !2039, isLocal: true, isDefinition: true, scopeLine: 484, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2057 = !DILocalVariable(name: "asock", arg: 1, scope: !2056, file: !175, line: 483, type: !173)
!2058 = !DILocation(line: 483, column: 38, scope: !2056)
!2059 = !DILocation(line: 485, column: 33, scope: !2056)
!2060 = !DILocation(line: 485, column: 22, scope: !2056)
!2061 = !DILocation(line: 485, column: 4, scope: !2062)
!2062 = !DILexicalBlockFile(scope: !2056, file: !175, discriminator: 1)
!2063 = !DILocation(line: 486, column: 1, scope: !2056)
!2064 = distinct !DISubprogram(name: "mssb32", scope: !2065, file: !2065, line: 419, type: !2066, isLocal: true, isDefinition: true, scopeLine: 420, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2065 = !DIFile(filename: "/home/ubuntu_1604/lichi/package_include_openssl_lib/open-vm-tools/open-vm-tools/lib/include/vm_basic_asm.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!2066 = !DISubroutineType(types: !2067)
!2067 = !{!165, !2068}
!2068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !81)
!2069 = !DILocalVariable(name: "value", arg: 1, scope: !2064, file: !2065, line: 419, type: !2068)
!2070 = !DILocation(line: 419, column: 21, scope: !2064)
!2071 = !DILocation(line: 421, column: 20, scope: !2064)
!2072 = !DILocation(line: 421, column: 11, scope: !2064)
!2073 = !DILocation(line: 421, column: 27, scope: !2064)
!2074 = !DILocation(line: 421, column: 4, scope: !2064)
!2075 = distinct !DISubprogram(name: "AsyncTCPSocketCancelRecvCb", scope: !175, file: !175, line: 4299, type: !2039, isLocal: true, isDefinition: true, scopeLine: 4300, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2076 = !DILocalVariable(name: "asock", arg: 1, scope: !2075, file: !175, line: 4299, type: !173)
!2077 = !DILocation(line: 4299, column: 44, scope: !2075)
!2078 = !DILocation(line: 4303, column: 8, scope: !2079)
!2079 = distinct !DILexicalBlock(scope: !2075, file: !175, line: 4303, column: 8)
!2080 = !DILocation(line: 4303, column: 15, scope: !2079)
!2081 = !DILocation(line: 4303, column: 8, scope: !2075)
!2082 = !DILocation(line: 4304, column: 32, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2079, file: !175, line: 4303, column: 28)
!2084 = !DILocation(line: 4304, column: 45, scope: !2083)
!2085 = !DILocation(line: 4304, column: 52, scope: !2083)
!2086 = !DILocation(line: 4304, column: 7, scope: !2083)
!2087 = !DILocation(line: 4305, column: 7, scope: !2083)
!2088 = !DILocation(line: 4305, column: 14, scope: !2083)
!2089 = !DILocation(line: 4305, column: 26, scope: !2083)
!2090 = !DILocation(line: 4306, column: 4, scope: !2083)
!2091 = !DILocation(line: 4307, column: 8, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !2075, file: !175, line: 4307, column: 8)
!2093 = !DILocation(line: 4307, column: 15, scope: !2092)
!2094 = !DILocation(line: 4307, column: 8, scope: !2075)
!2095 = !DILocalVariable(name: "removed", scope: !2096, file: !175, line: 4308, type: !168)
!2096 = distinct !DILexicalBlock(scope: !2092, file: !175, line: 4307, column: 23)
!2097 = !DILocation(line: 4308, column: 12, scope: !2096)
!2098 = !DILocation(line: 4309, column: 7, scope: !2096)
!2099 = distinct !{!2099, !2098}
!2100 = !DILocation(line: 4309, column: 206, scope: !2101)
!2101 = !DILexicalBlockFile(scope: !2102, file: !175, discriminator: 1)
!2102 = distinct !DILexicalBlock(scope: !2096, file: !175, line: 4309, column: 10)
!2103 = !DILocation(line: 4311, column: 42, scope: !2096)
!2104 = !DILocation(line: 4313, column: 42, scope: !2096)
!2105 = !DILocation(line: 4313, column: 49, scope: !2096)
!2106 = !DILocation(line: 4311, column: 17, scope: !2096)
!2107 = !DILocation(line: 4311, column: 15, scope: !2096)
!2108 = !DILocation(line: 4315, column: 7, scope: !2096)
!2109 = !DILocation(line: 4315, column: 14, scope: !2096)
!2110 = !DILocation(line: 4315, column: 21, scope: !2096)
!2111 = !DILocation(line: 4316, column: 4, scope: !2096)
!2112 = !DILocation(line: 4317, column: 1, scope: !2075)
!2113 = distinct !DISubprogram(name: "AsyncTCPSocketPoll", scope: !175, file: !175, line: 2716, type: !2114, isLocal: true, isDefinition: true, scopeLine: 2720, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{!165, !173, !168, !165, !172}
!2116 = !DILocalVariable(name: "s", arg: 1, scope: !2113, file: !175, line: 2716, type: !173)
!2117 = !DILocation(line: 2716, column: 36, scope: !2113)
!2118 = !DILocalVariable(name: "read", arg: 2, scope: !2113, file: !175, line: 2717, type: !168)
!2119 = !DILocation(line: 2717, column: 25, scope: !2113)
!2120 = !DILocalVariable(name: "timeoutMS", arg: 3, scope: !2113, file: !175, line: 2718, type: !165)
!2121 = !DILocation(line: 2718, column: 24, scope: !2113)
!2122 = !DILocalVariable(name: "outAsock", arg: 4, scope: !2113, file: !175, line: 2719, type: !172)
!2123 = !DILocation(line: 2719, column: 37, scope: !2113)
!2124 = !DILocalVariable(name: "asock", scope: !2113, file: !175, line: 2721, type: !2125)
!2125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 128, align: 64, elements: !2126)
!2126 = !{!2127}
!2127 = !DISubrange(count: 2)
!2128 = !DILocation(line: 2721, column: 20, scope: !2113)
!2129 = !DILocalVariable(name: "p", scope: !2113, file: !175, line: 2723, type: !2130)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !451, size: 128, align: 32, elements: !2126)
!2131 = !DILocation(line: 2723, column: 18, scope: !2113)
!2132 = !DILocalVariable(name: "numSock", scope: !2113, file: !175, line: 2727, type: !165)
!2133 = !DILocation(line: 2727, column: 8, scope: !2113)
!2134 = !DILocation(line: 2729, column: 8, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !2113, file: !175, line: 2729, column: 8)
!2136 = !DILocation(line: 2729, column: 13, scope: !2135)
!2137 = !DILocation(line: 2729, column: 16, scope: !2138)
!2138 = !DILexicalBlockFile(scope: !2135, file: !175, discriminator: 1)
!2139 = !DILocation(line: 2729, column: 19, scope: !2138)
!2140 = !DILocation(line: 2729, column: 22, scope: !2138)
!2141 = !DILocation(line: 2729, column: 8, scope: !2138)
!2142 = !DILocation(line: 2730, column: 12, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2144, file: !175, line: 2730, column: 11)
!2144 = distinct !DILexicalBlock(scope: !2135, file: !175, line: 2729, column: 29)
!2145 = !DILocation(line: 2730, column: 15, scope: !2143)
!2146 = !DILocation(line: 2730, column: 28, scope: !2143)
!2147 = !DILocation(line: 2730, column: 32, scope: !2148)
!2148 = !DILexicalBlockFile(scope: !2143, file: !175, discriminator: 1)
!2149 = !DILocation(line: 2730, column: 35, scope: !2148)
!2150 = !DILocation(line: 2730, column: 11, scope: !2148)
!2151 = !DILocation(line: 2731, column: 10, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !2143, file: !175, line: 2730, column: 49)
!2153 = distinct !{!2153, !2151}
!2154 = !DILocation(line: 2731, column: 70, scope: !2155)
!2155 = !DILexicalBlockFile(scope: !2156, file: !175, discriminator: 1)
!2156 = distinct !DILexicalBlock(scope: !2152, file: !175, line: 2731, column: 13)
!2157 = !DILocation(line: 2731, column: 59, scope: !2155)
!2158 = !DILocation(line: 2731, column: 41, scope: !2159)
!2159 = !DILexicalBlockFile(scope: !2155, file: !175, discriminator: 2)
!2160 = !DILocation(line: 2731, column: 104, scope: !2155)
!2161 = !DILocation(line: 2731, column: 93, scope: !2162)
!2162 = !DILexicalBlockFile(scope: !2155, file: !175, discriminator: 3)
!2163 = !DILocation(line: 2731, column: 75, scope: !2164)
!2164 = !DILexicalBlockFile(scope: !2155, file: !175, discriminator: 4)
!2165 = !DILocation(line: 2731, column: 15, scope: !2166)
!2166 = !DILexicalBlockFile(scope: !2155, file: !175, discriminator: 5)
!2167 = !DILocation(line: 2731, column: 110, scope: !2168)
!2168 = !DILexicalBlockFile(scope: !2155, file: !175, discriminator: 6)
!2169 = !DILocation(line: 2731, column: 171, scope: !2155)
!2170 = !DILocation(line: 2732, column: 10, scope: !2152)
!2171 = !DILocation(line: 2735, column: 11, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2144, file: !175, line: 2735, column: 11)
!2173 = !DILocation(line: 2735, column: 14, scope: !2172)
!2174 = !DILocation(line: 2735, column: 27, scope: !2172)
!2175 = !DILocation(line: 2735, column: 30, scope: !2176)
!2176 = !DILexicalBlockFile(scope: !2172, file: !175, discriminator: 1)
!2177 = !DILocation(line: 2735, column: 33, scope: !2176)
!2178 = !DILocation(line: 2735, column: 47, scope: !2176)
!2179 = !DILocation(line: 2735, column: 50, scope: !2176)
!2180 = !DILocation(line: 2735, column: 11, scope: !2176)
!2181 = !DILocation(line: 2736, column: 29, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !2172, file: !175, line: 2735, column: 57)
!2183 = !DILocation(line: 2736, column: 32, scope: !2182)
!2184 = !DILocation(line: 2736, column: 23, scope: !2182)
!2185 = !DILocation(line: 2736, column: 10, scope: !2182)
!2186 = !DILocation(line: 2736, column: 27, scope: !2182)
!2187 = !DILocation(line: 2737, column: 7, scope: !2182)
!2188 = !DILocation(line: 2738, column: 11, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2144, file: !175, line: 2738, column: 11)
!2190 = !DILocation(line: 2738, column: 14, scope: !2189)
!2191 = !DILocation(line: 2738, column: 27, scope: !2189)
!2192 = !DILocation(line: 2738, column: 30, scope: !2193)
!2193 = !DILexicalBlockFile(scope: !2189, file: !175, discriminator: 1)
!2194 = !DILocation(line: 2738, column: 33, scope: !2193)
!2195 = !DILocation(line: 2738, column: 47, scope: !2193)
!2196 = !DILocation(line: 2738, column: 50, scope: !2193)
!2197 = !DILocation(line: 2738, column: 11, scope: !2193)
!2198 = !DILocation(line: 2739, column: 29, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2189, file: !175, line: 2738, column: 57)
!2200 = !DILocation(line: 2739, column: 32, scope: !2199)
!2201 = !DILocation(line: 2739, column: 23, scope: !2199)
!2202 = !DILocation(line: 2739, column: 10, scope: !2199)
!2203 = !DILocation(line: 2739, column: 27, scope: !2199)
!2204 = !DILocation(line: 2740, column: 7, scope: !2199)
!2205 = !DILocation(line: 2741, column: 4, scope: !2144)
!2206 = !DILocation(line: 2742, column: 26, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2135, file: !175, line: 2741, column: 11)
!2208 = !DILocation(line: 2742, column: 20, scope: !2207)
!2209 = !DILocation(line: 2742, column: 7, scope: !2207)
!2210 = !DILocation(line: 2742, column: 24, scope: !2207)
!2211 = !DILocation(line: 2745, column: 34, scope: !2113)
!2212 = !DILocation(line: 2745, column: 41, scope: !2113)
!2213 = !DILocation(line: 2745, column: 50, scope: !2113)
!2214 = !DILocation(line: 2745, column: 53, scope: !2113)
!2215 = !DILocation(line: 2745, column: 59, scope: !2113)
!2216 = !DILocation(line: 2745, column: 70, scope: !2113)
!2217 = !DILocation(line: 2746, column: 34, scope: !2113)
!2218 = !DILocation(line: 2745, column: 11, scope: !2113)
!2219 = !DILocation(line: 2745, column: 4, scope: !2113)
!2220 = !DILocation(line: 2747, column: 1, scope: !2113)
!2221 = distinct !DISubprogram(name: "AsyncTCPSocketGetState", scope: !175, file: !175, line: 513, type: !2029, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2222 = !DILocalVariable(name: "asock", arg: 1, scope: !2221, file: !175, line: 513, type: !173)
!2223 = !DILocation(line: 513, column: 40, scope: !2221)
!2224 = !DILocation(line: 515, column: 42, scope: !2221)
!2225 = !DILocation(line: 515, column: 31, scope: !2221)
!2226 = !DILocation(line: 515, column: 11, scope: !2227)
!2227 = !DILexicalBlockFile(scope: !2221, file: !175, discriminator: 1)
!2228 = !DILocation(line: 515, column: 11, scope: !2221)
!2229 = !DILocation(line: 515, column: 4, scope: !2221)
!2230 = distinct !DISubprogram(name: "AsyncTCPSocketFillRecvBuffer", scope: !175, file: !175, line: 3255, type: !2231, isLocal: true, isDefinition: true, scopeLine: 3256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!165, !173}
!2233 = !DILocalVariable(name: "s", arg: 1, scope: !2230, file: !175, line: 3255, type: !173)
!2234 = !DILocation(line: 3255, column: 46, scope: !2230)
!2235 = !DILocalVariable(name: "recvd", scope: !2230, file: !175, line: 3257, type: !165)
!2236 = !DILocation(line: 3257, column: 8, scope: !2230)
!2237 = !DILocalVariable(name: "needed", scope: !2230, file: !175, line: 3258, type: !165)
!2238 = !DILocation(line: 3258, column: 8, scope: !2230)
!2239 = !DILocalVariable(name: "sysErr", scope: !2230, file: !175, line: 3259, type: !165)
!2240 = !DILocation(line: 3259, column: 8, scope: !2230)
!2241 = !DILocalVariable(name: "result", scope: !2230, file: !175, line: 3260, type: !165)
!2242 = !DILocation(line: 3260, column: 8, scope: !2230)
!2243 = !DILocalVariable(name: "pending", scope: !2230, file: !175, line: 3261, type: !165)
!2244 = !DILocation(line: 3261, column: 8, scope: !2230)
!2245 = !DILocation(line: 3275, column: 13, scope: !2230)
!2246 = !DILocation(line: 3275, column: 16, scope: !2230)
!2247 = !DILocation(line: 3275, column: 21, scope: !2230)
!2248 = !DILocation(line: 3275, column: 31, scope: !2230)
!2249 = !DILocation(line: 3275, column: 34, scope: !2230)
!2250 = !DILocation(line: 3275, column: 39, scope: !2230)
!2251 = !DILocation(line: 3275, column: 29, scope: !2230)
!2252 = !DILocation(line: 3275, column: 11, scope: !2230)
!2253 = !DILocation(line: 3276, column: 9, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2230, file: !175, line: 3276, column: 8)
!2255 = !DILocation(line: 3276, column: 12, scope: !2254)
!2256 = !DILocation(line: 3276, column: 17, scope: !2254)
!2257 = !DILocation(line: 3276, column: 25, scope: !2254)
!2258 = !DILocation(line: 3276, column: 28, scope: !2259)
!2259 = !DILexicalBlockFile(scope: !2254, file: !175, discriminator: 1)
!2260 = !DILocation(line: 3276, column: 35, scope: !2259)
!2261 = !DILocation(line: 3276, column: 8, scope: !2259)
!2262 = !DILocation(line: 3277, column: 7, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2254, file: !175, line: 3276, column: 41)
!2264 = !DILocation(line: 3282, column: 25, scope: !2230)
!2265 = !DILocation(line: 3282, column: 4, scope: !2230)
!2266 = !DILocation(line: 3288, column: 4, scope: !2230)
!2267 = !DILocation(line: 3288, column: 7, scope: !2230)
!2268 = !DILocation(line: 3288, column: 18, scope: !2230)
!2269 = !DILocation(line: 3290, column: 4, scope: !2230)
!2270 = distinct !{!2270, !2269}
!2271 = !DILocation(line: 3296, column: 11, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2273, file: !175, line: 3296, column: 11)
!2273 = distinct !DILexicalBlock(scope: !2230, file: !175, line: 3290, column: 7)
!2274 = !DILocation(line: 3296, column: 14, scope: !2272)
!2275 = !DILocation(line: 3296, column: 21, scope: !2272)
!2276 = !DILocation(line: 3296, column: 11, scope: !2273)
!2277 = !DILocalVariable(name: "fd", scope: !2278, file: !175, line: 3297, type: !165)
!2278 = distinct !DILexicalBlock(scope: !2272, file: !175, line: 3296, column: 31)
!2279 = !DILocation(line: 3297, column: 14, scope: !2278)
!2280 = !DILocation(line: 3299, column: 36, scope: !2278)
!2281 = !DILocation(line: 3299, column: 39, scope: !2278)
!2282 = !DILocation(line: 3300, column: 46, scope: !2278)
!2283 = !DILocation(line: 3300, column: 49, scope: !2278)
!2284 = !DILocation(line: 3300, column: 54, scope: !2278)
!2285 = !DILocation(line: 3301, column: 36, scope: !2278)
!2286 = !DILocation(line: 3301, column: 39, scope: !2278)
!2287 = !DILocation(line: 3301, column: 44, scope: !2278)
!2288 = !DILocation(line: 3300, column: 62, scope: !2278)
!2289 = !DILocation(line: 3302, column: 36, scope: !2278)
!2290 = !DILocation(line: 3299, column: 18, scope: !2278)
!2291 = !DILocation(line: 3299, column: 16, scope: !2278)
!2292 = !DILocation(line: 3303, column: 14, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2278, file: !175, line: 3303, column: 14)
!2294 = !DILocation(line: 3303, column: 17, scope: !2293)
!2295 = !DILocation(line: 3303, column: 14, scope: !2278)
!2296 = !DILocation(line: 3304, column: 28, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2293, file: !175, line: 3303, column: 24)
!2298 = !DILocation(line: 3304, column: 13, scope: !2297)
!2299 = !DILocation(line: 3304, column: 16, scope: !2297)
!2300 = !DILocation(line: 3304, column: 23, scope: !2297)
!2301 = !DILocation(line: 3304, column: 26, scope: !2297)
!2302 = !DILocation(line: 3305, column: 13, scope: !2297)
!2303 = !DILocation(line: 3305, column: 16, scope: !2297)
!2304 = !DILocation(line: 3305, column: 23, scope: !2297)
!2305 = !DILocation(line: 3305, column: 32, scope: !2297)
!2306 = !DILocation(line: 3306, column: 10, scope: !2297)
!2307 = !DILocation(line: 3307, column: 7, scope: !2278)
!2308 = !DILocation(line: 3308, column: 27, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2272, file: !175, line: 3307, column: 14)
!2310 = !DILocation(line: 3308, column: 30, scope: !2309)
!2311 = !DILocation(line: 3309, column: 37, scope: !2309)
!2312 = !DILocation(line: 3309, column: 40, scope: !2309)
!2313 = !DILocation(line: 3309, column: 45, scope: !2309)
!2314 = !DILocation(line: 3310, column: 27, scope: !2309)
!2315 = !DILocation(line: 3310, column: 30, scope: !2309)
!2316 = !DILocation(line: 3310, column: 35, scope: !2309)
!2317 = !DILocation(line: 3309, column: 53, scope: !2309)
!2318 = !DILocation(line: 3311, column: 27, scope: !2309)
!2319 = !DILocation(line: 3308, column: 18, scope: !2309)
!2320 = !DILocation(line: 3308, column: 16, scope: !2309)
!2321 = !DILocation(line: 3317, column: 11, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2273, file: !175, line: 3317, column: 11)
!2323 = !DILocation(line: 3317, column: 17, scope: !2322)
!2324 = !DILocation(line: 3317, column: 11, scope: !2273)
!2325 = !DILocation(line: 3318, column: 10, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2322, file: !175, line: 3317, column: 22)
!2327 = distinct !{!2327, !2325}
!2328 = !DILocation(line: 3318, column: 212, scope: !2329)
!2329 = !DILexicalBlockFile(scope: !2330, file: !175, discriminator: 1)
!2330 = distinct !DILexicalBlock(scope: !2326, file: !175, line: 3318, column: 13)
!2331 = !DILocation(line: 3320, column: 10, scope: !2326)
!2332 = !DILocation(line: 3320, column: 13, scope: !2326)
!2333 = !DILocation(line: 3320, column: 26, scope: !2326)
!2334 = !DILocation(line: 3321, column: 29, scope: !2326)
!2335 = !DILocation(line: 3321, column: 10, scope: !2326)
!2336 = !DILocation(line: 3321, column: 13, scope: !2326)
!2337 = !DILocation(line: 3321, column: 18, scope: !2326)
!2338 = !DILocation(line: 3321, column: 26, scope: !2326)
!2339 = !DILocation(line: 3322, column: 47, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2326, file: !175, line: 3322, column: 14)
!2341 = !DILocation(line: 3322, column: 50, scope: !2340)
!2342 = !DILocation(line: 3322, column: 14, scope: !2340)
!2343 = !DILocation(line: 3322, column: 14, scope: !2326)
!2344 = !DILocation(line: 3323, column: 13, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2340, file: !175, line: 3322, column: 66)
!2346 = !DILocation(line: 3325, column: 7, scope: !2326)
!2347 = !DILocation(line: 3325, column: 18, scope: !2348)
!2348 = !DILexicalBlockFile(scope: !2349, file: !175, discriminator: 1)
!2349 = distinct !DILexicalBlock(scope: !2322, file: !175, line: 3325, column: 18)
!2350 = !DILocation(line: 3325, column: 24, scope: !2348)
!2351 = !DILocation(line: 3326, column: 10, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2349, file: !175, line: 3325, column: 30)
!2353 = distinct !{!2353, !2351}
!2354 = !DILocation(line: 3326, column: 70, scope: !2355)
!2355 = !DILexicalBlockFile(scope: !2356, file: !175, discriminator: 1)
!2356 = distinct !DILexicalBlock(scope: !2352, file: !175, line: 3326, column: 13)
!2357 = !DILocation(line: 3326, column: 59, scope: !2355)
!2358 = !DILocation(line: 3326, column: 41, scope: !2359)
!2359 = !DILexicalBlockFile(scope: !2355, file: !175, discriminator: 2)
!2360 = !DILocation(line: 3326, column: 104, scope: !2355)
!2361 = !DILocation(line: 3326, column: 93, scope: !2362)
!2362 = !DILexicalBlockFile(scope: !2355, file: !175, discriminator: 3)
!2363 = !DILocation(line: 3326, column: 75, scope: !2364)
!2364 = !DILexicalBlockFile(scope: !2355, file: !175, discriminator: 4)
!2365 = !DILocation(line: 3326, column: 15, scope: !2366)
!2366 = !DILexicalBlockFile(scope: !2355, file: !175, discriminator: 5)
!2367 = !DILocation(line: 3326, column: 110, scope: !2368)
!2368 = !DILexicalBlockFile(scope: !2355, file: !175, discriminator: 6)
!2369 = !DILocation(line: 3326, column: 160, scope: !2355)
!2370 = !DILocation(line: 3331, column: 17, scope: !2352)
!2371 = !DILocation(line: 3332, column: 10, scope: !2352)
!2372 = !DILocation(line: 3333, column: 29, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2349, file: !175, line: 3333, column: 18)
!2374 = !DILocation(line: 3333, column: 28, scope: !2373)
!2375 = !DILocation(line: 3333, column: 26, scope: !2373)
!2376 = !DILocation(line: 3333, column: 46, scope: !2373)
!2377 = !DILocation(line: 3333, column: 18, scope: !2349)
!2378 = !DILocation(line: 3334, column: 10, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2373, file: !175, line: 3333, column: 68)
!2380 = distinct !{!2380, !2378}
!2381 = !DILocation(line: 3334, column: 167, scope: !2382)
!2382 = !DILexicalBlockFile(scope: !2383, file: !175, discriminator: 1)
!2383 = distinct !DILexicalBlock(scope: !2379, file: !175, line: 3334, column: 13)
!2384 = !DILocation(line: 3335, column: 10, scope: !2379)
!2385 = !DILocation(line: 3337, column: 10, scope: !2386)
!2386 = distinct !DILexicalBlock(scope: !2373, file: !175, line: 3336, column: 14)
!2387 = distinct !{!2387, !2385}
!2388 = !DILocation(line: 3337, column: 70, scope: !2389)
!2389 = !DILexicalBlockFile(scope: !2390, file: !175, discriminator: 1)
!2390 = distinct !DILexicalBlock(scope: !2386, file: !175, line: 3337, column: 13)
!2391 = !DILocation(line: 3337, column: 59, scope: !2389)
!2392 = !DILocation(line: 3337, column: 41, scope: !2393)
!2393 = !DILexicalBlockFile(scope: !2389, file: !175, discriminator: 2)
!2394 = !DILocation(line: 3337, column: 104, scope: !2389)
!2395 = !DILocation(line: 3337, column: 93, scope: !2396)
!2396 = !DILexicalBlockFile(scope: !2389, file: !175, discriminator: 3)
!2397 = !DILocation(line: 3337, column: 75, scope: !2398)
!2398 = !DILexicalBlockFile(scope: !2389, file: !175, discriminator: 4)
!2399 = !DILocation(line: 3337, column: 15, scope: !2400)
!2400 = !DILexicalBlockFile(scope: !2389, file: !175, discriminator: 5)
!2401 = !DILocation(line: 3337, column: 138, scope: !2389)
!2402 = !DILocation(line: 3337, column: 163, scope: !2389)
!2403 = !DILocation(line: 3337, column: 146, scope: !2404)
!2404 = !DILexicalBlockFile(scope: !2389, file: !175, discriminator: 6)
!2405 = !DILocation(line: 3337, column: 110, scope: !2406)
!2406 = !DILexicalBlockFile(scope: !2389, file: !175, discriminator: 7)
!2407 = !DILocation(line: 3337, column: 173, scope: !2389)
!2408 = !DILocation(line: 3339, column: 28, scope: !2386)
!2409 = !DILocation(line: 3339, column: 10, scope: !2386)
!2410 = !DILocation(line: 3339, column: 13, scope: !2386)
!2411 = !DILocation(line: 3339, column: 26, scope: !2386)
!2412 = !DILocation(line: 3340, column: 17, scope: !2386)
!2413 = !DILocation(line: 3341, column: 10, scope: !2386)
!2414 = !DILocation(line: 3351, column: 16, scope: !2273)
!2415 = !DILocation(line: 3351, column: 19, scope: !2273)
!2416 = !DILocation(line: 3351, column: 24, scope: !2273)
!2417 = !DILocation(line: 3351, column: 34, scope: !2273)
!2418 = !DILocation(line: 3351, column: 37, scope: !2273)
!2419 = !DILocation(line: 3351, column: 42, scope: !2273)
!2420 = !DILocation(line: 3351, column: 32, scope: !2273)
!2421 = !DILocation(line: 3351, column: 14, scope: !2273)
!2422 = !DILocation(line: 3354, column: 29, scope: !2273)
!2423 = !DILocation(line: 3354, column: 32, scope: !2273)
!2424 = !DILocation(line: 3354, column: 17, scope: !2273)
!2425 = !DILocation(line: 3354, column: 15, scope: !2273)
!2426 = !DILocation(line: 3355, column: 19, scope: !2273)
!2427 = !DILocation(line: 3355, column: 30, scope: !2273)
!2428 = !DILocation(line: 3355, column: 27, scope: !2273)
!2429 = !DILocation(line: 3355, column: 17, scope: !2273)
!2430 = !DILocation(line: 3355, column: 43, scope: !2431)
!2431 = !DILexicalBlockFile(scope: !2273, file: !175, discriminator: 1)
!2432 = !DILocation(line: 3355, column: 17, scope: !2431)
!2433 = !DILocation(line: 3355, column: 54, scope: !2434)
!2434 = !DILexicalBlockFile(scope: !2273, file: !175, discriminator: 2)
!2435 = !DILocation(line: 3355, column: 17, scope: !2434)
!2436 = !DILocation(line: 3355, column: 17, scope: !2437)
!2437 = !DILexicalBlockFile(scope: !2273, file: !175, discriminator: 3)
!2438 = !DILocation(line: 3355, column: 14, scope: !2437)
!2439 = !DILocation(line: 3357, column: 4, scope: !2273)
!2440 = !DILocation(line: 3357, column: 13, scope: !2441)
!2441 = !DILexicalBlockFile(scope: !2230, file: !175, discriminator: 1)
!2442 = !DILocation(line: 3357, column: 4, scope: !2441)
!2443 = !DILocation(line: 3372, column: 11, scope: !2230)
!2444 = !DILocation(line: 3372, column: 4, scope: !2230)
!2445 = !DILocation(line: 3375, column: 4, scope: !2230)
!2446 = !DILocation(line: 3375, column: 7, scope: !2230)
!2447 = !DILocation(line: 3375, column: 18, scope: !2230)
!2448 = !DILocation(line: 3376, column: 26, scope: !2230)
!2449 = !DILocation(line: 3376, column: 4, scope: !2230)
!2450 = !DILocation(line: 3378, column: 11, scope: !2230)
!2451 = !DILocation(line: 3378, column: 4, scope: !2230)
!2452 = !DILocation(line: 3379, column: 1, scope: !2230)
!2453 = distinct !DISubprogram(name: "AsyncTCPSocketRegisterRecvCb", scope: !175, file: !175, line: 2293, type: !2231, isLocal: true, isDefinition: true, scopeLine: 2294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2454 = !DILocalVariable(name: "asock", arg: 1, scope: !2453, file: !175, line: 2293, type: !173)
!2455 = !DILocation(line: 2293, column: 46, scope: !2453)
!2456 = !DILocalVariable(name: "retVal", scope: !2453, file: !175, line: 2295, type: !165)
!2457 = !DILocation(line: 2295, column: 8, scope: !2453)
!2458 = !DILocation(line: 2297, column: 9, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2453, file: !175, line: 2297, column: 8)
!2460 = !DILocation(line: 2297, column: 16, scope: !2459)
!2461 = !DILocation(line: 2297, column: 8, scope: !2453)
!2462 = !DILocalVariable(name: "pollStatus", scope: !2463, file: !175, line: 2298, type: !1402)
!2463 = distinct !DILexicalBlock(scope: !2459, file: !175, line: 2297, column: 24)
!2464 = !DILocation(line: 2298, column: 20, scope: !2463)
!2465 = !DILocation(line: 2304, column: 7, scope: !2463)
!2466 = distinct !{!2466, !2465}
!2467 = !DILocation(line: 2304, column: 194, scope: !2468)
!2468 = !DILexicalBlockFile(scope: !2469, file: !175, discriminator: 1)
!2469 = distinct !DILexicalBlock(scope: !2463, file: !175, line: 2304, column: 10)
!2470 = !DILocation(line: 2306, column: 42, scope: !2463)
!2471 = !DILocation(line: 2308, column: 39, scope: !2463)
!2472 = !DILocation(line: 2308, column: 46, scope: !2463)
!2473 = !DILocation(line: 2306, column: 20, scope: !2463)
!2474 = !DILocation(line: 2306, column: 18, scope: !2463)
!2475 = !DILocation(line: 2310, column: 11, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2463, file: !175, line: 2310, column: 11)
!2477 = !DILocation(line: 2310, column: 22, scope: !2476)
!2478 = !DILocation(line: 2310, column: 11, scope: !2463)
!2479 = !DILocation(line: 2311, column: 10, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2476, file: !175, line: 2310, column: 48)
!2481 = distinct !{!2481, !2479}
!2482 = !DILocation(line: 2311, column: 74, scope: !2483)
!2483 = !DILexicalBlockFile(scope: !2484, file: !175, discriminator: 1)
!2484 = distinct !DILexicalBlock(scope: !2480, file: !175, line: 2311, column: 13)
!2485 = !DILocation(line: 2311, column: 63, scope: !2483)
!2486 = !DILocation(line: 2311, column: 45, scope: !2487)
!2487 = !DILexicalBlockFile(scope: !2483, file: !175, discriminator: 2)
!2488 = !DILocation(line: 2311, column: 112, scope: !2483)
!2489 = !DILocation(line: 2311, column: 101, scope: !2490)
!2490 = !DILexicalBlockFile(scope: !2483, file: !175, discriminator: 3)
!2491 = !DILocation(line: 2311, column: 83, scope: !2492)
!2492 = !DILexicalBlockFile(scope: !2483, file: !175, discriminator: 4)
!2493 = !DILocation(line: 2311, column: 15, scope: !2494)
!2494 = !DILexicalBlockFile(scope: !2483, file: !175, discriminator: 5)
!2495 = !DILocation(line: 2311, column: 122, scope: !2496)
!2496 = !DILexicalBlockFile(scope: !2483, file: !175, discriminator: 6)
!2497 = !DILocation(line: 2311, column: 170, scope: !2483)
!2498 = !DILocation(line: 2312, column: 17, scope: !2480)
!2499 = !DILocation(line: 2313, column: 10, scope: !2480)
!2500 = !DILocation(line: 2315, column: 7, scope: !2463)
!2501 = !DILocation(line: 2315, column: 14, scope: !2463)
!2502 = !DILocation(line: 2315, column: 21, scope: !2463)
!2503 = !DILocation(line: 2316, column: 4, scope: !2463)
!2504 = !DILocation(line: 2318, column: 37, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2453, file: !175, line: 2318, column: 8)
!2506 = !DILocation(line: 2318, column: 8, scope: !2505)
!2507 = !DILocation(line: 2318, column: 44, scope: !2505)
!2508 = !DILocation(line: 2318, column: 48, scope: !2509)
!2509 = !DILexicalBlockFile(scope: !2505, file: !175, discriminator: 1)
!2510 = !DILocation(line: 2318, column: 55, scope: !2509)
!2511 = !DILocation(line: 2318, column: 8, scope: !2509)
!2512 = !DILocation(line: 2319, column: 7, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2505, file: !175, line: 2318, column: 67)
!2514 = distinct !{!2514, !2512}
!2515 = !DILocation(line: 2319, column: 93, scope: !2516)
!2516 = !DILexicalBlockFile(scope: !2517, file: !175, discriminator: 1)
!2517 = distinct !DILexicalBlock(scope: !2518, file: !175, line: 2319, column: 35)
!2518 = distinct !DILexicalBlock(scope: !2519, file: !175, line: 2319, column: 16)
!2519 = distinct !DILexicalBlock(scope: !2513, file: !175, line: 2319, column: 10)
!2520 = !DILocation(line: 2319, column: 82, scope: !2516)
!2521 = !DILocation(line: 2319, column: 63, scope: !2522)
!2522 = !DILexicalBlockFile(scope: !2516, file: !175, discriminator: 2)
!2523 = !DILocation(line: 2319, column: 132, scope: !2516)
!2524 = !DILocation(line: 2319, column: 121, scope: !2525)
!2525 = !DILexicalBlockFile(scope: !2516, file: !175, discriminator: 3)
!2526 = !DILocation(line: 2319, column: 103, scope: !2527)
!2527 = !DILexicalBlockFile(scope: !2516, file: !175, discriminator: 4)
!2528 = !DILocation(line: 2319, column: 37, scope: !2529)
!2529 = !DILexicalBlockFile(scope: !2516, file: !175, discriminator: 5)
!2530 = !DILocation(line: 2319, column: 142, scope: !2531)
!2531 = !DILexicalBlockFile(scope: !2516, file: !175, discriminator: 6)
!2532 = !DILocation(line: 2319, column: 191, scope: !2516)
!2533 = !DILocation(line: 2320, column: 33, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2513, file: !175, line: 2320, column: 11)
!2535 = !DILocation(line: 2320, column: 46, scope: !2534)
!2536 = !DILocation(line: 2320, column: 53, scope: !2534)
!2537 = !DILocation(line: 2320, column: 11, scope: !2534)
!2538 = !DILocation(line: 2320, column: 72, scope: !2534)
!2539 = !DILocation(line: 2320, column: 11, scope: !2513)
!2540 = !DILocation(line: 2322, column: 17, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2534, file: !175, line: 2321, column: 34)
!2542 = !DILocation(line: 2323, column: 10, scope: !2541)
!2543 = !DILocation(line: 2325, column: 7, scope: !2513)
!2544 = !DILocation(line: 2325, column: 14, scope: !2513)
!2545 = !DILocation(line: 2325, column: 26, scope: !2513)
!2546 = !DILocation(line: 2326, column: 4, scope: !2513)
!2547 = !DILocation(line: 2318, column: 55, scope: !2548)
!2548 = !DILexicalBlockFile(scope: !2505, file: !175, discriminator: 2)
!2549 = !DILocation(line: 2329, column: 11, scope: !2453)
!2550 = !DILocation(line: 2329, column: 4, scope: !2453)
!2551 = distinct !DISubprogram(name: "AsyncTCPSocketRelease", scope: !175, file: !175, line: 501, type: !2039, isLocal: true, isDefinition: true, scopeLine: 502, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2552 = !DILocalVariable(name: "asock", arg: 1, scope: !2551, file: !175, line: 501, type: !173)
!2553 = !DILocation(line: 501, column: 39, scope: !2551)
!2554 = !DILocation(line: 503, column: 34, scope: !2551)
!2555 = !DILocation(line: 503, column: 23, scope: !2551)
!2556 = !DILocation(line: 503, column: 4, scope: !2557)
!2557 = !DILexicalBlockFile(scope: !2551, file: !175, discriminator: 1)
!2558 = !DILocation(line: 504, column: 1, scope: !2551)
!2559 = distinct !DISubprogram(name: "AsyncSocket_ListenSocketUDS", scope: !175, file: !175, line: 6008, type: !2560, isLocal: false, isDefinition: true, scopeLine: 6013, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2560 = !DISubroutineType(types: !2561)
!2561 = !{!213, !260, !401, !80, !478, !342}
!2562 = !DILocalVariable(name: "pipeName", arg: 1, scope: !2559, file: !175, line: 6008, type: !260)
!2563 = !DILocation(line: 6008, column: 41, scope: !2559)
!2564 = !DILocalVariable(name: "connectFn", arg: 2, scope: !2559, file: !175, line: 6009, type: !401)
!2565 = !DILocation(line: 6009, column: 50, scope: !2559)
!2566 = !DILocalVariable(name: "clientData", arg: 3, scope: !2559, file: !175, line: 6010, type: !80)
!2567 = !DILocation(line: 6010, column: 35, scope: !2559)
!2568 = !DILocalVariable(name: "pollParams", arg: 4, scope: !2559, file: !175, line: 6011, type: !478)
!2569 = !DILocation(line: 6011, column: 52, scope: !2559)
!2570 = !DILocalVariable(name: "outError", arg: 5, scope: !2559, file: !175, line: 6012, type: !342)
!2571 = !DILocation(line: 6012, column: 34, scope: !2559)
!2572 = !DILocalVariable(name: "addr", scope: !2559, file: !175, line: 6014, type: !1583)
!2573 = !DILocation(line: 6014, column: 23, scope: !2559)
!2574 = !DILocalVariable(name: "asock", scope: !2559, file: !175, line: 6015, type: !173)
!2575 = !DILocation(line: 6015, column: 20, scope: !2559)
!2576 = !DILocation(line: 6017, column: 4, scope: !2559)
!2577 = !DILocation(line: 6018, column: 9, scope: !2559)
!2578 = !DILocation(line: 6018, column: 20, scope: !2559)
!2579 = !DILocation(line: 6019, column: 20, scope: !2559)
!2580 = !DILocation(line: 6019, column: 15, scope: !2559)
!2581 = !DILocation(line: 6019, column: 30, scope: !2559)
!2582 = !DILocation(line: 6019, column: 4, scope: !2559)
!2583 = !DILocation(line: 6021, column: 59, scope: !2559)
!2584 = !DILocation(line: 6021, column: 4, scope: !2559)
!2585 = !DILocation(line: 6023, column: 37, scope: !2559)
!2586 = !DILocation(line: 6024, column: 50, scope: !2559)
!2587 = !DILocation(line: 6024, column: 61, scope: !2559)
!2588 = !DILocation(line: 6025, column: 37, scope: !2559)
!2589 = !DILocation(line: 6025, column: 49, scope: !2559)
!2590 = !DILocation(line: 6023, column: 12, scope: !2559)
!2591 = !DILocation(line: 6023, column: 10, scope: !2559)
!2592 = !DILocation(line: 6027, column: 22, scope: !2559)
!2593 = !DILocation(line: 6027, column: 11, scope: !2559)
!2594 = !DILocation(line: 6027, column: 4, scope: !2559)
!2595 = !DILocalVariable(name: "hostname", arg: 1, scope: !460, file: !175, line: 3145, type: !260)
!2596 = !DILocation(line: 3145, column: 39, scope: !460)
!2597 = !DILocalVariable(name: "port", arg: 2, scope: !460, file: !175, line: 3146, type: !85)
!2598 = !DILocation(line: 3146, column: 40, scope: !460)
!2599 = !DILocalVariable(name: "family", arg: 3, scope: !460, file: !175, line: 3147, type: !165)
!2600 = !DILocation(line: 3147, column: 31, scope: !460)
!2601 = !DILocalVariable(name: "passive", arg: 4, scope: !460, file: !175, line: 3148, type: !168)
!2602 = !DILocation(line: 3148, column: 32, scope: !460)
!2603 = !DILocalVariable(name: "addr", arg: 5, scope: !460, file: !175, line: 3149, type: !86)
!2604 = !DILocation(line: 3149, column: 52, scope: !460)
!2605 = !DILocalVariable(name: "addrLen", arg: 6, scope: !460, file: !175, line: 3150, type: !249)
!2606 = !DILocation(line: 3150, column: 38, scope: !460)
!2607 = !DILocalVariable(name: "addrString", arg: 7, scope: !460, file: !175, line: 3151, type: !266)
!2608 = !DILocation(line: 3151, column: 34, scope: !460)
!2609 = !DILocalVariable(name: "hints", scope: !460, file: !175, line: 3153, type: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !2611, line: 567, size: 384, align: 64, elements: !2612)
!2611 = !DIFile(filename: "/usr/include/netdb.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!2612 = !{!2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !2610, file: !2611, line: 569, baseType: !165, size: 32, align: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !2610, file: !2611, line: 570, baseType: !165, size: 32, align: 32, offset: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !2610, file: !2611, line: 571, baseType: !165, size: 32, align: 32, offset: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !2610, file: !2611, line: 572, baseType: !165, size: 32, align: 32, offset: 96)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !2610, file: !2611, line: 573, baseType: !242, size: 32, align: 32, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !2610, file: !2611, line: 574, baseType: !145, size: 64, align: 64, offset: 192)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !2610, file: !2611, line: 575, baseType: !267, size: 64, align: 64, offset: 256)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !2610, file: !2611, line: 576, baseType: !2621, size: 64, align: 64, offset: 320)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64, align: 64)
!2622 = !DILocation(line: 3153, column: 20, scope: !460)
!2623 = !DILocalVariable(name: "aiTop", scope: !460, file: !175, line: 3154, type: !2621)
!2624 = !DILocation(line: 3154, column: 21, scope: !460)
!2625 = !DILocalVariable(name: "aiIterator", scope: !460, file: !175, line: 3155, type: !2621)
!2626 = !DILocation(line: 3155, column: 21, scope: !460)
!2627 = !DILocalVariable(name: "getaddrinfoError", scope: !460, file: !175, line: 3156, type: !165)
!2628 = !DILocation(line: 3156, column: 8, scope: !460)
!2629 = !DILocalVariable(name: "portString", scope: !460, file: !175, line: 3157, type: !2630)
!2630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 48, align: 8, elements: !2631)
!2631 = !{!2632}
!2632 = !DISubrange(count: 6)
!2633 = !DILocation(line: 3157, column: 9, scope: !460)
!2634 = !DILocation(line: 3161, column: 8, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !460, file: !175, line: 3161, column: 8)
!2636 = !DILocation(line: 3161, column: 13, scope: !2635)
!2637 = !DILocation(line: 3161, column: 8, scope: !460)
!2638 = !DILocation(line: 3162, column: 70, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2635, file: !175, line: 3161, column: 33)
!2640 = !DILocation(line: 3162, column: 7, scope: !2639)
!2641 = !DILocation(line: 3163, column: 7, scope: !2639)
!2642 = !DILocation(line: 3166, column: 16, scope: !460)
!2643 = !DILocation(line: 3166, column: 54, scope: !460)
!2644 = !DILocation(line: 3166, column: 4, scope: !460)
!2645 = !DILocation(line: 3167, column: 4, scope: !460)
!2646 = !DILocation(line: 3168, column: 22, scope: !460)
!2647 = !DILocation(line: 3168, column: 10, scope: !460)
!2648 = !DILocation(line: 3168, column: 20, scope: !460)
!2649 = !DILocation(line: 3169, column: 10, scope: !460)
!2650 = !DILocation(line: 3169, column: 22, scope: !460)
!2651 = !DILocation(line: 3170, column: 8, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !460, file: !175, line: 3170, column: 8)
!2653 = !DILocation(line: 3170, column: 8, scope: !460)
!2654 = !DILocation(line: 3171, column: 13, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2652, file: !175, line: 3170, column: 17)
!2656 = !DILocation(line: 3171, column: 22, scope: !2655)
!2657 = !DILocation(line: 3172, column: 4, scope: !2655)
!2658 = !DILocation(line: 3174, column: 35, scope: !460)
!2659 = !DILocation(line: 3174, column: 45, scope: !460)
!2660 = !DILocation(line: 3174, column: 23, scope: !460)
!2661 = !DILocation(line: 3174, column: 21, scope: !460)
!2662 = !DILocation(line: 3175, column: 13, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !460, file: !175, line: 3175, column: 8)
!2664 = !DILocation(line: 3175, column: 10, scope: !2663)
!2665 = !DILocation(line: 3175, column: 8, scope: !460)
!2666 = !DILocation(line: 3176, column: 61, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2663, file: !175, line: 3175, column: 31)
!2668 = !DILocation(line: 3177, column: 36, scope: !2667)
!2669 = !DILocation(line: 3177, column: 23, scope: !2667)
!2670 = !DILocation(line: 3176, column: 7, scope: !2667)
!2671 = !DILocation(line: 3178, column: 7, scope: !2667)
!2672 = !DILocation(line: 3181, column: 22, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !460, file: !175, line: 3181, column: 4)
!2674 = !DILocation(line: 3181, column: 20, scope: !2673)
!2675 = !DILocation(line: 3181, column: 9, scope: !2673)
!2676 = !DILocation(line: 3181, column: 36, scope: !2677)
!2677 = !DILexicalBlockFile(scope: !2678, file: !175, discriminator: 1)
!2678 = distinct !DILexicalBlock(scope: !2673, file: !175, line: 3181, column: 4)
!2679 = !DILocation(line: 3181, column: 33, scope: !2677)
!2680 = !DILocation(line: 3181, column: 4, scope: !2677)
!2681 = !DILocation(line: 3183, column: 12, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2683, file: !175, line: 3183, column: 11)
!2683 = distinct !DILexicalBlock(scope: !2678, file: !175, line: 3182, column: 77)
!2684 = !DILocation(line: 3183, column: 19, scope: !2682)
!2685 = !DILocation(line: 3183, column: 31, scope: !2682)
!2686 = !DILocation(line: 3183, column: 35, scope: !2687)
!2687 = !DILexicalBlockFile(scope: !2682, file: !175, discriminator: 1)
!2688 = !DILocation(line: 3183, column: 47, scope: !2687)
!2689 = !DILocation(line: 3183, column: 57, scope: !2687)
!2690 = !DILocation(line: 3183, column: 68, scope: !2687)
!2691 = !DILocation(line: 3184, column: 36, scope: !2682)
!2692 = !DILocation(line: 3184, column: 48, scope: !2682)
!2693 = !DILocation(line: 3184, column: 58, scope: !2682)
!2694 = !DILocation(line: 3184, column: 71, scope: !2682)
!2695 = !DILocation(line: 3185, column: 11, scope: !2682)
!2696 = !DILocation(line: 3185, column: 21, scope: !2682)
!2697 = !DILocation(line: 3185, column: 33, scope: !2682)
!2698 = !DILocation(line: 3185, column: 18, scope: !2682)
!2699 = !DILocation(line: 3183, column: 11, scope: !2700)
!2700 = !DILexicalBlockFile(scope: !2683, file: !175, discriminator: 2)
!2701 = !DILocation(line: 3186, column: 14, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2703, file: !175, line: 3186, column: 14)
!2703 = distinct !DILexicalBlock(scope: !2682, file: !175, line: 3185, column: 44)
!2704 = !DILocation(line: 3186, column: 25, scope: !2702)
!2705 = !DILocation(line: 3186, column: 14, scope: !2703)
!2706 = !DILocalVariable(name: "tempAddrString", scope: !2707, file: !175, line: 3187, type: !2708)
!2707 = distinct !DILexicalBlock(scope: !2702, file: !175, line: 3186, column: 33)
!2708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 432, align: 8, elements: !2709)
!2709 = !{!2710}
!2710 = !DISubrange(count: 54)
!2711 = !DILocation(line: 3187, column: 18, scope: !2707)
!2712 = !DILocation(line: 3200, column: 17, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2707, file: !175, line: 3200, column: 17)
!2714 = !DILocation(line: 3200, column: 29, scope: !2713)
!2715 = !DILocation(line: 3200, column: 39, scope: !2713)
!2716 = !DILocation(line: 3200, column: 49, scope: !2713)
!2717 = !DILocation(line: 3201, column: 28, scope: !2713)
!2718 = !DILocation(line: 3201, column: 40, scope: !2713)
!2719 = !DILocation(line: 3202, column: 47, scope: !2713)
!2720 = !DILocation(line: 3202, column: 59, scope: !2713)
!2721 = !DILocation(line: 3202, column: 69, scope: !2713)
!2722 = !DILocation(line: 3202, column: 22, scope: !2713)
!2723 = !DILocation(line: 3203, column: 22, scope: !2713)
!2724 = !DILocation(line: 3201, column: 18, scope: !2713)
!2725 = !DILocation(line: 3200, column: 17, scope: !2726)
!2726 = !DILexicalBlockFile(scope: !2707, file: !175, discriminator: 1)
!2727 = !DILocation(line: 3204, column: 30, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2713, file: !175, line: 3203, column: 56)
!2729 = !DILocation(line: 3204, column: 17, scope: !2728)
!2730 = !DILocation(line: 3204, column: 28, scope: !2728)
!2731 = !DILocation(line: 3205, column: 13, scope: !2728)
!2732 = !DILocation(line: 3205, column: 24, scope: !2733)
!2733 = !DILexicalBlockFile(scope: !2734, file: !175, discriminator: 1)
!2734 = distinct !DILexicalBlock(scope: !2713, file: !175, line: 3205, column: 24)
!2735 = !DILocation(line: 3205, column: 36, scope: !2733)
!2736 = !DILocation(line: 3205, column: 46, scope: !2733)
!2737 = !DILocation(line: 3205, column: 57, scope: !2733)
!2738 = !DILocation(line: 3206, column: 35, scope: !2734)
!2739 = !DILocation(line: 3206, column: 47, scope: !2734)
!2740 = !DILocation(line: 3207, column: 45, scope: !2734)
!2741 = !DILocation(line: 3207, column: 57, scope: !2734)
!2742 = !DILocation(line: 3207, column: 67, scope: !2734)
!2743 = !DILocation(line: 3207, column: 19, scope: !2734)
!2744 = !DILocation(line: 3208, column: 19, scope: !2734)
!2745 = !DILocation(line: 3206, column: 25, scope: !2734)
!2746 = !DILocation(line: 3205, column: 24, scope: !2747)
!2747 = !DILexicalBlockFile(scope: !2713, file: !175, discriminator: 2)
!2748 = !DILocation(line: 3209, column: 30, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2734, file: !175, line: 3208, column: 53)
!2750 = !DILocation(line: 3209, column: 17, scope: !2749)
!2751 = !DILocation(line: 3209, column: 28, scope: !2749)
!2752 = !DILocation(line: 3210, column: 13, scope: !2749)
!2753 = !DILocation(line: 3211, column: 52, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2734, file: !175, line: 3210, column: 20)
!2755 = !DILocation(line: 3211, column: 64, scope: !2754)
!2756 = !DILocation(line: 3211, column: 74, scope: !2754)
!2757 = !DILocation(line: 3214, column: 47, scope: !2754)
!2758 = !DILocation(line: 3214, column: 63, scope: !2754)
!2759 = !DILocation(line: 3211, column: 30, scope: !2754)
!2760 = !DILocation(line: 3211, column: 17, scope: !2754)
!2761 = !DILocation(line: 3211, column: 28, scope: !2754)
!2762 = !DILocation(line: 3217, column: 10, scope: !2707)
!2763 = !DILocation(line: 3219, column: 17, scope: !2703)
!2764 = !DILocation(line: 3219, column: 10, scope: !2703)
!2765 = !DILocation(line: 3219, column: 23, scope: !2703)
!2766 = !DILocation(line: 3219, column: 35, scope: !2703)
!2767 = !DILocation(line: 3219, column: 44, scope: !2703)
!2768 = !DILocation(line: 3219, column: 56, scope: !2703)
!2769 = !DILocation(line: 3220, column: 21, scope: !2703)
!2770 = !DILocation(line: 3220, column: 33, scope: !2703)
!2771 = !DILocation(line: 3220, column: 11, scope: !2703)
!2772 = !DILocation(line: 3220, column: 19, scope: !2703)
!2773 = !DILocation(line: 3222, column: 10, scope: !2703)
!2774 = !DILocation(line: 3224, column: 4, scope: !2683)
!2775 = !DILocation(line: 3182, column: 56, scope: !2678)
!2776 = !DILocation(line: 3182, column: 68, scope: !2678)
!2777 = !DILocation(line: 3181, column: 60, scope: !2778)
!2778 = !DILexicalBlockFile(scope: !2678, file: !175, discriminator: 2)
!2779 = !DILocation(line: 3181, column: 4, scope: !2778)
!2780 = distinct !{!2780, !2781}
!2781 = !DILocation(line: 3181, column: 4, scope: !460)
!2782 = !DILocation(line: 3224, column: 4, scope: !2783)
!2783 = !DILexicalBlockFile(scope: !2673, file: !175, discriminator: 1)
!2784 = !DILocation(line: 3227, column: 15, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !460, file: !175, line: 3227, column: 7)
!2786 = !DILocation(line: 3227, column: 12, scope: !2785)
!2787 = !DILocation(line: 3227, column: 7, scope: !460)
!2788 = !DILocation(line: 3228, column: 20, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2785, file: !175, line: 3227, column: 22)
!2790 = !DILocation(line: 3228, column: 7, scope: !2789)
!2791 = !DILocation(line: 3229, column: 4, scope: !2789)
!2792 = !DILocation(line: 3231, column: 11, scope: !460)
!2793 = !DILocation(line: 3231, column: 4, scope: !460)
!2794 = !DILocation(line: 3232, column: 1, scope: !460)
!2795 = distinct !DISubprogram(name: "AsyncTCPSocketInit", scope: !175, file: !175, line: 1253, type: !1645, isLocal: true, isDefinition: true, scopeLine: 1256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2796 = !DILocalVariable(name: "socketFamily", arg: 1, scope: !2795, file: !175, line: 1253, type: !165)
!2797 = !DILocation(line: 1253, column: 24, scope: !2795)
!2798 = !DILocalVariable(name: "pollParams", arg: 2, scope: !2795, file: !175, line: 1254, type: !478)
!2799 = !DILocation(line: 1254, column: 43, scope: !2795)
!2800 = !DILocalVariable(name: "outError", arg: 3, scope: !2795, file: !175, line: 1255, type: !342)
!2801 = !DILocation(line: 1255, column: 25, scope: !2795)
!2802 = !DILocalVariable(name: "asock", scope: !2795, file: !175, line: 1257, type: !173)
!2803 = !DILocation(line: 1257, column: 20, scope: !2795)
!2804 = !DILocalVariable(name: "error", scope: !2795, file: !175, line: 1258, type: !165)
!2805 = !DILocation(line: 1258, column: 8, scope: !2795)
!2806 = !DILocalVariable(name: "sysErr", scope: !2795, file: !175, line: 1259, type: !165)
!2807 = !DILocation(line: 1259, column: 8, scope: !2795)
!2808 = !DILocalVariable(name: "fd", scope: !2795, file: !175, line: 1260, type: !165)
!2809 = !DILocation(line: 1260, column: 8, scope: !2795)
!2810 = !DILocation(line: 1266, column: 21, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2795, file: !175, line: 1266, column: 8)
!2812 = !DILocation(line: 1266, column: 14, scope: !2811)
!2813 = !DILocation(line: 1266, column: 12, scope: !2811)
!2814 = !DILocation(line: 1266, column: 51, scope: !2811)
!2815 = !DILocation(line: 1266, column: 8, scope: !2795)
!2816 = !DILocation(line: 1267, column: 17, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2811, file: !175, line: 1266, column: 58)
!2818 = !DILocation(line: 1267, column: 16, scope: !2817)
!2819 = !DILocation(line: 1267, column: 14, scope: !2817)
!2820 = !DILocation(line: 1269, column: 15, scope: !2817)
!2821 = !DILocation(line: 1269, column: 40, scope: !2817)
!2822 = !DILocation(line: 1269, column: 23, scope: !2817)
!2823 = !DILocation(line: 1268, column: 7, scope: !2817)
!2824 = !DILocation(line: 1270, column: 1, scope: !2817)
!2825 = !DILocation(line: 1271, column: 7, scope: !2817)
!2826 = !DILocation(line: 1278, column: 42, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2795, file: !175, line: 1278, column: 8)
!2828 = !DILocation(line: 1278, column: 46, scope: !2827)
!2829 = !DILocation(line: 1278, column: 17, scope: !2827)
!2830 = !DILocation(line: 1278, column: 15, scope: !2827)
!2831 = !DILocation(line: 1278, column: 67, scope: !2827)
!2832 = !DILocation(line: 1278, column: 8, scope: !2795)
!2833 = !DILocation(line: 1278, column: 1, scope: !2834)
!2834 = !DILexicalBlockFile(scope: !2835, file: !175, discriminator: 1)
!2835 = distinct !DILexicalBlock(scope: !2827, file: !175, line: 1277, column: 75)
!2836 = !DILocation(line: 1279, column: 7, scope: !2835)
!2837 = !DILocation(line: 1282, column: 11, scope: !2795)
!2838 = !DILocation(line: 1282, column: 4, scope: !2795)
!2839 = !DILocation(line: 1285, column: 10, scope: !2795)
!2840 = !DILocation(line: 1285, column: 4, scope: !2795)
!2841 = !DILocation(line: 1288, column: 8, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2795, file: !175, line: 1288, column: 8)
!2843 = !DILocation(line: 1288, column: 8, scope: !2795)
!2844 = !DILocation(line: 1289, column: 19, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2842, file: !175, line: 1288, column: 18)
!2846 = !DILocation(line: 1289, column: 8, scope: !2845)
!2847 = !DILocation(line: 1289, column: 17, scope: !2845)
!2848 = !DILocation(line: 1290, column: 4, scope: !2845)
!2849 = !DILocation(line: 1292, column: 4, scope: !2795)
!2850 = !DILocation(line: 1292, column: 1, scope: !2851)
!2851 = !DILexicalBlockFile(scope: !2795, file: !175, discriminator: 1)
!2852 = distinct !DISubprogram(name: "AsyncTCPSocketBind", scope: !175, file: !175, line: 1445, type: !2853, isLocal: true, isDefinition: true, scopeLine: 1449, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!168, !173, !86, !242, !342}
!2855 = !DILocalVariable(name: "asock", arg: 1, scope: !2852, file: !175, line: 1445, type: !173)
!2856 = !DILocation(line: 1445, column: 36, scope: !2852)
!2857 = !DILocalVariable(name: "addr", arg: 2, scope: !2852, file: !175, line: 1446, type: !86)
!2858 = !DILocation(line: 1446, column: 45, scope: !2852)
!2859 = !DILocalVariable(name: "addrLen", arg: 3, scope: !2852, file: !175, line: 1447, type: !242)
!2860 = !DILocation(line: 1447, column: 30, scope: !2852)
!2861 = !DILocalVariable(name: "outError", arg: 4, scope: !2852, file: !175, line: 1448, type: !342)
!2862 = !DILocation(line: 1448, column: 25, scope: !2852)
!2863 = !DILocalVariable(name: "error", scope: !2852, file: !175, line: 1450, type: !165)
!2864 = !DILocation(line: 1450, column: 8, scope: !2852)
!2865 = !DILocalVariable(name: "sysErr", scope: !2852, file: !175, line: 1451, type: !165)
!2866 = !DILocation(line: 1451, column: 8, scope: !2852)
!2867 = !DILocalVariable(name: "port", scope: !2852, file: !175, line: 1452, type: !85)
!2868 = !DILocation(line: 1452, column: 17, scope: !2852)
!2869 = !DILocation(line: 1458, column: 41, scope: !2852)
!2870 = !DILocation(line: 1458, column: 11, scope: !2852)
!2871 = !DILocation(line: 1458, column: 9, scope: !2852)
!2872 = !DILocation(line: 1459, column: 4, scope: !2852)
!2873 = distinct !{!2873, !2872}
!2874 = !DILocation(line: 1459, column: 64, scope: !2875)
!2875 = !DILexicalBlockFile(scope: !2876, file: !175, discriminator: 1)
!2876 = distinct !DILexicalBlock(scope: !2852, file: !175, line: 1459, column: 7)
!2877 = !DILocation(line: 1459, column: 53, scope: !2875)
!2878 = !DILocation(line: 1459, column: 35, scope: !2879)
!2879 = !DILexicalBlockFile(scope: !2875, file: !175, discriminator: 2)
!2880 = !DILocation(line: 1459, column: 102, scope: !2875)
!2881 = !DILocation(line: 1459, column: 91, scope: !2882)
!2882 = !DILexicalBlockFile(scope: !2875, file: !175, discriminator: 3)
!2883 = !DILocation(line: 1459, column: 73, scope: !2884)
!2884 = !DILexicalBlockFile(scope: !2875, file: !175, discriminator: 4)
!2885 = !DILocation(line: 1459, column: 9, scope: !2886)
!2886 = !DILexicalBlockFile(scope: !2875, file: !175, discriminator: 5)
!2887 = !DILocation(line: 1459, column: 163, scope: !2875)
!2888 = !DILocation(line: 1459, column: 112, scope: !2889)
!2889 = !DILexicalBlockFile(scope: !2875, file: !175, discriminator: 6)
!2890 = !DILocation(line: 1459, column: 170, scope: !2875)
!2891 = !DILocation(line: 1467, column: 8, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2852, file: !175, line: 1467, column: 8)
!2893 = !DILocation(line: 1467, column: 14, scope: !2892)
!2894 = !DILocation(line: 1467, column: 24, scope: !2892)
!2895 = !DILocation(line: 1467, column: 34, scope: !2892)
!2896 = !DILocation(line: 1467, column: 37, scope: !2897)
!2897 = !DILexicalBlockFile(scope: !2892, file: !175, discriminator: 1)
!2898 = !DILocation(line: 1467, column: 43, scope: !2897)
!2899 = !DILocation(line: 1467, column: 53, scope: !2897)
!2900 = !DILocation(line: 1467, column: 8, scope: !2897)
!2901 = !DILocalVariable(name: "reuse", scope: !2902, file: !175, line: 1468, type: !165)
!2902 = distinct !DILexicalBlock(scope: !2892, file: !175, line: 1467, column: 66)
!2903 = !DILocation(line: 1468, column: 11, scope: !2902)
!2904 = !DILocation(line: 1468, column: 19, scope: !2902)
!2905 = !DILocation(line: 1468, column: 24, scope: !2902)
!2906 = !DILocation(line: 1470, column: 22, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2902, file: !175, line: 1470, column: 11)
!2908 = !DILocation(line: 1470, column: 29, scope: !2907)
!2909 = !DILocation(line: 1471, column: 22, scope: !2907)
!2910 = !DILocation(line: 1470, column: 11, scope: !2907)
!2911 = !DILocation(line: 1471, column: 60, scope: !2907)
!2912 = !DILocation(line: 1470, column: 11, scope: !2902)
!2913 = !DILocation(line: 1472, column: 20, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2907, file: !175, line: 1471, column: 66)
!2915 = !DILocation(line: 1472, column: 19, scope: !2914)
!2916 = !DILocation(line: 1472, column: 17, scope: !2914)
!2917 = !DILocation(line: 1474, column: 18, scope: !2914)
!2918 = !DILocation(line: 1474, column: 43, scope: !2914)
!2919 = !DILocation(line: 1474, column: 26, scope: !2914)
!2920 = !DILocation(line: 1473, column: 10, scope: !2914)
!2921 = !DILocation(line: 1475, column: 7, scope: !2914)
!2922 = !DILocation(line: 1476, column: 4, scope: !2902)
!2923 = !DILocation(line: 1514, column: 8, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2852, file: !175, line: 1514, column: 8)
!2925 = !DILocation(line: 1514, column: 14, scope: !2924)
!2926 = !DILocation(line: 1514, column: 24, scope: !2924)
!2927 = !DILocation(line: 1514, column: 35, scope: !2924)
!2928 = !DILocation(line: 1514, column: 38, scope: !2929)
!2929 = !DILexicalBlockFile(scope: !2924, file: !175, discriminator: 1)
!2930 = !DILocation(line: 1514, column: 8, scope: !2929)
!2931 = !DILocalVariable(name: "on", scope: !2932, file: !175, line: 1515, type: !165)
!2932 = distinct !DILexicalBlock(scope: !2924, file: !175, line: 1514, column: 81)
!2933 = !DILocation(line: 1515, column: 11, scope: !2932)
!2934 = !DILocation(line: 1517, column: 22, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2932, file: !175, line: 1517, column: 11)
!2936 = !DILocation(line: 1517, column: 29, scope: !2935)
!2937 = !DILocation(line: 1518, column: 22, scope: !2935)
!2938 = !DILocation(line: 1517, column: 11, scope: !2935)
!2939 = !DILocation(line: 1518, column: 54, scope: !2935)
!2940 = !DILocation(line: 1517, column: 11, scope: !2932)
!2941 = !DILocation(line: 1519, column: 10, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2935, file: !175, line: 1518, column: 60)
!2943 = !DILocation(line: 1520, column: 7, scope: !2942)
!2944 = !DILocation(line: 1521, column: 4, scope: !2932)
!2945 = !DILocation(line: 1530, column: 13, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2852, file: !175, line: 1530, column: 8)
!2947 = !DILocation(line: 1530, column: 20, scope: !2946)
!2948 = !DILocation(line: 1530, column: 43, scope: !2946)
!2949 = !DILocation(line: 1530, column: 24, scope: !2946)
!2950 = !DILocation(line: 1530, column: 49, scope: !2946)
!2951 = !DILocation(line: 1530, column: 8, scope: !2946)
!2952 = !DILocation(line: 1530, column: 58, scope: !2946)
!2953 = !DILocation(line: 1530, column: 8, scope: !2852)
!2954 = !DILocation(line: 1531, column: 17, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2946, file: !175, line: 1530, column: 64)
!2956 = !DILocation(line: 1531, column: 16, scope: !2955)
!2957 = !DILocation(line: 1531, column: 14, scope: !2955)
!2958 = !DILocation(line: 1532, column: 11, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2955, file: !175, line: 1532, column: 11)
!2960 = !DILocation(line: 1532, column: 18, scope: !2959)
!2961 = !DILocation(line: 1532, column: 11, scope: !2955)
!2962 = !DILocation(line: 1533, column: 16, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2959, file: !175, line: 1532, column: 38)
!2964 = !DILocation(line: 1534, column: 7, scope: !2963)
!2965 = !DILocation(line: 1535, column: 66, scope: !2955)
!2966 = !DILocation(line: 1536, column: 32, scope: !2955)
!2967 = !DILocation(line: 1536, column: 15, scope: !2955)
!2968 = !DILocation(line: 1535, column: 7, scope: !2955)
!2969 = !DILocation(line: 1537, column: 1, scope: !2955)
!2970 = !DILocation(line: 1538, column: 7, scope: !2955)
!2971 = !DILocation(line: 1541, column: 4, scope: !2852)
!2972 = !DILocation(line: 1544, column: 17, scope: !2852)
!2973 = !DILocation(line: 1544, column: 24, scope: !2852)
!2974 = !DILocation(line: 1544, column: 4, scope: !2852)
!2975 = !DILocation(line: 1545, column: 9, scope: !2852)
!2976 = !DILocation(line: 1545, column: 4, scope: !2852)
!2977 = !DILocation(line: 1547, column: 8, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2852, file: !175, line: 1547, column: 8)
!2979 = !DILocation(line: 1547, column: 8, scope: !2852)
!2980 = !DILocation(line: 1548, column: 19, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2978, file: !175, line: 1547, column: 18)
!2982 = !DILocation(line: 1548, column: 8, scope: !2981)
!2983 = !DILocation(line: 1548, column: 17, scope: !2981)
!2984 = !DILocation(line: 1549, column: 4, scope: !2981)
!2985 = !DILocation(line: 1551, column: 4, scope: !2852)
!2986 = !DILocation(line: 1552, column: 1, scope: !2852)
!2987 = distinct !DISubprogram(name: "AsyncTCPSocketListen", scope: !175, file: !175, line: 1571, type: !2988, isLocal: true, isDefinition: true, scopeLine: 1575, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!168, !173, !401, !80, !342}
!2990 = !DILocalVariable(name: "asock", arg: 1, scope: !2987, file: !175, line: 1571, type: !173)
!2991 = !DILocation(line: 1571, column: 38, scope: !2987)
!2992 = !DILocalVariable(name: "connectFn", arg: 2, scope: !2987, file: !175, line: 1572, type: !401)
!2993 = !DILocation(line: 1572, column: 43, scope: !2987)
!2994 = !DILocalVariable(name: "clientData", arg: 3, scope: !2987, file: !175, line: 1573, type: !80)
!2995 = !DILocation(line: 1573, column: 28, scope: !2987)
!2996 = !DILocalVariable(name: "outError", arg: 4, scope: !2987, file: !175, line: 1574, type: !342)
!2997 = !DILocation(line: 1574, column: 27, scope: !2987)
!2998 = !DILocalVariable(name: "pollStatus", scope: !2987, file: !175, line: 1576, type: !1402)
!2999 = !DILocation(line: 1576, column: 17, scope: !2987)
!3000 = !DILocalVariable(name: "error", scope: !2987, file: !175, line: 1577, type: !165)
!3001 = !DILocation(line: 1577, column: 8, scope: !2987)
!3002 = !DILocation(line: 1582, column: 9, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2987, file: !175, line: 1582, column: 8)
!3004 = !DILocation(line: 1582, column: 8, scope: !2987)
!3005 = !DILocation(line: 1583, column: 7, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !3003, file: !175, line: 1582, column: 20)
!3007 = !DILocation(line: 1584, column: 13, scope: !3006)
!3008 = !DILocation(line: 1585, column: 1, scope: !3006)
!3009 = !DILocation(line: 1586, column: 7, scope: !3006)
!3010 = !DILocation(line: 1593, column: 15, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !2987, file: !175, line: 1593, column: 8)
!3012 = !DILocation(line: 1593, column: 22, scope: !3011)
!3013 = !DILocation(line: 1593, column: 8, scope: !3011)
!3014 = !DILocation(line: 1593, column: 29, scope: !3011)
!3015 = !DILocation(line: 1593, column: 8, scope: !2987)
!3016 = !DILocalVariable(name: "sysErr", scope: !3017, file: !175, line: 1594, type: !165)
!3017 = distinct !DILexicalBlock(scope: !3011, file: !175, line: 1593, column: 35)
!3018 = !DILocation(line: 1594, column: 11, scope: !3017)
!3019 = !DILocation(line: 1593, column: 21, scope: !3020)
!3020 = !DILexicalBlockFile(scope: !3017, file: !175, discriminator: 1)
!3021 = !DILocation(line: 1593, column: 20, scope: !3020)
!3022 = !DILocation(line: 1595, column: 15, scope: !3017)
!3023 = !DILocation(line: 1595, column: 40, scope: !3017)
!3024 = !DILocation(line: 1595, column: 23, scope: !3017)
!3025 = !DILocation(line: 1594, column: 7, scope: !3017)
!3026 = !DILocation(line: 1596, column: 13, scope: !3017)
!3027 = !DILocation(line: 1597, column: 1, scope: !3017)
!3028 = !DILocation(line: 1598, column: 7, scope: !3017)
!3029 = !DILocation(line: 1606, column: 23, scope: !2987)
!3030 = !DILocation(line: 1606, column: 4, scope: !2987)
!3031 = !DILocation(line: 1607, column: 39, scope: !2987)
!3032 = !DILocation(line: 1607, column: 17, scope: !2987)
!3033 = !DILocation(line: 1607, column: 15, scope: !2987)
!3034 = !DILocation(line: 1611, column: 8, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !2987, file: !175, line: 1611, column: 8)
!3036 = !DILocation(line: 1611, column: 19, scope: !3035)
!3037 = !DILocation(line: 1611, column: 8, scope: !2987)
!3038 = !DILocation(line: 1612, column: 7, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3035, file: !175, line: 1611, column: 45)
!3040 = distinct !{!3040, !3038}
!3041 = !DILocation(line: 1612, column: 71, scope: !3042)
!3042 = !DILexicalBlockFile(scope: !3043, file: !175, discriminator: 1)
!3043 = distinct !DILexicalBlock(scope: !3039, file: !175, line: 1612, column: 10)
!3044 = !DILocation(line: 1612, column: 60, scope: !3042)
!3045 = !DILocation(line: 1612, column: 42, scope: !3046)
!3046 = !DILexicalBlockFile(scope: !3042, file: !175, discriminator: 2)
!3047 = !DILocation(line: 1612, column: 109, scope: !3042)
!3048 = !DILocation(line: 1612, column: 98, scope: !3049)
!3049 = !DILexicalBlockFile(scope: !3042, file: !175, discriminator: 3)
!3050 = !DILocation(line: 1612, column: 80, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !3042, file: !175, discriminator: 4)
!3052 = !DILocation(line: 1612, column: 12, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !3042, file: !175, discriminator: 5)
!3054 = !DILocation(line: 1612, column: 119, scope: !3055)
!3055 = !DILexicalBlockFile(scope: !3042, file: !175, discriminator: 6)
!3056 = !DILocation(line: 1612, column: 170, scope: !3042)
!3057 = !DILocation(line: 1614, column: 13, scope: !3039)
!3058 = !DILocation(line: 1615, column: 28, scope: !3039)
!3059 = !DILocation(line: 1615, column: 7, scope: !3039)
!3060 = !DILocation(line: 1616, column: 1, scope: !3039)
!3061 = !DILocation(line: 1617, column: 7, scope: !3039)
!3062 = !DILocation(line: 1619, column: 27, scope: !2987)
!3063 = !DILocation(line: 1619, column: 4, scope: !2987)
!3064 = !DILocation(line: 1621, column: 23, scope: !2987)
!3065 = !DILocation(line: 1621, column: 4, scope: !2987)
!3066 = !DILocation(line: 1621, column: 11, scope: !2987)
!3067 = !DILocation(line: 1621, column: 21, scope: !2987)
!3068 = !DILocation(line: 1622, column: 24, scope: !2987)
!3069 = !DILocation(line: 1622, column: 4, scope: !2987)
!3070 = !DILocation(line: 1622, column: 11, scope: !2987)
!3071 = !DILocation(line: 1622, column: 22, scope: !2987)
!3072 = !DILocation(line: 1623, column: 25, scope: !2987)
!3073 = !DILocation(line: 1623, column: 4, scope: !2987)
!3074 = !DILocation(line: 1625, column: 4, scope: !2987)
!3075 = !DILocation(line: 1628, column: 17, scope: !2987)
!3076 = !DILocation(line: 1628, column: 24, scope: !2987)
!3077 = !DILocation(line: 1628, column: 4, scope: !2987)
!3078 = !DILocation(line: 1629, column: 9, scope: !2987)
!3079 = !DILocation(line: 1629, column: 4, scope: !2987)
!3080 = !DILocation(line: 1631, column: 8, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !2987, file: !175, line: 1631, column: 8)
!3082 = !DILocation(line: 1631, column: 8, scope: !2987)
!3083 = !DILocation(line: 1632, column: 19, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3081, file: !175, line: 1631, column: 18)
!3085 = !DILocation(line: 1632, column: 8, scope: !3084)
!3086 = !DILocation(line: 1632, column: 17, scope: !3084)
!3087 = !DILocation(line: 1633, column: 4, scope: !3084)
!3088 = !DILocation(line: 1635, column: 4, scope: !2987)
!3089 = !DILocation(line: 1636, column: 1, scope: !2987)
!3090 = distinct !DISubprogram(name: "AsyncTCPSocketGetPortFromAddr", scope: !175, file: !175, line: 1313, type: !3091, isLocal: true, isDefinition: true, scopeLine: 1314, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!85, !86}
!3093 = !DILocalVariable(name: "addr", arg: 1, scope: !3090, file: !175, line: 1313, type: !86)
!3094 = !DILocation(line: 1313, column: 56, scope: !3090)
!3095 = !DILocation(line: 1317, column: 18, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3090, file: !175, line: 1317, column: 7)
!3097 = !DILocation(line: 1317, column: 24, scope: !3096)
!3098 = !DILocation(line: 1317, column: 15, scope: !3096)
!3099 = !DILocation(line: 1317, column: 7, scope: !3090)
!3100 = !DILocation(line: 1318, column: 43, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3096, file: !175, line: 1317, column: 35)
!3102 = !DILocation(line: 1318, column: 50, scope: !3101)
!3103 = !DILocation(line: 1318, column: 14, scope: !3101)
!3104 = !DILocation(line: 1318, column: 7, scope: !3101)
!3105 = !DILocation(line: 1319, column: 26, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3096, file: !175, line: 1319, column: 14)
!3107 = !DILocation(line: 1319, column: 32, scope: !3106)
!3108 = !DILocation(line: 1319, column: 23, scope: !3106)
!3109 = !DILocation(line: 1319, column: 14, scope: !3096)
!3110 = !DILocation(line: 1320, column: 44, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3106, file: !175, line: 1319, column: 43)
!3112 = !DILocation(line: 1320, column: 51, scope: !3111)
!3113 = !DILocation(line: 1320, column: 14, scope: !3111)
!3114 = !DILocation(line: 1320, column: 7, scope: !3111)
!3115 = !DILocation(line: 1322, column: 25, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3106, file: !175, line: 1322, column: 14)
!3117 = !DILocation(line: 1322, column: 31, scope: !3116)
!3118 = !DILocation(line: 1322, column: 22, scope: !3116)
!3119 = !DILocation(line: 1322, column: 14, scope: !3106)
!3120 = !DILocation(line: 1323, column: 7, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3116, file: !175, line: 1322, column: 42)
!3122 = !DILocation(line: 1333, column: 37, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3116, file: !175, line: 1325, column: 11)
!3124 = !DILocation(line: 1333, column: 44, scope: !3123)
!3125 = !DILocation(line: 1333, column: 7, scope: !3123)
!3126 = !DILocation(line: 1335, column: 1, scope: !3090)
!3127 = distinct !DISubprogram(name: "AsyncTCPSocketOSVersionSupportsV4Mapped", scope: !175, file: !175, line: 1407, type: !3128, isLocal: true, isDefinition: true, scopeLine: 1408, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{!168}
!3130 = !DILocation(line: 1423, column: 4, scope: !3127)
!3131 = distinct !DISubprogram(name: "AsyncTCPSocketPollAdd", scope: !175, file: !175, line: 5078, type: !3132, isLocal: true, isDefinition: true, scopeLine: 5083, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{!1402, !173, !168, !165, !407, null}
!3134 = !DILocalVariable(name: "asock", arg: 1, scope: !3131, file: !175, line: 5078, type: !173)
!3135 = !DILocation(line: 5078, column: 39, scope: !3131)
!3136 = !DILocalVariable(name: "socket", arg: 2, scope: !3131, file: !175, line: 5079, type: !168)
!3137 = !DILocation(line: 5079, column: 28, scope: !3131)
!3138 = !DILocalVariable(name: "flags", arg: 3, scope: !3131, file: !175, line: 5080, type: !165)
!3139 = !DILocation(line: 5080, column: 27, scope: !3131)
!3140 = !DILocalVariable(name: "callback", arg: 4, scope: !3131, file: !175, line: 5081, type: !407)
!3141 = !DILocation(line: 5081, column: 38, scope: !3131)
!3142 = !DILocalVariable(name: "type", scope: !3131, file: !175, line: 5084, type: !165)
!3143 = !DILocation(line: 5084, column: 8, scope: !3131)
!3144 = !DILocalVariable(name: "info", scope: !3131, file: !175, line: 5084, type: !165)
!3145 = !DILocation(line: 5084, column: 14, scope: !3131)
!3146 = !DILocation(line: 5086, column: 8, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3131, file: !175, line: 5086, column: 8)
!3148 = !DILocation(line: 5086, column: 8, scope: !3131)
!3149 = !DILocation(line: 5088, column: 12, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3147, file: !175, line: 5086, column: 16)
!3151 = !DILocation(line: 5089, column: 13, scope: !3150)
!3152 = !DILocation(line: 5090, column: 14, scope: !3150)
!3153 = !DILocation(line: 5090, column: 21, scope: !3150)
!3154 = !DILocation(line: 5090, column: 12, scope: !3150)
!3155 = !DILocation(line: 5091, column: 4, scope: !3150)
!3156 = !DILocalVariable(name: "marker", scope: !3157, file: !175, line: 5092, type: !3158)
!3157 = distinct !DILexicalBlock(scope: !3147, file: !175, line: 5091, column: 11)
!3158 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3159, line: 79, baseType: !3160)
!3159 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!3160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3161, line: 40, baseType: !3162)
!3161 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdarg.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!3162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 5092, baseType: !3163)
!3163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3164, size: 192, align: 64, elements: !3170)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 5092, size: 192, align: 64, elements: !3165)
!3165 = !{!3166, !3167, !3168, !3169}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3164, file: !1, line: 5092, baseType: !85, size: 32, align: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3164, file: !1, line: 5092, baseType: !85, size: 32, align: 32, offset: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3164, file: !1, line: 5092, baseType: !80, size: 64, align: 64, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3164, file: !1, line: 5092, baseType: !80, size: 64, align: 64, offset: 128)
!3170 = !{!3171}
!3171 = !DISubrange(count: 1)
!3172 = !DILocation(line: 5092, column: 15, scope: !3157)
!3173 = !DILocation(line: 5093, column: 6, scope: !3157)
!3174 = !DILocation(line: 5095, column: 12, scope: !3157)
!3175 = !DILocation(line: 5096, column: 13, scope: !3157)
!3176 = !DILocation(line: 5096, column: 13, scope: !3177)
!3177 = !DILexicalBlockFile(scope: !3157, file: !175, discriminator: 1)
!3178 = !DILocation(line: 5096, column: 13, scope: !3179)
!3179 = !DILexicalBlockFile(scope: !3157, file: !175, discriminator: 2)
!3180 = !DILocation(line: 5096, column: 13, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !3157, file: !175, discriminator: 3)
!3182 = !DILocation(line: 5096, column: 12, scope: !3181)
!3183 = !DILocation(line: 5098, column: 6, scope: !3157)
!3184 = !DILocation(line: 5101, column: 33, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3131, file: !175, line: 5101, column: 8)
!3186 = !DILocation(line: 5101, column: 8, scope: !3185)
!3187 = !DILocation(line: 5101, column: 41, scope: !3185)
!3188 = !DILocation(line: 5101, column: 47, scope: !3185)
!3189 = !DILocation(line: 5101, column: 8, scope: !3131)
!3190 = !DILocation(line: 5102, column: 37, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3185, file: !175, line: 5101, column: 55)
!3192 = !DILocation(line: 5102, column: 44, scope: !3191)
!3193 = !DILocation(line: 5102, column: 52, scope: !3191)
!3194 = !DILocation(line: 5102, column: 59, scope: !3191)
!3195 = !DILocation(line: 5102, column: 69, scope: !3191)
!3196 = !DILocation(line: 5102, column: 14, scope: !3191)
!3197 = !DILocation(line: 5102, column: 7, scope: !3191)
!3198 = !DILocation(line: 5105, column: 50, scope: !3131)
!3199 = !DILocation(line: 5105, column: 25, scope: !3131)
!3200 = !DILocation(line: 5105, column: 58, scope: !3131)
!3201 = !DILocation(line: 5106, column: 25, scope: !3131)
!3202 = !DILocation(line: 5106, column: 58, scope: !3131)
!3203 = !DILocation(line: 5106, column: 33, scope: !3131)
!3204 = !DILocation(line: 5106, column: 66, scope: !3131)
!3205 = !DILocation(line: 5106, column: 31, scope: !3131)
!3206 = !DILocation(line: 5107, column: 25, scope: !3131)
!3207 = !DILocation(line: 5107, column: 35, scope: !3131)
!3208 = !DILocation(line: 5107, column: 42, scope: !3131)
!3209 = !DILocation(line: 5107, column: 48, scope: !3131)
!3210 = !DILocation(line: 5108, column: 50, scope: !3131)
!3211 = !DILocation(line: 5108, column: 25, scope: !3131)
!3212 = !DILocation(line: 5108, column: 58, scope: !3131)
!3213 = !DILocation(line: 5105, column: 11, scope: !3131)
!3214 = !DILocation(line: 5105, column: 11, scope: !3215)
!3215 = !DILexicalBlockFile(scope: !3131, file: !175, discriminator: 1)
!3216 = !DILocation(line: 5105, column: 4, scope: !3131)
!3217 = !DILocation(line: 5109, column: 1, scope: !3131)
!3218 = distinct !DISubprogram(name: "AsyncTCPSocketAcceptCallback", scope: !175, file: !175, line: 4770, type: !409, isLocal: true, isDefinition: true, scopeLine: 4771, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3219 = !DILocalVariable(name: "clientData", arg: 1, scope: !3218, file: !175, line: 4770, type: !80)
!3220 = !DILocation(line: 4770, column: 36, scope: !3218)
!3221 = !DILocalVariable(name: "asock", scope: !3218, file: !175, line: 4772, type: !173)
!3222 = !DILocation(line: 4772, column: 20, scope: !3218)
!3223 = !DILocation(line: 4772, column: 28, scope: !3218)
!3224 = !DILocalVariable(name: "retval", scope: !3218, file: !175, line: 4773, type: !165)
!3225 = !DILocation(line: 4773, column: 8, scope: !3218)
!3226 = !DILocation(line: 4779, column: 25, scope: !3218)
!3227 = !DILocation(line: 4779, column: 4, scope: !3218)
!3228 = !DILocation(line: 4780, column: 42, scope: !3218)
!3229 = !DILocation(line: 4780, column: 13, scope: !3218)
!3230 = !DILocation(line: 4780, column: 11, scope: !3218)
!3231 = !DILocation(line: 4786, column: 8, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3218, file: !175, line: 4786, column: 8)
!3233 = !DILocation(line: 4786, column: 15, scope: !3232)
!3234 = !DILocation(line: 4786, column: 8, scope: !3218)
!3235 = !DILocation(line: 4787, column: 33, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3232, file: !175, line: 4786, column: 21)
!3237 = !DILocation(line: 4787, column: 40, scope: !3236)
!3238 = !DILocation(line: 4787, column: 7, scope: !3236)
!3239 = !DILocation(line: 4788, column: 4, scope: !3236)
!3240 = !DILocation(line: 4789, column: 26, scope: !3218)
!3241 = !DILocation(line: 4789, column: 4, scope: !3218)
!3242 = !DILocation(line: 4790, column: 1, scope: !3218)
!3243 = distinct !DISubprogram(name: "AsyncTCPSocketPollParams", scope: !175, file: !175, line: 507, type: !3244, isLocal: true, isDefinition: true, scopeLine: 508, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!478, !173}
!3246 = !DILocalVariable(name: "asock", arg: 1, scope: !3243, file: !175, line: 507, type: !173)
!3247 = !DILocation(line: 507, column: 42, scope: !3243)
!3248 = !DILocation(line: 509, column: 47, scope: !3243)
!3249 = !DILocation(line: 509, column: 36, scope: !3243)
!3250 = !DILocation(line: 509, column: 11, scope: !3251)
!3251 = !DILexicalBlockFile(scope: !3243, file: !175, discriminator: 1)
!3252 = !DILocation(line: 509, column: 4, scope: !3243)
!3253 = distinct !DISubprogram(name: "AsyncTCPSocketIPollAdd", scope: !175, file: !175, line: 5174, type: !3254, isLocal: true, isDefinition: true, scopeLine: 5179, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!1402, !173, !168, !165, !407, !165}
!3256 = !DILocalVariable(name: "asock", arg: 1, scope: !3253, file: !175, line: 5174, type: !173)
!3257 = !DILocation(line: 5174, column: 40, scope: !3253)
!3258 = !DILocalVariable(name: "socket", arg: 2, scope: !3253, file: !175, line: 5175, type: !168)
!3259 = !DILocation(line: 5175, column: 29, scope: !3253)
!3260 = !DILocalVariable(name: "flags", arg: 3, scope: !3253, file: !175, line: 5176, type: !165)
!3261 = !DILocation(line: 5176, column: 28, scope: !3253)
!3262 = !DILocalVariable(name: "callback", arg: 4, scope: !3253, file: !175, line: 5177, type: !407)
!3263 = !DILocation(line: 5177, column: 39, scope: !3253)
!3264 = !DILocalVariable(name: "info", arg: 5, scope: !3253, file: !175, line: 5178, type: !165)
!3265 = !DILocation(line: 5178, column: 28, scope: !3253)
!3266 = !DILocation(line: 5181, column: 4, scope: !3253)
!3267 = distinct !DISubprogram(name: "AsyncTCPSocketAcceptInternal", scope: !175, file: !175, line: 3558, type: !2231, isLocal: true, isDefinition: true, scopeLine: 3559, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3268 = !DILocalVariable(name: "s", arg: 1, scope: !3267, file: !175, line: 3558, type: !173)
!3269 = !DILocation(line: 3558, column: 46, scope: !3267)
!3270 = !DILocalVariable(name: "newsock", scope: !3267, file: !175, line: 3560, type: !173)
!3271 = !DILocation(line: 3560, column: 20, scope: !3267)
!3272 = !DILocalVariable(name: "sysErr", scope: !3267, file: !175, line: 3561, type: !165)
!3273 = !DILocation(line: 3561, column: 8, scope: !3267)
!3274 = !DILocalVariable(name: "fd", scope: !3267, file: !175, line: 3562, type: !165)
!3275 = !DILocation(line: 3562, column: 8, scope: !3267)
!3276 = !DILocalVariable(name: "remoteAddr", scope: !3267, file: !175, line: 3563, type: !87)
!3277 = !DILocation(line: 3563, column: 28, scope: !3267)
!3278 = !DILocalVariable(name: "remoteAddrLen", scope: !3267, file: !175, line: 3564, type: !242)
!3279 = !DILocation(line: 3564, column: 14, scope: !3267)
!3280 = !DILocation(line: 3569, column: 21, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3267, file: !175, line: 3569, column: 8)
!3282 = !DILocation(line: 3569, column: 24, scope: !3281)
!3283 = !DILocation(line: 3569, column: 28, scope: !3281)
!3284 = !DILocation(line: 3569, column: 14, scope: !3281)
!3285 = !DILocation(line: 3569, column: 12, scope: !3281)
!3286 = !DILocation(line: 3570, column: 38, scope: !3281)
!3287 = !DILocation(line: 3569, column: 8, scope: !3267)
!3288 = !DILocation(line: 3571, column: 17, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3281, file: !175, line: 3570, column: 45)
!3290 = !DILocation(line: 3571, column: 16, scope: !3289)
!3291 = !DILocation(line: 3571, column: 14, scope: !3289)
!3292 = !DILocation(line: 3572, column: 25, scope: !3289)
!3293 = !DILocation(line: 3572, column: 7, scope: !3289)
!3294 = !DILocation(line: 3572, column: 10, scope: !3289)
!3295 = !DILocation(line: 3572, column: 23, scope: !3289)
!3296 = !DILocation(line: 3573, column: 11, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3289, file: !175, line: 3573, column: 11)
!3298 = !DILocation(line: 3573, column: 18, scope: !3297)
!3299 = !DILocation(line: 3573, column: 11, scope: !3289)
!3300 = !DILocation(line: 3574, column: 10, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3297, file: !175, line: 3573, column: 39)
!3302 = distinct !{!3302, !3300}
!3303 = !DILocation(line: 3574, column: 74, scope: !3304)
!3304 = !DILexicalBlockFile(scope: !3305, file: !175, discriminator: 1)
!3305 = distinct !DILexicalBlock(scope: !3301, file: !175, line: 3574, column: 13)
!3306 = !DILocation(line: 3574, column: 63, scope: !3304)
!3307 = !DILocation(line: 3574, column: 45, scope: !3308)
!3308 = !DILexicalBlockFile(scope: !3304, file: !175, discriminator: 2)
!3309 = !DILocation(line: 3574, column: 108, scope: !3304)
!3310 = !DILocation(line: 3574, column: 97, scope: !3311)
!3311 = !DILexicalBlockFile(scope: !3304, file: !175, discriminator: 3)
!3312 = !DILocation(line: 3574, column: 79, scope: !3313)
!3313 = !DILexicalBlockFile(scope: !3304, file: !175, discriminator: 4)
!3314 = !DILocation(line: 3574, column: 15, scope: !3315)
!3315 = !DILexicalBlockFile(scope: !3304, file: !175, discriminator: 5)
!3316 = !DILocation(line: 3574, column: 114, scope: !3317)
!3317 = !DILexicalBlockFile(scope: !3304, file: !175, discriminator: 6)
!3318 = !DILocation(line: 3574, column: 158, scope: !3304)
!3319 = !DILocation(line: 3585, column: 10, scope: !3301)
!3320 = !DILocation(line: 3596, column: 18, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3297, file: !175, line: 3596, column: 18)
!3322 = !DILocation(line: 3596, column: 25, scope: !3321)
!3323 = !DILocation(line: 3596, column: 18, scope: !3297)
!3324 = !DILocation(line: 3597, column: 10, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3321, file: !175, line: 3596, column: 41)
!3326 = distinct !{!3326, !3324}
!3327 = !DILocation(line: 3597, column: 70, scope: !3328)
!3328 = !DILexicalBlockFile(scope: !3329, file: !175, discriminator: 1)
!3329 = distinct !DILexicalBlock(scope: !3325, file: !175, line: 3597, column: 13)
!3330 = !DILocation(line: 3597, column: 59, scope: !3328)
!3331 = !DILocation(line: 3597, column: 41, scope: !3332)
!3332 = !DILexicalBlockFile(scope: !3328, file: !175, discriminator: 2)
!3333 = !DILocation(line: 3597, column: 104, scope: !3328)
!3334 = !DILocation(line: 3597, column: 93, scope: !3335)
!3335 = !DILexicalBlockFile(scope: !3328, file: !175, discriminator: 3)
!3336 = !DILocation(line: 3597, column: 75, scope: !3337)
!3337 = !DILexicalBlockFile(scope: !3328, file: !175, discriminator: 4)
!3338 = !DILocation(line: 3597, column: 15, scope: !3339)
!3339 = !DILexicalBlockFile(scope: !3328, file: !175, discriminator: 5)
!3340 = !DILocation(line: 3597, column: 110, scope: !3341)
!3341 = !DILexicalBlockFile(scope: !3328, file: !175, discriminator: 6)
!3342 = !DILocation(line: 3597, column: 156, scope: !3328)
!3343 = !DILocation(line: 3599, column: 10, scope: !3325)
!3344 = !DILocation(line: 3602, column: 10, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3321, file: !175, line: 3601, column: 14)
!3346 = distinct !{!3346, !3344}
!3347 = !DILocation(line: 3602, column: 74, scope: !3348)
!3348 = !DILexicalBlockFile(scope: !3349, file: !175, discriminator: 1)
!3349 = distinct !DILexicalBlock(scope: !3345, file: !175, line: 3602, column: 13)
!3350 = !DILocation(line: 3602, column: 63, scope: !3348)
!3351 = !DILocation(line: 3602, column: 45, scope: !3352)
!3352 = !DILexicalBlockFile(scope: !3348, file: !175, discriminator: 2)
!3353 = !DILocation(line: 3602, column: 108, scope: !3348)
!3354 = !DILocation(line: 3602, column: 97, scope: !3355)
!3355 = !DILexicalBlockFile(scope: !3348, file: !175, discriminator: 3)
!3356 = !DILocation(line: 3602, column: 79, scope: !3357)
!3357 = !DILexicalBlockFile(scope: !3348, file: !175, discriminator: 4)
!3358 = !DILocation(line: 3602, column: 15, scope: !3359)
!3359 = !DILexicalBlockFile(scope: !3348, file: !175, discriminator: 5)
!3360 = !DILocation(line: 3602, column: 165, scope: !3348)
!3361 = !DILocation(line: 3602, column: 168, scope: !3348)
!3362 = !DILocation(line: 3602, column: 172, scope: !3348)
!3363 = !DILocation(line: 3602, column: 197, scope: !3348)
!3364 = !DILocation(line: 3602, column: 180, scope: !3365)
!3365 = !DILexicalBlockFile(scope: !3348, file: !175, discriminator: 6)
!3366 = !DILocation(line: 3602, column: 114, scope: !3367)
!3367 = !DILexicalBlockFile(scope: !3348, file: !175, discriminator: 7)
!3368 = !DILocation(line: 3602, column: 207, scope: !3348)
!3369 = !DILocation(line: 3605, column: 10, scope: !3345)
!3370 = !DILocation(line: 3609, column: 19, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3267, file: !175, line: 3609, column: 8)
!3372 = !DILocation(line: 3609, column: 8, scope: !3371)
!3373 = !DILocation(line: 3609, column: 29, scope: !3371)
!3374 = !DILocation(line: 3609, column: 40, scope: !3371)
!3375 = !DILocation(line: 3610, column: 8, scope: !3371)
!3376 = !DILocation(line: 3609, column: 8, scope: !3377)
!3377 = !DILexicalBlockFile(scope: !3267, file: !175, discriminator: 1)
!3378 = !DILocalVariable(name: "addr6", scope: !3379, file: !175, line: 3611, type: !119)
!3379 = distinct !DILexicalBlock(scope: !3371, file: !175, line: 3610, column: 51)
!3380 = !DILocation(line: 3611, column: 28, scope: !3379)
!3381 = !DILocation(line: 3611, column: 36, scope: !3379)
!3382 = !DILocalVariable(name: "__a", scope: !3383, file: !175, line: 3619, type: !163)
!3383 = distinct !DILexicalBlock(scope: !3384, file: !175, line: 3619, column: 26)
!3384 = distinct !DILexicalBlock(scope: !3379, file: !175, line: 3619, column: 10)
!3385 = !DILocation(line: 3619, column: 51, scope: !3383)
!3386 = !DILocation(line: 3619, column: 12, scope: !3383)
!3387 = !DILocation(line: 3619, column: 19, scope: !3383)
!3388 = !DILocation(line: 3619, column: 13, scope: !3383)
!3389 = !DILocation(line: 3619, column: 18, scope: !3383)
!3390 = !DILocation(line: 3619, column: 26, scope: !3383)
!3391 = !DILocation(line: 3619, column: 41, scope: !3383)
!3392 = !DILocation(line: 3619, column: 46, scope: !3383)
!3393 = !DILocation(line: 3619, column: 49, scope: !3394)
!3394 = !DILexicalBlockFile(scope: !3383, file: !175, discriminator: 1)
!3395 = !DILocation(line: 3619, column: 54, scope: !3394)
!3396 = !DILocation(line: 3619, column: 62, scope: !3394)
!3397 = !DILocation(line: 3619, column: 77, scope: !3394)
!3398 = !DILocation(line: 3619, column: 82, scope: !3394)
!3399 = !DILocation(line: 3619, column: 85, scope: !3400)
!3400 = !DILexicalBlockFile(scope: !3383, file: !175, discriminator: 2)
!3401 = !DILocation(line: 3619, column: 90, scope: !3400)
!3402 = !DILocation(line: 3619, column: 98, scope: !3400)
!3403 = !DILocation(line: 3619, column: 116, scope: !3400)
!3404 = !DILocation(line: 3619, column: 113, scope: !3400)
!3405 = !DILocation(line: 3619, column: 82, scope: !3406)
!3406 = !DILexicalBlockFile(scope: !3383, file: !175, discriminator: 3)
!3407 = !DILocation(line: 3619, column: 28, scope: !3406)
!3408 = !DILocation(line: 3619, column: 132, scope: !3406)
!3409 = !DILocation(line: 3619, column: 25, scope: !3406)
!3410 = !DILocation(line: 3619, column: 10, scope: !3406)
!3411 = !DILocation(line: 3620, column: 10, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3384, file: !175, line: 3619, column: 53)
!3413 = distinct !{!3413, !3411}
!3414 = !DILocation(line: 3620, column: 74, scope: !3415)
!3415 = !DILexicalBlockFile(scope: !3416, file: !175, discriminator: 1)
!3416 = distinct !DILexicalBlock(scope: !3412, file: !175, line: 3620, column: 13)
!3417 = !DILocation(line: 3620, column: 63, scope: !3415)
!3418 = !DILocation(line: 3620, column: 45, scope: !3419)
!3419 = !DILexicalBlockFile(scope: !3415, file: !175, discriminator: 2)
!3420 = !DILocation(line: 3620, column: 108, scope: !3415)
!3421 = !DILocation(line: 3620, column: 97, scope: !3422)
!3422 = !DILexicalBlockFile(scope: !3415, file: !175, discriminator: 3)
!3423 = !DILocation(line: 3620, column: 79, scope: !3424)
!3424 = !DILexicalBlockFile(scope: !3415, file: !175, discriminator: 4)
!3425 = !DILocation(line: 3620, column: 15, scope: !3426)
!3426 = !DILexicalBlockFile(scope: !3415, file: !175, discriminator: 5)
!3427 = !DILocation(line: 3620, column: 209, scope: !3415)
!3428 = !DILocation(line: 3620, column: 212, scope: !3415)
!3429 = !DILocation(line: 3620, column: 114, scope: !3430)
!3430 = !DILexicalBlockFile(scope: !3415, file: !175, discriminator: 6)
!3431 = !DILocation(line: 3620, column: 217, scope: !3415)
!3432 = !DILocation(line: 3623, column: 16, scope: !3412)
!3433 = !DILocation(line: 3623, column: 10, scope: !3412)
!3434 = !DILocation(line: 3625, column: 10, scope: !3412)
!3435 = !DILocation(line: 3627, column: 4, scope: !3379)
!3436 = !DILocation(line: 3629, column: 39, scope: !3267)
!3437 = !DILocation(line: 3629, column: 68, scope: !3267)
!3438 = !DILocation(line: 3629, column: 43, scope: !3267)
!3439 = !DILocation(line: 3629, column: 14, scope: !3377)
!3440 = !DILocation(line: 3629, column: 12, scope: !3267)
!3441 = !DILocation(line: 3630, column: 9, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3267, file: !175, line: 3630, column: 8)
!3443 = !DILocation(line: 3630, column: 8, scope: !3267)
!3444 = !DILocation(line: 3631, column: 13, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3442, file: !175, line: 3630, column: 18)
!3446 = !DILocation(line: 3631, column: 7, scope: !3445)
!3447 = !DILocation(line: 3633, column: 7, scope: !3445)
!3448 = !DILocation(line: 3636, column: 4, scope: !3267)
!3449 = !DILocation(line: 3636, column: 13, scope: !3267)
!3450 = !DILocation(line: 3636, column: 26, scope: !3267)
!3451 = !DILocation(line: 3637, column: 29, scope: !3267)
!3452 = !DILocation(line: 3637, column: 4, scope: !3267)
!3453 = !DILocation(line: 3637, column: 13, scope: !3267)
!3454 = !DILocation(line: 3637, column: 27, scope: !3267)
!3455 = !DILocation(line: 3638, column: 27, scope: !3267)
!3456 = !DILocation(line: 3638, column: 4, scope: !3267)
!3457 = !DILocation(line: 3639, column: 30, scope: !3267)
!3458 = !DILocation(line: 3639, column: 33, scope: !3267)
!3459 = !DILocation(line: 3639, column: 4, scope: !3267)
!3460 = !DILocation(line: 3639, column: 13, scope: !3267)
!3461 = !DILocation(line: 3639, column: 28, scope: !3267)
!3462 = !DILocation(line: 3640, column: 30, scope: !3267)
!3463 = !DILocation(line: 3640, column: 33, scope: !3267)
!3464 = !DILocation(line: 3640, column: 4, scope: !3267)
!3465 = !DILocation(line: 3640, column: 13, scope: !3267)
!3466 = !DILocation(line: 3640, column: 28, scope: !3267)
!3467 = !DILocation(line: 3645, column: 4, scope: !3267)
!3468 = !DILocation(line: 3645, column: 7, scope: !3267)
!3469 = !DILocation(line: 3645, column: 28, scope: !3267)
!3470 = !DILocation(line: 3645, column: 17, scope: !3267)
!3471 = !DILocation(line: 3645, column: 38, scope: !3267)
!3472 = !DILocation(line: 3645, column: 41, scope: !3267)
!3473 = !DILocation(line: 3645, column: 4, scope: !3377)
!3474 = !DILocation(line: 3647, column: 4, scope: !3267)
!3475 = !DILocation(line: 3648, column: 1, scope: !3267)
!3476 = distinct !DISubprogram(name: "AsyncTCPSocketHandleError", scope: !175, file: !175, line: 525, type: !3477, isLocal: true, isDefinition: true, scopeLine: 526, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{null, !173, !165}
!3479 = !DILocalVariable(name: "asock", arg: 1, scope: !3476, file: !175, line: 525, type: !173)
!3480 = !DILocation(line: 525, column: 43, scope: !3476)
!3481 = !DILocalVariable(name: "error", arg: 2, scope: !3476, file: !175, line: 525, type: !165)
!3482 = !DILocation(line: 525, column: 54, scope: !3476)
!3483 = !DILocation(line: 527, column: 38, scope: !3476)
!3484 = !DILocation(line: 527, column: 27, scope: !3476)
!3485 = !DILocation(line: 527, column: 46, scope: !3476)
!3486 = !DILocation(line: 527, column: 4, scope: !3487)
!3487 = !DILexicalBlockFile(scope: !3476, file: !175, discriminator: 1)
!3488 = !DILocation(line: 528, column: 1, scope: !3476)
!3489 = distinct !DISubprogram(name: "AsyncTCPSocketConnectCallback", scope: !175, file: !175, line: 4811, type: !409, isLocal: true, isDefinition: true, scopeLine: 4812, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3490 = !DILocalVariable(name: "clientData", arg: 1, scope: !3489, file: !175, line: 4811, type: !80)
!3491 = !DILocation(line: 4811, column: 37, scope: !3489)
!3492 = !DILocalVariable(name: "asock", scope: !3489, file: !175, line: 4813, type: !173)
!3493 = !DILocation(line: 4813, column: 20, scope: !3489)
!3494 = !DILocation(line: 4813, column: 28, scope: !3489)
!3495 = !DILocalVariable(name: "retval", scope: !3489, file: !175, line: 4814, type: !165)
!3496 = !DILocation(line: 4814, column: 8, scope: !3489)
!3497 = !DILocation(line: 4820, column: 25, scope: !3489)
!3498 = !DILocation(line: 4820, column: 4, scope: !3489)
!3499 = !DILocation(line: 4821, column: 43, scope: !3489)
!3500 = !DILocation(line: 4821, column: 13, scope: !3489)
!3501 = !DILocation(line: 4821, column: 11, scope: !3489)
!3502 = !DILocation(line: 4822, column: 8, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3489, file: !175, line: 4822, column: 8)
!3504 = !DILocation(line: 4822, column: 15, scope: !3503)
!3505 = !DILocation(line: 4822, column: 8, scope: !3489)
!3506 = !DILocation(line: 4824, column: 33, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3503, file: !175, line: 4822, column: 21)
!3508 = !DILocation(line: 4824, column: 40, scope: !3507)
!3509 = !DILocation(line: 4824, column: 7, scope: !3507)
!3510 = !DILocation(line: 4825, column: 4, scope: !3507)
!3511 = !DILocation(line: 4826, column: 26, scope: !3489)
!3512 = !DILocation(line: 4826, column: 4, scope: !3489)
!3513 = !DILocation(line: 4827, column: 1, scope: !3489)
!3514 = distinct !DISubprogram(name: "AsyncTCPSocketConnectInternal", scope: !175, file: !175, line: 3671, type: !2231, isLocal: true, isDefinition: true, scopeLine: 3672, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3515 = !DILocalVariable(name: "s", arg: 1, scope: !3514, file: !175, line: 3671, type: !173)
!3516 = !DILocation(line: 3671, column: 47, scope: !3514)
!3517 = !DILocalVariable(name: "optval", scope: !3514, file: !175, line: 3673, type: !165)
!3518 = !DILocation(line: 3673, column: 8, scope: !3514)
!3519 = !DILocalVariable(name: "optlen", scope: !3514, file: !175, line: 3673, type: !165)
!3520 = !DILocation(line: 3673, column: 20, scope: !3514)
!3521 = !DILocalVariable(name: "sysErr", scope: !3514, file: !175, line: 3673, type: !165)
!3522 = !DILocation(line: 3673, column: 44, scope: !3514)
!3523 = !DILocation(line: 3683, column: 19, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3514, file: !175, line: 3683, column: 8)
!3525 = !DILocation(line: 3683, column: 22, scope: !3524)
!3526 = !DILocation(line: 3684, column: 19, scope: !3524)
!3527 = !DILocation(line: 3684, column: 37, scope: !3524)
!3528 = !DILocation(line: 3683, column: 8, scope: !3524)
!3529 = !DILocation(line: 3684, column: 54, scope: !3524)
!3530 = !DILocation(line: 3683, column: 8, scope: !3514)
!3531 = !DILocation(line: 3685, column: 17, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3524, file: !175, line: 3684, column: 60)
!3533 = !DILocation(line: 3685, column: 16, scope: !3532)
!3534 = !DILocation(line: 3685, column: 14, scope: !3532)
!3535 = !DILocation(line: 3686, column: 25, scope: !3532)
!3536 = !DILocation(line: 3686, column: 7, scope: !3532)
!3537 = !DILocation(line: 3686, column: 10, scope: !3532)
!3538 = !DILocation(line: 3686, column: 23, scope: !3532)
!3539 = !DILocation(line: 3688, column: 34, scope: !3532)
!3540 = !DILocation(line: 3688, column: 37, scope: !3532)
!3541 = !DILocation(line: 3688, column: 41, scope: !3532)
!3542 = !DILocation(line: 3688, column: 66, scope: !3532)
!3543 = !DILocation(line: 3688, column: 49, scope: !3532)
!3544 = !DILocation(line: 3687, column: 7, scope: !3532)
!3545 = !DILocation(line: 3690, column: 7, scope: !3532)
!3546 = !DILocation(line: 3693, column: 8, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3514, file: !175, line: 3693, column: 8)
!3548 = !DILocation(line: 3693, column: 15, scope: !3547)
!3549 = !DILocation(line: 3693, column: 8, scope: !3514)
!3550 = !DILocation(line: 3694, column: 25, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3547, file: !175, line: 3693, column: 21)
!3552 = !DILocation(line: 3694, column: 7, scope: !3551)
!3553 = !DILocation(line: 3694, column: 10, scope: !3551)
!3554 = !DILocation(line: 3694, column: 23, scope: !3551)
!3555 = !DILocation(line: 3695, column: 7, scope: !3551)
!3556 = distinct !{!3556, !3555}
!3557 = !DILocation(line: 3695, column: 197, scope: !3558)
!3558 = !DILexicalBlockFile(scope: !3559, file: !175, discriminator: 1)
!3559 = distinct !DILexicalBlock(scope: !3551, file: !175, line: 3695, column: 10)
!3560 = !DILocation(line: 3697, column: 7, scope: !3551)
!3561 = !DILocation(line: 3700, column: 4, scope: !3514)
!3562 = !DILocation(line: 3700, column: 7, scope: !3514)
!3563 = !DILocation(line: 3700, column: 20, scope: !3514)
!3564 = !DILocation(line: 3701, column: 20, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3514, file: !175, line: 3701, column: 8)
!3566 = !DILocation(line: 3701, column: 23, scope: !3565)
!3567 = !DILocation(line: 3701, column: 47, scope: !3565)
!3568 = !DILocation(line: 3701, column: 50, scope: !3565)
!3569 = !DILocation(line: 3701, column: 27, scope: !3565)
!3570 = !DILocation(line: 3702, column: 21, scope: !3565)
!3571 = !DILocation(line: 3702, column: 24, scope: !3565)
!3572 = !DILocation(line: 3701, column: 8, scope: !3565)
!3573 = !DILocation(line: 3702, column: 38, scope: !3565)
!3574 = !DILocation(line: 3701, column: 8, scope: !3514)
!3575 = !DILocation(line: 3703, column: 17, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3565, file: !175, line: 3702, column: 44)
!3577 = !DILocation(line: 3703, column: 16, scope: !3576)
!3578 = !DILocation(line: 3703, column: 14, scope: !3576)
!3579 = !DILocation(line: 3704, column: 25, scope: !3576)
!3580 = !DILocation(line: 3704, column: 7, scope: !3576)
!3581 = !DILocation(line: 3704, column: 10, scope: !3576)
!3582 = !DILocation(line: 3704, column: 23, scope: !3576)
!3583 = !DILocation(line: 3706, column: 33, scope: !3576)
!3584 = !DILocation(line: 3706, column: 36, scope: !3576)
!3585 = !DILocation(line: 3706, column: 40, scope: !3576)
!3586 = !DILocation(line: 3706, column: 65, scope: !3576)
!3587 = !DILocation(line: 3706, column: 48, scope: !3576)
!3588 = !DILocation(line: 3705, column: 7, scope: !3576)
!3589 = !DILocation(line: 3708, column: 7, scope: !3576)
!3590 = !DILocation(line: 3702, column: 41, scope: !3591)
!3591 = !DILexicalBlockFile(scope: !3565, file: !175, discriminator: 1)
!3592 = !DILocation(line: 3712, column: 27, scope: !3514)
!3593 = !DILocation(line: 3712, column: 4, scope: !3514)
!3594 = !DILocation(line: 3713, column: 4, scope: !3514)
!3595 = !DILocation(line: 3713, column: 7, scope: !3514)
!3596 = !DILocation(line: 3713, column: 28, scope: !3514)
!3597 = !DILocation(line: 3713, column: 17, scope: !3514)
!3598 = !DILocation(line: 3713, column: 32, scope: !3514)
!3599 = !DILocation(line: 3713, column: 35, scope: !3514)
!3600 = !DILocation(line: 3713, column: 4, scope: !3601)
!3601 = !DILexicalBlockFile(scope: !3514, file: !175, discriminator: 1)
!3602 = !DILocation(line: 3715, column: 4, scope: !3514)
!3603 = !DILocation(line: 3716, column: 1, scope: !3514)
!3604 = distinct !DISubprogram(name: "AsyncTCPSocketIPollSendCallback", scope: !175, file: !175, line: 5024, type: !409, isLocal: true, isDefinition: true, scopeLine: 5025, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3605 = !DILocalVariable(name: "clientData", arg: 1, scope: !3604, file: !175, line: 5024, type: !80)
!3606 = !DILocation(line: 5024, column: 39, scope: !3604)
!3607 = !DILocation(line: 5027, column: 4, scope: !3604)
!3608 = !DILocation(line: 5055, column: 1, scope: !3604)
!3609 = distinct !DISubprogram(name: "AsyncTCPSocketIPollRecvCallback", scope: !175, file: !175, line: 4887, type: !409, isLocal: true, isDefinition: true, scopeLine: 4888, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3610 = !DILocalVariable(name: "clientData", arg: 1, scope: !3609, file: !175, line: 4887, type: !80)
!3611 = !DILocation(line: 4887, column: 39, scope: !3609)
!3612 = !DILocation(line: 4890, column: 4, scope: !3609)
!3613 = !DILocation(line: 4932, column: 1, scope: !3609)
!3614 = distinct !DISubprogram(name: "AsyncTCPSocketSendCallback", scope: !175, file: !175, line: 4955, type: !409, isLocal: true, isDefinition: true, scopeLine: 4956, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3615 = !DILocalVariable(name: "clientData", arg: 1, scope: !3614, file: !175, line: 4955, type: !80)
!3616 = !DILocation(line: 4955, column: 34, scope: !3614)
!3617 = !DILocalVariable(name: "s", scope: !3614, file: !175, line: 4957, type: !173)
!3618 = !DILocation(line: 4957, column: 20, scope: !3614)
!3619 = !DILocation(line: 4957, column: 24, scope: !3614)
!3620 = !DILocalVariable(name: "retval", scope: !3614, file: !175, line: 4958, type: !165)
!3621 = !DILocation(line: 4958, column: 8, scope: !3614)
!3622 = !DILocation(line: 4963, column: 25, scope: !3614)
!3623 = !DILocation(line: 4963, column: 4, scope: !3614)
!3624 = !DILocation(line: 4964, column: 4, scope: !3614)
!3625 = !DILocation(line: 4964, column: 7, scope: !3614)
!3626 = !DILocation(line: 4964, column: 14, scope: !3614)
!3627 = !DILocation(line: 4965, column: 4, scope: !3614)
!3628 = !DILocation(line: 4965, column: 7, scope: !3614)
!3629 = !DILocation(line: 4965, column: 19, scope: !3614)
!3630 = !DILocation(line: 4966, column: 40, scope: !3614)
!3631 = !DILocation(line: 4966, column: 13, scope: !3614)
!3632 = !DILocation(line: 4966, column: 11, scope: !3614)
!3633 = !DILocation(line: 4967, column: 8, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3614, file: !175, line: 4967, column: 8)
!3635 = !DILocation(line: 4967, column: 15, scope: !3634)
!3636 = !DILocation(line: 4967, column: 20, scope: !3634)
!3637 = !DILocation(line: 4968, column: 8, scope: !3634)
!3638 = !DILocation(line: 4968, column: 15, scope: !3634)
!3639 = !DILocation(line: 4967, column: 8, scope: !3640)
!3640 = !DILexicalBlockFile(scope: !3614, file: !175, discriminator: 1)
!3641 = !DILocation(line: 4969, column: 33, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3634, file: !175, line: 4968, column: 21)
!3643 = !DILocation(line: 4969, column: 36, scope: !3642)
!3644 = !DILocation(line: 4969, column: 7, scope: !3642)
!3645 = !DILocation(line: 4970, column: 4, scope: !3642)
!3646 = !DILocation(line: 4970, column: 15, scope: !3647)
!3647 = !DILexicalBlockFile(scope: !3648, file: !175, discriminator: 1)
!3648 = distinct !DILexicalBlock(scope: !3634, file: !175, line: 4970, column: 15)
!3649 = !DILocation(line: 4970, column: 18, scope: !3647)
!3650 = !DILocation(line: 4970, column: 30, scope: !3647)
!3651 = !DILocation(line: 4970, column: 34, scope: !3652)
!3652 = !DILexicalBlockFile(scope: !3648, file: !175, discriminator: 2)
!3653 = !DILocation(line: 4970, column: 37, scope: !3652)
!3654 = !DILocation(line: 4970, column: 15, scope: !3652)
!3655 = !DILocalVariable(name: "pollStatus", scope: !3656, file: !175, line: 4971, type: !1402)
!3656 = distinct !DILexicalBlock(scope: !3648, file: !175, line: 4970, column: 45)
!3657 = !DILocation(line: 4971, column: 20, scope: !3656)
!3658 = !DILocation(line: 4993, column: 45, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3656, file: !175, line: 4992, column: 7)
!3660 = !DILocation(line: 4994, column: 42, scope: !3659)
!3661 = !DILocation(line: 4994, column: 45, scope: !3659)
!3662 = !DILocation(line: 4993, column: 23, scope: !3659)
!3663 = !DILocation(line: 4993, column: 21, scope: !3659)
!3664 = !DILocation(line: 4995, column: 36, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !175, line: 4995, column: 16)
!3666 = distinct !DILexicalBlock(scope: !3659, file: !175, line: 4995, column: 11)
!3667 = !DILocation(line: 4995, column: 47, scope: !3665)
!3668 = !DILocation(line: 4995, column: 34, scope: !3665)
!3669 = !DILocation(line: 4995, column: 33, scope: !3665)
!3670 = !DILocation(line: 4995, column: 16, scope: !3665)
!3671 = !DILocation(line: 4995, column: 16, scope: !3666)
!3672 = !DILocation(line: 4995, column: 81, scope: !3673)
!3673 = !DILexicalBlockFile(scope: !3674, file: !175, discriminator: 1)
!3674 = distinct !DILexicalBlock(scope: !3665, file: !175, line: 4995, column: 79)
!3675 = !DILocation(line: 4997, column: 7, scope: !3656)
!3676 = !DILocation(line: 4997, column: 10, scope: !3656)
!3677 = !DILocation(line: 4997, column: 17, scope: !3656)
!3678 = !DILocation(line: 4998, column: 4, scope: !3656)
!3679 = !DILocation(line: 4999, column: 26, scope: !3614)
!3680 = !DILocation(line: 4999, column: 4, scope: !3614)
!3681 = !DILocation(line: 5000, column: 1, scope: !3614)
!3682 = distinct !DISubprogram(name: "AsyncTCPSocketRecvCallback", scope: !175, file: !175, line: 4848, type: !409, isLocal: true, isDefinition: true, scopeLine: 4849, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3683 = !DILocalVariable(name: "clientData", arg: 1, scope: !3682, file: !175, line: 4848, type: !80)
!3684 = !DILocation(line: 4848, column: 34, scope: !3682)
!3685 = !DILocalVariable(name: "asock", scope: !3682, file: !175, line: 4850, type: !173)
!3686 = !DILocation(line: 4850, column: 20, scope: !3682)
!3687 = !DILocation(line: 4850, column: 28, scope: !3682)
!3688 = !DILocalVariable(name: "error", scope: !3682, file: !175, line: 4851, type: !165)
!3689 = !DILocation(line: 4851, column: 8, scope: !3682)
!3690 = !DILocation(line: 4856, column: 25, scope: !3682)
!3691 = !DILocation(line: 4856, column: 4, scope: !3682)
!3692 = !DILocation(line: 4858, column: 41, scope: !3682)
!3693 = !DILocation(line: 4858, column: 12, scope: !3682)
!3694 = !DILocation(line: 4858, column: 10, scope: !3682)
!3695 = !DILocation(line: 4859, column: 8, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3682, file: !175, line: 4859, column: 8)
!3697 = !DILocation(line: 4859, column: 14, scope: !3696)
!3698 = !DILocation(line: 4859, column: 19, scope: !3696)
!3699 = !DILocation(line: 4859, column: 22, scope: !3700)
!3700 = !DILexicalBlockFile(scope: !3696, file: !175, discriminator: 1)
!3701 = !DILocation(line: 4859, column: 28, scope: !3700)
!3702 = !DILocation(line: 4859, column: 8, scope: !3700)
!3703 = !DILocation(line: 4860, column: 33, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3696, file: !175, line: 4859, column: 34)
!3705 = !DILocation(line: 4860, column: 40, scope: !3704)
!3706 = !DILocation(line: 4860, column: 7, scope: !3704)
!3707 = !DILocation(line: 4861, column: 4, scope: !3704)
!3708 = !DILocation(line: 4863, column: 26, scope: !3682)
!3709 = !DILocation(line: 4863, column: 4, scope: !3682)
!3710 = !DILocation(line: 4864, column: 1, scope: !3682)
!3711 = distinct !DISubprogram(name: "AsyncTCPSocketSetOption", scope: !175, file: !175, line: 5740, type: !238, isLocal: true, isDefinition: true, scopeLine: 5745, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3712 = !DILocalVariable(name: "asyncSocket", arg: 1, scope: !3711, file: !175, line: 5740, type: !213)
!3713 = !DILocation(line: 5740, column: 38, scope: !3711)
!3714 = !DILocalVariable(name: "layer", arg: 2, scope: !3711, file: !175, line: 5741, type: !240)
!3715 = !DILocation(line: 5741, column: 47, scope: !3711)
!3716 = !DILocalVariable(name: "optID", arg: 3, scope: !3711, file: !175, line: 5742, type: !241)
!3717 = !DILocation(line: 5742, column: 44, scope: !3711)
!3718 = !DILocalVariable(name: "valuePtr", arg: 4, scope: !3711, file: !175, line: 5743, type: !143)
!3719 = !DILocation(line: 5743, column: 37, scope: !3711)
!3720 = !DILocalVariable(name: "inBufLen", arg: 5, scope: !3711, file: !175, line: 5744, type: !242)
!3721 = !DILocation(line: 5744, column: 35, scope: !3711)
!3722 = !DILocalVariable(name: "tcpSocket", scope: !3711, file: !175, line: 5748, type: !173)
!3723 = !DILocation(line: 5748, column: 20, scope: !3711)
!3724 = !DILocation(line: 5748, column: 42, scope: !3711)
!3725 = !DILocation(line: 5748, column: 32, scope: !3711)
!3726 = !DILocalVariable(name: "isSupported", scope: !3711, file: !175, line: 5749, type: !168)
!3727 = !DILocation(line: 5749, column: 9, scope: !3711)
!3728 = !DILocation(line: 5751, column: 17, scope: !3711)
!3729 = !DILocation(line: 5751, column: 4, scope: !3711)
!3730 = !DILocation(line: 5756, column: 7, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3711, file: !175, line: 5752, column: 4)
!3732 = !DILocation(line: 5758, column: 7, scope: !3731)
!3733 = distinct !{!3733, !3732}
!3734 = !DILocation(line: 5758, column: 67, scope: !3735)
!3735 = !DILexicalBlockFile(scope: !3736, file: !175, discriminator: 1)
!3736 = distinct !DILexicalBlock(scope: !3731, file: !175, line: 5758, column: 10)
!3737 = !DILocation(line: 5758, column: 56, scope: !3735)
!3738 = !DILocation(line: 5758, column: 38, scope: !3739)
!3739 = !DILexicalBlockFile(scope: !3735, file: !175, discriminator: 2)
!3740 = !DILocation(line: 5758, column: 109, scope: !3735)
!3741 = !DILocation(line: 5758, column: 98, scope: !3742)
!3742 = !DILexicalBlockFile(scope: !3735, file: !175, discriminator: 3)
!3743 = !DILocation(line: 5758, column: 80, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3735, file: !175, discriminator: 4)
!3745 = !DILocation(line: 5758, column: 12, scope: !3746)
!3746 = !DILexicalBlockFile(scope: !3735, file: !175, discriminator: 5)
!3747 = !DILocation(line: 5758, column: 224, scope: !3735)
!3748 = !DILocation(line: 5758, column: 231, scope: !3735)
!3749 = !DILocation(line: 5758, column: 123, scope: !3750)
!3750 = !DILexicalBlockFile(scope: !3735, file: !175, discriminator: 6)
!3751 = !DILocation(line: 5758, column: 239, scope: !3735)
!3752 = !DILocation(line: 5762, column: 7, scope: !3731)
!3753 = !DILocation(line: 5770, column: 9, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3711, file: !175, line: 5770, column: 8)
!3755 = !DILocation(line: 5770, column: 15, scope: !3754)
!3756 = !DILocation(line: 5770, column: 48, scope: !3754)
!3757 = !DILocation(line: 5771, column: 9, scope: !3754)
!3758 = !DILocation(line: 5771, column: 15, scope: !3754)
!3759 = !DILocation(line: 5770, column: 8, scope: !3760)
!3760 = !DILexicalBlockFile(scope: !3711, file: !175, discriminator: 1)
!3761 = !DILocation(line: 5773, column: 51, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3754, file: !175, line: 5771, column: 59)
!3763 = !DILocation(line: 5773, column: 35, scope: !3762)
!3764 = !DILocation(line: 5773, column: 7, scope: !3762)
!3765 = !DILocation(line: 5773, column: 18, scope: !3762)
!3766 = !DILocation(line: 5773, column: 33, scope: !3762)
!3767 = !DILocation(line: 5774, column: 7, scope: !3762)
!3768 = distinct !{!3768, !3767}
!3769 = !DILocation(line: 5774, column: 67, scope: !3770)
!3770 = !DILexicalBlockFile(scope: !3771, file: !175, discriminator: 1)
!3771 = distinct !DILexicalBlock(scope: !3762, file: !175, line: 5774, column: 10)
!3772 = !DILocation(line: 5774, column: 56, scope: !3770)
!3773 = !DILocation(line: 5774, column: 38, scope: !3774)
!3774 = !DILexicalBlockFile(scope: !3770, file: !175, discriminator: 2)
!3775 = !DILocation(line: 5774, column: 109, scope: !3770)
!3776 = !DILocation(line: 5774, column: 98, scope: !3777)
!3777 = !DILexicalBlockFile(scope: !3770, file: !175, discriminator: 3)
!3778 = !DILocation(line: 5774, column: 80, scope: !3779)
!3779 = !DILexicalBlockFile(scope: !3770, file: !175, discriminator: 4)
!3780 = !DILocation(line: 5774, column: 12, scope: !3781)
!3781 = !DILexicalBlockFile(scope: !3770, file: !175, discriminator: 5)
!3782 = !DILocation(line: 5774, column: 188, scope: !3770)
!3783 = !DILocation(line: 5774, column: 199, scope: !3770)
!3784 = !DILocation(line: 5774, column: 183, scope: !3770)
!3785 = !DILocation(line: 5774, column: 123, scope: !3786)
!3786 = !DILexicalBlockFile(scope: !3770, file: !175, discriminator: 6)
!3787 = !DILocation(line: 5774, column: 216, scope: !3770)
!3788 = !DILocation(line: 5777, column: 7, scope: !3762)
!3789 = !DILocation(line: 5792, column: 16, scope: !3711)
!3790 = !DILocation(line: 5793, column: 8, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3711, file: !175, line: 5793, column: 8)
!3792 = !DILocation(line: 5793, column: 14, scope: !3791)
!3793 = !DILocation(line: 5793, column: 8, scope: !3711)
!3794 = !DILocation(line: 5794, column: 15, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3791, file: !175, line: 5793, column: 28)
!3796 = !DILocation(line: 5794, column: 7, scope: !3795)
!3797 = !DILocation(line: 5797, column: 22, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3795, file: !175, line: 5794, column: 22)
!3799 = !DILocation(line: 5798, column: 7, scope: !3798)
!3800 = !DILocation(line: 5799, column: 4, scope: !3795)
!3801 = !DILocation(line: 5802, column: 15, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3791, file: !175, line: 5799, column: 11)
!3803 = !DILocation(line: 5802, column: 7, scope: !3802)
!3804 = !DILocation(line: 5816, column: 22, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3802, file: !175, line: 5802, column: 22)
!3806 = !DILocation(line: 5817, column: 7, scope: !3805)
!3807 = !DILocation(line: 5820, column: 9, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3711, file: !175, line: 5820, column: 8)
!3809 = !DILocation(line: 5820, column: 8, scope: !3711)
!3810 = !DILocation(line: 5821, column: 7, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3808, file: !175, line: 5820, column: 22)
!3812 = distinct !{!3812, !3810}
!3813 = !DILocation(line: 5821, column: 67, scope: !3814)
!3814 = !DILexicalBlockFile(scope: !3815, file: !175, discriminator: 1)
!3815 = distinct !DILexicalBlock(scope: !3811, file: !175, line: 5821, column: 10)
!3816 = !DILocation(line: 5821, column: 56, scope: !3814)
!3817 = !DILocation(line: 5821, column: 38, scope: !3818)
!3818 = !DILexicalBlockFile(scope: !3814, file: !175, discriminator: 2)
!3819 = !DILocation(line: 5821, column: 109, scope: !3814)
!3820 = !DILocation(line: 5821, column: 98, scope: !3821)
!3821 = !DILexicalBlockFile(scope: !3814, file: !175, discriminator: 3)
!3822 = !DILocation(line: 5821, column: 80, scope: !3823)
!3823 = !DILexicalBlockFile(scope: !3814, file: !175, discriminator: 4)
!3824 = !DILocation(line: 5821, column: 12, scope: !3825)
!3825 = !DILexicalBlockFile(scope: !3814, file: !175, discriminator: 5)
!3826 = !DILocation(line: 5821, column: 267, scope: !3814)
!3827 = !DILocation(line: 5821, column: 274, scope: !3814)
!3828 = !DILocation(line: 5821, column: 123, scope: !3829)
!3829 = !DILexicalBlockFile(scope: !3814, file: !175, discriminator: 6)
!3830 = !DILocation(line: 5821, column: 282, scope: !3814)
!3831 = !DILocation(line: 5826, column: 7, scope: !3811)
!3832 = !DILocation(line: 5831, column: 19, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3711, file: !175, line: 5831, column: 8)
!3834 = !DILocation(line: 5831, column: 30, scope: !3833)
!3835 = !DILocation(line: 5831, column: 34, scope: !3833)
!3836 = !DILocation(line: 5831, column: 41, scope: !3833)
!3837 = !DILocation(line: 5832, column: 19, scope: !3833)
!3838 = !DILocation(line: 5832, column: 29, scope: !3833)
!3839 = !DILocation(line: 5831, column: 8, scope: !3833)
!3840 = !DILocation(line: 5832, column: 39, scope: !3833)
!3841 = !DILocation(line: 5831, column: 8, scope: !3711)
!3842 = !DILocation(line: 5833, column: 34, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3833, file: !175, line: 5832, column: 45)
!3844 = !DILocation(line: 5833, column: 33, scope: !3843)
!3845 = !DILocation(line: 5833, column: 7, scope: !3843)
!3846 = !DILocation(line: 5833, column: 18, scope: !3843)
!3847 = !DILocation(line: 5833, column: 31, scope: !3843)
!3848 = !DILocation(line: 5834, column: 7, scope: !3843)
!3849 = distinct !{!3849, !3848}
!3850 = !DILocation(line: 5834, column: 67, scope: !3851)
!3851 = !DILexicalBlockFile(scope: !3852, file: !175, discriminator: 1)
!3852 = distinct !DILexicalBlock(scope: !3843, file: !175, line: 5834, column: 10)
!3853 = !DILocation(line: 5834, column: 56, scope: !3851)
!3854 = !DILocation(line: 5834, column: 38, scope: !3855)
!3855 = !DILexicalBlockFile(scope: !3851, file: !175, discriminator: 2)
!3856 = !DILocation(line: 5834, column: 109, scope: !3851)
!3857 = !DILocation(line: 5834, column: 98, scope: !3858)
!3858 = !DILexicalBlockFile(scope: !3851, file: !175, discriminator: 3)
!3859 = !DILocation(line: 5834, column: 80, scope: !3860)
!3860 = !DILexicalBlockFile(scope: !3851, file: !175, discriminator: 4)
!3861 = !DILocation(line: 5834, column: 12, scope: !3862)
!3862 = !DILexicalBlockFile(scope: !3851, file: !175, discriminator: 5)
!3863 = !DILocation(line: 5834, column: 261, scope: !3851)
!3864 = !DILocation(line: 5834, column: 268, scope: !3851)
!3865 = !DILocation(line: 5834, column: 275, scope: !3851)
!3866 = !DILocation(line: 5834, column: 286, scope: !3851)
!3867 = !DILocation(line: 5834, column: 317, scope: !3851)
!3868 = !DILocation(line: 5834, column: 328, scope: !3851)
!3869 = !DILocation(line: 5834, column: 300, scope: !3870)
!3870 = !DILexicalBlockFile(scope: !3851, file: !175, discriminator: 6)
!3871 = !DILocation(line: 5834, column: 123, scope: !3872)
!3872 = !DILexicalBlockFile(scope: !3851, file: !175, discriminator: 7)
!3873 = !DILocation(line: 5834, column: 344, scope: !3851)
!3874 = !DILocation(line: 5841, column: 7, scope: !3843)
!3875 = !DILocation(line: 5844, column: 4, scope: !3711)
!3876 = distinct !{!3876, !3875}
!3877 = !DILocation(line: 5844, column: 64, scope: !3878)
!3878 = !DILexicalBlockFile(scope: !3879, file: !175, discriminator: 1)
!3879 = distinct !DILexicalBlock(scope: !3711, file: !175, line: 5844, column: 7)
!3880 = !DILocation(line: 5844, column: 53, scope: !3878)
!3881 = !DILocation(line: 5844, column: 35, scope: !3882)
!3882 = !DILexicalBlockFile(scope: !3878, file: !175, discriminator: 2)
!3883 = !DILocation(line: 5844, column: 106, scope: !3878)
!3884 = !DILocation(line: 5844, column: 95, scope: !3885)
!3885 = !DILexicalBlockFile(scope: !3878, file: !175, discriminator: 3)
!3886 = !DILocation(line: 5844, column: 77, scope: !3887)
!3887 = !DILexicalBlockFile(scope: !3878, file: !175, discriminator: 4)
!3888 = !DILocation(line: 5844, column: 9, scope: !3889)
!3889 = !DILexicalBlockFile(scope: !3878, file: !175, discriminator: 5)
!3890 = !DILocation(line: 5844, column: 242, scope: !3878)
!3891 = !DILocation(line: 5844, column: 249, scope: !3878)
!3892 = !DILocation(line: 5844, column: 120, scope: !3893)
!3893 = !DILexicalBlockFile(scope: !3878, file: !175, discriminator: 6)
!3894 = !DILocation(line: 5844, column: 257, scope: !3878)
!3895 = !DILocation(line: 5849, column: 4, scope: !3711)
!3896 = !DILocation(line: 5850, column: 1, scope: !3711)
!3897 = distinct !DISubprogram(name: "AsyncTCPSocketGetOption", scope: !175, file: !175, line: 5874, type: !247, isLocal: true, isDefinition: true, scopeLine: 5879, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!3898 = !DILocalVariable(name: "asyncSocket", arg: 1, scope: !3897, file: !175, line: 5874, type: !213)
!3899 = !DILocation(line: 5874, column: 38, scope: !3897)
!3900 = !DILocalVariable(name: "layer", arg: 2, scope: !3897, file: !175, line: 5875, type: !240)
!3901 = !DILocation(line: 5875, column: 47, scope: !3897)
!3902 = !DILocalVariable(name: "optID", arg: 3, scope: !3897, file: !175, line: 5876, type: !241)
!3903 = !DILocation(line: 5876, column: 44, scope: !3897)
!3904 = !DILocalVariable(name: "valuePtr", arg: 4, scope: !3897, file: !175, line: 5877, type: !80)
!3905 = !DILocation(line: 5877, column: 31, scope: !3897)
!3906 = !DILocalVariable(name: "outBufLen", arg: 5, scope: !3897, file: !175, line: 5878, type: !249)
!3907 = !DILocation(line: 5878, column: 36, scope: !3897)
!3908 = !DILocalVariable(name: "tcpSocket", scope: !3897, file: !175, line: 5886, type: !173)
!3909 = !DILocation(line: 5886, column: 20, scope: !3897)
!3910 = !DILocation(line: 5886, column: 42, scope: !3897)
!3911 = !DILocation(line: 5886, column: 32, scope: !3897)
!3912 = !DILocalVariable(name: "isSupported", scope: !3897, file: !175, line: 5887, type: !168)
!3913 = !DILocation(line: 5887, column: 9, scope: !3897)
!3914 = !DILocation(line: 5889, column: 17, scope: !3897)
!3915 = !DILocation(line: 5889, column: 4, scope: !3897)
!3916 = !DILocation(line: 5893, column: 7, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3897, file: !175, line: 5889, column: 24)
!3918 = !DILocation(line: 5895, column: 7, scope: !3917)
!3919 = distinct !{!3919, !3918}
!3920 = !DILocation(line: 5895, column: 67, scope: !3921)
!3921 = !DILexicalBlockFile(scope: !3922, file: !175, discriminator: 1)
!3922 = distinct !DILexicalBlock(scope: !3917, file: !175, line: 5895, column: 10)
!3923 = !DILocation(line: 5895, column: 56, scope: !3921)
!3924 = !DILocation(line: 5895, column: 38, scope: !3925)
!3925 = !DILexicalBlockFile(scope: !3921, file: !175, discriminator: 2)
!3926 = !DILocation(line: 5895, column: 109, scope: !3921)
!3927 = !DILocation(line: 5895, column: 98, scope: !3928)
!3928 = !DILexicalBlockFile(scope: !3921, file: !175, discriminator: 3)
!3929 = !DILocation(line: 5895, column: 80, scope: !3930)
!3930 = !DILexicalBlockFile(scope: !3921, file: !175, discriminator: 4)
!3931 = !DILocation(line: 5895, column: 12, scope: !3932)
!3932 = !DILexicalBlockFile(scope: !3921, file: !175, discriminator: 5)
!3933 = !DILocation(line: 5895, column: 224, scope: !3921)
!3934 = !DILocation(line: 5895, column: 231, scope: !3921)
!3935 = !DILocation(line: 5895, column: 123, scope: !3936)
!3936 = !DILexicalBlockFile(scope: !3921, file: !175, discriminator: 6)
!3937 = !DILocation(line: 5895, column: 239, scope: !3921)
!3938 = !DILocation(line: 5899, column: 7, scope: !3917)
!3939 = !DILocation(line: 5902, column: 9, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3897, file: !175, line: 5902, column: 8)
!3941 = !DILocation(line: 5902, column: 15, scope: !3940)
!3942 = !DILocation(line: 5902, column: 48, scope: !3940)
!3943 = !DILocation(line: 5903, column: 9, scope: !3940)
!3944 = !DILocation(line: 5903, column: 15, scope: !3940)
!3945 = !DILocation(line: 5902, column: 8, scope: !3946)
!3946 = !DILexicalBlockFile(scope: !3897, file: !175, discriminator: 1)
!3947 = !DILocation(line: 5905, column: 8, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3940, file: !175, line: 5903, column: 59)
!3949 = !DILocation(line: 5905, column: 18, scope: !3948)
!3950 = !DILocation(line: 5906, column: 29, scope: !3948)
!3951 = !DILocation(line: 5906, column: 40, scope: !3948)
!3952 = !DILocation(line: 5906, column: 17, scope: !3948)
!3953 = !DILocation(line: 5906, column: 27, scope: !3948)
!3954 = !DILocation(line: 5907, column: 7, scope: !3948)
!3955 = distinct !{!3955, !3954}
!3956 = !DILocation(line: 5907, column: 67, scope: !3957)
!3957 = !DILexicalBlockFile(scope: !3958, file: !175, discriminator: 1)
!3958 = distinct !DILexicalBlock(scope: !3948, file: !175, line: 5907, column: 10)
!3959 = !DILocation(line: 5907, column: 56, scope: !3957)
!3960 = !DILocation(line: 5907, column: 38, scope: !3961)
!3961 = !DILexicalBlockFile(scope: !3957, file: !175, discriminator: 2)
!3962 = !DILocation(line: 5907, column: 109, scope: !3957)
!3963 = !DILocation(line: 5907, column: 98, scope: !3964)
!3964 = !DILexicalBlockFile(scope: !3957, file: !175, discriminator: 3)
!3965 = !DILocation(line: 5907, column: 80, scope: !3966)
!3966 = !DILexicalBlockFile(scope: !3957, file: !175, discriminator: 4)
!3967 = !DILocation(line: 5907, column: 12, scope: !3968)
!3968 = !DILexicalBlockFile(scope: !3957, file: !175, discriminator: 5)
!3969 = !DILocation(line: 5907, column: 184, scope: !3957)
!3970 = !DILocation(line: 5907, column: 195, scope: !3957)
!3971 = !DILocation(line: 5907, column: 179, scope: !3957)
!3972 = !DILocation(line: 5907, column: 123, scope: !3973)
!3973 = !DILexicalBlockFile(scope: !3957, file: !175, discriminator: 6)
!3974 = !DILocation(line: 5907, column: 212, scope: !3957)
!3975 = !DILocation(line: 5910, column: 7, scope: !3948)
!3976 = !DILocation(line: 5913, column: 16, scope: !3897)
!3977 = !DILocation(line: 5914, column: 8, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3897, file: !175, line: 5914, column: 8)
!3979 = !DILocation(line: 5914, column: 14, scope: !3978)
!3980 = !DILocation(line: 5914, column: 8, scope: !3897)
!3981 = !DILocation(line: 5915, column: 15, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3978, file: !175, line: 5914, column: 28)
!3983 = !DILocation(line: 5915, column: 7, scope: !3982)
!3984 = !DILocation(line: 5918, column: 22, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3982, file: !175, line: 5915, column: 22)
!3986 = !DILocation(line: 5919, column: 7, scope: !3985)
!3987 = !DILocation(line: 5920, column: 4, scope: !3982)
!3988 = !DILocation(line: 5923, column: 15, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3978, file: !175, line: 5920, column: 11)
!3990 = !DILocation(line: 5923, column: 7, scope: !3989)
!3991 = !DILocation(line: 5930, column: 22, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3989, file: !175, line: 5923, column: 22)
!3993 = !DILocation(line: 5931, column: 7, scope: !3992)
!3994 = !DILocation(line: 5934, column: 9, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3897, file: !175, line: 5934, column: 8)
!3996 = !DILocation(line: 5934, column: 8, scope: !3897)
!3997 = !DILocation(line: 5935, column: 7, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3995, file: !175, line: 5934, column: 22)
!3999 = distinct !{!3999, !3997}
!4000 = !DILocation(line: 5935, column: 67, scope: !4001)
!4001 = !DILexicalBlockFile(scope: !4002, file: !175, discriminator: 1)
!4002 = distinct !DILexicalBlock(scope: !3998, file: !175, line: 5935, column: 10)
!4003 = !DILocation(line: 5935, column: 56, scope: !4001)
!4004 = !DILocation(line: 5935, column: 38, scope: !4005)
!4005 = !DILexicalBlockFile(scope: !4001, file: !175, discriminator: 2)
!4006 = !DILocation(line: 5935, column: 109, scope: !4001)
!4007 = !DILocation(line: 5935, column: 98, scope: !4008)
!4008 = !DILexicalBlockFile(scope: !4001, file: !175, discriminator: 3)
!4009 = !DILocation(line: 5935, column: 80, scope: !4010)
!4010 = !DILexicalBlockFile(scope: !4001, file: !175, discriminator: 4)
!4011 = !DILocation(line: 5935, column: 12, scope: !4012)
!4012 = !DILexicalBlockFile(scope: !4001, file: !175, discriminator: 5)
!4013 = !DILocation(line: 5935, column: 267, scope: !4001)
!4014 = !DILocation(line: 5935, column: 274, scope: !4001)
!4015 = !DILocation(line: 5935, column: 123, scope: !4016)
!4016 = !DILexicalBlockFile(scope: !4001, file: !175, discriminator: 6)
!4017 = !DILocation(line: 5935, column: 282, scope: !4001)
!4018 = !DILocation(line: 5940, column: 7, scope: !3998)
!4019 = !DILocation(line: 5943, column: 19, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3897, file: !175, line: 5943, column: 8)
!4021 = !DILocation(line: 5943, column: 30, scope: !4020)
!4022 = !DILocation(line: 5943, column: 34, scope: !4020)
!4023 = !DILocation(line: 5943, column: 41, scope: !4020)
!4024 = !DILocation(line: 5944, column: 19, scope: !4020)
!4025 = !DILocation(line: 5944, column: 29, scope: !4020)
!4026 = !DILocation(line: 5943, column: 8, scope: !4020)
!4027 = !DILocation(line: 5944, column: 40, scope: !4020)
!4028 = !DILocation(line: 5943, column: 8, scope: !3897)
!4029 = !DILocation(line: 5945, column: 34, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4020, file: !175, line: 5944, column: 46)
!4031 = !DILocation(line: 5945, column: 33, scope: !4030)
!4032 = !DILocation(line: 5945, column: 7, scope: !4030)
!4033 = !DILocation(line: 5945, column: 18, scope: !4030)
!4034 = !DILocation(line: 5945, column: 31, scope: !4030)
!4035 = !DILocation(line: 5946, column: 7, scope: !4030)
!4036 = distinct !{!4036, !4035}
!4037 = !DILocation(line: 5946, column: 67, scope: !4038)
!4038 = !DILexicalBlockFile(scope: !4039, file: !175, discriminator: 1)
!4039 = distinct !DILexicalBlock(scope: !4030, file: !175, line: 5946, column: 10)
!4040 = !DILocation(line: 5946, column: 56, scope: !4038)
!4041 = !DILocation(line: 5946, column: 38, scope: !4042)
!4042 = !DILexicalBlockFile(scope: !4038, file: !175, discriminator: 2)
!4043 = !DILocation(line: 5946, column: 109, scope: !4038)
!4044 = !DILocation(line: 5946, column: 98, scope: !4045)
!4045 = !DILexicalBlockFile(scope: !4038, file: !175, discriminator: 3)
!4046 = !DILocation(line: 5946, column: 80, scope: !4047)
!4047 = !DILexicalBlockFile(scope: !4038, file: !175, discriminator: 4)
!4048 = !DILocation(line: 5946, column: 12, scope: !4049)
!4049 = !DILexicalBlockFile(scope: !4038, file: !175, discriminator: 5)
!4050 = !DILocation(line: 5946, column: 261, scope: !4038)
!4051 = !DILocation(line: 5946, column: 268, scope: !4038)
!4052 = !DILocation(line: 5946, column: 275, scope: !4038)
!4053 = !DILocation(line: 5946, column: 286, scope: !4038)
!4054 = !DILocation(line: 5946, column: 317, scope: !4038)
!4055 = !DILocation(line: 5946, column: 328, scope: !4038)
!4056 = !DILocation(line: 5946, column: 300, scope: !4057)
!4057 = !DILexicalBlockFile(scope: !4038, file: !175, discriminator: 6)
!4058 = !DILocation(line: 5946, column: 123, scope: !4059)
!4059 = !DILexicalBlockFile(scope: !4038, file: !175, discriminator: 7)
!4060 = !DILocation(line: 5946, column: 344, scope: !4038)
!4061 = !DILocation(line: 5953, column: 7, scope: !4030)
!4062 = !DILocation(line: 5956, column: 4, scope: !3897)
!4063 = distinct !{!4063, !4062}
!4064 = !DILocation(line: 5956, column: 64, scope: !4065)
!4065 = !DILexicalBlockFile(scope: !4066, file: !175, discriminator: 1)
!4066 = distinct !DILexicalBlock(scope: !3897, file: !175, line: 5956, column: 7)
!4067 = !DILocation(line: 5956, column: 53, scope: !4065)
!4068 = !DILocation(line: 5956, column: 35, scope: !4069)
!4069 = !DILexicalBlockFile(scope: !4065, file: !175, discriminator: 2)
!4070 = !DILocation(line: 5956, column: 106, scope: !4065)
!4071 = !DILocation(line: 5956, column: 95, scope: !4072)
!4072 = !DILexicalBlockFile(scope: !4065, file: !175, discriminator: 3)
!4073 = !DILocation(line: 5956, column: 77, scope: !4074)
!4074 = !DILexicalBlockFile(scope: !4065, file: !175, discriminator: 4)
!4075 = !DILocation(line: 5956, column: 9, scope: !4076)
!4076 = !DILexicalBlockFile(scope: !4065, file: !175, discriminator: 5)
!4077 = !DILocation(line: 5956, column: 242, scope: !4065)
!4078 = !DILocation(line: 5956, column: 249, scope: !4065)
!4079 = !DILocation(line: 5956, column: 120, scope: !4080)
!4080 = !DILexicalBlockFile(scope: !4065, file: !175, discriminator: 6)
!4081 = !DILocation(line: 5956, column: 257, scope: !4065)
!4082 = !DILocation(line: 5961, column: 4, scope: !3897)
!4083 = !DILocation(line: 5962, column: 1, scope: !3897)
!4084 = distinct !DISubprogram(name: "AsyncTCPSocketGetGenericErrno", scope: !175, file: !175, line: 3741, type: !252, isLocal: true, isDefinition: true, scopeLine: 3742, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4085 = !DILocalVariable(name: "base", arg: 1, scope: !4084, file: !175, line: 3741, type: !213)
!4086 = !DILocation(line: 3741, column: 44, scope: !4084)
!4087 = !DILocalVariable(name: "asock", scope: !4084, file: !175, line: 3743, type: !173)
!4088 = !DILocation(line: 3743, column: 20, scope: !4084)
!4089 = !DILocation(line: 3743, column: 38, scope: !4084)
!4090 = !DILocation(line: 3743, column: 28, scope: !4084)
!4091 = !DILocation(line: 3745, column: 11, scope: !4084)
!4092 = !DILocation(line: 3745, column: 18, scope: !4084)
!4093 = !DILocation(line: 3745, column: 4, scope: !4084)
!4094 = distinct !DISubprogram(name: "AsyncTCPSocketGetFd", scope: !175, file: !175, line: 598, type: !252, isLocal: true, isDefinition: true, scopeLine: 599, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4095 = !DILocalVariable(name: "base", arg: 1, scope: !4094, file: !175, line: 598, type: !213)
!4096 = !DILocation(line: 598, column: 34, scope: !4094)
!4097 = !DILocalVariable(name: "asock", scope: !4094, file: !175, line: 600, type: !173)
!4098 = !DILocation(line: 600, column: 20, scope: !4094)
!4099 = !DILocation(line: 600, column: 38, scope: !4094)
!4100 = !DILocation(line: 600, column: 28, scope: !4094)
!4101 = !DILocation(line: 602, column: 8, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4094, file: !175, line: 602, column: 8)
!4103 = !DILocation(line: 602, column: 15, scope: !4102)
!4104 = !DILocation(line: 602, column: 18, scope: !4102)
!4105 = !DILocation(line: 602, column: 8, scope: !4094)
!4106 = !DILocation(line: 603, column: 14, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4102, file: !175, line: 602, column: 25)
!4108 = !DILocation(line: 603, column: 21, scope: !4107)
!4109 = !DILocation(line: 603, column: 7, scope: !4107)
!4110 = !DILocation(line: 604, column: 15, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4102, file: !175, line: 604, column: 15)
!4112 = !DILocation(line: 604, column: 22, scope: !4111)
!4113 = !DILocation(line: 604, column: 35, scope: !4111)
!4114 = !DILocation(line: 604, column: 38, scope: !4115)
!4115 = !DILexicalBlockFile(scope: !4111, file: !175, discriminator: 1)
!4116 = !DILocation(line: 604, column: 45, scope: !4115)
!4117 = !DILocation(line: 604, column: 59, scope: !4115)
!4118 = !DILocation(line: 604, column: 62, scope: !4115)
!4119 = !DILocation(line: 604, column: 15, scope: !4115)
!4120 = !DILocation(line: 605, column: 14, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4111, file: !175, line: 604, column: 69)
!4122 = !DILocation(line: 605, column: 21, scope: !4121)
!4123 = !DILocation(line: 605, column: 35, scope: !4121)
!4124 = !DILocation(line: 605, column: 7, scope: !4121)
!4125 = !DILocation(line: 606, column: 15, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4111, file: !175, line: 606, column: 15)
!4127 = !DILocation(line: 606, column: 22, scope: !4126)
!4128 = !DILocation(line: 606, column: 35, scope: !4126)
!4129 = !DILocation(line: 606, column: 38, scope: !4130)
!4130 = !DILexicalBlockFile(scope: !4126, file: !175, discriminator: 1)
!4131 = !DILocation(line: 606, column: 45, scope: !4130)
!4132 = !DILocation(line: 606, column: 59, scope: !4130)
!4133 = !DILocation(line: 606, column: 62, scope: !4130)
!4134 = !DILocation(line: 606, column: 15, scope: !4130)
!4135 = !DILocation(line: 607, column: 14, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4126, file: !175, line: 606, column: 69)
!4137 = !DILocation(line: 607, column: 21, scope: !4136)
!4138 = !DILocation(line: 607, column: 35, scope: !4136)
!4139 = !DILocation(line: 607, column: 7, scope: !4136)
!4140 = !DILocation(line: 609, column: 7, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4126, file: !175, line: 608, column: 11)
!4142 = !DILocation(line: 611, column: 1, scope: !4094)
!4143 = distinct !DISubprogram(name: "AsyncTCPSocketGetRemoteIPStr", scope: !175, file: !175, line: 696, type: !257, isLocal: true, isDefinition: true, scopeLine: 698, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4144 = !DILocalVariable(name: "base", arg: 1, scope: !4143, file: !175, line: 696, type: !213)
!4145 = !DILocation(line: 696, column: 43, scope: !4143)
!4146 = !DILocalVariable(name: "ipRetStr", arg: 2, scope: !4143, file: !175, line: 697, type: !259)
!4147 = !DILocation(line: 697, column: 43, scope: !4143)
!4148 = !DILocalVariable(name: "asock", scope: !4143, file: !175, line: 699, type: !173)
!4149 = !DILocation(line: 699, column: 20, scope: !4143)
!4150 = !DILocation(line: 699, column: 38, scope: !4143)
!4151 = !DILocation(line: 699, column: 28, scope: !4143)
!4152 = !DILocalVariable(name: "ret", scope: !4143, file: !175, line: 700, type: !165)
!4153 = !DILocation(line: 700, column: 8, scope: !4143)
!4154 = !DILocation(line: 705, column: 8, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4143, file: !175, line: 705, column: 8)
!4156 = !DILocation(line: 705, column: 17, scope: !4155)
!4157 = !DILocation(line: 705, column: 24, scope: !4155)
!4158 = !DILocation(line: 705, column: 27, scope: !4159)
!4159 = !DILexicalBlockFile(scope: !4155, file: !175, discriminator: 1)
!4160 = !DILocation(line: 705, column: 33, scope: !4159)
!4161 = !DILocation(line: 705, column: 41, scope: !4159)
!4162 = !DILocation(line: 706, column: 31, scope: !4155)
!4163 = !DILocation(line: 706, column: 8, scope: !4155)
!4164 = !DILocation(line: 706, column: 38, scope: !4155)
!4165 = !DILocation(line: 706, column: 62, scope: !4155)
!4166 = !DILocation(line: 707, column: 9, scope: !4155)
!4167 = !DILocation(line: 707, column: 16, scope: !4155)
!4168 = !DILocation(line: 707, column: 30, scope: !4155)
!4169 = !DILocation(line: 707, column: 61, scope: !4155)
!4170 = !DILocation(line: 708, column: 9, scope: !4155)
!4171 = !DILocation(line: 708, column: 16, scope: !4155)
!4172 = !DILocation(line: 708, column: 30, scope: !4155)
!4173 = !DILocation(line: 705, column: 8, scope: !4174)
!4174 = !DILexicalBlockFile(scope: !4143, file: !175, discriminator: 2)
!4175 = !DILocation(line: 709, column: 11, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4155, file: !175, line: 708, column: 64)
!4177 = !DILocation(line: 710, column: 4, scope: !4176)
!4178 = !DILocalVariable(name: "addrBuf", scope: !4179, file: !175, line: 711, type: !4180)
!4179 = distinct !DILexicalBlock(scope: !4155, file: !175, line: 710, column: 11)
!4180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 8200, align: 8, elements: !4181)
!4181 = !{!4182}
!4182 = !DISubrange(count: 1025)
!4183 = !DILocation(line: 711, column: 12, scope: !4179)
!4184 = !DILocation(line: 713, column: 43, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4179, file: !175, line: 713, column: 11)
!4186 = !DILocation(line: 713, column: 50, scope: !4185)
!4187 = !DILocation(line: 713, column: 23, scope: !4185)
!4188 = !DILocation(line: 714, column: 29, scope: !4185)
!4189 = !DILocation(line: 714, column: 36, scope: !4185)
!4190 = !DILocation(line: 714, column: 51, scope: !4185)
!4191 = !DILocation(line: 713, column: 11, scope: !4185)
!4192 = !DILocation(line: 715, column: 69, scope: !4185)
!4193 = !DILocation(line: 713, column: 11, scope: !4179)
!4194 = !DILocation(line: 716, column: 14, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4185, file: !175, line: 715, column: 75)
!4196 = !DILocation(line: 717, column: 7, scope: !4195)
!4197 = !DILocation(line: 718, column: 38, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4185, file: !175, line: 717, column: 14)
!4199 = !DILocation(line: 718, column: 22, scope: !4198)
!4200 = !DILocation(line: 718, column: 11, scope: !4198)
!4201 = !DILocation(line: 718, column: 20, scope: !4198)
!4202 = !DILocation(line: 722, column: 11, scope: !4143)
!4203 = !DILocation(line: 722, column: 4, scope: !4143)
!4204 = distinct !DISubprogram(name: "AsyncTCPSocketGetINETIPStr", scope: !175, file: !175, line: 751, type: !264, isLocal: true, isDefinition: true, scopeLine: 754, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4205 = !DILocalVariable(name: "base", arg: 1, scope: !4204, file: !175, line: 751, type: !213)
!4206 = !DILocation(line: 751, column: 41, scope: !4204)
!4207 = !DILocalVariable(name: "socketFamily", arg: 2, scope: !4204, file: !175, line: 752, type: !165)
!4208 = !DILocation(line: 752, column: 32, scope: !4204)
!4209 = !DILocalVariable(name: "ipRetStr", arg: 3, scope: !4204, file: !175, line: 753, type: !266)
!4210 = !DILocation(line: 753, column: 35, scope: !4204)
!4211 = !DILocalVariable(name: "asock", scope: !4204, file: !175, line: 755, type: !173)
!4212 = !DILocation(line: 755, column: 20, scope: !4204)
!4213 = !DILocation(line: 755, column: 38, scope: !4204)
!4214 = !DILocation(line: 755, column: 28, scope: !4204)
!4215 = !DILocalVariable(name: "addr", scope: !4204, file: !175, line: 756, type: !87)
!4216 = !DILocation(line: 756, column: 28, scope: !4204)
!4217 = !DILocalVariable(name: "addrLen", scope: !4204, file: !175, line: 757, type: !242)
!4218 = !DILocation(line: 757, column: 14, scope: !4204)
!4219 = !DILocalVariable(name: "ret", scope: !4204, file: !175, line: 758, type: !165)
!4220 = !DILocation(line: 758, column: 8, scope: !4204)
!4221 = !DILocation(line: 762, column: 32, scope: !4204)
!4222 = !DILocation(line: 762, column: 39, scope: !4204)
!4223 = !DILocation(line: 762, column: 10, scope: !4204)
!4224 = !DILocation(line: 762, column: 8, scope: !4204)
!4225 = !DILocation(line: 763, column: 8, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4204, file: !175, line: 763, column: 8)
!4227 = !DILocation(line: 763, column: 12, scope: !4226)
!4228 = !DILocation(line: 763, column: 8, scope: !4204)
!4229 = !DILocalVariable(name: "addrBuf", scope: !4230, file: !175, line: 764, type: !4180)
!4230 = distinct !DILexicalBlock(scope: !4226, file: !175, line: 763, column: 18)
!4231 = !DILocation(line: 764, column: 12, scope: !4230)
!4232 = !DILocation(line: 766, column: 11, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4230, file: !175, line: 766, column: 11)
!4234 = !DILocation(line: 766, column: 20, scope: !4233)
!4235 = !DILocation(line: 766, column: 11, scope: !4230)
!4236 = !DILocation(line: 767, column: 10, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4233, file: !175, line: 766, column: 28)
!4238 = distinct !{!4238, !4236}
!4239 = !DILocation(line: 767, column: 74, scope: !4240)
!4240 = !DILexicalBlockFile(scope: !4241, file: !175, discriminator: 1)
!4241 = distinct !DILexicalBlock(scope: !4237, file: !175, line: 767, column: 13)
!4242 = !DILocation(line: 767, column: 63, scope: !4240)
!4243 = !DILocation(line: 767, column: 45, scope: !4244)
!4244 = !DILexicalBlockFile(scope: !4240, file: !175, discriminator: 2)
!4245 = !DILocation(line: 767, column: 112, scope: !4240)
!4246 = !DILocation(line: 767, column: 101, scope: !4247)
!4247 = !DILexicalBlockFile(scope: !4240, file: !175, discriminator: 3)
!4248 = !DILocation(line: 767, column: 83, scope: !4249)
!4249 = !DILexicalBlockFile(scope: !4240, file: !175, discriminator: 4)
!4250 = !DILocation(line: 767, column: 15, scope: !4251)
!4251 = !DILexicalBlockFile(scope: !4240, file: !175, discriminator: 5)
!4252 = !DILocation(line: 767, column: 122, scope: !4253)
!4253 = !DILexicalBlockFile(scope: !4240, file: !175, discriminator: 6)
!4254 = !DILocation(line: 767, column: 184, scope: !4240)
!4255 = !DILocation(line: 769, column: 14, scope: !4237)
!4256 = !DILocation(line: 770, column: 7, scope: !4237)
!4257 = !DILocation(line: 770, column: 30, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !4259, file: !175, discriminator: 1)
!4259 = distinct !DILexicalBlock(scope: !4233, file: !175, line: 770, column: 18)
!4260 = !DILocation(line: 770, column: 56, scope: !4258)
!4261 = !DILocation(line: 770, column: 65, scope: !4258)
!4262 = !DILocation(line: 770, column: 18, scope: !4258)
!4263 = !DILocation(line: 772, column: 51, scope: !4259)
!4264 = !DILocation(line: 773, column: 38, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4259, file: !175, line: 772, column: 57)
!4266 = !DILocation(line: 773, column: 22, scope: !4265)
!4267 = !DILocation(line: 773, column: 11, scope: !4265)
!4268 = !DILocation(line: 773, column: 20, scope: !4265)
!4269 = !DILocation(line: 774, column: 7, scope: !4265)
!4270 = !DILocation(line: 775, column: 10, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4259, file: !175, line: 774, column: 14)
!4272 = distinct !{!4272, !4270}
!4273 = !DILocation(line: 775, column: 74, scope: !4274)
!4274 = !DILexicalBlockFile(scope: !4275, file: !175, discriminator: 1)
!4275 = distinct !DILexicalBlock(scope: !4271, file: !175, line: 775, column: 13)
!4276 = !DILocation(line: 775, column: 63, scope: !4274)
!4277 = !DILocation(line: 775, column: 45, scope: !4278)
!4278 = !DILexicalBlockFile(scope: !4274, file: !175, discriminator: 2)
!4279 = !DILocation(line: 775, column: 112, scope: !4274)
!4280 = !DILocation(line: 775, column: 101, scope: !4281)
!4281 = !DILexicalBlockFile(scope: !4274, file: !175, discriminator: 3)
!4282 = !DILocation(line: 775, column: 83, scope: !4283)
!4283 = !DILexicalBlockFile(scope: !4274, file: !175, discriminator: 4)
!4284 = !DILocation(line: 775, column: 15, scope: !4285)
!4285 = !DILexicalBlockFile(scope: !4274, file: !175, discriminator: 5)
!4286 = !DILocation(line: 775, column: 122, scope: !4287)
!4287 = !DILexicalBlockFile(scope: !4274, file: !175, discriminator: 6)
!4288 = !DILocation(line: 775, column: 182, scope: !4274)
!4289 = !DILocation(line: 776, column: 14, scope: !4271)
!4290 = !DILocation(line: 778, column: 4, scope: !4230)
!4291 = !DILocation(line: 780, column: 11, scope: !4204)
!4292 = !DILocation(line: 780, column: 4, scope: !4204)
!4293 = distinct !DISubprogram(name: "AsyncTCPSocketGetPort", scope: !175, file: !175, line: 1356, type: !270, isLocal: true, isDefinition: true, scopeLine: 1357, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4294 = !DILocalVariable(name: "base", arg: 1, scope: !4293, file: !175, line: 1356, type: !213)
!4295 = !DILocation(line: 1356, column: 36, scope: !4293)
!4296 = !DILocalVariable(name: "asock", scope: !4293, file: !175, line: 1358, type: !173)
!4297 = !DILocation(line: 1358, column: 20, scope: !4293)
!4298 = !DILocation(line: 1358, column: 38, scope: !4293)
!4299 = !DILocation(line: 1358, column: 28, scope: !4293)
!4300 = !DILocalVariable(name: "tempAsock", scope: !4293, file: !175, line: 1359, type: !173)
!4301 = !DILocation(line: 1359, column: 20, scope: !4293)
!4302 = !DILocalVariable(name: "addr", scope: !4293, file: !175, line: 1360, type: !87)
!4303 = !DILocation(line: 1360, column: 28, scope: !4293)
!4304 = !DILocalVariable(name: "addrLen", scope: !4293, file: !175, line: 1361, type: !242)
!4305 = !DILocation(line: 1361, column: 14, scope: !4293)
!4306 = !DILocalVariable(name: "ret", scope: !4293, file: !175, line: 1362, type: !85)
!4307 = !DILocation(line: 1362, column: 17, scope: !4293)
!4308 = !DILocation(line: 1364, column: 8, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4293, file: !175, line: 1364, column: 8)
!4310 = !DILocation(line: 1364, column: 15, scope: !4309)
!4311 = !DILocation(line: 1364, column: 18, scope: !4309)
!4312 = !DILocation(line: 1364, column: 8, scope: !4293)
!4313 = !DILocation(line: 1365, column: 19, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4309, file: !175, line: 1364, column: 25)
!4315 = !DILocation(line: 1365, column: 17, scope: !4314)
!4316 = !DILocation(line: 1366, column: 4, scope: !4314)
!4317 = !DILocation(line: 1366, column: 15, scope: !4318)
!4318 = !DILexicalBlockFile(scope: !4319, file: !175, discriminator: 1)
!4319 = distinct !DILexicalBlock(scope: !4309, file: !175, line: 1366, column: 15)
!4320 = !DILocation(line: 1366, column: 22, scope: !4318)
!4321 = !DILocation(line: 1366, column: 35, scope: !4318)
!4322 = !DILocation(line: 1366, column: 38, scope: !4323)
!4323 = !DILexicalBlockFile(scope: !4319, file: !175, discriminator: 2)
!4324 = !DILocation(line: 1366, column: 45, scope: !4323)
!4325 = !DILocation(line: 1366, column: 59, scope: !4323)
!4326 = !DILocation(line: 1366, column: 62, scope: !4323)
!4327 = !DILocation(line: 1366, column: 15, scope: !4323)
!4328 = !DILocation(line: 1367, column: 19, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4319, file: !175, line: 1366, column: 69)
!4330 = !DILocation(line: 1367, column: 26, scope: !4329)
!4331 = !DILocation(line: 1367, column: 17, scope: !4329)
!4332 = !DILocation(line: 1368, column: 4, scope: !4329)
!4333 = !DILocation(line: 1368, column: 15, scope: !4334)
!4334 = !DILexicalBlockFile(scope: !4335, file: !175, discriminator: 1)
!4335 = distinct !DILexicalBlock(scope: !4319, file: !175, line: 1368, column: 15)
!4336 = !DILocation(line: 1368, column: 22, scope: !4334)
!4337 = !DILocation(line: 1368, column: 35, scope: !4334)
!4338 = !DILocation(line: 1368, column: 38, scope: !4339)
!4339 = !DILexicalBlockFile(scope: !4335, file: !175, discriminator: 2)
!4340 = !DILocation(line: 1368, column: 45, scope: !4339)
!4341 = !DILocation(line: 1368, column: 59, scope: !4339)
!4342 = !DILocation(line: 1368, column: 62, scope: !4339)
!4343 = !DILocation(line: 1368, column: 15, scope: !4339)
!4344 = !DILocation(line: 1369, column: 19, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4335, file: !175, line: 1368, column: 69)
!4346 = !DILocation(line: 1369, column: 26, scope: !4345)
!4347 = !DILocation(line: 1369, column: 17, scope: !4345)
!4348 = !DILocation(line: 1370, column: 4, scope: !4345)
!4349 = !DILocation(line: 1371, column: 14, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4335, file: !175, line: 1370, column: 11)
!4351 = !DILocation(line: 1371, column: 7, scope: !4350)
!4352 = !DILocation(line: 1377, column: 30, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4293, file: !175, line: 1377, column: 8)
!4354 = !DILocation(line: 1377, column: 8, scope: !4353)
!4355 = !DILocation(line: 1377, column: 68, scope: !4353)
!4356 = !DILocation(line: 1377, column: 8, scope: !4293)
!4357 = !DILocation(line: 1379, column: 14, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4353, file: !175, line: 1378, column: 11)
!4359 = !DILocation(line: 1379, column: 7, scope: !4358)
!4360 = !DILocation(line: 1381, column: 7, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4353, file: !175, line: 1380, column: 11)
!4362 = !DILocation(line: 1386, column: 1, scope: !4293)
!4363 = distinct !DISubprogram(name: "AsyncTCPSocketSetCloseOptions", scope: !175, file: !175, line: 4502, type: !274, isLocal: true, isDefinition: true, scopeLine: 4505, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4364 = !DILocalVariable(name: "base", arg: 1, scope: !4363, file: !175, line: 4502, type: !213)
!4365 = !DILocation(line: 4502, column: 44, scope: !4363)
!4366 = !DILocalVariable(name: "flushEnabledMaxWaitMsec", arg: 2, scope: !4363, file: !175, line: 4503, type: !165)
!4367 = !DILocation(line: 4503, column: 35, scope: !4363)
!4368 = !DILocalVariable(name: "closeCb", arg: 3, scope: !4363, file: !175, line: 4504, type: !276)
!4369 = !DILocation(line: 4504, column: 50, scope: !4363)
!4370 = !DILocalVariable(name: "asock", scope: !4363, file: !175, line: 4506, type: !173)
!4371 = !DILocation(line: 4506, column: 20, scope: !4363)
!4372 = !DILocation(line: 4506, column: 38, scope: !4363)
!4373 = !DILocation(line: 4506, column: 28, scope: !4363)
!4374 = !DILocation(line: 4507, column: 37, scope: !4363)
!4375 = !DILocation(line: 4507, column: 4, scope: !4363)
!4376 = !DILocation(line: 4507, column: 11, scope: !4363)
!4377 = !DILocation(line: 4507, column: 35, scope: !4363)
!4378 = !DILocation(line: 4508, column: 21, scope: !4363)
!4379 = !DILocation(line: 4508, column: 4, scope: !4363)
!4380 = !DILocation(line: 4508, column: 11, scope: !4363)
!4381 = !DILocation(line: 4508, column: 19, scope: !4363)
!4382 = !DILocation(line: 4509, column: 30, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !175, line: 4509, column: 10)
!4384 = distinct !DILexicalBlock(scope: !4363, file: !175, line: 4509, column: 5)
!4385 = !DILocation(line: 4509, column: 38, scope: !4383)
!4386 = !DILocation(line: 4509, column: 28, scope: !4383)
!4387 = !DILocation(line: 4509, column: 27, scope: !4383)
!4388 = !DILocation(line: 4509, column: 10, scope: !4383)
!4389 = !DILocation(line: 4509, column: 10, scope: !4384)
!4390 = !DILocation(line: 4509, column: 13, scope: !4391)
!4391 = !DILexicalBlockFile(scope: !4392, file: !175, discriminator: 1)
!4392 = distinct !DILexicalBlock(scope: !4383, file: !175, line: 4509, column: 11)
!4393 = !DILocation(line: 4510, column: 4, scope: !4363)
!4394 = distinct !DISubprogram(name: "AsyncTCPSocketConnectSSL", scope: !175, file: !175, line: 5407, type: !4395, isLocal: true, isDefinition: true, scopeLine: 5410, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!168, !213, !4397, !80}
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64, align: 64)
!4398 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSLVerifyParam", file: !392, line: 32, baseType: !285)
!4399 = !DILocalVariable(name: "base", arg: 1, scope: !4394, file: !175, line: 5407, type: !213)
!4400 = !DILocation(line: 5407, column: 39, scope: !4394)
!4401 = !DILocalVariable(name: "verifyParam", arg: 2, scope: !4394, file: !175, line: 5408, type: !4397)
!4402 = !DILocation(line: 5408, column: 42, scope: !4394)
!4403 = !DILocalVariable(name: "sslContext", arg: 3, scope: !4394, file: !175, line: 5409, type: !80)
!4404 = !DILocation(line: 5409, column: 32, scope: !4394)
!4405 = !DILocation(line: 5422, column: 4, scope: !4394)
!4406 = distinct !DISubprogram(name: "AsyncTCPSocketStartSslConnect", scope: !175, file: !175, line: 5550, type: !4407, isLocal: true, isDefinition: true, scopeLine: 5555, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{!165, !213, !4397, !80, !290, !80}
!4409 = !DILocalVariable(name: "base", arg: 1, scope: !4406, file: !175, line: 5550, type: !213)
!4410 = !DILocation(line: 5550, column: 44, scope: !4406)
!4411 = !DILocalVariable(name: "verifyParam", arg: 2, scope: !4406, file: !175, line: 5551, type: !4397)
!4412 = !DILocation(line: 5551, column: 47, scope: !4406)
!4413 = !DILocalVariable(name: "sslCtx", arg: 3, scope: !4406, file: !175, line: 5552, type: !80)
!4414 = !DILocation(line: 5552, column: 37, scope: !4406)
!4415 = !DILocalVariable(name: "sslConnectFn", arg: 4, scope: !4406, file: !175, line: 5553, type: !290)
!4416 = !DILocation(line: 5553, column: 55, scope: !4406)
!4417 = !DILocalVariable(name: "clientData", arg: 5, scope: !4406, file: !175, line: 5554, type: !80)
!4418 = !DILocation(line: 5554, column: 37, scope: !4406)
!4419 = !DILocation(line: 5584, column: 4, scope: !4406)
!4420 = distinct !DISubprogram(name: "AsyncTCPSocketAcceptSSL", scope: !175, file: !175, line: 5445, type: !296, isLocal: true, isDefinition: true, scopeLine: 5447, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4421 = !DILocalVariable(name: "base", arg: 1, scope: !4420, file: !175, line: 5445, type: !213)
!4422 = !DILocation(line: 5445, column: 38, scope: !4420)
!4423 = !DILocalVariable(name: "sslCtx", arg: 2, scope: !4420, file: !175, line: 5446, type: !80)
!4424 = !DILocation(line: 5446, column: 31, scope: !4420)
!4425 = !DILocation(line: 5458, column: 4, scope: !4420)
!4426 = distinct !DISubprogram(name: "AsyncTCPSocketStartSslAccept", scope: !175, file: !175, line: 5675, type: !300, isLocal: true, isDefinition: true, scopeLine: 5679, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4427 = !DILocalVariable(name: "base", arg: 1, scope: !4426, file: !175, line: 5675, type: !213)
!4428 = !DILocation(line: 5675, column: 43, scope: !4426)
!4429 = !DILocalVariable(name: "sslCtx", arg: 2, scope: !4426, file: !175, line: 5676, type: !80)
!4430 = !DILocation(line: 5676, column: 36, scope: !4426)
!4431 = !DILocalVariable(name: "sslAcceptFn", arg: 3, scope: !4426, file: !175, line: 5677, type: !302)
!4432 = !DILocation(line: 5677, column: 53, scope: !4426)
!4433 = !DILocalVariable(name: "clientData", arg: 4, scope: !4426, file: !175, line: 5678, type: !80)
!4434 = !DILocation(line: 5678, column: 36, scope: !4426)
!4435 = !DILocalVariable(name: "asock", scope: !4426, file: !175, line: 5680, type: !173)
!4436 = !DILocation(line: 5680, column: 20, scope: !4426)
!4437 = !DILocation(line: 5680, column: 38, scope: !4426)
!4438 = !DILocation(line: 5680, column: 28, scope: !4426)
!4439 = !DILocalVariable(name: "ok", scope: !4426, file: !175, line: 5681, type: !168)
!4440 = !DILocation(line: 5681, column: 9, scope: !4426)
!4441 = !DILocation(line: 5688, column: 8, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4426, file: !175, line: 5688, column: 8)
!4443 = !DILocation(line: 5688, column: 15, scope: !4442)
!4444 = !DILocation(line: 5688, column: 27, scope: !4442)
!4445 = !DILocation(line: 5688, column: 30, scope: !4446)
!4446 = !DILexicalBlockFile(scope: !4442, file: !175, discriminator: 1)
!4447 = !DILocation(line: 5688, column: 37, scope: !4446)
!4448 = !DILocation(line: 5688, column: 8, scope: !4446)
!4449 = !DILocation(line: 5689, column: 7, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4442, file: !175, line: 5688, column: 51)
!4451 = distinct !{!4451, !4449}
!4452 = !DILocation(line: 5689, column: 71, scope: !4453)
!4453 = !DILexicalBlockFile(scope: !4454, file: !175, discriminator: 1)
!4454 = distinct !DILexicalBlock(scope: !4450, file: !175, line: 5689, column: 10)
!4455 = !DILocation(line: 5689, column: 60, scope: !4453)
!4456 = !DILocation(line: 5689, column: 42, scope: !4457)
!4457 = !DILexicalBlockFile(scope: !4453, file: !175, discriminator: 2)
!4458 = !DILocation(line: 5689, column: 109, scope: !4453)
!4459 = !DILocation(line: 5689, column: 98, scope: !4460)
!4460 = !DILexicalBlockFile(scope: !4453, file: !175, discriminator: 3)
!4461 = !DILocation(line: 5689, column: 80, scope: !4462)
!4462 = !DILexicalBlockFile(scope: !4453, file: !175, discriminator: 4)
!4463 = !DILocation(line: 5689, column: 12, scope: !4464)
!4464 = !DILexicalBlockFile(scope: !4453, file: !175, discriminator: 5)
!4465 = !DILocation(line: 5689, column: 119, scope: !4466)
!4466 = !DILexicalBlockFile(scope: !4453, file: !175, discriminator: 6)
!4467 = !DILocation(line: 5689, column: 174, scope: !4453)
!4468 = !DILocation(line: 5690, column: 7, scope: !4450)
!4469 = !DILocation(line: 5693, column: 36, scope: !4426)
!4470 = !DILocation(line: 5693, column: 43, scope: !4426)
!4471 = !DILocation(line: 5693, column: 52, scope: !4426)
!4472 = !DILocation(line: 5693, column: 9, scope: !4426)
!4473 = !DILocation(line: 5693, column: 7, scope: !4426)
!4474 = !DILocation(line: 5694, column: 9, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4426, file: !175, line: 5694, column: 8)
!4476 = !DILocation(line: 5694, column: 8, scope: !4426)
!4477 = !DILocation(line: 5696, column: 9, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4475, file: !175, line: 5694, column: 13)
!4479 = !DILocation(line: 5696, column: 36, scope: !4478)
!4480 = !DILocation(line: 5696, column: 25, scope: !4478)
!4481 = !DILocation(line: 5696, column: 44, scope: !4478)
!4482 = !DILocation(line: 5696, column: 7, scope: !4483)
!4483 = !DILexicalBlockFile(scope: !4478, file: !175, discriminator: 1)
!4484 = !DILocation(line: 5697, column: 7, scope: !4478)
!4485 = !DILocation(line: 5700, column: 25, scope: !4426)
!4486 = !DILocation(line: 5700, column: 4, scope: !4426)
!4487 = !DILocation(line: 5700, column: 11, scope: !4426)
!4488 = !DILocation(line: 5700, column: 23, scope: !4426)
!4489 = !DILocation(line: 5701, column: 24, scope: !4426)
!4490 = !DILocation(line: 5701, column: 4, scope: !4426)
!4491 = !DILocation(line: 5701, column: 11, scope: !4426)
!4492 = !DILocation(line: 5701, column: 22, scope: !4426)
!4493 = !DILocation(line: 5703, column: 36, scope: !4426)
!4494 = !DILocation(line: 5703, column: 4, scope: !4426)
!4495 = !DILocation(line: 5704, column: 4, scope: !4426)
!4496 = !DILocation(line: 5705, column: 1, scope: !4426)
!4497 = distinct !DISubprogram(name: "AsyncTCPSocketFlush", scope: !175, file: !175, line: 4154, type: !305, isLocal: true, isDefinition: true, scopeLine: 4156, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4498 = !DILocalVariable(name: "base", arg: 1, scope: !4497, file: !175, line: 4154, type: !213)
!4499 = !DILocation(line: 4154, column: 34, scope: !4497)
!4500 = !DILocalVariable(name: "timeoutMS", arg: 2, scope: !4497, file: !175, line: 4155, type: !165)
!4501 = !DILocation(line: 4155, column: 25, scope: !4497)
!4502 = !DILocalVariable(name: "s", scope: !4497, file: !175, line: 4157, type: !173)
!4503 = !DILocation(line: 4157, column: 20, scope: !4497)
!4504 = !DILocation(line: 4157, column: 34, scope: !4497)
!4505 = !DILocation(line: 4157, column: 24, scope: !4497)
!4506 = !DILocalVariable(name: "now", scope: !4497, file: !175, line: 4158, type: !1792)
!4507 = !DILocation(line: 4158, column: 15, scope: !4497)
!4508 = !DILocalVariable(name: "done", scope: !4497, file: !175, line: 4158, type: !1792)
!4509 = !DILocation(line: 4158, column: 20, scope: !4497)
!4510 = !DILocalVariable(name: "retVal", scope: !4497, file: !175, line: 4159, type: !165)
!4511 = !DILocation(line: 4159, column: 8, scope: !4497)
!4512 = !DILocation(line: 4161, column: 8, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4497, file: !175, line: 4161, column: 8)
!4514 = !DILocation(line: 4161, column: 10, scope: !4513)
!4515 = !DILocation(line: 4161, column: 8, scope: !4497)
!4516 = !DILocation(line: 4162, column: 7, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4513, file: !175, line: 4161, column: 18)
!4518 = !DILocation(line: 4164, column: 7, scope: !4517)
!4519 = !DILocation(line: 4168, column: 25, scope: !4497)
!4520 = !DILocation(line: 4168, column: 4, scope: !4497)
!4521 = !DILocation(line: 4170, column: 31, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4497, file: !175, line: 4170, column: 8)
!4523 = !DILocation(line: 4170, column: 8, scope: !4522)
!4524 = !DILocation(line: 4170, column: 34, scope: !4522)
!4525 = !DILocation(line: 4170, column: 8, scope: !4497)
!4526 = !DILocation(line: 4171, column: 7, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4522, file: !175, line: 4170, column: 59)
!4528 = distinct !{!4528, !4526}
!4529 = !DILocation(line: 4171, column: 71, scope: !4530)
!4530 = !DILexicalBlockFile(scope: !4531, file: !175, discriminator: 1)
!4531 = distinct !DILexicalBlock(scope: !4527, file: !175, line: 4171, column: 10)
!4532 = !DILocation(line: 4171, column: 60, scope: !4530)
!4533 = !DILocation(line: 4171, column: 42, scope: !4534)
!4534 = !DILexicalBlockFile(scope: !4530, file: !175, discriminator: 2)
!4535 = !DILocation(line: 4171, column: 105, scope: !4530)
!4536 = !DILocation(line: 4171, column: 94, scope: !4537)
!4537 = !DILexicalBlockFile(scope: !4530, file: !175, discriminator: 3)
!4538 = !DILocation(line: 4171, column: 76, scope: !4539)
!4539 = !DILexicalBlockFile(scope: !4530, file: !175, discriminator: 4)
!4540 = !DILocation(line: 4171, column: 12, scope: !4541)
!4541 = !DILexicalBlockFile(scope: !4530, file: !175, discriminator: 5)
!4542 = !DILocation(line: 4171, column: 111, scope: !4543)
!4543 = !DILexicalBlockFile(scope: !4530, file: !175, discriminator: 6)
!4544 = !DILocation(line: 4171, column: 167, scope: !4530)
!4545 = !DILocation(line: 4172, column: 14, scope: !4527)
!4546 = !DILocation(line: 4173, column: 7, scope: !4527)
!4547 = !DILocation(line: 4176, column: 10, scope: !4497)
!4548 = !DILocation(line: 4176, column: 35, scope: !4497)
!4549 = !DILocation(line: 4176, column: 8, scope: !4497)
!4550 = !DILocation(line: 4177, column: 11, scope: !4497)
!4551 = !DILocation(line: 4177, column: 17, scope: !4497)
!4552 = !DILocation(line: 4177, column: 15, scope: !4497)
!4553 = !DILocation(line: 4177, column: 9, scope: !4497)
!4554 = !DILocation(line: 4179, column: 4, scope: !4497)
!4555 = !DILocation(line: 4179, column: 11, scope: !4556)
!4556 = !DILexicalBlockFile(scope: !4497, file: !175, discriminator: 1)
!4557 = !DILocation(line: 4179, column: 14, scope: !4556)
!4558 = !DILocation(line: 4179, column: 4, scope: !4556)
!4559 = !DILocalVariable(name: "asock", scope: !4560, file: !175, line: 4180, type: !173)
!4560 = distinct !DILexicalBlock(scope: !4497, file: !175, line: 4179, column: 27)
!4561 = !DILocation(line: 4180, column: 23, scope: !4560)
!4562 = !DILocation(line: 4182, column: 35, scope: !4560)
!4563 = !DILocation(line: 4182, column: 41, scope: !4560)
!4564 = !DILocation(line: 4182, column: 48, scope: !4560)
!4565 = !DILocation(line: 4182, column: 46, scope: !4560)
!4566 = !DILocation(line: 4182, column: 16, scope: !4560)
!4567 = !DILocation(line: 4182, column: 14, scope: !4560)
!4568 = !DILocation(line: 4183, column: 11, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4560, file: !175, line: 4183, column: 11)
!4570 = !DILocation(line: 4183, column: 18, scope: !4569)
!4571 = !DILocation(line: 4183, column: 11, scope: !4560)
!4572 = !DILocation(line: 4184, column: 10, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4569, file: !175, line: 4183, column: 24)
!4574 = distinct !{!4574, !4572}
!4575 = !DILocation(line: 4184, column: 74, scope: !4576)
!4576 = !DILexicalBlockFile(scope: !4577, file: !175, discriminator: 1)
!4577 = distinct !DILexicalBlock(scope: !4573, file: !175, line: 4184, column: 13)
!4578 = !DILocation(line: 4184, column: 63, scope: !4576)
!4579 = !DILocation(line: 4184, column: 45, scope: !4580)
!4580 = !DILexicalBlockFile(scope: !4576, file: !175, discriminator: 2)
!4581 = !DILocation(line: 4184, column: 108, scope: !4576)
!4582 = !DILocation(line: 4184, column: 97, scope: !4583)
!4583 = !DILexicalBlockFile(scope: !4576, file: !175, discriminator: 3)
!4584 = !DILocation(line: 4184, column: 79, scope: !4585)
!4585 = !DILexicalBlockFile(scope: !4576, file: !175, discriminator: 4)
!4586 = !DILocation(line: 4184, column: 15, scope: !4587)
!4587 = !DILexicalBlockFile(scope: !4576, file: !175, discriminator: 5)
!4588 = !DILocation(line: 4184, column: 114, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !4576, file: !175, discriminator: 6)
!4590 = !DILocation(line: 4184, column: 142, scope: !4576)
!4591 = !DILocation(line: 4185, column: 10, scope: !4573)
!4592 = !DILocation(line: 4189, column: 48, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4560, file: !175, line: 4189, column: 11)
!4594 = !DILocation(line: 4189, column: 21, scope: !4593)
!4595 = !DILocation(line: 4189, column: 19, scope: !4593)
!4596 = !DILocation(line: 4189, column: 52, scope: !4593)
!4597 = !DILocation(line: 4189, column: 11, scope: !4560)
!4598 = !DILocation(line: 4190, column: 10, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4593, file: !175, line: 4189, column: 58)
!4600 = !DILocation(line: 4195, column: 11, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4560, file: !175, line: 4195, column: 11)
!4602 = !DILocation(line: 4195, column: 21, scope: !4601)
!4603 = !DILocation(line: 4195, column: 11, scope: !4560)
!4604 = !DILocation(line: 4196, column: 16, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4601, file: !175, line: 4195, column: 27)
!4606 = !DILocation(line: 4196, column: 41, scope: !4605)
!4607 = !DILocation(line: 4196, column: 14, scope: !4605)
!4608 = !DILocation(line: 4199, column: 14, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4605, file: !175, line: 4199, column: 14)
!4610 = !DILocation(line: 4199, column: 20, scope: !4609)
!4611 = !DILocation(line: 4199, column: 18, scope: !4609)
!4612 = !DILocation(line: 4199, column: 25, scope: !4609)
!4613 = !DILocation(line: 4199, column: 28, scope: !4614)
!4614 = !DILexicalBlockFile(scope: !4609, file: !175, discriminator: 1)
!4615 = !DILocation(line: 4199, column: 31, scope: !4614)
!4616 = !DILocation(line: 4199, column: 14, scope: !4614)
!4617 = !DILocation(line: 4200, column: 13, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4609, file: !175, line: 4199, column: 44)
!4619 = distinct !{!4619, !4617}
!4620 = !DILocation(line: 4200, column: 77, scope: !4621)
!4621 = !DILexicalBlockFile(scope: !4622, file: !175, discriminator: 1)
!4622 = distinct !DILexicalBlock(scope: !4618, file: !175, line: 4200, column: 16)
!4623 = !DILocation(line: 4200, column: 66, scope: !4621)
!4624 = !DILocation(line: 4200, column: 48, scope: !4625)
!4625 = !DILexicalBlockFile(scope: !4621, file: !175, discriminator: 2)
!4626 = !DILocation(line: 4200, column: 111, scope: !4621)
!4627 = !DILocation(line: 4200, column: 100, scope: !4628)
!4628 = !DILexicalBlockFile(scope: !4621, file: !175, discriminator: 3)
!4629 = !DILocation(line: 4200, column: 82, scope: !4630)
!4630 = !DILexicalBlockFile(scope: !4621, file: !175, discriminator: 4)
!4631 = !DILocation(line: 4200, column: 18, scope: !4632)
!4632 = !DILexicalBlockFile(scope: !4621, file: !175, discriminator: 5)
!4633 = !DILocation(line: 4200, column: 117, scope: !4634)
!4634 = !DILexicalBlockFile(scope: !4621, file: !175, discriminator: 6)
!4635 = !DILocation(line: 4200, column: 148, scope: !4621)
!4636 = !DILocation(line: 4201, column: 20, scope: !4618)
!4637 = !DILocation(line: 4202, column: 13, scope: !4618)
!4638 = !DILocation(line: 4204, column: 7, scope: !4605)
!4639 = !DILocation(line: 4179, column: 4, scope: !4640)
!4640 = !DILexicalBlockFile(scope: !4497, file: !175, discriminator: 2)
!4641 = distinct !{!4641, !4554}
!4642 = !DILocation(line: 4207, column: 11, scope: !4497)
!4643 = !DILocation(line: 4207, column: 4, scope: !4497)
!4644 = !DILocation(line: 4210, column: 26, scope: !4497)
!4645 = !DILocation(line: 4210, column: 4, scope: !4497)
!4646 = !DILocation(line: 4212, column: 11, scope: !4497)
!4647 = !DILocation(line: 4212, column: 4, scope: !4497)
!4648 = !DILocation(line: 4213, column: 1, scope: !4497)
!4649 = distinct !DISubprogram(name: "AsyncTCPSocketRecv", scope: !175, file: !175, line: 2379, type: !309, isLocal: true, isDefinition: true, scopeLine: 2385, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4650 = !DILocalVariable(name: "base", arg: 1, scope: !4649, file: !175, line: 2379, type: !213)
!4651 = !DILocation(line: 2379, column: 33, scope: !4649)
!4652 = !DILocalVariable(name: "buf", arg: 2, scope: !4649, file: !175, line: 2380, type: !80)
!4653 = !DILocation(line: 2380, column: 26, scope: !4649)
!4654 = !DILocalVariable(name: "len", arg: 3, scope: !4649, file: !175, line: 2381, type: !165)
!4655 = !DILocation(line: 2381, column: 24, scope: !4649)
!4656 = !DILocalVariable(name: "fireOnPartial", arg: 4, scope: !4649, file: !175, line: 2382, type: !168)
!4657 = !DILocation(line: 2382, column: 25, scope: !4649)
!4658 = !DILocalVariable(name: "cb", arg: 5, scope: !4649, file: !175, line: 2383, type: !80)
!4659 = !DILocation(line: 2383, column: 26, scope: !4649)
!4660 = !DILocalVariable(name: "cbData", arg: 6, scope: !4649, file: !175, line: 2384, type: !80)
!4661 = !DILocation(line: 2384, column: 26, scope: !4649)
!4662 = !DILocalVariable(name: "asock", scope: !4649, file: !175, line: 2386, type: !173)
!4663 = !DILocation(line: 2386, column: 20, scope: !4649)
!4664 = !DILocation(line: 2386, column: 38, scope: !4649)
!4665 = !DILocation(line: 2386, column: 28, scope: !4649)
!4666 = !DILocalVariable(name: "retVal", scope: !4649, file: !175, line: 2387, type: !165)
!4667 = !DILocation(line: 2387, column: 8, scope: !4649)
!4668 = !DILocation(line: 2389, column: 9, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4649, file: !175, line: 2389, column: 8)
!4670 = !DILocation(line: 2389, column: 16, scope: !4669)
!4671 = !DILocation(line: 2389, column: 21, scope: !4669)
!4672 = !DILocation(line: 2389, column: 8, scope: !4649)
!4673 = !DILocation(line: 2390, column: 7, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4669, file: !175, line: 2389, column: 30)
!4675 = distinct !{!4675, !4673}
!4676 = !DILocation(line: 2390, column: 71, scope: !4677)
!4677 = !DILexicalBlockFile(scope: !4678, file: !175, discriminator: 1)
!4678 = distinct !DILexicalBlock(scope: !4674, file: !175, line: 2390, column: 10)
!4679 = !DILocation(line: 2390, column: 60, scope: !4677)
!4680 = !DILocation(line: 2390, column: 42, scope: !4681)
!4681 = !DILexicalBlockFile(scope: !4677, file: !175, discriminator: 2)
!4682 = !DILocation(line: 2390, column: 109, scope: !4677)
!4683 = !DILocation(line: 2390, column: 98, scope: !4684)
!4684 = !DILexicalBlockFile(scope: !4677, file: !175, discriminator: 3)
!4685 = !DILocation(line: 2390, column: 80, scope: !4686)
!4686 = !DILexicalBlockFile(scope: !4677, file: !175, discriminator: 4)
!4687 = !DILocation(line: 2390, column: 12, scope: !4688)
!4688 = !DILexicalBlockFile(scope: !4677, file: !175, discriminator: 5)
!4689 = !DILocation(line: 2390, column: 119, scope: !4690)
!4690 = !DILexicalBlockFile(scope: !4677, file: !175, discriminator: 6)
!4691 = !DILocation(line: 2390, column: 181, scope: !4677)
!4692 = !DILocation(line: 2391, column: 7, scope: !4674)
!4693 = !DILocation(line: 2401, column: 9, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4649, file: !175, line: 2401, column: 8)
!4695 = !DILocation(line: 2401, column: 13, scope: !4694)
!4696 = !DILocation(line: 2401, column: 17, scope: !4697)
!4697 = !DILexicalBlockFile(scope: !4694, file: !175, discriminator: 1)
!4698 = !DILocation(line: 2401, column: 20, scope: !4697)
!4699 = !DILocation(line: 2401, column: 23, scope: !4700)
!4700 = !DILexicalBlockFile(scope: !4694, file: !175, discriminator: 2)
!4701 = !DILocation(line: 2401, column: 27, scope: !4700)
!4702 = !DILocation(line: 2401, column: 8, scope: !4700)
!4703 = !DILocation(line: 2402, column: 7, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4694, file: !175, line: 2401, column: 33)
!4705 = !DILocation(line: 2403, column: 7, scope: !4704)
!4706 = !DILocation(line: 2408, column: 31, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4649, file: !175, line: 2408, column: 8)
!4708 = !DILocation(line: 2408, column: 8, scope: !4707)
!4709 = !DILocation(line: 2408, column: 38, scope: !4707)
!4710 = !DILocation(line: 2408, column: 8, scope: !4649)
!4711 = !DILocation(line: 2409, column: 7, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4707, file: !175, line: 2408, column: 63)
!4713 = distinct !{!4713, !4711}
!4714 = !DILocation(line: 2409, column: 71, scope: !4715)
!4715 = !DILexicalBlockFile(scope: !4716, file: !175, discriminator: 1)
!4716 = distinct !DILexicalBlock(scope: !4712, file: !175, line: 2409, column: 10)
!4717 = !DILocation(line: 2409, column: 60, scope: !4715)
!4718 = !DILocation(line: 2409, column: 42, scope: !4719)
!4719 = !DILexicalBlockFile(scope: !4715, file: !175, discriminator: 2)
!4720 = !DILocation(line: 2409, column: 109, scope: !4715)
!4721 = !DILocation(line: 2409, column: 98, scope: !4722)
!4722 = !DILexicalBlockFile(scope: !4715, file: !175, discriminator: 3)
!4723 = !DILocation(line: 2409, column: 80, scope: !4724)
!4724 = !DILexicalBlockFile(scope: !4715, file: !175, discriminator: 4)
!4725 = !DILocation(line: 2409, column: 12, scope: !4726)
!4726 = !DILexicalBlockFile(scope: !4715, file: !175, discriminator: 5)
!4727 = !DILocation(line: 2409, column: 119, scope: !4728)
!4728 = !DILexicalBlockFile(scope: !4715, file: !175, discriminator: 6)
!4729 = !DILocation(line: 2409, column: 174, scope: !4715)
!4730 = !DILocation(line: 2410, column: 7, scope: !4712)
!4731 = !DILocation(line: 2413, column: 8, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4649, file: !175, line: 2413, column: 8)
!4733 = !DILocation(line: 2413, column: 15, scope: !4732)
!4734 = !DILocation(line: 2413, column: 30, scope: !4732)
!4735 = !DILocation(line: 2413, column: 34, scope: !4736)
!4736 = !DILexicalBlockFile(scope: !4732, file: !175, discriminator: 1)
!4737 = !DILocation(line: 2413, column: 41, scope: !4736)
!4738 = !DILocation(line: 2413, column: 8, scope: !4736)
!4739 = !DILocation(line: 2414, column: 7, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4732, file: !175, line: 2413, column: 53)
!4741 = distinct !{!4741, !4739}
!4742 = !DILocation(line: 2414, column: 71, scope: !4743)
!4743 = !DILexicalBlockFile(scope: !4744, file: !175, discriminator: 1)
!4744 = distinct !DILexicalBlock(scope: !4740, file: !175, line: 2414, column: 10)
!4745 = !DILocation(line: 2414, column: 60, scope: !4743)
!4746 = !DILocation(line: 2414, column: 42, scope: !4747)
!4747 = !DILexicalBlockFile(scope: !4743, file: !175, discriminator: 2)
!4748 = !DILocation(line: 2414, column: 109, scope: !4743)
!4749 = !DILocation(line: 2414, column: 98, scope: !4750)
!4750 = !DILexicalBlockFile(scope: !4743, file: !175, discriminator: 3)
!4751 = !DILocation(line: 2414, column: 80, scope: !4752)
!4752 = !DILexicalBlockFile(scope: !4743, file: !175, discriminator: 4)
!4753 = !DILocation(line: 2414, column: 12, scope: !4754)
!4754 = !DILexicalBlockFile(scope: !4743, file: !175, discriminator: 5)
!4755 = !DILocation(line: 2414, column: 119, scope: !4756)
!4756 = !DILexicalBlockFile(scope: !4743, file: !175, discriminator: 6)
!4757 = !DILocation(line: 2414, column: 180, scope: !4743)
!4758 = !DILocation(line: 2415, column: 7, scope: !4740)
!4759 = !DILocation(line: 2418, column: 42, scope: !4649)
!4760 = !DILocation(line: 2418, column: 13, scope: !4649)
!4761 = !DILocation(line: 2418, column: 11, scope: !4649)
!4762 = !DILocation(line: 2419, column: 8, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4649, file: !175, line: 2419, column: 8)
!4764 = !DILocation(line: 2419, column: 15, scope: !4763)
!4765 = !DILocation(line: 2419, column: 8, scope: !4649)
!4766 = !DILocation(line: 2420, column: 14, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4763, file: !175, line: 2419, column: 21)
!4768 = !DILocation(line: 2420, column: 7, scope: !4767)
!4769 = !DILocation(line: 2423, column: 37, scope: !4649)
!4770 = !DILocation(line: 2423, column: 26, scope: !4649)
!4771 = !DILocation(line: 2423, column: 45, scope: !4649)
!4772 = !DILocation(line: 2423, column: 50, scope: !4649)
!4773 = !DILocation(line: 2423, column: 55, scope: !4649)
!4774 = !DILocation(line: 2424, column: 26, scope: !4649)
!4775 = !DILocation(line: 2424, column: 30, scope: !4649)
!4776 = !DILocation(line: 2423, column: 4, scope: !4777)
!4777 = !DILexicalBlockFile(scope: !4649, file: !175, discriminator: 1)
!4778 = !DILocation(line: 2425, column: 4, scope: !4649)
!4779 = !DILocation(line: 2426, column: 1, scope: !4649)
!4780 = distinct !DISubprogram(name: "AsyncTCPSocketRecvPassedFd", scope: !175, file: !175, line: 2447, type: !313, isLocal: true, isDefinition: true, scopeLine: 2452, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4781 = !DILocalVariable(name: "base", arg: 1, scope: !4780, file: !175, line: 2447, type: !213)
!4782 = !DILocation(line: 2447, column: 41, scope: !4780)
!4783 = !DILocalVariable(name: "buf", arg: 2, scope: !4780, file: !175, line: 2448, type: !80)
!4784 = !DILocation(line: 2448, column: 34, scope: !4780)
!4785 = !DILocalVariable(name: "len", arg: 3, scope: !4780, file: !175, line: 2449, type: !165)
!4786 = !DILocation(line: 2449, column: 32, scope: !4780)
!4787 = !DILocalVariable(name: "cb", arg: 4, scope: !4780, file: !175, line: 2450, type: !80)
!4788 = !DILocation(line: 2450, column: 34, scope: !4780)
!4789 = !DILocalVariable(name: "cbData", arg: 5, scope: !4780, file: !175, line: 2451, type: !80)
!4790 = !DILocation(line: 2451, column: 34, scope: !4780)
!4791 = !DILocalVariable(name: "asock", scope: !4780, file: !175, line: 2453, type: !173)
!4792 = !DILocation(line: 2453, column: 20, scope: !4780)
!4793 = !DILocation(line: 2453, column: 38, scope: !4780)
!4794 = !DILocation(line: 2453, column: 28, scope: !4780)
!4795 = !DILocalVariable(name: "err", scope: !4780, file: !175, line: 2454, type: !165)
!4796 = !DILocation(line: 2454, column: 8, scope: !4780)
!4797 = !DILocation(line: 2456, column: 9, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4780, file: !175, line: 2456, column: 8)
!4799 = !DILocation(line: 2456, column: 16, scope: !4798)
!4800 = !DILocation(line: 2456, column: 21, scope: !4798)
!4801 = !DILocation(line: 2456, column: 8, scope: !4780)
!4802 = !DILocation(line: 2457, column: 7, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4798, file: !175, line: 2456, column: 30)
!4804 = distinct !{!4804, !4802}
!4805 = !DILocation(line: 2457, column: 71, scope: !4806)
!4806 = !DILexicalBlockFile(scope: !4807, file: !175, discriminator: 1)
!4807 = distinct !DILexicalBlock(scope: !4803, file: !175, line: 2457, column: 10)
!4808 = !DILocation(line: 2457, column: 60, scope: !4806)
!4809 = !DILocation(line: 2457, column: 42, scope: !4810)
!4810 = !DILexicalBlockFile(scope: !4806, file: !175, discriminator: 2)
!4811 = !DILocation(line: 2457, column: 109, scope: !4806)
!4812 = !DILocation(line: 2457, column: 98, scope: !4813)
!4813 = !DILexicalBlockFile(scope: !4806, file: !175, discriminator: 3)
!4814 = !DILocation(line: 2457, column: 80, scope: !4815)
!4815 = !DILexicalBlockFile(scope: !4806, file: !175, discriminator: 4)
!4816 = !DILocation(line: 2457, column: 12, scope: !4817)
!4817 = !DILexicalBlockFile(scope: !4806, file: !175, discriminator: 5)
!4818 = !DILocation(line: 2457, column: 119, scope: !4819)
!4819 = !DILexicalBlockFile(scope: !4806, file: !175, discriminator: 6)
!4820 = !DILocation(line: 2457, column: 181, scope: !4806)
!4821 = !DILocation(line: 2459, column: 7, scope: !4803)
!4822 = !DILocation(line: 2463, column: 8, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4780, file: !175, line: 2463, column: 8)
!4824 = !DILocation(line: 2463, column: 15, scope: !4823)
!4825 = !DILocation(line: 2463, column: 22, scope: !4823)
!4826 = !DILocation(line: 2463, column: 25, scope: !4823)
!4827 = !DILocation(line: 2463, column: 8, scope: !4780)
!4828 = !DILocation(line: 2464, column: 13, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4823, file: !175, line: 2463, column: 32)
!4830 = !DILocation(line: 2464, column: 20, scope: !4829)
!4831 = !DILocation(line: 2464, column: 27, scope: !4829)
!4832 = !DILocation(line: 2464, column: 7, scope: !4829)
!4833 = !DILocation(line: 2465, column: 7, scope: !4829)
!4834 = !DILocation(line: 2465, column: 14, scope: !4829)
!4835 = !DILocation(line: 2465, column: 21, scope: !4829)
!4836 = !DILocation(line: 2465, column: 24, scope: !4829)
!4837 = !DILocation(line: 2466, column: 4, scope: !4829)
!4838 = !DILocation(line: 2467, column: 4, scope: !4780)
!4839 = !DILocation(line: 2467, column: 11, scope: !4780)
!4840 = !DILocation(line: 2467, column: 18, scope: !4780)
!4841 = !DILocation(line: 2467, column: 27, scope: !4780)
!4842 = !DILocation(line: 2469, column: 40, scope: !4780)
!4843 = !DILocation(line: 2469, column: 29, scope: !4780)
!4844 = !DILocation(line: 2469, column: 48, scope: !4780)
!4845 = !DILocation(line: 2469, column: 53, scope: !4780)
!4846 = !DILocation(line: 2469, column: 61, scope: !4780)
!4847 = !DILocation(line: 2469, column: 65, scope: !4780)
!4848 = !DILocation(line: 2469, column: 10, scope: !4849)
!4849 = !DILexicalBlockFile(scope: !4780, file: !175, discriminator: 1)
!4850 = !DILocation(line: 2469, column: 8, scope: !4780)
!4851 = !DILocation(line: 2470, column: 8, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4780, file: !175, line: 2470, column: 8)
!4853 = !DILocation(line: 2470, column: 12, scope: !4852)
!4854 = !DILocation(line: 2470, column: 8, scope: !4780)
!4855 = !DILocation(line: 2471, column: 7, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4852, file: !175, line: 2470, column: 18)
!4857 = !DILocation(line: 2471, column: 14, scope: !4856)
!4858 = !DILocation(line: 2471, column: 21, scope: !4856)
!4859 = !DILocation(line: 2471, column: 30, scope: !4856)
!4860 = !DILocation(line: 2472, column: 4, scope: !4856)
!4861 = !DILocation(line: 2474, column: 11, scope: !4780)
!4862 = !DILocation(line: 2474, column: 4, scope: !4780)
!4863 = !DILocation(line: 2475, column: 1, scope: !4780)
!4864 = distinct !DISubprogram(name: "AsyncTCPSocketGetReceivedFd", scope: !175, file: !175, line: 5370, type: !252, isLocal: true, isDefinition: true, scopeLine: 5371, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4865 = !DILocalVariable(name: "base", arg: 1, scope: !4864, file: !175, line: 5370, type: !213)
!4866 = !DILocation(line: 5370, column: 42, scope: !4864)
!4867 = !DILocalVariable(name: "asock", scope: !4864, file: !175, line: 5372, type: !173)
!4868 = !DILocation(line: 5372, column: 20, scope: !4864)
!4869 = !DILocation(line: 5372, column: 38, scope: !4864)
!4870 = !DILocation(line: 5372, column: 28, scope: !4864)
!4871 = !DILocalVariable(name: "fd", scope: !4864, file: !175, line: 5373, type: !165)
!4872 = !DILocation(line: 5373, column: 8, scope: !4864)
!4873 = !DILocation(line: 5377, column: 31, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4864, file: !175, line: 5377, column: 8)
!4875 = !DILocation(line: 5377, column: 8, scope: !4874)
!4876 = !DILocation(line: 5377, column: 38, scope: !4874)
!4877 = !DILocation(line: 5377, column: 8, scope: !4864)
!4878 = !DILocation(line: 5378, column: 7, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4874, file: !175, line: 5377, column: 63)
!4880 = !DILocation(line: 5379, column: 7, scope: !4879)
!4881 = !DILocation(line: 5381, column: 9, scope: !4864)
!4882 = !DILocation(line: 5381, column: 16, scope: !4864)
!4883 = !DILocation(line: 5381, column: 23, scope: !4864)
!4884 = !DILocation(line: 5381, column: 7, scope: !4864)
!4885 = !DILocation(line: 5382, column: 4, scope: !4864)
!4886 = !DILocation(line: 5382, column: 11, scope: !4864)
!4887 = !DILocation(line: 5382, column: 18, scope: !4864)
!4888 = !DILocation(line: 5382, column: 21, scope: !4864)
!4889 = !DILocation(line: 5383, column: 4, scope: !4864)
!4890 = !DILocation(line: 5383, column: 11, scope: !4864)
!4891 = !DILocation(line: 5383, column: 18, scope: !4864)
!4892 = !DILocation(line: 5383, column: 27, scope: !4864)
!4893 = !DILocation(line: 5385, column: 11, scope: !4864)
!4894 = !DILocation(line: 5385, column: 4, scope: !4864)
!4895 = !DILocation(line: 5386, column: 1, scope: !4864)
!4896 = distinct !DISubprogram(name: "AsyncTCPSocketSend", scope: !175, file: !175, line: 2984, type: !318, isLocal: true, isDefinition: true, scopeLine: 2989, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!4897 = !DILocalVariable(name: "base", arg: 1, scope: !4896, file: !175, line: 2984, type: !213)
!4898 = !DILocation(line: 2984, column: 33, scope: !4896)
!4899 = !DILocalVariable(name: "buf", arg: 2, scope: !4896, file: !175, line: 2985, type: !80)
!4900 = !DILocation(line: 2985, column: 26, scope: !4896)
!4901 = !DILocalVariable(name: "len", arg: 3, scope: !4896, file: !175, line: 2986, type: !165)
!4902 = !DILocation(line: 2986, column: 24, scope: !4896)
!4903 = !DILocalVariable(name: "sendFn", arg: 4, scope: !4896, file: !175, line: 2987, type: !320)
!4904 = !DILocation(line: 2987, column: 38, scope: !4896)
!4905 = !DILocalVariable(name: "clientData", arg: 5, scope: !4896, file: !175, line: 2988, type: !80)
!4906 = !DILocation(line: 2988, column: 26, scope: !4896)
!4907 = !DILocalVariable(name: "asock", scope: !4896, file: !175, line: 2990, type: !173)
!4908 = !DILocation(line: 2990, column: 20, scope: !4896)
!4909 = !DILocation(line: 2990, column: 38, scope: !4896)
!4910 = !DILocation(line: 2990, column: 28, scope: !4896)
!4911 = !DILocalVariable(name: "retVal", scope: !4896, file: !175, line: 2991, type: !165)
!4912 = !DILocation(line: 2991, column: 8, scope: !4896)
!4913 = !DILocalVariable(name: "bufferListWasEmpty", scope: !4896, file: !175, line: 2992, type: !168)
!4914 = !DILocation(line: 2992, column: 9, scope: !4896)
!4915 = !DILocalVariable(name: "pcur", scope: !4896, file: !175, line: 2993, type: !430)
!4916 = !DILocation(line: 2993, column: 18, scope: !4896)
!4917 = !DILocalVariable(name: "newBuf", scope: !4896, file: !175, line: 2994, type: !419)
!4918 = !DILocation(line: 2994, column: 17, scope: !4896)
!4919 = !DILocation(line: 3003, column: 9, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4896, file: !175, line: 3003, column: 8)
!4921 = !DILocation(line: 3003, column: 13, scope: !4920)
!4922 = !DILocation(line: 3003, column: 16, scope: !4923)
!4923 = !DILexicalBlockFile(scope: !4920, file: !175, discriminator: 1)
!4924 = !DILocation(line: 3003, column: 20, scope: !4923)
!4925 = !DILocation(line: 3003, column: 8, scope: !4923)
!4926 = !DILocation(line: 3005, column: 42, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4920, file: !175, line: 3003, column: 26)
!4928 = !DILocation(line: 3005, column: 47, scope: !4927)
!4929 = !DILocation(line: 3004, column: 7, scope: !4927)
!4930 = !DILocation(line: 3007, column: 7, scope: !4927)
!4931 = !DILocation(line: 3025, column: 31, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4896, file: !175, line: 3025, column: 8)
!4933 = !DILocation(line: 3025, column: 8, scope: !4932)
!4934 = !DILocation(line: 3025, column: 38, scope: !4932)
!4935 = !DILocation(line: 3025, column: 8, scope: !4896)
!4936 = !DILocation(line: 3026, column: 7, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4932, file: !175, line: 3025, column: 63)
!4938 = distinct !{!4938, !4936}
!4939 = !DILocation(line: 3026, column: 71, scope: !4940)
!4940 = !DILexicalBlockFile(scope: !4941, file: !175, discriminator: 1)
!4941 = distinct !DILexicalBlock(scope: !4937, file: !175, line: 3026, column: 10)
!4942 = !DILocation(line: 3026, column: 60, scope: !4940)
!4943 = !DILocation(line: 3026, column: 42, scope: !4944)
!4944 = !DILexicalBlockFile(scope: !4940, file: !175, discriminator: 2)
!4945 = !DILocation(line: 3026, column: 109, scope: !4940)
!4946 = !DILocation(line: 3026, column: 98, scope: !4947)
!4947 = !DILexicalBlockFile(scope: !4940, file: !175, discriminator: 3)
!4948 = !DILocation(line: 3026, column: 80, scope: !4949)
!4949 = !DILexicalBlockFile(scope: !4940, file: !175, discriminator: 4)
!4950 = !DILocation(line: 3026, column: 12, scope: !4951)
!4951 = !DILexicalBlockFile(scope: !4940, file: !175, discriminator: 5)
!4952 = !DILocation(line: 3026, column: 119, scope: !4953)
!4953 = !DILexicalBlockFile(scope: !4940, file: !175, discriminator: 6)
!4954 = !DILocation(line: 3026, column: 174, scope: !4940)
!4955 = !DILocation(line: 3027, column: 7, scope: !4937)
!4956 = !DILocation(line: 3033, column: 13, scope: !4896)
!4957 = !DILocation(line: 3033, column: 11, scope: !4896)
!4958 = !DILocation(line: 3034, column: 18, scope: !4896)
!4959 = !DILocation(line: 3034, column: 4, scope: !4896)
!4960 = !DILocation(line: 3034, column: 12, scope: !4896)
!4961 = !DILocation(line: 3034, column: 16, scope: !4896)
!4962 = !DILocation(line: 3035, column: 18, scope: !4896)
!4963 = !DILocation(line: 3035, column: 4, scope: !4896)
!4964 = !DILocation(line: 3035, column: 12, scope: !4896)
!4965 = !DILocation(line: 3035, column: 16, scope: !4896)
!4966 = !DILocation(line: 3036, column: 21, scope: !4896)
!4967 = !DILocation(line: 3036, column: 4, scope: !4896)
!4968 = !DILocation(line: 3036, column: 12, scope: !4896)
!4969 = !DILocation(line: 3036, column: 19, scope: !4896)
!4970 = !DILocation(line: 3037, column: 25, scope: !4896)
!4971 = !DILocation(line: 3037, column: 4, scope: !4896)
!4972 = !DILocation(line: 3037, column: 12, scope: !4896)
!4973 = !DILocation(line: 3037, column: 23, scope: !4896)
!4974 = !DILocation(line: 3042, column: 26, scope: !4896)
!4975 = !DILocation(line: 3042, column: 5, scope: !4896)
!4976 = !DILocation(line: 3042, column: 12, scope: !4896)
!4977 = !DILocation(line: 3042, column: 24, scope: !4896)
!4978 = !DILocation(line: 3043, column: 27, scope: !4896)
!4979 = !DILocation(line: 3043, column: 35, scope: !4896)
!4980 = !DILocation(line: 3043, column: 4, scope: !4896)
!4981 = !DILocation(line: 3043, column: 11, scope: !4896)
!4982 = !DILocation(line: 3043, column: 23, scope: !4896)
!4983 = !DILocation(line: 3044, column: 26, scope: !4896)
!4984 = !DILocation(line: 3044, column: 33, scope: !4896)
!4985 = !DILocation(line: 3044, column: 48, scope: !4896)
!4986 = !DILocation(line: 3044, column: 45, scope: !4896)
!4987 = !DILocation(line: 3044, column: 25, scope: !4896)
!4988 = !DILocation(line: 3044, column: 23, scope: !4896)
!4989 = !DILocation(line: 3046, column: 8, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4896, file: !175, line: 3046, column: 8)
!4991 = !DILocation(line: 3046, column: 27, scope: !4990)
!4992 = !DILocation(line: 3046, column: 31, scope: !4993)
!4993 = !DILexicalBlockFile(scope: !4990, file: !175, discriminator: 1)
!4994 = !DILocation(line: 3046, column: 38, scope: !4993)
!4995 = !DILocation(line: 3046, column: 8, scope: !4993)
!4996 = !DILocation(line: 3047, column: 11, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4998, file: !175, line: 3047, column: 11)
!4998 = distinct !DILexicalBlock(scope: !4990, file: !175, line: 3046, column: 46)
!4999 = !DILocation(line: 3047, column: 18, scope: !4997)
!5000 = !DILocation(line: 3047, column: 11, scope: !4998)
!5001 = !DILocation(line: 3058, column: 10, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4997, file: !175, line: 3047, column: 34)
!5003 = !DILocation(line: 3058, column: 17, scope: !5002)
!5004 = !DILocation(line: 3058, column: 35, scope: !5002)
!5005 = !DILocation(line: 3059, column: 10, scope: !5002)
!5006 = !DILocation(line: 3059, column: 17, scope: !5002)
!5007 = !DILocation(line: 3059, column: 40, scope: !5002)
!5008 = !DILocation(line: 3059, column: 32, scope: !5002)
!5009 = !DILocation(line: 3060, column: 10, scope: !5002)
!5010 = !DILocation(line: 3060, column: 17, scope: !5002)
!5011 = !DILocation(line: 3060, column: 35, scope: !5002)
!5012 = !DILocation(line: 3061, column: 7, scope: !5002)
!5013 = !DILocation(line: 3089, column: 36, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5015, file: !175, line: 3089, column: 14)
!5015 = distinct !DILexicalBlock(scope: !4997, file: !175, line: 3061, column: 14)
!5016 = !DILocation(line: 3090, column: 36, scope: !5014)
!5017 = !DILocation(line: 3090, column: 43, scope: !5014)
!5018 = !DILocation(line: 3089, column: 14, scope: !5014)
!5019 = !DILocation(line: 3091, column: 14, scope: !5014)
!5020 = !DILocation(line: 3089, column: 14, scope: !5015)
!5021 = !DILocation(line: 3092, column: 20, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5014, file: !175, line: 3091, column: 40)
!5023 = !DILocation(line: 3093, column: 13, scope: !5022)
!5024 = distinct !{!5024, !5023}
!5025 = !DILocation(line: 3093, column: 203, scope: !5026)
!5026 = !DILexicalBlockFile(scope: !5027, file: !175, discriminator: 1)
!5027 = distinct !DILexicalBlock(scope: !5022, file: !175, line: 3093, column: 16)
!5028 = !DILocation(line: 3095, column: 13, scope: !5022)
!5029 = !DILocation(line: 3097, column: 10, scope: !5015)
!5030 = !DILocation(line: 3097, column: 17, scope: !5015)
!5031 = !DILocation(line: 3097, column: 24, scope: !5015)
!5032 = !DILocation(line: 3100, column: 4, scope: !4998)
!5033 = !DILocation(line: 3102, column: 4, scope: !4896)
!5034 = !DILocation(line: 3109, column: 12, scope: !4896)
!5035 = !DILocation(line: 3109, column: 19, scope: !4896)
!5036 = !DILocation(line: 3109, column: 9, scope: !4896)
!5037 = !DILocation(line: 3110, column: 9, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !4896, file: !175, line: 3110, column: 8)
!5039 = !DILocation(line: 3110, column: 8, scope: !5038)
!5040 = !DILocation(line: 3110, column: 14, scope: !5038)
!5041 = !DILocation(line: 3110, column: 8, scope: !4896)
!5042 = !DILocation(line: 3111, column: 12, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5044, file: !175, line: 3111, column: 11)
!5044 = distinct !DILexicalBlock(scope: !5038, file: !175, line: 3110, column: 22)
!5045 = !DILocation(line: 3111, column: 11, scope: !5044)
!5046 = !DILocation(line: 3112, column: 10, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5043, file: !175, line: 3111, column: 32)
!5048 = distinct !{!5048, !5046}
!5049 = !DILocation(line: 3113, column: 24, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5047, file: !175, line: 3112, column: 13)
!5051 = !DILocation(line: 3113, column: 23, scope: !5050)
!5052 = !DILocation(line: 3113, column: 31, scope: !5050)
!5053 = !DILocation(line: 3113, column: 18, scope: !5050)
!5054 = !DILocation(line: 3114, column: 10, scope: !5050)
!5055 = !DILocation(line: 3114, column: 21, scope: !5056)
!5056 = !DILexicalBlockFile(scope: !5047, file: !175, discriminator: 1)
!5057 = !DILocation(line: 3114, column: 20, scope: !5056)
!5058 = !DILocation(line: 3114, column: 28, scope: !5056)
!5059 = !DILocation(line: 3114, column: 33, scope: !5056)
!5060 = !DILocation(line: 3114, column: 10, scope: !5056)
!5061 = !DILocation(line: 3115, column: 7, scope: !5047)
!5062 = !DILocation(line: 3117, column: 13, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5044, file: !175, line: 3117, column: 11)
!5064 = !DILocation(line: 3117, column: 12, scope: !5063)
!5065 = !DILocation(line: 3117, column: 20, scope: !5063)
!5066 = !DILocation(line: 3117, column: 27, scope: !5063)
!5067 = !DILocation(line: 3117, column: 24, scope: !5063)
!5068 = !DILocation(line: 3117, column: 11, scope: !5044)
!5069 = !DILocation(line: 3118, column: 16, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5063, file: !175, line: 3117, column: 32)
!5071 = !DILocation(line: 3118, column: 15, scope: !5070)
!5072 = !DILocation(line: 3118, column: 10, scope: !5070)
!5073 = !DILocation(line: 3119, column: 11, scope: !5070)
!5074 = !DILocation(line: 3119, column: 16, scope: !5070)
!5075 = !DILocation(line: 3120, column: 31, scope: !5070)
!5076 = !DILocation(line: 3120, column: 10, scope: !5070)
!5077 = !DILocation(line: 3120, column: 17, scope: !5070)
!5078 = !DILocation(line: 3120, column: 29, scope: !5070)
!5079 = !DILocation(line: 3121, column: 7, scope: !5070)
!5080 = !DILocation(line: 3122, column: 4, scope: !5044)
!5081 = !DILocation(line: 3124, column: 11, scope: !4896)
!5082 = !DILocation(line: 3124, column: 4, scope: !4896)
!5083 = !DILocation(line: 3125, column: 1, scope: !4896)
!5084 = distinct !DISubprogram(name: "AsyncTCPSocketIsSendBufferFull", scope: !175, file: !175, line: 4666, type: !252, isLocal: true, isDefinition: true, scopeLine: 4667, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5085 = !DILocalVariable(name: "base", arg: 1, scope: !5084, file: !175, line: 4666, type: !213)
!5086 = !DILocation(line: 4666, column: 45, scope: !5084)
!5087 = !DILocalVariable(name: "asock", scope: !5084, file: !175, line: 4668, type: !173)
!5088 = !DILocation(line: 4668, column: 20, scope: !5084)
!5089 = !DILocation(line: 4668, column: 38, scope: !5084)
!5090 = !DILocation(line: 4668, column: 28, scope: !5084)
!5091 = !DILocation(line: 4669, column: 11, scope: !5084)
!5092 = !DILocation(line: 4669, column: 18, scope: !5084)
!5093 = !DILocation(line: 4669, column: 4, scope: !5084)
!5094 = distinct !DISubprogram(name: "AsyncTCPSocketClose", scope: !175, file: !175, line: 4536, type: !252, isLocal: true, isDefinition: true, scopeLine: 4537, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5095 = !DILocalVariable(name: "base", arg: 1, scope: !5094, file: !175, line: 4536, type: !213)
!5096 = !DILocation(line: 4536, column: 34, scope: !5094)
!5097 = !DILocalVariable(name: "asock", scope: !5094, file: !175, line: 4538, type: !173)
!5098 = !DILocation(line: 4538, column: 20, scope: !5094)
!5099 = !DILocation(line: 4538, column: 38, scope: !5094)
!5100 = !DILocation(line: 4538, column: 28, scope: !5094)
!5101 = !DILocation(line: 4542, column: 31, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5094, file: !175, line: 4542, column: 8)
!5103 = !DILocation(line: 4542, column: 8, scope: !5102)
!5104 = !DILocation(line: 4542, column: 38, scope: !5102)
!5105 = !DILocation(line: 4542, column: 8, scope: !5094)
!5106 = !DILocation(line: 4543, column: 7, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5102, file: !175, line: 4542, column: 60)
!5108 = !DILocation(line: 4544, column: 7, scope: !5107)
!5109 = !DILocation(line: 4547, column: 8, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5094, file: !175, line: 4547, column: 8)
!5111 = !DILocation(line: 4547, column: 15, scope: !5110)
!5112 = !DILocation(line: 4547, column: 28, scope: !5110)
!5113 = !DILocation(line: 4547, column: 31, scope: !5114)
!5114 = !DILexicalBlockFile(scope: !5110, file: !175, discriminator: 1)
!5115 = !DILocation(line: 4547, column: 38, scope: !5114)
!5116 = !DILocation(line: 4547, column: 8, scope: !5114)
!5117 = !DILocation(line: 4548, column: 11, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5119, file: !175, line: 4548, column: 11)
!5119 = distinct !DILexicalBlock(scope: !5110, file: !175, line: 4547, column: 52)
!5120 = !DILocation(line: 4548, column: 18, scope: !5118)
!5121 = !DILocation(line: 4548, column: 11, scope: !5119)
!5122 = !DILocation(line: 4549, column: 39, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5118, file: !175, line: 4548, column: 32)
!5124 = !DILocation(line: 4549, column: 46, scope: !5123)
!5125 = !DILocation(line: 4549, column: 28, scope: !5123)
!5126 = !DILocation(line: 4549, column: 10, scope: !5127)
!5127 = !DILexicalBlockFile(scope: !5123, file: !175, discriminator: 1)
!5128 = !DILocation(line: 4550, column: 7, scope: !5123)
!5129 = !DILocation(line: 4551, column: 11, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5119, file: !175, line: 4551, column: 11)
!5131 = !DILocation(line: 4551, column: 18, scope: !5130)
!5132 = !DILocation(line: 4551, column: 11, scope: !5119)
!5133 = !DILocation(line: 4552, column: 39, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5130, file: !175, line: 4551, column: 32)
!5135 = !DILocation(line: 4552, column: 46, scope: !5134)
!5136 = !DILocation(line: 4552, column: 28, scope: !5134)
!5137 = !DILocation(line: 4552, column: 10, scope: !5138)
!5138 = !DILexicalBlockFile(scope: !5134, file: !175, discriminator: 1)
!5139 = !DILocation(line: 4553, column: 7, scope: !5134)
!5140 = !DILocation(line: 4554, column: 4, scope: !5119)
!5141 = !DILocalVariable(name: "removed", scope: !5142, file: !175, line: 4555, type: !168)
!5142 = distinct !DILexicalBlock(scope: !5110, file: !175, line: 4554, column: 11)
!5143 = !DILocation(line: 4555, column: 12, scope: !5142)
!5144 = !DILocalVariable(name: "oldState", scope: !5142, file: !175, line: 4556, type: !205)
!5145 = !DILocation(line: 4556, column: 24, scope: !5142)
!5146 = !DILocation(line: 4559, column: 11, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5142, file: !175, line: 4559, column: 11)
!5148 = !DILocation(line: 4559, column: 18, scope: !5147)
!5149 = !DILocation(line: 4559, column: 42, scope: !5147)
!5150 = !DILocation(line: 4560, column: 34, scope: !5147)
!5151 = !DILocation(line: 4560, column: 11, scope: !5147)
!5152 = !DILocation(line: 4560, column: 41, scope: !5147)
!5153 = !DILocation(line: 4560, column: 65, scope: !5147)
!5154 = !DILocation(line: 4561, column: 12, scope: !5147)
!5155 = !DILocation(line: 4561, column: 19, scope: !5147)
!5156 = !DILocation(line: 4561, column: 24, scope: !5147)
!5157 = !DILocation(line: 4559, column: 11, scope: !5158)
!5158 = !DILexicalBlockFile(scope: !5142, file: !175, discriminator: 1)
!5159 = !DILocalVariable(name: "ret", scope: !5160, file: !175, line: 4562, type: !165)
!5160 = distinct !DILexicalBlock(scope: !5147, file: !175, line: 4561, column: 35)
!5161 = !DILocation(line: 4562, column: 14, scope: !5160)
!5162 = !DILocation(line: 4562, column: 51, scope: !5160)
!5163 = !DILocation(line: 4562, column: 40, scope: !5160)
!5164 = !DILocation(line: 4563, column: 40, scope: !5160)
!5165 = !DILocation(line: 4563, column: 47, scope: !5160)
!5166 = !DILocation(line: 4562, column: 20, scope: !5167)
!5167 = !DILexicalBlockFile(scope: !5160, file: !175, discriminator: 1)
!5168 = !DILocation(line: 4564, column: 14, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5160, file: !175, line: 4564, column: 14)
!5170 = !DILocation(line: 4564, column: 18, scope: !5169)
!5171 = !DILocation(line: 4564, column: 14, scope: !5160)
!5172 = !DILocation(line: 4565, column: 13, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5169, file: !175, line: 4564, column: 24)
!5174 = distinct !{!5174, !5172}
!5175 = !DILocation(line: 4565, column: 77, scope: !5176)
!5176 = !DILexicalBlockFile(scope: !5177, file: !175, discriminator: 1)
!5177 = distinct !DILexicalBlock(scope: !5173, file: !175, line: 4565, column: 16)
!5178 = !DILocation(line: 4565, column: 66, scope: !5176)
!5179 = !DILocation(line: 4565, column: 48, scope: !5180)
!5180 = !DILexicalBlockFile(scope: !5176, file: !175, discriminator: 2)
!5181 = !DILocation(line: 4565, column: 115, scope: !5176)
!5182 = !DILocation(line: 4565, column: 104, scope: !5183)
!5183 = !DILexicalBlockFile(scope: !5176, file: !175, discriminator: 3)
!5184 = !DILocation(line: 4565, column: 86, scope: !5185)
!5185 = !DILexicalBlockFile(scope: !5176, file: !175, discriminator: 4)
!5186 = !DILocation(line: 4565, column: 18, scope: !5187)
!5187 = !DILexicalBlockFile(scope: !5176, file: !175, discriminator: 5)
!5188 = !DILocation(line: 4565, column: 208, scope: !5176)
!5189 = !DILocation(line: 4565, column: 185, scope: !5190)
!5190 = !DILexicalBlockFile(scope: !5176, file: !175, discriminator: 6)
!5191 = !DILocation(line: 4565, column: 125, scope: !5192)
!5192 = !DILexicalBlockFile(scope: !5176, file: !175, discriminator: 7)
!5193 = !DILocation(line: 4565, column: 215, scope: !5176)
!5194 = !DILocation(line: 4568, column: 10, scope: !5173)
!5195 = !DILocation(line: 4569, column: 7, scope: !5160)
!5196 = !DILocation(line: 4576, column: 7, scope: !5142)
!5197 = distinct !{!5197, !5196}
!5198 = !DILocation(line: 4576, column: 170, scope: !5199)
!5199 = !DILexicalBlockFile(scope: !5200, file: !175, discriminator: 1)
!5200 = distinct !DILexicalBlock(scope: !5142, file: !175, line: 4576, column: 10)
!5201 = !DILocation(line: 4577, column: 41, scope: !5142)
!5202 = !DILocation(line: 4577, column: 18, scope: !5142)
!5203 = !DILocation(line: 4577, column: 16, scope: !5142)
!5204 = !DILocation(line: 4578, column: 30, scope: !5142)
!5205 = !DILocation(line: 4578, column: 7, scope: !5142)
!5206 = !DILocation(line: 4580, column: 14, scope: !5142)
!5207 = !DILocation(line: 4580, column: 7, scope: !5142)
!5208 = !DILocation(line: 4582, column: 10, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5142, file: !175, line: 4580, column: 24)
!5210 = distinct !{!5210, !5208}
!5211 = !DILocation(line: 4582, column: 211, scope: !5212)
!5212 = !DILexicalBlockFile(scope: !5213, file: !175, discriminator: 1)
!5213 = distinct !DILexicalBlock(scope: !5209, file: !175, line: 4582, column: 13)
!5214 = !DILocation(line: 4584, column: 39, scope: !5209)
!5215 = !DILocation(line: 4584, column: 10, scope: !5209)
!5216 = !DILocation(line: 4585, column: 10, scope: !5209)
!5217 = !DILocation(line: 4588, column: 10, scope: !5209)
!5218 = distinct !{!5218, !5217}
!5219 = !DILocation(line: 4588, column: 213, scope: !5220)
!5220 = !DILexicalBlockFile(scope: !5221, file: !175, discriminator: 1)
!5221 = distinct !DILexicalBlock(scope: !5209, file: !175, line: 4588, column: 13)
!5222 = !DILocation(line: 4590, column: 61, scope: !5209)
!5223 = !DILocation(line: 4590, column: 20, scope: !5209)
!5224 = !DILocation(line: 4590, column: 18, scope: !5209)
!5225 = !DILocation(line: 4591, column: 15, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5209, file: !175, line: 4591, column: 14)
!5227 = !DILocation(line: 4591, column: 14, scope: !5209)
!5228 = !DILocation(line: 4592, column: 13, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5226, file: !175, line: 4591, column: 24)
!5230 = distinct !{!5230, !5228}
!5231 = !DILocation(line: 4592, column: 214, scope: !5232)
!5232 = !DILexicalBlockFile(scope: !5233, file: !175, discriminator: 1)
!5233 = distinct !DILexicalBlock(scope: !5229, file: !175, line: 4592, column: 16)
!5234 = !DILocation(line: 4594, column: 10, scope: !5229)
!5235 = !DILocation(line: 4595, column: 10, scope: !5209)
!5236 = !DILocation(line: 4598, column: 10, scope: !5209)
!5237 = distinct !{!5237, !5236}
!5238 = !DILocation(line: 4598, column: 182, scope: !5239)
!5239 = !DILexicalBlockFile(scope: !5240, file: !175, discriminator: 1)
!5240 = distinct !DILexicalBlock(scope: !5209, file: !175, line: 4598, column: 13)
!5241 = !DILocation(line: 4599, column: 52, scope: !5209)
!5242 = !DILocation(line: 4599, column: 41, scope: !5209)
!5243 = !DILocation(line: 4599, column: 10, scope: !5244)
!5244 = !DILexicalBlockFile(scope: !5209, file: !175, discriminator: 1)
!5245 = !DILocation(line: 4600, column: 10, scope: !5209)
!5246 = !DILocation(line: 4603, column: 10, scope: !5209)
!5247 = distinct !{!5247, !5246}
!5248 = !DILocation(line: 4603, column: 185, scope: !5249)
!5249 = !DILexicalBlockFile(scope: !5250, file: !175, discriminator: 1)
!5250 = distinct !DILexicalBlock(scope: !5209, file: !175, line: 4603, column: 13)
!5251 = !DILocation(line: 4604, column: 10, scope: !5209)
!5252 = !DILocation(line: 4607, column: 10, scope: !5209)
!5253 = !DILocation(line: 4610, column: 11, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5142, file: !175, line: 4610, column: 11)
!5255 = !DILocation(line: 4610, column: 18, scope: !5254)
!5256 = !DILocation(line: 4610, column: 11, scope: !5142)
!5257 = !DILocation(line: 4611, column: 45, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5254, file: !175, line: 4610, column: 37)
!5259 = !DILocation(line: 4611, column: 20, scope: !5258)
!5260 = !DILocation(line: 4611, column: 18, scope: !5258)
!5261 = !DILocation(line: 4614, column: 10, scope: !5258)
!5262 = !DILocation(line: 4614, column: 17, scope: !5258)
!5263 = !DILocation(line: 4614, column: 35, scope: !5258)
!5264 = !DILocation(line: 4615, column: 7, scope: !5258)
!5265 = !DILocation(line: 4617, column: 11, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5142, file: !175, line: 4617, column: 11)
!5267 = !DILocation(line: 4617, column: 18, scope: !5266)
!5268 = !DILocation(line: 4617, column: 31, scope: !5266)
!5269 = !DILocation(line: 4617, column: 34, scope: !5270)
!5270 = !DILexicalBlockFile(scope: !5266, file: !175, discriminator: 1)
!5271 = !DILocation(line: 4617, column: 41, scope: !5270)
!5272 = !DILocation(line: 4617, column: 54, scope: !5270)
!5273 = !DILocation(line: 4617, column: 11, scope: !5270)
!5274 = !DILocation(line: 4618, column: 45, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5266, file: !175, line: 4617, column: 59)
!5276 = !DILocation(line: 4618, column: 55, scope: !5275)
!5277 = !DILocation(line: 4618, column: 62, scope: !5275)
!5278 = !DILocation(line: 4618, column: 20, scope: !5275)
!5279 = !DILocation(line: 4618, column: 18, scope: !5275)
!5280 = !DILocation(line: 4621, column: 7, scope: !5275)
!5281 = !DILocation(line: 4623, column: 11, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5142, file: !175, line: 4623, column: 11)
!5283 = !DILocation(line: 4623, column: 18, scope: !5282)
!5284 = !DILocation(line: 4623, column: 30, scope: !5282)
!5285 = !DILocation(line: 4623, column: 33, scope: !5286)
!5286 = !DILexicalBlockFile(scope: !5282, file: !175, discriminator: 1)
!5287 = !DILocation(line: 4623, column: 40, scope: !5286)
!5288 = !DILocation(line: 4623, column: 53, scope: !5286)
!5289 = !DILocation(line: 4623, column: 11, scope: !5286)
!5290 = !DILocation(line: 4624, column: 45, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5282, file: !175, line: 4623, column: 58)
!5292 = !DILocation(line: 4624, column: 55, scope: !5291)
!5293 = !DILocation(line: 4624, column: 62, scope: !5291)
!5294 = !DILocation(line: 4624, column: 20, scope: !5291)
!5295 = !DILocation(line: 4624, column: 18, scope: !5291)
!5296 = !DILocation(line: 4627, column: 7, scope: !5291)
!5297 = !DILocation(line: 4628, column: 7, scope: !5142)
!5298 = !DILocation(line: 4628, column: 14, scope: !5142)
!5299 = !DILocation(line: 4628, column: 27, scope: !5142)
!5300 = !DILocation(line: 4633, column: 20, scope: !5142)
!5301 = !DILocation(line: 4633, column: 27, scope: !5142)
!5302 = !DILocation(line: 4633, column: 7, scope: !5142)
!5303 = !DILocation(line: 4635, column: 11, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5142, file: !175, line: 4635, column: 11)
!5305 = !DILocation(line: 4635, column: 18, scope: !5304)
!5306 = !DILocation(line: 4635, column: 25, scope: !5304)
!5307 = !DILocation(line: 4635, column: 28, scope: !5304)
!5308 = !DILocation(line: 4635, column: 11, scope: !5142)
!5309 = !DILocation(line: 4636, column: 16, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5304, file: !175, line: 4635, column: 35)
!5311 = !DILocation(line: 4636, column: 23, scope: !5310)
!5312 = !DILocation(line: 4636, column: 30, scope: !5310)
!5313 = !DILocation(line: 4636, column: 10, scope: !5310)
!5314 = !DILocation(line: 4637, column: 7, scope: !5310)
!5315 = !DILocation(line: 4640, column: 30, scope: !5094)
!5316 = !DILocation(line: 4640, column: 4, scope: !5094)
!5317 = !DILocation(line: 4641, column: 4, scope: !5094)
!5318 = !DILocation(line: 4642, column: 1, scope: !5094)
!5319 = distinct !DISubprogram(name: "AsyncTCPSocketCancelRecv", scope: !175, file: !175, line: 5313, type: !340, isLocal: true, isDefinition: true, scopeLine: 5318, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5320 = !DILocalVariable(name: "base", arg: 1, scope: !5319, file: !175, line: 5313, type: !213)
!5321 = !DILocation(line: 5313, column: 39, scope: !5319)
!5322 = !DILocalVariable(name: "partialRecvd", arg: 2, scope: !5319, file: !175, line: 5314, type: !342)
!5323 = !DILocation(line: 5314, column: 31, scope: !5319)
!5324 = !DILocalVariable(name: "recvBuf", arg: 3, scope: !5319, file: !175, line: 5315, type: !343)
!5325 = !DILocation(line: 5315, column: 33, scope: !5319)
!5326 = !DILocalVariable(name: "recvFn", arg: 4, scope: !5319, file: !175, line: 5316, type: !343)
!5327 = !DILocation(line: 5316, column: 33, scope: !5319)
!5328 = !DILocalVariable(name: "cancelOnSend", arg: 5, scope: !5319, file: !175, line: 5317, type: !168)
!5329 = !DILocation(line: 5317, column: 31, scope: !5319)
!5330 = !DILocalVariable(name: "asock", scope: !5319, file: !175, line: 5319, type: !173)
!5331 = !DILocation(line: 5319, column: 20, scope: !5319)
!5332 = !DILocation(line: 5319, column: 38, scope: !5319)
!5333 = !DILocation(line: 5319, column: 28, scope: !5319)
!5334 = !DILocation(line: 5323, column: 31, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5319, file: !175, line: 5323, column: 8)
!5336 = !DILocation(line: 5323, column: 8, scope: !5335)
!5337 = !DILocation(line: 5323, column: 38, scope: !5335)
!5338 = !DILocation(line: 5323, column: 8, scope: !5319)
!5339 = !DILocation(line: 5324, column: 7, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5335, file: !175, line: 5323, column: 63)
!5341 = !DILocation(line: 5325, column: 7, scope: !5340)
!5342 = !DILocation(line: 5328, column: 8, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5319, file: !175, line: 5328, column: 8)
!5344 = !DILocation(line: 5328, column: 15, scope: !5343)
!5345 = !DILocation(line: 5328, column: 30, scope: !5343)
!5346 = !DILocation(line: 5328, column: 34, scope: !5347)
!5347 = !DILexicalBlockFile(scope: !5343, file: !175, discriminator: 1)
!5348 = !DILocation(line: 5328, column: 41, scope: !5347)
!5349 = !DILocation(line: 5328, column: 8, scope: !5347)
!5350 = !DILocation(line: 5329, column: 7, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5343, file: !175, line: 5328, column: 53)
!5352 = !DILocation(line: 5331, column: 7, scope: !5351)
!5353 = !DILocation(line: 5334, column: 9, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5319, file: !175, line: 5334, column: 8)
!5355 = !DILocation(line: 5334, column: 22, scope: !5354)
!5356 = !DILocation(line: 5334, column: 26, scope: !5357)
!5357 = !DILexicalBlockFile(scope: !5354, file: !175, discriminator: 1)
!5358 = !DILocation(line: 5334, column: 33, scope: !5357)
!5359 = !DILocation(line: 5334, column: 45, scope: !5357)
!5360 = !DILocation(line: 5334, column: 48, scope: !5361)
!5361 = !DILexicalBlockFile(scope: !5354, file: !175, discriminator: 2)
!5362 = !DILocation(line: 5334, column: 55, scope: !5361)
!5363 = !DILocation(line: 5334, column: 8, scope: !5361)
!5364 = !DILocation(line: 5335, column: 7, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5354, file: !175, line: 5334, column: 64)
!5366 = !DILocation(line: 5337, column: 7, scope: !5365)
!5367 = !DILocation(line: 5340, column: 31, scope: !5319)
!5368 = !DILocation(line: 5340, column: 4, scope: !5319)
!5369 = !DILocation(line: 5341, column: 37, scope: !5319)
!5370 = !DILocation(line: 5341, column: 26, scope: !5319)
!5371 = !DILocation(line: 5341, column: 45, scope: !5319)
!5372 = !DILocation(line: 5341, column: 59, scope: !5319)
!5373 = !DILocation(line: 5341, column: 68, scope: !5319)
!5374 = !DILocation(line: 5341, column: 4, scope: !5375)
!5375 = !DILexicalBlockFile(scope: !5319, file: !175, discriminator: 1)
!5376 = !DILocation(line: 5343, column: 8, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5319, file: !175, line: 5343, column: 8)
!5378 = !DILocation(line: 5343, column: 15, scope: !5377)
!5379 = !DILocation(line: 5343, column: 22, scope: !5377)
!5380 = !DILocation(line: 5343, column: 25, scope: !5377)
!5381 = !DILocation(line: 5343, column: 8, scope: !5319)
!5382 = !DILocation(line: 5344, column: 13, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5377, file: !175, line: 5343, column: 32)
!5384 = !DILocation(line: 5344, column: 20, scope: !5383)
!5385 = !DILocation(line: 5344, column: 27, scope: !5383)
!5386 = !DILocation(line: 5344, column: 7, scope: !5383)
!5387 = !DILocation(line: 5345, column: 7, scope: !5383)
!5388 = !DILocation(line: 5345, column: 14, scope: !5383)
!5389 = !DILocation(line: 5345, column: 21, scope: !5383)
!5390 = !DILocation(line: 5345, column: 24, scope: !5383)
!5391 = !DILocation(line: 5346, column: 4, scope: !5383)
!5392 = !DILocation(line: 5347, column: 4, scope: !5319)
!5393 = !DILocation(line: 5347, column: 11, scope: !5319)
!5394 = !DILocation(line: 5347, column: 18, scope: !5319)
!5395 = !DILocation(line: 5347, column: 27, scope: !5319)
!5396 = !DILocation(line: 5349, column: 4, scope: !5319)
!5397 = !DILocation(line: 5350, column: 1, scope: !5319)
!5398 = distinct !DISubprogram(name: "AsyncTCPSocketCancelCbForClose", scope: !175, file: !175, line: 4348, type: !252, isLocal: true, isDefinition: true, scopeLine: 4349, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5399 = !DILocalVariable(name: "base", arg: 1, scope: !5398, file: !175, line: 4348, type: !213)
!5400 = !DILocation(line: 4348, column: 45, scope: !5398)
!5401 = !DILocalVariable(name: "asock", scope: !5398, file: !175, line: 4350, type: !173)
!5402 = !DILocation(line: 4350, column: 20, scope: !5398)
!5403 = !DILocation(line: 4350, column: 38, scope: !5398)
!5404 = !DILocation(line: 4350, column: 28, scope: !5398)
!5405 = !DILocalVariable(name: "removed", scope: !5398, file: !175, line: 4351, type: !168)
!5406 = !DILocation(line: 4351, column: 9, scope: !5398)
!5407 = !DILocation(line: 4355, column: 31, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5398, file: !175, line: 4355, column: 8)
!5409 = !DILocation(line: 4355, column: 8, scope: !5408)
!5410 = !DILocation(line: 4355, column: 38, scope: !5408)
!5411 = !DILocation(line: 4355, column: 8, scope: !5398)
!5412 = !DILocation(line: 4356, column: 30, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5408, file: !175, line: 4355, column: 63)
!5414 = !DILocation(line: 4356, column: 7, scope: !5413)
!5415 = !DILocation(line: 4357, column: 4, scope: !5413)
!5416 = !DILocation(line: 4383, column: 8, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5398, file: !175, line: 4383, column: 8)
!5418 = !DILocation(line: 4383, column: 15, scope: !5417)
!5419 = !DILocation(line: 4383, column: 8, scope: !5398)
!5420 = !DILocation(line: 4384, column: 32, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5417, file: !175, line: 4383, column: 28)
!5422 = !DILocation(line: 4384, column: 45, scope: !5421)
!5423 = !DILocation(line: 4384, column: 52, scope: !5421)
!5424 = !DILocation(line: 4384, column: 7, scope: !5421)
!5425 = !DILocation(line: 4385, column: 7, scope: !5421)
!5426 = !DILocation(line: 4385, column: 14, scope: !5421)
!5427 = !DILocation(line: 4385, column: 26, scope: !5421)
!5428 = !DILocation(line: 4386, column: 4, scope: !5421)
!5429 = !DILocation(line: 4387, column: 8, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5398, file: !175, line: 4387, column: 8)
!5431 = !DILocation(line: 4387, column: 15, scope: !5430)
!5432 = !DILocation(line: 4387, column: 8, scope: !5398)
!5433 = !DILocation(line: 4388, column: 7, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5430, file: !175, line: 4387, column: 23)
!5435 = distinct !{!5435, !5433}
!5436 = !DILocation(line: 4388, column: 198, scope: !5437)
!5437 = !DILexicalBlockFile(scope: !5438, file: !175, discriminator: 1)
!5438 = distinct !DILexicalBlock(scope: !5434, file: !175, line: 4388, column: 10)
!5439 = !DILocation(line: 4389, column: 42, scope: !5434)
!5440 = !DILocation(line: 4391, column: 42, scope: !5434)
!5441 = !DILocation(line: 4391, column: 49, scope: !5434)
!5442 = !DILocation(line: 4389, column: 17, scope: !5434)
!5443 = !DILocation(line: 4389, column: 15, scope: !5434)
!5444 = !DILocation(line: 4397, column: 7, scope: !5434)
!5445 = !DILocation(line: 4397, column: 14, scope: !5434)
!5446 = !DILocation(line: 4397, column: 21, scope: !5434)
!5447 = !DILocation(line: 4398, column: 7, scope: !5434)
!5448 = !DILocation(line: 4398, column: 14, scope: !5434)
!5449 = !DILocation(line: 4398, column: 19, scope: !5434)
!5450 = !DILocation(line: 4398, column: 27, scope: !5434)
!5451 = !DILocation(line: 4399, column: 4, scope: !5434)
!5452 = !DILocation(line: 4401, column: 8, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5398, file: !175, line: 4401, column: 8)
!5454 = !DILocation(line: 4401, column: 15, scope: !5453)
!5455 = !DILocation(line: 4401, column: 8, scope: !5398)
!5456 = !DILocation(line: 4402, column: 7, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5453, file: !175, line: 4401, column: 23)
!5458 = distinct !{!5458, !5456}
!5459 = !DILocation(line: 4402, column: 203, scope: !5460)
!5460 = !DILexicalBlockFile(scope: !5461, file: !175, discriminator: 1)
!5461 = distinct !DILexicalBlock(scope: !5457, file: !175, line: 4402, column: 10)
!5462 = !DILocation(line: 4410, column: 11, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5457, file: !175, line: 4410, column: 11)
!5464 = !DILocation(line: 4410, column: 18, scope: !5463)
!5465 = !DILocation(line: 4410, column: 11, scope: !5457)
!5466 = !DILocation(line: 4411, column: 45, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5463, file: !175, line: 4410, column: 31)
!5468 = !DILocation(line: 4412, column: 42, scope: !5467)
!5469 = !DILocation(line: 4412, column: 49, scope: !5467)
!5470 = !DILocation(line: 4411, column: 20, scope: !5467)
!5471 = !DILocation(line: 4411, column: 18, scope: !5467)
!5472 = !DILocation(line: 4413, column: 7, scope: !5467)
!5473 = !DILocation(line: 4414, column: 45, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5463, file: !175, line: 4413, column: 14)
!5475 = !DILocation(line: 4415, column: 42, scope: !5474)
!5476 = !DILocation(line: 4415, column: 49, scope: !5474)
!5477 = !DILocation(line: 4414, column: 20, scope: !5474)
!5478 = !DILocation(line: 4414, column: 18, scope: !5474)
!5479 = !DILocation(line: 4418, column: 7, scope: !5457)
!5480 = !DILocation(line: 4418, column: 14, scope: !5457)
!5481 = !DILocation(line: 4418, column: 21, scope: !5457)
!5482 = !DILocation(line: 4419, column: 7, scope: !5457)
!5483 = !DILocation(line: 4419, column: 14, scope: !5457)
!5484 = !DILocation(line: 4419, column: 26, scope: !5457)
!5485 = !DILocation(line: 4420, column: 4, scope: !5457)
!5486 = !DILocation(line: 4428, column: 25, scope: !5398)
!5487 = !DILocation(line: 4428, column: 4, scope: !5398)
!5488 = !DILocation(line: 4429, column: 4, scope: !5398)
!5489 = !DILocation(line: 4429, column: 11, scope: !5490)
!5490 = !DILexicalBlockFile(scope: !5398, file: !175, discriminator: 1)
!5491 = !DILocation(line: 4429, column: 18, scope: !5490)
!5492 = !DILocation(line: 4429, column: 4, scope: !5490)
!5493 = !DILocalVariable(name: "cur", scope: !5494, file: !175, line: 4434, type: !419)
!5494 = distinct !DILexicalBlock(scope: !5398, file: !175, line: 4429, column: 31)
!5495 = !DILocation(line: 4434, column: 20, scope: !5494)
!5496 = !DILocation(line: 4434, column: 26, scope: !5494)
!5497 = !DILocation(line: 4434, column: 33, scope: !5494)
!5498 = !DILocalVariable(name: "pos", scope: !5494, file: !175, line: 4435, type: !165)
!5499 = !DILocation(line: 4435, column: 11, scope: !5494)
!5500 = !DILocation(line: 4435, column: 17, scope: !5494)
!5501 = !DILocation(line: 4435, column: 24, scope: !5494)
!5502 = !DILocation(line: 4437, column: 28, scope: !5494)
!5503 = !DILocation(line: 4437, column: 35, scope: !5494)
!5504 = !DILocation(line: 4437, column: 48, scope: !5494)
!5505 = !DILocation(line: 4437, column: 7, scope: !5494)
!5506 = !DILocation(line: 4437, column: 14, scope: !5494)
!5507 = !DILocation(line: 4437, column: 26, scope: !5494)
!5508 = !DILocation(line: 4438, column: 7, scope: !5494)
!5509 = !DILocation(line: 4438, column: 14, scope: !5494)
!5510 = !DILocation(line: 4438, column: 22, scope: !5494)
!5511 = !DILocation(line: 4440, column: 11, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5494, file: !175, line: 4440, column: 11)
!5513 = !DILocation(line: 4440, column: 16, scope: !5512)
!5514 = !DILocation(line: 4440, column: 11, scope: !5494)
!5515 = !DILocation(line: 4441, column: 10, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5512, file: !175, line: 4440, column: 24)
!5517 = !DILocation(line: 4441, column: 15, scope: !5516)
!5518 = !DILocation(line: 4441, column: 22, scope: !5516)
!5519 = !DILocation(line: 4441, column: 27, scope: !5516)
!5520 = !DILocation(line: 4441, column: 32, scope: !5516)
!5521 = !DILocation(line: 4441, column: 48, scope: !5516)
!5522 = !DILocation(line: 4441, column: 37, scope: !5516)
!5523 = !DILocation(line: 4441, column: 56, scope: !5516)
!5524 = !DILocation(line: 4441, column: 61, scope: !5516)
!5525 = !DILocation(line: 4441, column: 10, scope: !5526)
!5526 = !DILexicalBlockFile(scope: !5516, file: !175, discriminator: 1)
!5527 = !DILocation(line: 4442, column: 7, scope: !5516)
!5528 = !DILocation(line: 4443, column: 12, scope: !5494)
!5529 = !DILocation(line: 4443, column: 7, scope: !5494)
!5530 = !DILocation(line: 4429, column: 4, scope: !5531)
!5531 = !DILexicalBlockFile(scope: !5398, file: !175, discriminator: 2)
!5532 = distinct !{!5532, !5488}
!5533 = !DILocation(line: 4445, column: 26, scope: !5398)
!5534 = !DILocation(line: 4445, column: 4, scope: !5398)
!5535 = !DILocation(line: 4446, column: 4, scope: !5398)
!5536 = distinct !DISubprogram(name: "AsyncTCPSocketGetLocalVMCIAddress", scope: !175, file: !175, line: 803, type: !347, isLocal: true, isDefinition: true, scopeLine: 806, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5537 = !DILocalVariable(name: "base", arg: 1, scope: !5536, file: !175, line: 803, type: !213)
!5538 = !DILocation(line: 803, column: 48, scope: !5536)
!5539 = !DILocalVariable(name: "cid", arg: 2, scope: !5536, file: !175, line: 804, type: !349)
!5540 = !DILocation(line: 804, column: 43, scope: !5536)
!5541 = !DILocalVariable(name: "port", arg: 3, scope: !5536, file: !175, line: 805, type: !349)
!5542 = !DILocation(line: 805, column: 43, scope: !5536)
!5543 = !DILocalVariable(name: "asock", scope: !5536, file: !175, line: 807, type: !173)
!5544 = !DILocation(line: 807, column: 20, scope: !5536)
!5545 = !DILocation(line: 807, column: 38, scope: !5536)
!5546 = !DILocation(line: 807, column: 28, scope: !5536)
!5547 = !DILocation(line: 810, column: 8, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5536, file: !175, line: 810, column: 8)
!5549 = !DILocation(line: 810, column: 15, scope: !5548)
!5550 = !DILocation(line: 810, column: 28, scope: !5548)
!5551 = !DILocation(line: 810, column: 8, scope: !5536)
!5552 = !DILocation(line: 811, column: 7, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5548, file: !175, line: 810, column: 59)
!5554 = !DILocation(line: 814, column: 8, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5536, file: !175, line: 814, column: 8)
!5556 = !DILocation(line: 814, column: 12, scope: !5555)
!5557 = !DILocation(line: 814, column: 8, scope: !5536)
!5558 = !DILocation(line: 815, column: 38, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5555, file: !175, line: 814, column: 20)
!5560 = !DILocation(line: 815, column: 45, scope: !5559)
!5561 = !DILocation(line: 815, column: 57, scope: !5559)
!5562 = !DILocation(line: 815, column: 8, scope: !5559)
!5563 = !DILocation(line: 815, column: 12, scope: !5559)
!5564 = !DILocation(line: 816, column: 4, scope: !5559)
!5565 = !DILocation(line: 818, column: 8, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5536, file: !175, line: 818, column: 8)
!5567 = !DILocation(line: 818, column: 13, scope: !5566)
!5568 = !DILocation(line: 818, column: 8, scope: !5536)
!5569 = !DILocation(line: 819, column: 39, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5566, file: !175, line: 818, column: 21)
!5571 = !DILocation(line: 819, column: 46, scope: !5570)
!5572 = !DILocation(line: 819, column: 58, scope: !5570)
!5573 = !DILocation(line: 819, column: 8, scope: !5570)
!5574 = !DILocation(line: 819, column: 13, scope: !5570)
!5575 = !DILocation(line: 820, column: 4, scope: !5570)
!5576 = !DILocation(line: 822, column: 4, scope: !5536)
!5577 = !DILocation(line: 823, column: 1, scope: !5536)
!5578 = distinct !DISubprogram(name: "AsyncTCPSocketGetRemoteVMCIAddress", scope: !175, file: !175, line: 845, type: !347, isLocal: true, isDefinition: true, scopeLine: 848, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5579 = !DILocalVariable(name: "base", arg: 1, scope: !5578, file: !175, line: 845, type: !213)
!5580 = !DILocation(line: 845, column: 49, scope: !5578)
!5581 = !DILocalVariable(name: "cid", arg: 2, scope: !5578, file: !175, line: 846, type: !349)
!5582 = !DILocation(line: 846, column: 44, scope: !5578)
!5583 = !DILocalVariable(name: "port", arg: 3, scope: !5578, file: !175, line: 847, type: !349)
!5584 = !DILocation(line: 847, column: 44, scope: !5578)
!5585 = !DILocalVariable(name: "asock", scope: !5578, file: !175, line: 849, type: !173)
!5586 = !DILocation(line: 849, column: 20, scope: !5578)
!5587 = !DILocation(line: 849, column: 38, scope: !5578)
!5588 = !DILocation(line: 849, column: 28, scope: !5578)
!5589 = !DILocation(line: 852, column: 8, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5578, file: !175, line: 852, column: 8)
!5591 = !DILocation(line: 852, column: 15, scope: !5590)
!5592 = !DILocation(line: 852, column: 29, scope: !5590)
!5593 = !DILocation(line: 852, column: 8, scope: !5578)
!5594 = !DILocation(line: 853, column: 7, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5590, file: !175, line: 852, column: 60)
!5596 = !DILocation(line: 856, column: 8, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5578, file: !175, line: 856, column: 8)
!5598 = !DILocation(line: 856, column: 12, scope: !5597)
!5599 = !DILocation(line: 856, column: 8, scope: !5578)
!5600 = !DILocation(line: 857, column: 38, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5597, file: !175, line: 856, column: 20)
!5602 = !DILocation(line: 857, column: 45, scope: !5601)
!5603 = !DILocation(line: 857, column: 58, scope: !5601)
!5604 = !DILocation(line: 857, column: 8, scope: !5601)
!5605 = !DILocation(line: 857, column: 12, scope: !5601)
!5606 = !DILocation(line: 858, column: 4, scope: !5601)
!5607 = !DILocation(line: 860, column: 8, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5578, file: !175, line: 860, column: 8)
!5609 = !DILocation(line: 860, column: 13, scope: !5608)
!5610 = !DILocation(line: 860, column: 8, scope: !5578)
!5611 = !DILocation(line: 861, column: 39, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5608, file: !175, line: 860, column: 21)
!5613 = !DILocation(line: 861, column: 46, scope: !5612)
!5614 = !DILocation(line: 861, column: 59, scope: !5612)
!5615 = !DILocation(line: 861, column: 8, scope: !5612)
!5616 = !DILocation(line: 861, column: 13, scope: !5612)
!5617 = !DILocation(line: 862, column: 4, scope: !5612)
!5618 = !DILocation(line: 864, column: 4, scope: !5578)
!5619 = !DILocation(line: 865, column: 1, scope: !5578)
!5620 = distinct !DISubprogram(name: "AsyncTCPSocketRecvBlocking", scope: !175, file: !175, line: 2832, type: !371, isLocal: true, isDefinition: true, scopeLine: 2837, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5621 = !DILocalVariable(name: "base", arg: 1, scope: !5620, file: !175, line: 2832, type: !213)
!5622 = !DILocation(line: 2832, column: 41, scope: !5620)
!5623 = !DILocalVariable(name: "buf", arg: 2, scope: !5620, file: !175, line: 2833, type: !80)
!5624 = !DILocation(line: 2833, column: 34, scope: !5620)
!5625 = !DILocalVariable(name: "len", arg: 3, scope: !5620, file: !175, line: 2834, type: !165)
!5626 = !DILocation(line: 2834, column: 32, scope: !5620)
!5627 = !DILocalVariable(name: "received", arg: 4, scope: !5620, file: !175, line: 2835, type: !342)
!5628 = !DILocation(line: 2835, column: 33, scope: !5620)
!5629 = !DILocalVariable(name: "timeoutMS", arg: 5, scope: !5620, file: !175, line: 2836, type: !165)
!5630 = !DILocation(line: 2836, column: 32, scope: !5620)
!5631 = !DILocalVariable(name: "s", scope: !5620, file: !175, line: 2838, type: !173)
!5632 = !DILocation(line: 2838, column: 20, scope: !5620)
!5633 = !DILocation(line: 2838, column: 34, scope: !5620)
!5634 = !DILocation(line: 2838, column: 24, scope: !5620)
!5635 = !DILocation(line: 2839, column: 38, scope: !5620)
!5636 = !DILocation(line: 2839, column: 44, scope: !5620)
!5637 = !DILocation(line: 2839, column: 49, scope: !5620)
!5638 = !DILocation(line: 2839, column: 54, scope: !5620)
!5639 = !DILocation(line: 2839, column: 64, scope: !5620)
!5640 = !DILocation(line: 2839, column: 11, scope: !5620)
!5641 = !DILocation(line: 2839, column: 4, scope: !5620)
!5642 = distinct !DISubprogram(name: "AsyncTCPSocketRecvPartialBlocking", scope: !175, file: !175, line: 2844, type: !371, isLocal: true, isDefinition: true, scopeLine: 2849, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5643 = !DILocalVariable(name: "base", arg: 1, scope: !5642, file: !175, line: 2844, type: !213)
!5644 = !DILocation(line: 2844, column: 48, scope: !5642)
!5645 = !DILocalVariable(name: "buf", arg: 2, scope: !5642, file: !175, line: 2845, type: !80)
!5646 = !DILocation(line: 2845, column: 41, scope: !5642)
!5647 = !DILocalVariable(name: "len", arg: 3, scope: !5642, file: !175, line: 2846, type: !165)
!5648 = !DILocation(line: 2846, column: 39, scope: !5642)
!5649 = !DILocalVariable(name: "received", arg: 4, scope: !5642, file: !175, line: 2847, type: !342)
!5650 = !DILocation(line: 2847, column: 40, scope: !5642)
!5651 = !DILocalVariable(name: "timeoutMS", arg: 5, scope: !5642, file: !175, line: 2848, type: !165)
!5652 = !DILocation(line: 2848, column: 39, scope: !5642)
!5653 = !DILocalVariable(name: "s", scope: !5642, file: !175, line: 2850, type: !173)
!5654 = !DILocation(line: 2850, column: 20, scope: !5642)
!5655 = !DILocation(line: 2850, column: 34, scope: !5642)
!5656 = !DILocation(line: 2850, column: 24, scope: !5642)
!5657 = !DILocation(line: 2851, column: 38, scope: !5642)
!5658 = !DILocation(line: 2851, column: 44, scope: !5642)
!5659 = !DILocation(line: 2851, column: 49, scope: !5642)
!5660 = !DILocation(line: 2851, column: 54, scope: !5642)
!5661 = !DILocation(line: 2851, column: 64, scope: !5642)
!5662 = !DILocation(line: 2851, column: 11, scope: !5642)
!5663 = !DILocation(line: 2851, column: 4, scope: !5642)
!5664 = distinct !DISubprogram(name: "AsyncTCPSocketSendBlocking", scope: !175, file: !175, line: 2856, type: !371, isLocal: true, isDefinition: true, scopeLine: 2861, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5665 = !DILocalVariable(name: "base", arg: 1, scope: !5664, file: !175, line: 2856, type: !213)
!5666 = !DILocation(line: 2856, column: 41, scope: !5664)
!5667 = !DILocalVariable(name: "buf", arg: 2, scope: !5664, file: !175, line: 2857, type: !80)
!5668 = !DILocation(line: 2857, column: 34, scope: !5664)
!5669 = !DILocalVariable(name: "len", arg: 3, scope: !5664, file: !175, line: 2858, type: !165)
!5670 = !DILocation(line: 2858, column: 32, scope: !5664)
!5671 = !DILocalVariable(name: "sent", arg: 4, scope: !5664, file: !175, line: 2859, type: !342)
!5672 = !DILocation(line: 2859, column: 33, scope: !5664)
!5673 = !DILocalVariable(name: "timeoutMS", arg: 5, scope: !5664, file: !175, line: 2860, type: !165)
!5674 = !DILocation(line: 2860, column: 32, scope: !5664)
!5675 = !DILocalVariable(name: "s", scope: !5664, file: !175, line: 2862, type: !173)
!5676 = !DILocation(line: 2862, column: 20, scope: !5664)
!5677 = !DILocation(line: 2862, column: 34, scope: !5664)
!5678 = !DILocation(line: 2862, column: 24, scope: !5664)
!5679 = !DILocation(line: 2863, column: 38, scope: !5664)
!5680 = !DILocation(line: 2863, column: 44, scope: !5664)
!5681 = !DILocation(line: 2863, column: 49, scope: !5664)
!5682 = !DILocation(line: 2863, column: 54, scope: !5664)
!5683 = !DILocation(line: 2863, column: 60, scope: !5664)
!5684 = !DILocation(line: 2863, column: 11, scope: !5664)
!5685 = !DILocation(line: 2863, column: 4, scope: !5664)
!5686 = distinct !DISubprogram(name: "AsyncTCPSocketDoOneMsg", scope: !175, file: !175, line: 3908, type: !377, isLocal: true, isDefinition: true, scopeLine: 3911, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5687 = !DILocalVariable(name: "base", arg: 1, scope: !5686, file: !175, line: 3908, type: !213)
!5688 = !DILocation(line: 3908, column: 37, scope: !5686)
!5689 = !DILocalVariable(name: "read", arg: 2, scope: !5686, file: !175, line: 3909, type: !168)
!5690 = !DILocation(line: 3909, column: 29, scope: !5686)
!5691 = !DILocalVariable(name: "timeoutMS", arg: 3, scope: !5686, file: !175, line: 3910, type: !165)
!5692 = !DILocation(line: 3910, column: 28, scope: !5686)
!5693 = !DILocalVariable(name: "s", scope: !5686, file: !175, line: 3912, type: !173)
!5694 = !DILocation(line: 3912, column: 20, scope: !5686)
!5695 = !DILocation(line: 3912, column: 34, scope: !5686)
!5696 = !DILocation(line: 3912, column: 24, scope: !5686)
!5697 = !DILocalVariable(name: "asock", scope: !5686, file: !175, line: 3913, type: !173)
!5698 = !DILocation(line: 3913, column: 20, scope: !5686)
!5699 = !DILocalVariable(name: "retVal", scope: !5686, file: !175, line: 3914, type: !165)
!5700 = !DILocation(line: 3914, column: 8, scope: !5686)
!5701 = !DILocation(line: 3919, column: 8, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5686, file: !175, line: 3919, column: 8)
!5703 = !DILocation(line: 3919, column: 8, scope: !5686)
!5704 = !DILocation(line: 3920, column: 11, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !175, line: 3920, column: 11)
!5706 = distinct !DILexicalBlock(scope: !5702, file: !175, line: 3919, column: 14)
!5707 = !DILocation(line: 3920, column: 14, scope: !5705)
!5708 = !DILocation(line: 3920, column: 11, scope: !5706)
!5709 = !DILocation(line: 3925, column: 10, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5705, file: !175, line: 3920, column: 26)
!5711 = distinct !{!5711, !5709}
!5712 = !DILocation(line: 3925, column: 70, scope: !5713)
!5713 = !DILexicalBlockFile(scope: !5714, file: !175, discriminator: 1)
!5714 = distinct !DILexicalBlock(scope: !5710, file: !175, line: 3925, column: 13)
!5715 = !DILocation(line: 3925, column: 59, scope: !5713)
!5716 = !DILocation(line: 3925, column: 41, scope: !5717)
!5717 = !DILexicalBlockFile(scope: !5713, file: !175, discriminator: 2)
!5718 = !DILocation(line: 3925, column: 104, scope: !5713)
!5719 = !DILocation(line: 3925, column: 93, scope: !5720)
!5720 = !DILexicalBlockFile(scope: !5713, file: !175, discriminator: 3)
!5721 = !DILocation(line: 3925, column: 75, scope: !5722)
!5722 = !DILexicalBlockFile(scope: !5713, file: !175, discriminator: 4)
!5723 = !DILocation(line: 3925, column: 15, scope: !5724)
!5724 = !DILexicalBlockFile(scope: !5713, file: !175, discriminator: 5)
!5725 = !DILocation(line: 3925, column: 110, scope: !5726)
!5726 = !DILexicalBlockFile(scope: !5713, file: !175, discriminator: 6)
!5727 = !DILocation(line: 3925, column: 155, scope: !5713)
!5728 = !DILocation(line: 3926, column: 10, scope: !5710)
!5729 = !DILocation(line: 3939, column: 28, scope: !5706)
!5730 = !DILocation(line: 3939, column: 7, scope: !5706)
!5731 = !DILocation(line: 3940, column: 34, scope: !5706)
!5732 = !DILocation(line: 3940, column: 7, scope: !5706)
!5733 = !DILocation(line: 3941, column: 7, scope: !5706)
!5734 = !DILocation(line: 3941, column: 10, scope: !5706)
!5735 = !DILocation(line: 3941, column: 17, scope: !5706)
!5736 = !DILocation(line: 3943, column: 7, scope: !5706)
!5737 = !DILocation(line: 3943, column: 10, scope: !5706)
!5738 = !DILocation(line: 3943, column: 24, scope: !5706)
!5739 = !DILocation(line: 3944, column: 35, scope: !5706)
!5740 = !DILocation(line: 3944, column: 38, scope: !5706)
!5741 = !DILocation(line: 3944, column: 44, scope: !5706)
!5742 = !DILocation(line: 3944, column: 16, scope: !5706)
!5743 = !DILocation(line: 3944, column: 14, scope: !5706)
!5744 = !DILocation(line: 3945, column: 11, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5706, file: !175, line: 3945, column: 11)
!5746 = !DILocation(line: 3945, column: 18, scope: !5745)
!5747 = !DILocation(line: 3945, column: 11, scope: !5706)
!5748 = !DILocation(line: 3946, column: 14, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5750, file: !175, line: 3946, column: 14)
!5750 = distinct !DILexicalBlock(scope: !5745, file: !175, line: 3945, column: 24)
!5751 = !DILocation(line: 3946, column: 21, scope: !5749)
!5752 = !DILocation(line: 3946, column: 14, scope: !5750)
!5753 = !DILocation(line: 3947, column: 13, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5749, file: !175, line: 3946, column: 27)
!5755 = distinct !{!5755, !5753}
!5756 = !DILocation(line: 3947, column: 77, scope: !5757)
!5757 = !DILexicalBlockFile(scope: !5758, file: !175, discriminator: 1)
!5758 = distinct !DILexicalBlock(scope: !5754, file: !175, line: 3947, column: 16)
!5759 = !DILocation(line: 3947, column: 66, scope: !5757)
!5760 = !DILocation(line: 3947, column: 48, scope: !5761)
!5761 = !DILexicalBlockFile(scope: !5757, file: !175, discriminator: 2)
!5762 = !DILocation(line: 3947, column: 111, scope: !5757)
!5763 = !DILocation(line: 3947, column: 100, scope: !5764)
!5764 = !DILexicalBlockFile(scope: !5757, file: !175, discriminator: 3)
!5765 = !DILocation(line: 3947, column: 82, scope: !5766)
!5766 = !DILexicalBlockFile(scope: !5757, file: !175, discriminator: 4)
!5767 = !DILocation(line: 3947, column: 18, scope: !5768)
!5768 = !DILexicalBlockFile(scope: !5757, file: !175, discriminator: 5)
!5769 = !DILocation(line: 3947, column: 117, scope: !5770)
!5770 = !DILexicalBlockFile(scope: !5757, file: !175, discriminator: 6)
!5771 = !DILocation(line: 3947, column: 192, scope: !5757)
!5772 = !DILocation(line: 3949, column: 10, scope: !5754)
!5773 = !DILocation(line: 3950, column: 7, scope: !5750)
!5774 = !DILocation(line: 3952, column: 48, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5745, file: !175, line: 3950, column: 14)
!5776 = !DILocation(line: 3952, column: 19, scope: !5775)
!5777 = !DILocation(line: 3952, column: 17, scope: !5775)
!5778 = !DILocation(line: 3954, column: 7, scope: !5706)
!5779 = !DILocation(line: 3954, column: 10, scope: !5706)
!5780 = !DILocation(line: 3954, column: 24, scope: !5706)
!5781 = !DILocation(line: 3962, column: 34, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5706, file: !175, line: 3962, column: 11)
!5783 = !DILocation(line: 3962, column: 11, scope: !5782)
!5784 = !DILocation(line: 3962, column: 37, scope: !5782)
!5785 = !DILocation(line: 3962, column: 58, scope: !5782)
!5786 = !DILocation(line: 3962, column: 61, scope: !5787)
!5787 = !DILexicalBlockFile(scope: !5782, file: !175, discriminator: 1)
!5788 = !DILocation(line: 3962, column: 64, scope: !5787)
!5789 = !DILocation(line: 3962, column: 11, scope: !5787)
!5790 = !DILocation(line: 3969, column: 10, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5782, file: !175, line: 3962, column: 72)
!5792 = !DILocation(line: 3969, column: 13, scope: !5791)
!5793 = !DILocation(line: 3969, column: 20, scope: !5791)
!5794 = !DILocation(line: 3970, column: 14, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5791, file: !175, line: 3970, column: 14)
!5796 = !DILocation(line: 3970, column: 21, scope: !5795)
!5797 = !DILocation(line: 3970, column: 26, scope: !5795)
!5798 = !DILocation(line: 3970, column: 29, scope: !5799)
!5799 = !DILexicalBlockFile(scope: !5795, file: !175, discriminator: 1)
!5800 = !DILocation(line: 3970, column: 36, scope: !5799)
!5801 = !DILocation(line: 3970, column: 14, scope: !5799)
!5802 = !DILocation(line: 3971, column: 51, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5795, file: !175, line: 3970, column: 42)
!5804 = !DILocation(line: 3971, column: 22, scope: !5803)
!5805 = !DILocation(line: 3971, column: 20, scope: !5803)
!5806 = !DILocation(line: 3973, column: 28, scope: !5803)
!5807 = !DILocation(line: 3973, column: 17, scope: !5803)
!5808 = !DILocation(line: 3973, column: 32, scope: !5803)
!5809 = !DILocation(line: 3972, column: 13, scope: !5803)
!5810 = !DILocation(line: 3974, column: 10, scope: !5803)
!5811 = !DILocation(line: 3975, column: 14, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5791, file: !175, line: 3975, column: 14)
!5813 = !DILocation(line: 3975, column: 21, scope: !5812)
!5814 = !DILocation(line: 3975, column: 14, scope: !5791)
!5815 = !DILocation(line: 3976, column: 13, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5812, file: !175, line: 3975, column: 27)
!5817 = !DILocation(line: 3976, column: 16, scope: !5816)
!5818 = !DILocation(line: 3976, column: 21, scope: !5816)
!5819 = !DILocation(line: 3976, column: 29, scope: !5816)
!5820 = !DILocation(line: 3977, column: 10, scope: !5816)
!5821 = !DILocation(line: 3978, column: 7, scope: !5791)
!5822 = !DILocation(line: 3979, column: 29, scope: !5706)
!5823 = !DILocation(line: 3979, column: 7, scope: !5706)
!5824 = !DILocation(line: 3980, column: 4, scope: !5706)
!5825 = !DILocation(line: 3981, column: 28, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5702, file: !175, line: 3980, column: 11)
!5827 = !DILocation(line: 3981, column: 7, scope: !5826)
!5828 = !DILocation(line: 3982, column: 35, scope: !5826)
!5829 = !DILocation(line: 3982, column: 38, scope: !5826)
!5830 = !DILocation(line: 3982, column: 44, scope: !5826)
!5831 = !DILocation(line: 3982, column: 16, scope: !5826)
!5832 = !DILocation(line: 3982, column: 14, scope: !5826)
!5833 = !DILocation(line: 3983, column: 11, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5826, file: !175, line: 3983, column: 11)
!5835 = !DILocation(line: 3983, column: 18, scope: !5834)
!5836 = !DILocation(line: 3983, column: 11, scope: !5826)
!5837 = !DILocation(line: 3984, column: 14, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5839, file: !175, line: 3984, column: 14)
!5839 = distinct !DILexicalBlock(scope: !5834, file: !175, line: 3983, column: 24)
!5840 = !DILocation(line: 3984, column: 21, scope: !5838)
!5841 = !DILocation(line: 3984, column: 14, scope: !5839)
!5842 = !DILocation(line: 3985, column: 13, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5838, file: !175, line: 3984, column: 27)
!5844 = distinct !{!5844, !5842}
!5845 = !DILocation(line: 3985, column: 77, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !5847, file: !175, discriminator: 1)
!5847 = distinct !DILexicalBlock(scope: !5843, file: !175, line: 3985, column: 16)
!5848 = !DILocation(line: 3985, column: 66, scope: !5846)
!5849 = !DILocation(line: 3985, column: 48, scope: !5850)
!5850 = !DILexicalBlockFile(scope: !5846, file: !175, discriminator: 2)
!5851 = !DILocation(line: 3985, column: 111, scope: !5846)
!5852 = !DILocation(line: 3985, column: 100, scope: !5853)
!5853 = !DILexicalBlockFile(scope: !5846, file: !175, discriminator: 3)
!5854 = !DILocation(line: 3985, column: 82, scope: !5855)
!5855 = !DILexicalBlockFile(scope: !5846, file: !175, discriminator: 4)
!5856 = !DILocation(line: 3985, column: 18, scope: !5857)
!5857 = !DILexicalBlockFile(scope: !5846, file: !175, discriminator: 5)
!5858 = !DILocation(line: 3985, column: 117, scope: !5859)
!5859 = !DILexicalBlockFile(scope: !5846, file: !175, discriminator: 6)
!5860 = !DILocation(line: 3985, column: 193, scope: !5846)
!5861 = !DILocation(line: 3987, column: 10, scope: !5843)
!5862 = !DILocation(line: 3988, column: 7, scope: !5839)
!5863 = !DILocation(line: 3990, column: 46, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5834, file: !175, line: 3988, column: 14)
!5865 = !DILocation(line: 3990, column: 19, scope: !5864)
!5866 = !DILocation(line: 3990, column: 17, scope: !5864)
!5867 = !DILocation(line: 3992, column: 29, scope: !5826)
!5868 = !DILocation(line: 3992, column: 7, scope: !5826)
!5869 = !DILocation(line: 3995, column: 11, scope: !5686)
!5870 = !DILocation(line: 3995, column: 4, scope: !5686)
!5871 = !DILocation(line: 3996, column: 1, scope: !5686)
!5872 = distinct !DISubprogram(name: "AsyncTCPSocketWaitForConnection", scope: !175, file: !175, line: 3767, type: !305, isLocal: true, isDefinition: true, scopeLine: 3769, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!5873 = !DILocalVariable(name: "base", arg: 1, scope: !5872, file: !175, line: 3767, type: !213)
!5874 = !DILocation(line: 3767, column: 46, scope: !5872)
!5875 = !DILocalVariable(name: "timeoutMS", arg: 2, scope: !5872, file: !175, line: 3768, type: !165)
!5876 = !DILocation(line: 3768, column: 37, scope: !5872)
!5877 = !DILocalVariable(name: "s", scope: !5872, file: !175, line: 3770, type: !173)
!5878 = !DILocation(line: 3770, column: 20, scope: !5872)
!5879 = !DILocation(line: 3770, column: 34, scope: !5872)
!5880 = !DILocation(line: 3770, column: 24, scope: !5872)
!5881 = !DILocalVariable(name: "read", scope: !5872, file: !175, line: 3771, type: !168)
!5882 = !DILocation(line: 3771, column: 9, scope: !5872)
!5883 = !DILocalVariable(name: "error", scope: !5872, file: !175, line: 3772, type: !165)
!5884 = !DILocation(line: 3772, column: 8, scope: !5872)
!5885 = !DILocalVariable(name: "now", scope: !5872, file: !175, line: 3773, type: !1792)
!5886 = !DILocation(line: 3773, column: 15, scope: !5872)
!5887 = !DILocalVariable(name: "done", scope: !5872, file: !175, line: 3773, type: !1792)
!5888 = !DILocation(line: 3773, column: 20, scope: !5872)
!5889 = !DILocalVariable(name: "removed", scope: !5872, file: !175, line: 3774, type: !168)
!5890 = !DILocation(line: 3774, column: 9, scope: !5872)
!5891 = !DILocation(line: 3778, column: 31, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5872, file: !175, line: 3778, column: 8)
!5893 = !DILocation(line: 3778, column: 8, scope: !5892)
!5894 = !DILocation(line: 3778, column: 34, scope: !5892)
!5895 = !DILocation(line: 3778, column: 8, scope: !5872)
!5896 = !DILocation(line: 3779, column: 7, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5892, file: !175, line: 3778, column: 59)
!5898 = !DILocation(line: 3782, column: 31, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5872, file: !175, line: 3782, column: 8)
!5900 = !DILocation(line: 3782, column: 8, scope: !5899)
!5901 = !DILocation(line: 3782, column: 34, scope: !5899)
!5902 = !DILocation(line: 3782, column: 58, scope: !5899)
!5903 = !DILocation(line: 3783, column: 31, scope: !5899)
!5904 = !DILocation(line: 3783, column: 8, scope: !5899)
!5905 = !DILocation(line: 3783, column: 34, scope: !5899)
!5906 = !DILocation(line: 3782, column: 8, scope: !5907)
!5907 = !DILexicalBlockFile(scope: !5872, file: !175, discriminator: 1)
!5908 = !DILocation(line: 3784, column: 7, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5899, file: !175, line: 3783, column: 60)
!5910 = !DILocation(line: 3787, column: 34, scope: !5872)
!5911 = !DILocation(line: 3787, column: 11, scope: !5872)
!5912 = !DILocation(line: 3787, column: 37, scope: !5872)
!5913 = !DILocation(line: 3787, column: 9, scope: !5872)
!5914 = !DILocation(line: 3797, column: 8, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5872, file: !175, line: 3797, column: 8)
!5916 = !DILocation(line: 3797, column: 8, scope: !5872)
!5917 = !DILocation(line: 3798, column: 11, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5919, file: !175, line: 3798, column: 11)
!5919 = distinct !DILexicalBlock(scope: !5915, file: !175, line: 3797, column: 14)
!5920 = !DILocation(line: 3798, column: 14, scope: !5918)
!5921 = !DILocation(line: 3798, column: 17, scope: !5918)
!5922 = !DILocation(line: 3798, column: 11, scope: !5919)
!5923 = !DILocation(line: 3799, column: 14, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !175, line: 3799, column: 14)
!5925 = distinct !DILexicalBlock(scope: !5918, file: !175, line: 3798, column: 24)
!5926 = !DILocation(line: 3799, column: 17, scope: !5924)
!5927 = !DILocation(line: 3799, column: 14, scope: !5925)
!5928 = !DILocation(line: 3801, column: 42, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5924, file: !175, line: 3799, column: 31)
!5930 = !DILocation(line: 3801, column: 45, scope: !5929)
!5931 = !DILocation(line: 3801, column: 13, scope: !5929)
!5932 = !DILocation(line: 3802, column: 10, scope: !5929)
!5933 = !DILocation(line: 3803, column: 14, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5925, file: !175, line: 3803, column: 14)
!5935 = !DILocation(line: 3803, column: 17, scope: !5934)
!5936 = !DILocation(line: 3803, column: 14, scope: !5925)
!5937 = !DILocation(line: 3805, column: 42, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5934, file: !175, line: 3803, column: 31)
!5939 = !DILocation(line: 3805, column: 45, scope: !5938)
!5940 = !DILocation(line: 3805, column: 13, scope: !5938)
!5941 = !DILocation(line: 3806, column: 10, scope: !5938)
!5942 = !DILocation(line: 3807, column: 7, scope: !5925)
!5943 = !DILocation(line: 3808, column: 39, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5918, file: !175, line: 3807, column: 14)
!5945 = !DILocation(line: 3808, column: 10, scope: !5944)
!5946 = !DILocation(line: 3811, column: 15, scope: !5919)
!5947 = !DILocation(line: 3812, column: 4, scope: !5919)
!5948 = !DILocation(line: 3813, column: 43, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5915, file: !175, line: 3812, column: 11)
!5950 = !DILocation(line: 3813, column: 18, scope: !5949)
!5951 = !DILocation(line: 3814, column: 74, scope: !5949)
!5952 = !DILocation(line: 3815, column: 43, scope: !5949)
!5953 = !DILocation(line: 3815, column: 18, scope: !5949)
!5954 = !DILocation(line: 3814, column: 74, scope: !5955)
!5955 = !DILexicalBlockFile(scope: !5949, file: !175, discriminator: 1)
!5956 = !DILocation(line: 3814, column: 74, scope: !5957)
!5957 = !DILexicalBlockFile(scope: !5949, file: !175, discriminator: 2)
!5958 = !DILocation(line: 3813, column: 17, scope: !5955)
!5959 = !DILocation(line: 3813, column: 15, scope: !5955)
!5960 = !DILocation(line: 3818, column: 11, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5949, file: !175, line: 3818, column: 11)
!5962 = !DILocation(line: 3818, column: 14, scope: !5961)
!5963 = !DILocation(line: 3818, column: 11, scope: !5949)
!5964 = !DILocation(line: 3819, column: 45, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5961, file: !175, line: 3818, column: 33)
!5966 = !DILocation(line: 3819, column: 20, scope: !5965)
!5967 = !DILocation(line: 3819, column: 18, scope: !5965)
!5968 = !DILocation(line: 3822, column: 10, scope: !5965)
!5969 = !DILocation(line: 3822, column: 13, scope: !5965)
!5970 = !DILocation(line: 3822, column: 31, scope: !5965)
!5971 = !DILocation(line: 3823, column: 7, scope: !5965)
!5972 = !DILocation(line: 3826, column: 10, scope: !5872)
!5973 = !DILocation(line: 3826, column: 35, scope: !5872)
!5974 = !DILocation(line: 3826, column: 8, scope: !5872)
!5975 = !DILocation(line: 3827, column: 11, scope: !5872)
!5976 = !DILocation(line: 3827, column: 17, scope: !5872)
!5977 = !DILocation(line: 3827, column: 15, scope: !5872)
!5978 = !DILocation(line: 3827, column: 9, scope: !5872)
!5979 = !DILocation(line: 3829, column: 4, scope: !5872)
!5980 = distinct !{!5980, !5979}
!5981 = !DILocalVariable(name: "asock", scope: !5982, file: !175, line: 3830, type: !173)
!5982 = distinct !DILexicalBlock(scope: !5872, file: !175, line: 3829, column: 7)
!5983 = !DILocation(line: 3830, column: 23, scope: !5982)
!5984 = !DILocation(line: 3832, column: 34, scope: !5982)
!5985 = !DILocation(line: 3832, column: 37, scope: !5982)
!5986 = !DILocation(line: 3832, column: 43, scope: !5982)
!5987 = !DILocation(line: 3832, column: 50, scope: !5982)
!5988 = !DILocation(line: 3832, column: 48, scope: !5982)
!5989 = !DILocation(line: 3832, column: 15, scope: !5982)
!5990 = !DILocation(line: 3832, column: 13, scope: !5982)
!5991 = !DILocation(line: 3833, column: 11, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5982, file: !175, line: 3833, column: 11)
!5993 = !DILocation(line: 3833, column: 17, scope: !5992)
!5994 = !DILocation(line: 3833, column: 11, scope: !5982)
!5995 = !DILocation(line: 3834, column: 10, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5992, file: !175, line: 3833, column: 23)
!5997 = !DILocation(line: 3837, column: 13, scope: !5982)
!5998 = !DILocation(line: 3837, column: 38, scope: !5982)
!5999 = !DILocation(line: 3837, column: 11, scope: !5982)
!6000 = !DILocation(line: 3839, column: 11, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5982, file: !175, line: 3839, column: 11)
!6002 = !DILocation(line: 3839, column: 11, scope: !5982)
!6003 = !DILocation(line: 3840, column: 43, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6005, file: !175, line: 3840, column: 14)
!6005 = distinct !DILexicalBlock(scope: !6001, file: !175, line: 3839, column: 17)
!6006 = !DILocation(line: 3840, column: 14, scope: !6004)
!6007 = !DILocation(line: 3840, column: 50, scope: !6004)
!6008 = !DILocation(line: 3840, column: 14, scope: !6005)
!6009 = !DILocation(line: 3841, column: 13, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6004, file: !175, line: 3840, column: 56)
!6011 = distinct !{!6011, !6009}
!6012 = !DILocation(line: 3841, column: 73, scope: !6013)
!6013 = !DILexicalBlockFile(scope: !6014, file: !175, discriminator: 1)
!6014 = distinct !DILexicalBlock(scope: !6010, file: !175, line: 3841, column: 16)
!6015 = !DILocation(line: 3841, column: 62, scope: !6013)
!6016 = !DILocation(line: 3841, column: 44, scope: !6017)
!6017 = !DILexicalBlockFile(scope: !6013, file: !175, discriminator: 2)
!6018 = !DILocation(line: 3841, column: 107, scope: !6013)
!6019 = !DILocation(line: 3841, column: 96, scope: !6020)
!6020 = !DILexicalBlockFile(scope: !6013, file: !175, discriminator: 3)
!6021 = !DILocation(line: 3841, column: 78, scope: !6022)
!6022 = !DILexicalBlockFile(scope: !6013, file: !175, discriminator: 4)
!6023 = !DILocation(line: 3841, column: 18, scope: !6024)
!6024 = !DILexicalBlockFile(scope: !6013, file: !175, discriminator: 5)
!6025 = !DILocation(line: 3841, column: 113, scope: !6026)
!6026 = !DILexicalBlockFile(scope: !6013, file: !175, discriminator: 6)
!6027 = !DILocation(line: 3841, column: 159, scope: !6013)
!6028 = !DILocation(line: 3848, column: 10, scope: !6010)
!6029 = !DILocation(line: 3849, column: 19, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6004, file: !175, line: 3848, column: 17)
!6031 = !DILocation(line: 3850, column: 13, scope: !6030)
!6032 = !DILocation(line: 3852, column: 7, scope: !6005)
!6033 = !DILocation(line: 3853, column: 48, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6001, file: !175, line: 3852, column: 14)
!6035 = !DILocation(line: 3853, column: 18, scope: !6034)
!6036 = !DILocation(line: 3853, column: 16, scope: !6034)
!6037 = !DILocation(line: 3854, column: 10, scope: !6034)
!6038 = !DILocation(line: 3856, column: 4, scope: !5982)
!6039 = !DILocation(line: 3856, column: 14, scope: !5907)
!6040 = !DILocation(line: 3856, column: 20, scope: !5907)
!6041 = !DILocation(line: 3856, column: 18, scope: !5907)
!6042 = !DILocation(line: 3856, column: 25, scope: !5907)
!6043 = !DILocation(line: 3856, column: 28, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !5872, file: !175, discriminator: 2)
!6045 = !DILocation(line: 3856, column: 38, scope: !6044)
!6046 = !DILocation(line: 3856, column: 43, scope: !6044)
!6047 = !DILocation(line: 3856, column: 47, scope: !6048)
!6048 = !DILexicalBlockFile(scope: !5872, file: !175, discriminator: 3)
!6049 = !DILocation(line: 3856, column: 57, scope: !6048)
!6050 = !DILocation(line: 3856, column: 43, scope: !6048)
!6051 = !DILocation(line: 3856, column: 4, scope: !6052)
!6052 = !DILexicalBlockFile(scope: !5982, file: !175, discriminator: 4)
!6053 = !DILocation(line: 3858, column: 10, scope: !5872)
!6054 = !DILocation(line: 3858, column: 4, scope: !5872)
!6055 = !DILocation(line: 3861, column: 8, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !5872, file: !175, line: 3861, column: 8)
!6057 = !DILocation(line: 3861, column: 13, scope: !6056)
!6058 = !DILocation(line: 3861, column: 16, scope: !6059)
!6059 = !DILexicalBlockFile(scope: !6056, file: !175, discriminator: 1)
!6060 = !DILocation(line: 3861, column: 8, scope: !6059)
!6061 = !DILocation(line: 3862, column: 11, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !175, line: 3862, column: 11)
!6063 = distinct !DILexicalBlock(scope: !6056, file: !175, line: 3861, column: 25)
!6064 = !DILocation(line: 3862, column: 14, scope: !6062)
!6065 = !DILocation(line: 3862, column: 17, scope: !6062)
!6066 = !DILocation(line: 3862, column: 11, scope: !6063)
!6067 = !DILocation(line: 3863, column: 14, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !175, line: 3863, column: 14)
!6069 = distinct !DILexicalBlock(scope: !6062, file: !175, line: 3862, column: 24)
!6070 = !DILocation(line: 3863, column: 17, scope: !6068)
!6071 = !DILocation(line: 3863, column: 30, scope: !6068)
!6072 = !DILocation(line: 3864, column: 37, scope: !6068)
!6073 = !DILocation(line: 3864, column: 40, scope: !6068)
!6074 = !DILocation(line: 3864, column: 14, scope: !6068)
!6075 = !DILocation(line: 3864, column: 54, scope: !6068)
!6076 = !DILocation(line: 3863, column: 14, scope: !6077)
!6077 = !DILexicalBlockFile(scope: !6069, file: !175, discriminator: 1)
!6078 = !DILocation(line: 3865, column: 44, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6080, file: !175, line: 3865, column: 17)
!6080 = distinct !DILexicalBlock(scope: !6068, file: !175, line: 3864, column: 76)
!6081 = !DILocation(line: 3865, column: 47, scope: !6079)
!6082 = !DILocation(line: 3865, column: 18, scope: !6079)
!6083 = !DILocation(line: 3865, column: 17, scope: !6080)
!6084 = !DILocation(line: 3866, column: 22, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6079, file: !175, line: 3865, column: 62)
!6086 = !DILocation(line: 3867, column: 13, scope: !6085)
!6087 = !DILocation(line: 3868, column: 10, scope: !6080)
!6088 = !DILocation(line: 3870, column: 14, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6069, file: !175, line: 3870, column: 14)
!6090 = !DILocation(line: 3870, column: 17, scope: !6089)
!6091 = !DILocation(line: 3870, column: 30, scope: !6089)
!6092 = !DILocation(line: 3871, column: 37, scope: !6089)
!6093 = !DILocation(line: 3871, column: 40, scope: !6089)
!6094 = !DILocation(line: 3871, column: 14, scope: !6089)
!6095 = !DILocation(line: 3871, column: 54, scope: !6089)
!6096 = !DILocation(line: 3870, column: 14, scope: !6077)
!6097 = !DILocation(line: 3872, column: 44, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !175, line: 3872, column: 17)
!6099 = distinct !DILexicalBlock(scope: !6089, file: !175, line: 3871, column: 76)
!6100 = !DILocation(line: 3872, column: 47, scope: !6098)
!6101 = !DILocation(line: 3872, column: 18, scope: !6098)
!6102 = !DILocation(line: 3872, column: 17, scope: !6099)
!6103 = !DILocation(line: 3873, column: 22, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6098, file: !175, line: 3872, column: 62)
!6105 = !DILocation(line: 3874, column: 13, scope: !6104)
!6106 = !DILocation(line: 3875, column: 10, scope: !6099)
!6107 = !DILocation(line: 3876, column: 7, scope: !6069)
!6108 = !DILocation(line: 3876, column: 41, scope: !6109)
!6109 = !DILexicalBlockFile(scope: !6110, file: !175, discriminator: 1)
!6110 = distinct !DILexicalBlock(scope: !6062, file: !175, line: 3876, column: 18)
!6111 = !DILocation(line: 3876, column: 18, scope: !6109)
!6112 = !DILocation(line: 3876, column: 44, scope: !6109)
!6113 = !DILocation(line: 3877, column: 41, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6115, file: !175, line: 3877, column: 14)
!6115 = distinct !DILexicalBlock(scope: !6110, file: !175, line: 3876, column: 66)
!6116 = !DILocation(line: 3877, column: 15, scope: !6114)
!6117 = !DILocation(line: 3877, column: 14, scope: !6115)
!6118 = !DILocation(line: 3878, column: 19, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6114, file: !175, line: 3877, column: 45)
!6120 = !DILocation(line: 3879, column: 10, scope: !6119)
!6121 = !DILocation(line: 3880, column: 7, scope: !6115)
!6122 = !DILocation(line: 3881, column: 4, scope: !6063)
!6123 = !DILocation(line: 3883, column: 11, scope: !5872)
!6124 = !DILocation(line: 3883, column: 4, scope: !5872)
!6125 = !DILocation(line: 3884, column: 1, scope: !5872)
!6126 = distinct !DISubprogram(name: "AsyncTCPSocketWaitForReadMultiple", scope: !175, file: !175, line: 2772, type: !382, isLocal: true, isDefinition: true, scopeLine: 2776, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6127 = !DILocalVariable(name: "asock", arg: 1, scope: !6126, file: !175, line: 2772, type: !384)
!6128 = !DILocation(line: 2772, column: 49, scope: !6126)
!6129 = !DILocalVariable(name: "numSock", arg: 2, scope: !6126, file: !175, line: 2773, type: !165)
!6130 = !DILocation(line: 2773, column: 39, scope: !6126)
!6131 = !DILocalVariable(name: "timeoutMS", arg: 3, scope: !6126, file: !175, line: 2774, type: !165)
!6132 = !DILocation(line: 2774, column: 39, scope: !6126)
!6133 = !DILocalVariable(name: "outIdx", arg: 4, scope: !6126, file: !175, line: 2775, type: !342)
!6134 = !DILocation(line: 2775, column: 40, scope: !6126)
!6135 = !DILocalVariable(name: "i", scope: !6126, file: !175, line: 2777, type: !165)
!6136 = !DILocation(line: 2777, column: 8, scope: !6126)
!6137 = !DILocalVariable(name: "err", scope: !6126, file: !175, line: 2778, type: !165)
!6138 = !DILocation(line: 2778, column: 8, scope: !6126)
!6139 = !DILocalVariable(name: "outAsock", scope: !6126, file: !175, line: 2779, type: !173)
!6140 = !DILocation(line: 2779, column: 20, scope: !6126)
!6141 = !DILocalVariable(name: "p", scope: !6126, file: !175, line: 2781, type: !450)
!6142 = !DILocation(line: 2781, column: 19, scope: !6126)
!6143 = !DILocation(line: 2781, column: 40, scope: !6126)
!6144 = !DILocation(line: 2781, column: 39, scope: !6126)
!6145 = !DILocation(line: 2781, column: 23, scope: !6126)
!6146 = !DILocation(line: 2786, column: 11, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6126, file: !175, line: 2786, column: 4)
!6148 = !DILocation(line: 2786, column: 9, scope: !6147)
!6149 = !DILocation(line: 2786, column: 16, scope: !6150)
!6150 = !DILexicalBlockFile(scope: !6151, file: !175, discriminator: 1)
!6151 = distinct !DILexicalBlock(scope: !6147, file: !175, line: 2786, column: 4)
!6152 = !DILocation(line: 2786, column: 20, scope: !6150)
!6153 = !DILocation(line: 2786, column: 18, scope: !6150)
!6154 = !DILocation(line: 2786, column: 4, scope: !6150)
!6155 = !DILocation(line: 2788, column: 4, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6151, file: !175, line: 2786, column: 34)
!6157 = !DILocation(line: 2786, column: 30, scope: !6158)
!6158 = !DILexicalBlockFile(scope: !6151, file: !175, discriminator: 2)
!6159 = !DILocation(line: 2786, column: 4, scope: !6158)
!6160 = distinct !{!6160, !6161}
!6161 = !DILocation(line: 2786, column: 4, scope: !6126)
!6162 = !DILocation(line: 2789, column: 52, scope: !6126)
!6163 = !DILocation(line: 2789, column: 33, scope: !6126)
!6164 = !DILocation(line: 2789, column: 59, scope: !6126)
!6165 = !DILocation(line: 2789, column: 68, scope: !6126)
!6166 = !DILocation(line: 2790, column: 33, scope: !6126)
!6167 = !DILocation(line: 2789, column: 10, scope: !6126)
!6168 = !DILocation(line: 2789, column: 8, scope: !6126)
!6169 = !DILocation(line: 2791, column: 13, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6126, file: !175, line: 2791, column: 4)
!6171 = !DILocation(line: 2791, column: 21, scope: !6170)
!6172 = !DILocation(line: 2791, column: 11, scope: !6170)
!6173 = !DILocation(line: 2791, column: 9, scope: !6170)
!6174 = !DILocation(line: 2791, column: 26, scope: !6175)
!6175 = !DILexicalBlockFile(scope: !6176, file: !175, discriminator: 1)
!6176 = distinct !DILexicalBlock(scope: !6170, file: !175, line: 2791, column: 4)
!6177 = !DILocation(line: 2791, column: 28, scope: !6175)
!6178 = !DILocation(line: 2791, column: 4, scope: !6175)
!6179 = !DILocalVariable(name: "tcpAsock", scope: !6180, file: !175, line: 2792, type: !173)
!6180 = distinct !DILexicalBlock(scope: !6176, file: !175, line: 2791, column: 39)
!6181 = !DILocation(line: 2792, column: 23, scope: !6180)
!6182 = !DILocation(line: 2792, column: 50, scope: !6180)
!6183 = !DILocation(line: 2792, column: 44, scope: !6180)
!6184 = !DILocation(line: 2792, column: 34, scope: !6180)
!6185 = !DILocation(line: 2793, column: 11, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6180, file: !175, line: 2793, column: 11)
!6187 = !DILocation(line: 2793, column: 23, scope: !6186)
!6188 = !DILocation(line: 2793, column: 20, scope: !6186)
!6189 = !DILocation(line: 2793, column: 11, scope: !6180)
!6190 = !DILocation(line: 2794, column: 20, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6186, file: !175, line: 2793, column: 33)
!6192 = !DILocation(line: 2794, column: 11, scope: !6191)
!6193 = !DILocation(line: 2794, column: 18, scope: !6191)
!6194 = !DILocation(line: 2795, column: 7, scope: !6191)
!6195 = !DILocation(line: 2796, column: 4, scope: !6180)
!6196 = !DILocation(line: 2791, column: 35, scope: !6197)
!6197 = !DILexicalBlockFile(scope: !6176, file: !175, discriminator: 2)
!6198 = !DILocation(line: 2791, column: 4, scope: !6197)
!6199 = distinct !{!6199, !6200}
!6200 = !DILocation(line: 2791, column: 4, scope: !6126)
!6201 = !DILocation(line: 2798, column: 9, scope: !6126)
!6202 = !DILocation(line: 2798, column: 4, scope: !6126)
!6203 = !DILocation(line: 2799, column: 11, scope: !6126)
!6204 = !DILocation(line: 2799, column: 4, scope: !6126)
!6205 = distinct !DISubprogram(name: "AsyncTCPSocketDestroy", scope: !175, file: !175, line: 5982, type: !387, isLocal: true, isDefinition: true, scopeLine: 5983, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6206 = !DILocalVariable(name: "base", arg: 1, scope: !6205, file: !175, line: 5982, type: !213)
!6207 = !DILocation(line: 5982, column: 36, scope: !6205)
!6208 = !DILocation(line: 5984, column: 9, scope: !6205)
!6209 = !DILocation(line: 5984, column: 4, scope: !6205)
!6210 = !DILocation(line: 5985, column: 1, scope: !6205)
!6211 = distinct !DISubprogram(name: "AsyncTCPSocketGetAddr", scope: !175, file: !175, line: 637, type: !6212, isLocal: true, isDefinition: true, scopeLine: 641, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6212 = !DISubroutineType(types: !6213)
!6213 = !{!165, !173, !165, !86, !249}
!6214 = !DILocalVariable(name: "asock", arg: 1, scope: !6211, file: !175, line: 637, type: !173)
!6215 = !DILocation(line: 637, column: 39, scope: !6211)
!6216 = !DILocalVariable(name: "socketFamily", arg: 2, scope: !6211, file: !175, line: 638, type: !165)
!6217 = !DILocation(line: 638, column: 27, scope: !6211)
!6218 = !DILocalVariable(name: "outAddr", arg: 3, scope: !6211, file: !175, line: 639, type: !86)
!6219 = !DILocation(line: 639, column: 48, scope: !6211)
!6220 = !DILocalVariable(name: "outAddrLen", arg: 4, scope: !6211, file: !175, line: 640, type: !249)
!6221 = !DILocation(line: 640, column: 34, scope: !6211)
!6222 = !DILocalVariable(name: "tempAsock", scope: !6211, file: !175, line: 642, type: !173)
!6223 = !DILocation(line: 642, column: 20, scope: !6211)
!6224 = !DILocalVariable(name: "tempFd", scope: !6211, file: !175, line: 643, type: !165)
!6225 = !DILocation(line: 643, column: 8, scope: !6211)
!6226 = !DILocalVariable(name: "addr", scope: !6211, file: !175, line: 644, type: !87)
!6227 = !DILocation(line: 644, column: 28, scope: !6211)
!6228 = !DILocalVariable(name: "addrLen", scope: !6211, file: !175, line: 645, type: !242)
!6229 = !DILocation(line: 645, column: 14, scope: !6211)
!6230 = !DILocation(line: 647, column: 8, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6211, file: !175, line: 647, column: 8)
!6232 = !DILocation(line: 647, column: 15, scope: !6231)
!6233 = !DILocation(line: 647, column: 18, scope: !6231)
!6234 = !DILocation(line: 647, column: 8, scope: !6211)
!6235 = !DILocation(line: 648, column: 19, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6231, file: !175, line: 647, column: 25)
!6237 = !DILocation(line: 648, column: 17, scope: !6236)
!6238 = !DILocation(line: 649, column: 4, scope: !6236)
!6239 = !DILocation(line: 649, column: 16, scope: !6240)
!6240 = !DILexicalBlockFile(scope: !6241, file: !175, discriminator: 1)
!6241 = distinct !DILexicalBlock(scope: !6231, file: !175, line: 649, column: 15)
!6242 = !DILocation(line: 649, column: 29, scope: !6240)
!6243 = !DILocation(line: 649, column: 41, scope: !6240)
!6244 = !DILocation(line: 649, column: 44, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !6241, file: !175, discriminator: 2)
!6246 = !DILocation(line: 649, column: 57, scope: !6245)
!6247 = !DILocation(line: 649, column: 70, scope: !6245)
!6248 = !DILocation(line: 650, column: 15, scope: !6241)
!6249 = !DILocation(line: 650, column: 22, scope: !6241)
!6250 = !DILocation(line: 650, column: 35, scope: !6241)
!6251 = !DILocation(line: 650, column: 38, scope: !6240)
!6252 = !DILocation(line: 650, column: 45, scope: !6240)
!6253 = !DILocation(line: 650, column: 59, scope: !6240)
!6254 = !DILocation(line: 650, column: 62, scope: !6240)
!6255 = !DILocation(line: 649, column: 15, scope: !6256)
!6256 = !DILexicalBlockFile(scope: !6231, file: !175, discriminator: 3)
!6257 = !DILocation(line: 651, column: 19, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6241, file: !175, line: 650, column: 69)
!6259 = !DILocation(line: 651, column: 26, scope: !6258)
!6260 = !DILocation(line: 651, column: 17, scope: !6258)
!6261 = !DILocation(line: 652, column: 4, scope: !6258)
!6262 = !DILocation(line: 652, column: 16, scope: !6263)
!6263 = !DILexicalBlockFile(scope: !6264, file: !175, discriminator: 1)
!6264 = distinct !DILexicalBlock(scope: !6241, file: !175, line: 652, column: 15)
!6265 = !DILocation(line: 652, column: 29, scope: !6263)
!6266 = !DILocation(line: 652, column: 41, scope: !6263)
!6267 = !DILocation(line: 652, column: 44, scope: !6268)
!6268 = !DILexicalBlockFile(scope: !6264, file: !175, discriminator: 2)
!6269 = !DILocation(line: 652, column: 57, scope: !6268)
!6270 = !DILocation(line: 652, column: 69, scope: !6268)
!6271 = !DILocation(line: 653, column: 15, scope: !6264)
!6272 = !DILocation(line: 653, column: 22, scope: !6264)
!6273 = !DILocation(line: 653, column: 35, scope: !6264)
!6274 = !DILocation(line: 653, column: 38, scope: !6263)
!6275 = !DILocation(line: 653, column: 45, scope: !6263)
!6276 = !DILocation(line: 653, column: 59, scope: !6263)
!6277 = !DILocation(line: 653, column: 62, scope: !6263)
!6278 = !DILocation(line: 652, column: 15, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !6241, file: !175, discriminator: 3)
!6280 = !DILocation(line: 654, column: 19, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6264, file: !175, line: 653, column: 69)
!6282 = !DILocation(line: 654, column: 26, scope: !6281)
!6283 = !DILocation(line: 654, column: 17, scope: !6281)
!6284 = !DILocation(line: 655, column: 4, scope: !6281)
!6285 = !DILocation(line: 656, column: 7, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6264, file: !175, line: 655, column: 11)
!6287 = !DILocation(line: 660, column: 13, scope: !6211)
!6288 = !DILocation(line: 660, column: 24, scope: !6211)
!6289 = !DILocation(line: 660, column: 11, scope: !6211)
!6290 = !DILocation(line: 662, column: 20, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6211, file: !175, line: 662, column: 8)
!6292 = !DILocation(line: 662, column: 28, scope: !6291)
!6293 = !DILocation(line: 662, column: 8, scope: !6291)
!6294 = !DILocation(line: 662, column: 63, scope: !6291)
!6295 = !DILocation(line: 662, column: 8, scope: !6211)
!6296 = !DILocation(line: 663, column: 11, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6298, file: !175, line: 663, column: 11)
!6298 = distinct !DILexicalBlock(scope: !6291, file: !175, line: 662, column: 69)
!6299 = !DILocation(line: 663, column: 24, scope: !6297)
!6300 = !DILocation(line: 663, column: 36, scope: !6297)
!6301 = !DILocation(line: 663, column: 44, scope: !6302)
!6302 = !DILexicalBlockFile(scope: !6297, file: !175, discriminator: 1)
!6303 = !DILocation(line: 663, column: 39, scope: !6302)
!6304 = !DILocation(line: 663, column: 57, scope: !6302)
!6305 = !DILocation(line: 663, column: 54, scope: !6302)
!6306 = !DILocation(line: 663, column: 11, scope: !6302)
!6307 = !DILocation(line: 664, column: 10, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6297, file: !175, line: 663, column: 71)
!6309 = !DILocation(line: 667, column: 14, scope: !6298)
!6310 = !DILocation(line: 667, column: 7, scope: !6298)
!6311 = !DILocation(line: 667, column: 35, scope: !6298)
!6312 = !DILocation(line: 667, column: 34, scope: !6298)
!6313 = !DILocation(line: 667, column: 47, scope: !6298)
!6314 = !DILocation(line: 667, column: 30, scope: !6298)
!6315 = !DILocation(line: 667, column: 7, scope: !6316)
!6316 = !DILexicalBlockFile(scope: !6298, file: !175, discriminator: 1)
!6317 = !DILocation(line: 668, column: 21, scope: !6298)
!6318 = !DILocation(line: 668, column: 8, scope: !6298)
!6319 = !DILocation(line: 668, column: 19, scope: !6298)
!6320 = !DILocation(line: 669, column: 7, scope: !6298)
!6321 = !DILocation(line: 671, column: 7, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6291, file: !175, line: 670, column: 11)
!6323 = distinct !{!6323, !6321}
!6324 = !DILocation(line: 671, column: 71, scope: !6325)
!6325 = !DILexicalBlockFile(scope: !6326, file: !175, discriminator: 1)
!6326 = distinct !DILexicalBlock(scope: !6322, file: !175, line: 671, column: 10)
!6327 = !DILocation(line: 671, column: 60, scope: !6325)
!6328 = !DILocation(line: 671, column: 42, scope: !6329)
!6329 = !DILexicalBlockFile(scope: !6325, file: !175, discriminator: 2)
!6330 = !DILocation(line: 671, column: 113, scope: !6325)
!6331 = !DILocation(line: 671, column: 102, scope: !6332)
!6332 = !DILexicalBlockFile(scope: !6325, file: !175, discriminator: 3)
!6333 = !DILocation(line: 671, column: 84, scope: !6334)
!6334 = !DILexicalBlockFile(scope: !6325, file: !175, discriminator: 4)
!6335 = !DILocation(line: 671, column: 12, scope: !6336)
!6336 = !DILexicalBlockFile(scope: !6325, file: !175, discriminator: 5)
!6337 = !DILocation(line: 671, column: 127, scope: !6338)
!6338 = !DILexicalBlockFile(scope: !6325, file: !175, discriminator: 6)
!6339 = !DILocation(line: 671, column: 185, scope: !6325)
!6340 = !DILocation(line: 672, column: 7, scope: !6322)
!6341 = !DILocation(line: 674, column: 1, scope: !6211)
!6342 = distinct !DISubprogram(name: "Min", scope: !6343, file: !6343, line: 148, type: !6344, isLocal: true, isDefinition: true, scopeLine: 149, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6343 = !DIFile(filename: "/home/ubuntu_1604/lichi/package_include_openssl_lib/open-vm-tools/open-vm-tools/lib/include/vm_basic_defs.h", directory: "/home/lichi/Desktop/open-vm-tools/line52")
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!165, !165, !165}
!6346 = !DILocalVariable(name: "a", arg: 1, scope: !6342, file: !6343, line: 148, type: !165)
!6347 = !DILocation(line: 148, column: 9, scope: !6342)
!6348 = !DILocalVariable(name: "b", arg: 2, scope: !6342, file: !6343, line: 148, type: !165)
!6349 = !DILocation(line: 148, column: 16, scope: !6342)
!6350 = !DILocation(line: 150, column: 11, scope: !6342)
!6351 = !DILocation(line: 150, column: 15, scope: !6342)
!6352 = !DILocation(line: 150, column: 13, scope: !6342)
!6353 = !DILocation(line: 150, column: 19, scope: !6354)
!6354 = !DILexicalBlockFile(scope: !6342, file: !6343, discriminator: 1)
!6355 = !DILocation(line: 150, column: 11, scope: !6354)
!6356 = !DILocation(line: 150, column: 23, scope: !6357)
!6357 = !DILexicalBlockFile(scope: !6342, file: !6343, discriminator: 2)
!6358 = !DILocation(line: 150, column: 11, scope: !6357)
!6359 = !DILocation(line: 150, column: 11, scope: !6360)
!6360 = !DILexicalBlockFile(scope: !6342, file: !6343, discriminator: 3)
!6361 = !DILocation(line: 150, column: 4, scope: !6360)
!6362 = distinct !DISubprogram(name: "AsyncTCPSocketSslAcceptCallback", scope: !175, file: !175, line: 5606, type: !409, isLocal: true, isDefinition: true, scopeLine: 5607, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6363 = !DILocalVariable(name: "clientData", arg: 1, scope: !6362, file: !175, line: 5606, type: !80)
!6364 = !DILocation(line: 5606, column: 39, scope: !6362)
!6365 = !DILocalVariable(name: "sslOpCode", scope: !6362, file: !175, line: 5608, type: !165)
!6366 = !DILocation(line: 5608, column: 8, scope: !6362)
!6367 = !DILocalVariable(name: "asock", scope: !6362, file: !175, line: 5609, type: !173)
!6368 = !DILocation(line: 5609, column: 20, scope: !6362)
!6369 = !DILocation(line: 5609, column: 28, scope: !6362)
!6370 = !DILocalVariable(name: "pollStatus", scope: !6362, file: !175, line: 5610, type: !1402)
!6371 = !DILocation(line: 5610, column: 17, scope: !6362)
!6372 = !DILocation(line: 5616, column: 25, scope: !6362)
!6373 = !DILocation(line: 5616, column: 4, scope: !6362)
!6374 = !DILocation(line: 5619, column: 4, scope: !6362)
!6375 = !DILocation(line: 5619, column: 11, scope: !6362)
!6376 = !DILocation(line: 5619, column: 24, scope: !6362)
!6377 = !DILocation(line: 5621, column: 38, scope: !6362)
!6378 = !DILocation(line: 5621, column: 45, scope: !6362)
!6379 = !DILocation(line: 5621, column: 16, scope: !6362)
!6380 = !DILocation(line: 5621, column: 14, scope: !6362)
!6381 = !DILocation(line: 5622, column: 8, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6362, file: !175, line: 5622, column: 8)
!6383 = !DILocation(line: 5622, column: 18, scope: !6382)
!6384 = !DILocation(line: 5622, column: 8, scope: !6362)
!6385 = !DILocation(line: 5623, column: 9, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6382, file: !175, line: 5622, column: 23)
!6387 = !DILocation(line: 5623, column: 16, scope: !6386)
!6388 = !DILocation(line: 5623, column: 43, scope: !6386)
!6389 = !DILocation(line: 5623, column: 32, scope: !6386)
!6390 = !DILocation(line: 5623, column: 51, scope: !6386)
!6391 = !DILocation(line: 5623, column: 58, scope: !6386)
!6392 = !DILocation(line: 5623, column: 7, scope: !6393)
!6393 = !DILexicalBlockFile(scope: !6386, file: !175, discriminator: 1)
!6394 = !DILocation(line: 5624, column: 4, scope: !6386)
!6395 = !DILocation(line: 5624, column: 15, scope: !6396)
!6396 = !DILexicalBlockFile(scope: !6397, file: !175, discriminator: 1)
!6397 = distinct !DILexicalBlock(scope: !6382, file: !175, line: 5624, column: 15)
!6398 = !DILocation(line: 5624, column: 25, scope: !6396)
!6399 = !DILocation(line: 5625, column: 9, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6397, file: !175, line: 5624, column: 30)
!6401 = !DILocation(line: 5625, column: 16, scope: !6400)
!6402 = !DILocation(line: 5625, column: 43, scope: !6400)
!6403 = !DILocation(line: 5625, column: 32, scope: !6400)
!6404 = !DILocation(line: 5625, column: 51, scope: !6400)
!6405 = !DILocation(line: 5625, column: 58, scope: !6400)
!6406 = !DILocation(line: 5625, column: 7, scope: !6407)
!6407 = !DILexicalBlockFile(scope: !6400, file: !175, discriminator: 1)
!6408 = !DILocation(line: 5626, column: 4, scope: !6400)
!6409 = !DILocation(line: 5627, column: 42, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6397, file: !175, line: 5626, column: 11)
!6411 = !DILocation(line: 5627, column: 49, scope: !6410)
!6412 = !DILocation(line: 5627, column: 29, scope: !6410)
!6413 = !DILocation(line: 5627, column: 7, scope: !6410)
!6414 = !DILocation(line: 5627, column: 14, scope: !6410)
!6415 = !DILocation(line: 5627, column: 27, scope: !6410)
!6416 = !DILocation(line: 5631, column: 42, scope: !6410)
!6417 = !DILocation(line: 5631, column: 52, scope: !6410)
!6418 = !DILocation(line: 5631, column: 59, scope: !6410)
!6419 = !DILocation(line: 5631, column: 20, scope: !6410)
!6420 = !DILocation(line: 5631, column: 18, scope: !6410)
!6421 = !DILocation(line: 5634, column: 11, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6410, file: !175, line: 5634, column: 11)
!6423 = !DILocation(line: 5634, column: 22, scope: !6422)
!6424 = !DILocation(line: 5634, column: 11, scope: !6410)
!6425 = !DILocation(line: 5635, column: 10, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6422, file: !175, line: 5634, column: 48)
!6427 = distinct !{!6427, !6425}
!6428 = !DILocation(line: 5635, column: 74, scope: !6429)
!6429 = !DILexicalBlockFile(scope: !6430, file: !175, discriminator: 1)
!6430 = distinct !DILexicalBlock(scope: !6426, file: !175, line: 5635, column: 13)
!6431 = !DILocation(line: 5635, column: 63, scope: !6429)
!6432 = !DILocation(line: 5635, column: 45, scope: !6433)
!6433 = !DILexicalBlockFile(scope: !6429, file: !175, discriminator: 2)
!6434 = !DILocation(line: 5635, column: 112, scope: !6429)
!6435 = !DILocation(line: 5635, column: 101, scope: !6436)
!6436 = !DILexicalBlockFile(scope: !6429, file: !175, discriminator: 3)
!6437 = !DILocation(line: 5635, column: 83, scope: !6438)
!6438 = !DILexicalBlockFile(scope: !6429, file: !175, discriminator: 4)
!6439 = !DILocation(line: 5635, column: 15, scope: !6440)
!6440 = !DILexicalBlockFile(scope: !6429, file: !175, discriminator: 5)
!6441 = !DILocation(line: 5635, column: 122, scope: !6442)
!6442 = !DILexicalBlockFile(scope: !6429, file: !175, discriminator: 6)
!6443 = !DILocation(line: 5635, column: 178, scope: !6429)
!6444 = !DILocation(line: 5636, column: 10, scope: !6426)
!6445 = !DILocation(line: 5636, column: 17, scope: !6426)
!6446 = !DILocation(line: 5636, column: 30, scope: !6426)
!6447 = !DILocation(line: 5637, column: 12, scope: !6426)
!6448 = !DILocation(line: 5637, column: 19, scope: !6426)
!6449 = !DILocation(line: 5637, column: 46, scope: !6426)
!6450 = !DILocation(line: 5637, column: 35, scope: !6426)
!6451 = !DILocation(line: 5637, column: 54, scope: !6426)
!6452 = !DILocation(line: 5637, column: 61, scope: !6426)
!6453 = !DILocation(line: 5637, column: 10, scope: !6454)
!6454 = !DILexicalBlockFile(scope: !6426, file: !175, discriminator: 1)
!6455 = !DILocation(line: 5638, column: 7, scope: !6426)
!6456 = !DILocation(line: 5641, column: 26, scope: !6362)
!6457 = !DILocation(line: 5641, column: 4, scope: !6362)
!6458 = !DILocation(line: 5642, column: 1, scope: !6362)
!6459 = distinct !DISubprogram(name: "Hostinfo_SystemTimerUS", scope: !2022, file: !2022, line: 73, type: !2023, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6460 = !DILocation(line: 75, column: 11, scope: !6459)
!6461 = !DILocation(line: 75, column: 36, scope: !6459)
!6462 = !DILocation(line: 75, column: 4, scope: !6459)
!6463 = distinct !DISubprogram(name: "AsyncTCPSocketWriteBuffers", scope: !175, file: !175, line: 3458, type: !2231, isLocal: true, isDefinition: true, scopeLine: 3459, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6464 = !DILocalVariable(name: "s", arg: 1, scope: !6463, file: !175, line: 3458, type: !173)
!6465 = !DILocation(line: 3458, column: 44, scope: !6463)
!6466 = !DILocalVariable(name: "result", scope: !6463, file: !175, line: 3460, type: !165)
!6467 = !DILocation(line: 3460, column: 8, scope: !6463)
!6468 = !DILocation(line: 3464, column: 8, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6463, file: !175, line: 3464, column: 8)
!6470 = !DILocation(line: 3464, column: 11, scope: !6469)
!6471 = !DILocation(line: 3464, column: 23, scope: !6469)
!6472 = !DILocation(line: 3464, column: 8, scope: !6463)
!6473 = !DILocation(line: 3465, column: 7, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6469, file: !175, line: 3464, column: 31)
!6475 = !DILocation(line: 3468, column: 31, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6463, file: !175, line: 3468, column: 8)
!6477 = !DILocation(line: 3468, column: 8, scope: !6476)
!6478 = !DILocation(line: 3468, column: 34, scope: !6476)
!6479 = !DILocation(line: 3468, column: 8, scope: !6463)
!6480 = !DILocation(line: 3469, column: 7, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6476, file: !175, line: 3468, column: 59)
!6482 = distinct !{!6482, !6480}
!6483 = !DILocation(line: 3469, column: 71, scope: !6484)
!6484 = !DILexicalBlockFile(scope: !6485, file: !175, discriminator: 1)
!6485 = distinct !DILexicalBlock(scope: !6481, file: !175, line: 3469, column: 10)
!6486 = !DILocation(line: 3469, column: 60, scope: !6484)
!6487 = !DILocation(line: 3469, column: 42, scope: !6488)
!6488 = !DILexicalBlockFile(scope: !6484, file: !175, discriminator: 2)
!6489 = !DILocation(line: 3469, column: 105, scope: !6484)
!6490 = !DILocation(line: 3469, column: 94, scope: !6491)
!6491 = !DILexicalBlockFile(scope: !6484, file: !175, discriminator: 3)
!6492 = !DILocation(line: 3469, column: 76, scope: !6493)
!6493 = !DILexicalBlockFile(scope: !6484, file: !175, discriminator: 4)
!6494 = !DILocation(line: 3469, column: 12, scope: !6495)
!6495 = !DILexicalBlockFile(scope: !6484, file: !175, discriminator: 5)
!6496 = !DILocation(line: 3469, column: 111, scope: !6497)
!6497 = !DILexicalBlockFile(scope: !6484, file: !175, discriminator: 6)
!6498 = !DILocation(line: 3469, column: 166, scope: !6484)
!6499 = !DILocation(line: 3470, column: 7, scope: !6481)
!6500 = !DILocation(line: 3473, column: 25, scope: !6463)
!6501 = !DILocation(line: 3473, column: 4, scope: !6463)
!6502 = !DILocation(line: 3475, column: 4, scope: !6463)
!6503 = !DILocation(line: 3475, column: 11, scope: !6504)
!6504 = !DILexicalBlockFile(scope: !6463, file: !175, discriminator: 1)
!6505 = !DILocation(line: 3475, column: 14, scope: !6504)
!6506 = !DILocation(line: 3475, column: 26, scope: !6504)
!6507 = !DILocation(line: 3475, column: 52, scope: !6508)
!6508 = !DILexicalBlockFile(scope: !6463, file: !175, discriminator: 2)
!6509 = !DILocation(line: 3475, column: 29, scope: !6508)
!6510 = !DILocation(line: 3475, column: 55, scope: !6508)
!6511 = !DILocation(line: 3475, column: 4, scope: !6512)
!6512 = !DILexicalBlockFile(scope: !6463, file: !175, discriminator: 3)
!6513 = !DILocalVariable(name: "head", scope: !6514, file: !175, line: 3476, type: !419)
!6514 = distinct !DILexicalBlock(scope: !6463, file: !175, line: 3475, column: 80)
!6515 = !DILocation(line: 3476, column: 20, scope: !6514)
!6516 = !DILocation(line: 3476, column: 27, scope: !6514)
!6517 = !DILocation(line: 3476, column: 30, scope: !6514)
!6518 = !DILocalVariable(name: "error", scope: !6514, file: !175, line: 3477, type: !165)
!6519 = !DILocation(line: 3477, column: 11, scope: !6514)
!6520 = !DILocalVariable(name: "sent", scope: !6514, file: !175, line: 3478, type: !165)
!6521 = !DILocation(line: 3478, column: 11, scope: !6514)
!6522 = !DILocalVariable(name: "left", scope: !6514, file: !175, line: 3479, type: !165)
!6523 = !DILocation(line: 3479, column: 11, scope: !6514)
!6524 = !DILocation(line: 3479, column: 18, scope: !6514)
!6525 = !DILocation(line: 3479, column: 24, scope: !6514)
!6526 = !DILocation(line: 3479, column: 30, scope: !6514)
!6527 = !DILocation(line: 3479, column: 33, scope: !6514)
!6528 = !DILocation(line: 3479, column: 28, scope: !6514)
!6529 = !DILocalVariable(name: "sizeToSend", scope: !6514, file: !175, line: 3480, type: !165)
!6530 = !DILocation(line: 3480, column: 11, scope: !6514)
!6531 = !DILocation(line: 3480, column: 24, scope: !6514)
!6532 = !DILocation(line: 3480, column: 30, scope: !6514)
!6533 = !DILocation(line: 3482, column: 24, scope: !6514)
!6534 = !DILocation(line: 3482, column: 27, scope: !6514)
!6535 = !DILocation(line: 3483, column: 34, scope: !6514)
!6536 = !DILocation(line: 3483, column: 40, scope: !6514)
!6537 = !DILocation(line: 3483, column: 46, scope: !6514)
!6538 = !DILocation(line: 3483, column: 49, scope: !6514)
!6539 = !DILocation(line: 3483, column: 44, scope: !6514)
!6540 = !DILocation(line: 3483, column: 58, scope: !6514)
!6541 = !DILocation(line: 3482, column: 14, scope: !6514)
!6542 = !DILocation(line: 3482, column: 12, scope: !6514)
!6543 = !DILocation(line: 3488, column: 11, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6514, file: !175, line: 3488, column: 11)
!6545 = !DILocation(line: 3488, column: 16, scope: !6544)
!6546 = !DILocation(line: 3488, column: 11, scope: !6514)
!6547 = !DILocation(line: 3489, column: 10, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6544, file: !175, line: 3488, column: 21)
!6549 = distinct !{!6549, !6547}
!6550 = !DILocation(line: 3489, column: 206, scope: !6551)
!6551 = !DILexicalBlockFile(scope: !6552, file: !175, discriminator: 1)
!6552 = distinct !DILexicalBlock(scope: !6548, file: !175, line: 3489, column: 13)
!6553 = !DILocation(line: 3491, column: 10, scope: !6548)
!6554 = !DILocation(line: 3491, column: 13, scope: !6548)
!6555 = !DILocation(line: 3491, column: 25, scope: !6548)
!6556 = !DILocation(line: 3492, column: 10, scope: !6548)
!6557 = !DILocation(line: 3492, column: 13, scope: !6548)
!6558 = !DILocation(line: 3492, column: 26, scope: !6548)
!6559 = !DILocation(line: 3493, column: 29, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6548, file: !175, line: 3493, column: 14)
!6561 = !DILocation(line: 3493, column: 15, scope: !6560)
!6562 = !DILocation(line: 3493, column: 18, scope: !6560)
!6563 = !DILocation(line: 3493, column: 26, scope: !6560)
!6564 = !DILocation(line: 3493, column: 38, scope: !6560)
!6565 = !DILocation(line: 3493, column: 35, scope: !6560)
!6566 = !DILocation(line: 3493, column: 14, scope: !6548)
!6567 = !DILocation(line: 3494, column: 55, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6560, file: !175, line: 3493, column: 50)
!6569 = !DILocation(line: 3494, column: 22, scope: !6568)
!6570 = !DILocation(line: 3494, column: 20, scope: !6568)
!6571 = !DILocation(line: 3495, column: 17, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6568, file: !175, line: 3495, column: 17)
!6573 = !DILocation(line: 3495, column: 24, scope: !6572)
!6574 = !DILocation(line: 3495, column: 17, scope: !6568)
!6575 = !DILocation(line: 3496, column: 16, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6572, file: !175, line: 3495, column: 30)
!6577 = !DILocation(line: 3498, column: 10, scope: !6568)
!6578 = !DILocation(line: 3499, column: 7, scope: !6548)
!6579 = !DILocation(line: 3499, column: 18, scope: !6580)
!6580 = !DILexicalBlockFile(scope: !6581, file: !175, discriminator: 1)
!6581 = distinct !DILexicalBlock(scope: !6544, file: !175, line: 3499, column: 18)
!6582 = !DILocation(line: 3499, column: 23, scope: !6580)
!6583 = !DILocation(line: 3500, column: 10, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6581, file: !175, line: 3499, column: 29)
!6585 = distinct !{!6585, !6583}
!6586 = !DILocation(line: 3500, column: 70, scope: !6587)
!6587 = !DILexicalBlockFile(scope: !6588, file: !175, discriminator: 1)
!6588 = distinct !DILexicalBlock(scope: !6584, file: !175, line: 3500, column: 13)
!6589 = !DILocation(line: 3500, column: 59, scope: !6587)
!6590 = !DILocation(line: 3500, column: 41, scope: !6591)
!6591 = !DILexicalBlockFile(scope: !6587, file: !175, discriminator: 2)
!6592 = !DILocation(line: 3500, column: 104, scope: !6587)
!6593 = !DILocation(line: 3500, column: 93, scope: !6594)
!6594 = !DILexicalBlockFile(scope: !6587, file: !175, discriminator: 3)
!6595 = !DILocation(line: 3500, column: 75, scope: !6596)
!6596 = !DILexicalBlockFile(scope: !6587, file: !175, discriminator: 4)
!6597 = !DILocation(line: 3500, column: 15, scope: !6598)
!6598 = !DILexicalBlockFile(scope: !6587, file: !175, discriminator: 5)
!6599 = !DILocation(line: 3500, column: 110, scope: !6600)
!6600 = !DILexicalBlockFile(scope: !6587, file: !175, discriminator: 6)
!6601 = !DILocation(line: 3500, column: 159, scope: !6587)
!6602 = !DILocation(line: 3501, column: 10, scope: !6584)
!6603 = !DILocation(line: 3502, column: 28, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6581, file: !175, line: 3502, column: 18)
!6605 = !DILocation(line: 3502, column: 27, scope: !6604)
!6606 = !DILocation(line: 3502, column: 25, scope: !6604)
!6607 = !DILocation(line: 3502, column: 45, scope: !6604)
!6608 = !DILocation(line: 3502, column: 18, scope: !6581)
!6609 = !DILocation(line: 3503, column: 10, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6604, file: !175, line: 3502, column: 67)
!6611 = distinct !{!6611, !6609}
!6612 = !DILocation(line: 3503, column: 70, scope: !6613)
!6613 = !DILexicalBlockFile(scope: !6614, file: !175, discriminator: 1)
!6614 = distinct !DILexicalBlock(scope: !6610, file: !175, line: 3503, column: 13)
!6615 = !DILocation(line: 3503, column: 59, scope: !6613)
!6616 = !DILocation(line: 3503, column: 41, scope: !6617)
!6617 = !DILexicalBlockFile(scope: !6613, file: !175, discriminator: 2)
!6618 = !DILocation(line: 3503, column: 104, scope: !6613)
!6619 = !DILocation(line: 3503, column: 93, scope: !6620)
!6620 = !DILexicalBlockFile(scope: !6613, file: !175, discriminator: 3)
!6621 = !DILocation(line: 3503, column: 75, scope: !6622)
!6622 = !DILexicalBlockFile(scope: !6613, file: !175, discriminator: 4)
!6623 = !DILocation(line: 3503, column: 15, scope: !6624)
!6624 = !DILexicalBlockFile(scope: !6613, file: !175, discriminator: 5)
!6625 = !DILocation(line: 3503, column: 138, scope: !6613)
!6626 = !DILocation(line: 3503, column: 162, scope: !6613)
!6627 = !DILocation(line: 3503, column: 145, scope: !6628)
!6628 = !DILexicalBlockFile(scope: !6613, file: !175, discriminator: 6)
!6629 = !DILocation(line: 3503, column: 110, scope: !6630)
!6630 = !DILexicalBlockFile(scope: !6613, file: !175, discriminator: 7)
!6631 = !DILocation(line: 3503, column: 171, scope: !6613)
!6632 = !DILocation(line: 3504, column: 28, scope: !6610)
!6633 = !DILocation(line: 3504, column: 10, scope: !6610)
!6634 = !DILocation(line: 3504, column: 13, scope: !6610)
!6635 = !DILocation(line: 3504, column: 26, scope: !6610)
!6636 = !DILocation(line: 3505, column: 14, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6610, file: !175, line: 3505, column: 14)
!6638 = !DILocation(line: 3505, column: 20, scope: !6637)
!6639 = !DILocation(line: 3505, column: 34, scope: !6637)
!6640 = !DILocation(line: 3505, column: 37, scope: !6641)
!6641 = !DILexicalBlockFile(scope: !6637, file: !175, discriminator: 1)
!6642 = !DILocation(line: 3505, column: 43, scope: !6641)
!6643 = !DILocation(line: 3505, column: 14, scope: !6641)
!6644 = !DILocation(line: 3506, column: 20, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6637, file: !175, line: 3505, column: 64)
!6646 = !DILocation(line: 3507, column: 10, scope: !6645)
!6647 = !DILocation(line: 3508, column: 20, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6637, file: !175, line: 3507, column: 17)
!6649 = !DILocation(line: 3510, column: 10, scope: !6610)
!6650 = !DILocation(line: 3520, column: 10, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6604, file: !175, line: 3511, column: 14)
!6652 = !DILocation(line: 3520, column: 13, scope: !6651)
!6653 = !DILocation(line: 3520, column: 25, scope: !6651)
!6654 = !DILocation(line: 3521, column: 10, scope: !6651)
!6655 = !DILocation(line: 3475, column: 4, scope: !6656)
!6656 = !DILexicalBlockFile(scope: !6463, file: !175, discriminator: 4)
!6657 = distinct !{!6657, !6502}
!6658 = !DILocation(line: 3525, column: 11, scope: !6463)
!6659 = !DILocation(line: 3525, column: 4, scope: !6463)
!6660 = !DILocation(line: 3528, column: 26, scope: !6463)
!6661 = !DILocation(line: 3528, column: 4, scope: !6463)
!6662 = !DILocation(line: 3530, column: 11, scope: !6463)
!6663 = !DILocation(line: 3530, column: 4, scope: !6463)
!6664 = !DILocation(line: 3531, column: 1, scope: !6463)
!6665 = distinct !DISubprogram(name: "AsyncTCPSocketDispatchSentBuffer", scope: !175, file: !175, line: 3399, type: !2231, isLocal: true, isDefinition: true, scopeLine: 3400, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6666 = !DILocalVariable(name: "s", arg: 1, scope: !6665, file: !175, line: 3399, type: !173)
!6667 = !DILocation(line: 3399, column: 50, scope: !6665)
!6668 = !DILocalVariable(name: "result", scope: !6665, file: !175, line: 3401, type: !165)
!6669 = !DILocation(line: 3401, column: 8, scope: !6665)
!6670 = !DILocalVariable(name: "head", scope: !6665, file: !175, line: 3409, type: !419)
!6671 = !DILocation(line: 3409, column: 17, scope: !6665)
!6672 = !DILocation(line: 3409, column: 24, scope: !6665)
!6673 = !DILocation(line: 3409, column: 27, scope: !6665)
!6674 = !DILocalVariable(name: "tmp", scope: !6665, file: !175, line: 3410, type: !420)
!6675 = !DILocation(line: 3410, column: 16, scope: !6665)
!6676 = !DILocation(line: 3410, column: 23, scope: !6665)
!6677 = !DILocation(line: 3410, column: 22, scope: !6665)
!6678 = !DILocation(line: 3412, column: 21, scope: !6665)
!6679 = !DILocation(line: 3412, column: 27, scope: !6665)
!6680 = !DILocation(line: 3412, column: 4, scope: !6665)
!6681 = !DILocation(line: 3412, column: 7, scope: !6665)
!6682 = !DILocation(line: 3412, column: 19, scope: !6665)
!6683 = !DILocation(line: 3413, column: 8, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6665, file: !175, line: 3413, column: 8)
!6685 = !DILocation(line: 3413, column: 11, scope: !6684)
!6686 = !DILocation(line: 3413, column: 23, scope: !6684)
!6687 = !DILocation(line: 3413, column: 8, scope: !6665)
!6688 = !DILocation(line: 3414, column: 26, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6684, file: !175, line: 3413, column: 31)
!6690 = !DILocation(line: 3414, column: 29, scope: !6689)
!6691 = !DILocation(line: 3414, column: 7, scope: !6689)
!6692 = !DILocation(line: 3414, column: 10, scope: !6689)
!6693 = !DILocation(line: 3414, column: 22, scope: !6689)
!6694 = !DILocation(line: 3415, column: 4, scope: !6689)
!6695 = !DILocation(line: 3416, column: 4, scope: !6665)
!6696 = !DILocation(line: 3416, column: 7, scope: !6665)
!6697 = !DILocation(line: 3416, column: 15, scope: !6665)
!6698 = !DILocation(line: 3417, column: 9, scope: !6665)
!6699 = !DILocation(line: 3417, column: 4, scope: !6665)
!6700 = !DILocation(line: 3419, column: 12, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6665, file: !175, line: 3419, column: 8)
!6702 = !DILocation(line: 3419, column: 8, scope: !6701)
!6703 = !DILocation(line: 3419, column: 8, scope: !6665)
!6704 = !DILocation(line: 3428, column: 11, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6701, file: !175, line: 3419, column: 20)
!6706 = !DILocation(line: 3428, column: 22, scope: !6705)
!6707 = !DILocation(line: 3428, column: 31, scope: !6705)
!6708 = !DILocation(line: 3428, column: 47, scope: !6705)
!6709 = !DILocation(line: 3428, column: 36, scope: !6705)
!6710 = !DILocation(line: 3428, column: 55, scope: !6705)
!6711 = !DILocation(line: 3428, column: 7, scope: !6712)
!6712 = !DILexicalBlockFile(scope: !6705, file: !175, discriminator: 1)
!6713 = !DILocation(line: 3429, column: 34, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6705, file: !175, line: 3429, column: 11)
!6715 = !DILocation(line: 3429, column: 11, scope: !6714)
!6716 = !DILocation(line: 3429, column: 37, scope: !6714)
!6717 = !DILocation(line: 3429, column: 11, scope: !6705)
!6718 = !DILocation(line: 3430, column: 10, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6714, file: !175, line: 3429, column: 59)
!6720 = distinct !{!6720, !6718}
!6721 = !DILocation(line: 3430, column: 70, scope: !6722)
!6722 = !DILexicalBlockFile(scope: !6723, file: !175, discriminator: 1)
!6723 = distinct !DILexicalBlock(scope: !6719, file: !175, line: 3430, column: 13)
!6724 = !DILocation(line: 3430, column: 59, scope: !6722)
!6725 = !DILocation(line: 3430, column: 41, scope: !6726)
!6726 = !DILexicalBlockFile(scope: !6722, file: !175, discriminator: 2)
!6727 = !DILocation(line: 3430, column: 104, scope: !6722)
!6728 = !DILocation(line: 3430, column: 93, scope: !6729)
!6729 = !DILexicalBlockFile(scope: !6722, file: !175, discriminator: 3)
!6730 = !DILocation(line: 3430, column: 75, scope: !6731)
!6731 = !DILexicalBlockFile(scope: !6722, file: !175, discriminator: 4)
!6732 = !DILocation(line: 3430, column: 15, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6722, file: !175, discriminator: 5)
!6734 = !DILocation(line: 3430, column: 110, scope: !6735)
!6735 = !DILexicalBlockFile(scope: !6722, file: !175, discriminator: 6)
!6736 = !DILocation(line: 3430, column: 162, scope: !6722)
!6737 = !DILocation(line: 3431, column: 17, scope: !6719)
!6738 = !DILocation(line: 3432, column: 7, scope: !6719)
!6739 = !DILocation(line: 3433, column: 4, scope: !6705)
!6740 = !DILocation(line: 3435, column: 11, scope: !6665)
!6741 = !DILocation(line: 3435, column: 4, scope: !6665)
!6742 = distinct !DISubprogram(name: "AsyncTCPSocketCancelListenCb", scope: !175, file: !175, line: 4233, type: !2039, isLocal: true, isDefinition: true, scopeLine: 4234, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6743 = !DILocalVariable(name: "asock", arg: 1, scope: !6742, file: !175, line: 4233, type: !173)
!6744 = !DILocation(line: 4233, column: 46, scope: !6742)
!6745 = !DILocalVariable(name: "removed", scope: !6742, file: !175, line: 4235, type: !168)
!6746 = !DILocation(line: 4235, column: 9, scope: !6742)
!6747 = !DILocation(line: 4239, column: 39, scope: !6742)
!6748 = !DILocation(line: 4239, column: 14, scope: !6742)
!6749 = !DILocation(line: 4239, column: 12, scope: !6742)
!6750 = !DILocation(line: 4243, column: 1, scope: !6742)
!6751 = distinct !DISubprogram(name: "AsyncTCPSocketCancelCbForConnectingClose", scope: !175, file: !175, line: 4468, type: !2029, isLocal: true, isDefinition: true, scopeLine: 4469, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6752 = !DILocalVariable(name: "asock", arg: 1, scope: !6751, file: !175, line: 4468, type: !173)
!6753 = !DILocation(line: 4468, column: 58, scope: !6751)
!6754 = !DILocation(line: 4470, column: 37, scope: !6751)
!6755 = !DILocation(line: 4470, column: 12, scope: !6751)
!6756 = !DILocation(line: 4471, column: 68, scope: !6751)
!6757 = !DILocation(line: 4472, column: 37, scope: !6751)
!6758 = !DILocation(line: 4472, column: 12, scope: !6751)
!6759 = !DILocation(line: 4471, column: 68, scope: !6760)
!6760 = !DILexicalBlockFile(scope: !6751, file: !175, discriminator: 1)
!6761 = !DILocation(line: 4471, column: 68, scope: !6762)
!6762 = !DILexicalBlockFile(scope: !6751, file: !175, discriminator: 2)
!6763 = !DILocation(line: 4470, column: 11, scope: !6760)
!6764 = !DILocation(line: 4470, column: 4, scope: !6760)
!6765 = distinct !DISubprogram(name: "AsyncTCPSocketPollRemove", scope: !175, file: !175, line: 5130, type: !6766, isLocal: true, isDefinition: true, scopeLine: 5134, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6766 = !DISubroutineType(types: !6767)
!6767 = !{!168, !173, !168, !165, !407}
!6768 = !DILocalVariable(name: "asock", arg: 1, scope: !6765, file: !175, line: 5130, type: !173)
!6769 = !DILocation(line: 5130, column: 42, scope: !6765)
!6770 = !DILocalVariable(name: "socket", arg: 2, scope: !6765, file: !175, line: 5131, type: !168)
!6771 = !DILocation(line: 5131, column: 31, scope: !6765)
!6772 = !DILocalVariable(name: "flags", arg: 3, scope: !6765, file: !175, line: 5132, type: !165)
!6773 = !DILocation(line: 5132, column: 30, scope: !6765)
!6774 = !DILocalVariable(name: "callback", arg: 4, scope: !6765, file: !175, line: 5133, type: !407)
!6775 = !DILocation(line: 5133, column: 41, scope: !6765)
!6776 = !DILocalVariable(name: "type", scope: !6765, file: !175, line: 5135, type: !165)
!6777 = !DILocation(line: 5135, column: 8, scope: !6765)
!6778 = !DILocation(line: 5137, column: 33, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6765, file: !175, line: 5137, column: 8)
!6780 = !DILocation(line: 5137, column: 8, scope: !6779)
!6781 = !DILocation(line: 5137, column: 41, scope: !6779)
!6782 = !DILocation(line: 5137, column: 47, scope: !6779)
!6783 = !DILocation(line: 5137, column: 8, scope: !6765)
!6784 = !DILocation(line: 5138, column: 40, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6779, file: !175, line: 5137, column: 55)
!6786 = !DILocation(line: 5138, column: 47, scope: !6785)
!6787 = !DILocation(line: 5138, column: 55, scope: !6785)
!6788 = !DILocation(line: 5138, column: 62, scope: !6785)
!6789 = !DILocation(line: 5138, column: 14, scope: !6785)
!6790 = !DILocation(line: 5138, column: 7, scope: !6785)
!6791 = !DILocation(line: 5141, column: 8, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6765, file: !175, line: 5141, column: 8)
!6793 = !DILocation(line: 5141, column: 8, scope: !6765)
!6794 = !DILocation(line: 5143, column: 12, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6792, file: !175, line: 5141, column: 16)
!6796 = !DILocation(line: 5144, column: 13, scope: !6795)
!6797 = !DILocation(line: 5145, column: 4, scope: !6795)
!6798 = !DILocation(line: 5146, column: 12, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6792, file: !175, line: 5145, column: 11)
!6800 = !DILocation(line: 5149, column: 56, scope: !6765)
!6801 = !DILocation(line: 5149, column: 31, scope: !6765)
!6802 = !DILocation(line: 5149, column: 64, scope: !6765)
!6803 = !DILocation(line: 5150, column: 31, scope: !6765)
!6804 = !DILocation(line: 5150, column: 64, scope: !6765)
!6805 = !DILocation(line: 5150, column: 39, scope: !6765)
!6806 = !DILocation(line: 5150, column: 72, scope: !6765)
!6807 = !DILocation(line: 5150, column: 37, scope: !6765)
!6808 = !DILocation(line: 5151, column: 31, scope: !6765)
!6809 = !DILocation(line: 5151, column: 41, scope: !6765)
!6810 = !DILocation(line: 5151, column: 48, scope: !6765)
!6811 = !DILocation(line: 5149, column: 11, scope: !6765)
!6812 = !DILocation(line: 5149, column: 11, scope: !6813)
!6813 = !DILexicalBlockFile(scope: !6765, file: !175, discriminator: 1)
!6814 = !DILocation(line: 5149, column: 4, scope: !6765)
!6815 = !DILocation(line: 5152, column: 1, scope: !6765)
!6816 = distinct !DISubprogram(name: "AsyncTCPSocketConnectErrorCheck", scope: !175, file: !175, line: 1880, type: !409, isLocal: true, isDefinition: true, scopeLine: 1881, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6817 = !DILocalVariable(name: "data", arg: 1, scope: !6816, file: !175, line: 1880, type: !80)
!6818 = !DILocation(line: 1880, column: 39, scope: !6816)
!6819 = !DILocalVariable(name: "asock", scope: !6816, file: !175, line: 1882, type: !173)
!6820 = !DILocation(line: 1882, column: 20, scope: !6816)
!6821 = !DILocation(line: 1882, column: 28, scope: !6816)
!6822 = !DILocalVariable(name: "removed", scope: !6816, file: !175, line: 1883, type: !168)
!6823 = !DILocation(line: 1883, column: 9, scope: !6816)
!6824 = !DILocalVariable(name: "func", scope: !6816, file: !175, line: 1884, type: !407)
!6825 = !DILocation(line: 1884, column: 19, scope: !6816)
!6826 = !DILocation(line: 1888, column: 31, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6816, file: !175, line: 1888, column: 8)
!6828 = !DILocation(line: 1888, column: 8, scope: !6827)
!6829 = !DILocation(line: 1888, column: 38, scope: !6827)
!6830 = !DILocation(line: 1888, column: 8, scope: !6816)
!6831 = !DILocalVariable(name: "sockErr", scope: !6832, file: !175, line: 1889, type: !165)
!6832 = distinct !DILexicalBlock(scope: !6827, file: !175, line: 1888, column: 64)
!6833 = !DILocation(line: 1889, column: 11, scope: !6832)
!6834 = !DILocalVariable(name: "sockErrLen", scope: !6832, file: !175, line: 1890, type: !165)
!6835 = !DILocation(line: 1890, column: 11, scope: !6832)
!6836 = !DILocation(line: 1892, column: 22, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6832, file: !175, line: 1892, column: 11)
!6838 = !DILocation(line: 1892, column: 29, scope: !6837)
!6839 = !DILocation(line: 1892, column: 54, scope: !6837)
!6840 = !DILocation(line: 1893, column: 22, scope: !6837)
!6841 = !DILocation(line: 1892, column: 11, scope: !6837)
!6842 = !DILocation(line: 1893, column: 43, scope: !6837)
!6843 = !DILocation(line: 1892, column: 11, scope: !6832)
!6844 = !DILocation(line: 1894, column: 14, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !175, line: 1894, column: 14)
!6846 = distinct !DILexicalBlock(scope: !6837, file: !175, line: 1893, column: 49)
!6847 = !DILocation(line: 1894, column: 22, scope: !6845)
!6848 = !DILocation(line: 1894, column: 14, scope: !6846)
!6849 = !DILocation(line: 1896, column: 13, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6845, file: !175, line: 1894, column: 28)
!6851 = !DILocation(line: 1898, column: 32, scope: !6846)
!6852 = !DILocation(line: 1898, column: 10, scope: !6846)
!6853 = !DILocation(line: 1898, column: 17, scope: !6846)
!6854 = !DILocation(line: 1898, column: 30, scope: !6846)
!6855 = !DILocation(line: 1899, column: 7, scope: !6846)
!6856 = !DILocation(line: 1900, column: 33, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6837, file: !175, line: 1899, column: 14)
!6858 = !DILocation(line: 1900, column: 32, scope: !6857)
!6859 = !DILocation(line: 1900, column: 10, scope: !6857)
!6860 = !DILocation(line: 1900, column: 17, scope: !6857)
!6861 = !DILocation(line: 1900, column: 30, scope: !6857)
!6862 = !DILocation(line: 1902, column: 7, scope: !6832)
!6863 = distinct !{!6863, !6862}
!6864 = !DILocation(line: 1902, column: 67, scope: !6865)
!6865 = !DILexicalBlockFile(scope: !6866, file: !175, discriminator: 1)
!6866 = distinct !DILexicalBlock(scope: !6832, file: !175, line: 1902, column: 10)
!6867 = !DILocation(line: 1902, column: 56, scope: !6865)
!6868 = !DILocation(line: 1902, column: 38, scope: !6869)
!6869 = !DILexicalBlockFile(scope: !6865, file: !175, discriminator: 2)
!6870 = !DILocation(line: 1902, column: 105, scope: !6865)
!6871 = !DILocation(line: 1902, column: 94, scope: !6872)
!6872 = !DILexicalBlockFile(scope: !6865, file: !175, discriminator: 3)
!6873 = !DILocation(line: 1902, column: 76, scope: !6874)
!6874 = !DILexicalBlockFile(scope: !6865, file: !175, discriminator: 4)
!6875 = !DILocation(line: 1902, column: 12, scope: !6876)
!6876 = !DILexicalBlockFile(scope: !6865, file: !175, discriminator: 5)
!6877 = !DILocation(line: 1902, column: 164, scope: !6865)
!6878 = !DILocation(line: 1902, column: 171, scope: !6865)
!6879 = !DILocation(line: 1902, column: 147, scope: !6880)
!6880 = !DILexicalBlockFile(scope: !6865, file: !175, discriminator: 6)
!6881 = !DILocation(line: 1902, column: 115, scope: !6882)
!6882 = !DILexicalBlockFile(scope: !6865, file: !175, discriminator: 7)
!6883 = !DILocation(line: 1902, column: 187, scope: !6865)
!6884 = !DILocation(line: 1905, column: 42, scope: !6832)
!6885 = !DILocation(line: 1906, column: 39, scope: !6832)
!6886 = !DILocation(line: 1906, column: 46, scope: !6832)
!6887 = !DILocation(line: 1905, column: 17, scope: !6832)
!6888 = !DILocation(line: 1905, column: 15, scope: !6832)
!6889 = !DILocation(line: 1908, column: 14, scope: !6832)
!6890 = !DILocation(line: 1908, column: 21, scope: !6832)
!6891 = !DILocation(line: 1908, column: 12, scope: !6832)
!6892 = !DILocation(line: 1909, column: 4, scope: !6832)
!6893 = !DILocation(line: 1912, column: 39, scope: !6816)
!6894 = !DILocation(line: 1912, column: 14, scope: !6816)
!6895 = !DILocation(line: 1912, column: 12, scope: !6816)
!6896 = !DILocation(line: 1915, column: 4, scope: !6816)
!6897 = !DILocation(line: 1915, column: 11, scope: !6816)
!6898 = !DILocation(line: 1915, column: 29, scope: !6816)
!6899 = !DILocation(line: 1917, column: 8, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6816, file: !175, line: 1917, column: 8)
!6901 = !DILocation(line: 1917, column: 8, scope: !6816)
!6902 = !DILocation(line: 1918, column: 7, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6900, file: !175, line: 1917, column: 14)
!6904 = !DILocation(line: 1918, column: 12, scope: !6903)
!6905 = !DILocation(line: 1919, column: 4, scope: !6903)
!6906 = !DILocation(line: 1920, column: 1, scope: !6816)
!6907 = distinct !DISubprogram(name: "AsyncTCPSocketSslConnectCallback", scope: !175, file: !175, line: 5480, type: !409, isLocal: true, isDefinition: true, scopeLine: 5481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6908 = !DILocalVariable(name: "clientData", arg: 1, scope: !6907, file: !175, line: 5480, type: !80)
!6909 = !DILocation(line: 5480, column: 40, scope: !6907)
!6910 = !DILocation(line: 5518, column: 4, scope: !6907)
!6911 = !DILocation(line: 5520, column: 1, scope: !6907)
!6912 = distinct !DISubprogram(name: "AsyncTCPSocketIPollRemove", scope: !175, file: !175, line: 5242, type: !6766, isLocal: true, isDefinition: true, scopeLine: 5246, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6913 = !DILocalVariable(name: "asock", arg: 1, scope: !6912, file: !175, line: 5242, type: !173)
!6914 = !DILocation(line: 5242, column: 43, scope: !6912)
!6915 = !DILocalVariable(name: "socket", arg: 2, scope: !6912, file: !175, line: 5243, type: !168)
!6916 = !DILocation(line: 5243, column: 32, scope: !6912)
!6917 = !DILocalVariable(name: "flags", arg: 3, scope: !6912, file: !175, line: 5244, type: !165)
!6918 = !DILocation(line: 5244, column: 31, scope: !6912)
!6919 = !DILocalVariable(name: "callback", arg: 4, scope: !6912, file: !175, line: 5245, type: !407)
!6920 = !DILocation(line: 5245, column: 42, scope: !6912)
!6921 = !DILocation(line: 5248, column: 4, scope: !6912)
!6922 = distinct !DISubprogram(name: "AsyncTCPSocketBlockingWork", scope: !175, file: !175, line: 2884, type: !6923, isLocal: true, isDefinition: true, scopeLine: 2891, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{!165, !173, !168, !80, !165, !342, !165, !168}
!6925 = !DILocalVariable(name: "s", arg: 1, scope: !6922, file: !175, line: 2884, type: !173)
!6926 = !DILocation(line: 2884, column: 44, scope: !6922)
!6927 = !DILocalVariable(name: "read", arg: 2, scope: !6922, file: !175, line: 2885, type: !168)
!6928 = !DILocation(line: 2885, column: 33, scope: !6922)
!6929 = !DILocalVariable(name: "buf", arg: 3, scope: !6922, file: !175, line: 2886, type: !80)
!6930 = !DILocation(line: 2886, column: 34, scope: !6922)
!6931 = !DILocalVariable(name: "len", arg: 4, scope: !6922, file: !175, line: 2887, type: !165)
!6932 = !DILocation(line: 2887, column: 32, scope: !6922)
!6933 = !DILocalVariable(name: "completed", arg: 5, scope: !6922, file: !175, line: 2888, type: !342)
!6934 = !DILocation(line: 2888, column: 33, scope: !6922)
!6935 = !DILocalVariable(name: "timeoutMS", arg: 6, scope: !6922, file: !175, line: 2889, type: !165)
!6936 = !DILocation(line: 2889, column: 32, scope: !6922)
!6937 = !DILocalVariable(name: "partial", arg: 7, scope: !6922, file: !175, line: 2890, type: !168)
!6938 = !DILocation(line: 2890, column: 33, scope: !6922)
!6939 = !DILocalVariable(name: "now", scope: !6922, file: !175, line: 2892, type: !1792)
!6940 = !DILocation(line: 2892, column: 15, scope: !6922)
!6941 = !DILocalVariable(name: "done", scope: !6922, file: !175, line: 2892, type: !1792)
!6942 = !DILocation(line: 2892, column: 20, scope: !6922)
!6943 = !DILocalVariable(name: "sysErr", scope: !6922, file: !175, line: 2893, type: !165)
!6944 = !DILocation(line: 2893, column: 8, scope: !6922)
!6945 = !DILocation(line: 2895, column: 8, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6922, file: !175, line: 2895, column: 8)
!6947 = !DILocation(line: 2895, column: 10, scope: !6946)
!6948 = !DILocation(line: 2895, column: 17, scope: !6946)
!6949 = !DILocation(line: 2895, column: 20, scope: !6950)
!6950 = !DILexicalBlockFile(scope: !6946, file: !175, discriminator: 1)
!6951 = !DILocation(line: 2895, column: 24, scope: !6950)
!6952 = !DILocation(line: 2895, column: 32, scope: !6950)
!6953 = !DILocation(line: 2895, column: 35, scope: !6954)
!6954 = !DILexicalBlockFile(scope: !6946, file: !175, discriminator: 2)
!6955 = !DILocation(line: 2895, column: 39, scope: !6954)
!6956 = !DILocation(line: 2895, column: 8, scope: !6954)
!6957 = !DILocation(line: 2896, column: 7, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6946, file: !175, line: 2895, column: 45)
!6959 = !DILocation(line: 2898, column: 7, scope: !6958)
!6960 = !DILocation(line: 2901, column: 31, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6922, file: !175, line: 2901, column: 8)
!6962 = !DILocation(line: 2901, column: 8, scope: !6961)
!6963 = !DILocation(line: 2901, column: 34, scope: !6961)
!6964 = !DILocation(line: 2901, column: 8, scope: !6922)
!6965 = !DILocation(line: 2902, column: 7, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6961, file: !175, line: 2901, column: 59)
!6967 = distinct !{!6967, !6965}
!6968 = !DILocation(line: 2902, column: 71, scope: !6969)
!6969 = !DILexicalBlockFile(scope: !6970, file: !175, discriminator: 1)
!6970 = distinct !DILexicalBlock(scope: !6966, file: !175, line: 2902, column: 10)
!6971 = !DILocation(line: 2902, column: 60, scope: !6969)
!6972 = !DILocation(line: 2902, column: 42, scope: !6973)
!6973 = !DILexicalBlockFile(scope: !6969, file: !175, discriminator: 2)
!6974 = !DILocation(line: 2902, column: 105, scope: !6969)
!6975 = !DILocation(line: 2902, column: 94, scope: !6976)
!6976 = !DILexicalBlockFile(scope: !6969, file: !175, discriminator: 3)
!6977 = !DILocation(line: 2902, column: 76, scope: !6978)
!6978 = !DILexicalBlockFile(scope: !6969, file: !175, discriminator: 4)
!6979 = !DILocation(line: 2902, column: 12, scope: !6980)
!6980 = !DILexicalBlockFile(scope: !6969, file: !175, discriminator: 5)
!6981 = !DILocation(line: 2902, column: 111, scope: !6982)
!6982 = !DILexicalBlockFile(scope: !6969, file: !175, discriminator: 6)
!6983 = !DILocation(line: 2902, column: 166, scope: !6969)
!6984 = !DILocation(line: 2903, column: 7, scope: !6966)
!6985 = !DILocation(line: 2906, column: 8, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6922, file: !175, line: 2906, column: 8)
!6987 = !DILocation(line: 2906, column: 8, scope: !6922)
!6988 = !DILocation(line: 2907, column: 8, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6986, file: !175, line: 2906, column: 19)
!6990 = !DILocation(line: 2907, column: 18, scope: !6989)
!6991 = !DILocation(line: 2908, column: 4, scope: !6989)
!6992 = !DILocation(line: 2909, column: 10, scope: !6922)
!6993 = !DILocation(line: 2909, column: 35, scope: !6922)
!6994 = !DILocation(line: 2909, column: 8, scope: !6922)
!6995 = !DILocation(line: 2910, column: 11, scope: !6922)
!6996 = !DILocation(line: 2910, column: 17, scope: !6922)
!6997 = !DILocation(line: 2910, column: 15, scope: !6922)
!6998 = !DILocation(line: 2910, column: 9, scope: !6922)
!6999 = !DILocation(line: 2911, column: 4, scope: !6922)
!7000 = distinct !{!7000, !6999}
!7001 = !DILocalVariable(name: "numBytes", scope: !7002, file: !175, line: 2912, type: !165)
!7002 = distinct !DILexicalBlock(scope: !6922, file: !175, line: 2911, column: 7)
!7003 = !DILocation(line: 2912, column: 11, scope: !7002)
!7004 = !DILocalVariable(name: "error", scope: !7002, file: !175, line: 2912, type: !165)
!7005 = !DILocation(line: 2912, column: 21, scope: !7002)
!7006 = !DILocalVariable(name: "asock", scope: !7002, file: !175, line: 2913, type: !173)
!7007 = !DILocation(line: 2913, column: 23, scope: !7002)
!7008 = !DILocation(line: 2915, column: 23, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7002, file: !175, line: 2915, column: 11)
!7010 = !DILocation(line: 2915, column: 39, scope: !7011)
!7011 = !DILexicalBlockFile(scope: !7009, file: !175, discriminator: 1)
!7012 = !DILocation(line: 2915, column: 42, scope: !7011)
!7013 = !DILocation(line: 2915, column: 51, scope: !7011)
!7014 = !DILocation(line: 2915, column: 56, scope: !7011)
!7015 = !DILocation(line: 2915, column: 30, scope: !7011)
!7016 = !DILocation(line: 2915, column: 23, scope: !7011)
!7017 = !DILocation(line: 2916, column: 40, scope: !7009)
!7018 = !DILocation(line: 2916, column: 43, scope: !7009)
!7019 = !DILocation(line: 2916, column: 52, scope: !7009)
!7020 = !DILocation(line: 2916, column: 57, scope: !7009)
!7021 = !DILocation(line: 2916, column: 30, scope: !7009)
!7022 = !DILocation(line: 2915, column: 23, scope: !7023)
!7023 = !DILexicalBlockFile(scope: !7009, file: !175, discriminator: 2)
!7024 = !DILocation(line: 2915, column: 23, scope: !7025)
!7025 = !DILexicalBlockFile(scope: !7009, file: !175, discriminator: 3)
!7026 = !DILocation(line: 2915, column: 21, scope: !7025)
!7027 = !DILocation(line: 2916, column: 63, scope: !7011)
!7028 = !DILocation(line: 2915, column: 11, scope: !7025)
!7029 = !DILocation(line: 2917, column: 14, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !175, line: 2917, column: 14)
!7031 = distinct !DILexicalBlock(scope: !7009, file: !175, line: 2916, column: 68)
!7032 = !DILocation(line: 2917, column: 14, scope: !7031)
!7033 = !DILocation(line: 2918, column: 27, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7030, file: !175, line: 2917, column: 25)
!7035 = !DILocation(line: 2918, column: 14, scope: !7034)
!7036 = !DILocation(line: 2918, column: 24, scope: !7034)
!7037 = !DILocation(line: 2919, column: 10, scope: !7034)
!7038 = !DILocation(line: 2920, column: 17, scope: !7031)
!7039 = !DILocation(line: 2920, column: 14, scope: !7031)
!7040 = !DILocation(line: 2921, column: 14, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7031, file: !175, line: 2921, column: 14)
!7042 = !DILocation(line: 2921, column: 18, scope: !7041)
!7043 = !DILocation(line: 2921, column: 23, scope: !7041)
!7044 = !DILocation(line: 2921, column: 26, scope: !7045)
!7045 = !DILexicalBlockFile(scope: !7041, file: !175, discriminator: 1)
!7046 = !DILocation(line: 2921, column: 14, scope: !7045)
!7047 = !DILocation(line: 2922, column: 13, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7041, file: !175, line: 2921, column: 35)
!7049 = !DILocation(line: 2924, column: 24, scope: !7031)
!7050 = !DILocation(line: 2924, column: 30, scope: !7031)
!7051 = !DILocation(line: 2924, column: 28, scope: !7031)
!7052 = !DILocation(line: 2924, column: 14, scope: !7031)
!7053 = !DILocation(line: 2925, column: 7, scope: !7031)
!7054 = !DILocation(line: 2925, column: 18, scope: !7055)
!7055 = !DILexicalBlockFile(scope: !7056, file: !175, discriminator: 1)
!7056 = distinct !DILexicalBlock(scope: !7009, file: !175, line: 2925, column: 18)
!7057 = !DILocation(line: 2925, column: 27, scope: !7055)
!7058 = !DILocation(line: 2926, column: 10, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7056, file: !175, line: 2925, column: 33)
!7060 = distinct !{!7060, !7058}
!7061 = !DILocation(line: 2926, column: 70, scope: !7062)
!7062 = !DILexicalBlockFile(scope: !7063, file: !175, discriminator: 1)
!7063 = distinct !DILexicalBlock(scope: !7059, file: !175, line: 2926, column: 13)
!7064 = !DILocation(line: 2926, column: 59, scope: !7062)
!7065 = !DILocation(line: 2926, column: 41, scope: !7066)
!7066 = !DILexicalBlockFile(scope: !7062, file: !175, discriminator: 2)
!7067 = !DILocation(line: 2926, column: 104, scope: !7062)
!7068 = !DILocation(line: 2926, column: 93, scope: !7069)
!7069 = !DILexicalBlockFile(scope: !7062, file: !175, discriminator: 3)
!7070 = !DILocation(line: 2926, column: 75, scope: !7071)
!7071 = !DILexicalBlockFile(scope: !7062, file: !175, discriminator: 4)
!7072 = !DILocation(line: 2926, column: 15, scope: !7073)
!7073 = !DILexicalBlockFile(scope: !7062, file: !175, discriminator: 5)
!7074 = !DILocation(line: 2926, column: 164, scope: !7062)
!7075 = !DILocation(line: 2926, column: 110, scope: !7076)
!7076 = !DILexicalBlockFile(scope: !7062, file: !175, discriminator: 6)
!7077 = !DILocation(line: 2926, column: 189, scope: !7062)
!7078 = !DILocation(line: 2928, column: 10, scope: !7059)
!7079 = !DILocation(line: 2929, column: 29, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7056, file: !175, line: 2929, column: 18)
!7081 = !DILocation(line: 2929, column: 28, scope: !7080)
!7082 = !DILocation(line: 2929, column: 26, scope: !7080)
!7083 = !DILocation(line: 2929, column: 46, scope: !7080)
!7084 = !DILocation(line: 2929, column: 18, scope: !7056)
!7085 = !DILocation(line: 2930, column: 28, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7080, file: !175, line: 2929, column: 68)
!7087 = !DILocation(line: 2930, column: 10, scope: !7086)
!7088 = !DILocation(line: 2930, column: 13, scope: !7086)
!7089 = !DILocation(line: 2930, column: 26, scope: !7086)
!7090 = !DILocation(line: 2931, column: 10, scope: !7086)
!7091 = distinct !{!7091, !7090}
!7092 = !DILocation(line: 2931, column: 74, scope: !7093)
!7093 = !DILexicalBlockFile(scope: !7094, file: !175, discriminator: 1)
!7094 = distinct !DILexicalBlock(scope: !7086, file: !175, line: 2931, column: 13)
!7095 = !DILocation(line: 2931, column: 63, scope: !7093)
!7096 = !DILocation(line: 2931, column: 45, scope: !7097)
!7097 = !DILexicalBlockFile(scope: !7093, file: !175, discriminator: 2)
!7098 = !DILocation(line: 2931, column: 108, scope: !7093)
!7099 = !DILocation(line: 2931, column: 97, scope: !7100)
!7100 = !DILexicalBlockFile(scope: !7093, file: !175, discriminator: 3)
!7101 = !DILocation(line: 2931, column: 79, scope: !7102)
!7102 = !DILexicalBlockFile(scope: !7093, file: !175, discriminator: 4)
!7103 = !DILocation(line: 2931, column: 15, scope: !7104)
!7104 = !DILexicalBlockFile(scope: !7093, file: !175, discriminator: 5)
!7105 = !DILocation(line: 2931, column: 153, scope: !7093)
!7106 = !DILocation(line: 2931, column: 177, scope: !7093)
!7107 = !DILocation(line: 2931, column: 202, scope: !7093)
!7108 = !DILocation(line: 2931, column: 185, scope: !7109)
!7109 = !DILexicalBlockFile(scope: !7093, file: !175, discriminator: 6)
!7110 = !DILocation(line: 2931, column: 114, scope: !7111)
!7111 = !DILexicalBlockFile(scope: !7093, file: !175, discriminator: 7)
!7112 = !DILocation(line: 2931, column: 212, scope: !7093)
!7113 = !DILocation(line: 2934, column: 10, scope: !7086)
!7114 = !DILocation(line: 2937, column: 13, scope: !7002)
!7115 = !DILocation(line: 2937, column: 38, scope: !7002)
!7116 = !DILocation(line: 2937, column: 11, scope: !7002)
!7117 = !DILocation(line: 2938, column: 11, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7002, file: !175, line: 2938, column: 11)
!7119 = !DILocation(line: 2938, column: 18, scope: !7118)
!7120 = !DILocation(line: 2938, column: 15, scope: !7118)
!7121 = !DILocation(line: 2938, column: 23, scope: !7118)
!7122 = !DILocation(line: 2938, column: 26, scope: !7123)
!7123 = !DILexicalBlockFile(scope: !7118, file: !175, discriminator: 1)
!7124 = !DILocation(line: 2938, column: 36, scope: !7123)
!7125 = !DILocation(line: 2938, column: 11, scope: !7123)
!7126 = !DILocation(line: 2939, column: 10, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7118, file: !175, line: 2938, column: 42)
!7128 = !DILocation(line: 2947, column: 34, scope: !7002)
!7129 = !DILocation(line: 2947, column: 37, scope: !7002)
!7130 = !DILocation(line: 2947, column: 43, scope: !7002)
!7131 = !DILocation(line: 2947, column: 50, scope: !7002)
!7132 = !DILocation(line: 2947, column: 48, scope: !7002)
!7133 = !DILocation(line: 2947, column: 15, scope: !7002)
!7134 = !DILocation(line: 2947, column: 13, scope: !7002)
!7135 = !DILocation(line: 2948, column: 11, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7002, file: !175, line: 2948, column: 11)
!7137 = !DILocation(line: 2948, column: 17, scope: !7136)
!7138 = !DILocation(line: 2948, column: 11, scope: !7002)
!7139 = !DILocation(line: 2949, column: 17, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7136, file: !175, line: 2948, column: 23)
!7141 = !DILocation(line: 2949, column: 10, scope: !7140)
!7142 = !DILocation(line: 2952, column: 4, scope: !7002)
!7143 = !DILocation(line: 2952, column: 4, scope: !7144)
!7144 = !DILexicalBlockFile(scope: !7002, file: !175, discriminator: 1)
!7145 = !DILocation(line: 2953, column: 1, scope: !6922)
!7146 = distinct !DISubprogram(name: "AsyncTCPSocketAddListenCb", scope: !175, file: !175, line: 4263, type: !2029, isLocal: true, isDefinition: true, scopeLine: 4264, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!7147 = !DILocalVariable(name: "asock", arg: 1, scope: !7146, file: !175, line: 4263, type: !173)
!7148 = !DILocation(line: 4263, column: 43, scope: !7146)
!7149 = !DILocalVariable(name: "pollStatus", scope: !7146, file: !175, line: 4265, type: !1402)
!7150 = !DILocation(line: 4265, column: 17, scope: !7146)
!7151 = !DILocation(line: 4269, column: 39, scope: !7146)
!7152 = !DILocation(line: 4269, column: 17, scope: !7146)
!7153 = !DILocation(line: 4269, column: 15, scope: !7146)
!7154 = !DILocation(line: 4273, column: 8, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7146, file: !175, line: 4273, column: 8)
!7156 = !DILocation(line: 4273, column: 19, scope: !7155)
!7157 = !DILocation(line: 4273, column: 8, scope: !7146)
!7158 = !DILocation(line: 4274, column: 7, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7155, file: !175, line: 4273, column: 45)
!7160 = distinct !{!7160, !7158}
!7161 = !DILocation(line: 4274, column: 71, scope: !7162)
!7162 = !DILexicalBlockFile(scope: !7163, file: !175, discriminator: 1)
!7163 = distinct !DILexicalBlock(scope: !7159, file: !175, line: 4274, column: 10)
!7164 = !DILocation(line: 4274, column: 60, scope: !7162)
!7165 = !DILocation(line: 4274, column: 42, scope: !7166)
!7166 = !DILexicalBlockFile(scope: !7162, file: !175, discriminator: 2)
!7167 = !DILocation(line: 4274, column: 109, scope: !7162)
!7168 = !DILocation(line: 4274, column: 98, scope: !7169)
!7169 = !DILexicalBlockFile(scope: !7162, file: !175, discriminator: 3)
!7170 = !DILocation(line: 4274, column: 80, scope: !7171)
!7171 = !DILexicalBlockFile(scope: !7162, file: !175, discriminator: 4)
!7172 = !DILocation(line: 4274, column: 12, scope: !7173)
!7173 = !DILexicalBlockFile(scope: !7162, file: !175, discriminator: 5)
!7174 = !DILocation(line: 4274, column: 119, scope: !7175)
!7175 = !DILexicalBlockFile(scope: !7162, file: !175, discriminator: 6)
!7176 = !DILocation(line: 4274, column: 176, scope: !7162)
!7177 = !DILocation(line: 4275, column: 4, scope: !7159)
!7178 = !DILocation(line: 4277, column: 11, scope: !7146)
!7179 = !DILocation(line: 4277, column: 22, scope: !7146)
!7180 = !DILocation(line: 4277, column: 4, scope: !7146)
!7181 = distinct !DISubprogram(name: "AsyncTCPSocketPollWork", scope: !175, file: !175, line: 2500, type: !7182, isLocal: true, isDefinition: true, scopeLine: 2507, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!7182 = !DISubroutineType(types: !7183)
!7183 = !{!165, !172, !165, !80, !168, !165, !173, !172}
!7184 = !DILocalVariable(name: "asock", arg: 1, scope: !7181, file: !175, line: 2500, type: !172)
!7185 = !DILocation(line: 2500, column: 41, scope: !7181)
!7186 = !DILocalVariable(name: "numSock", arg: 2, scope: !7181, file: !175, line: 2501, type: !165)
!7187 = !DILocation(line: 2501, column: 28, scope: !7181)
!7188 = !DILocalVariable(name: "p", arg: 3, scope: !7181, file: !175, line: 2502, type: !80)
!7189 = !DILocation(line: 2502, column: 30, scope: !7181)
!7190 = !DILocalVariable(name: "read", arg: 4, scope: !7181, file: !175, line: 2503, type: !168)
!7191 = !DILocation(line: 2503, column: 29, scope: !7181)
!7192 = !DILocalVariable(name: "timeoutMS", arg: 5, scope: !7181, file: !175, line: 2504, type: !165)
!7193 = !DILocation(line: 2504, column: 28, scope: !7181)
!7194 = !DILocalVariable(name: "parentSock", arg: 6, scope: !7181, file: !175, line: 2505, type: !173)
!7195 = !DILocation(line: 2505, column: 40, scope: !7181)
!7196 = !DILocalVariable(name: "outAsock", arg: 7, scope: !7181, file: !175, line: 2506, type: !172)
!7197 = !DILocation(line: 2506, column: 41, scope: !7181)
!7198 = !DILocalVariable(name: "warnSock", scope: !7181, file: !175, line: 2508, type: !173)
!7199 = !DILocation(line: 2508, column: 20, scope: !7181)
!7200 = !DILocation(line: 2508, column: 31, scope: !7181)
!7201 = !DILocation(line: 2508, column: 44, scope: !7202)
!7202 = !DILexicalBlockFile(scope: !7181, file: !175, discriminator: 1)
!7203 = !DILocation(line: 2508, column: 31, scope: !7202)
!7204 = !DILocation(line: 2508, column: 57, scope: !7205)
!7205 = !DILexicalBlockFile(scope: !7181, file: !175, discriminator: 2)
!7206 = !DILocation(line: 2508, column: 31, scope: !7205)
!7207 = !DILocation(line: 2508, column: 31, scope: !7208)
!7208 = !DILexicalBlockFile(scope: !7181, file: !175, discriminator: 3)
!7209 = !DILocation(line: 2508, column: 20, scope: !7208)
!7210 = !DILocalVariable(name: "pfd", scope: !7181, file: !175, line: 2510, type: !450)
!7211 = !DILocation(line: 2510, column: 19, scope: !7181)
!7212 = !DILocation(line: 2510, column: 42, scope: !7181)
!7213 = !DILocation(line: 2510, column: 25, scope: !7181)
!7214 = !DILocalVariable(name: "i", scope: !7181, file: !175, line: 2521, type: !165)
!7215 = !DILocation(line: 2521, column: 8, scope: !7181)
!7216 = !DILocalVariable(name: "retval", scope: !7181, file: !175, line: 2522, type: !165)
!7217 = !DILocation(line: 2522, column: 8, scope: !7181)
!7218 = !DILocation(line: 2527, column: 11, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7181, file: !175, line: 2527, column: 4)
!7220 = !DILocation(line: 2527, column: 9, scope: !7219)
!7221 = !DILocation(line: 2527, column: 16, scope: !7222)
!7222 = !DILexicalBlockFile(scope: !7223, file: !175, discriminator: 1)
!7223 = distinct !DILexicalBlock(scope: !7219, file: !175, line: 2527, column: 4)
!7224 = !DILocation(line: 2527, column: 20, scope: !7222)
!7225 = !DILocation(line: 2527, column: 18, scope: !7222)
!7226 = !DILocation(line: 2527, column: 4, scope: !7222)
!7227 = !DILocation(line: 2528, column: 11, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !175, line: 2528, column: 11)
!7229 = distinct !DILexicalBlock(scope: !7223, file: !175, line: 2527, column: 34)
!7230 = !DILocation(line: 2528, column: 16, scope: !7228)
!7231 = !DILocation(line: 2528, column: 37, scope: !7232)
!7232 = !DILexicalBlockFile(scope: !7228, file: !175, discriminator: 1)
!7233 = !DILocation(line: 2528, column: 31, scope: !7232)
!7234 = !DILocation(line: 2528, column: 41, scope: !7232)
!7235 = !DILocation(line: 2528, column: 19, scope: !7232)
!7236 = !DILocation(line: 2528, column: 11, scope: !7232)
!7237 = !DILocation(line: 2529, column: 28, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7228, file: !175, line: 2528, column: 51)
!7239 = !DILocation(line: 2529, column: 22, scope: !7238)
!7240 = !DILocation(line: 2529, column: 11, scope: !7238)
!7241 = !DILocation(line: 2529, column: 20, scope: !7238)
!7242 = !DILocation(line: 2530, column: 10, scope: !7238)
!7243 = !DILocation(line: 2532, column: 4, scope: !7229)
!7244 = !DILocation(line: 2527, column: 30, scope: !7245)
!7245 = !DILexicalBlockFile(scope: !7223, file: !175, discriminator: 2)
!7246 = !DILocation(line: 2527, column: 4, scope: !7245)
!7247 = distinct !{!7247, !7248}
!7248 = !DILocation(line: 2527, column: 4, scope: !7181)
!7249 = !DILocation(line: 2534, column: 4, scope: !7181)
!7250 = !DILocation(line: 2536, column: 14, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !175, line: 2536, column: 7)
!7252 = distinct !DILexicalBlock(scope: !7181, file: !175, line: 2534, column: 14)
!7253 = !DILocation(line: 2536, column: 12, scope: !7251)
!7254 = !DILocation(line: 2536, column: 19, scope: !7255)
!7255 = !DILexicalBlockFile(scope: !7256, file: !175, discriminator: 1)
!7256 = distinct !DILexicalBlock(scope: !7251, file: !175, line: 2536, column: 7)
!7257 = !DILocation(line: 2536, column: 23, scope: !7255)
!7258 = !DILocation(line: 2536, column: 21, scope: !7255)
!7259 = !DILocation(line: 2536, column: 7, scope: !7255)
!7260 = !DILocation(line: 2537, column: 28, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7256, file: !175, line: 2536, column: 37)
!7262 = !DILocation(line: 2537, column: 22, scope: !7261)
!7263 = !DILocation(line: 2537, column: 32, scope: !7261)
!7264 = !DILocation(line: 2537, column: 14, scope: !7261)
!7265 = !DILocation(line: 2537, column: 10, scope: !7261)
!7266 = !DILocation(line: 2537, column: 17, scope: !7261)
!7267 = !DILocation(line: 2537, column: 20, scope: !7261)
!7268 = !DILocation(line: 2538, column: 26, scope: !7261)
!7269 = !DILocation(line: 2538, column: 14, scope: !7261)
!7270 = !DILocation(line: 2538, column: 10, scope: !7261)
!7271 = !DILocation(line: 2538, column: 17, scope: !7261)
!7272 = !DILocation(line: 2538, column: 24, scope: !7261)
!7273 = !DILocation(line: 2539, column: 7, scope: !7261)
!7274 = !DILocation(line: 2536, column: 33, scope: !7275)
!7275 = !DILexicalBlockFile(scope: !7256, file: !175, discriminator: 2)
!7276 = !DILocation(line: 2536, column: 7, scope: !7275)
!7277 = distinct !{!7277, !7278}
!7278 = !DILocation(line: 2536, column: 7, scope: !7252)
!7279 = !DILocation(line: 2541, column: 11, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7252, file: !175, line: 2541, column: 11)
!7281 = !DILocation(line: 2541, column: 22, scope: !7280)
!7282 = !DILocation(line: 2541, column: 11, scope: !7252)
!7283 = !DILocation(line: 2542, column: 31, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7280, file: !175, line: 2541, column: 30)
!7285 = !DILocation(line: 2542, column: 10, scope: !7284)
!7286 = !DILocation(line: 2543, column: 24, scope: !7284)
!7287 = !DILocation(line: 2543, column: 29, scope: !7284)
!7288 = !DILocation(line: 2543, column: 38, scope: !7284)
!7289 = !DILocation(line: 2543, column: 19, scope: !7284)
!7290 = !DILocation(line: 2543, column: 17, scope: !7284)
!7291 = !DILocation(line: 2544, column: 29, scope: !7284)
!7292 = !DILocation(line: 2544, column: 10, scope: !7284)
!7293 = !DILocation(line: 2545, column: 7, scope: !7284)
!7294 = !DILocation(line: 2546, column: 19, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7296, file: !175, line: 2546, column: 10)
!7296 = distinct !DILexicalBlock(scope: !7280, file: !175, line: 2545, column: 14)
!7297 = !DILocation(line: 2546, column: 27, scope: !7295)
!7298 = !DILocation(line: 2546, column: 17, scope: !7295)
!7299 = !DILocation(line: 2546, column: 15, scope: !7295)
!7300 = !DILocation(line: 2546, column: 32, scope: !7301)
!7301 = !DILexicalBlockFile(scope: !7302, file: !175, discriminator: 1)
!7302 = distinct !DILexicalBlock(scope: !7295, file: !175, line: 2546, column: 10)
!7303 = !DILocation(line: 2546, column: 34, scope: !7301)
!7304 = !DILocation(line: 2546, column: 10, scope: !7301)
!7305 = !DILocation(line: 2547, column: 40, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7302, file: !175, line: 2546, column: 45)
!7307 = !DILocation(line: 2547, column: 34, scope: !7306)
!7308 = !DILocation(line: 2547, column: 13, scope: !7306)
!7309 = !DILocation(line: 2548, column: 10, scope: !7306)
!7310 = !DILocation(line: 2546, column: 41, scope: !7311)
!7311 = !DILexicalBlockFile(scope: !7302, file: !175, discriminator: 2)
!7312 = !DILocation(line: 2546, column: 10, scope: !7311)
!7313 = distinct !{!7313, !7314}
!7314 = !DILocation(line: 2546, column: 10, scope: !7296)
!7315 = !DILocation(line: 2549, column: 24, scope: !7296)
!7316 = !DILocation(line: 2549, column: 29, scope: !7296)
!7317 = !DILocation(line: 2549, column: 38, scope: !7296)
!7318 = !DILocation(line: 2549, column: 19, scope: !7296)
!7319 = !DILocation(line: 2549, column: 17, scope: !7296)
!7320 = !DILocation(line: 2550, column: 17, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7296, file: !175, line: 2550, column: 10)
!7322 = !DILocation(line: 2550, column: 15, scope: !7321)
!7323 = !DILocation(line: 2550, column: 22, scope: !7324)
!7324 = !DILexicalBlockFile(scope: !7325, file: !175, discriminator: 1)
!7325 = distinct !DILexicalBlock(scope: !7321, file: !175, line: 2550, column: 10)
!7326 = !DILocation(line: 2550, column: 26, scope: !7324)
!7327 = !DILocation(line: 2550, column: 24, scope: !7324)
!7328 = !DILocation(line: 2550, column: 10, scope: !7324)
!7329 = !DILocation(line: 2551, column: 38, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7325, file: !175, line: 2550, column: 40)
!7331 = !DILocation(line: 2551, column: 32, scope: !7330)
!7332 = !DILocation(line: 2551, column: 13, scope: !7330)
!7333 = !DILocation(line: 2552, column: 10, scope: !7330)
!7334 = !DILocation(line: 2550, column: 36, scope: !7335)
!7335 = !DILexicalBlockFile(scope: !7325, file: !175, discriminator: 2)
!7336 = !DILocation(line: 2550, column: 10, scope: !7335)
!7337 = distinct !{!7337, !7338}
!7338 = !DILocation(line: 2550, column: 10, scope: !7296)
!7339 = !DILocation(line: 2583, column: 15, scope: !7252)
!7340 = !DILocation(line: 2583, column: 7, scope: !7252)
!7341 = !DILocation(line: 2588, column: 10, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7252, file: !175, line: 2583, column: 23)
!7343 = distinct !{!7343, !7341}
!7344 = !DILocation(line: 2588, column: 70, scope: !7345)
!7345 = !DILexicalBlockFile(scope: !7346, file: !175, discriminator: 1)
!7346 = distinct !DILexicalBlock(scope: !7342, file: !175, line: 2588, column: 13)
!7347 = !DILocation(line: 2588, column: 59, scope: !7345)
!7348 = !DILocation(line: 2588, column: 41, scope: !7349)
!7349 = !DILexicalBlockFile(scope: !7345, file: !175, discriminator: 2)
!7350 = !DILocation(line: 2588, column: 111, scope: !7345)
!7351 = !DILocation(line: 2588, column: 100, scope: !7352)
!7352 = !DILexicalBlockFile(scope: !7345, file: !175, discriminator: 3)
!7353 = !DILocation(line: 2588, column: 82, scope: !7354)
!7354 = !DILexicalBlockFile(scope: !7345, file: !175, discriminator: 4)
!7355 = !DILocation(line: 2588, column: 15, scope: !7356)
!7356 = !DILexicalBlockFile(scope: !7345, file: !175, discriminator: 5)
!7357 = !DILocation(line: 2588, column: 124, scope: !7358)
!7358 = !DILexicalBlockFile(scope: !7345, file: !175, discriminator: 6)
!7359 = !DILocation(line: 2588, column: 189, scope: !7345)
!7360 = !DILocation(line: 2590, column: 10, scope: !7342)
!7361 = !DILocalVariable(name: "sysErr", scope: !7362, file: !175, line: 2593, type: !165)
!7362 = distinct !DILexicalBlock(scope: !7342, file: !175, line: 2592, column: 16)
!7363 = !DILocation(line: 2593, column: 14, scope: !7362)
!7364 = !DILocation(line: 2593, column: 24, scope: !7362)
!7365 = !DILocation(line: 2593, column: 23, scope: !7362)
!7366 = !DILocation(line: 2595, column: 14, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7362, file: !175, line: 2595, column: 14)
!7368 = !DILocation(line: 2595, column: 21, scope: !7367)
!7369 = !DILocation(line: 2595, column: 14, scope: !7362)
!7370 = !DILocation(line: 2601, column: 13, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7367, file: !175, line: 2595, column: 30)
!7372 = distinct !{!7372, !7370}
!7373 = !DILocation(line: 2601, column: 73, scope: !7374)
!7374 = !DILexicalBlockFile(scope: !7375, file: !175, discriminator: 1)
!7375 = distinct !DILexicalBlock(scope: !7371, file: !175, line: 2601, column: 16)
!7376 = !DILocation(line: 2601, column: 62, scope: !7374)
!7377 = !DILocation(line: 2601, column: 44, scope: !7378)
!7378 = !DILexicalBlockFile(scope: !7374, file: !175, discriminator: 2)
!7379 = !DILocation(line: 2601, column: 114, scope: !7374)
!7380 = !DILocation(line: 2601, column: 103, scope: !7381)
!7381 = !DILexicalBlockFile(scope: !7374, file: !175, discriminator: 3)
!7382 = !DILocation(line: 2601, column: 85, scope: !7383)
!7383 = !DILexicalBlockFile(scope: !7374, file: !175, discriminator: 4)
!7384 = !DILocation(line: 2601, column: 18, scope: !7385)
!7385 = !DILexicalBlockFile(scope: !7374, file: !175, discriminator: 5)
!7386 = !DILocation(line: 2601, column: 127, scope: !7387)
!7387 = !DILexicalBlockFile(scope: !7374, file: !175, discriminator: 6)
!7388 = !DILocation(line: 2601, column: 188, scope: !7374)
!7389 = !DILocation(line: 2603, column: 13, scope: !7371)
!7390 = distinct !{!7390, !7249}
!7391 = !DILocation(line: 2606, column: 14, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7362, file: !175, line: 2606, column: 14)
!7393 = !DILocation(line: 2606, column: 25, scope: !7392)
!7394 = !DILocation(line: 2606, column: 14, scope: !7362)
!7395 = !DILocation(line: 2607, column: 40, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7392, file: !175, line: 2606, column: 33)
!7397 = !DILocation(line: 2607, column: 13, scope: !7396)
!7398 = !DILocation(line: 2607, column: 25, scope: !7396)
!7399 = !DILocation(line: 2607, column: 38, scope: !7396)
!7400 = !DILocation(line: 2608, column: 10, scope: !7396)
!7401 = !DILocation(line: 2609, column: 20, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !175, line: 2609, column: 13)
!7403 = distinct !DILexicalBlock(scope: !7392, file: !175, line: 2608, column: 17)
!7404 = !DILocation(line: 2609, column: 18, scope: !7402)
!7405 = !DILocation(line: 2609, column: 25, scope: !7406)
!7406 = !DILexicalBlockFile(scope: !7407, file: !175, discriminator: 1)
!7407 = distinct !DILexicalBlock(scope: !7402, file: !175, line: 2609, column: 13)
!7408 = !DILocation(line: 2609, column: 29, scope: !7406)
!7409 = !DILocation(line: 2609, column: 27, scope: !7406)
!7410 = !DILocation(line: 2609, column: 13, scope: !7406)
!7411 = !DILocation(line: 2610, column: 41, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7407, file: !175, line: 2609, column: 43)
!7413 = !DILocation(line: 2610, column: 22, scope: !7412)
!7414 = !DILocation(line: 2610, column: 16, scope: !7412)
!7415 = !DILocation(line: 2610, column: 26, scope: !7412)
!7416 = !DILocation(line: 2610, column: 39, scope: !7412)
!7417 = !DILocation(line: 2611, column: 13, scope: !7412)
!7418 = !DILocation(line: 2609, column: 39, scope: !7419)
!7419 = !DILexicalBlockFile(scope: !7407, file: !175, discriminator: 2)
!7420 = !DILocation(line: 2609, column: 13, scope: !7419)
!7421 = distinct !{!7421, !7422}
!7422 = !DILocation(line: 2609, column: 13, scope: !7403)
!7423 = !DILocation(line: 2614, column: 10, scope: !7362)
!7424 = distinct !{!7424, !7423}
!7425 = !DILocation(line: 2614, column: 70, scope: !7426)
!7426 = !DILexicalBlockFile(scope: !7427, file: !175, discriminator: 1)
!7427 = distinct !DILexicalBlock(scope: !7362, file: !175, line: 2614, column: 13)
!7428 = !DILocation(line: 2614, column: 59, scope: !7426)
!7429 = !DILocation(line: 2614, column: 41, scope: !7430)
!7430 = !DILexicalBlockFile(scope: !7426, file: !175, discriminator: 2)
!7431 = !DILocation(line: 2614, column: 111, scope: !7426)
!7432 = !DILocation(line: 2614, column: 100, scope: !7433)
!7433 = !DILexicalBlockFile(scope: !7426, file: !175, discriminator: 3)
!7434 = !DILocation(line: 2614, column: 82, scope: !7435)
!7435 = !DILexicalBlockFile(scope: !7426, file: !175, discriminator: 4)
!7436 = !DILocation(line: 2614, column: 15, scope: !7437)
!7437 = !DILexicalBlockFile(scope: !7426, file: !175, discriminator: 5)
!7438 = !DILocation(line: 2614, column: 177, scope: !7426)
!7439 = !DILocation(line: 2614, column: 202, scope: !7426)
!7440 = !DILocation(line: 2614, column: 185, scope: !7441)
!7441 = !DILexicalBlockFile(scope: !7426, file: !175, discriminator: 6)
!7442 = !DILocation(line: 2614, column: 124, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !7426, file: !175, discriminator: 7)
!7444 = !DILocation(line: 2614, column: 212, scope: !7426)
!7445 = !DILocation(line: 2616, column: 10, scope: !7362)
!7446 = !DILocalVariable(name: "failed", scope: !7447, file: !175, line: 2619, type: !168)
!7447 = distinct !DILexicalBlock(scope: !7342, file: !175, line: 2618, column: 16)
!7448 = !DILocation(line: 2619, column: 15, scope: !7447)
!7449 = !DILocation(line: 2622, column: 17, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7447, file: !175, line: 2622, column: 10)
!7451 = !DILocation(line: 2622, column: 15, scope: !7450)
!7452 = !DILocation(line: 2622, column: 22, scope: !7453)
!7453 = !DILexicalBlockFile(scope: !7454, file: !175, discriminator: 1)
!7454 = distinct !DILexicalBlock(scope: !7450, file: !175, line: 2622, column: 10)
!7455 = !DILocation(line: 2622, column: 26, scope: !7453)
!7456 = !DILocation(line: 2622, column: 24, scope: !7453)
!7457 = !DILocation(line: 2622, column: 10, scope: !7453)
!7458 = !DILocation(line: 2623, column: 21, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7460, file: !175, line: 2623, column: 17)
!7460 = distinct !DILexicalBlock(scope: !7454, file: !175, line: 2622, column: 40)
!7461 = !DILocation(line: 2623, column: 17, scope: !7459)
!7462 = !DILocation(line: 2623, column: 24, scope: !7459)
!7463 = !DILocation(line: 2623, column: 32, scope: !7459)
!7464 = !DILocation(line: 2623, column: 17, scope: !7460)
!7465 = !DILocation(line: 2624, column: 23, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7459, file: !175, line: 2623, column: 55)
!7467 = !DILocation(line: 2625, column: 13, scope: !7466)
!7468 = !DILocation(line: 2626, column: 10, scope: !7460)
!7469 = !DILocation(line: 2622, column: 36, scope: !7470)
!7470 = !DILexicalBlockFile(scope: !7454, file: !175, discriminator: 2)
!7471 = !DILocation(line: 2622, column: 10, scope: !7470)
!7472 = distinct !{!7472, !7473}
!7473 = !DILocation(line: 2622, column: 10, scope: !7447)
!7474 = !DILocation(line: 2635, column: 14, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7447, file: !175, line: 2635, column: 14)
!7476 = !DILocation(line: 2635, column: 14, scope: !7447)
!7477 = !DILocalVariable(name: "sockErr", scope: !7478, file: !175, line: 2636, type: !165)
!7478 = distinct !DILexicalBlock(scope: !7475, file: !175, line: 2635, column: 22)
!7479 = !DILocation(line: 2636, column: 17, scope: !7478)
!7480 = !DILocalVariable(name: "sysErr", scope: !7478, file: !175, line: 2637, type: !165)
!7481 = !DILocation(line: 2637, column: 17, scope: !7478)
!7482 = !DILocalVariable(name: "sockErrLen", scope: !7478, file: !175, line: 2638, type: !165)
!7483 = !DILocation(line: 2638, column: 17, scope: !7478)
!7484 = !DILocation(line: 2640, column: 20, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7478, file: !175, line: 2640, column: 13)
!7486 = !DILocation(line: 2640, column: 18, scope: !7485)
!7487 = !DILocation(line: 2640, column: 25, scope: !7488)
!7488 = !DILexicalBlockFile(scope: !7489, file: !175, discriminator: 1)
!7489 = distinct !DILexicalBlock(scope: !7485, file: !175, line: 2640, column: 13)
!7490 = !DILocation(line: 2640, column: 29, scope: !7488)
!7491 = !DILocation(line: 2640, column: 27, scope: !7488)
!7492 = !DILocation(line: 2640, column: 13, scope: !7488)
!7493 = !DILocation(line: 2641, column: 37, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7495, file: !175, line: 2641, column: 20)
!7495 = distinct !DILexicalBlock(scope: !7489, file: !175, line: 2640, column: 43)
!7496 = !DILocation(line: 2641, column: 31, scope: !7494)
!7497 = !DILocation(line: 2641, column: 41, scope: !7494)
!7498 = !DILocation(line: 2642, column: 31, scope: !7494)
!7499 = !DILocation(line: 2642, column: 50, scope: !7494)
!7500 = !DILocation(line: 2641, column: 20, scope: !7494)
!7501 = !DILocation(line: 2642, column: 72, scope: !7494)
!7502 = !DILocation(line: 2641, column: 20, scope: !7495)
!7503 = !DILocation(line: 2643, column: 23, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7505, file: !175, line: 2643, column: 23)
!7505 = distinct !DILexicalBlock(scope: !7494, file: !175, line: 2642, column: 78)
!7506 = !DILocation(line: 2643, column: 23, scope: !7505)
!7507 = !DILocation(line: 2644, column: 47, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7504, file: !175, line: 2643, column: 32)
!7509 = !DILocation(line: 2644, column: 28, scope: !7508)
!7510 = !DILocation(line: 2644, column: 22, scope: !7508)
!7511 = !DILocation(line: 2644, column: 32, scope: !7508)
!7512 = !DILocation(line: 2644, column: 45, scope: !7508)
!7513 = !DILocation(line: 2645, column: 22, scope: !7508)
!7514 = distinct !{!7514, !7513}
!7515 = !DILocation(line: 2645, column: 88, scope: !7516)
!7516 = !DILexicalBlockFile(scope: !7517, file: !175, discriminator: 1)
!7517 = distinct !DILexicalBlock(scope: !7508, file: !175, line: 2645, column: 25)
!7518 = !DILocation(line: 2645, column: 82, scope: !7516)
!7519 = !DILocation(line: 2645, column: 71, scope: !7516)
!7520 = !DILocation(line: 2645, column: 53, scope: !7521)
!7521 = !DILexicalBlockFile(scope: !7516, file: !175, discriminator: 2)
!7522 = !DILocation(line: 2645, column: 129, scope: !7516)
!7523 = !DILocation(line: 2645, column: 123, scope: !7516)
!7524 = !DILocation(line: 2645, column: 112, scope: !7525)
!7525 = !DILexicalBlockFile(scope: !7516, file: !175, discriminator: 3)
!7526 = !DILocation(line: 2645, column: 94, scope: !7527)
!7527 = !DILexicalBlockFile(scope: !7516, file: !175, discriminator: 4)
!7528 = !DILocation(line: 2645, column: 27, scope: !7529)
!7529 = !DILexicalBlockFile(scope: !7516, file: !175, discriminator: 5)
!7530 = !DILocation(line: 2645, column: 200, scope: !7516)
!7531 = !DILocation(line: 2645, column: 226, scope: !7516)
!7532 = !DILocation(line: 2645, column: 209, scope: !7533)
!7533 = !DILexicalBlockFile(scope: !7516, file: !175, discriminator: 6)
!7534 = !DILocation(line: 2645, column: 136, scope: !7535)
!7535 = !DILexicalBlockFile(scope: !7516, file: !175, discriminator: 7)
!7536 = !DILocation(line: 2645, column: 237, scope: !7516)
!7537 = !DILocation(line: 2649, column: 19, scope: !7508)
!7538 = !DILocation(line: 2650, column: 16, scope: !7505)
!7539 = !DILocation(line: 2651, column: 29, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7494, file: !175, line: 2650, column: 23)
!7541 = !DILocation(line: 2651, column: 28, scope: !7540)
!7542 = !DILocation(line: 2651, column: 26, scope: !7540)
!7543 = !DILocation(line: 2652, column: 44, scope: !7540)
!7544 = !DILocation(line: 2652, column: 25, scope: !7540)
!7545 = !DILocation(line: 2652, column: 19, scope: !7540)
!7546 = !DILocation(line: 2652, column: 29, scope: !7540)
!7547 = !DILocation(line: 2652, column: 42, scope: !7540)
!7548 = !DILocation(line: 2653, column: 19, scope: !7540)
!7549 = distinct !{!7549, !7548}
!7550 = !DILocation(line: 2653, column: 85, scope: !7551)
!7551 = !DILexicalBlockFile(scope: !7552, file: !175, discriminator: 1)
!7552 = distinct !DILexicalBlock(scope: !7540, file: !175, line: 2653, column: 22)
!7553 = !DILocation(line: 2653, column: 79, scope: !7551)
!7554 = !DILocation(line: 2653, column: 68, scope: !7551)
!7555 = !DILocation(line: 2653, column: 50, scope: !7556)
!7556 = !DILexicalBlockFile(scope: !7551, file: !175, discriminator: 2)
!7557 = !DILocation(line: 2653, column: 126, scope: !7551)
!7558 = !DILocation(line: 2653, column: 120, scope: !7551)
!7559 = !DILocation(line: 2653, column: 109, scope: !7560)
!7560 = !DILexicalBlockFile(scope: !7551, file: !175, discriminator: 3)
!7561 = !DILocation(line: 2653, column: 91, scope: !7562)
!7562 = !DILexicalBlockFile(scope: !7551, file: !175, discriminator: 4)
!7563 = !DILocation(line: 2653, column: 24, scope: !7564)
!7564 = !DILexicalBlockFile(scope: !7551, file: !175, discriminator: 5)
!7565 = !DILocation(line: 2653, column: 186, scope: !7551)
!7566 = !DILocation(line: 2653, column: 211, scope: !7551)
!7567 = !DILocation(line: 2653, column: 194, scope: !7568)
!7568 = !DILexicalBlockFile(scope: !7551, file: !175, discriminator: 6)
!7569 = !DILocation(line: 2653, column: 133, scope: !7570)
!7570 = !DILexicalBlockFile(scope: !7551, file: !175, discriminator: 7)
!7571 = !DILocation(line: 2653, column: 221, scope: !7551)
!7572 = !DILocation(line: 2657, column: 13, scope: !7495)
!7573 = !DILocation(line: 2640, column: 39, scope: !7574)
!7574 = !DILexicalBlockFile(scope: !7489, file: !175, discriminator: 2)
!7575 = !DILocation(line: 2640, column: 13, scope: !7574)
!7576 = distinct !{!7576, !7577}
!7577 = !DILocation(line: 2640, column: 13, scope: !7478)
!7578 = !DILocation(line: 2659, column: 13, scope: !7478)
!7579 = !DILocation(line: 2668, column: 17, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7447, file: !175, line: 2668, column: 10)
!7581 = !DILocation(line: 2668, column: 15, scope: !7580)
!7582 = !DILocation(line: 2668, column: 22, scope: !7583)
!7583 = !DILexicalBlockFile(scope: !7584, file: !175, discriminator: 1)
!7584 = distinct !DILexicalBlock(scope: !7580, file: !175, line: 2668, column: 10)
!7585 = !DILocation(line: 2668, column: 26, scope: !7583)
!7586 = !DILocation(line: 2668, column: 24, scope: !7583)
!7587 = !DILocation(line: 2668, column: 10, scope: !7583)
!7588 = !DILocation(line: 2669, column: 21, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !175, line: 2669, column: 17)
!7590 = distinct !DILexicalBlock(scope: !7584, file: !175, line: 2668, column: 40)
!7591 = !DILocation(line: 2669, column: 17, scope: !7589)
!7592 = !DILocation(line: 2669, column: 24, scope: !7589)
!7593 = !DILocation(line: 2669, column: 35, scope: !7589)
!7594 = !DILocation(line: 2669, column: 32, scope: !7589)
!7595 = !DILocation(line: 2669, column: 17, scope: !7590)
!7596 = !DILocation(line: 2670, column: 34, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7589, file: !175, line: 2669, column: 60)
!7598 = !DILocation(line: 2670, column: 28, scope: !7597)
!7599 = !DILocation(line: 2670, column: 17, scope: !7597)
!7600 = !DILocation(line: 2670, column: 26, scope: !7597)
!7601 = !DILocation(line: 2671, column: 16, scope: !7597)
!7602 = !DILocation(line: 2673, column: 10, scope: !7590)
!7603 = !DILocation(line: 2668, column: 36, scope: !7604)
!7604 = !DILexicalBlockFile(scope: !7584, file: !175, discriminator: 2)
!7605 = !DILocation(line: 2668, column: 10, scope: !7604)
!7606 = distinct !{!7606, !7607}
!7607 = !DILocation(line: 2668, column: 10, scope: !7447)
!7608 = !DILocation(line: 2683, column: 10, scope: !7447)
!7609 = distinct !{!7609, !7608}
!7610 = !DILocation(line: 2683, column: 74, scope: !7611)
!7611 = !DILexicalBlockFile(scope: !7612, file: !175, discriminator: 1)
!7612 = distinct !DILexicalBlock(scope: !7447, file: !175, line: 2683, column: 13)
!7613 = !DILocation(line: 2683, column: 63, scope: !7611)
!7614 = !DILocation(line: 2683, column: 45, scope: !7615)
!7615 = !DILexicalBlockFile(scope: !7611, file: !175, discriminator: 2)
!7616 = !DILocation(line: 2683, column: 115, scope: !7611)
!7617 = !DILocation(line: 2683, column: 104, scope: !7618)
!7618 = !DILexicalBlockFile(scope: !7611, file: !175, discriminator: 3)
!7619 = !DILocation(line: 2683, column: 86, scope: !7620)
!7620 = !DILexicalBlockFile(scope: !7611, file: !175, discriminator: 4)
!7621 = !DILocation(line: 2683, column: 15, scope: !7622)
!7622 = !DILexicalBlockFile(scope: !7611, file: !175, discriminator: 5)
!7623 = !DILocation(line: 2683, column: 128, scope: !7624)
!7624 = !DILexicalBlockFile(scope: !7611, file: !175, discriminator: 6)
!7625 = !DILocation(line: 2683, column: 194, scope: !7611)
!7626 = !DILocation(line: 2685, column: 10, scope: !7447)
!7627 = !DILocation(line: 2689, column: 1, scope: !7181)
!7628 = distinct !DISubprogram(name: "AsyncTCPSocketMakeNonBlocking", scope: !175, file: !175, line: 4715, type: !7629, isLocal: true, isDefinition: true, scopeLine: 4716, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{!165, !165}
!7631 = !DILocalVariable(name: "fd", arg: 1, scope: !7628, file: !175, line: 4715, type: !165)
!7632 = !DILocation(line: 4715, column: 35, scope: !7628)
!7633 = !DILocalVariable(name: "flags", scope: !7628, file: !175, line: 4734, type: !165)
!7634 = !DILocation(line: 4734, column: 8, scope: !7628)
!7635 = !DILocation(line: 4736, column: 23, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7628, file: !175, line: 4736, column: 8)
!7637 = !DILocation(line: 4736, column: 17, scope: !7636)
!7638 = !DILocation(line: 4736, column: 15, scope: !7636)
!7639 = !DILocation(line: 4736, column: 36, scope: !7636)
!7640 = !DILocation(line: 4736, column: 8, scope: !7628)
!7641 = !DILocation(line: 4737, column: 7, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7636, file: !175, line: 4736, column: 41)
!7643 = !DILocation(line: 4740, column: 10, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7628, file: !175, line: 4740, column: 8)
!7645 = !DILocation(line: 4740, column: 16, scope: !7644)
!7646 = !DILocation(line: 4740, column: 29, scope: !7644)
!7647 = !DILocation(line: 4740, column: 39, scope: !7648)
!7648 = !DILexicalBlockFile(scope: !7644, file: !175, discriminator: 1)
!7649 = !DILocation(line: 4740, column: 52, scope: !7648)
!7650 = !DILocation(line: 4740, column: 58, scope: !7648)
!7651 = !DILocation(line: 4740, column: 33, scope: !7648)
!7652 = !DILocation(line: 4740, column: 72, scope: !7648)
!7653 = !DILocation(line: 4740, column: 8, scope: !7648)
!7654 = !DILocation(line: 4742, column: 7, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7644, file: !175, line: 4741, column: 4)
!7656 = !DILocation(line: 4746, column: 4, scope: !7628)
!7657 = !DILocation(line: 4747, column: 1, scope: !7628)
!7658 = distinct !DISubprogram(name: "mssb32_0", scope: !2065, file: !2065, line: 256, type: !7659, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!7659 = !DISubroutineType(types: !7660)
!7660 = !{!165, !81}
!7661 = !DILocalVariable(name: "value", arg: 1, scope: !7658, file: !2065, line: 256, type: !81)
!7662 = !DILocation(line: 256, column: 17, scope: !7658)
!7663 = !DILocation(line: 263, column: 26, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7658, file: !2065, line: 263, column: 8)
!7665 = !DILocation(line: 263, column: 32, scope: !7664)
!7666 = !DILocation(line: 263, column: 25, scope: !7664)
!7667 = !DILocation(line: 263, column: 8, scope: !7664)
!7668 = !DILocation(line: 263, column: 8, scope: !7658)
!7669 = !DILocation(line: 264, column: 7, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7664, file: !2065, line: 263, column: 43)
!7671 = !DILocalVariable(name: "pos", scope: !7672, file: !2065, line: 266, type: !165)
!7672 = distinct !DILexicalBlock(scope: !7664, file: !2065, line: 265, column: 11)
!7673 = !DILocation(line: 266, column: 11, scope: !7672)
!7674 = !DILocation(line: 269, column: 56, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7676, file: !2065, line: 268, column: 41)
!7676 = distinct !DILexicalBlock(scope: !7672, file: !2065, line: 268, column: 11)
!7677 = !DILocation(line: 269, column: 10, scope: !7675)
!7678 = !{i32 613608}
!7679 = !DILocation(line: 270, column: 17, scope: !7675)
!7680 = !DILocation(line: 270, column: 10, scope: !7675)
!7681 = !DILocation(line: 276, column: 1, scope: !7658)
!7682 = distinct !DISubprogram(name: "AsyncTCPSocketHasDataPending", scope: !175, file: !175, line: 4692, type: !2029, isLocal: true, isDefinition: true, scopeLine: 4693, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !463)
!7683 = !DILocalVariable(name: "asock", arg: 1, scope: !7682, file: !175, line: 4692, type: !173)
!7684 = !DILocation(line: 4692, column: 46, scope: !7682)
!7685 = !DILocation(line: 4694, column: 23, scope: !7682)
!7686 = !DILocation(line: 4694, column: 30, scope: !7682)
!7687 = !DILocation(line: 4694, column: 11, scope: !7682)
!7688 = !DILocation(line: 4694, column: 4, scope: !7682)
